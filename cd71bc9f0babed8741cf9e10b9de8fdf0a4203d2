{
  "comments": [
    {
      "key": {
        "uuid": "b2d6ce80_3ecb8161",
        "filename": "src/libGLESv2/DynamicHLSL.cpp",
        "patchSetId": 1
      },
      "lineNbr": 325,
      "author": {
        "id": 1105219
      },
      "writtenOn": "2014-02-07T23:03:10Z",
      "side": 1,
      "message": "Is this handled by another patch somewhere?",
      "revId": "cd71bc9f0babed8741cf9e10b9de8fdf0a4203d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8f71a1c9_dfed332f",
        "filename": "src/libGLESv2/DynamicHLSL.cpp",
        "patchSetId": 1
      },
      "lineNbr": 325,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2014-02-10T22:06:26Z",
      "side": 1,
      "message": "Did you ever discover a conclusive spec reading on mismatched vertex attribute to vertex shader input data types? If unspecified, we could let the user do an implied reinterpret_cast, if that makes D3D11 happy. I\u0027ve changed the comments to reflect this.",
      "parentUuid": "b2d6ce80_3ecb8161",
      "revId": "cd71bc9f0babed8741cf9e10b9de8fdf0a4203d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6fb46db0_ab7115b3",
        "filename": "src/libGLESv2/DynamicHLSL.cpp",
        "patchSetId": 1
      },
      "lineNbr": 325,
      "author": {
        "id": 1105219
      },
      "writtenOn": "2014-02-11T22:10:49Z",
      "side": 1,
      "message": "This should be covered by:\n\n\"When values for a vertex shader attribute variable are sourced from an enabled generic vertex attribute array, the array must be specified by a command compatible with the data type of the variable. The values loaded into a shader attribute variable bound to generic attribute [index] are undefined if the array for [index] was not specified by: \n  * VertexAttribPointer, for floating-point base type attributes\n  * VertexAttribIPointer with [type] BYTE, SHORT, or INT for signed integer base type attributes; or\n  * VertexAttribIPointer with [type] UNSIGNED_BYTE, UNSIGNED_SHORT, or UNSIGNED_INT for unsigned integer base type attributes.\" (ES 3.0.2 spec, sec 2.8 Vertex Arrays, pg 25)\n\nSo it\u0027s undefined and we\u0027re at liberty to do whatever makes D3D11 happy. (Unless I\u0027ve misunderstood what situation we\u0027re talking about. The default vertex attrib values are also specified to be undefined if the base type specified in the shader and the type used to define them in the API do not match.)",
      "parentUuid": "8f71a1c9_dfed332f",
      "revId": "cd71bc9f0babed8741cf9e10b9de8fdf0a4203d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b2d6ce80_1ec83d61",
        "filename": "src/libGLESv2/DynamicHLSL.cpp",
        "patchSetId": 1
      },
      "lineNbr": 326,
      "author": {
        "id": 1105219
      },
      "writtenOn": "2014-02-07T23:03:10Z",
      "side": 1,
      "message": "Can this be !\u003d 0 instead?",
      "revId": "cd71bc9f0babed8741cf9e10b9de8fdf0a4203d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cf9d5927_41b4f6fd",
        "filename": "src/libGLESv2/DynamicHLSL.cpp",
        "patchSetId": 1
      },
      "lineNbr": 326,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2014-02-10T22:06:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b2d6ce80_1ec83d61",
      "revId": "cd71bc9f0babed8741cf9e10b9de8fdf0a4203d2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}