{
  "comments": [
    {
      "key": {
        "uuid": "a697b2b4_a9d7d91b",
        "filename": "src/compiler/translator/OutputHLSL.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2227,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2018-11-23T14:49:20Z",
      "side": 1,
      "message": "nit: inout",
      "range": {
        "startLine": 2227,
        "startChar": 62,
        "endLine": 2227,
        "endChar": 68
      },
      "revId": "23e4ce66aac78de2540fc9b48f050052393f7165",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc0514d3_7ef98cfb",
        "filename": "src/compiler/translator/OutputHLSL.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2227,
      "author": {
        "id": 1165541
      },
      "writtenOn": "2018-11-26T09:56:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a697b2b4_a9d7d91b",
      "range": {
        "startLine": 2227,
        "startChar": 62,
        "endLine": 2227,
        "endChar": 68
      },
      "revId": "23e4ce66aac78de2540fc9b48f050052393f7165",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "48c22505_21b5f1d6",
        "filename": "src/tests/gl_tests/ShaderStorageBufferTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1421,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2018-11-23T14:49:20Z",
      "side": 1,
      "message": "In GLSL, is it possible to pass structures that are in SSBO? Like this:\n\n  struct S {int a, b;};\n  layout(shared, binding \u003d 0) buffer Block {\n     S s;\n  }\n\n  my_function(s);",
      "revId": "23e4ce66aac78de2540fc9b48f050052393f7165",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "25badb85_84bfaa54",
        "filename": "src/tests/gl_tests/ShaderStorageBufferTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1421,
      "author": {
        "id": 1165541
      },
      "writtenOn": "2018-11-26T09:56:00Z",
      "side": 1,
      "message": "Yes, it\u0027s supported in GLSL. We need to add structure support and array assignment support for SSBO.",
      "parentUuid": "48c22505_21b5f1d6",
      "revId": "23e4ce66aac78de2540fc9b48f050052393f7165",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "46fadba3_8ffda64b",
        "filename": "src/tests/gl_tests/ShaderStorageBufferTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1421,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2018-11-26T10:51:53Z",
      "side": 1,
      "message": "Oh, this is going to be complicated: to support this usecase completely we\u0027ll have to turn these into \"fat pointers\" that are a combination of RWByteAddressBuffer and offset.",
      "parentUuid": "25badb85_84bfaa54",
      "revId": "23e4ce66aac78de2540fc9b48f050052393f7165",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2dc66f2b_9b0990b2",
        "filename": "src/tests/gl_tests/ShaderStorageBufferTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1421,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2018-11-26T11:57:15Z",
      "side": 1,
      "message": "Either that, or we need to make a copy of the structure in a local variable but that could be extremely expensive if the structure is large.",
      "parentUuid": "46fadba3_8ffda64b",
      "revId": "23e4ce66aac78de2540fc9b48f050052393f7165",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ea85c91b_564b16c7",
        "filename": "src/tests/gl_tests/ShaderStorageBufferTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1421,
      "author": {
        "id": 1165541
      },
      "writtenOn": "2018-11-27T09:10:53Z",
      "side": 1,
      "message": "What do you mean using a \u0027fat pointers\u0027? I think it\u0027s not workable for self-defined functions since it can take any structure from any where. We can\u0027t assume that it must come from the SSBO. I think your latter method is a general method. We need to process structure type in ShaderStorageBlockFunctionHLSL. In this way, it won\u0027t affect this patch\u0027s purpose to support ssbo as the argument of a function. We can implement structure in separate patch. How do you think?",
      "parentUuid": "2dc66f2b_9b0990b2",
      "revId": "23e4ce66aac78de2540fc9b48f050052393f7165",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "19f0cffa_7928e235",
        "filename": "src/tests/gl_tests/ShaderStorageBufferTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1421,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2018-11-27T12:57:12Z",
      "side": 1,
      "message": "We could imagine producing multiple copies of the functions in HLSL code if they are passed structures coming from SSBOs. It is very complex though, so we should probably go with . the . copy method first.\n\nThat said in the spirit of Method 1, we can use an AST pass to move the SSBO access out of the function call.",
      "parentUuid": "ea85c91b_564b16c7",
      "revId": "23e4ce66aac78de2540fc9b48f050052393f7165",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}