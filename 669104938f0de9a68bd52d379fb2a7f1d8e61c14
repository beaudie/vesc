{
  "comments": [
    {
      "key": {
        "uuid": "a3217246_94dda58d",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2219,
      "author": {
        "id": 1333595
      },
      "writtenOn": "2019-08-02T10:38:29Z",
      "side": 1,
      "message": "I guess I should first call getSamplerIndex(textureUnit) to get the index, and then pass to getUniformIndexFromSamplerIndex().\n\nBut in getSamplerIndex -\u003e getUniformIndexFromLocation, the location passed in is the sampler location, but seems what it wants is the uniform location, I think they are different.\nSo, any idea about how to get the uniform index from a sampler location? Thanks.",
      "revId": "669104938f0de9a68bd52d379fb2a7f1d8e61c14",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "22017ff0_0b855470",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2219,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-08-02T13:57:56Z",
      "side": 1,
      "message": "Could you please try to isolate the failure into a regression test? I\u0027m not sure I know what the bug is right now.",
      "parentUuid": "a3217246_94dda58d",
      "revId": "669104938f0de9a68bd52d379fb2a7f1d8e61c14",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "800074cd_ccd02e8d",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2219,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-08-02T13:59:38Z",
      "side": 1,
      "message": "Also you try using \"AllGraphicsShadersReadOnly\" instead of Fragment + AllGraphics. Then we wouldn\u0027t need to check the shader mask.",
      "parentUuid": "22017ff0_0b855470",
      "revId": "669104938f0de9a68bd52d379fb2a7f1d8e61c14",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2c761208_2ceb87f7",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2219,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-08-02T15:13:41Z",
      "side": 1,
      "message": "Yes, I have been thinking about it, and I think having AllGraphics as the only option is indeed better (despite what I\u0027ve been advocating previously). Imagine the following:\n\n- Draw: Texture 1 used in FS only\n- Draw: Texture 1 used in VS and FS\n- Draw: Texture 1 used in FS only\n\nThis would incur two barriers, and there\u0027s little we can do to improve the situation there (at least not until we store the layout transitions especially in the graph nodes so we can modify them).",
      "parentUuid": "800074cd_ccd02e8d",
      "revId": "669104938f0de9a68bd52d379fb2a7f1d8e61c14",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9203039e_65089d9d",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2219,
      "author": {
        "id": 1333595
      },
      "writtenOn": "2019-08-05T00:38:32Z",
      "side": 1,
      "message": "The root cause is I misused sampler index as uniform index, when trying to get the uniform info. This results in unnecessary dependencies in Angry Bird.\n\nI don\u0027t think we need a regression test here, as the root cause is quite clear: I should convert the sampler index to uniform index first, before getting the active mask.\n\nThe current patch set will cause a regression on end2end tests(SamplerLocation, f.ex).\nWhat I\u0027m asking is, I don\u0027t know how to convert sampler index to uniform index. I was thinking maybe it\u0027s straightforward for you.",
      "parentUuid": "2c761208_2ceb87f7",
      "revId": "669104938f0de9a68bd52d379fb2a7f1d8e61c14",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "60f037ca_0cd81422",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2219,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-08-05T12:23:02Z",
      "side": 1,
      "message": "Given what I and Shabi suggested already, I\u0027d recommend we remove the check here and use AllGraphicsShaderReadOnly for now.",
      "parentUuid": "9203039e_65089d9d",
      "revId": "669104938f0de9a68bd52d379fb2a7f1d8e61c14",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb516e1c_e8447a66",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2219,
      "author": {
        "id": 1333595
      },
      "writtenOn": "2019-08-06T00:07:16Z",
      "side": 1,
      "message": "But this will introduce unnecessary barriers.\nThe previous commit(which introduces unnecessary barriers because of incorrect implementation) causes read bandwidth doubled on Angry Bird.",
      "parentUuid": "60f037ca_0cd81422",
      "revId": "669104938f0de9a68bd52d379fb2a7f1d8e61c14",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}