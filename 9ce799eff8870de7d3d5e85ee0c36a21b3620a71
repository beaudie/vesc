{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "6be6fbf3_c1c36788",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1190898
      },
      "writtenOn": "2021-04-05T20:17:26Z",
      "side": 1,
      "message": "friendly ping",
      "revId": "9ce799eff8870de7d3d5e85ee0c36a21b3620a71",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "307903ff_6769f00e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-04-05T21:17:31Z",
      "side": 1,
      "message": "Canadian holiday Fri/Mon, will look Tuesday.",
      "parentUuid": "6be6fbf3_c1c36788",
      "revId": "9ce799eff8870de7d3d5e85ee0c36a21b3620a71",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "13f5d76d_5ce0eb7e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-04-06T13:52:00Z",
      "side": 1,
      "message": "A simple test of DestroyContext with a non-current context might be welcome.",
      "revId": "9ce799eff8870de7d3d5e85ee0c36a21b3620a71",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "965e47ff_ff2fc587",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1190898
      },
      "writtenOn": "2021-04-06T20:38:38Z",
      "side": 1,
      "message": "Will work on this - should I create a new test in angle_end2end_tests/egl_tests? Or do you have a suggestion on an existing test this could live in?",
      "parentUuid": "13f5d76d_5ce0eb7e",
      "revId": "9ce799eff8870de7d3d5e85ee0c36a21b3620a71",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "631e8e04_742e6038",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-04-06T21:14:22Z",
      "side": 1,
      "message": "EGLMultiContextTest.cpp seems fine.",
      "parentUuid": "965e47ff_ff2fc587",
      "revId": "9ce799eff8870de7d3d5e85ee0c36a21b3620a71",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ebc835b9_4a5216a0",
        "filename": "src/libANGLE/Display.cpp",
        "patchSetId": 5
      },
      "lineNbr": 1443,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-04-06T13:52:00Z",
      "side": 1,
      "message": "nit: omit this-\u003e outside of some template inheritance scenarios where it\u0027s required.",
      "range": {
        "startLine": 1443,
        "startChar": 10,
        "endLine": 1443,
        "endChar": 17
      },
      "revId": "9ce799eff8870de7d3d5e85ee0c36a21b3620a71",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "512795f4_b6fc83d0",
        "filename": "src/libANGLE/Display.cpp",
        "patchSetId": 5
      },
      "lineNbr": 1443,
      "author": {
        "id": 1190898
      },
      "writtenOn": "2021-04-06T20:38:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ebc835b9_4a5216a0",
      "range": {
        "startLine": 1443,
        "startChar": 10,
        "endLine": 1443,
        "endChar": 17
      },
      "revId": "9ce799eff8870de7d3d5e85ee0c36a21b3620a71",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4eb7cd5a_5a737deb",
        "filename": "src/libANGLE/Display.h",
        "patchSetId": 5
      },
      "lineNbr": 183,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-04-06T13:52:00Z",
      "side": 1,
      "message": "nit: generally avoid overloading in ANGLE to keep the code semantically simpler. good for code browsing tools, and makes it easier to understand when calling.",
      "range": {
        "startLine": 183,
        "startChar": 10,
        "endLine": 183,
        "endChar": 24
      },
      "revId": "9ce799eff8870de7d3d5e85ee0c36a21b3620a71",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dce8ec1f_d843b049",
        "filename": "src/libANGLE/Display.h",
        "patchSetId": 5
      },
      "lineNbr": 183,
      "author": {
        "id": 1190898
      },
      "writtenOn": "2021-04-06T20:38:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4eb7cd5a_5a737deb",
      "range": {
        "startLine": 183,
        "startChar": 10,
        "endLine": 183,
        "endChar": 24
      },
      "revId": "9ce799eff8870de7d3d5e85ee0c36a21b3620a71",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d8382ac9_aedec636",
        "filename": "src/libGLESv2/egl_stubs.cpp",
        "patchSetId": 5
      },
      "lineNbr": 285,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-04-06T13:52:00Z",
      "side": 1,
      "message": "nit: shouldMakeCurrent",
      "range": {
        "startLine": 285,
        "startChar": 9,
        "endLine": 285,
        "endChar": 28
      },
      "revId": "9ce799eff8870de7d3d5e85ee0c36a21b3620a71",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f0c89f0e_b69735d7",
        "filename": "src/libGLESv2/egl_stubs.cpp",
        "patchSetId": 5
      },
      "lineNbr": 285,
      "author": {
        "id": 1190898
      },
      "writtenOn": "2021-04-06T20:38:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d8382ac9_aedec636",
      "range": {
        "startLine": 285,
        "startChar": 9,
        "endLine": 285,
        "endChar": 28
      },
      "revId": "9ce799eff8870de7d3d5e85ee0c36a21b3620a71",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c2eba56f_1ff7da5e",
        "filename": "src/tests/gl_tests/MultithreadingTest.cpp",
        "patchSetId": 5
      },
      "lineNbr": 223,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-04-06T21:14:22Z",
      "side": 1,
      "message": "why skip on swiftshader?",
      "range": {
        "startLine": 223,
        "startChar": 4,
        "endLine": 223,
        "endChar": 40
      },
      "revId": "9ce799eff8870de7d3d5e85ee0c36a21b3620a71",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f247661_7967cfb7",
        "filename": "src/tests/gl_tests/MultithreadingTest.cpp",
        "patchSetId": 5
      },
      "lineNbr": 230,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-04-06T21:14:22Z",
      "side": 1,
      "message": "can you use a much smaller constant and still repro? I\u0027m worried that the test is timing out because of this large constant.",
      "range": {
        "startLine": 230,
        "startChar": 28,
        "endLine": 230,
        "endChar": 32
      },
      "revId": "9ce799eff8870de7d3d5e85ee0c36a21b3620a71",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "30ba7155_dff52757",
        "filename": "src/tests/gl_tests/MultithreadingTest.cpp",
        "patchSetId": 5
      },
      "lineNbr": 232,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-04-06T21:14:22Z",
      "side": 1,
      "message": "nit: please use explicit types for these",
      "range": {
        "startLine": 232,
        "startChar": 12,
        "endLine": 232,
        "endChar": 17
      },
      "revId": "9ce799eff8870de7d3d5e85ee0c36a21b3620a71",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b9ebebf4_d8e442d4",
        "filename": "src/tests/gl_tests/MultithreadingTest.cpp",
        "patchSetId": 5
      },
      "lineNbr": 776,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-04-06T13:52:00Z",
      "side": 1,
      "message": "this is a bit sensitive. I\u0027m going to run the manually-added tsan bot to this CL and see what it flushes out. Please wait until it\u0027s green before landing. If it flushes out unrelated bugs, can work on enabling this in another CL.",
      "range": {
        "startLine": 776,
        "startChar": 23,
        "endLine": 776,
        "endChar": 44
      },
      "revId": "9ce799eff8870de7d3d5e85ee0c36a21b3620a71",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "529bed1b_2a3d9f23",
        "filename": "src/tests/gl_tests/MultithreadingTest.cpp",
        "patchSetId": 5
      },
      "lineNbr": 776,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-04-06T18:54:17Z",
      "side": 1,
      "message": "Forgot that tsan only works on Linux. Did flush out one unexpected failure though.",
      "parentUuid": "b9ebebf4_d8e442d4",
      "range": {
        "startLine": 776,
        "startChar": 23,
        "endLine": 776,
        "endChar": 44
      },
      "revId": "9ce799eff8870de7d3d5e85ee0c36a21b3620a71",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a5f89328_94b4e8db",
        "filename": "src/tests/gl_tests/MultithreadingTest.cpp",
        "patchSetId": 5
      },
      "lineNbr": 776,
      "author": {
        "id": 1190898
      },
      "writtenOn": "2021-04-06T20:38:38Z",
      "side": 1,
      "message": "Should I keep this disabled for now, then?",
      "parentUuid": "529bed1b_2a3d9f23",
      "range": {
        "startLine": 776,
        "startChar": 23,
        "endLine": 776,
        "endChar": 44
      },
      "revId": "9ce799eff8870de7d3d5e85ee0c36a21b3620a71",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b73bb580_3c2f6388",
        "filename": "src/tests/gl_tests/MultithreadingTest.cpp",
        "patchSetId": 5
      },
      "lineNbr": 776,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-04-06T21:14:22Z",
      "side": 1,
      "message": "It seems your test times out on Vulkan. You could skip it, but it is a bit odd that it would time out. Maybe decreasing the 5000 would be sufficient.",
      "parentUuid": "a5f89328_94b4e8db",
      "range": {
        "startLine": 776,
        "startChar": 23,
        "endLine": 776,
        "endChar": 44
      },
      "revId": "9ce799eff8870de7d3d5e85ee0c36a21b3620a71",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "80419c1e_233a319a",
        "filename": "src/tests/test_utils/ANGLETest.cpp",
        "patchSetId": 5
      },
      "lineNbr": 1083,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-04-06T13:52:00Z",
      "side": 1,
      "message": "same warning here.",
      "range": {
        "startLine": 1083,
        "startChar": 58,
        "endLine": 1083,
        "endChar": 65
      },
      "revId": "9ce799eff8870de7d3d5e85ee0c36a21b3620a71",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "842a2e27_9d00c935",
        "filename": "src/tests/test_utils/ANGLETest.cpp",
        "patchSetId": 5
      },
      "lineNbr": 1083,
      "author": {
        "id": 1190898
      },
      "writtenOn": "2021-04-06T20:38:38Z",
      "side": 1,
      "message": "Same question as above :)",
      "parentUuid": "80419c1e_233a319a",
      "range": {
        "startLine": 1083,
        "startChar": 58,
        "endLine": 1083,
        "endChar": 65
      },
      "revId": "9ce799eff8870de7d3d5e85ee0c36a21b3620a71",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}