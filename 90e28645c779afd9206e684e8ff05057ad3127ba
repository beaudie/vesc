{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "76a9ae2c_d8a39b9c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1359667
      },
      "writtenOn": "2020-10-23T20:17:16Z",
      "side": 1,
      "message": "PTAL. There seems to be a possibly flakey test that is having trouble passing. Test looks unrelated to change.",
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d61fcc16_dc8c7de6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-10-26T13:47:21Z",
      "side": 1,
      "message": "Thanks for taking this on Brandon. No major issues that I saw but a bunch of small comments to resolve before landing.",
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "33e25e5f_b6c97c05",
        "filename": "src/libANGLE/Caps.h",
        "patchSetId": 12
      },
      "lineNbr": 664,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-10-26T13:47:21Z",
      "side": 1,
      "message": "nit: please add suffix",
      "range": {
        "startLine": 664,
        "startChar": 9,
        "endLine": 664,
        "endChar": 19
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cce7ed4f_2ee2b8e8",
        "filename": "src/libANGLE/Caps.h",
        "patchSetId": 12
      },
      "lineNbr": 664,
      "author": {
        "id": 1359667
      },
      "writtenOn": "2020-10-29T20:37:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "33e25e5f_b6c97c05",
      "range": {
        "startLine": 664,
        "startChar": 9,
        "endLine": 664,
        "endChar": 19
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "70988437_1e0a9f3a",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 12
      },
      "lineNbr": 4108,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-10-26T17:36:50Z",
      "side": 1,
      "message": "I\u0027d just create two functions:\n\n    copyTextureImageSubData\n    copyRenderbufferImageSubData\n\nand avoid the overload / templates.",
      "range": {
        "startLine": 4108,
        "startChar": 43,
        "endLine": 4108,
        "endChar": 59
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "766fb1d2_3f05a1a1",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 12
      },
      "lineNbr": 4108,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-10-26T18:02:45Z",
      "side": 1,
      "message": "agree, just minus the Image, so copyTextureSubData, copyRenderbufferSubData.",
      "parentUuid": "70988437_1e0a9f3a",
      "range": {
        "startLine": 4108,
        "startChar": 43,
        "endLine": 4108,
        "endChar": 59
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1380f8fb_2b570414",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 12
      },
      "lineNbr": 4108,
      "author": {
        "id": 1359667
      },
      "writtenOn": "2020-10-29T20:37:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "766fb1d2_3f05a1a1",
      "range": {
        "startLine": 4108,
        "startChar": 43,
        "endLine": 4108,
        "endChar": 59
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "efc2bb05_3fb4550a",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 12
      },
      "lineNbr": 4114,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-10-26T17:36:50Z",
      "side": 1,
      "message": "typo",
      "range": {
        "startLine": 4114,
        "startChar": 15,
        "endLine": 4114,
        "endChar": 27
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "511d9ecc_450bab72",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 12
      },
      "lineNbr": 4114,
      "author": {
        "id": 1359667
      },
      "writtenOn": "2020-10-29T20:37:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "efc2bb05_3fb4550a",
      "range": {
        "startLine": 4114,
        "startChar": 15,
        "endLine": 4114,
        "endChar": 27
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "13c30978_24f8d9be",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 12
      },
      "lineNbr": 4148,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-10-26T17:36:50Z",
      "side": 1,
      "message": "typo",
      "range": {
        "startLine": 4148,
        "startChar": 15,
        "endLine": 4148,
        "endChar": 27
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0da75138_18c6056e",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 12
      },
      "lineNbr": 4148,
      "author": {
        "id": 1359667
      },
      "writtenOn": "2020-10-29T20:37:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "13c30978_24f8d9be",
      "range": {
        "startLine": 4148,
        "startChar": 15,
        "endLine": 4148,
        "endChar": 27
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "376f888b_251cec52",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 12
      },
      "lineNbr": 4903,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-10-26T17:36:50Z",
      "side": 1,
      "message": "Can this be nullptr? Maybe you can ASSERT instead.",
      "range": {
        "startLine": 4903,
        "startChar": 8,
        "endLine": 4903,
        "endChar": 15
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1d705e99_5e1b42aa",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 12
      },
      "lineNbr": 4903,
      "author": {
        "id": 1359667
      },
      "writtenOn": "2020-10-29T20:37:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "376f888b_251cec52",
      "range": {
        "startLine": 4903,
        "startChar": 8,
        "endLine": 4903,
        "endChar": 15
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4f1035ef_9388f635",
        "filename": "src/libANGLE/Texture.h",
        "patchSetId": 12
      },
      "lineNbr": 406,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-10-26T13:47:21Z",
      "side": 1,
      "message": "nit: The templating is a bit inconsistent with how we define all the other impl methods. Can you either explicitly make two overloads or make two non-overloaded\n\ncopyRenderbufferSubData/copyTextureSubData\n\nThat would be the most consistent with the other impl methods.",
      "range": {
        "startLine": 393,
        "startChar": 0,
        "endLine": 406,
        "endChar": 53
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a3b273ea_95be25be",
        "filename": "src/libANGLE/Texture.h",
        "patchSetId": 12
      },
      "lineNbr": 406,
      "author": {
        "id": 1359667
      },
      "writtenOn": "2020-10-29T20:37:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4f1035ef_9388f635",
      "range": {
        "startLine": 393,
        "startChar": 0,
        "endLine": 406,
        "endChar": 53
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2478259b_3a68a452",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 12
      },
      "lineNbr": 4206,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-10-26T17:36:50Z",
      "side": 1,
      "message": "Every usage of `is*Layered` is paired with `!is*3D`. You can remove `srcImage-\u003egetType() \u003d\u003d VK_IMAGE_TYPE_3D` and simplify that.",
      "range": {
        "startLine": 4206,
        "startChar": 13,
        "endLine": 4206,
        "endChar": 25
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "85384842_4d98326d",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 12
      },
      "lineNbr": 4206,
      "author": {
        "id": 1359667
      },
      "writtenOn": "2020-10-29T20:37:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2478259b_3a68a452",
      "range": {
        "startLine": 4206,
        "startChar": 13,
        "endLine": 4206,
        "endChar": 25
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b0a302a3_405e83e0",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 12
      },
      "lineNbr": 4230,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-10-26T17:36:50Z",
      "side": 1,
      "message": "Based on how region.extent.depth is set, this can probably be `isSrc3D ? srcZ : 0`.",
      "range": {
        "startLine": 4230,
        "startChar": 31,
        "endLine": 4230,
        "endChar": 68
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2b76db9f_98b8809d",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 12
      },
      "lineNbr": 4230,
      "author": {
        "id": 1359667
      },
      "writtenOn": "2020-10-29T20:37:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b0a302a3_405e83e0",
      "range": {
        "startLine": 4230,
        "startChar": 31,
        "endLine": 4230,
        "endChar": 68
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ffe46f8d_21b82b98",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 12
      },
      "lineNbr": 4257,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-10-26T13:47:21Z",
      "side": 1,
      "message": "what is our plan here? do we need to use the blit shaders in UtilsVk?",
      "range": {
        "startLine": 4252,
        "startChar": 0,
        "endLine": 4257,
        "endChar": 35
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a1f7f8d8_2a0ae31c",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 12
      },
      "lineNbr": 4257,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-10-26T17:36:50Z",
      "side": 1,
      "message": "Do we actually hit this? It seems unlikely that an implementation would support RGB8I but not RGB8UI.\n\nRGB8 vs RGB8UI might be a more likely scenario. I suspect this is only a problem for 24-bit (or 48-bit) formats:\n\n    VIEW_CLASS_48_BITS | RGB16F, RGB16UI, RGB16I    \n    VIEW_CLASS_24_BITS | RGB8, RGB8_SNORM, SRGB8, RGB8UI, RGB8I \n\nWe should probably not bother unless there\u0027s an implementation that supports either of these sets partially.\n\nUtilsVk::copyImage already does most of the job so if needs be, can be adapted. The difference is that UtilsVk::copyImage converts between types (because of CHROMIUM_copy_texture), but shouldn\u0027t for EXT_copy_image.",
      "parentUuid": "ffe46f8d_21b82b98",
      "range": {
        "startLine": 4252,
        "startChar": 0,
        "endLine": 4257,
        "endChar": 35
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "97fc1661_2a4e6a8e",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 12
      },
      "lineNbr": 4257,
      "author": {
        "id": 1359667
      },
      "writtenOn": "2020-10-26T22:36:10Z",
      "side": 1,
      "message": "We don\u0027t hit case. I\u0027m just putting it here at it is possible, but like you said unlikely.",
      "parentUuid": "a1f7f8d8_2a0ae31c",
      "range": {
        "startLine": 4252,
        "startChar": 0,
        "endLine": 4257,
        "endChar": 35
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2474cd63_992c8e31",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 12
      },
      "lineNbr": 4257,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-10-26T22:51:17Z",
      "side": 1,
      "message": "Can you swap this over to ANGLE_VK_CHECK? Mostly a consistency thing, bit if we ever hit that case it\u0027ll show as an error.",
      "parentUuid": "97fc1661_2a4e6a8e",
      "range": {
        "startLine": 4252,
        "startChar": 0,
        "endLine": 4257,
        "endChar": 35
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0e7ce571_5a5b3570",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 12
      },
      "lineNbr": 4257,
      "author": {
        "id": 1359667
      },
      "writtenOn": "2020-10-29T20:37:31Z",
      "side": 1,
      "message": "Added the ANGLE_VK_CHECK.",
      "parentUuid": "2474cd63_992c8e31",
      "range": {
        "startLine": 4252,
        "startChar": 0,
        "endLine": 4257,
        "endChar": 35
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3da5d595_2085f6d2",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 12
      },
      "lineNbr": 1436,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-10-26T13:47:21Z",
      "side": 1,
      "message": "nit: Can you take these all out of the class and make them static helper functions? Trying to reduce the amount of public static in-class functions we define, as it doesn\u0027t really help anything.",
      "range": {
        "startLine": 1408,
        "startChar": 0,
        "endLine": 1436,
        "endChar": 0
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b95a4976_63aa7d0c",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 12
      },
      "lineNbr": 1436,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-10-26T17:36:50Z",
      "side": 1,
      "message": "Only FormatHasNecessaryFeature and CanCopyWithTransferCommon (which can be named CanCopyWithTransfer) need to become utility functions. The rest can remain anonymous functions in the file that uses them.",
      "parentUuid": "3da5d595_2085f6d2",
      "range": {
        "startLine": 1408,
        "startChar": 0,
        "endLine": 1436,
        "endChar": 0
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ab91f0fb_692375a1",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 12
      },
      "lineNbr": 1436,
      "author": {
        "id": 1359667
      },
      "writtenOn": "2020-10-29T20:37:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b95a4976_63aa7d0c",
      "range": {
        "startLine": 1408,
        "startChar": 0,
        "endLine": 1436,
        "endChar": 0
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4ee7127c_7cb2693d",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 12
      },
      "lineNbr": 1467,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-10-26T13:47:21Z",
      "side": 1,
      "message": "this one makes sense to leave as it\u0027s an action command and we already have static Copy, etc.",
      "range": {
        "startLine": 1454,
        "startChar": 0,
        "endLine": 1467,
        "endChar": 60
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c3b7cdbc_35aec129",
        "filename": "src/libANGLE/validationES.cpp",
        "patchSetId": 12
      },
      "lineNbr": 2598,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-10-26T13:47:21Z",
      "side": 1,
      "message": "nit: CheckValid is not how we name things here, we just use the phrase \"Validate...\"",
      "range": {
        "startLine": 2598,
        "startChar": 5,
        "endLine": 2598,
        "endChar": 37
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "479e23f4_7fe04ef1",
        "filename": "src/libANGLE/validationES.cpp",
        "patchSetId": 12
      },
      "lineNbr": 2598,
      "author": {
        "id": 1359667
      },
      "writtenOn": "2020-10-29T20:37:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c3b7cdbc_35aec129",
      "range": {
        "startLine": 2598,
        "startChar": 5,
        "endLine": 2598,
        "endChar": 37
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6dd1a34e_6dbb7408",
        "filename": "src/libANGLE/validationES.cpp",
        "patchSetId": 12
      },
      "lineNbr": 2609,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-10-26T13:47:21Z",
      "side": 1,
      "message": "same not as below about comment formatting.",
      "range": {
        "startLine": 2600,
        "startChar": 0,
        "endLine": 2609,
        "endChar": 23
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2cae8e46_500cf78c",
        "filename": "src/libANGLE/validationES.cpp",
        "patchSetId": 12
      },
      "lineNbr": 2609,
      "author": {
        "id": 1359667
      },
      "writtenOn": "2020-10-29T20:37:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6dd1a34e_6dbb7408",
      "range": {
        "startLine": 2600,
        "startChar": 0,
        "endLine": 2609,
        "endChar": 23
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b6567814_0abfa114",
        "filename": "src/libANGLE/validationES.cpp",
        "patchSetId": 12
      },
      "lineNbr": 2615,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-10-26T13:47:21Z",
      "side": 1,
      "message": "this seems wrong - only bind should generate a resource, right?\n\nCan you make a regression test for this?",
      "range": {
        "startLine": 2615,
        "startChar": 14,
        "endLine": 2615,
        "endChar": 69
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5144dd73_57a79bd9",
        "filename": "src/libANGLE/validationES.cpp",
        "patchSetId": 12
      },
      "lineNbr": 2615,
      "author": {
        "id": 1359667
      },
      "writtenOn": "2020-10-26T22:36:10Z",
      "side": 1,
      "message": "I took this from ValidateBindRenderbuffer in order to determine if the renderbuffer passed in is a valid handle. I don\u0027t quite follow the test you are suggesting?",
      "parentUuid": "b6567814_0abfa114",
      "range": {
        "startLine": 2615,
        "startChar": 14,
        "endLine": 2615,
        "endChar": 69
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "19e2e361_56b50b0c",
        "filename": "src/libANGLE/validationES.cpp",
        "patchSetId": 12
      },
      "lineNbr": 2629,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-10-26T13:47:21Z",
      "side": 1,
      "message": "I don\u0027t see where you\u0027re validating that this is a valid texture object. What is specified in that case?",
      "range": {
        "startLine": 2629,
        "startChar": 16,
        "endLine": 2629,
        "endChar": 30
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ed77295_f5f8306c",
        "filename": "src/libANGLE/validationES.cpp",
        "patchSetId": 12
      },
      "lineNbr": 2629,
      "author": {
        "id": 1359667
      },
      "writtenOn": "2020-10-26T22:36:10Z",
      "side": 1,
      "message": "Good catch! Looks like we need this check:\n\nif (!context-\u003egetStateCache().isValidBindTextureType(target))",
      "parentUuid": "19e2e361_56b50b0c",
      "range": {
        "startLine": 2629,
        "startChar": 16,
        "endLine": 2629,
        "endChar": 30
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ae1868ed_dc46eb95",
        "filename": "src/libANGLE/validationES.cpp",
        "patchSetId": 12
      },
      "lineNbr": 2629,
      "author": {
        "id": 1359667
      },
      "writtenOn": "2020-10-29T20:37:31Z",
      "side": 1,
      "message": "Not quite correct on my previous comment because no textures are required to be bound when using glCopyImageSubData. I\u0027ve changed the checks to reflect that.",
      "parentUuid": "7ed77295_f5f8306c",
      "range": {
        "startLine": 2629,
        "startChar": 16,
        "endLine": 2629,
        "endChar": 30
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a76fcc80_05430924",
        "filename": "src/libANGLE/validationES.cpp",
        "patchSetId": 12
      },
      "lineNbr": 2657,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-10-26T13:47:21Z",
      "side": 1,
      "message": "nit: can you fix the comment formatting on all of these?",
      "range": {
        "startLine": 2655,
        "startChar": 0,
        "endLine": 2657,
        "endChar": 40
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "173e94d6_08b99c88",
        "filename": "src/libANGLE/validationES.cpp",
        "patchSetId": 12
      },
      "lineNbr": 2657,
      "author": {
        "id": 1359667
      },
      "writtenOn": "2020-10-29T20:37:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a76fcc80_05430924",
      "range": {
        "startLine": 2655,
        "startChar": 0,
        "endLine": 2657,
        "endChar": 40
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "776b91f7_021e4bf2",
        "filename": "src/libANGLE/validationES.cpp",
        "patchSetId": 12
      },
      "lineNbr": 2700,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-10-26T13:47:21Z",
      "side": 1,
      "message": "what\u0027s specced here if the cube map texture is cube-incomplete?",
      "range": {
        "startLine": 2694,
        "startChar": 0,
        "endLine": 2700,
        "endChar": 9
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "71714a50_e0658d88",
        "filename": "src/libANGLE/validationES.cpp",
        "patchSetId": 12
      },
      "lineNbr": 2700,
      "author": {
        "id": 1359667
      },
      "writtenOn": "2020-10-26T22:36:10Z",
      "side": 1,
      "message": "The textures to be used must be Texture Complete. Being cube-complete is a prerequisite for that.\n\n\"INVALID_OPERATION is generated if either object is a texture and the texture is not complete (as defined in section 3.8.13)\"\n\nThis texture completeness check is done on line 2718.",
      "parentUuid": "776b91f7_021e4bf2",
      "range": {
        "startLine": 2694,
        "startChar": 0,
        "endLine": 2700,
        "endChar": 9
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a73ed056_8849f441",
        "filename": "src/libANGLE/validationES.cpp",
        "patchSetId": 12
      },
      "lineNbr": 2752,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-10-26T13:47:21Z",
      "side": 1,
      "message": "nit: this name is a bit too broad, how about GetTargetFormatInfo or GetFormatInfoForTarget",
      "range": {
        "startLine": 2752,
        "startChar": 22,
        "endLine": 2752,
        "endChar": 35
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4d45b6b8_4dd57866",
        "filename": "src/libANGLE/validationES.cpp",
        "patchSetId": 12
      },
      "lineNbr": 2752,
      "author": {
        "id": 1359667
      },
      "writtenOn": "2020-10-29T20:37:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a73ed056_8849f441",
      "range": {
        "startLine": 2752,
        "startChar": 22,
        "endLine": 2752,
        "endChar": 35
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ecd14fb_567a3f43",
        "filename": "src/libANGLE/validationES.cpp",
        "patchSetId": 12
      },
      "lineNbr": 2771,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-10-26T13:47:21Z",
      "side": 1,
      "message": "to be safe, I\u0027d just the switch here like you did above. That way you can handle the unexpected error case.",
      "range": {
        "startLine": 2754,
        "startChar": 3,
        "endLine": 2771,
        "endChar": 1
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "337eab82_84324026",
        "filename": "src/libANGLE/validationES.cpp",
        "patchSetId": 12
      },
      "lineNbr": 2771,
      "author": {
        "id": 1359667
      },
      "writtenOn": "2020-10-29T20:37:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8ecd14fb_567a3f43",
      "range": {
        "startLine": 2754,
        "startChar": 3,
        "endLine": 2771,
        "endChar": 1
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8f659c33_617f9525",
        "filename": "src/libANGLE/validationES.cpp",
        "patchSetId": 12
      },
      "lineNbr": 2799,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-10-26T13:47:21Z",
      "side": 1,
      "message": "nit: never check \u003d\u003d false or \u003d\u003d true, use ! or nothing",
      "range": {
        "startLine": 2799,
        "startChar": 69,
        "endLine": 2799,
        "endChar": 78
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aed73690_b42f1a68",
        "filename": "src/libANGLE/validationES.cpp",
        "patchSetId": 12
      },
      "lineNbr": 2799,
      "author": {
        "id": 1359667
      },
      "writtenOn": "2020-10-29T20:37:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8f659c33_617f9525",
      "range": {
        "startLine": 2799,
        "startChar": 69,
        "endLine": 2799,
        "endChar": 78
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bfeb88e7_0ef6fc92",
        "filename": "src/libANGLE/validationES.cpp",
        "patchSetId": 12
      },
      "lineNbr": 2803,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-10-26T13:47:21Z",
      "side": 1,
      "message": "same",
      "range": {
        "startLine": 2803,
        "startChar": 69,
        "endLine": 2803,
        "endChar": 78
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "20d92102_f5696355",
        "filename": "src/libANGLE/validationES.cpp",
        "patchSetId": 12
      },
      "lineNbr": 2803,
      "author": {
        "id": 1359667
      },
      "writtenOn": "2020-10-29T20:37:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bfeb88e7_0ef6fc92",
      "range": {
        "startLine": 2803,
        "startChar": 69,
        "endLine": 2803,
        "endChar": 78
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dcf59b97_6c5cda4a",
        "filename": "src/libANGLE/validationES.cpp",
        "patchSetId": 12
      },
      "lineNbr": 2808,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-10-26T13:47:21Z",
      "side": 1,
      "message": "nit: you can use a const \u0026 to prevent a copy.",
      "range": {
        "startLine": 2808,
        "startChar": 10,
        "endLine": 2808,
        "endChar": 25
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fe39af04_399e8b5f",
        "filename": "src/libANGLE/validationES.cpp",
        "patchSetId": 12
      },
      "lineNbr": 2808,
      "author": {
        "id": 1359667
      },
      "writtenOn": "2020-10-29T20:37:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dcf59b97_6c5cda4a",
      "range": {
        "startLine": 2808,
        "startChar": 10,
        "endLine": 2808,
        "endChar": 25
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "05e33825_77946e61",
        "filename": "src/libANGLE/validationES.cpp",
        "patchSetId": 12
      },
      "lineNbr": 2809,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-10-26T13:47:21Z",
      "side": 1,
      "message": "same",
      "range": {
        "startLine": 2809,
        "startChar": 10,
        "endLine": 2809,
        "endChar": 25
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e9afb67b_01bc9f83",
        "filename": "src/libANGLE/validationES.cpp",
        "patchSetId": 12
      },
      "lineNbr": 2809,
      "author": {
        "id": 1359667
      },
      "writtenOn": "2020-10-29T20:37:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "05e33825_77946e61",
      "range": {
        "startLine": 2809,
        "startChar": 10,
        "endLine": 2809,
        "endChar": 25
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c7ac24d7_7dbcf6ce",
        "filename": "src/libANGLE/validationES.cpp",
        "patchSetId": 12
      },
      "lineNbr": 2816,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-10-26T13:47:21Z",
      "side": 1,
      "message": "same",
      "range": {
        "startLine": 2816,
        "startChar": 85,
        "endLine": 2816,
        "endChar": 95
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f4c035e0_053cbd4b",
        "filename": "src/libANGLE/validationES.cpp",
        "patchSetId": 12
      },
      "lineNbr": 2816,
      "author": {
        "id": 1359667
      },
      "writtenOn": "2020-10-29T20:37:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c7ac24d7_7dbcf6ce",
      "range": {
        "startLine": 2816,
        "startChar": 85,
        "endLine": 2816,
        "endChar": 95
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "14ba57b9_98970ced",
        "filename": "src/libANGLE/validationES.cpp",
        "patchSetId": 12
      },
      "lineNbr": 2842,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-10-26T13:47:21Z",
      "side": 1,
      "message": "all these too",
      "range": {
        "startLine": 2842,
        "startChar": 90,
        "endLine": 2842,
        "endChar": 95
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2a4cc8dd_47a4381b",
        "filename": "src/libANGLE/validationES.cpp",
        "patchSetId": 12
      },
      "lineNbr": 2842,
      "author": {
        "id": 1359667
      },
      "writtenOn": "2020-10-29T20:37:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "14ba57b9_98970ced",
      "range": {
        "startLine": 2842,
        "startChar": 90,
        "endLine": 2842,
        "endChar": 95
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3069fe58_16931559",
        "filename": "src/libANGLE/validationES.cpp",
        "patchSetId": 12
      },
      "lineNbr": 2861,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-10-26T17:36:50Z",
      "side": 1,
      "message": "Does this simple check really cover everything in tables 4.X.1 and 4.X.2?\n\nLike, what\u0027s preventing a copy from RGBA32 to COMPRESSED_RGBA_ASTC_4x4_KHR?",
      "range": {
        "startLine": 2857,
        "startChar": 0,
        "endLine": 2861,
        "endChar": 31
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "618e5305_c2f2eb7a",
        "filename": "src/libANGLE/validationES.cpp",
        "patchSetId": 12
      },
      "lineNbr": 2861,
      "author": {
        "id": 1359667
      },
      "writtenOn": "2020-10-26T22:36:10Z",
      "side": 1,
      "message": "GL_RGBA32 is not a valid internal format, so I would expect there to be an error during texture creation (glTexImage2D). With that said, you are correct, there isn\u0027t any checks to ensure we follow the tables in the spec. For example, copy from COMPRESSED_RGBA_ASTC_4x4_KHR to GL_COMPRESSED_RGBA_ASTC_5x5_KHR has the same pixelBytes, but is \"not compatible\" according to the table. I\u0027ll need to add something to make sure the table is followed.",
      "parentUuid": "3069fe58_16931559",
      "range": {
        "startLine": 2857,
        "startChar": 0,
        "endLine": 2861,
        "endChar": 31
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7ad2438e_16fba142",
        "filename": "src/libANGLE/validationES.cpp",
        "patchSetId": 12
      },
      "lineNbr": 2861,
      "author": {
        "id": 1359667
      },
      "writtenOn": "2020-10-29T20:37:31Z",
      "side": 1,
      "message": "Added new function ValidateCopyFormatCompatible() to handle this.",
      "parentUuid": "618e5305_c2f2eb7a",
      "range": {
        "startLine": 2857,
        "startChar": 0,
        "endLine": 2861,
        "endChar": 31
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e9296343_1a09642a",
        "filename": "src/libANGLE/validationES32.cpp",
        "patchSetId": 12
      },
      "lineNbr": 142,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-10-26T13:47:21Z",
      "side": 1,
      "message": "also validate 3.2",
      "range": {
        "startLine": 142,
        "startChar": 11,
        "endLine": 142,
        "endChar": 39
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "19927e2a_49db6f9f",
        "filename": "src/libANGLE/validationES32.cpp",
        "patchSetId": 12
      },
      "lineNbr": 142,
      "author": {
        "id": 1359667
      },
      "writtenOn": "2020-10-29T20:37:31Z",
      "side": 1,
      "message": "Is this not validating ES 3.2?",
      "parentUuid": "e9296343_1a09642a",
      "range": {
        "startLine": 142,
        "startChar": 11,
        "endLine": 142,
        "endChar": 39
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2a5ef5f8_c6772048",
        "filename": "src/libANGLE/validationES32.cpp",
        "patchSetId": 12
      },
      "lineNbr": 142,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-10-29T20:47:01Z",
      "side": 1,
      "message": "Correct, it is not. Add a check that if the driver version \u003c 3.2, this throws an error, similar to how you validate the extension.",
      "parentUuid": "19927e2a_49db6f9f",
      "range": {
        "startLine": 142,
        "startChar": 11,
        "endLine": 142,
        "endChar": 39
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8182fb11_24668bd5",
        "filename": "src/libANGLE/validationES32.cpp",
        "patchSetId": 12
      },
      "lineNbr": 142,
      "author": {
        "id": 1359667
      },
      "writtenOn": "2020-10-29T20:57:32Z",
      "side": 1,
      "message": "Do we need to do the check since the extension is core in 3.2 and we should only get here if the context is 3.2?",
      "parentUuid": "2a5ef5f8_c6772048",
      "range": {
        "startLine": 142,
        "startChar": 11,
        "endLine": 142,
        "endChar": 39
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d6e64b34_ba68b8ca",
        "filename": "src/tests/deqp_support/deqp_gles31_test_expectations.txt",
        "patchSetId": 12
      },
      "lineNbr": 274,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-10-26T13:47:21Z",
      "side": 1,
      "message": "can you update the caps to not expose this ext if we\u0027re missing support here? what kind of queries do we need to run?",
      "range": {
        "startLine": 271,
        "startChar": 0,
        "endLine": 274,
        "endChar": 122
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4c2d8385_33665f07",
        "filename": "src/tests/deqp_support/deqp_gles31_test_expectations.txt",
        "patchSetId": 12
      },
      "lineNbr": 274,
      "author": {
        "id": 1359667
      },
      "writtenOn": "2020-10-26T22:36:10Z",
      "side": 1,
      "message": "I think I mistakenly kept this skip in here. Essentially the tests will give a \"Not Supported\" for us already if GL_KHR_texture_compression_astc_hdr is not supported. This HDR support is not a dependency for the copy image extension.",
      "parentUuid": "d6e64b34_ba68b8ca",
      "range": {
        "startLine": 271,
        "startChar": 0,
        "endLine": 274,
        "endChar": 122
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "efee667c_a11f9afe",
        "filename": "src/tests/deqp_support/deqp_gles31_test_expectations.txt",
        "patchSetId": 12
      },
      "lineNbr": 274,
      "author": {
        "id": 1359667
      },
      "writtenOn": "2020-10-29T20:37:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4c2d8385_33665f07",
      "range": {
        "startLine": 271,
        "startChar": 0,
        "endLine": 274,
        "endChar": 122
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b7e72f1f_51ada8db",
        "filename": "src/tests/deqp_support/deqp_gles31_test_expectations.txt",
        "patchSetId": 12
      },
      "lineNbr": 276,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-10-26T13:47:21Z",
      "side": 1,
      "message": "any idea on the root cause here? We\u0027ll follow up?",
      "range": {
        "startLine": 276,
        "startChar": 0,
        "endLine": 276,
        "endChar": 98
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "46b2923a_09a3d314",
        "filename": "src/tests/deqp_support/deqp_gles31_test_expectations.txt",
        "patchSetId": 12
      },
      "lineNbr": 276,
      "author": {
        "id": 1359667
      },
      "writtenOn": "2020-10-26T22:36:10Z",
      "side": 1,
      "message": "The general flow for these copy image deqp tests goes something like this:\n\n1. Build up source image\n2. Build up destination image\n3. Verify source image looks correct\n4. Verify destination image looks correct\n5. Do the copy image\n6. Verify source image looks correct\n7. Verify destination image looks correct\n\nThe test fails on step 3 and/or 4, before the copy. The interesting bit is that these tests were passing locally a couple of weeks ago. That is why I\u0027d like to move forward with this change in it\u0027s current state to gate new regressions that copy image can catch.",
      "parentUuid": "b7e72f1f_51ada8db",
      "range": {
        "startLine": 276,
        "startChar": 0,
        "endLine": 276,
        "endChar": 98
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0b9e69ae_63b08fb5",
        "filename": "src/tests/deqp_support/deqp_gles31_test_expectations.txt",
        "patchSetId": 12
      },
      "lineNbr": 281,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-10-26T13:47:21Z",
      "side": 1,
      "message": "is this a SwS bug? Can you provide more info so we can file a bug?",
      "range": {
        "startLine": 281,
        "startChar": 0,
        "endLine": 281,
        "endChar": 119
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "43942a2b_2243b689",
        "filename": "src/tests/deqp_support/deqp_gles31_test_expectations.txt",
        "patchSetId": 12
      },
      "lineNbr": 281,
      "author": {
        "id": 1359667
      },
      "writtenOn": "2020-10-26T22:36:10Z",
      "side": 1,
      "message": "Similar to my comment on renderbuffers except I don\u0027t think these have regressed. The source/destination srgb image verification (before the copy) fails.",
      "parentUuid": "0b9e69ae_63b08fb5",
      "range": {
        "startLine": 281,
        "startChar": 0,
        "endLine": 281,
        "endChar": 119
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "17f2136d_68014119",
        "filename": "src/tests/deqp_support/deqp_gles31_test_expectations.txt",
        "patchSetId": 12
      },
      "lineNbr": 292,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-10-26T13:47:21Z",
      "side": 1,
      "message": "This is an ANGLE bug? Need a bit more info to know if we should file a new bug/defer or fix this now.",
      "range": {
        "startLine": 292,
        "startChar": 0,
        "endLine": 292,
        "endChar": 72
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1a7bf1dd_746186a5",
        "filename": "src/tests/deqp_support/deqp_gles31_test_expectations.txt",
        "patchSetId": 12
      },
      "lineNbr": 292,
      "author": {
        "id": 1359667
      },
      "writtenOn": "2020-10-26T22:36:10Z",
      "side": 1,
      "message": "Similar to my comment on renderbuffers except I don\u0027t think these have regressed. The source/destination etc2 image verification (before the copy) fails.",
      "parentUuid": "17f2136d_68014119",
      "range": {
        "startLine": 292,
        "startChar": 0,
        "endLine": 292,
        "endChar": 72
      },
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "34376393_a3af9edf",
        "filename": "src/tests/gl_tests/TextureTest.cpp",
        "patchSetId": 12
      },
      "lineNbr": 3541,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-10-26T18:26:50Z",
      "side": 1,
      "message": "Can you please add a test with non-zero-base textures as src and destination? Non-zero-base textures are rarely tested by dEQP.",
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "577913a7_214731d5",
        "filename": "src/tests/gl_tests/TextureTest.cpp",
        "patchSetId": 12
      },
      "lineNbr": 3541,
      "author": {
        "id": 1359667
      },
      "writtenOn": "2020-10-29T20:37:31Z",
      "side": 1,
      "message": "Added test Texture2DTestES3.CopyImageBaseLevel1",
      "parentUuid": "34376393_a3af9edf",
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b1b00d69_9dc8fe10",
        "filename": "src/tests/gl_tests/TextureTest.cpp",
        "patchSetId": 12
      },
      "lineNbr": 3666,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-10-26T18:26:50Z",
      "side": 1,
      "message": "I ran your test, and yes it works without the signalDirtyStorage call. But that\u0027s because of the way the Vulkan backend works.\n\nFirst, please add the following here:\n\n    // Draw something in the texture to make sure it\u0027s image is defined.\n    ANGLE_GL_PROGRAM(drawRed, essl1_shaders::vs::Simple(), essl1_shaders::fs::Red());\n    drawQuad(drawRed, essl1_shaders::PositionAttrib(), 0.0f);\n\nThe above makes sure copyImageSubData doesn\u0027t call syncState on the texture as the texture has nothing to sync. That removes one call that sets the content of the texture defined.\n\nThere\u0027s another one however, and that\u0027s the onImageTransferWrite call in ImageHelper::CopySubImageData.\n\nAgain, this works in the Vulkan backend, but that\u0027s just due to the peculiarities of the current implementation. signalDirtyStorage is still necessary, but I don\u0027t know how we can write a regression test for it. Can you please add the call anyway and avoid future regressions?",
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a700f0c6_ff98c41f",
        "filename": "src/tests/gl_tests/TextureTest.cpp",
        "patchSetId": 12
      },
      "lineNbr": 3666,
      "author": {
        "id": 1359667
      },
      "writtenOn": "2020-10-29T20:37:31Z",
      "side": 1,
      "message": "Done. I\u0027ve added signalDirtyStorage in the latest patchset.",
      "parentUuid": "b1b00d69_9dc8fe10",
      "revId": "90e28645c779afd9206e684e8ff05057ad3127ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}