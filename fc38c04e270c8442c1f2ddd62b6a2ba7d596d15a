{
  "comments": [
    {
      "key": {
        "uuid": "29592aa1_0e52b33f",
        "filename": "src/libANGLE/State.cpp",
        "patchSetId": 7
      },
      "lineNbr": 624,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-05-14T18:45:40Z",
      "side": 1,
      "message": "Hm, I wonder if I missed this during the PPO stuff - but should this be checking mExecutable instead of mProgram so we do the work whether a Program or PPO is bound?   We call mExecutable-\u003egetSamplerFormatForTextureUnitIndex() in this block, which supports both.",
      "revId": "fc38c04e270c8442c1f2ddd62b6a2ba7d596d15a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1a9f264b_b88f5489",
        "filename": "src/libANGLE/State.cpp",
        "patchSetId": 7
      },
      "lineNbr": 624,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2020-05-15T16:33:32Z",
      "side": 1,
      "message": "Let\u0027s update these in a follow-up patch.  I want to make this as targeted as possible.",
      "parentUuid": "29592aa1_0e52b33f",
      "revId": "fc38c04e270c8442c1f2ddd62b6a2ba7d596d15a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "58a83284_562764f8",
        "filename": "src/libANGLE/State.cpp",
        "patchSetId": 7
      },
      "lineNbr": 634,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-05-14T18:45:40Z",
      "side": 1,
      "message": "If !texture then the texture\u0027s type is TextureType::InvalidEnum, so why do we set this to false?   Does TextureType::InvalidEnum mean it\u0027s compatible with every sampler?",
      "revId": "fc38c04e270c8442c1f2ddd62b6a2ba7d596d15a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "57b676f6_3785b246",
        "filename": "src/libANGLE/State.cpp",
        "patchSetId": 7
      },
      "lineNbr": 634,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2020-05-15T16:33:32Z",
      "side": 1,
      "message": "This is the fallback case of the cache being inactive due to no program. It\u0027s safe to enter this case with a null texture too.",
      "parentUuid": "58a83284_562764f8",
      "revId": "fc38c04e270c8442c1f2ddd62b6a2ba7d596d15a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "68ff4a69_bb8d73c8",
        "filename": "src/libANGLE/State.cpp",
        "patchSetId": 7
      },
      "lineNbr": 3371,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-05-14T18:45:40Z",
      "side": 1,
      "message": "Oh, there are a few mProgram checks rather than mExecutable in State\u0027s image/texture/sampler stuff.   The dEQP tests are passing for PPOs, but maybe this is a lightly tested area in that regard.",
      "revId": "fc38c04e270c8442c1f2ddd62b6a2ba7d596d15a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a428420_44f3b8ca",
        "filename": "src/libANGLE/State.cpp",
        "patchSetId": 7
      },
      "lineNbr": 3371,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2020-05-15T16:33:32Z",
      "side": 1,
      "message": "Should all the mProgram checks be updated to mExectuable?\n\nEither way, I/we can do it in a followup patch.",
      "parentUuid": "68ff4a69_bb8d73c8",
      "revId": "fc38c04e270c8442c1f2ddd62b6a2ba7d596d15a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "34243d3c_17cd15f4",
        "filename": "src/tests/gl_tests/ActiveTextureCacheTest.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-05-14T18:20:23Z",
      "side": 1,
      "message": "nit: update year and add top-level comment.",
      "revId": "fc38c04e270c8442c1f2ddd62b6a2ba7d596d15a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "21b8a309_fbe50696",
        "filename": "src/tests/gl_tests/ActiveTextureCacheTest.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2020-05-14T18:40:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "34243d3c_17cd15f4",
      "revId": "fc38c04e270c8442c1f2ddd62b6a2ba7d596d15a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "82c91396_158f3fb8",
        "filename": "src/tests/gl_tests/ActiveTextureCacheTest.cpp",
        "patchSetId": 7
      },
      "lineNbr": 67,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-05-14T18:45:40Z",
      "side": 1,
      "message": "I wonder if we should add a PPO version of this test also to show that checking \u0027mProgram\u0027 in State isn\u0027t the right thing to do.",
      "revId": "fc38c04e270c8442c1f2ddd62b6a2ba7d596d15a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f9a937d8_e0902a98",
        "filename": "src/tests/gl_tests/ActiveTextureCacheTest.cpp",
        "patchSetId": 7
      },
      "lineNbr": 67,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2020-05-15T16:33:32Z",
      "side": 1,
      "message": "Agreed, we should add coverage.",
      "parentUuid": "82c91396_158f3fb8",
      "revId": "fc38c04e270c8442c1f2ddd62b6a2ba7d596d15a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}