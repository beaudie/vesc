{
  "comments": [
    {
      "key": {
        "uuid": "a708011e_26e30c18",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 9
      },
      "lineNbr": 1030,
      "author": {
        "id": 1165541
      },
      "writtenOn": "2017-02-24T07:34:06Z",
      "side": 1,
      "message": "mGLState.getVertexArray()-\u003ebindVertexBuffer(bindingIndex, buffer, offset, stride); Don\u0027t need to define bindVertexBuffer in mGLState. Similar function is bindElementArrayBuffer",
      "range": {
        "startLine": 1030,
        "startChar": 4,
        "endLine": 1030,
        "endChar": 29
      },
      "revId": "a29b6ceb43fb16ae80b42a379d8927c07b3419a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e229db8_3aad0023",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 9
      },
      "lineNbr": 1030,
      "author": {
        "id": 1144534
      },
      "writtenOn": "2017-02-24T08:19:22Z",
      "side": 1,
      "message": "I think we should change bindElementArrayBuffer to use this style. Jiawei can you investigate why bindElementArrayBuffer did like that before?",
      "parentUuid": "a708011e_26e30c18",
      "range": {
        "startLine": 1030,
        "startChar": 4,
        "endLine": 1030,
        "endChar": 29
      },
      "revId": "a29b6ceb43fb16ae80b42a379d8927c07b3419a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd199787_89cf671f",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 9
      },
      "lineNbr": 1030,
      "author": {
        "id": 1161747
      },
      "writtenOn": "2017-02-24T08:51:05Z",
      "side": 1,
      "message": "Here I refer Context::setVertexAttribDivisor and Context::vertexAttribPointer. \n\nI need to investigate why bindElementArrayBuffer uses different style from other vertex array related code.",
      "parentUuid": "a708011e_26e30c18",
      "range": {
        "startLine": 1030,
        "startChar": 4,
        "endLine": 1030,
        "endChar": 29
      },
      "revId": "a29b6ceb43fb16ae80b42a379d8927c07b3419a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "29089c1d_d8c3a17d",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 9
      },
      "lineNbr": 1030,
      "author": {
        "id": 1161747
      },
      "writtenOn": "2017-02-27T13:48:08Z",
      "side": 1,
      "message": "Other functions all have its unique dirty bit and should be set by the correspond GL function (such as gl.bindVertexBuffer here).\n\nElementArrayBuffers are set by BufferData() and bound to GL_ELEMENT_ARRAY_BUFFER every time before drawElements(). It is not updated by a specific GL function.",
      "parentUuid": "2e229db8_3aad0023",
      "range": {
        "startLine": 1030,
        "startChar": 4,
        "endLine": 1030,
        "endChar": 29
      },
      "revId": "a29b6ceb43fb16ae80b42a379d8927c07b3419a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "160e2000_453cb996",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 9
      },
      "lineNbr": 3502,
      "author": {
        "id": 1165541
      },
      "writtenOn": "2017-02-24T07:34:06Z",
      "side": 1,
      "message": "same",
      "revId": "a29b6ceb43fb16ae80b42a379d8927c07b3419a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "42385fdf_32cfd03b",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 9
      },
      "lineNbr": 3511,
      "author": {
        "id": 1165541
      },
      "writtenOn": "2017-02-24T07:34:06Z",
      "side": 1,
      "message": "same",
      "revId": "a29b6ceb43fb16ae80b42a379d8927c07b3419a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8e244e21_b05da2a3",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 9
      },
      "lineNbr": 3516,
      "author": {
        "id": 1165541
      },
      "writtenOn": "2017-02-24T07:34:06Z",
      "side": 1,
      "message": "same",
      "revId": "a29b6ceb43fb16ae80b42a379d8927c07b3419a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "31ab59c5_09500b48",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 9
      },
      "lineNbr": 3521,
      "author": {
        "id": 1165541
      },
      "writtenOn": "2017-02-24T07:34:06Z",
      "side": 1,
      "message": "same",
      "revId": "a29b6ceb43fb16ae80b42a379d8927c07b3419a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f962e91f_a92d9dbf",
        "filename": "src/libANGLE/Context.h",
        "patchSetId": 9
      },
      "lineNbr": 255,
      "author": {
        "id": 1165541
      },
      "writtenOn": "2017-02-24T07:34:06Z",
      "side": 1,
      "message": "Move vertexAttribIFormat here since these two are both to define the attrib format.",
      "revId": "a29b6ceb43fb16ae80b42a379d8927c07b3419a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fbf1bb6b_a092dde2",
        "filename": "src/libANGLE/Context.h",
        "patchSetId": 9
      },
      "lineNbr": 255,
      "author": {
        "id": 1161747
      },
      "writtenOn": "2017-02-27T03:09:19Z",
      "side": 1,
      "message": "Done\nI also move vertexAttribIPointer under vertexAttribPointer.",
      "parentUuid": "f962e91f_a92d9dbf",
      "revId": "a29b6ceb43fb16ae80b42a379d8927c07b3419a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b4d9e67a_1ce56909",
        "filename": "src/libANGLE/validationES2.cpp",
        "patchSetId": 9
      },
      "lineNbr": 3907,
      "author": {
        "id": 1165541
      },
      "writtenOn": "2017-02-24T07:34:06Z",
      "side": 1,
      "message": "Why not directly use currently Validation function and add the difference in it?  VertexAttribPointer is not ES31 new added API, so keep it here.",
      "revId": "a29b6ceb43fb16ae80b42a379d8927c07b3419a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c567a2ed_6bdd7c5e",
        "filename": "src/libANGLE/validationES2.cpp",
        "patchSetId": 9
      },
      "lineNbr": 3907,
      "author": {
        "id": 1161747
      },
      "writtenOn": "2017-02-24T08:17:42Z",
      "side": 1,
      "message": "Because there are more limits in ES3.1.\nI just refer ES3.1 SPEC: Chapter 10.3.1 Page 245:\n...\nIn addition, any of the errors defined by VertexAttrib*Format and VertexAttribBinding\nmay be generated if the parameters passed to those commands\nin the equivalent code above would generate those errors.",
      "parentUuid": "b4d9e67a_1ce56909",
      "revId": "a29b6ceb43fb16ae80b42a379d8927c07b3419a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f400004_9a988b9a",
        "filename": "src/libANGLE/validationES2.cpp",
        "patchSetId": 9
      },
      "lineNbr": 3907,
      "author": {
        "id": 1144534
      },
      "writtenOn": "2017-02-24T08:19:22Z",
      "side": 1,
      "message": "Maybe this validation function can be rewritten with the new helper funciton added in validationES31.cpp to avoid some duplicate code. Such that VertexAttribPointer and VertexAttribIPointer can share some common validations.  Also we should check if the webgl part in this validation is still available in ES31.",
      "parentUuid": "b4d9e67a_1ce56909",
      "revId": "a29b6ceb43fb16ae80b42a379d8927c07b3419a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "273e86b0_ed9e8ba8",
        "filename": "src/libANGLE/validationES2.cpp",
        "patchSetId": 9
      },
      "lineNbr": 3907,
      "author": {
        "id": 1161747
      },
      "writtenOn": "2017-02-27T13:48:08Z",
      "side": 1,
      "message": "I have added the new limits directly in this function instead of using this one.",
      "parentUuid": "b4d9e67a_1ce56909",
      "revId": "a29b6ceb43fb16ae80b42a379d8927c07b3419a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c9f22424_34863f08",
        "filename": "src/libANGLE/validationES3.cpp",
        "patchSetId": 9
      },
      "lineNbr": 2189,
      "author": {
        "id": 1144534
      },
      "writtenOn": "2017-02-24T08:19:22Z",
      "side": 1,
      "message": "nullptr",
      "revId": "a29b6ceb43fb16ae80b42a379d8927c07b3419a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "60953daf_dd19d45b",
        "filename": "src/libANGLE/validationES3.cpp",
        "patchSetId": 9
      },
      "lineNbr": 2189,
      "author": {
        "id": 1161747
      },
      "writtenOn": "2017-02-27T03:09:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c9f22424_34863f08",
      "revId": "a29b6ceb43fb16ae80b42a379d8927c07b3419a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0843b052_817ad3c0",
        "filename": "src/libANGLE/validationES3.cpp",
        "patchSetId": 9
      },
      "lineNbr": 2191,
      "author": {
        "id": 1144534
      },
      "writtenOn": "2017-02-24T08:19:22Z",
      "side": 1,
      "message": "Add error message",
      "revId": "a29b6ceb43fb16ae80b42a379d8927c07b3419a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "158111f5_3380f46b",
        "filename": "src/libANGLE/validationES3.cpp",
        "patchSetId": 9
      },
      "lineNbr": 2191,
      "author": {
        "id": 1161747
      },
      "writtenOn": "2017-02-27T03:09:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0843b052_817ad3c0",
      "revId": "a29b6ceb43fb16ae80b42a379d8927c07b3419a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b016b42d_3ccc7735",
        "filename": "src/libANGLE/validationES31.cpp",
        "patchSetId": 9
      },
      "lineNbr": 593,
      "author": {
        "id": 1144534
      },
      "writtenOn": "2017-02-24T08:19:22Z",
      "side": 1,
      "message": "It\u0027s better to use text in spec as much as possible when you rewrite old code. Here and other possible places.",
      "revId": "a29b6ceb43fb16ae80b42a379d8927c07b3419a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "406461b3_43ff50a3",
        "filename": "src/libANGLE/validationES31.cpp",
        "patchSetId": 9
      },
      "lineNbr": 593,
      "author": {
        "id": 1161747
      },
      "writtenOn": "2017-02-27T03:09:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b016b42d_3ccc7735",
      "revId": "a29b6ceb43fb16ae80b42a379d8927c07b3419a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f7899d3_cc53e882",
        "filename": "src/libANGLE/validationES31.cpp",
        "patchSetId": 9
      },
      "lineNbr": 774,
      "author": {
        "id": 1144534
      },
      "writtenOn": "2017-02-24T08:19:22Z",
      "side": 1,
      "message": "It\u0027s better to be consistent with the name for this argument.",
      "revId": "a29b6ceb43fb16ae80b42a379d8927c07b3419a9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}