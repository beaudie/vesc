{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "16c7cf00_b7d9607f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-07-15T02:41:57Z",
      "side": 1,
      "message": "Is draw to surfaceless contexts entirely forbidden? Is a no-FS draw also expected to generate an error? Maybe the problem is that the draw state check is ensuring a surface when one isn\u0027t necessary?",
      "range": {
        "startLine": 9,
        "startChar": 47,
        "endLine": 9,
        "endChar": 66
      },
      "revId": "7ac159fe915295d7ee8f33e0f807e204db7b03aa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "481031b7_17b3e0ff",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1175714
      },
      "writtenOn": "2022-07-18T23:31:45Z",
      "side": 1,
      "message": "hmm, not sure about no-FS draws (as in glDraw*); is that possible in gles 2?\n\nDo you mean if we can detect the program is only using compute stage, then we can skip the draw check? But what if the app initializes a program in surfaceless then switches or makes a surface current then uses draw?\n\nIn the particular use case this CL is designed to fix, the problem seems to be validating draw state in glValidateProgramPipelines when the app doesn\u0027t end up using the program for drawing; app ended up using glDispatchCompute later on, so it didn\u0027t do a draw.\n\nThe proximate cause of draw state validation failing on surfaceless is that the framebuffer doesn\u0027t have a color attachment.",
      "parentUuid": "16c7cf00_b7d9607f",
      "range": {
        "startLine": 9,
        "startChar": 47,
        "endLine": 9,
        "endChar": 66
      },
      "revId": "7ac159fe915295d7ee8f33e0f807e204db7b03aa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "412cef80_100351cd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-07-19T02:20:30Z",
      "side": 1,
      "message": "\u003e hmm, not sure about no-FS draws (as in glDraw*); is that possible in gles 2?\n\nIt\u0027s possible in GLES3+ at least, or GLES2 + framebuffers. Nevertheless, this API is GLES3.1+.\n\nMy point really was that maybe the real bug is that draw state is considered invalid for surfaceless, but it\u0027s probably ok if surfaceless is allowed to have a depth/stencil buffer. If surfaceless means no attachments at all, then never mind any of this ðŸ˜Š\n\nRegardless, I have no opinion on whether this draw state check should or shouldn\u0027t be here. CC Brandon.",
      "parentUuid": "481031b7_17b3e0ff",
      "range": {
        "startLine": 9,
        "startChar": 47,
        "endLine": 9,
        "endChar": 66
      },
      "revId": "7ac159fe915295d7ee8f33e0f807e204db7b03aa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}