{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c86ce2cc_bf73ee28",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2021-08-24T03:06:08Z",
      "side": 1,
      "message": "This is also one of the bugs that affecting the dynamic format switch. Because mImageUsageFlags not been set, it will think there is a usage flag change and triggers reallocation when it shouldn\u0027t.",
      "revId": "96d28be53f4d33d7827de5f3bb5c58be55b50f5e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7f6711a3_9b84d79a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-08-24T11:08:30Z",
      "side": 1,
      "message": "LGTM.. any possible regression test we could add?",
      "revId": "96d28be53f4d33d7827de5f3bb5c58be55b50f5e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "051b3603_61168d94",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-08-24T15:15:43Z",
      "side": 1,
      "message": "+1 to test, or an ASSERT that fires with an existing test.",
      "parentUuid": "7f6711a3_9b84d79a",
      "revId": "96d28be53f4d33d7827de5f3bb5c58be55b50f5e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2bc555fc_2cdcd989",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2021-08-24T15:42:59Z",
      "side": 1,
      "message": "LGTM, but I\u0027ll wait for the test for +2",
      "revId": "96d28be53f4d33d7827de5f3bb5c58be55b50f5e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "feaa6a79_2f75020f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2021-08-24T15:42:59Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "051b3603_61168d94",
      "revId": "96d28be53f4d33d7827de5f3bb5c58be55b50f5e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad154520_43a87710",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2021-08-24T16:25:01Z",
      "side": 1,
      "message": "Part reason this is okay for now is because mImageUsesageFlags is not been used much. I guess you may able study the code to write a test and it will fail with current code base. But My change for RGBA4 format will actually use mImageUsageFlags more and the following existing tests fail, due to we incoreectly recognize mImageUsageFlags change:\n\n VulkanExternalImageTest.ShouldClearOpaqueFdWithSemaphores/ES2_Vulkan\n* VulkanExternalImageTest.ShouldClearOpaqueFdWithSemaphores/ES3_Vulkan\n* VulkanExternalImageTest.ShouldClearOpaqueFdWithSemaphoresMutableNoStorage/ES2_Vulkan\n* VulkanExternalImageTest.ShouldClearOpaqueFdWithSemaphoresMutableNoStorage/ES3_Vulkan\n* VulkanExternalImageTest.ShouldClearOpaqueFdWithSemaphoresNoStorage/ES2_Vulkan\n* VulkanExternalImageTest.ShouldClearOpaqueFdWithSemaphoresNoStorage/ES3_Vulkan\n* VulkanExternalImageTest.ShouldClearOpaqueFdWithSemaphoresWithFlags/ES2_Vulkan\n* VulkanExternalImageTest.ShouldClearOpaqueFdWithSemaphoresWithFlags/ES3_Vulkan\n* VulkanExternalImageTest.ShouldDrawOpaqueFdWithSemaphores/ES2_Vulkan\n* VulkanExternalImageTest.ShouldDrawOpaqueFdWithSemaphores/ES3_Vulkan\n* VulkanExternalImageTest.WaitSemaphoresRetainsContentOpaqueFd/ES2_Vulkan\n* VulkanExternalImageTest.WaitSemaphoresRetainsContentOpaqueFd/ES3_Vulkan\n\nSo in some way you already have tests covering these.",
      "parentUuid": "feaa6a79_2f75020f",
      "revId": "96d28be53f4d33d7827de5f3bb5c58be55b50f5e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}