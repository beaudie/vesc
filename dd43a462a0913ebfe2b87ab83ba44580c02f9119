{
  "comments": [
    {
      "key": {
        "uuid": "23d6bbf3_4161b05c",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 2212,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-02-13T01:14:35Z",
      "side": 1,
      "message": "nit: can omit the \"m\" prefix for local variables\n\nalso I\u0027m a bit worried that mDrawFramebuffer can get out of sync when used outside of setupDraw. Can you instead pass the FramebufferVk pointer?",
      "range": {
        "startLine": 2212,
        "startChar": 27,
        "endLine": 2212,
        "endChar": 40
      },
      "revId": "dd43a462a0913ebfe2b87ab83ba44580c02f9119",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3b45aa8b_c7200e73",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 2212,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-02-13T01:26:13Z",
      "side": 1,
      "message": "If that happens, wouldn\u0027t this indication of a thread bug, and passing the pointer will just shift or mask the bug?",
      "parentUuid": "23d6bbf3_4161b05c",
      "range": {
        "startLine": 2212,
        "startChar": 27,
        "endLine": 2212,
        "endChar": 40
      },
      "revId": "dd43a462a0913ebfe2b87ab83ba44580c02f9119",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1df5b644_84318e95",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 2212,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-02-13T14:06:59Z",
      "side": 1,
      "message": "The pointer is only updated in ContextVk::syncState for case gl::State::DIRTY_BIT_DRAW_FRAMEBUFFER_BINDING. You can take a look yourself. I was worried about this dirty bit not getting called before a clear. I checked in Context.cpp and looks like we do sync this dirty bit on clear calls. So probably is safe. I don\u0027t think there\u0027s a threading concern. Contexts cannot be accessed multithreaded simultaneously.",
      "parentUuid": "3b45aa8b_c7200e73",
      "range": {
        "startLine": 2212,
        "startChar": 27,
        "endLine": 2212,
        "endChar": 40
      },
      "revId": "dd43a462a0913ebfe2b87ab83ba44580c02f9119",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "77ddcb3f_95d9c2a7",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 2253,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-02-13T01:14:35Z",
      "side": 1,
      "message": "nit: how about using the m variable instead of calling the get?",
      "range": {
        "startLine": 2253,
        "startChar": 12,
        "endLine": 2253,
        "endChar": 38
      },
      "revId": "dd43a462a0913ebfe2b87ab83ba44580c02f9119",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d0e31d94_32c26365",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 2253,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-02-13T01:38:33Z",
      "side": 1,
      "message": "getRenderPassCommandBuffer() may issue a flushToPrimary() call. I can issue flushToPrimrary() here and the use m variable, which seems cleaner to me.\n\nDo we have a bug here that if app is clearing the depth buffer only, the flush will not issued? It seems to me the flush is needed as long as we are clearing any of color/depth/stencil buffer.",
      "parentUuid": "77ddcb3f_95d9c2a7",
      "range": {
        "startLine": 2253,
        "startChar": 12,
        "endLine": 2253,
        "endChar": 38
      },
      "revId": "dd43a462a0913ebfe2b87ab83ba44580c02f9119",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "37f141e4_94eb0bec",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 2253,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-02-13T14:06:59Z",
      "side": 1,
      "message": "You can put the flush at the top of this function, then use the \"m\" variable for this call and the other two. That way the flush will be issued before depth/stencil correctly.",
      "parentUuid": "d0e31d94_32c26365",
      "range": {
        "startLine": 2253,
        "startChar": 12,
        "endLine": 2253,
        "endChar": 38
      },
      "revId": "dd43a462a0913ebfe2b87ab83ba44580c02f9119",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6325c893_1a97ed01",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 2712,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-02-13T14:06:59Z",
      "side": 1,
      "message": "ref",
      "range": {
        "startLine": 2712,
        "startChar": 28,
        "endLine": 2712,
        "endChar": 62
      },
      "revId": "dd43a462a0913ebfe2b87ab83ba44580c02f9119",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}