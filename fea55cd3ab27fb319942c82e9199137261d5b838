{
  "comments": [
    {
      "key": {
        "uuid": "314b24e5_1d8168fd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 7,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-08-14T14:35:35Z",
      "side": 1,
      "message": "can you include a bit more description of the change?",
      "range": {
        "startLine": 7,
        "startChar": 16,
        "endLine": 7,
        "endChar": 24
      },
      "revId": "fea55cd3ab27fb319942c82e9199137261d5b838",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "adb6c917_c1cdca59",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 7,
      "author": {
        "id": 1351342
      },
      "writtenOn": "2019-08-15T16:48:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "314b24e5_1d8168fd",
      "range": {
        "startLine": 7,
        "startChar": 16,
        "endLine": 7,
        "endChar": 24
      },
      "revId": "fea55cd3ab27fb319942c82e9199137261d5b838",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "be4dc3f4_e2605f14",
        "filename": "scripts/gen_frame_capture_replay.py",
        "patchSetId": 10
      },
      "lineNbr": 1,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-08-14T14:35:35Z",
      "side": 1,
      "message": "you\u0027re probably right that this would be better in the EP gen.",
      "revId": "fea55cd3ab27fb319942c82e9199137261d5b838",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd21b908_5dab754e",
        "filename": "scripts/gen_frame_capture_replay.py",
        "patchSetId": 10
      },
      "lineNbr": 1,
      "author": {
        "id": 1351342
      },
      "writtenOn": "2019-08-15T16:48:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "be4dc3f4_e2605f14",
      "revId": "fea55cd3ab27fb319942c82e9199137261d5b838",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "24d754fe_9b4dbf3c",
        "filename": "src/libANGLE/FrameCapture.cpp",
        "patchSetId": 10
      },
      "lineNbr": 576,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-08-14T14:35:35Z",
      "side": 1,
      "message": "this should be merged with the other call capture. you\u0027ll need to do some special actions here instead of calling CallCaptureReplay for these non-standard calls.",
      "range": {
        "startLine": 552,
        "startChar": 0,
        "endLine": 576,
        "endChar": 5
      },
      "revId": "fea55cd3ab27fb319942c82e9199137261d5b838",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "64a9fb85_5a8828ad",
        "filename": "src/libANGLE/FrameCapture.cpp",
        "patchSetId": 10
      },
      "lineNbr": 576,
      "author": {
        "id": 1351342
      },
      "writtenOn": "2019-08-15T16:48:42Z",
      "side": 1,
      "message": "Not quite following you.  I put all the special handling here and all the custom function (which with EntryPoint::Invalid) would be none op in CallCaptureReplay",
      "parentUuid": "24d754fe_9b4dbf3c",
      "range": {
        "startLine": 552,
        "startChar": 0,
        "endLine": 576,
        "endChar": 5
      },
      "revId": "fea55cd3ab27fb319942c82e9199137261d5b838",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c5fff09a_814992ff",
        "filename": "src/libANGLE/FrameCapture.cpp",
        "patchSetId": 10
      },
      "lineNbr": 576,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-08-15T17:00:31Z",
      "side": 1,
      "message": "Sorry. I just don\u0027t understand how this gets the correct client array data. You\u0027re using a reverse iterator. It seems like you\u0027ll update the data incorrectly. And if you\u0027re using a forward iterator (which I think you should) then you might as well merge this for loop with the one below where you call \"CallCaptureReplay\".",
      "parentUuid": "64a9fb85_5a8828ad",
      "range": {
        "startLine": 552,
        "startChar": 0,
        "endLine": 576,
        "endChar": 5
      },
      "revId": "fea55cd3ab27fb319942c82e9199137261d5b838",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "983dae31_d616b3d0",
        "filename": "src/libANGLE/FrameCapture.cpp",
        "patchSetId": 10
      },
      "lineNbr": 576,
      "author": {
        "id": 1351342
      },
      "writtenOn": "2019-08-15T17:38:04Z",
      "side": 1,
      "message": "Here needs to use reverse because all our client array capture are inserted right before the draw calls, and they are all after the all the `vertexAttribPointer` calls. So with reverse iterating, it gets the client array pointer in the `UpdateClientArrayPointer` (which is a capture memory) and assign to the `pointer` of `vertexAttribPointer`.  Then when replays `vertexAttribPointer`, it points to our captured memory and we can simply skip all the `UpdateClientArrayPointer` calls",
      "parentUuid": "c5fff09a_814992ff",
      "range": {
        "startLine": 552,
        "startChar": 0,
        "endLine": 576,
        "endChar": 5
      },
      "revId": "fea55cd3ab27fb319942c82e9199137261d5b838",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bf57ae1c_9cffd64a",
        "filename": "src/libANGLE/FrameCapture.cpp",
        "patchSetId": 10
      },
      "lineNbr": 576,
      "author": {
        "id": 1351342
      },
      "writtenOn": "2019-08-15T17:58:25Z",
      "side": 1,
      "message": "Ah, find the issue, if there is multiple draw call, this approach does not work, I will think about it",
      "parentUuid": "983dae31_d616b3d0",
      "range": {
        "startLine": 552,
        "startChar": 0,
        "endLine": 576,
        "endChar": 5
      },
      "revId": "fea55cd3ab27fb319942c82e9199137261d5b838",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "50b4e5c6_5ebc8546",
        "filename": "src/libANGLE/FrameCapture.cpp",
        "patchSetId": 10
      },
      "lineNbr": 576,
      "author": {
        "id": 1351342
      },
      "writtenOn": "2019-08-15T22:11:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bf57ae1c_9cffd64a",
      "range": {
        "startLine": 552,
        "startChar": 0,
        "endLine": 576,
        "endChar": 5
      },
      "revId": "fea55cd3ab27fb319942c82e9199137261d5b838",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "45d96803_d08f9205",
        "filename": "src/libANGLE/FrameCapture.cpp",
        "patchSetId": 10
      },
      "lineNbr": 580,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-08-15T17:00:31Z",
      "side": 1,
      "message": "can you call this ReplayCallCapture?",
      "range": {
        "startLine": 580,
        "startChar": 8,
        "endLine": 580,
        "endChar": 25
      },
      "revId": "fea55cd3ab27fb319942c82e9199137261d5b838",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "565cbf11_12a2e0c1",
        "filename": "src/libANGLE/FrameCapture.cpp",
        "patchSetId": 10
      },
      "lineNbr": 580,
      "author": {
        "id": 1351342
      },
      "writtenOn": "2019-08-15T17:38:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "45d96803_d08f9205",
      "range": {
        "startLine": 580,
        "startChar": 8,
        "endLine": 580,
        "endChar": 25
      },
      "revId": "fea55cd3ab27fb319942c82e9199137261d5b838",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "27b51811_9cc1700c",
        "filename": "src/libANGLE/Surface.cpp",
        "patchSetId": 10
      },
      "lineNbr": 134,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-08-14T14:35:35Z",
      "side": 1,
      "message": "reminder to revert",
      "range": {
        "startLine": 134,
        "startChar": 3,
        "endLine": 134,
        "endChar": 8
      },
      "revId": "fea55cd3ab27fb319942c82e9199137261d5b838",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d59b33f_7f256ebf",
        "filename": "src/libANGLE/frame_capture_replay_autogen.cpp",
        "patchSetId": 10
      },
      "lineNbr": 13,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-08-14T14:35:35Z",
      "side": 1,
      "message": "I don\u0027t think you need this header.",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 13,
        "endChar": 19
      },
      "revId": "fea55cd3ab27fb319942c82e9199137261d5b838",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "710a5b5f_f139e49c",
        "filename": "src/libANGLE/frame_capture_replay_autogen.cpp",
        "patchSetId": 10
      },
      "lineNbr": 13,
      "author": {
        "id": 1351342
      },
      "writtenOn": "2019-08-15T16:48:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9d59b33f_7f256ebf",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 13,
        "endChar": 19
      },
      "revId": "fea55cd3ab27fb319942c82e9199137261d5b838",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "90ece09d_cd2e5762",
        "filename": "src/libANGLE/frame_capture_replay_autogen.cpp",
        "patchSetId": 10
      },
      "lineNbr": 32,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-08-14T14:35:35Z",
      "side": 1,
      "message": "can you move this into\n\ntemplate \u003ctypename T\u003e\nT ParamCapture::getAs() const",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 32,
        "endChar": 0
      },
      "revId": "fea55cd3ab27fb319942c82e9199137261d5b838",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8421f7a0_b9304c64",
        "filename": "src/libANGLE/frame_capture_replay_autogen.cpp",
        "patchSetId": 10
      },
      "lineNbr": 32,
      "author": {
        "id": 1351342
      },
      "writtenOn": "2019-08-15T16:48:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "90ece09d_cd2e5762",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 32,
        "endChar": 0
      },
      "revId": "fea55cd3ab27fb319942c82e9199137261d5b838",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f7a54ec3_d5ed91bf",
        "filename": "src/libANGLE/frame_capture_replay_autogen.cpp",
        "patchSetId": 10
      },
      "lineNbr": 34,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-08-14T14:35:35Z",
      "side": 1,
      "message": "similar here,\n\ntemplate \u003ctypename T\u003e\nT ParamCapture::getAsPointer() const",
      "range": {
        "startLine": 34,
        "startChar": 9,
        "endLine": 34,
        "endChar": 32
      },
      "revId": "fea55cd3ab27fb319942c82e9199137261d5b838",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "21d99e67_5a20b660",
        "filename": "src/libANGLE/frame_capture_replay_autogen.cpp",
        "patchSetId": 10
      },
      "lineNbr": 34,
      "author": {
        "id": 1351342
      },
      "writtenOn": "2019-08-15T16:48:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f7a54ec3_d5ed91bf",
      "range": {
        "startLine": 34,
        "startChar": 9,
        "endLine": 34,
        "endChar": 32
      },
      "revId": "fea55cd3ab27fb319942c82e9199137261d5b838",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "508c7876_d535407c",
        "filename": "src/libANGLE/frame_capture_replay_autogen.cpp",
        "patchSetId": 10
      },
      "lineNbr": 48,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-08-14T14:35:35Z",
      "side": 1,
      "message": "same here. But do not use NoDestructor. You might have to pass a temporary buffer around. Owned by FrameCapture.",
      "range": {
        "startLine": 48,
        "startChar": 9,
        "endLine": 48,
        "endChar": 39
      },
      "revId": "fea55cd3ab27fb319942c82e9199137261d5b838",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c30dc687_6b5f8e19",
        "filename": "src/libANGLE/frame_capture_replay_autogen.cpp",
        "patchSetId": 10
      },
      "lineNbr": 48,
      "author": {
        "id": 1351342
      },
      "writtenOn": "2019-08-15T16:48:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "508c7876_d535407c",
      "range": {
        "startLine": 48,
        "startChar": 9,
        "endLine": 48,
        "endChar": 39
      },
      "revId": "fea55cd3ab27fb319942c82e9199137261d5b838",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1909572d_61636dc3",
        "filename": "src/libANGLE/frame_capture_replay_autogen.h",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-08-14T14:35:35Z",
      "side": 1,
      "message": "this file doesn\u0027t need to be auto-generated. You can even remove it entirely and move this into another file.",
      "revId": "fea55cd3ab27fb319942c82e9199137261d5b838",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d43aa9ea_40b8f301",
        "filename": "src/libANGLE/frame_capture_replay_autogen.h",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1351342
      },
      "writtenOn": "2019-08-15T16:48:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1909572d_61636dc3",
      "revId": "fea55cd3ab27fb319942c82e9199137261d5b838",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "424c66e6_9cf8fc08",
        "filename": "src/libANGLE/frame_capture_utils_autogen.h",
        "patchSetId": 10
      },
      "lineNbr": 205,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-08-14T14:35:35Z",
      "side": 1,
      "message": "can\u0027t this function just return \"T\" instead of using an out parameter?",
      "range": {
        "startLine": 205,
        "startChar": 0,
        "endLine": 205,
        "endChar": 5
      },
      "revId": "fea55cd3ab27fb319942c82e9199137261d5b838",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e5d8bd8_46eb8629",
        "filename": "src/libANGLE/frame_capture_utils_autogen.h",
        "patchSetId": 10
      },
      "lineNbr": 205,
      "author": {
        "id": 1351342
      },
      "writtenOn": "2019-08-15T16:48:42Z",
      "side": 1,
      "message": "tried, and find that compiler can not do type inference if T is the return value",
      "parentUuid": "424c66e6_9cf8fc08",
      "range": {
        "startLine": 205,
        "startChar": 0,
        "endLine": 205,
        "endChar": 5
      },
      "revId": "fea55cd3ab27fb319942c82e9199137261d5b838",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f80a921b_d3b73863",
        "filename": "src/libANGLE/frame_capture_utils_autogen.h",
        "patchSetId": 10
      },
      "lineNbr": 205,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-08-15T17:00:31Z",
      "side": 1,
      "message": "That\u0027s fine. Just explicitly use the template type.\n\nreturn GetParamVal\u003cWhatever::Type\u003e(value);",
      "parentUuid": "9e5d8bd8_46eb8629",
      "range": {
        "startLine": 205,
        "startChar": 0,
        "endLine": 205,
        "endChar": 5
      },
      "revId": "fea55cd3ab27fb319942c82e9199137261d5b838",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cecfcb82_ce8de529",
        "filename": "src/libANGLE/frame_capture_utils_autogen.h",
        "patchSetId": 10
      },
      "lineNbr": 205,
      "author": {
        "id": 1351342
      },
      "writtenOn": "2019-08-15T22:11:11Z",
      "side": 1,
      "message": "Done.\n\nThanks for the help!",
      "parentUuid": "f80a921b_d3b73863",
      "range": {
        "startLine": 205,
        "startChar": 0,
        "endLine": 205,
        "endChar": 5
      },
      "revId": "fea55cd3ab27fb319942c82e9199137261d5b838",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "91381a27_6af38fb9",
        "filename": "src/libANGLE/frame_capture_utils_autogen.h",
        "patchSetId": 10
      },
      "lineNbr": 846,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-08-14T14:35:35Z",
      "side": 1,
      "message": "same here. Can\u0027t we just return T?",
      "range": {
        "startLine": 846,
        "startChar": 0,
        "endLine": 846,
        "endChar": 5
      },
      "revId": "fea55cd3ab27fb319942c82e9199137261d5b838",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "24084c4a_7d7d989a",
        "filename": "src/libANGLE/frame_capture_utils_autogen.h",
        "patchSetId": 10
      },
      "lineNbr": 846,
      "author": {
        "id": 1351342
      },
      "writtenOn": "2019-08-15T16:48:42Z",
      "side": 1,
      "message": "It would be very hard to handle the default case if it is a non-void function, I\u0027d rather use the pointerOut if there is no performance issue.",
      "parentUuid": "91381a27_6af38fb9",
      "range": {
        "startLine": 846,
        "startChar": 0,
        "endLine": 846,
        "endChar": 5
      },
      "revId": "fea55cd3ab27fb319942c82e9199137261d5b838",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cdb7b3d7_80d75de6",
        "filename": "src/libANGLE/frame_capture_utils_autogen.h",
        "patchSetId": 10
      },
      "lineNbr": 846,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-08-15T17:00:31Z",
      "side": 1,
      "message": "Same comment. It\u0027s nicer and more consistent to explicitly specify the parameter. I\u0027d suggest we go with that design.",
      "parentUuid": "24084c4a_7d7d989a",
      "range": {
        "startLine": 846,
        "startChar": 0,
        "endLine": 846,
        "endChar": 5
      },
      "revId": "fea55cd3ab27fb319942c82e9199137261d5b838",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fdb71145_b2630fe4",
        "filename": "src/libANGLE/frame_capture_utils_autogen.h",
        "patchSetId": 10
      },
      "lineNbr": 846,
      "author": {
        "id": 1351342
      },
      "writtenOn": "2019-08-15T22:11:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cdb7b3d7_80d75de6",
      "range": {
        "startLine": 846,
        "startChar": 0,
        "endLine": 846,
        "endChar": 5
      },
      "revId": "fea55cd3ab27fb319942c82e9199137261d5b838",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}