{
  "comments": [
    {
      "key": {
        "uuid": "a86ecfe5_0579a452",
        "filename": "src/compiler/translator/ShaderStorageBlockOutputHLSL.cpp",
        "patchSetId": 9
      },
      "lineNbr": 213,
      "author": {
        "id": 1165541
      },
      "writtenOn": "2019-01-03T06:00:33Z",
      "side": 0,
      "message": "In the old method, we can directly increase the offset instead of revisiting each structure array member. So the time complexity can be O(members of the struct) instead of O(number of elements in the array * members of the struct). See Corentin\u0027s previous comment in https://chromium-review.googlesource.com/c/angle/angle/+/1278097/2/src/compiler/translator/ShaderStorageBlockOutputHLSL.cpp#79. However, in the refactor code, we are at the cost of time to reuse \u0027TraverseShaderVariables\u0027. For example, in BlockInfoVisitor::enterStructAccess, we will have a childVisitor to get the structure member offset. But we still need to revisit the nested structure in the parent visitor so that the parent visitor\u0027s encoder offset is correctly updated. Is this expected?",
      "range": {
        "startLine": 213,
        "startChar": 16,
        "endLine": 213,
        "endChar": 52
      },
      "revId": "904bb9185767d72a63eb4d1445c94c678b767b56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "66dbf812_3921081f",
        "filename": "src/compiler/translator/ShaderStorageBlockOutputHLSL.cpp",
        "patchSetId": 9
      },
      "lineNbr": 213,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2019-01-03T12:17:57Z",
      "side": 0,
      "message": "I think it is ok, the complexity is the same.",
      "parentUuid": "a86ecfe5_0579a452",
      "range": {
        "startLine": 213,
        "startChar": 16,
        "endLine": 213,
        "endChar": 52
      },
      "revId": "904bb9185767d72a63eb4d1445c94c678b767b56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b109ac34_5a15222b",
        "filename": "src/compiler/translator/ShaderStorageBlockOutputHLSL.cpp",
        "patchSetId": 9
      },
      "lineNbr": 213,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2019-01-03T12:28:47Z",
      "side": 0,
      "message": "Yeah, also think this is okay.",
      "parentUuid": "66dbf812_3921081f",
      "range": {
        "startLine": 213,
        "startChar": 16,
        "endLine": 213,
        "endChar": 52
      },
      "revId": "904bb9185767d72a63eb4d1445c94c678b767b56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "db3af1e2_18b431c7",
        "filename": "src/compiler/translator/ShaderStorageBlockOutputHLSL.cpp",
        "patchSetId": 9
      },
      "lineNbr": 213,
      "author": {
        "id": 1165541
      },
      "writtenOn": "2019-01-04T01:50:40Z",
      "side": 0,
      "message": "Sorry, I just don\u0027t understand why the complexity is the same. Maybe my above example is not appropriate. I shouldn\u0027t compare the childVisitor with the parent visitor. For the childVisitor itself, it will be called \u0027number of elements in the array\u0027 times. The only differ between the first time and left is that only in first time,[a] is true. But I think the time is still O(number of elements in the array * members of the struct), isn\u0027t it?",
      "parentUuid": "b109ac34_5a15222b",
      "range": {
        "startLine": 213,
        "startChar": 16,
        "endLine": 213,
        "endChar": 52
      },
      "revId": "904bb9185767d72a63eb4d1445c94c678b767b56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6414b75d_b4f1e43b",
        "filename": "src/compiler/translator/ShaderStorageBlockOutputHLSL.cpp",
        "patchSetId": 9
      },
      "lineNbr": 213,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2019-01-04T13:47:42Z",
      "side": 0,
      "message": "It can process a few more struct members but I don\u0027t think the runtime is a huge concern. I think it\u0027s okay.",
      "parentUuid": "db3af1e2_18b431c7",
      "range": {
        "startLine": 213,
        "startChar": 16,
        "endLine": 213,
        "endChar": 52
      },
      "revId": "904bb9185767d72a63eb4d1445c94c678b767b56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}