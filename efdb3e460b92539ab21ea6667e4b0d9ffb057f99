{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f6db507d_2ebd0874",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-11-03T19:16:38Z",
      "side": 1,
      "message": "Updated to use a frontend feature.",
      "revId": "efdb3e460b92539ab21ea6667e4b0d9ffb057f99",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "657013e3_660ee740",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2021-11-03T20:48:40Z",
      "side": 1,
      "message": "Mostly LGTM.\n\nGeneral comment:  When we emulated this format before, we had a special flag so that we\u0027d only clear it once (I think once per eglSwapBuffers) and then never write to it otherwise.  I don\u0027t see that in this CL.  If that\u0027s not done, it can lead to strange bugs like we saw with the Ragnarok game (that was semi-transparent with the Android desktop below it).",
      "revId": "efdb3e460b92539ab21ea6667e4b0d9ffb057f99",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7c49e776_2d037e35",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2021-11-03T21:35:19Z",
      "side": 1,
      "message": "I filed b/205035532 to track what formats to support in Android EGLConfig\u0027s.  It\u0027s in the internal ANGLE Buganizer component since it crosses both the Vulkan loader and ANGLE worlds, and since it\u0027s possible somebody may add proprietary information to it.",
      "revId": "efdb3e460b92539ab21ea6667e4b0d9ffb057f99",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "06a07fd3_1294190f",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.h",
        "patchSetId": 8
      },
      "lineNbr": 496,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-11-03T21:07:14Z",
      "side": 1,
      "message": "Drive-by nit: `override..` instead of `initialize...`? Presumably front-end features are already initialized.",
      "range": {
        "startLine": 496,
        "startChar": 9,
        "endLine": 496,
        "endChar": 35
      },
      "revId": "efdb3e460b92539ab21ea6667e4b0d9ffb057f99",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5fd5616f_46aab8f0",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.h",
        "patchSetId": 8
      },
      "lineNbr": 496,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-11-04T00:35:04Z",
      "side": 1,
      "message": "I\u0027m going to keep this as initializeFrontendFeatures.\n\nFor reference, see DisplayImpl which declares initializeFrontendFeatures(), and all of the various backends that override it.   This is just plumbing through that function and implementing it for the Vulkan backend.",
      "parentUuid": "06a07fd3_1294190f",
      "range": {
        "startLine": 496,
        "startChar": 9,
        "endLine": 496,
        "endChar": 35
      },
      "revId": "efdb3e460b92539ab21ea6667e4b0d9ffb057f99",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}