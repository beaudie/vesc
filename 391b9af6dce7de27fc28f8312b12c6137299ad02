{
  "comments": [
    {
      "key": {
        "uuid": "9b794741_149c75b9",
        "filename": "src/compiler/translator/SymbolTable.h",
        "patchSetId": 3
      },
      "lineNbr": 494,
      "author": {
        "id": 1003154
      },
      "writtenOn": "2016-08-18T20:44:37Z",
      "side": 1,
      "message": "Per discussion, we should assert currentLevel() \u003d\u003d GLOBAL instead. Here and below.\n\nThe atGlobalLevel() should really be renamed atGlobalScope().",
      "range": {
        "startLine": 494,
        "startChar": 15,
        "endLine": 494,
        "endChar": 28
      },
      "revId": "391b9af6dce7de27fc28f8312b12c6137299ad02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9b794741_74d9397f",
        "filename": "src/compiler/translator/SymbolTable.h",
        "patchSetId": 3
      },
      "lineNbr": 494,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2016-08-18T20:57:55Z",
      "side": 1,
      "message": "Also, this should use ANGLE\u0027s ASSERT macro, I think: src/common/debug.h .",
      "range": {
        "startLine": 494,
        "startChar": 8,
        "endLine": 494,
        "endChar": 14
      },
      "revId": "391b9af6dce7de27fc28f8312b12c6137299ad02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9b794741_b46481b5",
        "filename": "src/tests/compiler_tests/ShaderVariable_test.cpp",
        "patchSetId": 3
      },
      "lineNbr": 286,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2016-08-18T20:57:55Z",
      "side": 1,
      "message": "I was rather thinking that this should be just \"invariant v_varying;\". Of course a varying declaration inside a function is illegal. Also, I\u0027d move the definition of \"foo\" below \"varying vec4 v_varying;\".",
      "revId": "391b9af6dce7de27fc28f8312b12c6137299ad02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e8227799_35835004",
        "filename": "src/tests/compiler_tests/ShaderVariable_test.cpp",
        "patchSetId": 3
      },
      "lineNbr": 286,
      "author": {
        "id": 1144534
      },
      "writtenOn": "2016-08-18T23:50:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9b794741_b46481b5",
      "revId": "391b9af6dce7de27fc28f8312b12c6137299ad02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9b794741_d4690d8c",
        "filename": "src/tests/compiler_tests/ShaderVariable_test.cpp",
        "patchSetId": 3
      },
      "lineNbr": 289,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2016-08-18T20:57:55Z",
      "side": 1,
      "message": "I was thinking to remove this declaration.",
      "range": {
        "startLine": 289,
        "startChar": 9,
        "endLine": 289,
        "endChar": 18
      },
      "revId": "391b9af6dce7de27fc28f8312b12c6137299ad02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e8227799_557ecc0f",
        "filename": "src/tests/compiler_tests/ShaderVariable_test.cpp",
        "patchSetId": 3
      },
      "lineNbr": 289,
      "author": {
        "id": 1144534
      },
      "writtenOn": "2016-08-18T23:50:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9b794741_d4690d8c",
      "range": {
        "startLine": 289,
        "startChar": 9,
        "endLine": 289,
        "endChar": 18
      },
      "revId": "391b9af6dce7de27fc28f8312b12c6137299ad02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9b794741_d4310def",
        "filename": "src/tests/compiler_tests/ShaderVariable_test.cpp",
        "patchSetId": 3
      },
      "lineNbr": 408,
      "author": {
        "id": 1003154
      },
      "writtenOn": "2016-08-18T20:44:37Z",
      "side": 1,
      "message": "Could you please also testing \"invariant gl_Position;\" inside main function and verify the compilation fails?",
      "revId": "391b9af6dce7de27fc28f8312b12c6137299ad02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e8227799_7579c825",
        "filename": "src/tests/compiler_tests/ShaderVariable_test.cpp",
        "patchSetId": 3
      },
      "lineNbr": 408,
      "author": {
        "id": 1144534
      },
      "writtenOn": "2016-08-18T23:50:57Z",
      "side": 1,
      "message": "This compilation do fail with this change. But it also trigger ASSERT(currentLevel() \u003d\u003d GLOBAL_LEVEL) to fail. So I change the assertions to if condition.",
      "parentUuid": "9b794741_d4310def",
      "revId": "391b9af6dce7de27fc28f8312b12c6137299ad02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "08fd0b27_5e6dd59a",
        "filename": "src/tests/compiler_tests/ShaderVariable_test.cpp",
        "patchSetId": 3
      },
      "lineNbr": 408,
      "author": {
        "id": 1003154
      },
      "writtenOn": "2016-08-19T00:00:18Z",
      "side": 1,
      "message": "Then something is wrong.  I assume the ASSERT is triggered when trying to add the invariant? but that should never happen - the compiler should detect it\u0027s illegal and fail the compilation.\n\nI suggest keeping the ASSERT and file a bug on this with the failing shader.",
      "parentUuid": "e8227799_7579c825",
      "revId": "391b9af6dce7de27fc28f8312b12c6137299ad02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "08fd0b27_a7696823",
        "filename": "src/tests/compiler_tests/ShaderVariable_test.cpp",
        "patchSetId": 3
      },
      "lineNbr": 408,
      "author": {
        "id": 1144534
      },
      "writtenOn": "2016-08-19T07:30:04Z",
      "side": 1,
      "message": "The ASSERT will make debug version crash in current implementation. Since during parsing, the error is detected but parsing doesn\u0027t stop immediately. How do we handle such case?",
      "parentUuid": "08fd0b27_5e6dd59a",
      "revId": "391b9af6dce7de27fc28f8312b12c6137299ad02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}