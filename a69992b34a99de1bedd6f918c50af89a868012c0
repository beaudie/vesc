{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "08a8e1b5_2e038954",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 1531247
      },
      "writtenOn": "2023-06-09T00:06:40Z",
      "side": 1,
      "message": "https://crrev.com/c/4601875 is a WIP example of a change breaking this test",
      "revId": "a69992b34a99de1bedd6f918c50af89a868012c0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5d334eea_638f7963",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 1531247
      },
      "writtenOn": "2023-06-13T16:27:17Z",
      "side": 1,
      "message": "(resolving)",
      "parentUuid": "08a8e1b5_2e038954",
      "revId": "a69992b34a99de1bedd6f918c50af89a868012c0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ce777ddc_f356e919",
        "filename": "src/tests/capture_tests/capture_tests.py",
        "patchSetId": 15
      },
      "lineNbr": 73,
      "author": {
        "id": 1531247
      },
      "writtenOn": "2023-06-12T14:51:26Z",
      "side": 1,
      "message": "Hmm, might need to revisit this. If captured on Windows, the committed file would have CRLF? Git might auto-convert it to LF but I don\u0027t see a matching config for that in https://crsrc.org/c/third_party/angle/.gitattributes?",
      "range": {
        "startLine": 73,
        "startChar": 4,
        "endLine": 73,
        "endChar": 32
      },
      "revId": "a69992b34a99de1bedd6f918c50af89a868012c0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0905a623_9843d687",
        "filename": "src/tests/capture_tests/capture_tests.py",
        "patchSetId": 15
      },
      "lineNbr": 73,
      "author": {
        "id": 1531247
      },
      "writtenOn": "2023-06-12T21:32:40Z",
      "side": 1,
      "message": "Ugh. Looks like capture writes files using `SaveFileHelper` which sets `std::ios::binary`:\nhttps://source.chromium.org/chromium/chromium/src/+/refs/heads/main:third_party/angle/src/common/angleutils.cpp;drc\u003da956162cc04348cd6685f739096b6e344170cb54;l\u003d22\n\nCapture code seems to just use \"\\n\" for newlines. Buuut we have \"\\r\" in a few spots like shaders:\n\n```\n00000090  20 70 6f 73 69 74 69 6f  6e 3b 0d 0a 61 74 74 72  | position;..attr|\n000000b0  6f 72 64 3b 0d 0a 2f 2f  61 74 74 72 69 62 75 74  |ord;..//attribut|\n000000c0  65 20 76 65 63 34 20 63  6f 6c 6f 72 3b 0d 0a 0d  |e vec4 color;...|\n\n```\n\nor some headers (not sure how that happened as these seem to be writting using `SaveFileHelper` as well)\n\n```\n00000000  23 70 72 61 67 6d 61 20  6f 6e 63 65 0d 0a 0d 0a  |#pragma once....|\n00000020  6c 2e 68 3e 0d 0a 23 69  6e 63 6c 75 64 65 20 3c  |l.h\u003e..#include \u003c|\n00000030  63 73 74 64 69 6e 74 3e  0d 0a 0d 0a 2f 2f 20 50  |cstdint\u003e....// P|\n00000070  0d 0a 0d 0a 2f 2f 20 50  72 69 76 61 74 65 20 46  |....// Private F|\n00000080  75 6e 63 74 69 6f 6e 73  0d 0a 0d 0a 76 6f 69 64  |unctions....void|\n\n```",
      "parentUuid": "ce777ddc_f356e919",
      "range": {
        "startLine": 73,
        "startChar": 4,
        "endLine": 73,
        "endChar": 32
      },
      "revId": "a69992b34a99de1bedd6f918c50af89a868012c0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "722be3b8_926ee09f",
        "filename": "src/tests/capture_tests/capture_tests.py",
        "patchSetId": 15
      },
      "lineNbr": 73,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-06-12T21:36:05Z",
      "side": 1,
      "message": "I thought that was supposed to be stripped away? https://chromium-review.googlesource.com/c/angle/angle/+/4159055",
      "parentUuid": "0905a623_9843d687",
      "range": {
        "startLine": 73,
        "startChar": 4,
        "endLine": 73,
        "endChar": 32
      },
      "revId": "a69992b34a99de1bedd6f918c50af89a868012c0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "39d236a2_d6304991",
        "filename": "src/tests/capture_tests/capture_tests.py",
        "patchSetId": 15
      },
      "lineNbr": 73,
      "author": {
        "id": 1531247
      },
      "writtenOn": "2023-06-12T21:43:20Z",
      "side": 1,
      "message": "Yeah.. probably just older traces (so almost all of them, heh, given how recent that CL is). I had to add handling to this test to pass Win CI though, I\u0027ll double check what was going on there.",
      "parentUuid": "722be3b8_926ee09f",
      "range": {
        "startLine": 73,
        "startChar": 4,
        "endLine": 73,
        "endChar": 32
      },
      "revId": "a69992b34a99de1bedd6f918c50af89a868012c0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc31d07a_954f3250",
        "filename": "src/tests/capture_tests/capture_tests.py",
        "patchSetId": 15
      },
      "lineNbr": 73,
      "author": {
        "id": 1531247
      },
      "writtenOn": "2023-06-13T00:01:11Z",
      "side": 1,
      "message": "Ah, of course, git CRLF conversion messes up this case as well, just differently. Files are written locally with only LF - Linux or Windows. The `expected/` files though come from the source tree - so they get converted to CRLF by git checkout. If we were to --overwrite-expected them with (the captured) LF, git diff would show these files as different. So --overwrite-expected would have to copy with LF-\u003eCRLF conversion to make git on Windows (with \"* text\u003dauto\" in our .gitattributes) happy \u003e_\u003c",
      "parentUuid": "39d236a2_d6304991",
      "range": {
        "startLine": 73,
        "startChar": 4,
        "endLine": 73,
        "endChar": 32
      },
      "revId": "a69992b34a99de1bedd6f918c50af89a868012c0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0b65f484_6ffc8440",
        "filename": "src/tests/capture_tests/capture_tests.py",
        "patchSetId": 15
      },
      "lineNbr": 73,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-06-13T03:27:03Z",
      "side": 1,
      "message": "Why not fix our `.gitattribute` to make files under `expected/` be `eol\u003dLF`?",
      "parentUuid": "fc31d07a_954f3250",
      "range": {
        "startLine": 73,
        "startChar": 4,
        "endLine": 73,
        "endChar": 32
      },
      "revId": "a69992b34a99de1bedd6f918c50af89a868012c0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3393badd_5c820f58",
        "filename": "src/tests/capture_tests/capture_tests.py",
        "patchSetId": 15
      },
      "lineNbr": 73,
      "author": {
        "id": 1531247
      },
      "writtenOn": "2023-06-13T13:40:50Z",
      "side": 1,
      "message": "Huh. No idea why I hadn\u0027t thought of adding a line to .gitattributes, thanks Shabi.",
      "parentUuid": "0b65f484_6ffc8440",
      "range": {
        "startLine": 73,
        "startChar": 4,
        "endLine": 73,
        "endChar": 32
      },
      "revId": "a69992b34a99de1bedd6f918c50af89a868012c0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0b19f8b7_51a8546e",
        "filename": "src/tests/capture_tests/capture_tests.py",
        "patchSetId": 15
      },
      "lineNbr": 73,
      "author": {
        "id": 1531247
      },
      "writtenOn": "2023-06-13T16:26:54Z",
      "side": 1,
      "message": "Done. Seems to be working great.",
      "parentUuid": "3393badd_5c820f58",
      "range": {
        "startLine": 73,
        "startChar": 4,
        "endLine": 73,
        "endChar": 32
      },
      "revId": "a69992b34a99de1bedd6f918c50af89a868012c0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}