{
  "comments": [
    {
      "key": {
        "uuid": "07f3f1e8_d3d68e5f",
        "filename": "src/libANGLE/renderer/vulkan/RenderbufferVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 97,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-04-01T14:41:28Z",
      "side": 1,
      "message": "Couple things here:\n\n- the extension is robust resource init rather than webgl\n- no extra tracking is needed for robust init, you can use initializeContents\n- we should use initializeContents for robust init to be consistent.\n- for the emulated channels it does make sense to clear it immediately. Both can perhaps call a helper function.",
      "range": {
        "startLine": 95,
        "startChar": 9,
        "endLine": 97,
        "endChar": 38
      },
      "revId": "520c7b6a1d45aa9f213a118bec49ba04c92a0d1e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4432e0e3_7438f746",
        "filename": "src/libANGLE/renderer/vulkan/RenderbufferVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 97,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-04-02T17:52:43Z",
      "side": 1,
      "message": "- Fixed\n- The tracking would be for deferring the clear to renderpass begin time. Removed the comment, as it was more of a thinking-out-load.\n- Done.\n- Greatly simplified initializeContents which basically forwards the call to ImageHelper. This calls the same function in ImageHelper.",
      "parentUuid": "07f3f1e8_d3d68e5f",
      "range": {
        "startLine": 95,
        "startChar": 9,
        "endLine": 97,
        "endChar": 38
      },
      "revId": "520c7b6a1d45aa9f213a118bec49ba04c92a0d1e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ffa84ade_ecd833aa",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 40,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2019-03-27T19:02:56Z",
      "side": 1,
      "message": "nit: would be nice to explicitly put zeros here for clarity.",
      "revId": "520c7b6a1d45aa9f213a118bec49ba04c92a0d1e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ef7db54_5e469207",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 40,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-04-02T17:52:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ffa84ade_ecd833aa",
      "revId": "520c7b6a1d45aa9f213a118bec49ba04c92a0d1e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cff676cf_46deee54",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 1237,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-04-01T15:12:09Z",
      "side": 1,
      "message": "Jamie, your claim that the image is always valid at this point doesn\u0027t seem to always hold. The windows failure in this patchset is due to an assert in `getBaseLevelDesc()`:\n\n    const ImageDesc \u0026TextureState::getBaseLevelDesc() const\n    {\n        ASSERT(mType !\u003d TextureType::CubeMap || isCubeComplete());\n        return getImageDesc(getBaseImageTarget(), getEffectiveBaseLevel());\n    }\n\nThat is, `initializeContents` is being called on a non-cube-complete cubemap.",
      "revId": "520c7b6a1d45aa9f213a118bec49ba04c92a0d1e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c701951_bc1e8dd7",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 1237,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-04-01T15:12:48Z",
      "side": 1,
      "message": "Which test?",
      "parentUuid": "cff676cf_46deee54",
      "revId": "520c7b6a1d45aa9f213a118bec49ba04c92a0d1e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "23785124_4541cb65",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 1237,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-04-01T15:14:05Z",
      "side": 1,
      "message": "gpu_tests.webgl_conformance_integration_test.WebGLConformanceIntegrationTest.WebglConformance_conformance_textures_misc_texture_sub_image_cube_maps\n\nThe call that leads to this is `glTexSubImage2DRobustANGLE` (You previously said that when we reach here, we must be right before a draw call)",
      "parentUuid": "cff676cf_46deee54",
      "revId": "520c7b6a1d45aa9f213a118bec49ba04c92a0d1e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9bfe1287_4643da77",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 1237,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-04-01T16:39:59Z",
      "side": 1,
      "message": "Drat. You\u0027re right. I forgot about subimage. My suggestion offline was to use a new \"UpdateSource\" in SubresourceUpdate to stage clears.",
      "parentUuid": "23785124_4541cb65",
      "revId": "520c7b6a1d45aa9f213a118bec49ba04c92a0d1e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "47ea766f_b667a7f8",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 1383,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-04-01T15:06:50Z",
      "side": 1,
      "message": "nit: also this could possibly be a helper?",
      "range": {
        "startLine": 1371,
        "startChar": 5,
        "endLine": 1383,
        "endChar": 9
      },
      "revId": "520c7b6a1d45aa9f213a118bec49ba04c92a0d1e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}