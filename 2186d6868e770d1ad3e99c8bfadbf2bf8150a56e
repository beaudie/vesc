{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "a8451afd_fa84268b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 3474762
      },
      "writtenOn": "2024-06-17T13:39:35Z",
      "side": 1,
      "message": "according to Kimmo this is supposed to fail due to `EXPECT_FALSE(hasPixmapExt());` in ImageTest (src/tests/gl_tests/ImageTest.cpp). That makes sense I suppose; I did run the unittests but I guess this one is not included in that since it relies on native platform code (which cannot be made to work in my container).\n\nThat said, I am not sure if the test itself makes sense to me. If I\u0027m reading it correctly, Linux is covered by the final `else` branch? How should I change the test?",
      "revId": "2186d6868e770d1ad3e99c8bfadbf2bf8150a56e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2dc2fa0c_d1c30356",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1449558
      },
      "writtenOn": "2024-06-18T06:42:46Z",
      "side": 1,
      "message": "\u003e I did run the unittests but I guess this one is not included in that since it relies on native platform code (which cannot be made to work in my container).\n\nMaybe the first task is to figure out why the code is not being run. Maybe you ran part of the tests but not everything? This might be run by angle_end2end_tests. In general when modifying the code, you should run the tests.\n\nhttps://chromium.googlesource.com/angle/angle/+/HEAD/doc/ContributingCode.md\n\n\u003e That said, I am not sure if the test itself makes sense to me.\n\nThe library doesn\u0027t support the pixmap extension today. The test verifies that the library says that it does not support the pixmap extension.\n\n\u003e If I\u0027m reading it correctly, Linux is covered by the final else branch? How should I change the test? \n\nIf you make the library support the pixmap extension, you add the tests testing this feature you add. \"Now that the library claims pixmap extension is supported, this should work, this should work, this should cause errors, this edge-case should work, ...\"",
      "parentUuid": "a8451afd_fa84268b",
      "revId": "2186d6868e770d1ad3e99c8bfadbf2bf8150a56e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "af1e52a6_fc809426",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1449558
      },
      "writtenOn": "2024-06-18T06:45:07Z",
      "side": 1,
      "message": "\u003e it relies on native platform code (which cannot be made to work in my container).\n\nIn general, I do not think we should add any code that the author themselves are not able to run. So if this is the scenario, let\u0027s not do it. The code has to be runnable and testable in some accessible configuration.",
      "parentUuid": "2dc2fa0c_d1c30356",
      "revId": "2186d6868e770d1ad3e99c8bfadbf2bf8150a56e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b669ad70_49821275",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 3474762
      },
      "writtenOn": "2024-06-18T09:38:07Z",
      "side": 1,
      "message": "i\u0027m talking specifically about those unittests (the code itself works; it\u0027s a part of the webkit build for the board we are targeting, and we do have webgl w/ angle working there)\n\nto run the end2end tests, i\u0027d have to set up some more stuff...",
      "parentUuid": "af1e52a6_fc809426",
      "revId": "2186d6868e770d1ad3e99c8bfadbf2bf8150a56e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e3773c93_99b0d025",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 3474762
      },
      "writtenOn": "2024-06-19T10:38:10Z",
      "side": 1,
      "message": "i figured out a way to run things but:\n\n```\n[----------] 8 tests from ImageTest\n[ RUN      ] ImageTest.ANGLEExtensionAvailability/ES2_OpenGL\n[       OK ] ImageTest.ANGLEExtensionAvailability/ES2_OpenGL (101 ms)\n[ RUN      ] ImageTest.ANGLEExtensionAvailability/ES2_Vulkan\n[       OK ] ImageTest.ANGLEExtensionAvailability/ES2_Vulkan (105 ms)\n[ RUN      ] ImageTest.ANGLEExtensionAvailability/ES2_Vulkan_SwiftShader\n[       OK ] ImageTest.ANGLEExtensionAvailability/ES2_Vulkan_SwiftShader (89 ms)\n[ RUN      ] ImageTest.ANGLEExtensionAvailability/ES2_Vulkan_SwiftShader_EnableParallelCompileAndLink\n[       OK ] ImageTest.ANGLEExtensionAvailability/ES2_Vulkan_SwiftShader_EnableParallelCompileAndLink (114 ms)\n[ RUN      ] ImageTest.ANGLEExtensionAvailability/ES3_OpenGL\n[       OK ] ImageTest.ANGLEExtensionAvailability/ES3_OpenGL (73 ms)\n[ RUN      ] ImageTest.ANGLEExtensionAvailability/ES3_Vulkan\n[       OK ] ImageTest.ANGLEExtensionAvailability/ES3_Vulkan (112 ms)\n[ RUN      ] ImageTest.ANGLEExtensionAvailability/ES3_Vulkan_SwiftShader\n[       OK ] ImageTest.ANGLEExtensionAvailability/ES3_Vulkan_SwiftShader (141 ms)\n[ RUN      ] ImageTest.ANGLEExtensionAvailability/ES3_Vulkan_EnableParallelCompileAndLink\n[       OK ] ImageTest.ANGLEExtensionAvailability/ES3_Vulkan_EnableParallelCompileAndLink (152 ms)\n[----------] 8 tests from ImageTest (891 ms total)\n```\n\nguess it needs further investigation...",
      "parentUuid": "b669ad70_49821275",
      "revId": "2186d6868e770d1ad3e99c8bfadbf2bf8150a56e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "be9baaae_8ad514ce",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 3474762
      },
      "writtenOn": "2024-06-26T14:07:11Z",
      "side": 1,
      "message": "I looked into this further, it seems ImageTest.ANGLEExtensionAvailability does not use the rest of the code in this patch at all; instead you have:\n\n```\n    bool hasPixmapExt() const\n    {\n        return IsEGLDisplayExtensionEnabled(getEGLWindow()-\u003egetDisplay(), kPixmapExt);\n    }\n```\n\nwhich calls the function in the test platform code:\n\n```\nbool IsEGLDisplayExtensionEnabled(EGLDisplay display, const std::string \u0026extName)\n{\n    return CheckExtensionExists(eglQueryString(display, EGL_EXTENSIONS), extName);\n}\n```\n\nThis directly parses the output of `eglQueryString`. When comparing the outputs to `eglinfo` output on my machine, the available extensions match the extensions for \"Wayland platform\", which makes sense and indeed does not have the pixmap extension. However, the pixmap extension is present in \"GBM platform\" as well as \"X11 platform\".",
      "parentUuid": "e3773c93_99b0d025",
      "revId": "2186d6868e770d1ad3e99c8bfadbf2bf8150a56e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1b118be8_86356396",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1449558
      },
      "writtenOn": "2024-06-28T18:34:40Z",
      "side": 1,
      "message": "Ok. I may or may not have understood completely.\nTo put the question the other way:\nAre you alle to write any sort of test that is runnable with angle end2end runner, exercising your added code?",
      "parentUuid": "be9baaae_8ad514ce",
      "revId": "2186d6868e770d1ad3e99c8bfadbf2bf8150a56e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6f17cf4f_55dc40ac",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1449558
      },
      "writtenOn": "2024-06-28T18:34:40Z",
      "side": 1,
      "message": "Geoff, does esoteric platform extensions typically require any tests to land the patch?",
      "revId": "2186d6868e770d1ad3e99c8bfadbf2bf8150a56e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "573be3d4_a4357c40",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1546942
      },
      "writtenOn": "2024-07-26T05:08:00Z",
      "side": 1,
      "message": "This change needs an end2end test that at a minimum creates and binds a pixmap on platforms that support it.",
      "revId": "2186d6868e770d1ad3e99c8bfadbf2bf8150a56e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1d0f3a86_9e45893e",
        "filename": "src/libANGLE/renderer/gl/egl/DmaBufImageSiblingEGL.cpp",
        "patchSetId": 1
      },
      "lineNbr": 125,
      "author": {
        "id": 1546942
      },
      "writtenOn": "2024-07-26T05:08:00Z",
      "side": 1,
      "message": "Why is this code not its own PixmapImageSiblingEGL.cpp file?",
      "revId": "2186d6868e770d1ad3e99c8bfadbf2bf8150a56e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bbc6765a_55ff23a1",
        "filename": "src/libANGLE/renderer/gl/egl/DmaBufImageSiblingEGL.h",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 1546942
      },
      "writtenOn": "2024-07-26T05:08:00Z",
      "side": 1,
      "message": "Why is this code not its own PixmapImageSiblingEGL.h file?",
      "revId": "2186d6868e770d1ad3e99c8bfadbf2bf8150a56e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f505fd3f_5c1cc137",
        "filename": "src/libANGLE/validationEGL.cpp",
        "patchSetId": 1
      },
      "lineNbr": 3532,
      "author": {
        "id": 1546942
      },
      "writtenOn": "2024-07-26T05:08:00Z",
      "side": 1,
      "message": "This error message needs updating to reflect the new constraints upon target.",
      "revId": "2186d6868e770d1ad3e99c8bfadbf2bf8150a56e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}