{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "8d931118_482a4f38",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1184662
      },
      "writtenOn": "2024-01-23T21:29:11Z",
      "side": 1,
      "message": "I am just adding comments for discussion points.",
      "revId": "4b67e65837b587e204f94b337a4b6ca8d87259f2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c98d59a3_9d5270a7",
        "filename": "BUILD.gn",
        "patchSetId": 2
      },
      "lineNbr": 45,
      "author": {
        "id": 1184662
      },
      "writtenOn": "2024-01-23T21:29:11Z",
      "side": 1,
      "message": "This is really the main set of changes with the *.gn files: replace the `angle_is_winuwp` occurrences with `angle_is_winuwp \u0026| angle_is_winappsdk`. The only difference between UWP, WinUI and Win32 is that WinUI is Win32, but using UWP PIs.",
      "revId": "4b67e65837b587e204f94b337a4b6ca8d87259f2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "abbfece0_e3eb1cf7",
        "filename": "BUILD.gn",
        "patchSetId": 2
      },
      "lineNbr": 45,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-01-24T15:04:22Z",
      "side": 1,
      "message": "Would it be easier if `angle_is_winuwp` is true if `angle_is_winappsdk` is, so as far as gn is concerned they\u0027d be mostly the same? That aligns with the CL\u0027s description too:\n\n\u003e To reduce the set of changes, and because it is\n\u003e functionally the same, a Windows App SDK build is\n\u003e basically a UWP build, but with an extra define\n\nSee comment in the angle.gni file",
      "parentUuid": "c98d59a3_9d5270a7",
      "revId": "4b67e65837b587e204f94b337a4b6ca8d87259f2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8ec00843_93900a0e",
        "filename": "BUILD.gn",
        "patchSetId": 2
      },
      "lineNbr": 45,
      "author": {
        "id": 1184662
      },
      "writtenOn": "2024-01-26T20:51:20Z",
      "side": 1,
      "message": "Good idea. Done.",
      "parentUuid": "abbfece0_e3eb1cf7",
      "revId": "4b67e65837b587e204f94b337a4b6ca8d87259f2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "509aac14_6d22da50",
        "filename": "src/libANGLE/renderer/d3d/BUILD.gn",
        "patchSetId": 2
      },
      "lineNbr": 67,
      "author": {
        "id": 1184662
      },
      "writtenOn": "2024-01-23T21:29:11Z",
      "side": 1,
      "message": "This is really a bit of a question. Right now, I am basically \"assuming\" that people that want WinUI will first run the preparation steps and place the results into the `third_party/WindowsAppSDK` folder.\n\nI could write a python script, but what do you folks think? The steps would be:\n\n1. Download the WinUI NuGet: https://www.nuget.org/packages/Microsoft.WindowsAppSdk\n2. Run `winmdidl` tool on all the *.winmd files in the NuGet to generate the *.idl\n3. Run the `midlrt` tool on all the *.idl files to generate the *.h files we actually want\n4. Copy all the *.h into the include folder\n5. Copy all the *.lib into the lib/\u003ccpu\u003e folder",
      "revId": "4b67e65837b587e204f94b337a4b6ca8d87259f2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f0edb603_6951b62d",
        "filename": "src/libANGLE/renderer/d3d/BUILD.gn",
        "patchSetId": 2
      },
      "lineNbr": 67,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-01-24T15:04:22Z",
      "side": 1,
      "message": "Typically we have this stuff sorted out by Chromium folks and we pull the SDK through gclient (if not automatically done by gclient, by specifying something in the DEPS file).\n\nI\u0027ll have to ping some people ( @brucedawson@chromium.org ) to see what we can do about this. Until then, I personally won\u0027t lose any sleep if this lands and there are instructions for this until Chromium cares (if ever).\n\nCould you please update `doc/DevSetup.md` with these instructions?",
      "parentUuid": "509aac14_6d22da50",
      "revId": "4b67e65837b587e204f94b337a4b6ca8d87259f2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9edafe80_56a73dcd",
        "filename": "src/libANGLE/renderer/d3d/BUILD.gn",
        "patchSetId": 2
      },
      "lineNbr": 67,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2024-01-24T16:21:34Z",
      "side": 1,
      "message": "The sdk directory could be turned into a variable (with whatever default you like) in a declare_args block. Then it can be pointed at any directory you want when doing `gn args`. The steps you describe could be a python script or build indstructions, I don\u0027t have a preference.",
      "parentUuid": "f0edb603_6951b62d",
      "revId": "4b67e65837b587e204f94b337a4b6ca8d87259f2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "542b1249_f62f01dd",
        "filename": "src/libANGLE/renderer/d3d/BUILD.gn",
        "patchSetId": 2
      },
      "lineNbr": 67,
      "author": {
        "id": 1184662
      },
      "writtenOn": "2024-01-26T20:51:20Z",
      "side": 1,
      "message": "Thanks for the idea of the arg to pass the path of files. I did that and will update the docs - or write a script soon.",
      "parentUuid": "9edafe80_56a73dcd",
      "revId": "4b67e65837b587e204f94b337a4b6ca8d87259f2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1eaff91c_a6555b30",
        "filename": "src/libANGLE/renderer/d3d/BUILD.gn",
        "patchSetId": 2
      },
      "lineNbr": 67,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-01-29T18:18:50Z",
      "side": 1,
      "message": "The change is good to go, just needs an update to docs.",
      "parentUuid": "542b1249_f62f01dd",
      "revId": "4b67e65837b587e204f94b337a4b6ca8d87259f2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dcef185e_2e33935d",
        "filename": "src/libANGLE/renderer/d3d/BUILD.gn",
        "patchSetId": 2
      },
      "lineNbr": 67,
      "author": {
        "id": 1184662
      },
      "writtenOn": "2024-01-29T22:17:38Z",
      "side": 1,
      "message": "I wrote a script (my first, AI aided, python script) so devs can run and not do all the work. But may not be the perfect-est. I also updated the docs with WinUI and a tip to use the script.",
      "parentUuid": "1eaff91c_a6555b30",
      "revId": "4b67e65837b587e204f94b337a4b6ca8d87259f2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1fbca786_9207a609",
        "filename": "src/libANGLE/renderer/d3d/d3d11/winrt/CoreWindowNativeWindow.cpp",
        "patchSetId": 2
      },
      "lineNbr": 216,
      "author": {
        "id": 1184662
      },
      "writtenOn": "2024-01-23T21:29:11Z",
      "side": 1,
      "message": "The `DisplayProperties` API was deprecated in Windows 10 and the recommendation is to use `DisplayInformation` from Windows 10:\n\nhttps://learn.microsoft.com/uwp/api/windows.graphics.display.displayproperties",
      "revId": "4b67e65837b587e204f94b337a4b6ca8d87259f2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8b66401f_ed2701ad",
        "filename": "src/libANGLE/renderer/d3d/d3d11/winrt/CoreWindowNativeWindow.cpp",
        "patchSetId": 2
      },
      "lineNbr": 216,
      "author": {
        "id": 1184662
      },
      "writtenOn": "2024-01-26T20:51:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1fbca786_9207a609",
      "revId": "4b67e65837b587e204f94b337a4b6ca8d87259f2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d127f4bd_17383767",
        "filename": "src/libANGLE/renderer/d3d/d3d11/winrt/SwapChainPanelNativeWindow.cpp",
        "patchSetId": 2
      },
      "lineNbr": 49,
      "author": {
        "id": 1184662
      },
      "writtenOn": "2024-01-23T21:29:11Z",
      "side": 1,
      "message": "This is the new way now for some reason. `CoreDispatcher` is not how things are done in WinUI, `DispatcherQueue` is:\n\nhttps://learn.microsoft.com/en-us/windows/apps/windows-app-sdk/migrate-to-windows-app-sdk/guides/threading#change-windowsuicorecoredispatcher-to-microsoftuidispatchingdispatcherqueue",
      "revId": "4b67e65837b587e204f94b337a4b6ca8d87259f2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0eeb372f_7732d7fc",
        "filename": "src/libANGLE/renderer/d3d/d3d11/winrt/SwapChainPanelNativeWindow.cpp",
        "patchSetId": 2
      },
      "lineNbr": 49,
      "author": {
        "id": 1184662
      },
      "writtenOn": "2024-01-26T20:51:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d127f4bd_17383767",
      "revId": "4b67e65837b587e204f94b337a4b6ca8d87259f2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}