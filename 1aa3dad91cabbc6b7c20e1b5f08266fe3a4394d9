{
  "comments": [
    {
      "key": {
        "uuid": "af6ec3c9_f7a748db",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-07-10T05:39:05Z",
      "side": 1,
      "message": "Looks good.",
      "revId": "1aa3dad91cabbc6b7c20e1b5f08266fe3a4394d9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cedfec91_922c528c",
        "filename": "src/libANGLE/renderer/vulkan/ProgramVk.cpp",
        "patchSetId": 12
      },
      "lineNbr": 793,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-07-10T05:39:05Z",
      "side": 1,
      "message": "Does this need to happen every time or can it be moved to before the loop executes?",
      "revId": "1aa3dad91cabbc6b7c20e1b5f08266fe3a4394d9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f4a22b7_e0d9ed1b",
        "filename": "src/libANGLE/renderer/vulkan/ProgramVk.cpp",
        "patchSetId": 12
      },
      "lineNbr": 793,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-07-10T16:50:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cedfec91_922c528c",
      "revId": "1aa3dad91cabbc6b7c20e1b5f08266fe3a4394d9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "380499a3_8e0f48f2",
        "filename": "src/libANGLE/renderer/vulkan/ProgramVk.cpp",
        "patchSetId": 12
      },
      "lineNbr": 820,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-07-10T05:39:05Z",
      "side": 1,
      "message": "I think this block should be converted from a while loop to just a normal if-else to simplify things and prevent any possibilities of an infinite loop.   I think this should be equivalent:\n\n    // Need to do this before returning?\n    mDefaultUniformStorage.releaseInFlightBuffersToResourceUseList(contextVk);\n\n    requiredSpace \u003d calcUniformUpdateRequiredSpace(contextVk, glExecutable, offsets);\n    if (!requiredSpace)\n    {\n        return angle::Result::Continue;\n    }\n\n    // Allocate space from dynamicBuffer. Always try to allocate from the current buffer first.\n    // If that failed, we deal with fall out and try again.\n    bool allocatedFromCurrentBuffer \u003d mDefaultUniformStorage.tryAllocateFromCurrentBuffer(\n        requiredSpace, \u0026bufferData, \u0026bufferOffset);\n\n    if (!allocatedFromCurrentBuffer)\n    {\n        for (const gl::ShaderType shaderType : glExecutable.getLinkedShaderStages())\n        {\n            if (!mDefaultUniformBlocksDirty[shaderType] \u0026\u0026\n                !mDefaultUniformBlocks[shaderType].uniformData.empty())\n            {\n                mDefaultUniformBlocksDirty.set(shaderType);\n            }\n        }\n\n        requiredSpace \u003d calcUniformUpdateRequiredSpace(contextVk, glExecutable, offsets);\n        ANGLE_TRY(mDefaultUniformStorage.allocate(contextVk, requiredSpace, \u0026bufferData,\n                                                  nullptr, \u0026bufferOffset,\n                                                  \u0026anyNewBufferAllocated));\n        ASSERT(anyNewBufferAllocated);\n    }",
      "range": {
        "startLine": 784,
        "startChar": 0,
        "endLine": 820,
        "endChar": 20
      },
      "revId": "1aa3dad91cabbc6b7c20e1b5f08266fe3a4394d9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fd76223d_9086d290",
        "filename": "src/libANGLE/renderer/vulkan/ProgramVk.cpp",
        "patchSetId": 12
      },
      "lineNbr": 820,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-07-10T16:17:37Z",
      "side": 1,
      "message": "Absolutely. I was doing this try to avoid duplicate code of calcUniformUpdateRequiredSpace and allocate. But since now the two allocate are different, so make more sense to just unroll it. Some time even though code gets duplicate, it makes easier to read.",
      "parentUuid": "380499a3_8e0f48f2",
      "range": {
        "startLine": 784,
        "startChar": 0,
        "endLine": 820,
        "endChar": 20
      },
      "revId": "1aa3dad91cabbc6b7c20e1b5f08266fe3a4394d9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e6045a9d_a5852a14",
        "filename": "src/libANGLE/renderer/vulkan/ProgramVk.cpp",
        "patchSetId": 12
      },
      "lineNbr": 820,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-07-10T16:50:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fd76223d_9086d290",
      "range": {
        "startLine": 784,
        "startChar": 0,
        "endLine": 820,
        "endChar": 20
      },
      "revId": "1aa3dad91cabbc6b7c20e1b5f08266fe3a4394d9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c65ef1c0_20f41b11",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 12
      },
      "lineNbr": 975,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-07-10T16:17:37Z",
      "side": 1,
      "message": "change to allocateFromCurrentBuffer(). I don\u0027t think try is needed.",
      "range": {
        "startLine": 975,
        "startChar": 20,
        "endLine": 975,
        "endChar": 48
      },
      "revId": "1aa3dad91cabbc6b7c20e1b5f08266fe3a4394d9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e1d57f03_4a067968",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 12
      },
      "lineNbr": 975,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-07-10T16:50:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c65ef1c0_20f41b11",
      "range": {
        "startLine": 975,
        "startChar": 20,
        "endLine": 975,
        "endChar": 48
      },
      "revId": "1aa3dad91cabbc6b7c20e1b5f08266fe3a4394d9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bad74cd8_9556e911",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 12
      },
      "lineNbr": 992,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-07-10T05:39:05Z",
      "side": 1,
      "message": "Please add:\n    ASSERT(ptrOut);\n    ASSERT(offsetOut);",
      "revId": "1aa3dad91cabbc6b7c20e1b5f08266fe3a4394d9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "80ccfed5_4fc18318",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 12
      },
      "lineNbr": 992,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-07-10T16:50:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bad74cd8_9556e911",
      "revId": "1aa3dad91cabbc6b7c20e1b5f08266fe3a4394d9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ffa35170_2763ffb0",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 12
      },
      "lineNbr": 993,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-07-10T05:39:05Z",
      "side": 1,
      "message": "Looks like we get to skip a redundant map() call that was occurring before too, which is nice.",
      "revId": "1aa3dad91cabbc6b7c20e1b5f08266fe3a4394d9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}