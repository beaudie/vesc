{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "fb2e363e_7ac85be9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2020-12-11T20:58:07Z",
      "side": 1,
      "message": "Note: see https://bugs.chromium.org/p/chromium/issues/detail?id\u003d974219#c91 for information about how to get similar functionality into production Chrome using the sandbox.\n",
      "revId": "8e225d6476888ab08b403f0e6db37ce03c23b7db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d564281a_1fcf1e8a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1374244
      },
      "writtenOn": "2020-12-12T06:05:51Z",
      "side": 1,
      "message": "i cannot view this link",
      "parentUuid": "fb2e363e_7ac85be9",
      "revId": "8e225d6476888ab08b403f0e6db37ce03c23b7db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "24ed5f03_5402b8fd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-12-12T18:04:22Z",
      "side": 1,
      "message": "LGTM, but one request.",
      "revId": "8e225d6476888ab08b403f0e6db37ce03c23b7db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0825d796_99d42556",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1374244
      },
      "writtenOn": "2020-12-15T09:31:36Z",
      "side": 1,
      "message": "I\u0027m just curious, are you going to add similar work-around to Chrome also?\nSince WebGL testing might encounter the same hanging issues using Metal back-end in future.",
      "parentUuid": "d564281a_1fcf1e8a",
      "revId": "8e225d6476888ab08b403f0e6db37ce03c23b7db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "04837ff3_3364897a",
        "filename": "src/tests/angle_deqp_tests_main.cpp",
        "patchSetId": 8
      },
      "lineNbr": 25,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-12-12T18:04:22Z",
      "side": 1,
      "message": "Can you move this into TestSuite::TestSuite? Then we\u0027re set on every test target in ANGLE.",
      "range": {
        "startLine": 25,
        "startChar": 11,
        "endLine": 25,
        "endChar": 34
      },
      "revId": "8e225d6476888ab08b403f0e6db37ce03c23b7db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1a14bbe1_db3fc03d",
        "filename": "src/tests/angle_deqp_tests_main.cpp",
        "patchSetId": 8
      },
      "lineNbr": 25,
      "author": {
        "id": 1374244
      },
      "writtenOn": "2020-12-13T08:20:04Z",
      "side": 1,
      "message": "since the process is going to be relaunched by this function. I want it to be called first otherwise some code would be unnecessarily executed twice.\nPutting it into TestSuite wouldnâ€™t guarantee that.\n\nIn this case, for example, InitTestHarness() would be called first -\u003e the process would be restarted by hooking initialisation inside TestSuite::TestSuite() -\u003e InitTestHarness() would be executed again.",
      "parentUuid": "04837ff3_3364897a",
      "range": {
        "startLine": 25,
        "startChar": 11,
        "endLine": 25,
        "endChar": 34
      },
      "revId": "8e225d6476888ab08b403f0e6db37ce03c23b7db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eda762e1_6fd66863",
        "filename": "src/tests/angle_deqp_tests_main.cpp",
        "patchSetId": 8
      },
      "lineNbr": 25,
      "author": {
        "id": 1374244
      },
      "writtenOn": "2020-12-13T10:11:44Z",
      "side": 1,
      "message": "Done. I added the call to TestSuite::TestSuite(). However, I would like to keep the function call here as well since it would prevent redundant code execution.\nFor deqp test, calling InitMetalFileAPIHooking() here will let TestSuite::TestSuite() ignore the hooking call again and avoid InitTestHarness()\u0027s execution twice.\n\nFor other tests, the hooking initialisation will be done inside TestSuite::TestSuite() by default.",
      "parentUuid": "1a14bbe1_db3fc03d",
      "range": {
        "startLine": 25,
        "startChar": 11,
        "endLine": 25,
        "endChar": 34
      },
      "revId": "8e225d6476888ab08b403f0e6db37ce03c23b7db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "896eb7cc_2e53a90a",
        "filename": "src/tests/angle_deqp_tests_main.cpp",
        "patchSetId": 8
      },
      "lineNbr": 25,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-12-14T14:38:32Z",
      "side": 1,
      "message": "Ah, if you check inside the TestSuite one for the \"kBatchId\" flag you can detect if you\u0027re in a child process instantiation. That way you can guarantee you only run the flag one time. Can you centralize everything using this technique? Or were there other redundant calls?",
      "parentUuid": "eda762e1_6fd66863",
      "range": {
        "startLine": 25,
        "startChar": 11,
        "endLine": 25,
        "endChar": 34
      },
      "revId": "8e225d6476888ab08b403f0e6db37ce03c23b7db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f04a6a45_0b1f8a2c",
        "filename": "src/tests/angle_deqp_tests_main.cpp",
        "patchSetId": 8
      },
      "lineNbr": 25,
      "author": {
        "id": 1374244
      },
      "writtenOn": "2020-12-14T15:22:38Z",
      "side": 1,
      "message": "Sorry, my statement was a bit confusing. My concern was not that the current process is a child process or not.\nThe trick I did in this CL is using execve() inside \"angle::InitMetalFileAPIHooking\" which will relaunch the current process with the same arguments and one additional environment variable DYLD_INSERT_LIBRARIES to preload the hooking library.\n\nThe redundant call here is \"angle::InitTestHarness\".\n\nTo illustrate this redundant issue, imagine \"angle::InitMetalFileAPIHooking\" is not inserted at this line then the main function flow is like this:\n1. call angle::InitTestHarness\n2. call TestSuite constructor\n2.1. call angle::InitMetalFileAPIHooking\n2.1.1. call execve -\u003e the process is relaunched.\n3. Due to execve, the process is re-launched and we are back to main() again:\n4. call angle::InitTestHarness again ---\u003e this is redundant call of step 1.\n5. call TestSuite constructor:\n5.1. call angle::InitMetalFileAPIHooking: this time the process won\u0027t be relaunched due to \"--skip-file-hooking\" argument.\n\nNote: execve doesn\u0027t spawn any new process, it just replaces the current process\u0027s image and memory.\n\nIf I insert \"angle::InitMetalFileAPIHooking\" before \"angle::InitTestHarness\" then the process is re-launched before the latter is called and the redundant issue is avoided.\n\nanw, this is just a minor issue. If you think it is ok for \"angle::InitTestHarness\" call to be redundant then I can remove \"angle::InitMetalFileAPIHooking\" from this file.",
      "parentUuid": "896eb7cc_2e53a90a",
      "range": {
        "startLine": 25,
        "startChar": 11,
        "endLine": 25,
        "endChar": 34
      },
      "revId": "8e225d6476888ab08b403f0e6db37ce03c23b7db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "47939ca6_9a04eb3d",
        "filename": "src/tests/angle_deqp_tests_main.cpp",
        "patchSetId": 8
      },
      "lineNbr": 25,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-12-14T20:42:23Z",
      "side": 1,
      "message": "Ack, I see. I see why you\u0027d get a duplicate call. Anyway not a big deal unless it causes test behaviour changes. LGTM.",
      "parentUuid": "f04a6a45_0b1f8a2c",
      "range": {
        "startLine": 25,
        "startChar": 11,
        "endLine": 25,
        "endChar": 34
      },
      "revId": "8e225d6476888ab08b403f0e6db37ce03c23b7db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "873cff9d_efcd9563",
        "filename": "src/tests/angle_deqp_tests_main.cpp",
        "patchSetId": 8
      },
      "lineNbr": 25,
      "author": {
        "id": 1374244
      },
      "writtenOn": "2020-12-15T09:10:15Z",
      "side": 1,
      "message": "btw, I used execve but alternative option is explicitly add environment variable to the bot\u0027s commands.\nSince I don\u0027t want to change the bot\u0027s commands and thus it would take longer to be approved, using execve to re-launch the app within itself is a viable option atm,\n\nBut if you need a cleaner approach, explicitly adding DYLD_INSERT_LIBRARIES environment variable to bots\u0027 commands in future would be a better option.",
      "parentUuid": "47939ca6_9a04eb3d",
      "range": {
        "startLine": 25,
        "startChar": 11,
        "endLine": 25,
        "endChar": 34
      },
      "revId": "8e225d6476888ab08b403f0e6db37ce03c23b7db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}