{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "6fd279f5_40139dc6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-09-28T16:56:17Z",
      "side": 1,
      "message": "My question is: how does this work for all the other objects which allow create-on-bind? Is it broken for everything?",
      "revId": "8dd7714110f2973666f49628ee74fad32b4e2de2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a54048e4_04dc91a3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1491823
      },
      "writtenOn": "2021-09-29T09:00:12Z",
      "side": 1,
      "message": "I guess it\u0027s broken for all objects that can be created without calling a glGen or glCreate function, but have a resource mapping table, but TBH I don\u0027t know which object types that are. It seems textures must be created with Gen, but buffers can be created on the fly. I\u0027ve updated the patch to also test and handle buffers.",
      "parentUuid": "6fd279f5_40139dc6",
      "revId": "8dd7714110f2973666f49628ee74fad32b4e2de2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fc5d8646_60f15a60",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-09-29T13:44:49Z",
      "side": 1,
      "message": "It can happen for almost any type of object. Before making any more changes, let\u0027s try to think of how we could address this systematically. We might have to add a processing call after each Bind call. Though maybe the capture logic could understand which bind calls generate a resource and treat them specially.",
      "parentUuid": "a54048e4_04dc91a3",
      "revId": "8dd7714110f2973666f49628ee74fad32b4e2de2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d5cc4477_6372c360",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1491823
      },
      "writtenOn": "2021-09-29T15:47:32Z",
      "side": 1,
      "message": "From the man pages it seems that it can only happen for buffers, FBOs, and Renderbuffers. E.g. for textures it is written \"You must use glGenTextures to generate a set of new texture names.\" [1]. In the GLES 3.0 spec it formulated a bit different, but to me it seems to indicate the same thing. In summary, I think that the three types handled in this and the next CL are all that need to be handled.\n\nI would also prefer it when the map would be updated after a bind call, but so far I didn\u0027t really find a nice way of doing it.\n\n[1] https://www.khronos.org/registry/OpenGL-Refpages/es3.0/html/glBindTexture.xhtml",
      "parentUuid": "fc5d8646_60f15a60",
      "revId": "8dd7714110f2973666f49628ee74fad32b4e2de2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bff1beee_ad1c8d77",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-09-29T15:56:00Z",
      "side": 1,
      "message": "From the GLES 2.0 spec:\n\nA texture object is created by binding an unused name to TEXTURE_2D or\nTEXTURE_CUBE_MAP\n\nIt\u0027s more the exception rather than the rule that objects must be created with a specific call. e.g. programs and shaders, and I believe queries. Can you switch to another task? I\u0027ll talk this over with Cody/Tim.",
      "parentUuid": "d5cc4477_6372c360",
      "revId": "8dd7714110f2973666f49628ee74fad32b4e2de2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}