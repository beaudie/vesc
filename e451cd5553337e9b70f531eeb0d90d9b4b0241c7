{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c69f5e90_c15e8735",
        "filename": "/COMMIT_MSG",
        "patchSetId": 23
      },
      "lineNbr": 14,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-11-24T19:11:53Z",
      "side": 1,
      "message": "persistent typo:\n\n\"has been used\" like \"has gone there\"\n\"is be**ing** used\" like \"is go**ing** there\"",
      "range": {
        "startLine": 14,
        "startChar": 58,
        "endLine": 14,
        "endChar": 62
      },
      "revId": "e451cd5553337e9b70f531eeb0d90d9b4b0241c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b2eb0f8d_0ea81348",
        "filename": "src/libANGLE/renderer/serial_utils.h",
        "patchSetId": 23
      },
      "lineNbr": 174,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-11-24T19:11:53Z",
      "side": 1,
      "message": "Please also outline here what ANGLE does if that does happen.\n\nCould we instead use an `angle::FastVector` so this can be a smaller number like 16, but also allow infinite growth?",
      "revId": "e451cd5553337e9b70f531eeb0d90d9b4b0241c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b562b6a7_b99216b6",
        "filename": "src/libANGLE/renderer/vulkan/CommandProcessor.cpp",
        "patchSetId": 23
      },
      "lineNbr": 1040,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-11-24T19:11:53Z",
      "side": 1,
      "message": "I suggest not trying to optimize for the crazy case of hundreds of threads, and avoid templatizing this. That would also help with removing the `kMaxQueueSerialIndexCount` limit.\n\nIn the `retireFinishedCommands` function, just have an `angle::FastVector` where you append the finished serials, and then iterate that. No need for a bitset.",
      "range": {
        "startLine": 1035,
        "startChar": 0,
        "endLine": 1040,
        "endChar": 37
      },
      "revId": "e451cd5553337e9b70f531eeb0d90d9b4b0241c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c8e38af8_d8d1dd43",
        "filename": "src/libANGLE/renderer/vulkan/CommandProcessor.cpp",
        "patchSetId": 23
      },
      "lineNbr": 1176,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-11-24T19:11:53Z",
      "side": 1,
      "message": "!",
      "range": {
        "startLine": 1176,
        "startChar": 33,
        "endLine": 1176,
        "endChar": 57
      },
      "revId": "e451cd5553337e9b70f531eeb0d90d9b4b0241c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e37f864c_c58e8b69",
        "filename": "src/libANGLE/renderer/vulkan/CommandProcessor.cpp",
        "patchSetId": 23
      },
      "lineNbr": 1394,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-11-24T19:11:53Z",
      "side": 1,
      "message": "Is it no longer possible to have a submission with out a fence?",
      "revId": "e451cd5553337e9b70f531eeb0d90d9b4b0241c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "012a1660_0ab5e21c",
        "filename": "src/libANGLE/renderer/vulkan/CommandProcessor.cpp",
        "patchSetId": 23
      },
      "lineNbr": 1511,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-11-24T19:11:53Z",
      "side": 1,
      "message": "Similarly, I\u0027d say don\u0027t templatize this. Just use an `angle::FastVector` instead of the bitset, it\u0027s gonna have like 2 values in it anyway. I realize bitset would be faster if there are a hundred threads, but that also never happens.\n\nYou could always microoptimize by using a bitset for the first 64 indices and a vector for the rest, but honestly given that that path would never get exercised, I wouldn\u0027t even bother.",
      "range": {
        "startLine": 1503,
        "startChar": 0,
        "endLine": 1511,
        "endChar": 30
      },
      "revId": "e451cd5553337e9b70f531eeb0d90d9b4b0241c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4348c29b_31552697",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 23
      },
      "lineNbr": 5458,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-11-24T19:11:53Z",
      "side": 1,
      "message": "Can\u0027t this be an ASSERT?",
      "revId": "e451cd5553337e9b70f531eeb0d90d9b4b0241c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "59be84d3_2bc86a3d",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 23
      },
      "lineNbr": 5506,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-11-24T19:11:53Z",
      "side": 1,
      "message": "Can\u0027t this be an ASSERT?",
      "revId": "e451cd5553337e9b70f531eeb0d90d9b4b0241c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1c4a02d1_acfea822",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 23
      },
      "lineNbr": 7023,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-11-24T19:11:53Z",
      "side": 1,
      "message": "It\u0027s starting to get a little confusion, why are there two render pass serials?",
      "range": {
        "startLine": 7022,
        "startChar": 72,
        "endLine": 7023,
        "endChar": 29
      },
      "revId": "e451cd5553337e9b70f531eeb0d90d9b4b0241c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dd505484_28811255",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 23
      },
      "lineNbr": 7109,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-11-24T19:11:53Z",
      "side": 1,
      "message": "`flushOutsideRenderPassCommands` _does_ call `generateOutsideRenderPassCommandsQueueSerial`. Can this be removed?",
      "revId": "e451cd5553337e9b70f531eeb0d90d9b4b0241c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "89043b80_77ad81bd",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 23
      },
      "lineNbr": 7158,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-11-24T19:11:53Z",
      "side": 1,
      "message": "outsideR",
      "range": {
        "startLine": 7158,
        "startChar": 23,
        "endLine": 7158,
        "endChar": 28
      },
      "revId": "e451cd5553337e9b70f531eeb0d90d9b4b0241c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "06b73004_c6e3079e",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 23
      },
      "lineNbr": 7391,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-11-24T19:11:53Z",
      "side": 1,
      "message": "Shouldn\u0027t this be done after the `flushOutsideRPCommands` call below? Otherwise this is going to be an infinite recursion.\n\nPlease add a basic test to make sure this path is at least minimally tested. See how the `SubmittingOutsideCommandBufferDoesNotCollectRenderPassGarbage` counter test works by uploading until a number of submissions are done. You could do something similar to make sure render pass break happens correctly.",
      "range": {
        "startLine": 7384,
        "startChar": 0,
        "endLine": 7391,
        "endChar": 5
      },
      "revId": "e451cd5553337e9b70f531eeb0d90d9b4b0241c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f086020_0769658f",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.h",
        "patchSetId": 23
      },
      "lineNbr": 1567,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-11-24T19:11:53Z",
      "side": 1,
      "message": "nit: OutsideRenderPass (otherwise it\u0027s reading \"outside queue\")",
      "range": {
        "startLine": 1567,
        "startChar": 40,
        "endLine": 1567,
        "endChar": 47
      },
      "revId": "e451cd5553337e9b70f531eeb0d90d9b4b0241c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "33e86423_c73fe60f",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.h",
        "patchSetId": 23
      },
      "lineNbr": 1631,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-11-24T19:11:53Z",
      "side": 1,
      "message": "Please move any of these that is only called by ContextVk in ContextVk.cpp.",
      "revId": "e451cd5553337e9b70f531eeb0d90d9b4b0241c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5b475f15_8a4b3fb6",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.h",
        "patchSetId": 23
      },
      "lineNbr": 1634,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-11-24T19:11:53Z",
      "side": 1,
      "message": "nit: I\u0027d call this `mCurrentQueueIndex` or `mCurrentQueueSerialIndex` to be clear it\u0027s the queue index, not the serial index.",
      "range": {
        "startLine": 1634,
        "startChar": 51,
        "endLine": 1634,
        "endChar": 70
      },
      "revId": "e451cd5553337e9b70f531eeb0d90d9b4b0241c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6b7bae50_4139518c",
        "filename": "src/libANGLE/renderer/vulkan/ResourceVk.h",
        "patchSetId": 23
      },
      "lineNbr": 23,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-11-24T19:11:53Z",
      "side": 1,
      "message": "Could you please create a (parameterized) test that exercises N threads each doing their own work? And another where the N threads are in a share group, and they all use the same texture.\n\nJust to make sure the rare paths are also exercised in tests (otherwise someone\u0027s bound to regress them)",
      "range": {
        "startLine": 23,
        "startChar": 13,
        "endLine": 23,
        "endChar": 33
      },
      "revId": "e451cd5553337e9b70f531eeb0d90d9b4b0241c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd3cd1fd_97c127fe",
        "filename": "src/libANGLE/renderer/vulkan/ResourceVk.h",
        "patchSetId": 23
      },
      "lineNbr": 161,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-11-24T19:11:53Z",
      "side": 1,
      "message": "nit: this function could probably use a better name now (in a follow up)",
      "range": {
        "startLine": 161,
        "startChar": 9,
        "endLine": 161,
        "endChar": 23
      },
      "revId": "e451cd5553337e9b70f531eeb0d90d9b4b0241c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d4dcf6a1_83825a20",
        "filename": "src/libANGLE/renderer/vulkan/SyncVk.cpp",
        "patchSetId": 23
      },
      "lineNbr": 192,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-11-24T19:11:53Z",
      "side": 1,
      "message": "Please adjust the comment above. The second paragraph says all contexts are flushed, not just the one that used the sync object, but this change is actually making the optimization mentioned there a reality.",
      "revId": "e451cd5553337e9b70f531eeb0d90d9b4b0241c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b38ce32_2def84d2",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 23
      },
      "lineNbr": 1500,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-11-24T19:11:53Z",
      "side": 1,
      "message": "Maybe worth mentioning that this can cause unnecessary outside RP command flushes (because a resource may think it\u0027s accessed by an outside RP command buffer based on the serial, but it\u0027s not actually).\n\nIn the very least, that could lead to less memory barrier aggregation.",
      "revId": "e451cd5553337e9b70f531eeb0d90d9b4b0241c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bfdca976_95dfc667",
        "filename": "src/libANGLE/renderer/vulkan/vk_utils.h",
        "patchSetId": 23
      },
      "lineNbr": 198,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-11-24T19:11:53Z",
      "side": 1,
      "message": "nit: `set()` is clearer",
      "range": {
        "startLine": 198,
        "startChar": 30,
        "endLine": 198,
        "endChar": 34
      },
      "revId": "e451cd5553337e9b70f531eeb0d90d9b4b0241c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "68b47a40_1ccfecd2",
        "filename": "src/libANGLE/renderer/vulkan/vk_utils.h",
        "patchSetId": 23
      },
      "lineNbr": 207,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-11-24T19:11:53Z",
      "side": 1,
      "message": "How will the caller handle this?",
      "range": {
        "startLine": 204,
        "startChar": 0,
        "endLine": 207,
        "endChar": 9
      },
      "revId": "e451cd5553337e9b70f531eeb0d90d9b4b0241c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "264fd3d3_be1440d8",
        "filename": "src/libANGLE/renderer/vulkan/vk_utils.h",
        "patchSetId": 23
      },
      "lineNbr": 231,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-11-24T19:11:53Z",
      "side": 1,
      "message": "You could use a pair of bitset (for smaller indices) and a free list so you\u0027re not limited to `kMaxQueueSerialIndexCount`.",
      "revId": "e451cd5553337e9b70f531eeb0d90d9b4b0241c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}