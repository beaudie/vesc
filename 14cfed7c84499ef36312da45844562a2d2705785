{
  "comments": [
    {
      "key": {
        "uuid": "9b0d51a8_e32243ba",
        "filename": "src/libANGLE/Program.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1517,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-09-16T14:43:50Z",
      "side": 1,
      "message": "trying to understand why this code had to move but couldn\u0027t figure it out. why does this have to happen later?",
      "range": {
        "startLine": 1507,
        "startChar": 0,
        "endLine": 1517,
        "endChar": 9
      },
      "revId": "14cfed7c84499ef36312da45844562a2d2705785",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e2a6f42b_dade1eeb",
        "filename": "src/libANGLE/Program.cpp",
        "patchSetId": 4
      },
      "lineNbr": 4145,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-09-16T14:43:50Z",
      "side": 1,
      "message": "With geometry shaders we\u0027ll probably need to support multiple shader interfaces within one program. This code just merges the two interfaces into one list?",
      "range": {
        "startLine": 4145,
        "startChar": 31,
        "endLine": 4145,
        "endChar": 48
      },
      "revId": "14cfed7c84499ef36312da45844562a2d2705785",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d0e4adb_3fdfe467",
        "filename": "src/libANGLE/renderer/gl/ProgramGL.cpp",
        "patchSetId": 4
      },
      "lineNbr": 243,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-09-16T14:43:50Z",
      "side": 1,
      "message": "maybe refactor this a bit -\n\ngl::ShaderType tfShaderType \u003d hasLinkedShaderStage(Geometry) ? Geometry : Vertex;\nstd::string tfVaryingMappedName \u003d getAttachedShader(tfShaderType)...\n\nAlso thanks for making this fix, but why was it necessary for the GL back-end?",
      "range": {
        "startLine": 234,
        "startChar": 0,
        "endLine": 243,
        "endChar": 13
      },
      "revId": "14cfed7c84499ef36312da45844562a2d2705785",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dfb5fa3d_e3eac58c",
        "filename": "src/libANGLE/renderer/vulkan/GlslangWrapper.cpp",
        "patchSetId": 4
      },
      "lineNbr": 627,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-09-16T14:43:50Z",
      "side": 1,
      "message": "Can you instead copy these varyings into ProgramLinkedResources in Program.cpp after gatherTransformFeedbackVaryings? It feels like they belong in there.",
      "range": {
        "startLine": 626,
        "startChar": 12,
        "endLine": 627,
        "endChar": 96
      },
      "revId": "14cfed7c84499ef36312da45844562a2d2705785",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c0a727dc_0caa8d8b",
        "filename": "src/libANGLE/renderer/vulkan/vk_caps_utils.cpp",
        "patchSetId": 4
      },
      "lineNbr": 432,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-09-16T14:43:50Z",
      "side": 1,
      "message": "there should be a check somewhere that limits the max ES version to 2.0 if GS is not supported. Note though we can\u0027t support ES 1.x without it either. Unless we get an extension for the provoking vertex functionality.",
      "range": {
        "startLine": 430,
        "startChar": 0,
        "endLine": 432,
        "endChar": 47
      },
      "revId": "14cfed7c84499ef36312da45844562a2d2705785",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dafcfb27_4a5b8e2b",
        "filename": "src/libANGLE/renderer/vulkan/vk_caps_utils.cpp",
        "patchSetId": 4
      },
      "lineNbr": 434,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-09-16T15:38:04Z",
      "side": 1,
      "message": "ah, this is why the tests started failing.\n\nI don\u0027t think you should expose this extension until the functionality is in place.",
      "range": {
        "startLine": 434,
        "startChar": 8,
        "endLine": 434,
        "endChar": 48
      },
      "revId": "14cfed7c84499ef36312da45844562a2d2705785",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d7da0384_444e54a4",
        "filename": "src/libANGLE/renderer/vulkan/vk_caps_utils.cpp",
        "patchSetId": 4
      },
      "lineNbr": 434,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2019-09-16T15:40:43Z",
      "side": 1,
      "message": "yup, we discussed this internally and we are going to get rid of this completely. We are not going to be supporting the full-fledged GS anyway, only what is necessary for the flat shading feature. We do not want to accidentally trigger any test suite\u0027s GS test subset",
      "parentUuid": "dafcfb27_4a5b8e2b",
      "range": {
        "startLine": 434,
        "startChar": 8,
        "endLine": 434,
        "endChar": 48
      },
      "revId": "14cfed7c84499ef36312da45844562a2d2705785",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b6170d64_7a051efa",
        "filename": "src/libANGLE/renderer/vulkan/vk_caps_utils.cpp",
        "patchSetId": 4
      },
      "lineNbr": 434,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-09-16T15:41:42Z",
      "side": 1,
      "message": "Sounds good. Probably not necessary for the flat shading right now.",
      "parentUuid": "d7da0384_444e54a4",
      "range": {
        "startLine": 434,
        "startChar": 8,
        "endLine": 434,
        "endChar": 48
      },
      "revId": "14cfed7c84499ef36312da45844562a2d2705785",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4e8b93e8_22efdfa6",
        "filename": "src/tests/deqp_support/deqp_gles31_test_expectations.txt",
        "patchSetId": 4
      },
      "lineNbr": 719,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-09-16T14:43:50Z",
      "side": 1,
      "message": "did these start failing? They should still be not supported if the extension isn\u0027t available.",
      "range": {
        "startLine": 712,
        "startChar": 1,
        "endLine": 719,
        "endChar": 86
      },
      "revId": "14cfed7c84499ef36312da45844562a2d2705785",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "14108d27_4978e879",
        "filename": "src/tests/deqp_support/deqp_gles31_test_expectations.txt",
        "patchSetId": 4
      },
      "lineNbr": 719,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2019-09-16T15:11:30Z",
      "side": 1,
      "message": "no but these started passing -\n\u003e dEQP-GLES31.functional.geometry_shading.input.basic_primitive.points\n\u003e dEQP-GLES31.functional.geometry_shading.input.basic_primitive.lines\n\u003e dEQP-GLES31.functional.geometry_shading.input.basic_primitive.line_loop\n\u003e dEQP-GLES31.functional.geometry_shading.input.basic_primitive.line_strip\n\u003e dEQP-GLES31.functional.geometry_shading.input.basic_primitive.triangles\n\u003e dEQP-GLES31.functional.geometry_shading.input.basic_primitive.triangle_strip\n\u003e dEQP-GLES31.functional.geometry_shading.input.basic_primitive.triangle_fan\n\nso had to explicitly call out the failures",
      "parentUuid": "4e8b93e8_22efdfa6",
      "range": {
        "startLine": 712,
        "startChar": 1,
        "endLine": 719,
        "endChar": 86
      },
      "revId": "14cfed7c84499ef36312da45844562a2d2705785",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e356b6c2_da95a0d8",
        "filename": "src/tests/deqp_support/deqp_gles31_test_expectations.txt",
        "patchSetId": 4
      },
      "lineNbr": 719,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-09-16T15:36:42Z",
      "side": 1,
      "message": "There should be no need to add skips if tests started passing. There\u0027s no distinction between not supported and passed right now in this expectations file. If they started failing then it makes sense to suppress them.",
      "parentUuid": "14108d27_4978e879",
      "range": {
        "startLine": 712,
        "startChar": 1,
        "endLine": 719,
        "endChar": 86
      },
      "revId": "14cfed7c84499ef36312da45844562a2d2705785",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}