{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b0d277dd_c7040785",
        "filename": "src/libANGLE/renderer/vulkan/ResourceVk.h",
        "patchSetId": 15
      },
      "lineNbr": 247,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-09-15T12:06:36Z",
      "side": 1,
      "message": "nit: I\u0027d rename these to mReadUse and mWriteUse to try and disambiguate them. Now that you\u0027re adding the uses during the retainReadWrite call it makes more sense. Otherwise LGTM.",
      "range": {
        "startLine": 247,
        "startChar": 22,
        "endLine": 247,
        "endChar": 26
      },
      "revId": "74fe66c8db9781d4df3feb8914773892bee8ff6f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "633e7979_aeeabb7f",
        "filename": "src/libANGLE/renderer/vulkan/ResourceVk.h",
        "patchSetId": 15
      },
      "lineNbr": 247,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-09-15T14:09:09Z",
      "side": 1,
      "message": "I feel like we are repeating the same discussions! `mReadUse` is inaccurate since it\u0027s also used for images (which are read-write), and sync primitives (where read doesn\u0027t make sense). My original suggestion was `mAnyUse` because this is what it is, it\u0027s retained on any use, but mUse is ok with me too.",
      "parentUuid": "b0d277dd_c7040785",
      "range": {
        "startLine": 247,
        "startChar": 22,
        "endLine": 247,
        "endChar": 26
      },
      "revId": "74fe66c8db9781d4df3feb8914773892bee8ff6f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8f37d7b6_a924c49b",
        "filename": "src/libANGLE/renderer/vulkan/ResourceVk.h",
        "patchSetId": 15
      },
      "lineNbr": 247,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-09-15T14:14:13Z",
      "side": 1,
      "message": "mReadUse matches retainReadOnly. Avoid premature generalization is my advice here and stick with mReadUse and mWriteUse. These are crystal clear and match the APIs. Note this class is only used for buffers right now.",
      "parentUuid": "633e7979_aeeabb7f",
      "range": {
        "startLine": 247,
        "startChar": 22,
        "endLine": 247,
        "endChar": 26
      },
      "revId": "74fe66c8db9781d4df3feb8914773892bee8ff6f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0f9b15e1_5911db88",
        "filename": "src/libANGLE/renderer/vulkan/ResourceVk.h",
        "patchSetId": 15
      },
      "lineNbr": 247,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-09-15T15:09:26Z",
      "side": 1,
      "message": "Ack, I missed that this is the special buffer-only version of the class. mReadOnly SGTM.",
      "parentUuid": "8f37d7b6_a924c49b",
      "range": {
        "startLine": 247,
        "startChar": 22,
        "endLine": 247,
        "endChar": 26
      },
      "revId": "74fe66c8db9781d4df3feb8914773892bee8ff6f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a3e48b98_c617a84f",
        "filename": "src/libANGLE/renderer/vulkan/ResourceVk.h",
        "patchSetId": 15
      },
      "lineNbr": 247,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2021-09-15T16:15:43Z",
      "side": 1,
      "message": "+1 for {mAnyUse, mWriteUse}.",
      "parentUuid": "0f9b15e1_5911db88",
      "range": {
        "startLine": 247,
        "startChar": 22,
        "endLine": 247,
        "endChar": 26
      },
      "revId": "74fe66c8db9781d4df3feb8914773892bee8ff6f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}