{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "8ad3852e_9790b2b1",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 564,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-01-17T18:38:41Z",
      "side": 1,
      "message": "nit: You could remove the if, the loop condition is doing the same (maybe one or two instructions more)",
      "range": {
        "startLine": 563,
        "startChar": 0,
        "endLine": 564,
        "endChar": 13
      },
      "revId": "618de2a72f5ff7f1924d5e8c836b37f3b579124a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d19a5346_9003c0b9",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 564,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2022-01-19T03:54:11Z",
      "side": 1,
      "message": "With the refactor change to move the loop into a helper, I\u0027m also going to keep this conditional.   LMKWYT.",
      "parentUuid": "8ad3852e_9790b2b1",
      "range": {
        "startLine": 563,
        "startChar": 0,
        "endLine": 564,
        "endChar": 13
      },
      "revId": "618de2a72f5ff7f1924d5e8c836b37f3b579124a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "14d135f2_55b94afc",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 564,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-01-25T03:16:57Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "d19a5346_9003c0b9",
      "range": {
        "startLine": 563,
        "startChar": 0,
        "endLine": 564,
        "endChar": 13
      },
      "revId": "618de2a72f5ff7f1924d5e8c836b37f3b579124a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "41d079df_6beff92b",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 571,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-01-17T18:38:41Z",
      "side": 1,
      "message": "Something seems wrong here, why is `colorIndexVk` being set to `colorIndexGL` directly?\n\nCould you please add a mid-RP clear test with gaps in attachments? That would be similar to `DrawBuffersTest.ClearWithGaps`",
      "range": {
        "startLine": 571,
        "startChar": 46,
        "endLine": 571,
        "endChar": 94
      },
      "revId": "618de2a72f5ff7f1924d5e8c836b37f3b579124a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d29987a1_254bcc50",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 571,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2022-01-19T03:54:11Z",
      "side": 1,
      "message": "This is taken from FramebufferVk::clearWithCommand() - ref1.\n\nI added the test DrawBuffersTest.MidRenderPassClearWithGaps which does what you\u0027ve described and it passes.   It also correctly uses vkCmdClearAttachments() for the mid-RP clear.   Here are the commands captured by renderdoc:\n\n     EID  | Event                                                                                                   | Action #\n    --------------------------------------------------------------------------------------------------------------------------\n    6     | - \u003d\u003e vkQueueSubmit(1)[0]: vkBeginCommandBuffer(Baked Command Buffer 489)                                | 1     \n    7-25  | - Colour Pass #1 (1-2 Targets)                                                                          | 1-5   \n    8     |  \\- vkCmdBeginRenderPass(Don\u0027t Care)                                                                    | 1     \n    14    |   - vkCmdDraw(6, 1)                                                                                     | 1     \n    15    |   - Clear effectively discarding previous draw call results. Suggest earlier Clear followed by masked c |       \n    16    |   - vkCmdClearAttachments({ 0, 3 })                                                                     | 2     \n    20    |   - vkCmdDraw(6, 1)                                                                                     | 3     \n    21    |   - Render pass closed due to framebuffer change                                                        |       \n    22    |   - vkCmdEndRenderPass(Store)                                                                           | 4     \n    24    |   - vkCmdCopyImageToBuffer(2D Color Attachment 430, Buffer 440)                                         | 4     \n    25    |   - GPU stall due to ReadPixels                                                                         |       \n    26-44 | - Copy/Clear Pass #1                                                                                    | 5-6   \n    27    |  \\- \u003d\u003e vkQueueSubmit(1)[0]: vkEndCommandBuffer(Baked Command Buffer 489)                                | 5     \n    32    |   - \u003d\u003e vkQueueSubmit(1)[0]: vkBeginCommandBuffer(Baked Command Buffer 490)                              | 5     \n    34    |   - vkCmdCopyImageToBuffer(2D Color Attachment 435, Buffer 440)                                         | 5     \n    35    |   - GPU stall due to ReadPixels                                                                         |       \n    37    |   - \u003d\u003e vkQueueSubmit(1)[0]: vkEndCommandBuffer(Baked Command Buffer 490)                                | 6     \n    41    |   - \u003d\u003e vkQueueSubmit(1)[0]: vkBeginCommandBuffer(Baked Command Buffer 491)                              | 6     \n    42    |   - Acquire Swap Image Before Swap                                                                      |       \n    44    |   - \u003d\u003e vkQueueSubmit(1)[0]: vkEndCommandBuffer(Baked Command Buffer 491)                                | 6     \n    46    | - vkQueuePresentKHR(Swapchain Image 379)                                                                | 6",
      "parentUuid": "41d079df_6beff92b",
      "range": {
        "startLine": 571,
        "startChar": 46,
        "endLine": 571,
        "endChar": 94
      },
      "revId": "618de2a72f5ff7f1924d5e8c836b37f3b579124a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "52d3de6d_96870c1a",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 571,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-01-25T03:16:57Z",
      "side": 1,
      "message": "Ack regarding correctness, it\u0027s using the GL index because it\u0027s addressing the subpass index (which \u003d\u003d GL index), not the render pass index (which is what we call VK index... arguably I should have chosen better suffixes).\n\nThe test is good as it exercises the clear attachments path, but could you please add a similar one that exercises this path too? It would be very similar, except the first draw call would have one attachment masked (say attachment 3 in that test) which is then enabled before clear. Then the clear of attachment 3 can be moved to loadOp (while clear of attachment 0 remains with vkCmdClearAttachments)",
      "parentUuid": "d29987a1_254bcc50",
      "range": {
        "startLine": 571,
        "startChar": 46,
        "endLine": 571,
        "endChar": 94
      },
      "revId": "618de2a72f5ff7f1924d5e8c836b37f3b579124a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6e537899_547f7e58",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 571,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2022-01-25T19:41:12Z",
      "side": 1,
      "message": "I\u0027ve added DrawBuffersTest.MaskedDrawMidRPClearWithGaps.\n\nGood catch on this scenario, which showed the issue with `colorIndexVk` where `RenderPassCommandBufferHelper::mAttachmentOps` was being set with the index `colorIndexGL` (3), but then `InitializeRenderPassFromDesc()` was indexing into the `AttachmentOpsArray` with `attachmentCount\u003d1` and getting the wrong result.\n\nI\u0027ve updated `FramebufferVk::clearWithLoadOp()` to correctly loop through the color attachments and increment `colorIndexVk` so the new test passes.",
      "parentUuid": "52d3de6d_96870c1a",
      "range": {
        "startLine": 571,
        "startChar": 46,
        "endLine": 571,
        "endChar": 94
      },
      "revId": "618de2a72f5ff7f1924d5e8c836b37f3b579124a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e1eff563_e955a4c1",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 576,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-01-17T18:38:41Z",
      "side": 1,
      "message": "This function (clearImpl) is already big and unwieldy, please refactor this to a helper",
      "range": {
        "startLine": 565,
        "startChar": 0,
        "endLine": 576,
        "endChar": 17
      },
      "revId": "618de2a72f5ff7f1924d5e8c836b37f3b579124a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "04cba85a_96778b39",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 576,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2022-01-19T03:54:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e1eff563_e955a4c1",
      "range": {
        "startLine": 565,
        "startChar": 0,
        "endLine": 576,
        "endChar": 17
      },
      "revId": "618de2a72f5ff7f1924d5e8c836b37f3b579124a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ac2d79fa_f8e6dc4b",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2371,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2022-01-19T03:54:11Z",
      "side": 1,
      "message": "ref1",
      "revId": "618de2a72f5ff7f1924d5e8c836b37f3b579124a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2e27e274_d894cdb3",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2371,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2022-01-25T19:41:12Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "ac2d79fa_f8e6dc4b",
      "revId": "618de2a72f5ff7f1924d5e8c836b37f3b579124a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9455a213_007aa2f6",
        "filename": "src/libANGLE/renderer/vulkan/RenderTargetVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 104,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-01-17T18:38:41Z",
      "side": 1,
      "message": "There seems to be a bug here where this part is not run once the color attachment is enabled (because onColorDraw is only called once). You can test it with this:\n\n- Two attachments, only 1 is enabled\n- Draw\n- Enable attachment 1\n- Draw\n\nIn that case, `onImageWrite` for attachment 1 should be missing. storeOp\u003dDONT_CARE will also be used for it.\n\nWe should split this function such that the second part is run (once) as soon as the attachment is enabled.",
      "revId": "618de2a72f5ff7f1924d5e8c836b37f3b579124a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0101c1da_5a53811c",
        "filename": "src/libANGLE/renderer/vulkan/RenderTargetVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 104,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2022-01-19T03:54:11Z",
      "side": 1,
      "message": "I\u0027ve updated VulkanPerformanceCounterTest.MidRenderPassClear to do this, and it works without the change you\u0027re describing.   Both color attachments have storeOp\u003dSTORE (EXPECT_EQ passes) and the performance counters are correct (indicating the loadOp\u003dCLEAR is being done correctly).   I\u0027ve also verified everything looks good with RenderDoc.\n\nLet me know if there\u0027s something else you\u0027d like to look at here.",
      "parentUuid": "9455a213_007aa2f6",
      "revId": "618de2a72f5ff7f1924d5e8c836b37f3b579124a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "257891c2_977b2e36",
        "filename": "src/libANGLE/renderer/vulkan/RenderTargetVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 104,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-02-11T15:46:13Z",
      "side": 1,
      "message": "I can confirm this bug is real, attachment 1\u0027s content is never marked as defined. The reason the test passes is because when the RP starts, we always choose storeOp\u003dSTORE for the color attachment (except for MSRTT):\n\n    const vk::RenderPassStoreOp storeOp \u003d colorRenderTarget-\u003eisImageTransient()\n                                              ? vk::RenderPassStoreOp::DontCare\n                                              : vk::RenderPassStoreOp::Store;\n\nWe currently don\u0027t attempt to optimize the color attachments\u0027 storeOp at the end of the pass, but if we did, the test would have failed.\n\nYou can make the test fail by appending this code to the test:\n\n```\n    GLFramebuffer fbo2;\n    glBindFramebuffer(GL_FRAMEBUFFER, fbo2);\n    glFramebufferTexture2D(GL_FRAMEBUFFER, GL_COLOR_ATTACHMENT0, GL_TEXTURE_2D, textures[1], 0);\n\n    glEnable(GL_BLEND);\n    glBlendFunc(GL_ONE, GL_ONE);\n\n    // Blend red\n    drawQuad(redProgram, essl3_shaders::PositionAttrib(), 0.5f);\n    ASSERT_GL_NO_ERROR();\n\n    // Verify purple\n    glReadBuffer(GL_COLOR_ATTACHMENT0);\n    EXPECT_PIXEL_EQ(0, 0, 255, 0, 255, 255);\n    ASSERT_GL_NO_ERROR();\n\n    // loadOp \u003d LOAD\n    EXPECT_EQ(hackANGLE().colorLoads, 1u);\n    // storeOp \u003d STORE (2 from before)\n    EXPECT_EQ(hackANGLE().colorStores, 3u);\n```\n\nAnd you can see that loadOp\u003dDONT_CARE is used for textures[1] instead of loadOp\u003dLOAD because the content is never marked defined.",
      "parentUuid": "0101c1da_5a53811c",
      "revId": "618de2a72f5ff7f1924d5e8c836b37f3b579124a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ec549b1_b10499fc",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "patchSetId": 5
      },
      "lineNbr": 929,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-01-17T18:38:41Z",
      "side": 1,
      "message": "This is actually multiplying the color ops by subpass count.\n\nYou\u0027d need to split the color op counting into another function that\u0027s called above the for loop. You can tell by the way the loop doesn\u0027t use the `subpass` :)",
      "range": {
        "startLine": 928,
        "startChar": 0,
        "endLine": 929,
        "endChar": 76
      },
      "revId": "618de2a72f5ff7f1924d5e8c836b37f3b579124a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "23af7360_7a9155e0",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "patchSetId": 5
      },
      "lineNbr": 929,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2022-01-19T03:54:11Z",
      "side": 1,
      "message": "Good catch.\n\nDone",
      "parentUuid": "4ec549b1_b10499fc",
      "range": {
        "startLine": 928,
        "startChar": 0,
        "endLine": 929,
        "endChar": 76
      },
      "revId": "618de2a72f5ff7f1924d5e8c836b37f3b579124a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c0ae94f6_4b46e702",
        "filename": "src/tests/gl_tests/VulkanPerformanceCounterTest.cpp",
        "patchSetId": 5
      },
      "lineNbr": 3193,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-01-17T18:38:41Z",
      "side": 1,
      "message": "super nit: Render Pass is two words (we have a fix-it issue to fix renderpass elsewhere too)",
      "range": {
        "startLine": 3193,
        "startChar": 40,
        "endLine": 3193,
        "endChar": 50
      },
      "revId": "618de2a72f5ff7f1924d5e8c836b37f3b579124a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4f929643_7bfecbfb",
        "filename": "src/tests/gl_tests/VulkanPerformanceCounterTest.cpp",
        "patchSetId": 5
      },
      "lineNbr": 3193,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2022-01-19T03:54:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c0ae94f6_4b46e702",
      "range": {
        "startLine": 3193,
        "startChar": 40,
        "endLine": 3193,
        "endChar": 50
      },
      "revId": "618de2a72f5ff7f1924d5e8c836b37f3b579124a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4344f2f7_77d7a026",
        "filename": "src/tests/gl_tests/VulkanPerformanceCounterTest.cpp",
        "patchSetId": 5
      },
      "lineNbr": 3235,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-01-17T18:38:41Z",
      "side": 1,
      "message": "Please verify colorStores here too",
      "revId": "618de2a72f5ff7f1924d5e8c836b37f3b579124a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9d228fb6_24884be0",
        "filename": "src/tests/gl_tests/VulkanPerformanceCounterTest.cpp",
        "patchSetId": 5
      },
      "lineNbr": 3235,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2022-01-19T03:54:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4344f2f7_77d7a026",
      "revId": "618de2a72f5ff7f1924d5e8c836b37f3b579124a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}