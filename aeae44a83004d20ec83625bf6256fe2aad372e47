{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d6e9364b_1d4c4883",
        "filename": "src/libANGLE/ProgramPipeline.cpp",
        "patchSetId": 6
      },
      "lineNbr": 86,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-07-09T11:52:34Z",
      "side": 1,
      "message": "I\u0027m trying to understand this check - what error is it catching? I\u0027m thinking it\u0027s not really necessary. Is there a test that covers this check?",
      "range": {
        "startLine": 73,
        "startChar": 0,
        "endLine": 86,
        "endChar": 9
      },
      "revId": "aeae44a83004d20ec83625bf6256fe2aad372e47",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9ddcfb8c_66a7a65c",
        "filename": "src/libANGLE/ProgramPipeline.cpp",
        "patchSetId": 6
      },
      "lineNbr": 86,
      "author": {
        "id": 1359667
      },
      "writtenOn": "2021-07-10T02:02:14Z",
      "side": 1,
      "message": "This test fails without this check: KHR-GLES31.core.sepshaderobjs.StateInteraction\n\nThis is the exact line it fails at if we comment this code chunk out\nhttps://github.com/KhronosGroup/VK-GL-CTS/blob/master/external/openglcts/modules/gles31/es31cSeparateShaderObjsTests.cpp#L2351",
      "parentUuid": "d6e9364b_1d4c4883",
      "range": {
        "startLine": 73,
        "startChar": 0,
        "endLine": 86,
        "endChar": 9
      },
      "revId": "aeae44a83004d20ec83625bf6256fe2aad372e47",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7d5c7446_aaefe130",
        "filename": "src/libANGLE/ProgramPipeline.cpp",
        "patchSetId": 6
      },
      "lineNbr": 86,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-07-12T12:50:42Z",
      "side": 1,
      "message": "OK, I see the check:\n\nAn INVALID_OPERATION error is generated by any command that transfers vertices to the GL or launches compute work if the current set of active\nprogram objects cannot be executed, for reasons including:\n\nâ€¢ A program object is active for at least one, but not all of the shader\nstages that were present when the program was linked.\n\nCan you expand the comment slighty? You don\u0027t need the full error text, but just a bit more info.\n\nI think we can do this check with bitfield operations. You have mExecutable\u0027s linked stages, and mProgramUsedStages. I think you need to validate programLinkedStages \u0026 mProgramUsedStages \u003d\u003d programLinkedStages.\n\nAlso I\u0027m wondering what the value of storing this info continually in memory is - can you compute it inline in validate() and then discard it once the function returns? I didn\u0027t look closely to see how difficult this is.",
      "parentUuid": "9ddcfb8c_66a7a65c",
      "range": {
        "startLine": 73,
        "startChar": 0,
        "endLine": 86,
        "endChar": 9
      },
      "revId": "aeae44a83004d20ec83625bf6256fe2aad372e47",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a6ba1dd9_b7d81adf",
        "filename": "src/libANGLE/ProgramPipeline.cpp",
        "patchSetId": 6
      },
      "lineNbr": 86,
      "author": {
        "id": 1359667
      },
      "writtenOn": "2021-07-20T00:55:57Z",
      "side": 1,
      "message": "Currently, getLinkedShaderStages returns linked stages that have made it through the gluseprogramstages \n\nIf we were to introduce a bitset to track the aggregation of all stages that have been linked with each program that\u0027s been made part of the pipeline, we still have the following case that doesn\u0027t work with it:\n    program A has fragment and vertex shader, the vertex shader is marked for use\n    program B has a fragment shader \n\nThis should be a linker error(program A\u0027s fragment shader isn\u0027t used), but the aggregate linked stages will contain fragment and vertex and the used stages will also have the same stages marked.",
      "parentUuid": "7d5c7446_aaefe130",
      "range": {
        "startLine": 73,
        "startChar": 0,
        "endLine": 86,
        "endChar": 9
      },
      "revId": "aeae44a83004d20ec83625bf6256fe2aad372e47",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b945be3a_57fba892",
        "filename": "src/libANGLE/ProgramPipeline.cpp",
        "patchSetId": 6
      },
      "lineNbr": 86,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-07-20T12:51:30Z",
      "side": 1,
      "message": "Well, you should be able to turn the inner for loop into a bitset check, right?",
      "parentUuid": "a6ba1dd9_b7d81adf",
      "range": {
        "startLine": 73,
        "startChar": 0,
        "endLine": 86,
        "endChar": 9
      },
      "revId": "aeae44a83004d20ec83625bf6256fe2aad372e47",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4a6b0b80_8cba8de3",
        "filename": "src/libANGLE/ProgramPipeline.cpp",
        "patchSetId": 6
      },
      "lineNbr": 86,
      "author": {
        "id": 1359667
      },
      "writtenOn": "2021-07-27T00:36:28Z",
      "side": 1,
      "message": "\u003e Also I\u0027m wondering what the value of storing this info continually in memory is - can you compute it inline in validate() and then discard it once the function returns? I didn\u0027t look closely to see how difficult this is.\nYou\u0027re referring to mProgramUsedStagesMap? - if so we have to continually store this as it only updates when glUseProgramStages is called\n\n\u003e Well, you should be able to turn the inner for loop into a bitset check, right?\nDone",
      "parentUuid": "b945be3a_57fba892",
      "range": {
        "startLine": 73,
        "startChar": 0,
        "endLine": 86,
        "endChar": 9
      },
      "revId": "aeae44a83004d20ec83625bf6256fe2aad372e47",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "52a8145f_d35695c3",
        "filename": "src/libANGLE/Shader.h",
        "patchSetId": 6
      },
      "lineNbr": 209,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-07-09T11:52:34Z",
      "side": 1,
      "message": "nit: can be outside the class",
      "range": {
        "startLine": 209,
        "startChar": 25,
        "endLine": 209,
        "endChar": 46
      },
      "revId": "aeae44a83004d20ec83625bf6256fe2aad372e47",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5a341668_61e9ff26",
        "filename": "src/libANGLE/Shader.h",
        "patchSetId": 6
      },
      "lineNbr": 209,
      "author": {
        "id": 1359667
      },
      "writtenOn": "2021-07-10T02:02:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "52a8145f_d35695c3",
      "range": {
        "startLine": 209,
        "startChar": 25,
        "endLine": 209,
        "endChar": 46
      },
      "revId": "aeae44a83004d20ec83625bf6256fe2aad372e47",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}