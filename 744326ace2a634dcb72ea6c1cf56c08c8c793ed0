{
  "comments": [
    {
      "key": {
        "uuid": "c8f61518_134456e4",
        "filename": "src/compiler/translator/ShaderStorageBlockOutputHLSL.cpp",
        "patchSetId": 6
      },
      "lineNbr": 47,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2018-10-31T11:50:00Z",
      "side": 1,
      "message": "Maybe we can even do if (swizzleNode) { call recursively on swizzleNode-\u003egetOperand()}",
      "revId": "744326ace2a634dcb72ea6c1cf56c08c8c793ed0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1007b681_48ee0749",
        "filename": "src/compiler/translator/ShaderStorageBlockOutputHLSL.cpp",
        "patchSetId": 6
      },
      "lineNbr": 58,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2018-10-31T11:50:00Z",
      "side": 1,
      "message": "This block of code is the same as [1]. Can we call GetBlockLayoutInfo recursively instead?",
      "range": {
        "startLine": 50,
        "startChar": 1,
        "endLine": 58,
        "endChar": 13
      },
      "revId": "744326ace2a634dcb72ea6c1cf56c08c8c793ed0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "17f7ad25_9d131c4f",
        "filename": "src/compiler/translator/ShaderStorageBlockOutputHLSL.cpp",
        "patchSetId": 6
      },
      "lineNbr": 61,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2018-10-31T11:50:00Z",
      "side": 1,
      "message": "Please do a recursive call on swizzleNode-\u003egetOperand here.",
      "revId": "744326ace2a634dcb72ea6c1cf56c08c8c793ed0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02c89b3c_47334b42",
        "filename": "src/compiler/translator/ShaderStorageBlockOutputHLSL.cpp",
        "patchSetId": 6
      },
      "lineNbr": 65,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2018-10-31T11:50:00Z",
      "side": 1,
      "message": "This else clause wouldn\u0027t be needed and could be replaced by initializeing binaryNode just before the if(binaryNode)",
      "revId": "744326ace2a634dcb72ea6c1cf56c08c8c793ed0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cbe96566_8bf93a28",
        "filename": "src/compiler/translator/ShaderStorageBlockOutputHLSL.cpp",
        "patchSetId": 6
      },
      "lineNbr": 74,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2018-10-31T11:50:00Z",
      "side": 1,
      "message": "Can you explain that this is a member of an interface block so it can have a row_major in its layout qualifiers? And that we don\u0027t still need to call recursively to get the storage but shouldn\u0027t assign rowmajor again.\n\nI\u0027m also surprised we don\u0027t have something similar for indexing into structs. Can\u0027t struct members be declared row-major too ?",
      "revId": "744326ace2a634dcb72ea6c1cf56c08c8c793ed0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2105844f_9448824b",
        "filename": "src/compiler/translator/ShaderStorageBlockOutputHLSL.cpp",
        "patchSetId": 6
      },
      "lineNbr": 90,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2018-10-31T11:50:00Z",
      "side": 1,
      "message": "[1]",
      "revId": "744326ace2a634dcb72ea6c1cf56c08c8c793ed0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5342ed95_08d9b70e",
        "filename": "src/compiler/translator/ShaderStorageBlockOutputHLSL.cpp",
        "patchSetId": 6
      },
      "lineNbr": 97,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2018-10-31T11:50:00Z",
      "side": 1,
      "message": "The semantic of assignRowMajor is wrong, either all conditions or booleans need to be inverted, or the variable should be renamed to \"rowMajorAlreadyAssigned\"",
      "range": {
        "startLine": 97,
        "startChar": 9,
        "endLine": 97,
        "endChar": 23
      },
      "revId": "744326ace2a634dcb72ea6c1cf56c08c8c793ed0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}