{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2b80a851_f2bb757b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1525982
      },
      "writtenOn": "2022-12-21T23:25:25Z",
      "side": 1,
      "message": "LGTM",
      "revId": "d2ee1fd22add85d7c8a5457dcd51ebd50ab25872",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7be9316b_e7a9bbf4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-12-22T16:46:14Z",
      "side": 1,
      "message": "Is this not a problem for images?\n\nWhile you\u0027re looking into this, could you please make sure all possibilities are covered in tests? That is buffer write, image read and image write (not just buffer read)",
      "revId": "d2ee1fd22add85d7c8a5457dcd51ebd50ab25872",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ae14c9d5_30c0a47f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2022-12-22T17:37:24Z",
      "side": 1,
      "message": "This is specifically the bug in OutsideRenderPassCommandBufferHelper::bufferRead() where I detect if a buffer is already read access in the RP and now try to read from outsideRPCommands. (See vk_helpers.cpp line 1465 on the right). The root cause is that if a RP is already called onRenderPassFinish, we will not detect that it has been readAccessed by RP. Image does not have the problem because we always endRP due to layout switch. bufferWrite does not have problem because read/write hazard detetcion will endRP and flush immediately. It is only a problem with buffer read from both RP and outsideRP.",
      "parentUuid": "7be9316b_e7a9bbf4",
      "revId": "d2ee1fd22add85d7c8a5457dcd51ebd50ab25872",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8e060bbb_ec969b3e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-12-22T18:15:44Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "ae14c9d5_30c0a47f",
      "revId": "d2ee1fd22add85d7c8a5457dcd51ebd50ab25872",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "89b34473_066f26db",
        "filename": "src/tests/gl_tests/BufferDataTest.cpp",
        "patchSetId": 5
      },
      "lineNbr": 1410,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-12-22T16:46:14Z",
      "side": 1,
      "message": "Please validate the result of the draw call. Otherwise the test would pass by simply dropping the assert instead of fixing the bug.",
      "revId": "d2ee1fd22add85d7c8a5457dcd51ebd50ab25872",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dda3b2b0_2b418192",
        "filename": "src/tests/gl_tests/BufferDataTest.cpp",
        "patchSetId": 5
      },
      "lineNbr": 1410,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2022-12-22T17:57:10Z",
      "side": 1,
      "message": "Added pixel check",
      "parentUuid": "89b34473_066f26db",
      "revId": "d2ee1fd22add85d7c8a5457dcd51ebd50ab25872",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}