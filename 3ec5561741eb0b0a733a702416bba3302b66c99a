{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c30877e3_505e9ada",
        "filename": "src/libGLESv2/global_state.h",
        "patchSetId": 4
      },
      "lineNbr": 160,
      "author": {
        "id": 1564492
      },
      "writtenOn": "2023-04-24T14:37:57Z",
      "side": 0,
      "message": "Skipping `context-\u003eisContextLost()` check will have different behavior.\n\nIn cases if Context is lost in other thread it will update TLS of that thread. This thread will have not `nullptr` TLS with lost Context.\n\nI do not know how we can fix Context Lost race.\nI guess implementing `GetValidGlobalContext()` is not possible if Context may be lost any time right after the call. So we need to use `GetGlobalContext()` everywhere and check for `isContextLost()` after acquiring the Context lock.\n\nWe also have race in this method for non-Shared Contexts.\n```\nvoid Display::notifyDeviceLost()\n{\n    if (mDeviceLost)\n    {\n        return;\n    }\n\n    for (ContextSet::iterator context \u003d mState.contextSet.begin();\n         context !\u003d mState.contextSet.end(); context++)\n    {\n        (*context)-\u003emarkContextLost(gl::GraphicsResetStatus::UnknownContextReset);\n    }\n\n    mDeviceLost \u003d true;\n}\n```",
      "revId": "3ec5561741eb0b0a733a702416bba3302b66c99a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9aa30074_143f1201",
        "filename": "src/libGLESv2/global_state.h",
        "patchSetId": 4
      },
      "lineNbr": 160,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-04-24T15:01:31Z",
      "side": 0,
      "message": "Thanks, I opened anglebug.com/8139 to track those races\n\nI don\u0027t believe this CL is adding a new race though; the race between \"get TLS\" and \"take share group lock\" exists both before and after this change. The `isContextLost` check here was still done before the share group lock is taken.\n\nHow about we take this change (so `isContextLost()` is removed from this path for the sake of your CL), and we can deal with the races (for all platforms) at some point later.",
      "parentUuid": "c30877e3_505e9ada",
      "revId": "3ec5561741eb0b0a733a702416bba3302b66c99a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dcb8a579_52e4771e",
        "filename": "src/libGLESv2/global_state.h",
        "patchSetId": 4
      },
      "lineNbr": 160,
      "author": {
        "id": 1564492
      },
      "writtenOn": "2023-04-24T15:12:30Z",
      "side": 0,
      "message": "\u003e I don\u0027t believe this CL is adding a new race though;\n\nProblem in this CL is not a new race. If ignore the race:\n\nBefore this CL:\n- Context 1 is current in Thread 1.\n- Thread 2 makes Contex1 lost -\u003e set `mContextLost \u003d true` and updates TLS.\n- Thread 1 reads TLS (not nullptr) checks `mContextLost` -\u003e skips the call.\n\nAfter this CL:\n- Context 1 is current in Thread 1.\n- Thread 2 makes Contex1 lost -\u003e set `mContextLost \u003d true` and updates TLS.\n- Thread 1 reads TLS (not nullptr) -\u003e uses Context that is Lost.\n\n\u003e  (so isContextLost() is removed from this path for the sake of your CL)\n\nI do not understand what is wrong with my CL. It removes lock that was added only recently and for other reason (protect `EGLImage` access). Other GLES APIs do not have the global lock before `GetValidGlobalContext()` call, what is so special about `EGLImage` APIs?",
      "parentUuid": "9aa30074_143f1201",
      "revId": "3ec5561741eb0b0a733a702416bba3302b66c99a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "07197400_8fc121b6",
        "filename": "src/libGLESv2/global_state.h",
        "patchSetId": 4
      },
      "lineNbr": 160,
      "author": {
        "id": 1564492
      },
      "writtenOn": "2023-04-24T15:21:49Z",
      "side": 0,
      "message": "\u003e How about we take this change (so isContextLost() is removed from this path for the sake of your CL), and we can deal with the races (for all platforms) at some point later.\n\nI read the anglebug.com/8139 issue. It looks like the issue addresses the problem I described above.\n\nSince the above problem was actual for all non-Android Platforms anyway, I agree to lend this change and fix other problems later.",
      "parentUuid": "dcb8a579_52e4771e",
      "revId": "3ec5561741eb0b0a733a702416bba3302b66c99a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4b182575_01cec0d6",
        "filename": "src/libGLESv2/global_state.h",
        "patchSetId": 4
      },
      "lineNbr": 160,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-04-24T15:35:45Z",
      "side": 0,
      "message": "\u003e I read the anglebug.com/8139 issue. It looks like the issue addresses the problem I described above.\n\nYes, I just opened it based on your comment above ðŸ˜Š\n\n\u003e Other GLES APIs do not have the global lock before GetValidGlobalContext() call, what is so special about EGLImage APIs?\n\nYou\u0027re right, your change is not introducing a new race either, I saw your recent comment after making the above.",
      "parentUuid": "07197400_8fc121b6",
      "revId": "3ec5561741eb0b0a733a702416bba3302b66c99a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}