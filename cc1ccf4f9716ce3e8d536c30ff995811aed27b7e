{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c505cc65_a07ca513",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-04-12T18:06:26Z",
      "side": 1,
      "message": "Chris FYI. Couple small comments, otherwise looks good.",
      "revId": "cc1ccf4f9716ce3e8d536c30ff995811aed27b7e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc76c9ad_c08e1118",
        "filename": "scripts/generate_entry_points.py",
        "patchSetId": 1
      },
      "lineNbr": 2449,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-04-12T18:06:26Z",
      "side": 1,
      "message": "instead pass the API and get it from that?",
      "range": {
        "startLine": 2449,
        "startChar": 13,
        "endLine": 2449,
        "endChar": 34
      },
      "revId": "cc1ccf4f9716ce3e8d536c30ff995811aed27b7e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f4a56d4d_20b2309a",
        "filename": "scripts/generate_entry_points.py",
        "patchSetId": 1
      },
      "lineNbr": 2449,
      "author": {
        "id": 1499132
      },
      "writtenOn": "2021-04-12T18:30:50Z",
      "side": 1,
      "message": "You mean create a function like get_api_entry_def(api) which returns the template?",
      "parentUuid": "bc76c9ad_c08e1118",
      "range": {
        "startLine": 2449,
        "startChar": 13,
        "endLine": 2449,
        "endChar": 34
      },
      "revId": "cc1ccf4f9716ce3e8d536c30ff995811aed27b7e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "808d7d1f_d9f9ec7d",
        "filename": "scripts/generate_entry_points.py",
        "patchSetId": 1
      },
      "lineNbr": 2449,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-04-12T18:37:20Z",
      "side": 1,
      "message": "sure, that sounds good. although I would use the word template in the helper.",
      "parentUuid": "f4a56d4d_20b2309a",
      "range": {
        "startLine": 2449,
        "startChar": 13,
        "endLine": 2449,
        "endChar": 34
      },
      "revId": "cc1ccf4f9716ce3e8d536c30ff995811aed27b7e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "335c4971_aecffde8",
        "filename": "scripts/generate_entry_points.py",
        "patchSetId": 1
      },
      "lineNbr": 2449,
      "author": {
        "id": 1499132
      },
      "writtenOn": "2021-04-12T19:28:00Z",
      "side": 1,
      "message": "Yes, I meant similar to the existing function get_api_entry_def. Done",
      "parentUuid": "808d7d1f_d9f9ec7d",
      "range": {
        "startLine": 2449,
        "startChar": 13,
        "endLine": 2449,
        "endChar": 34
      },
      "revId": "cc1ccf4f9716ce3e8d536c30ff995811aed27b7e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "84beb330_7d310931",
        "filename": "src/libGLESv2.gni",
        "patchSetId": 1
      },
      "lineNbr": 538,
      "author": {
        "id": 1499132
      },
      "writtenOn": "2021-04-12T16:47:26Z",
      "side": 1,
      "message": "The same defines are also used in src/libOpenCL/BUILD.gn. It would be good to have them shared in one place. Do we have (or should we create) a place for that, e.g. in angle/gni/?",
      "range": {
        "startLine": 530,
        "startChar": 0,
        "endLine": 538,
        "endChar": 1
      },
      "revId": "cc1ccf4f9716ce3e8d536c30ff995811aed27b7e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e5f663c1_2c5c139c",
        "filename": "src/libGLESv2.gni",
        "patchSetId": 1
      },
      "lineNbr": 538,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-04-12T18:06:26Z",
      "side": 1,
      "message": "instead of putting them in the build, add an angle_cl.h header and include that in place of \u003cCL/cl.h\u003e. See angle_gl.h.",
      "parentUuid": "84beb330_7d310931",
      "range": {
        "startLine": 530,
        "startChar": 0,
        "endLine": 538,
        "endChar": 1
      },
      "revId": "cc1ccf4f9716ce3e8d536c30ff995811aed27b7e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2e10ba0c_74415dfa",
        "filename": "src/libGLESv2.gni",
        "patchSetId": 1
      },
      "lineNbr": 538,
      "author": {
        "id": 1499132
      },
      "writtenOn": "2021-04-12T18:30:50Z",
      "side": 1,
      "message": "I was thinking about that, but we don\u0027t always include the same OpenCL headers (loader needs cl_icd.h, entry points only need cl.h). So we need either multiple angle_*.h headers, or only one which includes all of OpenCL even it is not always all needed.",
      "parentUuid": "e5f663c1_2c5c139c",
      "range": {
        "startLine": 530,
        "startChar": 0,
        "endLine": 538,
        "endChar": 1
      },
      "revId": "cc1ccf4f9716ce3e8d536c30ff995811aed27b7e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4fe698bc_420344b4",
        "filename": "src/libGLESv2.gni",
        "patchSetId": 1
      },
      "lineNbr": 538,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-04-12T18:37:20Z",
      "side": 1,
      "message": "including all seems fine to me.",
      "parentUuid": "2e10ba0c_74415dfa",
      "range": {
        "startLine": 530,
        "startChar": 0,
        "endLine": 538,
        "endChar": 1
      },
      "revId": "cc1ccf4f9716ce3e8d536c30ff995811aed27b7e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "41f51de7_e32b70ef",
        "filename": "src/libGLESv2.gni",
        "patchSetId": 1
      },
      "lineNbr": 538,
      "author": {
        "id": 1499132
      },
      "writtenOn": "2021-04-12T19:28:00Z",
      "side": 1,
      "message": "Ok, thanks, done.",
      "parentUuid": "4fe698bc_420344b4",
      "range": {
        "startLine": 530,
        "startChar": 0,
        "endLine": 538,
        "endChar": 1
      },
      "revId": "cc1ccf4f9716ce3e8d536c30ff995811aed27b7e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0e512ac4_a2e29e06",
        "filename": "src/libGLESv2.gni",
        "patchSetId": 1
      },
      "lineNbr": 538,
      "author": {
        "id": 1499132
      },
      "writtenOn": "2021-04-12T20:59:22Z",
      "side": 1,
      "message": "That didn\u0027t work, Windows UWP doesn\u0027t like it that OpenCL includes D3D9. This can be a major problem in the future. Any idea how to solve it? Isn\u0027t UWP dead anyway?",
      "parentUuid": "41f51de7_e32b70ef",
      "range": {
        "startLine": 530,
        "startChar": 0,
        "endLine": 538,
        "endChar": 1
      },
      "revId": "cc1ccf4f9716ce3e8d536c30ff995811aed27b7e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8464b224_113569f8",
        "filename": "src/libGLESv2.gni",
        "patchSetId": 1
      },
      "lineNbr": 538,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-04-12T21:02:56Z",
      "side": 1,
      "message": "I forget where UWP is still used, I think it\u0027s for the Microsoft Store (yes still a thing AFAIK) and some types of limited Windows devices. Maybe XBox platforms.\n\nOne option is to completely disable CL building on UWP. Is that hard to do? The other option would be to conditionally include stuff.",
      "parentUuid": "0e512ac4_a2e29e06",
      "range": {
        "startLine": 530,
        "startChar": 0,
        "endLine": 538,
        "endChar": 1
      },
      "revId": "cc1ccf4f9716ce3e8d536c30ff995811aed27b7e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f9afcdfb_35b54478",
        "filename": "src/libGLESv2.gni",
        "patchSetId": 1
      },
      "lineNbr": 538,
      "author": {
        "id": 1499132
      },
      "writtenOn": "2021-04-13T10:20:22Z",
      "side": 1,
      "message": "I changed it so that angle_cl.h only includes opencl.h, which doesn\u0027t include D3D. We can deal with D3D if we ever want to actually support it. It was included by cl_icd.h, which is now only used by libOpenCL, where it obviously doesn\u0027t conflict with UWP.",
      "parentUuid": "8464b224_113569f8",
      "range": {
        "startLine": 530,
        "startChar": 0,
        "endLine": 538,
        "endChar": 1
      },
      "revId": "cc1ccf4f9716ce3e8d536c30ff995811aed27b7e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}