{
  "comments": [
    {
      "key": {
        "uuid": "470188ca_ed72cf55",
        "filename": "src/libANGLE/Overlay.h",
        "patchSetId": 12
      },
      "lineNbr": 29,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-08-30T15:59:19Z",
      "side": 1,
      "message": "feels like an Impl object might be overkill really. We could probably just use normal inheritance and make the class a part of /src/libANGLE/renderer in rx::. But to keep things moving I\u0027m fine with landing this as-is.",
      "range": {
        "startLine": 29,
        "startChar": 6,
        "endLine": 29,
        "endChar": 19
      },
      "revId": "4f01a42d1a6323da42d7b368705f4f4c7534b11c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a9f93458_1c51e7d2",
        "filename": "src/libANGLE/Overlay.h",
        "patchSetId": 12
      },
      "lineNbr": 53,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-08-30T15:59:19Z",
      "side": 1,
      "message": "can you make these unique_ptrs?",
      "range": {
        "startLine": 53,
        "startChar": 44,
        "endLine": 53,
        "endChar": 51
      },
      "revId": "4f01a42d1a6323da42d7b368705f4f4c7534b11c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "90fbc9e8_d3c12330",
        "filename": "src/libANGLE/Overlay.h",
        "patchSetId": 12
      },
      "lineNbr": 96,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-08-30T15:59:19Z",
      "side": 1,
      "message": "you can use GetAs here to enforce dynamic cast when possible.",
      "range": {
        "startLine": 96,
        "startChar": 15,
        "endLine": 96,
        "endChar": 41
      },
      "revId": "4f01a42d1a6323da42d7b368705f4f4c7534b11c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c73fba5f_3b73a861",
        "filename": "src/libANGLE/Overlay.h",
        "patchSetId": 12
      },
      "lineNbr": 105,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-08-30T15:59:19Z",
      "side": 1,
      "message": "you can use std::unique_ptr here. And you can call it mImplementation to be consistent. That was the consensus last time I checked.",
      "range": {
        "startLine": 105,
        "startChar": 21,
        "endLine": 105,
        "endChar": 26
      },
      "revId": "4f01a42d1a6323da42d7b368705f4f4c7534b11c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e0e1f1d2_b0e54fdb",
        "filename": "src/libANGLE/Surface.cpp",
        "patchSetId": 12
      },
      "lineNbr": 238,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-08-30T15:59:19Z",
      "side": 1,
      "message": "there\u0027s also swapWithDamage and postSubBuffer. They both act as swaps for different users. e.g. Chromium uses postSubBuffer when DC is disabled. I had the same problems with frame capture. We might want to eventually hook into native APIs ourselves to detect swaps.",
      "range": {
        "startLine": 238,
        "startChar": 4,
        "endLine": 238,
        "endChar": 47
      },
      "revId": "4f01a42d1a6323da42d7b368705f4f4c7534b11c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}