{
  "comments": [
    {
      "key": {
        "uuid": "f64cf55f_94742a90",
        "filename": "src/libANGLE/renderer/d3d/RendererD3D.cpp",
        "patchSetId": 13
      },
      "lineNbr": 412,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-11-02T13:15:42Z",
      "side": 1,
      "message": "This is good, it seems we\u0027re passing the bots now on Windows at least in the config I checked. To repeat what I said in your doc, I think we should try to contain the workaround to the D3D code, by a) keeping a copy of the dirty bits in RendererD3D b) storing them on calls to RendererD3D::syncState, and c) StateManagerD3D::syncState with our internal copy of the dirty bits here, and clearing them. Also we may have to move the syncState to genericDrawArrays/genericDrawElements right before the skipDraw, if those other calls to applyThisAndThat call force bits.",
      "range": {
        "startLine": 412,
        "startChar": 4,
        "endLine": 412,
        "endChar": 63
      },
      "revId": "6367895f87cf27f79faa38c92102bc4b03a1c7c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f6195673_5fe13ebe",
        "filename": "src/libANGLE/renderer/d3d/RendererD3D.cpp",
        "patchSetId": 13
      },
      "lineNbr": 412,
      "author": {
        "id": 1135124
      },
      "writtenOn": "2015-11-02T21:49:27Z",
      "side": 1,
      "message": "I like this alternative and agree with the idea of containing the changes in D3D. It might even be better to keep a copy of the externalDirtyBits in StateManagerD3D instead of the RendererD3D side, so when a call is made to RendererD3D::syncState, it calls StateManagerD3D::syncDirtyBits to sync the externalDirtyBits, then StateManager::syncState uses the internal and externalDirtyBits, then clears externalDirtyBits. That way, we can contain all the state manipulation in the state manager",
      "parentUuid": "f64cf55f_94742a90",
      "range": {
        "startLine": 412,
        "startChar": 4,
        "endLine": 412,
        "endChar": 63
      },
      "revId": "6367895f87cf27f79faa38c92102bc4b03a1c7c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}