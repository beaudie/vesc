{
  "comments": [
    {
      "key": {
        "uuid": "0270de16_3760c18d",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 1255,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-03-19T22:17:44Z",
      "side": 1,
      "message": "This work should be done inside of imageRead()/imageWrite(), since it\u0027s required by them an the \u0027barrierData\u0027 doesn\u0027t need to be referenced outside of there.",
      "range": {
        "startLine": 1254,
        "startChar": 0,
        "endLine": 1255,
        "endChar": 78
      },
      "revId": "e1f5e2e6845ff76eaa70ac9082f492f62828bfaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "64e89b2b_2909ad4f",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 1255,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-03-19T23:17:43Z",
      "side": 1,
      "message": "To clarify this change. This is the preparation for https://chromium-review.googlesource.com/c/angle/angle/+/2102957/9. This logic will be changed to something like this\n\nif(shaderStage contains one bit)\n    barrierData \u003d vk::ImageMemoryBarrierData::getPrebuildBarrierData(textureLayout)\nelse\n    barrierData \u003d vk::ImageMemoryBarrierData(accessStageMask,...);",
      "parentUuid": "0270de16_3760c18d",
      "range": {
        "startLine": 1254,
        "startChar": 0,
        "endLine": 1255,
        "endChar": 78
      },
      "revId": "e1f5e2e6845ff76eaa70ac9082f492f62828bfaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4063247c_87c23683",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 1255,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-03-20T00:02:28Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "64e89b2b_2909ad4f",
      "range": {
        "startLine": 1254,
        "startChar": 0,
        "endLine": 1255,
        "endChar": 78
      },
      "revId": "e1f5e2e6845ff76eaa70ac9082f492f62828bfaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7c247b6c_002ab3c9",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 5
      },
      "lineNbr": 173,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-03-19T22:17:44Z",
      "side": 1,
      "message": "nit: getPrebuiltBarrierData (change Prebuild to Prebuilt)",
      "range": {
        "startLine": 173,
        "startChar": 54,
        "endLine": 173,
        "endChar": 76
      },
      "revId": "e1f5e2e6845ff76eaa70ac9082f492f62828bfaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3a39e123_ca646481",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 5
      },
      "lineNbr": 173,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-03-19T23:17:43Z",
      "side": 1,
      "message": "Thanks for point out! Will fix.",
      "parentUuid": "7c247b6c_002ab3c9",
      "range": {
        "startLine": 173,
        "startChar": 54,
        "endLine": 173,
        "endChar": 76
      },
      "revId": "e1f5e2e6845ff76eaa70ac9082f492f62828bfaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fae8486b_e184e44a",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 5
      },
      "lineNbr": 173,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-03-20T00:02:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3a39e123_ca646481",
      "range": {
        "startLine": 173,
        "startChar": 54,
        "endLine": 173,
        "endChar": 76
      },
      "revId": "e1f5e2e6845ff76eaa70ac9082f492f62828bfaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "245ba71e_21d5d23b",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 5
      },
      "lineNbr": 323,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-03-19T22:17:44Z",
      "side": 1,
      "message": "Can you add a comment here that describes why MultiShadersAccess is being treated special?",
      "revId": "e1f5e2e6845ff76eaa70ac9082f492f62828bfaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "71ca38bd_71ba58ff",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 5
      },
      "lineNbr": 323,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-03-19T23:17:43Z",
      "side": 1,
      "message": "Will do. The idea is that all prebuilt enums are static allocated and never change. Only this MultiShaderAccess barrierData is dynamically allocated and destroyed to give us flexibility to create a customized barrierData object. This way, I get to keep both the benefit of prebuilt enums and give me flexibility to create whatever we needed for rare usage case, like accessed from multiple shader stage at same time.\n\nI will add more comment.",
      "parentUuid": "245ba71e_21d5d23b",
      "revId": "e1f5e2e6845ff76eaa70ac9082f492f62828bfaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4fafdebc_3e620318",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 5
      },
      "lineNbr": 324,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-03-19T22:17:44Z",
      "side": 1,
      "message": "nit: surround with braces",
      "revId": "e1f5e2e6845ff76eaa70ac9082f492f62828bfaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "edbfb8de_fc3aef0c",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 5
      },
      "lineNbr": 324,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-03-20T00:02:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4fafdebc_3e620318",
      "revId": "e1f5e2e6845ff76eaa70ac9082f492f62828bfaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f1e74967_2d8ea07b",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 5
      },
      "lineNbr": 1825,
      "author": {
        "id": 1263724
      },
      "writtenOn": "2020-03-19T22:43:21Z",
      "side": 1,
      "message": "duplicate line",
      "revId": "e1f5e2e6845ff76eaa70ac9082f492f62828bfaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "682d3aeb_df46a51e",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 5
      },
      "lineNbr": 1825,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-03-20T00:02:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f1e74967_2d8ea07b",
      "revId": "e1f5e2e6845ff76eaa70ac9082f492f62828bfaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3239d366_dedaec2b",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2011,
      "author": {
        "id": 1263724
      },
      "writtenOn": "2020-03-19T22:43:21Z",
      "side": 1,
      "message": "nit: I think it would feel more purposeful to have updateBarrierData set mCurrentLayout.\nAre there times when you would update mCurrentLayout and not want to do this check?\nIf so, then separate is probably okay.\nOtherwise, I think it would read easier if this was \nvoid ImageHelper::updateCurrentLayout(ImageLayout layout)\n{\n    if (mBarrierData-\u003eimageLayout() !\u003d layout)\n...\n    mCurrentLayout \u003d layout;\n}\nThen replace where you assign mCurrentLayout to be updateCurrentLayout(...).\nOtherwise, to me at least, updateBarrierData() is some magic thing that\u0027s not obvious.",
      "revId": "e1f5e2e6845ff76eaa70ac9082f492f62828bfaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8e710044_54e0fcf5",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2011,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-03-19T23:17:43Z",
      "side": 1,
      "message": "Yea, I will change it to updatePrebuiltLayoutAndBarrierData() and will both set mCurrentLayout and set mBarrierData as well.",
      "parentUuid": "3239d366_dedaec2b",
      "revId": "e1f5e2e6845ff76eaa70ac9082f492f62828bfaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d06bdad5_bdb378cd",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2011,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-03-20T00:02:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8e710044_54e0fcf5",
      "revId": "e1f5e2e6845ff76eaa70ac9082f492f62828bfaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bc7f3d44_8725aa38",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2024,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-03-19T22:17:44Z",
      "side": 1,
      "message": "It looks like every time mCurrentLayout is modified, updateBarrierData() needs to be called also.   It feels like we have a setCurrentLayout() that does both of these so mCurrentLayout is only updated in a single place.",
      "revId": "e1f5e2e6845ff76eaa70ac9082f492f62828bfaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1cb17bb5_28efbc0f",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2024,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-03-20T00:02:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bc7f3d44_8725aa38",
      "revId": "e1f5e2e6845ff76eaa70ac9082f492f62828bfaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4121a8bc_b499314b",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2088,
      "author": {
        "id": 1263724
      },
      "writtenOn": "2020-03-19T22:43:21Z",
      "side": 1,
      "message": "Why is this mBarrierData-\u003elayout() but the assert is checking imageLayout?",
      "revId": "e1f5e2e6845ff76eaa70ac9082f492f62828bfaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "36a022e1_a5375558",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2088,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-03-19T23:17:43Z",
      "side": 1,
      "message": "It is returning the vkImageLayout. The assertion just to ensure the mCurrentLayout and mBarrierData is consistent. It does not have this function, just some convenient place to ensure I do not have logic error somewhere.",
      "parentUuid": "4121a8bc_b499314b",
      "revId": "e1f5e2e6845ff76eaa70ac9082f492f62828bfaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9bd2ad5c_a5ae04dc",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2088,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-03-20T00:02:28Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "36a022e1_a5375558",
      "revId": "e1f5e2e6845ff76eaa70ac9082f492f62828bfaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee806f31_aba916ec",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2125,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-03-19T22:17:44Z",
      "side": 1,
      "message": "This was checked already and \u0027needBarrier \u003d true\u0027, so this work can be merged into the previous block.",
      "revId": "e1f5e2e6845ff76eaa70ac9082f492f62828bfaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f7d2a293_14a84ecd",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2125,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-03-20T00:02:28Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "ee806f31_aba916ec",
      "revId": "e1f5e2e6845ff76eaa70ac9082f492f62828bfaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d3991858_dc94501e",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2126,
      "author": {
        "id": 1263724
      },
      "writtenOn": "2020-03-19T22:43:21Z",
      "side": 1,
      "message": "This could become a call to my proposed ImageHelper::updateCurrentLayout(ImageLayout layout) function above.",
      "revId": "e1f5e2e6845ff76eaa70ac9082f492f62828bfaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "31f2089f_ceab6eb5",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2126,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-03-20T00:02:28Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "d3991858_dc94501e",
      "revId": "e1f5e2e6845ff76eaa70ac9082f492f62828bfaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e801bcc8_82f99f62",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2127,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-03-19T22:17:44Z",
      "side": 1,
      "message": "How would mBarrierData ever be NULL?   Should this be an ASSERT() to enforce it\u0027s non-null at the beginning of the function?",
      "revId": "e1f5e2e6845ff76eaa70ac9082f492f62828bfaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f0a1a628_7d371892",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2127,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-03-20T00:02:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e801bcc8_82f99f62",
      "revId": "e1f5e2e6845ff76eaa70ac9082f492f62828bfaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0868d027_7d6bc9dd",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2128,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-03-19T22:17:44Z",
      "side": 1,
      "message": "nit: surround with braces.",
      "revId": "e1f5e2e6845ff76eaa70ac9082f492f62828bfaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cccaa2de_6c6db08b",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2128,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-03-20T00:02:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0868d027_7d6bc9dd",
      "revId": "e1f5e2e6845ff76eaa70ac9082f492f62828bfaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8606df03_ed4a8ce7",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2134,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-03-19T22:17:44Z",
      "side": 1,
      "message": "Why are these explicit versions necessary and why are they empty?\n\nAlso, why aren\u0027t they using the template specialization syntax?",
      "revId": "e1f5e2e6845ff76eaa70ac9082f492f62828bfaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ebad591d_c3043e61",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2134,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-03-20T00:02:28Z",
      "side": 1,
      "message": "I not expert on template. I copied existing usage. I just looked at the internet, it seems the other way to instantiate is more verbose. Either way is fine with me, but better be consistent with rest of usage.",
      "parentUuid": "8606df03_ed4a8ce7",
      "revId": "e1f5e2e6845ff76eaa70ac9082f492f62828bfaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1eb0652b_780806f2",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2165,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-03-19T22:17:44Z",
      "side": 1,
      "message": "Same as above, merge into the previous block.",
      "revId": "e1f5e2e6845ff76eaa70ac9082f492f62828bfaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ae2a6a28_3f659ceb",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2165,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-03-20T00:02:28Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "1eb0652b_780806f2",
      "revId": "e1f5e2e6845ff76eaa70ac9082f492f62828bfaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7016cb80_657e162a",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2175,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-03-19T22:17:44Z",
      "side": 1,
      "message": "Remove: duplicate",
      "revId": "e1f5e2e6845ff76eaa70ac9082f492f62828bfaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8b3e1114_329e0cbe",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2175,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-03-19T23:17:43Z",
      "side": 1,
      "message": "These are two different template instance with different CommandBufferT. Otherwise, it fail to build.",
      "parentUuid": "7016cb80_657e162a",
      "revId": "e1f5e2e6845ff76eaa70ac9082f492f62828bfaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e3559b0e_4110b2a8",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2175,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-03-20T00:02:28Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "8b3e1114_329e0cbe",
      "revId": "e1f5e2e6845ff76eaa70ac9082f492f62828bfaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e867ad37_d9f7f3b6",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2246,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-03-19T22:17:44Z",
      "side": 1,
      "message": "Same as above, why are these necessary?",
      "revId": "e1f5e2e6845ff76eaa70ac9082f492f62828bfaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1fb913d6_30a54326",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 5
      },
      "lineNbr": 625,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-03-19T22:17:44Z",
      "side": 1,
      "message": "What is this value for?",
      "revId": "e1f5e2e6845ff76eaa70ac9082f492f62828bfaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e41b4940_5b6a11f6",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 5
      },
      "lineNbr": 625,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-03-20T00:02:28Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "1fb913d6_30a54326",
      "revId": "e1f5e2e6845ff76eaa70ac9082f492f62828bfaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "55678e21_fe002e81",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 5
      },
      "lineNbr": 626,
      "author": {
        "id": 1263724
      },
      "writtenOn": "2020-03-19T22:43:21Z",
      "side": 1,
      "message": "14? or is it duplicate for a reason?",
      "range": {
        "startLine": 626,
        "startChar": 33,
        "endLine": 626,
        "endChar": 35
      },
      "revId": "e1f5e2e6845ff76eaa70ac9082f492f62828bfaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "44c92645_41a8aaac",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 5
      },
      "lineNbr": 626,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-03-19T23:17:43Z",
      "side": 1,
      "message": "It is 13. PrebuildLayoutCount is used in prebuild array. It is like EnumCount, except that this is count for all prebuilt enums. Maybe I can add some comment here.",
      "parentUuid": "55678e21_fe002e81",
      "range": {
        "startLine": 626,
        "startChar": 33,
        "endLine": 626,
        "endChar": 35
      },
      "revId": "e1f5e2e6845ff76eaa70ac9082f492f62828bfaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ff093396_a11f0b2e",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 5
      },
      "lineNbr": 626,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-03-20T00:02:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "44c92645_41a8aaac",
      "range": {
        "startLine": 626,
        "startChar": 33,
        "endLine": 626,
        "endChar": 35
      },
      "revId": "e1f5e2e6845ff76eaa70ac9082f492f62828bfaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8be6e0c8_d5ac1392",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 5
      },
      "lineNbr": 933,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-03-19T22:17:44Z",
      "side": 1,
      "message": "Same as above: this work should be done inside forceChangeLayoutAndQueue().",
      "range": {
        "startLine": 932,
        "startChar": 0,
        "endLine": 933,
        "endChar": 70
      },
      "revId": "e1f5e2e6845ff76eaa70ac9082f492f62828bfaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f3503418_ab93fe6c",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 5
      },
      "lineNbr": 933,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-03-20T00:02:28Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "8be6e0c8_d5ac1392",
      "range": {
        "startLine": 932,
        "startChar": 0,
        "endLine": 933,
        "endChar": 70
      },
      "revId": "e1f5e2e6845ff76eaa70ac9082f492f62828bfaf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}