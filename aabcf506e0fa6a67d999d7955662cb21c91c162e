{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ee73d935_32efaf81",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2023-01-13T22:10:10Z",
      "side": 1,
      "message": "PTAL - all android bot failures are tests from Yuxin\u0027s patch which i think need to be disabled until we can add the FRONT_BUFFER usage flag to the AHB",
      "revId": "aabcf506e0fa6a67d999d7955662cb21c91c162e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ceb03e12_a43a1d87",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1520902
      },
      "writtenOn": "2023-01-14T01:19:08Z",
      "side": 1,
      "message": "Thank you Mohan for the work.\n\nCan I ask a few questions:\n\n1. Are the values in [AHardwareBuffer_UsageFlags]( https://source.chromium.org/chromium/chromium/src/+/main:third_party/android_ndk/toolchains/llvm/prebuilt/linux-x86_64/sysroot/usr/include/android/hardware_buffer.h;l\u003d166?) comes from [BufferUsage](https://cs.android.com/android/platform/superproject/+/master:out/soong/.intermediates/hardware/interfaces/graphics/common/aidl/android.hardware.graphics.common-V4-ndk-source/gen/include/aidl/android/hardware/graphics/common/BufferUsage.h;l\u003d19;drc\u003d97f313746fda8cb15680a212080179be619f665e)?\n\n2. Do you think we can modify the test to create the AHB with the temp flag you added? \n\ne.g. in this function [createAndroidHardwareBuffer](https://source.chromium.org/chromium/chromium/src/+/main:third_party/angle/src/tests/gl_tests/ImageTest.cpp;l\u003d699), do something like this:\n```\nif ((usage \u0026 ahbFrontBufferUsageBit) !\u003d 0)\n{\n    aHardwareBufferDescription.usage |\u003d kAhardwareBufferUsageFrontBuffer;\n}\n```",
      "parentUuid": "ee73d935_32efaf81",
      "revId": "aabcf506e0fa6a67d999d7955662cb21c91c162e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "53dc728e_2c045d26",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2023-01-14T01:30:22Z",
      "side": 1,
      "message": "1. im not exactly sure who is responsible to maintain parity between `BufferUsage` and `AHardwareBuffer_UsageFlags` but the `BufferUsage` flags im using as reference comes from here -\u003e https://cs.android.com/android/platform/superproject/+/master:hardware/interfaces/graphics/common/aidl/android/hardware/graphics/common/BufferUsage.aidl\n\n2. unfortunately no. if we add a flag that AHardwareBuffer module doesn\u0027t know it will fail validation and refuse to allocate the buffer, at least that has been my experience. what we can do is check if Android API level \u003e 33 (which is when the new flag was introduced) then add the flag to the test itself before allocating the AHB and then enable the test",
      "parentUuid": "ceb03e12_a43a1d87",
      "revId": "aabcf506e0fa6a67d999d7955662cb21c91c162e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0b25336b_863f76e8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1520902
      },
      "writtenOn": "2023-01-14T01:53:25Z",
      "side": 1,
      "message": "Got it. Thank you!\n\nIn that case I think it is fine to skip the failed `ImageTests.AHBDrawFlushApplied*`. I don\u0027t know if we have an existing function to check Android API level. Maybe we can do something similar to [ANGLE_AHARDWARE_BUFFER_LOCK_PLANES_SUPPORT](https://source.chromium.org/chromium/chromium/src/+/main:third_party/angle/src/tests/gl_tests/ImageTest.cpp;l\u003d23), and skip the test similar to [this test skip code](https://source.chromium.org/chromium/chromium/src/+/main:third_party/angle/src/tests/gl_tests/ImageTest.cpp;l\u003d3014)\n\n\n\nOne more question, why the [original test](https://cs.android.com/android/platform/superproject/+/master:hardware/interfaces/graphics/allocator/aidl/vts/VtsHalGraphicsAllocatorAidl_TargetTest.cpp;l\u003d370) that triggered the bug did not run into the AHardwareBuffer validation error? Is it because the test is allocating the AHB with a different API? Different from this [API](https://source.chromium.org/chromium/chromium/src/+/main:third_party/angle/src/tests/gl_tests/ImageTest.cpp;l\u003d736)",
      "parentUuid": "53dc728e_2c045d26",
      "revId": "aabcf506e0fa6a67d999d7955662cb21c91c162e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "46da2590_1be11b3b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2023-01-14T05:44:06Z",
      "side": 1,
      "message": "\u003e Maybe we can do something similar to ANGLE_AHARDWARE_BUFFER_LOCK_PLANES_SUPPORT, and skip the test similar to this test skip code\n\nyes, that seems doable\n\n\u003e why the original test that triggered the bug did not run into the AHardwareBuffer validation error? Is it because the test is allocating the AHB with a different API? Different from this API\n\ni am unable to run those tests on my device with Android T, i had to request team member to run the test on an environment with Android U. So i suspect the device you used to run the original test has its system image updated to latest version which supports the new flag",
      "parentUuid": "0b25336b_863f76e8",
      "revId": "aabcf506e0fa6a67d999d7955662cb21c91c162e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "88bc5c0c_ad41e94d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2023-01-14T23:19:20Z",
      "side": 1,
      "message": "\u003e yes, that seems doable\n\nDone",
      "parentUuid": "46da2590_1be11b3b",
      "revId": "aabcf506e0fa6a67d999d7955662cb21c91c162e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}