{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "a73a95e9_01d5d995",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2024-11-05T16:52:04Z",
      "side": 1,
      "message": "PTAL",
      "revId": "72081ce472e5b10db71a13c97dfeb7ce4db29cfd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "92fd6b7c_cbdb4ec4",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 3
      },
      "lineNbr": 7086,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2024-11-05T17:09:44Z",
      "side": 1,
      "message": "Could you also add:\n```\n    mLastNonShaderReadOnlyEvent.release(renderer);\n```",
      "range": {
        "startLine": 7086,
        "startChar": 0,
        "endLine": 7086,
        "endChar": 34
      },
      "revId": "72081ce472e5b10db71a13c97dfeb7ce4db29cfd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6bccd6f8_4c895eed",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 3
      },
      "lineNbr": 7086,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2024-11-05T17:26:17Z",
      "side": 1,
      "message": "im not that familiar with the event feature, should this \"release\" be done only if the image is transitioning from a non-shaderReadOnlyLayout? when and how should `mLastNonShaderReadOnlyEvent` be set",
      "parentUuid": "92fd6b7c_cbdb4ec4",
      "range": {
        "startLine": 7086,
        "startChar": 0,
        "endLine": 7086,
        "endChar": 34
      },
      "revId": "72081ce472e5b10db71a13c97dfeb7ce4db29cfd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f076dbbd_0079b235",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 3
      },
      "lineNbr": 7086,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2024-11-05T17:30:39Z",
      "side": 1,
      "message": "release() will force it to use pipelineBarrier next barrier call, so it is conservative way to do it. Given there is no evidence that event may help in this specific usage scenario, I suggest just force pipelineBarrier to be safe.",
      "parentUuid": "6bccd6f8_4c895eed",
      "range": {
        "startLine": 7086,
        "startChar": 0,
        "endLine": 7086,
        "endChar": 34
      },
      "revId": "72081ce472e5b10db71a13c97dfeb7ce4db29cfd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "df391175_b847d7fc",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 3
      },
      "lineNbr": 7086,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2024-11-05T17:40:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f076dbbd_0079b235",
      "range": {
        "startLine": 7086,
        "startChar": 0,
        "endLine": 7086,
        "endChar": 34
      },
      "revId": "72081ce472e5b10db71a13c97dfeb7ce4db29cfd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}