{
  "comments": [
    {
      "key": {
        "uuid": "c0d21ee5_86240738",
        "filename": "src/libANGLE/renderer/vulkan/gen_vk_format_table.py",
        "patchSetId": 2
      },
      "lineNbr": 72,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-06-26T20:55:35Z",
      "side": 1,
      "message": "make sure your code wraps to 100 chars.",
      "range": {
        "startLine": 72,
        "startChar": 93,
        "endLine": 72,
        "endChar": 118
      },
      "revId": "20f7ca68ee3e026e855b61bf48fa662592617438",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "094e2cda_710feece",
        "filename": "src/libANGLE/renderer/vulkan/gen_vk_format_table.py",
        "patchSetId": 2
      },
      "lineNbr": 72,
      "author": {
        "id": 1001426
      },
      "writtenOn": "2018-06-27T00:01:46Z",
      "side": 1,
      "message": "will do",
      "parentUuid": "c0d21ee5_86240738",
      "range": {
        "startLine": 72,
        "startChar": 93,
        "endLine": 72,
        "endChar": 118
      },
      "revId": "20f7ca68ee3e026e855b61bf48fa662592617438",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e027073_18cb0c3a",
        "filename": "src/libANGLE/renderer/vulkan/vk_format_table_autogen.cpp",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-06-26T20:55:35Z",
      "side": 1,
      "message": "could be cool to keep the old template here.",
      "range": {
        "startLine": 30,
        "startChar": 29,
        "endLine": 30,
        "endChar": 44
      },
      "revId": "20f7ca68ee3e026e855b61bf48fa662592617438",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "48df948b_a7f2dd5d",
        "filename": "src/libANGLE/renderer/vulkan/vk_format_table_autogen.cpp",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1001426
      },
      "writtenOn": "2018-06-27T00:01:46Z",
      "side": 1,
      "message": "ok I can do that when texure\u003d\u003dNONE and buffer\u003d\u003dNONE",
      "parentUuid": "6e027073_18cb0c3a",
      "range": {
        "startLine": 30,
        "startChar": 29,
        "endLine": 30,
        "endChar": 44
      },
      "revId": "20f7ca68ee3e026e855b61bf48fa662592617438",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9e479a01_68fb0871",
        "filename": "src/libANGLE/renderer/vulkan/vk_format_utils.cpp",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-06-26T20:55:35Z",
      "side": 1,
      "message": "we should at some point try to re-use this query. we\u0027ll probably end up calling it twice for buffers and textures.",
      "range": {
        "startLine": 48,
        "startChar": 8,
        "endLine": 48,
        "endChar": 27
      },
      "revId": "20f7ca68ee3e026e855b61bf48fa662592617438",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ef8701e_e1b956e1",
        "filename": "src/libANGLE/renderer/vulkan/vk_format_utils.cpp",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 1001426
      },
      "writtenOn": "2018-06-27T00:01:46Z",
      "side": 1,
      "message": "it\u0027s also called in this loop\nhttps://cs.chromium.org/chromium/src/third_party/angle/src/libANGLE/renderer/vulkan/vk_format_utils.cpp?rcl\u003d7c37ca1836402b654dbbf5f00007e09bdf2a7051\u0026l\u003d158\n\nso why don\u0027t we just call it once there before Format::initialize() and pass the result down through Format::initialize()",
      "parentUuid": "9e479a01_68fb0871",
      "range": {
        "startLine": 48,
        "startChar": 8,
        "endLine": 48,
        "endChar": 27
      },
      "revId": "20f7ca68ee3e026e855b61bf48fa662592617438",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a3b5e72b_64b164bc",
        "filename": "src/libANGLE/renderer/vulkan/vk_format_utils.cpp",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-06-27T13:29:20Z",
      "side": 1,
      "message": "Sounds good.",
      "parentUuid": "3ef8701e_e1b956e1",
      "range": {
        "startLine": 48,
        "startChar": 8,
        "endLine": 48,
        "endChar": 27
      },
      "revId": "20f7ca68ee3e026e855b61bf48fa662592617438",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e3d13a95_0529d435",
        "filename": "src/libANGLE/renderer/vulkan/vk_format_utils.cpp",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-06-27T13:31:58Z",
      "side": 1,
      "message": "Actually the best plan would be also to avoid calling it if the format isn\u0027t valid. That would mean initializing it inside the table. And using a pointer.",
      "parentUuid": "a3b5e72b_64b164bc",
      "range": {
        "startLine": 48,
        "startChar": 8,
        "endLine": 48,
        "endChar": 27
      },
      "revId": "20f7ca68ee3e026e855b61bf48fa662592617438",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "91742d16_c6656064",
        "filename": "src/libANGLE/renderer/vulkan/vk_format_utils.cpp",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-06-27T13:54:49Z",
      "side": 1,
      "message": "Actually to keep it simple just do as you suggested and call it before initialize and pass it in instead of the physicalDevice. Can optimize this later.",
      "parentUuid": "e3d13a95_0529d435",
      "range": {
        "startLine": 48,
        "startChar": 8,
        "endLine": 48,
        "endChar": 27
      },
      "revId": "20f7ca68ee3e026e855b61bf48fa662592617438",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ceb7e40e_c1952a08",
        "filename": "src/libANGLE/renderer/vulkan/vk_format_utils.cpp",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 1001426
      },
      "writtenOn": "2018-06-27T20:22:56Z",
      "side": 1,
      "message": "Good.  This is a one-time start-up cost, right?\nIf so there ought to be 1000 other things more in need of optimizing.  :)",
      "parentUuid": "91742d16_c6656064",
      "range": {
        "startLine": 48,
        "startChar": 8,
        "endLine": 48,
        "endChar": 27
      },
      "revId": "20f7ca68ee3e026e855b61bf48fa662592617438",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "80850620_4bc324f9",
        "filename": "src/libANGLE/renderer/vulkan/vk_format_utils.cpp",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-06-27T20:53:00Z",
      "side": 1,
      "message": "Startup time is extremely important and is not thing we will ignore. It affects every app\u0027s startup including Chrome, maps and games. We can\u0027t afford to ignore any wasted time in the long run. For now let\u0027s use the simpler approach.",
      "parentUuid": "ceb7e40e_c1952a08",
      "range": {
        "startLine": 48,
        "startChar": 8,
        "endLine": 48,
        "endChar": 27
      },
      "revId": "20f7ca68ee3e026e855b61bf48fa662592617438",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "92e56143_752f74ec",
        "filename": "src/libANGLE/renderer/vulkan/vk_format_utils.cpp",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 1001426
      },
      "writtenOn": "2018-07-08T07:06:39Z",
      "side": 1,
      "message": "Turns out not to be this easy.  It\u0027s only in the generated code where we know which VkFormat to get the properties of.  So that\u0027s where I put the call to GetFormatProperties().  Which seems to go against your wish for that code to be as constexpr-ish as possible.\nIf you\u0027re still going to forbid any function call in non-fallback cases, then I think we need to pass around the VkFormatProperties AND a way to know if it\u0027s been filled in yet.  It gets even hairier when we also want to use/set properties in initBufferFallback().  The cleanest way would seem to be for GetFormatProperties() to cache/memoize, or we could generate additional code to pre-fetch properties for all valid formats, or loop over the formats a second time, doing the properties stuff.  Do you have an idea how expensive GetFormatProperties() is?  If not, this is all premature optimization.",
      "parentUuid": "80850620_4bc324f9",
      "range": {
        "startLine": 48,
        "startChar": 8,
        "endLine": 48,
        "endChar": 27
      },
      "revId": "20f7ca68ee3e026e855b61bf48fa662592617438",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f132f91_387ca26b",
        "filename": "src/libANGLE/renderer/vulkan/vk_format_utils.cpp",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-07-08T13:48:50Z",
      "side": 1,
      "message": "For now as I said in the previous comment I think we should use the simpler approach. We can do a cache later if need be.",
      "parentUuid": "92e56143_752f74ec",
      "range": {
        "startLine": 48,
        "startChar": 8,
        "endLine": 48,
        "endChar": 27
      },
      "revId": "20f7ca68ee3e026e855b61bf48fa662592617438",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "08624bb5_eb573fa2",
        "filename": "src/libANGLE/renderer/vulkan/vk_format_utils.h",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-06-27T13:54:49Z",
      "side": 1,
      "message": "if you\u0027re ok with my proposal can also rename these initTextureFallback and initBufferFallback",
      "range": {
        "startLine": 44,
        "startChar": 9,
        "endLine": 44,
        "endChar": 26
      },
      "revId": "20f7ca68ee3e026e855b61bf48fa662592617438",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ed39540d_60264ab3",
        "filename": "src/libANGLE/renderer/vulkan/vk_format_utils.h",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 1001426
      },
      "writtenOn": "2018-07-08T07:06:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "08624bb5_eb573fa2",
      "range": {
        "startLine": 44,
        "startChar": 9,
        "endLine": 44,
        "endChar": 26
      },
      "revId": "20f7ca68ee3e026e855b61bf48fa662592617438",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}