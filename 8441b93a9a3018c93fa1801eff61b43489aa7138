{
  "comments": [
    {
      "key": {
        "uuid": "54894239_cdf069f6",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 5
      },
      "lineNbr": 45,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-01-26T22:07:18Z",
      "side": 1,
      "message": "nit: declare these in the GL_QUERY_RESULT_AVAILABLE_EXT block like so:\n\n case GL_QUERY_RESULT_AVAILABLE_EXT:\n {\n     bool available \u003d false;\n     gl::Error error \u003d queryObject-\u003eisResultAvailable(\u0026...\n     ...\n }\n default:\n     UNREACHABLE();\n     break;",
      "range": {
        "startLine": 45,
        "startChar": 4,
        "endLine": 45,
        "endChar": 45
      },
      "revId": "8441b93a9a3018c93fa1801eff61b43489aa7138",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f4987691_82893ae3",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 5
      },
      "lineNbr": 54,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-01-26T22:07:18Z",
      "side": 1,
      "message": "use c++ style casts. in this case probably static_cast.",
      "range": {
        "startLine": 54,
        "startChar": 25,
        "endLine": 54,
        "endChar": 29
      },
      "revId": "8441b93a9a3018c93fa1801eff61b43489aa7138",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "54894239_2d1f2df0",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 5
      },
      "lineNbr": 60,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-01-26T22:07:18Z",
      "side": 1,
      "message": "nit: add an error message, even if this is unreachable code.",
      "range": {
        "startLine": 60,
        "startChar": 21,
        "endLine": 60,
        "endChar": 41
      },
      "revId": "8441b93a9a3018c93fa1801eff61b43489aa7138",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "544302e2_5d2f7b61",
        "filename": "src/libANGLE/Query.h",
        "patchSetId": 5
      },
      "lineNbr": 39,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-01-26T22:07:18Z",
      "side": 1,
      "message": "why not use queryCounter() here? I think it might interact with an extension that also uses queryCounter, if there is one.",
      "range": {
        "startLine": 39,
        "startChar": 10,
        "endLine": 39,
        "endChar": 19
      },
      "revId": "8441b93a9a3018c93fa1801eff61b43489aa7138",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "54722221_88ac97ae",
        "filename": "src/libANGLE/State.cpp",
        "patchSetId": 5
      },
      "lineNbr": 186,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-01-26T22:07:18Z",
      "side": 1,
      "message": "use nullptr instead of NULL in new code. you can leave the others as is or change them as you like.",
      "range": {
        "startLine": 186,
        "startChar": 44,
        "endLine": 186,
        "endChar": 48
      },
      "revId": "8441b93a9a3018c93fa1801eff61b43489aa7138",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "34712e1d_845566d4",
        "filename": "src/libANGLE/renderer/d3d/d3d11/Query11.cpp",
        "patchSetId": 5
      },
      "lineNbr": 65,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-01-26T22:07:18Z",
      "side": 1,
      "message": "unimplemented?",
      "range": {
        "startLine": 65,
        "startChar": 4,
        "endLine": 65,
        "endChar": 15
      },
      "revId": "8441b93a9a3018c93fa1801eff61b43489aa7138",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f4987691_628636d1",
        "filename": "src/libANGLE/renderer/d3d/d3d11/Query11.cpp",
        "patchSetId": 5
      },
      "lineNbr": 95,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-01-26T22:07:18Z",
      "side": 1,
      "message": "use c++ casts. in a few other places but won\u0027t comment more.",
      "range": {
        "startLine": 95,
        "startChar": 18,
        "endLine": 95,
        "endChar": 25
      },
      "revId": "8441b93a9a3018c93fa1801eff61b43489aa7138",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "34712e1d_a45262e7",
        "filename": "src/libANGLE/renderer/d3d/d3d9/Query9.cpp",
        "patchSetId": 5
      },
      "lineNbr": 71,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-01-26T22:07:18Z",
      "side": 1,
      "message": "unimplemented",
      "range": {
        "startLine": 71,
        "startChar": 4,
        "endLine": 71,
        "endChar": 15
      },
      "revId": "8441b93a9a3018c93fa1801eff61b43489aa7138",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "146c2a47_63f86230",
        "filename": "src/libANGLE/renderer/gl/FunctionsGL.cpp",
        "patchSetId": 5
      },
      "lineNbr": 1778,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-01-26T22:07:18Z",
      "side": 1,
      "message": "this method is OK to handle multiple mappings of the same entry point?",
      "range": {
        "startLine": 1778,
        "startChar": 92,
        "endLine": 1778,
        "endChar": 107
      },
      "revId": "8441b93a9a3018c93fa1801eff61b43489aa7138",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "544302e2_9dbf4319",
        "filename": "src/libANGLE/renderer/gl/QueryGL.cpp",
        "patchSetId": 5
      },
      "lineNbr": 223,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-01-26T22:07:18Z",
      "side": 1,
      "message": "it\u0027s confirmed it\u0027s ok to getQueryObject64 for other query values than the timer ones? I feel like at least a comment is warranted here.",
      "range": {
        "startLine": 223,
        "startChar": 24,
        "endLine": 223,
        "endChar": 43
      },
      "revId": "8441b93a9a3018c93fa1801eff61b43489aa7138",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "34984e85_6c75bbce",
        "filename": "src/libANGLE/renderer/gl/renderergl_utils.cpp",
        "patchSetId": 5
      },
      "lineNbr": 614,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-01-26T22:07:18Z",
      "side": 1,
      "message": "leave out this comment for now. If it works, enable the extension, otherwise enable it in a subsequent patch.",
      "range": {
        "startLine": 612,
        "startChar": 4,
        "endLine": 614,
        "endChar": 100
      },
      "revId": "8441b93a9a3018c93fa1801eff61b43489aa7138",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "144d0a10_1ba1fb61",
        "filename": "src/libANGLE/validationES.cpp",
        "patchSetId": 5
      },
      "lineNbr": 1097,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-01-26T22:07:18Z",
      "side": 1,
      "message": "every extension entry point needs to check for the extension to be enabled. won\u0027t mention it, in a few places.",
      "range": {
        "startLine": 1097,
        "startChar": 5,
        "endLine": 1097,
        "endChar": 26
      },
      "revId": "8441b93a9a3018c93fa1801eff61b43489aa7138",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "54894239_0d97d16f",
        "filename": "src/libANGLE/validationES.cpp",
        "patchSetId": 5
      },
      "lineNbr": 1101,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-01-26T22:07:18Z",
      "side": 1,
      "message": "every error needs a message, won\u0027t mention on the others but applies in a few places.",
      "range": {
        "startLine": 1101,
        "startChar": 35,
        "endLine": 1101,
        "endChar": 51
      },
      "revId": "8441b93a9a3018c93fa1801eff61b43489aa7138",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "54722221_c85a0f79",
        "filename": "src/libANGLE/validationES.cpp",
        "patchSetId": 5
      },
      "lineNbr": 1207,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-01-26T22:07:18Z",
      "side": 1,
      "message": "nullptr, again repeated",
      "range": {
        "startLine": 1207,
        "startChar": 23,
        "endLine": 1207,
        "endChar": 27
      },
      "revId": "8441b93a9a3018c93fa1801eff61b43489aa7138",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "34984e85_ac66c329",
        "filename": "src/libANGLE/validationES.cpp",
        "patchSetId": 5
      },
      "lineNbr": 1226,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-01-26T22:07:18Z",
      "side": 1,
      "message": "this seems wrong... it will always fail for es2?",
      "range": {
        "startLine": 1226,
        "startChar": 56,
        "endLine": 1226,
        "endChar": 88
      },
      "revId": "8441b93a9a3018c93fa1801eff61b43489aa7138",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "146c2a47_83fc7e24",
        "filename": "src/libANGLE/validationES.h",
        "patchSetId": 5
      },
      "lineNbr": 114,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-01-26T22:07:18Z",
      "side": 1,
      "message": "don\u0027t expose this, make it a local private function in the top of file in a namespace {} block",
      "range": {
        "startLine": 114,
        "startChar": 5,
        "endLine": 114,
        "endChar": 31
      },
      "revId": "8441b93a9a3018c93fa1801eff61b43489aa7138",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f4987691_e26006e5",
        "filename": "src/libGLESv2/entry_points_gles_2_0_ext.cpp",
        "patchSetId": 5
      },
      "lineNbr": 45,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-01-26T22:07:18Z",
      "side": 1,
      "message": "this should go in context-\u003egenQueries(n, ids)",
      "range": {
        "startLine": 42,
        "startChar": 8,
        "endLine": 45,
        "endChar": 9
      },
      "revId": "8441b93a9a3018c93fa1801eff61b43489aa7138",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "144d0a10_3b9e3725",
        "filename": "src/libGLESv2/entry_points_gles_2_0_ext.cpp",
        "patchSetId": 5
      },
      "lineNbr": 64,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-01-26T22:07:18Z",
      "side": 1,
      "message": "this should go in context-\u003edeleteQueries(n, ids)",
      "range": {
        "startLine": 61,
        "startChar": 8,
        "endLine": 64,
        "endChar": 9
      },
      "revId": "8441b93a9a3018c93fa1801eff61b43489aa7138",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d486122d_4ff2a189",
        "filename": "src/libGLESv2/entry_points_gles_2_0_ext.cpp",
        "patchSetId": 5
      },
      "lineNbr": 75,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-01-26T22:07:18Z",
      "side": 1,
      "message": "this should be return context-\u003eisQuery(id)",
      "range": {
        "startLine": 75,
        "startChar": 8,
        "endLine": 75,
        "endChar": 84
      },
      "revId": "8441b93a9a3018c93fa1801eff61b43489aa7138",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "34712e1d_44e9ae35",
        "filename": "src/libGLESv2/entry_points_gles_2_0_ext.cpp",
        "patchSetId": 5
      },
      "lineNbr": 119,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-01-26T22:07:18Z",
      "side": 1,
      "message": "context should record the error here, and return void",
      "range": {
        "startLine": 114,
        "startChar": 8,
        "endLine": 119,
        "endChar": 9
      },
      "revId": "8441b93a9a3018c93fa1801eff61b43489aa7138",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "544302e2_bdc47fb9",
        "filename": "src/libGLESv2/entry_points_gles_2_0_ext.cpp",
        "patchSetId": 5
      },
      "lineNbr": 140,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-01-26T22:07:18Z",
      "side": 1,
      "message": "same as above",
      "range": {
        "startLine": 135,
        "startChar": 6,
        "endLine": 140,
        "endChar": 9
      },
      "revId": "8441b93a9a3018c93fa1801eff61b43489aa7138",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "144d0a10_dbc95336",
        "filename": "src/libGLESv2/entry_points_gles_2_0_ext.cpp",
        "patchSetId": 5
      },
      "lineNbr": 166,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-01-26T22:07:18Z",
      "side": 1,
      "message": "context-\u003egetQueryiv",
      "range": {
        "startLine": 157,
        "startChar": 8,
        "endLine": 166,
        "endChar": 9
      },
      "revId": "8441b93a9a3018c93fa1801eff61b43489aa7138",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "54722221_e857cb4d",
        "filename": "src/libGLESv2/entry_points_gles_2_0_ext.cpp",
        "patchSetId": 5
      },
      "lineNbr": 187,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-01-26T22:07:18Z",
      "side": 1,
      "message": "return void, in a few places below, won\u0027t repeat",
      "range": {
        "startLine": 182,
        "startChar": 1,
        "endLine": 187,
        "endChar": 9
      },
      "revId": "8441b93a9a3018c93fa1801eff61b43489aa7138",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "34984e85_cc630f19",
        "filename": "src/libGLESv2/entry_points_gles_3_0.cpp",
        "patchSetId": 5
      },
      "lineNbr": 283,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-01-26T22:07:18Z",
      "side": 1,
      "message": "nit: can place this comment in one line (wrap is 100 chars)",
      "range": {
        "startLine": 282,
        "startChar": 8,
        "endLine": 283,
        "endChar": 42
      },
      "revId": "8441b93a9a3018c93fa1801eff61b43489aa7138",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f4987691_a25afe32",
        "filename": "src/tests/gl_tests/TimerQueriesTest.cpp",
        "patchSetId": 5
      },
      "lineNbr": 5,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-01-26T22:07:18Z",
      "side": 1,
      "message": "add a title to the file, see other tests",
      "range": {
        "startLine": 5,
        "startChar": 0,
        "endLine": 5,
        "endChar": 2
      },
      "revId": "8441b93a9a3018c93fa1801eff61b43489aa7138",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f4987691_c2550205",
        "filename": "src/tests/gl_tests/TimerQueriesTest.cpp",
        "patchSetId": 5
      },
      "lineNbr": 16,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-01-26T22:07:18Z",
      "side": 1,
      "message": "use initializer list: TimerQueriesTest() : mProgram(0), mProgramCostly(0). Make sure to preserve the same order as they\u0027re declared",
      "range": {
        "startLine": 16,
        "startChar": 4,
        "endLine": 16,
        "endChar": 20
      },
      "revId": "8441b93a9a3018c93fa1801eff61b43489aa7138",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "146c2a47_23158a1d",
        "filename": "src/tests/gl_tests/TimerQueriesTest.cpp",
        "patchSetId": 5
      },
      "lineNbr": 30,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-01-26T22:07:18Z",
      "side": 1,
      "message": "nit: use override instead of virtual",
      "range": {
        "startLine": 30,
        "startChar": 4,
        "endLine": 30,
        "endChar": 11
      },
      "revId": "8441b93a9a3018c93fa1801eff61b43489aa7138",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "34712e1d_e4d9baa4",
        "filename": "src/tests/gl_tests/TimerQueriesTest.cpp",
        "patchSetId": 5
      },
      "lineNbr": 43,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-01-26T22:07:18Z",
      "side": 1,
      "message": "I personally don\u0027t use the SHADER_SOURCE macro because of the odd formatting.. I just use old-style string constants.",
      "range": {
        "startLine": 40,
        "startChar": 42,
        "endLine": 43,
        "endChar": 59
      },
      "revId": "8441b93a9a3018c93fa1801eff61b43489aa7138",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "34984e85_ec60cb0e",
        "filename": "src/tests/gl_tests/TimerQueriesTest.cpp",
        "patchSetId": 5
      },
      "lineNbr": 67,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-01-26T22:07:18Z",
      "side": 1,
      "message": "ASSERT_NE(0u, mProgram)",
      "range": {
        "startLine": 64,
        "startChar": 0,
        "endLine": 67,
        "endChar": 9
      },
      "revId": "8441b93a9a3018c93fa1801eff61b43489aa7138",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "34712e1d_04c6d6c4",
        "filename": "src/tests/gl_tests/TimerQueriesTest.cpp",
        "patchSetId": 5
      },
      "lineNbr": 73,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-01-26T22:07:18Z",
      "side": 1,
      "message": "also ASSERT_NE(expectation, actual)",
      "range": {
        "startLine": 70,
        "startChar": 0,
        "endLine": 73,
        "endChar": 9
      },
      "revId": "8441b93a9a3018c93fa1801eff61b43489aa7138",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b47d1eef_287babc7",
        "filename": "src/tests/gl_tests/TimerQueriesTest.cpp",
        "patchSetId": 5
      },
      "lineNbr": 155,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-01-26T22:07:18Z",
      "side": 1,
      "message": "expectations should be (expected, actual) so in this case the zero should be first. You can use 0ull for 64-bit I think.",
      "range": {
        "startLine": 155,
        "startChar": 4,
        "endLine": 155,
        "endChar": 13
      },
      "revId": "8441b93a9a3018c93fa1801eff61b43489aa7138",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "144d0a10_9bc3cb12",
        "filename": "src/tests/gl_tests/TimerQueriesTest.cpp",
        "patchSetId": 5
      },
      "lineNbr": 222,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-01-26T22:07:18Z",
      "side": 1,
      "message": "you can use ASSERT_GL_NO_ERROR in most places. It\u0027s kind of unreasonable to continue after a GL error.",
      "range": {
        "startLine": 222,
        "startChar": 4,
        "endLine": 222,
        "endChar": 22
      },
      "revId": "8441b93a9a3018c93fa1801eff61b43489aa7138",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f4987691_82701aaf",
        "filename": "src/tests/gl_tests/TimerQueriesTest.cpp",
        "patchSetId": 5
      },
      "lineNbr": 244,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-01-26T22:07:18Z",
      "side": 1,
      "message": "for these just use ASSERT_GT(0, timeout) or similar",
      "range": {
        "startLine": 241,
        "startChar": 0,
        "endLine": 244,
        "endChar": 5
      },
      "revId": "8441b93a9a3018c93fa1801eff61b43489aa7138",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}