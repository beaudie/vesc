{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ab6e0707_cf0d5f30",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 15,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2021-04-07T21:57:02Z",
      "side": 1,
      "message": "identifying",
      "range": {
        "startLine": 15,
        "startChar": 28,
        "endLine": 15,
        "endChar": 36
      },
      "revId": "a4d56d9af3d6f5beb485482c8697486bf3ed8ce1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "adecd04e_538dff9a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 15,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2021-04-07T22:43:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ab6e0707_cf0d5f30",
      "range": {
        "startLine": 15,
        "startChar": 28,
        "endLine": 15,
        "endChar": 36
      },
      "revId": "a4d56d9af3d6f5beb485482c8697486bf3ed8ce1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "877d3f0d_915f11b3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2021-04-07T21:57:02Z",
      "side": 1,
      "message": "+ glBlitFramebuffer\n+ glReadPixels\n",
      "revId": "a4d56d9af3d6f5beb485482c8697486bf3ed8ce1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b6888346_aa2868af",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-04-07T22:05:41Z",
      "side": 1,
      "message": "Nice work! Will try this out with Manhattan 3.1 and my descriptor set change.",
      "revId": "a4d56d9af3d6f5beb485482c8697486bf3ed8ce1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "31d16241_03c63570",
        "filename": "src/tests/perf_tests/ANGLEPerfTestArgs.cpp",
        "patchSetId": 8
      },
      "lineNbr": 149,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-04-07T22:05:41Z",
      "side": 1,
      "message": "can you add this flag to README.md under the command line argument section?",
      "range": {
        "startLine": 149,
        "startChar": 27,
        "endLine": 149,
        "endChar": 35
      },
      "revId": "a4d56d9af3d6f5beb485482c8697486bf3ed8ce1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "efe9947c_6d02660a",
        "filename": "src/tests/perf_tests/ANGLEPerfTestArgs.cpp",
        "patchSetId": 8
      },
      "lineNbr": 149,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2021-04-07T22:43:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "31d16241_03c63570",
      "range": {
        "startLine": 149,
        "startChar": 27,
        "endLine": 149,
        "endChar": 35
      },
      "revId": "a4d56d9af3d6f5beb485482c8697486bf3ed8ce1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "79af0b4b_0597dbd9",
        "filename": "src/tests/perf_tests/TracePerfTest.cpp",
        "patchSetId": 8
      },
      "lineNbr": 86,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-04-07T22:05:41Z",
      "side": 1,
      "message": "it\u0027s good that you did these now - but you maybe didn\u0027t have to make \"on\" functions for all these methods since they don\u0027t interact with any member variables.\n\nTo make them consistent can yo ucall them \"onReplayDraw...\" etc (missing the \"Replay\" word that would match the above methods.",
      "range": {
        "startLine": 86,
        "startChar": 9,
        "endLine": 86,
        "endChar": 23
      },
      "revId": "a4d56d9af3d6f5beb485482c8697486bf3ed8ce1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a54b6c20_d09c608b",
        "filename": "src/tests/perf_tests/TracePerfTest.cpp",
        "patchSetId": 8
      },
      "lineNbr": 86,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2021-04-07T22:31:18Z",
      "side": 1,
      "message": "See my other comment bellow. If I call these onDrawElementsonly if gMinimizeGPUWork is true, then I probably should name it a little bit more explicit, like \"onReplayReducedGPUDrawElements\"",
      "parentUuid": "79af0b4b_0597dbd9",
      "range": {
        "startLine": 86,
        "startChar": 9,
        "endLine": 86,
        "endChar": 23
      },
      "revId": "a4d56d9af3d6f5beb485482c8697486bf3ed8ce1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3bea9ebb_8dc639fe",
        "filename": "src/tests/perf_tests/TracePerfTest.cpp",
        "patchSetId": 8
      },
      "lineNbr": 86,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2021-04-07T22:43:32Z",
      "side": 1,
      "message": "If I do that, I can get rid of onDrawElements completely. I just make the reduced call in the DrawElementsProc.",
      "parentUuid": "a54b6c20_d09c608b",
      "range": {
        "startLine": 86,
        "startChar": 9,
        "endLine": 86,
        "endChar": 23
      },
      "revId": "a4d56d9af3d6f5beb485482c8697486bf3ed8ce1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "00b2b11e_df9f2e62",
        "filename": "src/tests/perf_tests/TracePerfTest.cpp",
        "patchSetId": 8
      },
      "lineNbr": 86,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-04-07T23:28:55Z",
      "side": 1,
      "message": "Putting the reduced calls in the Proc functions SGTM, as it\u0027s less code.",
      "parentUuid": "3bea9ebb_8dc639fe",
      "range": {
        "startLine": 86,
        "startChar": 9,
        "endLine": 86,
        "endChar": 23
      },
      "revId": "a4d56d9af3d6f5beb485482c8697486bf3ed8ce1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "40144d7e_b145d168",
        "filename": "src/tests/perf_tests/TracePerfTest.cpp",
        "patchSetId": 8
      },
      "lineNbr": 451,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2021-04-07T22:31:18Z",
      "side": 1,
      "message": "@Jamie Actually I thinking to check gMinimizeGPUWork here and load ViewportProc only if gMinimizeGPUWork is true. That way when \"--minimize-gpu-work\" not specififed, there will be ZERO cost.",
      "range": {
        "startLine": 451,
        "startChar": 8,
        "endLine": 451,
        "endChar": 65
      },
      "revId": "a4d56d9af3d6f5beb485482c8697486bf3ed8ce1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0ea44969_5f5d05cd",
        "filename": "src/tests/perf_tests/TracePerfTest.cpp",
        "patchSetId": 8
      },
      "lineNbr": 451,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-04-07T23:28:55Z",
      "side": 1,
      "message": "Ack. sounds good. the extra indirection isn\u0027t too bad probably but yeah couldn\u0027t hurt.",
      "parentUuid": "40144d7e_b145d168",
      "range": {
        "startLine": 451,
        "startChar": 8,
        "endLine": 451,
        "endChar": 65
      },
      "revId": "a4d56d9af3d6f5beb485482c8697486bf3ed8ce1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "09819ac4_26b194ca",
        "filename": "src/tests/perf_tests/TracePerfTest.cpp",
        "patchSetId": 8
      },
      "lineNbr": 1379,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2021-04-07T22:01:39Z",
      "side": 1,
      "message": "3",
      "range": {
        "startLine": 1379,
        "startChar": 29,
        "endLine": 1379,
        "endChar": 30
      },
      "revId": "a4d56d9af3d6f5beb485482c8697486bf3ed8ce1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "16d7d202_1011d86e",
        "filename": "src/tests/perf_tests/TracePerfTest.cpp",
        "patchSetId": 8
      },
      "lineNbr": 1379,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2021-04-07T22:43:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "09819ac4_26b194ca",
      "range": {
        "startLine": 1379,
        "startChar": 29,
        "endLine": 1379,
        "endChar": 30
      },
      "revId": "a4d56d9af3d6f5beb485482c8697486bf3ed8ce1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f4ca6927_57bf9159",
        "filename": "src/tests/perf_tests/TracePerfTest.cpp",
        "patchSetId": 8
      },
      "lineNbr": 1645,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-04-07T22:05:41Z",
      "side": 1,
      "message": "this sets up a mip chain - I think in some scenarios it would lead to incorrect gl streams if we don\u0027t set up a chain of 1x1 mips.",
      "range": {
        "startLine": 1645,
        "startChar": 8,
        "endLine": 1645,
        "endChar": 24
      },
      "revId": "a4d56d9af3d6f5beb485482c8697486bf3ed8ce1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aff8a577_6efc5d2e",
        "filename": "src/tests/perf_tests/TracePerfTest.cpp",
        "patchSetId": 8
      },
      "lineNbr": 1645,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2021-04-07T22:08:00Z",
      "side": 1,
      "message": "If we disable mip map generation, should we force all the glTexImage calls to level 0?",
      "range": {
        "startLine": 1645,
        "startChar": 8,
        "endLine": 1645,
        "endChar": 24
      },
      "revId": "a4d56d9af3d6f5beb485482c8697486bf3ed8ce1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c6977061_a92add8d",
        "filename": "src/tests/perf_tests/TracePerfTest.cpp",
        "patchSetId": 8
      },
      "lineNbr": 1645,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2021-04-07T22:31:18Z",
      "side": 1,
      "message": "Force glTexImage to level0 wont work, since that changes the mipmap chain, which has other side effects. (Also see my reply to Jamie above)",
      "parentUuid": "aff8a577_6efc5d2e",
      "range": {
        "startLine": 1645,
        "startChar": 8,
        "endLine": 1645,
        "endChar": 24
      },
      "revId": "a4d56d9af3d6f5beb485482c8697486bf3ed8ce1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "066c3768_fb11f00f",
        "filename": "src/tests/perf_tests/TracePerfTest.cpp",
        "patchSetId": 8
      },
      "lineNbr": 1645,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2021-04-07T22:31:18Z",
      "side": 1,
      "message": "True. I just can not identify an easy way to reduce it. Two options: 1) noop it like I did here and hope we don\u0027t run into trouble, after all, it really only need to work for the app traces. Or, 2) I change it to something like this:\n for(level\u003dbase+1; level\u003cmax, level++)\n    glTexImage2D(..., null);\nBasically respecify every level without data.\nI feel that we just do option 1) for now.",
      "parentUuid": "f4ca6927_57bf9159",
      "range": {
        "startLine": 1645,
        "startChar": 8,
        "endLine": 1645,
        "endChar": 24
      },
      "revId": "a4d56d9af3d6f5beb485482c8697486bf3ed8ce1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1e3ffdbf_475ab4d6",
        "filename": "src/tests/perf_tests/TracePerfTest.cpp",
        "patchSetId": 8
      },
      "lineNbr": 1645,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-04-07T23:28:55Z",
      "side": 1,
      "message": "Maybe just leave a comment with 1).",
      "parentUuid": "066c3768_fb11f00f",
      "range": {
        "startLine": 1645,
        "startChar": 8,
        "endLine": 1645,
        "endChar": 24
      },
      "revId": "a4d56d9af3d6f5beb485482c8697486bf3ed8ce1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}