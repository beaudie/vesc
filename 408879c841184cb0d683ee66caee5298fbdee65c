{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "347e0b9a_8dde31b1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1326275
      },
      "writtenOn": "2021-05-14T17:27:48Z",
      "side": 1,
      "message": "Patchset 1 contains files touched by this change as they were originally in Kyle Piddington\u0027s CL here: https://chromium-review.googlesource.com/c/angle/angle/+/2857366/, so compare against PS1 to see what I changed, and compare against base to see what\u0027s added to ANGLE.\n\nI would appreciate some feedback so I can clean this up further.\n\nThere are several functions that were copied directly from TranslatorVulkan and could be shared. I\u0027m not sure if it\u0027s best to do that here or in a follow-up.",
      "revId": "408879c841184cb0d683ee66caee5298fbdee65c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2348b6f5_d7c79816",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-05-14T18:41:29Z",
      "side": 1,
      "message": "I would actually prefer if TranslatorVulkan stuff are duplicated for the time being. I\u0027m changing things there and it would be great if I didn\u0027t have to bother with metal.",
      "parentUuid": "347e0b9a_8dde31b1",
      "revId": "408879c841184cb0d683ee66caee5298fbdee65c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "28106203_3ff05a35",
        "filename": "include/GLSLANG/ShaderLang.h",
        "patchSetId": 5
      },
      "lineNbr": 29,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-05-14T19:22:21Z",
      "side": 1,
      "message": "nit: increment this. Maybe just set it to like 270 or something, so it won\u0027t accidentally be removed in automerge when another change increments it. We could live with the jump, or just fix it right before submission",
      "range": {
        "startLine": 29,
        "startChar": 25,
        "endLine": 29,
        "endChar": 28
      },
      "revId": "408879c841184cb0d683ee66caee5298fbdee65c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5d4ee052_6925ca81",
        "filename": "include/GLSLANG/ShaderLang.h",
        "patchSetId": 5
      },
      "lineNbr": 29,
      "author": {
        "id": 1326275
      },
      "writtenOn": "2021-05-27T20:56:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "28106203_3ff05a35",
      "range": {
        "startLine": 29,
        "startChar": 25,
        "endLine": 29,
        "endChar": 28
      },
      "revId": "408879c841184cb0d683ee66caee5298fbdee65c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "56b3e87c_e6650279",
        "filename": "src/common/utilities.cpp",
        "patchSetId": 5
      },
      "lineNbr": 13,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-05-14T19:22:21Z",
      "side": 1,
      "message": "Try removing this",
      "revId": "408879c841184cb0d683ee66caee5298fbdee65c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3d977a4e_6d17bb5c",
        "filename": "src/common/utilities.cpp",
        "patchSetId": 5
      },
      "lineNbr": 13,
      "author": {
        "id": 1326275
      },
      "writtenOn": "2021-05-20T20:41:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "56b3e87c_e6650279",
      "revId": "408879c841184cb0d683ee66caee5298fbdee65c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dbbaa62b_3e9faf78",
        "filename": "src/common/utilities.cpp",
        "patchSetId": 5
      },
      "lineNbr": 13,
      "author": {
        "id": 1326275
      },
      "writtenOn": "2021-05-20T20:42:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3d977a4e_6d17bb5c",
      "revId": "408879c841184cb0d683ee66caee5298fbdee65c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "66e26153_9dee18b1",
        "filename": "src/common/utilities.cpp",
        "patchSetId": 5
      },
      "lineNbr": 487,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-05-14T19:22:21Z",
      "side": 1,
      "message": "This is the same function as VariableRowCount, and can be removed.",
      "range": {
        "startLine": 487,
        "startChar": 4,
        "endLine": 487,
        "endChar": 26
      },
      "revId": "408879c841184cb0d683ee66caee5298fbdee65c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9147c072_f1d8c683",
        "filename": "src/common/utilities.cpp",
        "patchSetId": 5
      },
      "lineNbr": 487,
      "author": {
        "id": 1326275
      },
      "writtenOn": "2021-05-20T20:41:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "66e26153_9dee18b1",
      "range": {
        "startLine": 487,
        "startChar": 4,
        "endLine": 487,
        "endChar": 26
      },
      "revId": "408879c841184cb0d683ee66caee5298fbdee65c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "faa8ceb2_b7c1af10",
        "filename": "src/compiler/translator/IntermNode.cpp",
        "patchSetId": 5
      },
      "lineNbr": 482,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-05-14T19:22:21Z",
      "side": 1,
      "message": "const TVariable. We don\u0027t use auto except for tedious types (like blah\u003ctype\u003e::iterator)",
      "range": {
        "startLine": 482,
        "startChar": 9,
        "endLine": 482,
        "endChar": 13
      },
      "revId": "408879c841184cb0d683ee66caee5298fbdee65c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b37fdce9_044ebe33",
        "filename": "src/compiler/translator/IntermNode.cpp",
        "patchSetId": 5
      },
      "lineNbr": 482,
      "author": {
        "id": 1326275
      },
      "writtenOn": "2021-05-20T20:41:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "faa8ceb2_b7c1af10",
      "range": {
        "startLine": 482,
        "startChar": 9,
        "endLine": 482,
        "endChar": 13
      },
      "revId": "408879c841184cb0d683ee66caee5298fbdee65c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9bfdb9bb_b2b773e1",
        "filename": "src/compiler/translator/IntermNode.cpp",
        "patchSetId": 5
      },
      "lineNbr": 491,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-05-14T19:22:21Z",
      "side": 1,
      "message": "Same",
      "range": {
        "startLine": 491,
        "startChar": 9,
        "endLine": 491,
        "endChar": 13
      },
      "revId": "408879c841184cb0d683ee66caee5298fbdee65c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "412d21cb_19acc92e",
        "filename": "src/compiler/translator/IntermNode.cpp",
        "patchSetId": 5
      },
      "lineNbr": 491,
      "author": {
        "id": 1326275
      },
      "writtenOn": "2021-05-20T20:41:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9bfdb9bb_b2b773e1",
      "range": {
        "startLine": 491,
        "startChar": 9,
        "endLine": 491,
        "endChar": 13
      },
      "revId": "408879c841184cb0d683ee66caee5298fbdee65c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b064f79d_5dcfa125",
        "filename": "src/compiler/translator/TranslatorMetalDirect.cpp",
        "patchSetId": 5
      },
      "lineNbr": 1203,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-05-14T19:22:21Z",
      "side": 1,
      "message": "Why does metal use this transformation? Do they not allow row-major matrices, or do they have bugs?",
      "revId": "408879c841184cb0d683ee66caee5298fbdee65c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c38fae25_d5d41fc5",
        "filename": "src/compiler/translator/TranslatorMetalDirect.cpp",
        "patchSetId": 5
      },
      "lineNbr": 1203,
      "author": {
        "id": 1326275
      },
      "writtenOn": "2021-05-27T20:56:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b064f79d_5dcfa125",
      "revId": "408879c841184cb0d683ee66caee5298fbdee65c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4f694fb1_5371161c",
        "filename": "src/compiler/translator/TranslatorMetalDirect/Debug.h",
        "patchSetId": 5
      },
      "lineNbr": 14,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-05-14T19:22:21Z",
      "side": 1,
      "message": "Nope. TODO should be ASSERT with comment. Depends on context, but instead of LOGIC_ERROR they should likely use UNREACHABLE.",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 14,
        "endChar": 35
      },
      "revId": "408879c841184cb0d683ee66caee5298fbdee65c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5bab029f_7328cb08",
        "filename": "src/compiler/translator/TranslatorMetalDirect/Debug.h",
        "patchSetId": 5
      },
      "lineNbr": 14,
      "author": {
        "id": 1326275
      },
      "writtenOn": "2021-05-20T20:41:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4f694fb1_5371161c",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 14,
        "endChar": 35
      },
      "revId": "408879c841184cb0d683ee66caee5298fbdee65c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "17ba4609_519b834e",
        "filename": "src/compiler/translator/TranslatorMetalDirect/EnvironmentVariable.h",
        "patchSetId": 5
      },
      "lineNbr": 42,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-05-14T19:22:21Z",
      "side": 1,
      "message": "We have code for these in common/, these can be removed",
      "range": {
        "startLine": 18,
        "startChar": 1,
        "endLine": 42,
        "endChar": 0
      },
      "revId": "408879c841184cb0d683ee66caee5298fbdee65c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f7d8633e_9d5e072f",
        "filename": "src/compiler/translator/TranslatorMetalDirect/EnvironmentVariable.h",
        "patchSetId": 5
      },
      "lineNbr": 42,
      "author": {
        "id": 1326275
      },
      "writtenOn": "2021-05-20T20:41:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "17ba4609_519b834e",
      "range": {
        "startLine": 18,
        "startChar": 1,
        "endLine": 42,
        "endChar": 0
      },
      "revId": "408879c841184cb0d683ee66caee5298fbdee65c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2328b79e_41704e89",
        "filename": "src/compiler/translator/TranslatorMetalDirect/FixTypeConstructors.cpp",
        "patchSetId": 5
      },
      "lineNbr": 74,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-05-14T19:22:21Z",
      "side": 1,
      "message": "We don\u0027t use `assert`. You can use UNREACHABLE() here with a comment.",
      "range": {
        "startLine": 74,
        "startChar": 28,
        "endLine": 74,
        "endChar": 34
      },
      "revId": "408879c841184cb0d683ee66caee5298fbdee65c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "85a45ccd_05975aa7",
        "filename": "src/compiler/translator/TranslatorMetalDirect/FixTypeConstructors.cpp",
        "patchSetId": 5
      },
      "lineNbr": 74,
      "author": {
        "id": 1326275
      },
      "writtenOn": "2021-05-20T20:41:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2328b79e_41704e89",
      "range": {
        "startLine": 74,
        "startChar": 28,
        "endLine": 74,
        "endChar": 34
      },
      "revId": "408879c841184cb0d683ee66caee5298fbdee65c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "12e643af_9b5263df",
        "filename": "src/compiler/translator/TranslatorMetalDirect/NameEmbeddedUniformStructsMetal.h",
        "patchSetId": 5
      },
      "lineNbr": 26,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-05-14T19:22:21Z",
      "side": 1,
      "message": "Duplicate of SeparateStructFromUniformDeclarations?",
      "range": {
        "startLine": 26,
        "startChar": 22,
        "endLine": 26,
        "endChar": 53
      },
      "revId": "408879c841184cb0d683ee66caee5298fbdee65c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3aa6ba45_2d0b8774",
        "filename": "src/compiler/translator/TranslatorMetalDirect/NameEmbeddedUniformStructsMetal.h",
        "patchSetId": 5
      },
      "lineNbr": 26,
      "author": {
        "id": 1326275
      },
      "writtenOn": "2021-05-27T20:56:32Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "12e643af_9b5263df",
      "range": {
        "startLine": 26,
        "startChar": 22,
        "endLine": 26,
        "endChar": 53
      },
      "revId": "408879c841184cb0d683ee66caee5298fbdee65c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f2b06ab2_6595cce2",
        "filename": "src/compiler/translator/TranslatorMetalDirect/ProgramPrelude.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2113,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-05-14T18:41:29Z",
      "side": 1,
      "message": "nit: The worst part of this change IMO is all these wrappers here. They increase the shader size which gets cached to disk (and I\u0027m sure also increases compile time), and besides that it\u0027s just unnecessary. So when generating metal, instead of generating \"ANGLE_textureGrad_impl(x, y ,z)\", they could have a function here that outputs the translated code directly. Something like:\n\nstd::string Output_textureGrad_generic_float3_float2_float2(x, y z)\n{\n    return \"texture.sample(\" + x + \", \" + y + \", \" + z + \");\";\n}\n\nDoes that make sense? Then the output shader will not be riddled with a million wrappers. They would also need fewer helper functions than these wrappers since the don\u0027t need to duplicate the functions based on parameters type (like textureGrad_generic_float3_float2_float2 and textureGrad_generic_float4_float2_float2 do)\n\nThat said, I get how Apple wouldn\u0027t want to rework this, and in the end it hurts their own platform, so it\u0027s really up to them if they want to improve things here (i.e. this is not a blocking commit)",
      "range": {
        "startLine": 2100,
        "startChar": 0,
        "endLine": 2113,
        "endChar": 38
      },
      "revId": "408879c841184cb0d683ee66caee5298fbdee65c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9188d41d_c9ce6092",
        "filename": "src/compiler/translator/TranslatorMetalDirect/ReduceInterfaceBlocks.h",
        "patchSetId": 5
      },
      "lineNbr": 18,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-05-14T19:22:21Z",
      "side": 1,
      "message": "This seems like would make the AST validation unhappy.",
      "revId": "408879c841184cb0d683ee66caee5298fbdee65c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "afd8b941_917829db",
        "filename": "src/compiler/translator/TranslatorMetalDirect/ReduceInterfaceBlocks.h",
        "patchSetId": 5
      },
      "lineNbr": 18,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-05-27T19:18:40Z",
      "side": 1,
      "message": "Can disable the failing validations in Compiler::mValidateASTOptions if this is intentionally leaving the tree in an inconsistent state.",
      "parentUuid": "9188d41d_c9ce6092",
      "revId": "408879c841184cb0d683ee66caee5298fbdee65c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "50ae6b51_4c765898",
        "filename": "src/compiler/translator/TranslatorMetalDirect/ReduceInterfaceBlocks.h",
        "patchSetId": 5
      },
      "lineNbr": 18,
      "author": {
        "id": 1326275
      },
      "writtenOn": "2021-05-27T20:56:32Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "afd8b941_917829db",
      "revId": "408879c841184cb0d683ee66caee5298fbdee65c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b586e83e_abda43a0",
        "filename": "src/compiler/translator/TranslatorMetalDirect/ReduceInterfaceBlocks.h",
        "patchSetId": 5
      },
      "lineNbr": 18,
      "author": {
        "id": 1326275
      },
      "writtenOn": "2021-05-27T20:56:32Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "afd8b941_917829db",
      "revId": "408879c841184cb0d683ee66caee5298fbdee65c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a8cdab51_d271ab0b",
        "filename": "src/compiler/translator/TranslatorMetalDirect/SeparateCompoundStructDeclarations.h",
        "patchSetId": 5
      },
      "lineNbr": 20,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-05-14T19:22:21Z",
      "side": 1,
      "message": "This is a duplicate of SeparateStructFromUniformDeclarations. That transformation can be modified to always separate structs, not just for uniforms.",
      "range": {
        "startLine": 20,
        "startChar": 22,
        "endLine": 20,
        "endChar": 56
      },
      "revId": "408879c841184cb0d683ee66caee5298fbdee65c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c098b5ff_6fad2838",
        "filename": "src/compiler/translator/TranslatorMetalDirect/SeparateCompoundStructDeclarations.h",
        "patchSetId": 5
      },
      "lineNbr": 20,
      "author": {
        "id": 1326275
      },
      "writtenOn": "2021-05-27T20:56:32Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "a8cdab51_d271ab0b",
      "range": {
        "startLine": 20,
        "startChar": 22,
        "endLine": 20,
        "endChar": 56
      },
      "revId": "408879c841184cb0d683ee66caee5298fbdee65c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2243faf1_5c0de98e",
        "filename": "src/compiler/translator/TranslatorMetalDirect/ToposortStructs.h",
        "patchSetId": 5
      },
      "lineNbr": 19,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-05-14T19:22:21Z",
      "side": 1,
      "message": "Note sure what the purpose of this is. The structs are already in topological order in the root block, if they just need to output them in order, they can walk the block and output them in order.",
      "revId": "408879c841184cb0d683ee66caee5298fbdee65c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4c3c9a92_d7f656b7",
        "filename": "src/compiler/translator/TranslatorMetalDirect/ToposortStructs.h",
        "patchSetId": 5
      },
      "lineNbr": 19,
      "author": {
        "id": 1326275
      },
      "writtenOn": "2021-05-27T20:56:32Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "2243faf1_5c0de98e",
      "revId": "408879c841184cb0d683ee66caee5298fbdee65c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bcee4835_c00360d2",
        "filename": "src/compiler/translator/TranslatorMetalDirect/WrapMain.h",
        "patchSetId": 5
      },
      "lineNbr": 24,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-05-14T19:22:21Z",
      "side": 1,
      "message": "Can you check where this is used? It may be used to implement a transformation where something is added to run at the end of main. In that case, there\u0027s already something that does this: RunAtTheEndOfShader().",
      "revId": "408879c841184cb0d683ee66caee5298fbdee65c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3b14db3c_375e4529",
        "filename": "src/compiler/translator/TranslatorMetalDirect/WrapMain.h",
        "patchSetId": 5
      },
      "lineNbr": 24,
      "author": {
        "id": 1326275
      },
      "writtenOn": "2021-05-27T20:56:32Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "bcee4835_c00360d2",
      "revId": "408879c841184cb0d683ee66caee5298fbdee65c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a66108da_aa99f555",
        "filename": "src/compiler/translator/TranslatorMetalUtils.h",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-05-14T19:22:21Z",
      "side": 1,
      "message": "Move to TranslatorMetalDirect/?",
      "revId": "408879c841184cb0d683ee66caee5298fbdee65c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "68598194_e3db5986",
        "filename": "src/compiler/translator/TranslatorMetalUtils.h",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1326275
      },
      "writtenOn": "2021-05-27T18:37:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a66108da_aa99f555",
      "revId": "408879c841184cb0d683ee66caee5298fbdee65c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "84810ebc_a99deaef",
        "filename": "src/compiler/translator/tree_ops/vulkan/RewriteArrayOfArrayOfOpaqueUniforms.cpp",
        "patchSetId": 5
      },
      "lineNbr": 9,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-05-14T19:22:21Z",
      "side": 1,
      "message": "Looks like this was a copy-paste issue. This should have #included the header corresponding to this same cpp file",
      "range": {
        "startLine": 9,
        "startChar": 39,
        "endLine": 9,
        "endChar": 60
      },
      "revId": "408879c841184cb0d683ee66caee5298fbdee65c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "54e5ea13_f3767cc6",
        "filename": "src/compiler/translator/tree_ops/vulkan/RewriteArrayOfArrayOfOpaqueUniforms.cpp",
        "patchSetId": 5
      },
      "lineNbr": 9,
      "author": {
        "id": 1326275
      },
      "writtenOn": "2021-05-20T20:41:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "84810ebc_a99deaef",
      "range": {
        "startLine": 9,
        "startChar": 39,
        "endLine": 9,
        "endChar": 60
      },
      "revId": "408879c841184cb0d683ee66caee5298fbdee65c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ddb6f7d_b9507821",
        "filename": "src/compiler/translator/tree_util/IntermRebuild.h",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-05-14T19:22:21Z",
      "side": 1,
      "message": "Could you please move this under TranslatorMetalDirect? I\u0027m not sure having a thin wrapper over what we already have is justified. We could probably improve the traverser code itself, but it doesn\u0027t make sense to have both the traverser and then a wrapper around it.",
      "revId": "408879c841184cb0d683ee66caee5298fbdee65c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "df1e29ed_2c77df4e",
        "filename": "src/compiler/translator/tree_util/IntermRebuild.h",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1326275
      },
      "writtenOn": "2021-05-27T18:37:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7ddb6f7d_b9507821",
      "revId": "408879c841184cb0d683ee66caee5298fbdee65c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "66f3a9f4_7ecfdf72",
        "filename": "src/compiler/translator/tree_util/NodeType.h",
        "patchSetId": 5
      },
      "lineNbr": 40,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-05-14T19:22:21Z",
      "side": 1,
      "message": "Not sure where this terrible code is used, but if it\u0027s IntermRebuild, please move it under TranslatorMetalDirect too.",
      "revId": "408879c841184cb0d683ee66caee5298fbdee65c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d86372c7_43d34eb3",
        "filename": "src/compiler/translator/tree_util/NodeType.h",
        "patchSetId": 5
      },
      "lineNbr": 40,
      "author": {
        "id": 1326275
      },
      "writtenOn": "2021-05-27T18:37:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "66f3a9f4_7ecfdf72",
      "revId": "408879c841184cb0d683ee66caee5298fbdee65c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}