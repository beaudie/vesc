{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "104bda6c_a2cce68a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2023-11-01T18:20:59Z",
      "side": 1,
      "message": "only if size matches?\n\nWith the current wording I get an impression that we\u0027re increasing reuse, while in fact it looks to me like we\u0027re decreasing it.",
      "range": {
        "startLine": 7,
        "startChar": 35,
        "endLine": 7,
        "endChar": 52
      },
      "revId": "bd3b5d535e53b60138561051c7da4f3fcbbdbc23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c7388154_32306bc3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1546942
      },
      "writtenOn": "2023-11-01T23:21:33Z",
      "side": 1,
      "message": "Yes, only reuse the conversion buffer if the stdSize matches the block size recorded in the conversion buffer, else create a new conversion buffer. Previously buffers were reused with no regard for the block size.",
      "parentUuid": "104bda6c_a2cce68a",
      "range": {
        "startLine": 7,
        "startChar": 35,
        "endLine": 7,
        "endChar": 52
      },
      "revId": "bd3b5d535e53b60138561051c7da4f3fcbbdbc23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4124edd4_2c0d38d7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2023-11-01T18:20:59Z",
      "side": 1,
      "message": "LGTM if bots are happy, I\u0027ve started a dryrun",
      "revId": "bd3b5d535e53b60138561051c7da4f3fcbbdbc23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "57193573_8ab9b20d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2023-11-01T22:51:56Z",
      "side": 1,
      "message": "Would like to see the test passing on all platforms before approving.\n\nCC\u0027ing others for more eyeballs on the problem - any more feedback appreciated.",
      "revId": "bd3b5d535e53b60138561051c7da4f3fcbbdbc23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d643553e_e7195708",
        "filename": "src/libANGLE/renderer/metal/BufferMtl.mm",
        "patchSetId": 1
      },
      "lineNbr": 389,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2023-11-01T22:51:56Z",
      "side": 1,
      "message": "Without knowing more, could more reuse be achieved by saying\n\n  buffer.uniformBufferBlockSize \u003e\u003d stdSize\n  \n?\n\nWould that be correct?",
      "revId": "bd3b5d535e53b60138561051c7da4f3fcbbdbc23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "de454306_add7fab3",
        "filename": "src/tests/gl_tests/UniformBufferTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 605,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-11-01T23:10:20Z",
      "side": 1,
      "message": "Per our style, please move to the top, call it `RoundUp`, put in an anonymous namespace and drop `static`.",
      "revId": "bd3b5d535e53b60138561051c7da4f3fcbbdbc23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c87047e8_6c5bcdff",
        "filename": "src/tests/gl_tests/UniformBufferTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 610,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2023-11-01T22:51:56Z",
      "side": 1,
      "message": "UBOs -\u003e uniform blocks\n\n\"buffer\" could be \"UBO\" for more clarity.\n\n(UBO \u003d\u003d Uniform Buffer Object, not the same thing as a uniform block)",
      "revId": "bd3b5d535e53b60138561051c7da4f3fcbbdbc23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "59481ec7_ecb12427",
        "filename": "src/tests/gl_tests/UniformBufferTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 613,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-11-01T23:10:20Z",
      "side": 1,
      "message": "While you\u0027re at it, Object is redundant with UBO.",
      "range": {
        "startLine": 613,
        "startChar": 37,
        "endLine": 613,
        "endChar": 46
      },
      "revId": "bd3b5d535e53b60138561051c7da4f3fcbbdbc23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c7d8fbf6_95f990f6",
        "filename": "src/tests/gl_tests/UniformBufferTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 640,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-11-01T23:10:20Z",
      "side": 1,
      "message": "Could you please assert that `offsetAlignmentInBytes` is divisible by 16?",
      "revId": "bd3b5d535e53b60138561051c7da4f3fcbbdbc23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4c6e9280_1455b478",
        "filename": "src/tests/gl_tests/UniformBufferTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 642,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2023-11-01T22:51:56Z",
      "side": 1,
      "message": "UBO -\u003e uniform block",
      "revId": "bd3b5d535e53b60138561051c7da4f3fcbbdbc23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f94d40bf_ab0b2e52",
        "filename": "src/tests/gl_tests/UniformBufferTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 649,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2023-11-01T22:51:56Z",
      "side": 1,
      "message": "UBO -\u003e uniform block",
      "revId": "bd3b5d535e53b60138561051c7da4f3fcbbdbc23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "82f115c5_67012b03",
        "filename": "src/tests/gl_tests/UniformBufferTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 650,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2023-11-01T22:51:56Z",
      "side": 1,
      "message": "Not sure whether the test\u0027s failing because this bool is being fed 1.0 as its input and the bitwise representation doesn\u0027t match uint(1).",
      "revId": "bd3b5d535e53b60138561051c7da4f3fcbbdbc23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d96c66f9_b9679e38",
        "filename": "src/tests/gl_tests/UniformBufferTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 652,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2023-11-01T22:51:56Z",
      "side": 1,
      "message": "UBO -\u003e uniform block",
      "revId": "bd3b5d535e53b60138561051c7da4f3fcbbdbc23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc94bd87_31a63820",
        "filename": "src/tests/gl_tests/UniformBufferTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 654,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2023-11-01T22:51:56Z",
      "side": 1,
      "message": "Not sure whether the test\u0027s failing because the padding is incorrect/insufficient.",
      "revId": "bd3b5d535e53b60138561051c7da4f3fcbbdbc23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d5e62e65_691527d0",
        "filename": "src/tests/gl_tests/UniformBufferTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 656,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2023-11-01T22:51:56Z",
      "side": 1,
      "message": "UBO -\u003e uniform block",
      "revId": "bd3b5d535e53b60138561051c7da4f3fcbbdbc23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "24413637_a8f45ce7",
        "filename": "src/tests/gl_tests/UniformBufferTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 658,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2023-11-01T22:51:56Z",
      "side": 1,
      "message": "Not sure whether the test\u0027s failing because this row_major matrix\u0027s data is in the wrong format.",
      "revId": "bd3b5d535e53b60138561051c7da4f3fcbbdbc23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7864c095_116a76cd",
        "filename": "src/tests/gl_tests/UniformBufferTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 663,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2023-11-01T22:51:56Z",
      "side": 1,
      "message": "UBOs -\u003e uniform blocks\n\nOptionally: Buffer -\u003e UBO",
      "revId": "bd3b5d535e53b60138561051c7da4f3fcbbdbc23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "32da7800_d969f2d1",
        "filename": "src/tests/gl_tests/UniformBufferTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 672,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2023-11-01T22:51:56Z",
      "side": 1,
      "message": "UBO -\u003e uniform block",
      "revId": "bd3b5d535e53b60138561051c7da4f3fcbbdbc23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc5ad268_0849697b",
        "filename": "src/tests/gl_tests/UniformBufferTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 687,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2023-11-01T22:51:56Z",
      "side": 1,
      "message": "UBO -\u003e uniform block",
      "revId": "bd3b5d535e53b60138561051c7da4f3fcbbdbc23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}