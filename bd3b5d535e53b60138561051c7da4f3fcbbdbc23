{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "104bda6c_a2cce68a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2023-11-01T18:20:59Z",
      "side": 1,
      "message": "only if size matches?\n\nWith the current wording I get an impression that we\u0027re increasing reuse, while in fact it looks to me like we\u0027re decreasing it.",
      "range": {
        "startLine": 7,
        "startChar": 35,
        "endLine": 7,
        "endChar": 52
      },
      "revId": "bd3b5d535e53b60138561051c7da4f3fcbbdbc23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c7388154_32306bc3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1546942
      },
      "writtenOn": "2023-11-01T23:21:33Z",
      "side": 1,
      "message": "Yes, only reuse the conversion buffer if the stdSize matches the block size recorded in the conversion buffer, else create a new conversion buffer. Previously buffers were reused with no regard for the block size.",
      "parentUuid": "104bda6c_a2cce68a",
      "range": {
        "startLine": 7,
        "startChar": 35,
        "endLine": 7,
        "endChar": 52
      },
      "revId": "bd3b5d535e53b60138561051c7da4f3fcbbdbc23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b33a0d61_cec61f9d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2023-11-02T14:29:53Z",
      "side": 1,
      "message": "I\u0027ve meant, would it make sense to change \"for matching size\" to \"only if size matches\".",
      "parentUuid": "c7388154_32306bc3",
      "range": {
        "startLine": 7,
        "startChar": 35,
        "endLine": 7,
        "endChar": 52
      },
      "revId": "bd3b5d535e53b60138561051c7da4f3fcbbdbc23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4124edd4_2c0d38d7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2023-11-01T18:20:59Z",
      "side": 1,
      "message": "LGTM if bots are happy, I\u0027ve started a dryrun",
      "revId": "bd3b5d535e53b60138561051c7da4f3fcbbdbc23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "57193573_8ab9b20d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2023-11-01T22:51:56Z",
      "side": 1,
      "message": "Would like to see the test passing on all platforms before approving.\n\nCC\u0027ing others for more eyeballs on the problem - any more feedback appreciated.",
      "revId": "bd3b5d535e53b60138561051c7da4f3fcbbdbc23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d643553e_e7195708",
        "filename": "src/libANGLE/renderer/metal/BufferMtl.mm",
        "patchSetId": 1
      },
      "lineNbr": 389,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2023-11-01T22:51:56Z",
      "side": 1,
      "message": "Without knowing more, could more reuse be achieved by saying\n\n  buffer.uniformBufferBlockSize \u003e\u003d stdSize\n  \n?\n\nWould that be correct?",
      "revId": "bd3b5d535e53b60138561051c7da4f3fcbbdbc23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "de454306_add7fab3",
        "filename": "src/tests/gl_tests/UniformBufferTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 605,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-11-01T23:10:20Z",
      "side": 1,
      "message": "Per our style, please move to the top, call it `RoundUp`, put in an anonymous namespace and drop `static`.",
      "revId": "bd3b5d535e53b60138561051c7da4f3fcbbdbc23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c1950ec8_41519797",
        "filename": "src/tests/gl_tests/UniformBufferTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 605,
      "author": {
        "id": 1546942
      },
      "writtenOn": "2023-11-02T04:15:24Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "de454306_add7fab3",
      "revId": "bd3b5d535e53b60138561051c7da4f3fcbbdbc23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c87047e8_6c5bcdff",
        "filename": "src/tests/gl_tests/UniformBufferTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 610,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2023-11-01T22:51:56Z",
      "side": 1,
      "message": "UBOs -\u003e uniform blocks\n\n\"buffer\" could be \"UBO\" for more clarity.\n\n(UBO \u003d\u003d Uniform Buffer Object, not the same thing as a uniform block)",
      "revId": "bd3b5d535e53b60138561051c7da4f3fcbbdbc23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a77c9db7_09dc4a3c",
        "filename": "src/tests/gl_tests/UniformBufferTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 610,
      "author": {
        "id": 1546942
      },
      "writtenOn": "2023-11-02T04:15:24Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "c87047e8_6c5bcdff",
      "revId": "bd3b5d535e53b60138561051c7da4f3fcbbdbc23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "59481ec7_ecb12427",
        "filename": "src/tests/gl_tests/UniformBufferTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 613,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-11-01T23:10:20Z",
      "side": 1,
      "message": "While you\u0027re at it, Object is redundant with UBO.",
      "range": {
        "startLine": 613,
        "startChar": 37,
        "endLine": 613,
        "endChar": 46
      },
      "revId": "bd3b5d535e53b60138561051c7da4f3fcbbdbc23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "88fa7c58_b7d81a4a",
        "filename": "src/tests/gl_tests/UniformBufferTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 613,
      "author": {
        "id": 1546942
      },
      "writtenOn": "2023-11-02T04:15:24Z",
      "side": 1,
      "message": "That was the name from the original source code I derived the test from. Replaced with uni to match the rest of the test.",
      "parentUuid": "59481ec7_ecb12427",
      "range": {
        "startLine": 613,
        "startChar": 37,
        "endLine": 613,
        "endChar": 46
      },
      "revId": "bd3b5d535e53b60138561051c7da4f3fcbbdbc23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c7d8fbf6_95f990f6",
        "filename": "src/tests/gl_tests/UniformBufferTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 640,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-11-01T23:10:20Z",
      "side": 1,
      "message": "Could you please assert that `offsetAlignmentInBytes` is divisible by 16?",
      "revId": "bd3b5d535e53b60138561051c7da4f3fcbbdbc23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2cdcf900_5c06820d",
        "filename": "src/tests/gl_tests/UniformBufferTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 640,
      "author": {
        "id": 1546942
      },
      "writtenOn": "2023-11-02T04:15:24Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "c7d8fbf6_95f990f6",
      "revId": "bd3b5d535e53b60138561051c7da4f3fcbbdbc23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4c6e9280_1455b478",
        "filename": "src/tests/gl_tests/UniformBufferTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 642,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2023-11-01T22:51:56Z",
      "side": 1,
      "message": "UBO -\u003e uniform block",
      "revId": "bd3b5d535e53b60138561051c7da4f3fcbbdbc23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f66c70e7_8b63b783",
        "filename": "src/tests/gl_tests/UniformBufferTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 642,
      "author": {
        "id": 1546942
      },
      "writtenOn": "2023-11-02T04:15:24Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "4c6e9280_1455b478",
      "revId": "bd3b5d535e53b60138561051c7da4f3fcbbdbc23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f94d40bf_ab0b2e52",
        "filename": "src/tests/gl_tests/UniformBufferTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 649,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2023-11-01T22:51:56Z",
      "side": 1,
      "message": "UBO -\u003e uniform block",
      "revId": "bd3b5d535e53b60138561051c7da4f3fcbbdbc23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2482284e_ad41b743",
        "filename": "src/tests/gl_tests/UniformBufferTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 649,
      "author": {
        "id": 1546942
      },
      "writtenOn": "2023-11-02T04:15:24Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "f94d40bf_ab0b2e52",
      "revId": "bd3b5d535e53b60138561051c7da4f3fcbbdbc23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "82f115c5_67012b03",
        "filename": "src/tests/gl_tests/UniformBufferTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 650,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2023-11-01T22:51:56Z",
      "side": 1,
      "message": "Not sure whether the test\u0027s failing because this bool is being fed 1.0 as its input and the bitwise representation doesn\u0027t match uint(1).",
      "revId": "bd3b5d535e53b60138561051c7da4f3fcbbdbc23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b2b5459_1e27dd03",
        "filename": "src/tests/gl_tests/UniformBufferTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 650,
      "author": {
        "id": 1543187
      },
      "writtenOn": "2023-11-02T09:18:44Z",
      "side": 1,
      "message": "I think this is ok since GLSL bool will be true as long as the int representation is not zero AFAIK.\n\nBesides the test failed on mac at line 718 which uses the row major matrix not the bool flag.\n\nIt looks like this is a Mac\u0027s OpenGL driver bug wrt row major matrices http://anglebug.com/2273.\n\nOn Android, the failure was caused by the 2nd shader (with row major matrix) failing to be compiled. I saw this error log https://chromium-swarm.appspot.com/task?id\u003d65a7dcb968f5df11\u0026w\u003dtrue\n```\nshader compilation failed: Assertion failed: BitWidth \u003d\u003d RHS.BitWidth \u0026\u0026 \"Bit widths must be the same\"\n../../src/tests/gl_tests/UniformBufferTest.cpp:679: Failure\n```\nHowever, I don\u0027t see any obvious thing wrong in the shader.\n\nMaybe we should skip the test on Mac \u0026 Android with OpenGL backend.",
      "parentUuid": "82f115c5_67012b03",
      "revId": "bd3b5d535e53b60138561051c7da4f3fcbbdbc23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0699b3ed_3142010d",
        "filename": "src/tests/gl_tests/UniformBufferTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 650,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2023-11-02T21:59:53Z",
      "side": 1,
      "message": "Good points Quyen. Dan, could you consider getting rid of the row_major attribute to bypass these bugs? They don\u0027t seem that essential for testing the problem you\u0027re fixing.",
      "parentUuid": "2b2b5459_1e27dd03",
      "revId": "bd3b5d535e53b60138561051c7da4f3fcbbdbc23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d96c66f9_b9679e38",
        "filename": "src/tests/gl_tests/UniformBufferTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 652,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2023-11-01T22:51:56Z",
      "side": 1,
      "message": "UBO -\u003e uniform block",
      "revId": "bd3b5d535e53b60138561051c7da4f3fcbbdbc23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc94bd87_31a63820",
        "filename": "src/tests/gl_tests/UniformBufferTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 654,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2023-11-01T22:51:56Z",
      "side": 1,
      "message": "Not sure whether the test\u0027s failing because the padding is incorrect/insufficient.",
      "revId": "bd3b5d535e53b60138561051c7da4f3fcbbdbc23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3aea0f5c_16241d4e",
        "filename": "src/tests/gl_tests/UniformBufferTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 654,
      "author": {
        "id": 1546942
      },
      "writtenOn": "2023-11-02T04:15:24Z",
      "side": 1,
      "message": "If the padding is wrong, I\u0027d expect glBindBufferRange to fail and ASSERT_GL_NO_ERROR to catch it.",
      "parentUuid": "bc94bd87_31a63820",
      "revId": "bd3b5d535e53b60138561051c7da4f3fcbbdbc23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d5e62e65_691527d0",
        "filename": "src/tests/gl_tests/UniformBufferTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 656,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2023-11-01T22:51:56Z",
      "side": 1,
      "message": "UBO -\u003e uniform block",
      "revId": "bd3b5d535e53b60138561051c7da4f3fcbbdbc23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "03fb4cd5_6d22fe9c",
        "filename": "src/tests/gl_tests/UniformBufferTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 656,
      "author": {
        "id": 1546942
      },
      "writtenOn": "2023-11-02T04:15:24Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "d5e62e65_691527d0",
      "revId": "bd3b5d535e53b60138561051c7da4f3fcbbdbc23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "24413637_a8f45ce7",
        "filename": "src/tests/gl_tests/UniformBufferTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 658,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2023-11-01T22:51:56Z",
      "side": 1,
      "message": "Not sure whether the test\u0027s failing because this row_major matrix\u0027s data is in the wrong format.",
      "revId": "bd3b5d535e53b60138561051c7da4f3fcbbdbc23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ab785dd2_8b002dad",
        "filename": "src/tests/gl_tests/UniformBufferTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 658,
      "author": {
        "id": 1546942
      },
      "writtenOn": "2023-11-02T04:15:24Z",
      "side": 1,
      "message": "This matrix was some random data which I tried to pull out correct elements to make green. I\u0027ve replaced the test with logic to test the correct layout of a row-major matrix from GLSLTest.cpp to see if that works correctly.",
      "parentUuid": "24413637_a8f45ce7",
      "revId": "bd3b5d535e53b60138561051c7da4f3fcbbdbc23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7864c095_116a76cd",
        "filename": "src/tests/gl_tests/UniformBufferTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 663,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2023-11-01T22:51:56Z",
      "side": 1,
      "message": "UBOs -\u003e uniform blocks\n\nOptionally: Buffer -\u003e UBO",
      "revId": "bd3b5d535e53b60138561051c7da4f3fcbbdbc23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "33d11f66_6f5702dd",
        "filename": "src/tests/gl_tests/UniformBufferTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 663,
      "author": {
        "id": 1546942
      },
      "writtenOn": "2023-11-02T04:15:24Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "7864c095_116a76cd",
      "revId": "bd3b5d535e53b60138561051c7da4f3fcbbdbc23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "32da7800_d969f2d1",
        "filename": "src/tests/gl_tests/UniformBufferTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 672,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2023-11-01T22:51:56Z",
      "side": 1,
      "message": "UBO -\u003e uniform block",
      "revId": "bd3b5d535e53b60138561051c7da4f3fcbbdbc23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3ca2b5e6_0c8a0977",
        "filename": "src/tests/gl_tests/UniformBufferTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 672,
      "author": {
        "id": 1546942
      },
      "writtenOn": "2023-11-02T04:15:24Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "32da7800_d969f2d1",
      "revId": "bd3b5d535e53b60138561051c7da4f3fcbbdbc23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc5ad268_0849697b",
        "filename": "src/tests/gl_tests/UniformBufferTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 687,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2023-11-01T22:51:56Z",
      "side": 1,
      "message": "UBO -\u003e uniform block",
      "revId": "bd3b5d535e53b60138561051c7da4f3fcbbdbc23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "326bdf8b_98360af6",
        "filename": "src/tests/gl_tests/UniformBufferTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 687,
      "author": {
        "id": 1546942
      },
      "writtenOn": "2023-11-02T04:15:24Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "fc5ad268_0849697b",
      "revId": "bd3b5d535e53b60138561051c7da4f3fcbbdbc23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}