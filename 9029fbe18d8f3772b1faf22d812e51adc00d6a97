{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "dedaf46a_c7d8e03f",
        "filename": "src/libANGLE/capture/FrameCapture.cpp",
        "patchSetId": 10
      },
      "lineNbr": 4106,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-06-30T11:36:19Z",
      "side": 1,
      "message": "nit: can you explicitly convert this to bool by using \u003e 0? a stylistic convention we use.",
      "range": {
        "startLine": 4106,
        "startChar": 13,
        "endLine": 4106,
        "endChar": 20
      },
      "revId": "9029fbe18d8f3772b1faf22d812e51adc00d6a97",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cacd09a5_9be991d4",
        "filename": "src/libANGLE/capture/FrameCapture.cpp",
        "patchSetId": 10
      },
      "lineNbr": 4106,
      "author": {
        "id": 1491823
      },
      "writtenOn": "2021-06-30T12:42:29Z",
      "side": 1,
      "message": "indices is a pointer (see line 4092+)",
      "parentUuid": "dedaf46a_c7d8e03f",
      "range": {
        "startLine": 4106,
        "startChar": 13,
        "endLine": 4106,
        "endChar": 20
      },
      "revId": "9029fbe18d8f3772b1faf22d812e51adc00d6a97",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "69473d36_5bd566b6",
        "filename": "src/libANGLE/capture/FrameCapture.cpp",
        "patchSetId": 10
      },
      "lineNbr": 4106,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-06-30T12:57:36Z",
      "side": 1,
      "message": "OK, this doesn\u0027t look quite right. Can you clarify what\u0027s happening here? ANGLE as a general rule shouldn\u0027t be validating pointers.",
      "parentUuid": "cacd09a5_9be991d4",
      "range": {
        "startLine": 4106,
        "startChar": 13,
        "endLine": 4106,
        "endChar": 20
      },
      "revId": "9029fbe18d8f3772b1faf22d812e51adc00d6a97",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4d5bc778_287d4bc8",
        "filename": "src/libANGLE/capture/FrameCapture.cpp",
        "patchSetId": 10
      },
      "lineNbr": 4106,
      "author": {
        "id": 1491823
      },
      "writtenOn": "2021-06-30T13:48:23Z",
      "side": 1,
      "message": "The log says: \nGL error: HIGH: Must have element array buffer bound.\n\nIt seems the test is wrong, because it passes the index data as pointer, but enabled WebGL compatibility, so it is expected that the data must passed by using a buffer. The call is tagged as invalid, but it still runs `maybeCapturePreCallUpdates`, maybe not calling this function for invalid  calls would be the right solution?\n\nIn any case, the code still shouldn\u0027t crash. it should simply report an error.",
      "parentUuid": "69473d36_5bd566b6",
      "range": {
        "startLine": 4106,
        "startChar": 13,
        "endLine": 4106,
        "endChar": 20
      },
      "revId": "9029fbe18d8f3772b1faf22d812e51adc00d6a97",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e26f3ed4_10a75d72",
        "filename": "src/libANGLE/capture/FrameCapture.cpp",
        "patchSetId": 10
      },
      "lineNbr": 4106,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-06-30T15:39:48Z",
      "side": 1,
      "message": "\u003e The call is tagged as invalid, but it still runs `maybeCapturePreCallUpdates`, maybe not calling this function for invalid  calls would be the right solution?\n\nWe need to perform that work for every call, regardless of whether the call is valid.   See the CL description here for an explanation:\n\nhttps://chromium-review.googlesource.com/c/angle/angle/+/2673068",
      "parentUuid": "4d5bc778_287d4bc8",
      "range": {
        "startLine": 4106,
        "startChar": 13,
        "endLine": 4106,
        "endChar": 20
      },
      "revId": "9029fbe18d8f3772b1faf22d812e51adc00d6a97",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "50a1244e_d904a2ae",
        "filename": "src/libANGLE/capture/FrameCapture.cpp",
        "patchSetId": 10
      },
      "lineNbr": 4106,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-06-30T15:48:56Z",
      "side": 1,
      "message": "We should skip \u0027maybeCaptureDrawElementsClientData\u0027 if the call is invalid. There won\u0027t be any data pulled by the GPU so we shouldn\u0027t pull any client data into memory.\n\nRegarding nullptr - ANGLE has no real way of telling if a pointer is valid. \"0\" is kinda special in that it\u0027s a common programming error so we sometimes make an exception for nullptr. In reality it\u0027s the same class of behaviour as a pointer value of 0xDEADBEEF, etc.",
      "parentUuid": "e26f3ed4_10a75d72",
      "range": {
        "startLine": 4106,
        "startChar": 13,
        "endLine": 4106,
        "endChar": 20
      },
      "revId": "9029fbe18d8f3772b1faf22d812e51adc00d6a97",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4afc4d51_f8aaa6a2",
        "filename": "src/libANGLE/capture/FrameCapture.cpp",
        "patchSetId": 10
      },
      "lineNbr": 4106,
      "author": {
        "id": 1491823
      },
      "writtenOn": "2021-07-01T08:34:48Z",
      "side": 1,
      "message": "TBH, I\u0027m not sure how to continue given these two opposite points of view. However, the test implementation was also not correct, i.e. the tests VertexAttributeOORTest.* have WebGL compatibility enabled, but ANGLETest doesn\u0027t forward the drawQuad calls to use index buffers. Therefore I created https://chromium-review.googlesource.com/c/angle/angle/+/2999523 to correct this, and this also fixes the capture/replay of the given tests. \n\nI think the right approach is to add a test that explicitly passes data as pointer to glDrawElements and then go from there to fix the bug. \nWebGLCompatibilityTest.NullIndexBuffer actually passes (now), but also because \"count\" is zero there.",
      "parentUuid": "50a1244e_d904a2ae",
      "range": {
        "startLine": 4106,
        "startChar": 13,
        "endLine": 4106,
        "endChar": 20
      },
      "revId": "9029fbe18d8f3772b1faf22d812e51adc00d6a97",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}