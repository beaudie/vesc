{
  "comments": [
    {
      "key": {
        "uuid": "185283e0_88e751f9",
        "filename": "src/common/CommonPoolAlloc.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2019-01-14T21:28:17Z",
      "side": 1,
      "message": "btw, just 2019 for new headers, no (c)\n\nsee https://chromium.googlesource.com/angle/angle/+/HEAD/doc/CodingStandard.md#comments",
      "range": {
        "startLine": 2,
        "startChar": 12,
        "endLine": 2,
        "endChar": 26
      },
      "revId": "86e09692da236a38c61b462706f7931629bd44f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8ddd0f96_929a426b",
        "filename": "src/common/CommonPoolAlloc.h",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2019-01-14T21:28:17Z",
      "side": 1,
      "message": "would call this one PoolAlloc, renaming the other to GlobalPoolAlloc if there\u0027s some kind of naming conflict.",
      "revId": "86e09692da236a38c61b462706f7931629bd44f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd533549_139aa16d",
        "filename": "src/common/CommonPoolAlloc.h",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2019-01-14T21:28:17Z",
      "side": 1,
      "message": "instead of CP would wrap this in angle:: namespace",
      "range": {
        "startLine": 43,
        "startChar": 6,
        "endLine": 43,
        "endChar": 18
      },
      "revId": "86e09692da236a38c61b462706f7931629bd44f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e72005af_4e28df98",
        "filename": "src/common/CommonPoolAlloc.h",
        "patchSetId": 1
      },
      "lineNbr": 121,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2019-01-14T21:28:17Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 121,
        "startChar": 6,
        "endLine": 121,
        "endChar": 25
      },
      "revId": "86e09692da236a38c61b462706f7931629bd44f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cd49a8f8_4b908ada",
        "filename": "src/common/CommonPoolAlloc.h",
        "patchSetId": 1
      },
      "lineNbr": 246,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2019-01-14T21:28:17Z",
      "side": 1,
      "message": "this would need to go as well.",
      "range": {
        "startLine": 239,
        "startChar": 0,
        "endLine": 246,
        "endChar": 0
      },
      "revId": "86e09692da236a38c61b462706f7931629bd44f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e231c7a5_b8e9f6d5",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1454,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2019-01-14T21:28:17Z",
      "side": 1,
      "message": "no more timstamps?",
      "range": {
        "startLine": 1454,
        "startChar": 48,
        "endLine": 1454,
        "endChar": 58
      },
      "revId": "86e09692da236a38c61b462706f7931629bd44f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4848d0b9_717a759c",
        "filename": "src/libANGLE/renderer/vulkan/vk_utils.cpp",
        "patchSetId": 1
      },
      "lineNbr": 287,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2019-01-14T21:28:17Z",
      "side": 1,
      "message": "nit: Caps for static methods https://chromium.googlesource.com/angle/angle/+/master/doc/CodingStandard.md#variable-names",
      "range": {
        "startLine": 287,
        "startChar": 13,
        "endLine": 287,
        "endChar": 31
      },
      "revId": "86e09692da236a38c61b462706f7931629bd44f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "584d77ae_1671eac2",
        "filename": "src/libANGLE/renderer/vulkan/vk_utils.h",
        "patchSetId": 1
      },
      "lineNbr": 312,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2019-01-14T21:28:17Z",
      "side": 1,
      "message": "nitpick but I would probably structure this slightly differently. You can make a helper function that returns a VkAllocationCallbacks with a user data initialized to the angle::PoolAllocator. You could define the static allocation functions in vk_utils.cpp.",
      "range": {
        "startLine": 287,
        "startChar": 0,
        "endLine": 312,
        "endChar": 2
      },
      "revId": "86e09692da236a38c61b462706f7931629bd44f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5b01e041_add68293",
        "filename": "src/libANGLE/renderer/vulkan/vk_utils.h",
        "patchSetId": 1
      },
      "lineNbr": 312,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2019-01-14T21:29:50Z",
      "side": 1,
      "message": ".. follow up ..\n\nWould make the angle::PoolAllocator owned by RendererVk and would pass it to this new static method (InitPoolAllocationCallbacks(const angle::PoolAllocator) \u0026?)",
      "parentUuid": "584d77ae_1671eac2",
      "range": {
        "startLine": 287,
        "startChar": 0,
        "endLine": 312,
        "endChar": 2
      },
      "revId": "86e09692da236a38c61b462706f7931629bd44f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8c51ba67_7bbcdcfa",
        "filename": "src/libANGLE/renderer/vulkan/vk_utils.h",
        "patchSetId": 1
      },
      "lineNbr": 321,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2019-01-14T21:28:17Z",
      "side": 1,
      "message": "can pass the allocation callbacks as a const \u0026 here.",
      "range": {
        "startLine": 321,
        "startChar": 4,
        "endLine": 321,
        "endChar": 78
      },
      "revId": "86e09692da236a38c61b462706f7931629bd44f7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}