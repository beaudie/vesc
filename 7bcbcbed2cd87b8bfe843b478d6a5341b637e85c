{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "30f9f203_8cfa8058",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-06-21T16:56:41Z",
      "side": 1,
      "message": "when does this happen? (same question as elsewhere)",
      "range": {
        "startLine": 16,
        "startChar": 1,
        "endLine": 17,
        "endChar": 67
      },
      "revId": "7bcbcbed2cd87b8bfe843b478d6a5341b637e85c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8b3d1dba_4d7baa14",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1359667
      },
      "writtenOn": "2021-07-13T03:20:41Z",
      "side": 1,
      "message": "Rewrote the commit message to be more accurate about what\u0027s going on with the change",
      "parentUuid": "30f9f203_8cfa8058",
      "range": {
        "startLine": 16,
        "startChar": 1,
        "endLine": 17,
        "endChar": 67
      },
      "revId": "7bcbcbed2cd87b8bfe843b478d6a5341b637e85c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ecafe2c8_12e958c0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-06-18T23:21:03Z",
      "side": 1,
      "message": "PTAL - Jamie, Tim",
      "revId": "7bcbcbed2cd87b8bfe843b478d6a5341b637e85c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3c02147a_e74d9244",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-06-21T16:56:41Z",
      "side": 1,
      "message": "Looks much better now that we\u0027re not using HasAttachedShaders - still have a few questions.",
      "revId": "7bcbcbed2cd87b8bfe843b478d6a5341b637e85c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cff7d5f2_5cf2e66c",
        "filename": "src/libANGLE/Program.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1607,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-06-21T18:36:58Z",
      "side": 1,
      "message": "ref1",
      "revId": "7bcbcbed2cd87b8bfe843b478d6a5341b637e85c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4d3f9ba3_f29ee9ab",
        "filename": "src/libANGLE/Program.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1607,
      "author": {
        "id": 1359667
      },
      "writtenOn": "2021-07-13T03:20:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cff7d5f2_5cf2e66c",
      "revId": "7bcbcbed2cd87b8bfe843b478d6a5341b637e85c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b422b7d6_67ad8f42",
        "filename": "src/libANGLE/ProgramExecutable.cpp",
        "patchSetId": 2
      },
      "lineNbr": 903,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-06-19T02:24:56Z",
      "side": 1,
      "message": "We don\u0027t what? Also, looks like there\u0027s a question here that needs answering before this lands.",
      "range": {
        "startLine": 903,
        "startChar": 38,
        "endLine": 903,
        "endChar": 39
      },
      "revId": "7bcbcbed2cd87b8bfe843b478d6a5341b637e85c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e5ab886a_1a296ebe",
        "filename": "src/libANGLE/ProgramExecutable.cpp",
        "patchSetId": 2
      },
      "lineNbr": 903,
      "author": {
        "id": 1359667
      },
      "writtenOn": "2021-07-13T03:20:41Z",
      "side": 1,
      "message": "Removed the comment. This was self made comment during implementation.",
      "parentUuid": "b422b7d6_67ad8f42",
      "range": {
        "startLine": 903,
        "startChar": 38,
        "endLine": 903,
        "endChar": 39
      },
      "revId": "7bcbcbed2cd87b8bfe843b478d6a5341b637e85c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d80eab08_40f3fd00",
        "filename": "src/libANGLE/ProgramExecutable.cpp",
        "patchSetId": 2
      },
      "lineNbr": 911,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-06-21T18:36:58Z",
      "side": 1,
      "message": "Why getActiveAttributes() here, rather than getAllAttributes()?   Looking at linkAttributes() which is called before this (ref1), it seems we normally need to differentiate between getActiveAttributes() and getAllAttributes():\n\n    bool Program::linkAttributes(const Context *context, InfoLog \u0026infoLog)\n    {\n    ...\n        shaderVersion \u003d vertexShader-\u003egetShaderVersion();\n        if (shaderVersion \u003e\u003d 300)\n        {\n            // In GLSL ES 3.00.6, aliasing checks should be done with all declared attributes -\n            // see GLSL ES 3.00.6 section 12.46. Inactive attributes will be pruned after\n            // aliasing checks.\n            mState.mExecutable-\u003emProgramInputs \u003d vertexShader-\u003egetAllAttributes();\n        }\n        else\n        {\n            // In GLSL ES 1.00.17 we only do aliasing checks for active attributes.\n            mState.mExecutable-\u003emProgramInputs \u003d vertexShader-\u003egetActiveAttributes();\n        }\n        \nHowever, it also seems we already have this information saved in the ProgramExecutable to begin with, so why do we need it again here (since only VS have attributes)?",
      "revId": "7bcbcbed2cd87b8bfe843b478d6a5341b637e85c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "838dab0d_8e650b18",
        "filename": "src/libANGLE/ProgramExecutable.cpp",
        "patchSetId": 2
      },
      "lineNbr": 911,
      "author": {
        "id": 1359667
      },
      "writtenOn": "2021-07-13T03:20:41Z",
      "side": 1,
      "message": "You\u0027re right. It\u0027s already being handled. I\u0027ve removed this.",
      "parentUuid": "d80eab08_40f3fd00",
      "revId": "7bcbcbed2cd87b8bfe843b478d6a5341b637e85c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2339c9f1_96a3e871",
        "filename": "src/libANGLE/ProgramExecutable.cpp",
        "patchSetId": 2
      },
      "lineNbr": 918,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-06-21T16:56:41Z",
      "side": 1,
      "message": "what\u0027s a pending link operation again? can\u0027t we resolve any linking operations before committing a program to be serialized?",
      "range": {
        "startLine": 918,
        "startChar": 24,
        "endLine": 918,
        "endChar": 43
      },
      "revId": "7bcbcbed2cd87b8bfe843b478d6a5341b637e85c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2038208e_4dbadd24",
        "filename": "src/libANGLE/ProgramExecutable.cpp",
        "patchSetId": 2
      },
      "lineNbr": 918,
      "author": {
        "id": 1359667
      },
      "writtenOn": "2021-07-13T03:20:41Z",
      "side": 1,
      "message": "The pending variables were introduced as it looked like we need to save off the uniforms from either ProgramState or ProgramPipelineState for use in LinkValidateProgramGlobalNames. The ProgramExecutable\u0027ss don\u0027t seem to have a reference to Program or Pipeline State",
      "parentUuid": "2339c9f1_96a3e871",
      "range": {
        "startLine": 918,
        "startChar": 24,
        "endLine": 918,
        "endChar": 43
      },
      "revId": "7bcbcbed2cd87b8bfe843b478d6a5341b637e85c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d013fa65_aae55f64",
        "filename": "src/libANGLE/ProgramExecutable.cpp",
        "patchSetId": 2
      },
      "lineNbr": 918,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-07-13T12:50:21Z",
      "side": 1,
      "message": "What errors pop up when you merge Pending and Linked variables?\n\nIf something fails storing these variables as the \"Linked\" version, maybe you could store these in little struct in the link call by-value, then on a successful link copy this into the executable. And otherwise pass it by const \u0026 into the validate call.",
      "parentUuid": "2038208e_4dbadd24",
      "range": {
        "startLine": 918,
        "startChar": 24,
        "endLine": 918,
        "endChar": 43
      },
      "revId": "7bcbcbed2cd87b8bfe843b478d6a5341b637e85c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6223275b_4246d4d4",
        "filename": "src/libANGLE/ProgramExecutable.cpp",
        "patchSetId": 2
      },
      "lineNbr": 918,
      "author": {
        "id": 1359667
      },
      "writtenOn": "2021-07-17T01:49:51Z",
      "side": 1,
      "message": "The current change has merged the pending and linked variables, and bots are passing. The initial concern for introducing the pending variables was that there\u0027d be issues with a separable program that failed a relink, but that seems to be alright since there\u0027s a check for that when linking the pipeline.",
      "parentUuid": "d013fa65_aae55f64",
      "range": {
        "startLine": 918,
        "startChar": 24,
        "endLine": 918,
        "endChar": 43
      },
      "revId": "7bcbcbed2cd87b8bfe843b478d6a5341b637e85c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b9e8fdef_cc43a9e6",
        "filename": "src/libANGLE/ProgramExecutable.h",
        "patchSetId": 2
      },
      "lineNbr": 336,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-06-21T18:36:58Z",
      "side": 1,
      "message": "nit: Have the function names match the member names: getPendingLinkUniforms()",
      "range": {
        "startLine": 336,
        "startChar": 43,
        "endLine": 336,
        "endChar": 68
      },
      "revId": "7bcbcbed2cd87b8bfe843b478d6a5341b637e85c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "04e9d2e9_1f0cce9a",
        "filename": "src/libANGLE/ProgramExecutable.h",
        "patchSetId": 2
      },
      "lineNbr": 336,
      "author": {
        "id": 1359667
      },
      "writtenOn": "2021-07-13T03:20:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b9e8fdef_cc43a9e6",
      "range": {
        "startLine": 336,
        "startChar": 43,
        "endLine": 336,
        "endChar": 68
      },
      "revId": "7bcbcbed2cd87b8bfe843b478d6a5341b637e85c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}