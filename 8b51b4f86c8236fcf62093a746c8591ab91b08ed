{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "8ace5cce_096bcc72",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-12-22T16:51:51Z",
      "side": 1,
      "message": "Thanks again for catching this bug Mohan. FWIW, the rest of the state changes mentioned in the bug should work fine, I realized that after writing the depth-test change in this CL.\n\nThe reason is that `FramebufferVk::syncState` may do color mask and blend state changes without calling `ContextVk::onFramebufferChange` (if the framebuffer isn\u0027t otherwise changed), which was the bug, but when it _is_ changed, all that other state change in that function is followed by a call to `ContextVk::onDrawFramebufferRenderPassDescChange` which invalidates the pipeline already.",
      "revId": "8b51b4f86c8236fcf62093a746c8591ab91b08ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4c19a6be_2a1fc91b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2023-12-25T21:03:57Z",
      "side": 1,
      "message": "thanks for the fix Shabi\n\ni see that `ContextVk::onDrawFramebufferRenderPassDescChange` invalidates the pipeline only when `renderPassDescChangedOut \u003d\u003d nullptr`. i am not familiar with this code path but is it the assumption that the callers of `ContextVk::onDrawFramebufferRenderPassDescChange` with `renderPassDescChangedOut !\u003d nullptr` are responsible for invalidating the graphics pipeline?",
      "parentUuid": "8ace5cce_096bcc72",
      "revId": "8b51b4f86c8236fcf62093a746c8591ab91b08ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "11ee6954_cf5cf23e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-12-27T18:16:17Z",
      "side": 1,
      "message": "Yes, that\u0027s a special case where invalidating the pipeline is not enough to actually make things work. It happens during dirty bit processing, where dirty pipeline bit is already processed, but starting a render pass (which happens after that) ends up invalidating the pipeline again (due to a rare MSRTT corner case). So instead the RP dirty bit processing looks at the returned bool and reprocesses the pipeline. See `ContextVk::handleDirtyGraphicsRenderPass`, the `renderPassDescChanged` variable.",
      "parentUuid": "4c19a6be_2a1fc91b",
      "revId": "8b51b4f86c8236fcf62093a746c8591ab91b08ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d0de0e5a_36624e33",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2023-12-27T18:23:32Z",
      "side": 1,
      "message": "im hoping this is documented some place other than here in the comments but thanks for the info",
      "parentUuid": "11ee6954_cf5cf23e",
      "revId": "8b51b4f86c8236fcf62093a746c8591ab91b08ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c9f0fe3d_573e854f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2023-12-27T18:24:00Z",
      "side": 1,
      "message": "can +2 if needed (have performed validation of this change on our platform as well)",
      "revId": "8b51b4f86c8236fcf62093a746c8591ab91b08ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9613a71c_18bb8759",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-12-27T18:59:45Z",
      "side": 1,
      "message": "I can add a comment (when I get back to work)",
      "parentUuid": "d0de0e5a_36624e33",
      "revId": "8b51b4f86c8236fcf62093a746c8591ab91b08ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c0b3d5b3_8edbbe28",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-12-27T18:59:45Z",
      "side": 1,
      "message": "It\u0027s ok, we can wait for Charlie\u0027s review.",
      "parentUuid": "c9f0fe3d_573e854f",
      "revId": "8b51b4f86c8236fcf62093a746c8591ab91b08ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6b9814dd_cc82df8d",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.h",
        "patchSetId": 2
      },
      "lineNbr": 458,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2023-12-25T21:03:57Z",
      "side": 1,
      "message": "for consistency with the other `onXXXXXChange` methods, should we rename these to `onColorMasksChange` and `onBlendFuncsAndEquationsChange`?",
      "range": {
        "startLine": 457,
        "startChar": 0,
        "endLine": 458,
        "endChar": 40
      },
      "revId": "8b51b4f86c8236fcf62093a746c8591ab91b08ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "897c4e68_7d6479ac",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.h",
        "patchSetId": 2
      },
      "lineNbr": 458,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-12-27T18:16:17Z",
      "side": 1,
      "message": "Maybe in a follow up, we have a bunch of `updateX` calls too",
      "parentUuid": "6b9814dd_cc82df8d",
      "range": {
        "startLine": 457,
        "startChar": 0,
        "endLine": 458,
        "endChar": 40
      },
      "revId": "8b51b4f86c8236fcf62093a746c8591ab91b08ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4b376613_e752d00e",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.h",
        "patchSetId": 2
      },
      "lineNbr": 458,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2023-12-27T18:23:32Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "897c4e68_7d6479ac",
      "range": {
        "startLine": 457,
        "startChar": 0,
        "endLine": 458,
        "endChar": 40
      },
      "revId": "8b51b4f86c8236fcf62093a746c8591ab91b08ed",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}