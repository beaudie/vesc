{
  "comments": [
    {
      "key": {
        "uuid": "57d4b72d_b62fe884",
        "filename": "src/libANGLE/Framebuffer.cpp",
        "patchSetId": 5
      },
      "lineNbr": 269,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2015-01-30T10:50:43Z",
      "side": 1,
      "message": "I modified this to check for the width and height of the texture from the index explicitly.  I feel it\u0027s a bit more contained since it only uses public methods of Texture but requires the knowledge that the width and height return zero for unspecified images.",
      "range": {
        "startLine": 247,
        "startChar": 0,
        "endLine": 269,
        "endChar": 1
      },
      "revId": "8375ceda02c5bbfab45f69c3a157e132f6183ab9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "57d4b72d_9634ecd9",
        "filename": "src/libANGLE/Texture.cpp",
        "patchSetId": 5
      },
      "lineNbr": 136,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2015-01-30T10:50:43Z",
      "side": 1,
      "message": "Here is a ImageIndex validator contained within the texture class.  I feel this function has a lot of special cases that are handled by the getters.  It has to deal with both missing indices and ones that are set to zero and handle the layer index only for specific types of texture.",
      "range": {
        "startLine": 106,
        "startChar": 0,
        "endLine": 136,
        "endChar": 1
      },
      "revId": "8375ceda02c5bbfab45f69c3a157e132f6183ab9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "17cebfa3_147e9496",
        "filename": "src/libANGLE/Texture.cpp",
        "patchSetId": 5
      },
      "lineNbr": 136,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-01-30T15:34:29Z",
      "side": 1,
      "message": "Can you take a look at http://pastebin.com/KkjVZKsZ and let me know what you think?",
      "parentUuid": "57d4b72d_9634ecd9",
      "range": {
        "startLine": 106,
        "startChar": 0,
        "endLine": 136,
        "endChar": 1
      },
      "revId": "8375ceda02c5bbfab45f69c3a157e132f6183ab9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "97baafec_18736537",
        "filename": "src/libANGLE/Texture.cpp",
        "patchSetId": 5
      },
      "lineNbr": 136,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2015-01-30T15:44:27Z",
      "side": 1,
      "message": "That wont work because all the ImageIndex values stored in the texutre have the no layer information (it\u0027s ENTIRE_LEVEL) and the incoming index can have a layer associated with it.  It\u0027s also possible that the ImageDesc exists but has a size of 0 so width and height need to be checked.  ImageIndex::hasLayer() returns true for cube maps so it will try to compare depth when it shouldn\u0027t.",
      "parentUuid": "17cebfa3_147e9496",
      "range": {
        "startLine": 106,
        "startChar": 0,
        "endLine": 136,
        "endChar": 1
      },
      "revId": "8375ceda02c5bbfab45f69c3a157e132f6183ab9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "17cebfa3_9434e4d9",
        "filename": "src/libANGLE/Texture.cpp",
        "patchSetId": 5
      },
      "lineNbr": 136,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-01-30T16:00:26Z",
      "side": 1,
      "message": "Aha. I get it. Two suggestions:\n\n * remove ImageIndex::operator\u003c, add a new comparator class to the ImageDesc map which ignores the layerDesc (since it\u0027s meaningless for this class)\n * add a helper method isCubeMap() to ImageIndex. We check this all over the place anyway so it\u0027s generally helpful.\n\nThen, take a look at:\n\nhttp://pastebin.com/yzk6w6ez",
      "parentUuid": "97baafec_18736537",
      "range": {
        "startLine": 106,
        "startChar": 0,
        "endLine": 136,
        "endChar": 1
      },
      "revId": "8375ceda02c5bbfab45f69c3a157e132f6183ab9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}