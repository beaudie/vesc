{
  "comments": [
    {
      "key": {
        "uuid": "a2355ed6_7b222c50",
        "filename": "src/libANGLE/Texture.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1269,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-10-08T16:22:15Z",
      "side": 0,
      "message": "Cody, I didn\u0027t notice this change. Is it necessary to set?",
      "revId": "e94f473753bea6cb8ddbfa5e894f55e4a272bf28",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f0b2085e_db126757",
        "filename": "src/libANGLE/Texture.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1269,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2019-10-08T16:31:05Z",
      "side": 0,
      "message": "The VK backend calls back to the front end to get max level (TextureState::getEffectiveMaxLevel) and base level (TextureState::getEffectiveBaseLevel), and those functions check whether the surface is immutable (if (mImmutableFormat) {...}).  Those fields should be set before calling into the backend.\n\nI don\u0027t recall when I ran into this, but I think this is a clear problem.",
      "parentUuid": "a2355ed6_7b222c50",
      "revId": "e94f473753bea6cb8ddbfa5e894f55e4a272bf28",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ba709146_eec3d4e5",
        "filename": "src/libANGLE/Texture.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1269,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-10-08T16:34:35Z",
      "side": 0,
      "message": "I figured. It\u0027s a minor point but I\u0027m hesitant the \"only change state after a success\" pattern is inconsistent here.\n\nWe could change the getEffectiveMaxLevel usage. It should be \u003d\u003d the \"GLsizei levels\" parameter in this function. Do you recall where the usage(s) were?",
      "parentUuid": "f0b2085e_db126757",
      "revId": "e94f473753bea6cb8ddbfa5e894f55e4a272bf28",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6c277450_a41b9bbc",
        "filename": "src/libANGLE/Texture.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1269,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-10-08T16:35:30Z",
      "side": 0,
      "message": "Sorry, that should read \"I\u0027m a bit hesitant to discard the change state after success pattern because it makes the usage in this class inconsistent.\"",
      "parentUuid": "ba709146_eec3d4e5",
      "revId": "e94f473753bea6cb8ddbfa5e894f55e4a272bf28",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9ab7a8b4_adde4827",
        "filename": "src/libANGLE/Texture.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1269,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2019-10-08T16:49:20Z",
      "side": 0,
      "message": "Ah, okay, understood, I didn\u0027t see that pattern.  In that case, yeah, need to update the helpers to not rely on state that hasn\u0027t been changed yet, or change the backend not to use the helpers.\n\nThe only usages I recall at the moment are getEffectiveMaxLevel and getEffectiveBaseLevel.  But looking at Texture.cpp, I see several other helpers that change their answer based on mImmutableFormat.",
      "parentUuid": "6c277450_a41b9bbc",
      "revId": "e94f473753bea6cb8ddbfa5e894f55e4a272bf28",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}