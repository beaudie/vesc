{
  "comments": [
    {
      "key": {
        "uuid": "b989ee11_d54c5ccc",
        "filename": "src/libANGLE/Program.cpp",
        "patchSetId": 17
      },
      "lineNbr": 2330,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-12-19T23:00:29Z",
      "side": 1,
      "message": "can\u0027t you use the mActiveAttribLocationsMask similarly to how we did it with the program/framebuffer mask match? (bit-shifting tricks)",
      "range": {
        "startLine": 2330,
        "startChar": 19,
        "endLine": 2330,
        "endChar": 45
      },
      "revId": "9bd3b5a0d7f4d9cf1683ad3aa843a2ec6b92c8cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b374225e_5dc5ed0f",
        "filename": "src/libANGLE/Program.cpp",
        "patchSetId": 17
      },
      "lineNbr": 2330,
      "author": {
        "id": 1221469
      },
      "writtenOn": "2017-12-20T16:37:46Z",
      "side": 1,
      "message": "mActiveAttribLocationsMask doesn\u0027t have built in attributes filtered out, so it can\u0027t directly correspond to the masks in state and vao.",
      "parentUuid": "b989ee11_d54c5ccc",
      "range": {
        "startLine": 2330,
        "startChar": 19,
        "endLine": 2330,
        "endChar": 45
      },
      "revId": "9bd3b5a0d7f4d9cf1683ad3aa843a2ec6b92c8cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c92ef130_249464ac",
        "filename": "src/libANGLE/State.cpp",
        "patchSetId": 17
      },
      "lineNbr": 146,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-12-19T23:00:29Z",
      "side": 1,
      "message": "I would suggest you do a for loop here or make a special function instead of taking the bits directly, to keep encapsulation separate from the implementation.",
      "range": {
        "startLine": 146,
        "startChar": 24,
        "endLine": 146,
        "endChar": 40
      },
      "revId": "9bd3b5a0d7f4d9cf1683ad3aa843a2ec6b92c8cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "600bb4c1_9302b951",
        "filename": "src/libANGLE/State.h",
        "patchSetId": 17
      },
      "lineNbr": 517,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-12-19T23:00:29Z",
      "side": 1,
      "message": "call this mCurrentValuesTypeMask",
      "range": {
        "startLine": 517,
        "startChar": 28,
        "endLine": 517,
        "endChar": 29
      },
      "revId": "9bd3b5a0d7f4d9cf1683ad3aa843a2ec6b92c8cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3b2f399f_557ef7dc",
        "filename": "src/libANGLE/State.h",
        "patchSetId": 17
      },
      "lineNbr": 517,
      "author": {
        "id": 1221469
      },
      "writtenOn": "2017-12-22T18:25:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "600bb4c1_9302b951",
      "range": {
        "startLine": 517,
        "startChar": 28,
        "endLine": 517,
        "endChar": 29
      },
      "revId": "9bd3b5a0d7f4d9cf1683ad3aa843a2ec6b92c8cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "13edfd99_dd74789d",
        "filename": "src/libANGLE/VertexArray.cpp",
        "patchSetId": 17
      },
      "lineNbr": 28,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-12-19T23:00:29Z",
      "side": 1,
      "message": "I think the mask will start uninitialized, so you should be able to omit this.",
      "range": {
        "startLine": 27,
        "startChar": 0,
        "endLine": 28,
        "endChar": 38
      },
      "revId": "9bd3b5a0d7f4d9cf1683ad3aa843a2ec6b92c8cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "92c93cfc_aaa6d3b6",
        "filename": "src/libANGLE/VertexArray.h",
        "patchSetId": 17
      },
      "lineNbr": 71,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-12-19T23:00:29Z",
      "side": 1,
      "message": "VertexArray doesn\u0027t have the single-bit bitset version like Program, but it would be nice if it did.\n\nThis would let us use a similar approach to the output mask, de-duplicating the type mask, and also we could remove this mMaxEnabledAttribute checks (used in some for loops).\n\nTo keep this CL smaller, you could just add the single bit mask to VAOs and leave a TODO to replace mMaxEnabledAttribute - I am happy to help here. Or feel free to complete the work if you feel like it. LMK what you think.",
      "range": {
        "startLine": 71,
        "startChar": 11,
        "endLine": 71,
        "endChar": 31
      },
      "revId": "9bd3b5a0d7f4d9cf1683ad3aa843a2ec6b92c8cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d1fadd37_024e615f",
        "filename": "src/libANGLE/angletypes.h",
        "patchSetId": 17
      },
      "lineNbr": 297,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-12-19T23:00:29Z",
      "side": 1,
      "message": "fyi, we made some exceptions to ANGLE style to preserve the same syntax as std::bitset, but most any method should be camelCase in ANGLE.",
      "range": {
        "startLine": 297,
        "startChar": 18,
        "endLine": 297,
        "endChar": 31
      },
      "revId": "9bd3b5a0d7f4d9cf1683ad3aa843a2ec6b92c8cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "36c8d9c1_ae05d422",
        "filename": "src/libANGLE/angletypes.h",
        "patchSetId": 17
      },
      "lineNbr": 297,
      "author": {
        "id": 1221469
      },
      "writtenOn": "2017-12-22T18:25:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d1fadd37_024e615f",
      "range": {
        "startLine": 297,
        "startChar": 18,
        "endLine": 297,
        "endChar": 31
      },
      "revId": "9bd3b5a0d7f4d9cf1683ad3aa843a2ec6b92c8cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}