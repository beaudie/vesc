{
  "comments": [
    {
      "key": {
        "uuid": "cc902415_96fd73d2",
        "filename": "include/GLES/glext_explicit_context.inl",
        "patchSetId": 17
      },
      "lineNbr": 0,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-05-16T17:58:17Z",
      "side": 1,
      "message": "for these new files, can you end them in _autogen.inc to make sure they\u0027re clearly delineated? Also the style guide suggests using .inc as the extension:\n\nhttps://google.github.io/styleguide/cppguide.html#Self_contained_Headers",
      "revId": "720f840ff9ee806c318c92a7a42a76c45f2f0db2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8b02c53d_8a258c18",
        "filename": "include/GLES2/gl2ext_angle.h",
        "patchSetId": 17
      },
      "lineNbr": 549,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-05-16T17:58:17Z",
      "side": 1,
      "message": "you can include all the various explicit context headers here - I would suggest we don\u0027t bother making new _angle headers for 3 \u0026 31. just the autogenerated ones are good.",
      "range": {
        "startLine": 549,
        "startChar": 0,
        "endLine": 549,
        "endChar": 38
      },
      "revId": "720f840ff9ee806c318c92a7a42a76c45f2f0db2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "adcd2326_27b18231",
        "filename": "scripts/generate_entry_points.py",
        "patchSetId": 17
      },
      "lineNbr": 430,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-05-16T17:58:17Z",
      "side": 1,
      "message": "maybe we can get more code re-use here. instead of using .format(..) we can make a dictionary \u0027args\u0027 and pass it to template.format(**args). Can you try getting a bit of code re-use this way?",
      "range": {
        "startLine": 430,
        "startChar": 43,
        "endLine": 430,
        "endChar": 49
      },
      "revId": "720f840ff9ee806c318c92a7a42a76c45f2f0db2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2f6a22ec_9c29096f",
        "filename": "src/tests/gl_tests/ExplicitContextTest.cpp",
        "patchSetId": 17
      },
      "lineNbr": 31,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-05-16T17:58:17Z",
      "side": 1,
      "message": "you can omit these pass through overloads",
      "range": {
        "startLine": 28,
        "startChar": 0,
        "endLine": 31,
        "endChar": 55
      },
      "revId": "720f840ff9ee806c318c92a7a42a76c45f2f0db2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a0b1155b_5d101681",
        "filename": "src/tests/gl_tests/ExplicitContextTest.cpp",
        "patchSetId": 17
      },
      "lineNbr": 53,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-05-16T17:58:17Z",
      "side": 1,
      "message": "you can use ANGLE_SKIP_TEST_IF(!extensionEnabled(...)) instead",
      "range": {
        "startLine": 49,
        "startChar": 0,
        "endLine": 53,
        "endChar": 0
      },
      "revId": "720f840ff9ee806c318c92a7a42a76c45f2f0db2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f31a285e_cf02fcb4",
        "filename": "src/tests/gl_tests/ExplicitContextTest.cpp",
        "patchSetId": 17
      },
      "lineNbr": 71,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-05-16T17:58:17Z",
      "side": 1,
      "message": "same for all these",
      "range": {
        "startLine": 68,
        "startChar": 0,
        "endLine": 71,
        "endChar": 5
      },
      "revId": "720f840ff9ee806c318c92a7a42a76c45f2f0db2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d7ccae88_13be3554",
        "filename": "src/tests/gl_tests/ExplicitContextTest.cpp",
        "patchSetId": 17
      },
      "lineNbr": 78,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-05-16T17:58:17Z",
      "side": 1,
      "message": "do you need to do this? they should be in the .def files.",
      "range": {
        "startLine": 74,
        "startChar": 0,
        "endLine": 78,
        "endChar": 91
      },
      "revId": "720f840ff9ee806c318c92a7a42a76c45f2f0db2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "269575bf_b0cf132e",
        "filename": "src/tests/gl_tests/ExplicitContextTest.cpp",
        "patchSetId": 17
      },
      "lineNbr": 78,
      "author": {
        "id": 1221469
      },
      "writtenOn": "2018-05-16T19:55:00Z",
      "side": 1,
      "message": "The main purpose of this test was to verify that some ContextANGLE functions exist in the autogen\u0027d g_procTable[]. And we can verify that at least some of the function pointers exist. I don\u0027t require it in any way, but I thought it would be nice to have.",
      "parentUuid": "d7ccae88_13be3554",
      "range": {
        "startLine": 74,
        "startChar": 0,
        "endLine": 78,
        "endChar": 91
      },
      "revId": "720f840ff9ee806c318c92a7a42a76c45f2f0db2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "25a19df3_112d110a",
        "filename": "src/tests/gl_tests/ExplicitContextTest.cpp",
        "patchSetId": 17
      },
      "lineNbr": 78,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-05-16T20:03:54Z",
      "side": 1,
      "message": "OK, no, sgtm.",
      "parentUuid": "269575bf_b0cf132e",
      "range": {
        "startLine": 74,
        "startChar": 0,
        "endLine": 78,
        "endChar": 91
      },
      "revId": "720f840ff9ee806c318c92a7a42a76c45f2f0db2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}