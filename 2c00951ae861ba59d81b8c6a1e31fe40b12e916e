{
  "comments": [
    {
      "key": {
        "uuid": "1947c8ed_444d624e",
        "filename": "src/libGLESv2/renderer/Renderer.cpp",
        "patchSetId": 6
      },
      "lineNbr": 97,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2014-07-17T20:37:07Z",
      "side": 1,
      "message": "still wouldn\u0027t mind some helper functions here, and below, but LGTM.",
      "revId": "2c00951ae861ba59d81b8c6a1e31fe40b12e916e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "79e44451_879a2a92",
        "filename": "src/libGLESv2/renderer/Renderer.cpp",
        "patchSetId": 6
      },
      "lineNbr": 97,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2014-07-18T18:35:31Z",
      "side": 1,
      "message": "Helper functions wont help here because the order of the checks is important.  Most of this logic will be cleaned up once chromium is using ANGLE_platform_angle and we can remove support for ANGLE_direct3d_display.",
      "parentUuid": "1947c8ed_444d624e",
      "revId": "2c00951ae861ba59d81b8c6a1e31fe40b12e916e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "99df387f_2b3969ec",
        "filename": "src/libGLESv2/renderer/Renderer.cpp",
        "patchSetId": 6
      },
      "lineNbr": 97,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2014-07-18T18:38:44Z",
      "side": 1,
      "message": "Why would order matter for stateless functions?",
      "parentUuid": "79e44451_879a2a92",
      "revId": "2c00951ae861ba59d81b8c6a1e31fe40b12e916e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "99df387f_cb5d5d2a",
        "filename": "src/libGLESv2/renderer/Renderer.cpp",
        "patchSetId": 6
      },
      "lineNbr": 97,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2014-07-18T18:43:23Z",
      "side": 1,
      "message": "To clarify: i was proposing something like\n\n IsD3D11NativeDisplay(EGLNativeDisplayType) { return \u003d\u003d D3D11_ELSE_D3D9 || D3D11_ONLY)\n\n IsD3D11RequestDisplay(...)\n\netc",
      "parentUuid": "99df387f_2b3969ec",
      "revId": "2c00951ae861ba59d81b8c6a1e31fe40b12e916e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "99df387f_0b58e535",
        "filename": "src/libGLESv2/renderer/Renderer.cpp",
        "patchSetId": 6
      },
      "lineNbr": 97,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2014-07-18T18:44:24Z",
      "side": 1,
      "message": "I mean, some enums such as D3D11_ELSE_D3D9 require that two renderers are added in a certain order.  The default renderer also changes the order that they\u0027re added depending on other defines.  Adding helper functions could change the if-statements from two or\u0027d checks to a single function check but there still has to be some logic to check these other conditions. After we remove ANGLE_direct3d_display, these if-statements will be checking fewer things too.",
      "parentUuid": "99df387f_2b3969ec",
      "revId": "2c00951ae861ba59d81b8c6a1e31fe40b12e916e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}