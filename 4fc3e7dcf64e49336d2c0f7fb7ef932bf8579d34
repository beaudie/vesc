{
  "comments": [
    {
      "key": {
        "uuid": "53ccdd7c_2552d8e2",
        "filename": "src/libANGLE/renderer/d3d/d3d11/SwapChain11.cpp",
        "patchSetId": 3
      },
      "lineNbr": 361,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-06-30T15:50:48Z",
      "side": 1,
      "message": "for some reason i find the term \u0027getValidSwapChainFormat\u0027 more confusing. How about getSwapChainNativeFormat() (or getSwapChainDXGIFormat())",
      "range": {
        "startLine": 361,
        "startChar": 92,
        "endLine": 361,
        "endChar": 115
      },
      "revId": "4fc3e7dcf64e49336d2c0f7fb7ef932bf8579d34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f3d8713c_bffc3737",
        "filename": "src/libANGLE/renderer/d3d/d3d11/SwapChain11.cpp",
        "patchSetId": 3
      },
      "lineNbr": 361,
      "author": {
        "id": 1115159
      },
      "writtenOn": "2015-06-30T23:28:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "53ccdd7c_2552d8e2",
      "range": {
        "startLine": 361,
        "startChar": 92,
        "endLine": 361,
        "endChar": 115
      },
      "revId": "4fc3e7dcf64e49336d2c0f7fb7ef932bf8579d34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "53ccdd7c_053dd497",
        "filename": "src/libANGLE/renderer/d3d/d3d11/SwapChain11.cpp",
        "patchSetId": 3
      },
      "lineNbr": 397,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-06-30T15:50:48Z",
      "side": 1,
      "message": "\"to use for\" is awkward, how about \"may not be supported by IDXGISwapChain\"",
      "range": {
        "startLine": 397,
        "startChar": 68,
        "endLine": 397,
        "endChar": 112
      },
      "revId": "4fc3e7dcf64e49336d2c0f7fb7ef932bf8579d34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "13d6e50c_20fd6a7f",
        "filename": "src/libANGLE/renderer/d3d/d3d11/SwapChain11.cpp",
        "patchSetId": 3
      },
      "lineNbr": 397,
      "author": {
        "id": 1115159
      },
      "writtenOn": "2015-06-30T23:28:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "53ccdd7c_053dd497",
      "range": {
        "startLine": 397,
        "startChar": 68,
        "endLine": 397,
        "endChar": 112
      },
      "revId": "4fc3e7dcf64e49336d2c0f7fb7ef932bf8579d34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "73f6419f_85073622",
        "filename": "src/libANGLE/renderer/d3d/d3d11/SwapChain11.cpp",
        "patchSetId": 3
      },
      "lineNbr": 398,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-06-30T15:50:48Z",
      "side": 1,
      "message": "try to not use this (infinitive?) passive voice: \"must be chosen\"\n\ninstead use present tense, \"If so, use a compatible 32-bit format instead\"",
      "range": {
        "startLine": 398,
        "startChar": 7,
        "endLine": 398,
        "endChar": 49
      },
      "revId": "4fc3e7dcf64e49336d2c0f7fb7ef932bf8579d34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f3d8713c_3f43c7f8",
        "filename": "src/libANGLE/renderer/d3d/d3d11/SwapChain11.cpp",
        "patchSetId": 3
      },
      "lineNbr": 398,
      "author": {
        "id": 1115159
      },
      "writtenOn": "2015-06-30T23:28:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "73f6419f_85073622",
      "range": {
        "startLine": 398,
        "startChar": 7,
        "endLine": 398,
        "endChar": 49
      },
      "revId": "4fc3e7dcf64e49336d2c0f7fb7ef932bf8579d34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "73f6419f_e5743aad",
        "filename": "src/tests/egl_tests/EGLSurfaceTest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 324,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-06-30T15:50:48Z",
      "side": 1,
      "message": "same comments here as for the ReadPixels tests (add comments before every test, make these into parameters)",
      "range": {
        "startLine": 324,
        "startChar": 8,
        "endLine": 324,
        "endChar": 22
      },
      "revId": "4fc3e7dcf64e49336d2c0f7fb7ef932bf8579d34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "73f6419f_a57a3298",
        "filename": "src/tests/gl_tests/ReadPixelsTest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 359,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-06-30T15:50:48Z",
      "side": 1,
      "message": "these should be parameters to the test, I would think, rather than new test cases. Make a new struct similar to what Austin did in his binary identifier fix patch, to keep our code similar in style",
      "range": {
        "startLine": 358,
        "startChar": 0,
        "endLine": 359,
        "endChar": 81
      },
      "revId": "4fc3e7dcf64e49336d2c0f7fb7ef932bf8579d34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "132185e2_7d945bc4",
        "filename": "src/tests/gl_tests/ReadPixelsTest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 360,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-06-30T15:50:48Z",
      "side": 1,
      "message": "nit: comment before every test",
      "range": {
        "startLine": 360,
        "startChar": 0,
        "endLine": 360,
        "endChar": 6
      },
      "revId": "4fc3e7dcf64e49336d2c0f7fb7ef932bf8579d34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "73f6419f_a50d1242",
        "filename": "util/EGLWindow.h",
        "patchSetId": 3
      },
      "lineNbr": 67,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-06-30T15:50:48Z",
      "side": 1,
      "message": "how about setRequireMatchingConfig(bool).. if I read your code correctly the \"if present\" condition is a failure.",
      "range": {
        "startLine": 67,
        "startChar": 9,
        "endLine": 67,
        "endChar": 38
      },
      "revId": "4fc3e7dcf64e49336d2c0f7fb7ef932bf8579d34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}