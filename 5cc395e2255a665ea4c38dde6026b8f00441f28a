{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "55fc0223_b54afc40",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 26,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2024-05-03T21:48:38Z",
      "side": 1,
      "message": "Does https://chromium-review.googlesource.com/c/angle/angle/+/5514948 , from crbug.com/337214693, rely on this CL?",
      "revId": "5cc395e2255a665ea4c38dde6026b8f00441f28a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "13fea923_cf66e609",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 26,
      "author": {
        "id": 1543187
      },
      "writtenOn": "2024-05-03T21:55:08Z",
      "side": 1,
      "message": "That CL doesn\u0027t require this CL to be submitted. And the bug mentioned in this CL is not the root cause of b/337214693.\n\nHowever, that CL increases the chance of blit \u0026 render encoders coexisting hence this bug would become more prominent. I think it could cause incorrect fence signal \u0026 wait in chrome surfacing even more. Hence I would prefer this CL and that CL being submitted together.",
      "parentUuid": "55fc0223_b54afc40",
      "revId": "5cc395e2255a665ea4c38dde6026b8f00441f28a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ea593acf_98b4d8f0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 26,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2024-05-03T22:20:21Z",
      "side": 1,
      "message": "Got it, thanks. Let\u0027s add comments to these bugs pointing at each other to make the association clearer. It\u0027s too bad ANGLE isn\u0027t on Buganizer yet because we can\u0027t make Chromium bugs dependent on ANGLE ones right now.\n\nCan you think of a way to write a test for this change?",
      "parentUuid": "13fea923_cf66e609",
      "revId": "5cc395e2255a665ea4c38dde6026b8f00441f28a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3cd08853_cfbee1c1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2024-05-03T21:48:38Z",
      "side": 1,
      "message": "lgtm\n\nThanks, it\u0027s much clearer to me that this is correct. I also looked at CommandEncoder::endEncoding -\u003e CommandEncoder::reset which calls CommandBuffer::invalidateActiveCommandEncoder which is why this CL fixes the bug.",
      "revId": "5cc395e2255a665ea4c38dde6026b8f00441f28a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}