{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "78fa641f_3285eac5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2021-11-04T21:35:53Z",
      "side": 1,
      "message": "Good job Tim!\n\nI\u0027ve looked at this carefully, and I think this will emulate RGB8 properly with RGBA8.  Thanks for owning this and dealing with all of our input!",
      "revId": "20e66b1d35b5946cc2ce8129b61d317f2faa58aa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c8d58de8_ae18ea63",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 140,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-11-04T20:45:29Z",
      "side": 1,
      "message": "RGBX. Otherwise alpha can get changed and cause surprises.\n\nSince you asked about what test, it should be trivial to write one:\n\nCreate an RGB8 swapchain, draw with a shader that outputs alpha\u003d0.5. Readback and ensure that alpha\u003d1.",
      "range": {
        "startLine": 140,
        "startChar": 46,
        "endLine": 140,
        "endChar": 60
      },
      "revId": "20e66b1d35b5946cc2ce8129b61d317f2faa58aa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0af7b3b1_73eeeae6",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 140,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2021-11-04T21:35:53Z",
      "side": 1,
      "message": "Actually, I see how Tim did this, and it works.  Instead of creating a new RGBX format, he plumbed the intended format down to ImageHelper, which FramebufferVk will pick up and set FramebufferVk::mEmulatedAlphaAttachmentMask the same as it did when GL_RGB8 was always emulated.",
      "parentUuid": "c8d58de8_ae18ea63",
      "range": {
        "startLine": 140,
        "startChar": 46,
        "endLine": 140,
        "endChar": 60
      },
      "revId": "20e66b1d35b5946cc2ce8129b61d317f2faa58aa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a690f673_5a1161ef",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 871,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2021-11-04T21:35:53Z",
      "side": 1,
      "message": "I don\u0027t think we need these TODO comments, as I expect that we\u0027ll always have this need with some device or another.  For devices that don\u0027t need this, DisplayVkAndroid::generateConfigs() can disable the feature flag and we won\u0027t override the nativeFormat.",
      "range": {
        "startLine": 869,
        "startChar": 0,
        "endLine": 871,
        "endChar": 0
      },
      "revId": "20e66b1d35b5946cc2ce8129b61d317f2faa58aa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b6fb14f8_b07d6129",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 1230,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2021-11-04T21:35:53Z",
      "side": 1,
      "message": "Perhaps replace this with a comment to the effect that for devices that don\u0027t support \"swapchain images with VK_FORMAT_R8G8B8_UNORM\", we need to emulate RGB8 with RGBA8",
      "revId": "20e66b1d35b5946cc2ce8129b61d317f2faa58aa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "38f9cc17_90de5bd2",
        "filename": "src/tests/gl_tests/ClearTest.cpp",
        "patchSetId": 10
      },
      "lineNbr": 365,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2021-11-04T21:35:53Z",
      "side": 1,
      "message": "Nit: Add a comment to the effect that even though alpha is \"cleared to\" 0.0f that it will actually be set to 1.0f because GL_RGB8 is always supposed to have alpha\u003d\u003d1.0f",
      "revId": "20e66b1d35b5946cc2ce8129b61d317f2faa58aa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}