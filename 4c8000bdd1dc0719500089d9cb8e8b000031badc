{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e7ea4233_33672eda",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 10,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-01-04T18:31:37Z",
      "side": 1,
      "message": "typo: no",
      "range": {
        "startLine": 10,
        "startChar": 33,
        "endLine": 10,
        "endChar": 36
      },
      "revId": "4c8000bdd1dc0719500089d9cb8e8b000031badc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "13b234a0_c12818cf",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 11,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-01-04T15:17:44Z",
      "side": 1,
      "message": "nit: vertex/tess/geom for clarity",
      "range": {
        "startLine": 11,
        "startChar": 63,
        "endLine": 11,
        "endChar": 68
      },
      "revId": "4c8000bdd1dc0719500089d9cb8e8b000031badc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9901615e_dd31e15e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 11,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-01-04T15:17:44Z",
      "side": 1,
      "message": "nit: fragment",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 11,
        "endChar": 10
      },
      "revId": "4c8000bdd1dc0719500089d9cb8e8b000031badc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "39456a43_c7946373",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 11,
      "author": {
        "id": 1524687
      },
      "writtenOn": "2022-01-05T03:10:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9901615e_dd31e15e",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 11,
        "endChar": 10
      },
      "revId": "4c8000bdd1dc0719500089d9cb8e8b000031badc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "27d75e42_eeb36301",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 11,
      "author": {
        "id": 1524687
      },
      "writtenOn": "2022-01-05T03:10:15Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "13b234a0_c12818cf",
      "range": {
        "startLine": 11,
        "startChar": 63,
        "endLine": 11,
        "endChar": 68
      },
      "revId": "4c8000bdd1dc0719500089d9cb8e8b000031badc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "21703422_12bca57e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 13,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-01-04T15:17:44Z",
      "side": 1,
      "message": "wording suggestion: If we only assign the vkImage layout as writable when running GL executables that have Image Textures, we can specify more precise read-only barriers when running read-only GL executables.",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 13,
        "endChar": 52
      },
      "revId": "4c8000bdd1dc0719500089d9cb8e8b000031badc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f3d461bf_1cde6e31",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 13,
      "author": {
        "id": 1524687
      },
      "writtenOn": "2022-01-05T03:10:15Z",
      "side": 1,
      "message": "Thanks,Jamie. Done.",
      "parentUuid": "21703422_12bca57e",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 13,
        "endChar": 52
      },
      "revId": "4c8000bdd1dc0719500089d9cb8e8b000031badc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "58c69a4d_15afc3db",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1524687
      },
      "writtenOn": "2022-01-04T09:10:36Z",
      "side": 1,
      "message": "Hi Shahbaz,\nI have a new commit to be under review, but I can\u0027t find any button to do DRY RUN before it. Do you know the reason? thanks.",
      "revId": "4c8000bdd1dc0719500089d9cb8e8b000031badc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "03693711_098d2b7a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-01-04T15:17:44Z",
      "side": 1,
      "message": "Nice fix, thanks for the contribution. Shabi or Charlie want to give the second review?",
      "revId": "4c8000bdd1dc0719500089d9cb8e8b000031badc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0f013fed_663264b9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-01-04T15:32:17Z",
      "side": 1,
      "message": "Looks like we have a bug:\n\n[ RUN      ] ComputeShaderTest.DispatchDrawDrawDispatch/ES3_1_Vulkan_SwiftShader\n../../src/tests/test_utils/ANGLETest.cpp:64: Failure\nRendererVk.cpp:649 (DebugUtilsMessenger): [ VUID-VkImageMemoryBarrier-oldLayout-01197 ] Validation Error: [ VUID-VkImageMemoryBarrier-oldLayout-01197 ] Object 0: handle \u003d 0x564e4d1d0310, type \u003d VK_OBJECT_TYPE_COMMAND_BUFFER; | MessageID \u003d 0x124ffb34 | vkCmdPipelineBarrier(): .pImageMemoryBarriers[0] VkImage 0x3120000000312[] cannot transition the layout of aspect\u003d1 level\u003d0 layer\u003d0 from VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL when the previous known layout is VK_IMAGE_LAYOUT_GENERAL. The Vulkan spec states: If srcQueueFamilyIndex and dstQueueFamilyIndex define a queue family ownership transfer or oldLayout and newLayout define an image layout transition, oldLayout must be VK_IMAGE_LAYOUT_UNDEFINED or the current layout of the image subresources affected by the barrier (https://www.khronos.org/registry/vulkan/specs/1.2-extensions/html/vkspec.html#VUID-VkImageMemoryBarrier-oldLayout-01197)\n                            Object: 0x564e4d1d0310 (type \u003d Command Buffer(6))\n",
      "revId": "4c8000bdd1dc0719500089d9cb8e8b000031badc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "70ab2c67_262def2c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-01-04T18:31:37Z",
      "side": 1,
      "message": "Nice and easy fix, but looks like there\u0027s a bug when switching between compute and graphics (see bot failures) that needs to be sorted out first.",
      "revId": "4c8000bdd1dc0719500089d9cb8e8b000031badc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "186db55c_e4c09454",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2022-01-04T21:40:57Z",
      "side": 1,
      "message": "I think the better fix is to change \"hasBeenBoundAsImage\" to \"isBoundAsImage\". My reading is that right now a texture is marked as hasBeenBoundAsImage once it been used as image and will stay true forever. If you change mHasBeenBoundAsImage from boolean to int32_t and increment when it is used as image and decrement when it unbound, (you can do all this in the State::setImageUnit function), then  hasBeenBoundAsImage() will return true only when it is currently bound to any image unit, and you can rename it to isBoundAsImage to reflect exact what it is tracking.",
      "revId": "4c8000bdd1dc0719500089d9cb8e8b000031badc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ac4dc281_bb815da2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-01-05T03:05:18Z",
      "side": 1,
      "message": "I thought the texture _is_ actually currently bound as an image unit, just that the program doesn\u0027t use it that way.",
      "parentUuid": "186db55c_e4c09454",
      "revId": "4c8000bdd1dc0719500089d9cb8e8b000031badc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eb9c607e_9492cdf4",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1638,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-01-04T15:17:44Z",
      "side": 1,
      "message": "nit: executableHasImages for clarity",
      "range": {
        "startLine": 1638,
        "startChar": 15,
        "endLine": 1638,
        "endChar": 48
      },
      "revId": "4c8000bdd1dc0719500089d9cb8e8b000031badc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b5617821_bd8da18b",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1638,
      "author": {
        "id": 1524687
      },
      "writtenOn": "2022-01-05T03:10:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "eb9c607e_9492cdf4",
      "range": {
        "startLine": 1638,
        "startChar": 15,
        "endLine": 1638,
        "endChar": 48
      },
      "revId": "4c8000bdd1dc0719500089d9cb8e8b000031badc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1bc60b66_cb6e7a50",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1678,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-01-04T18:31:37Z",
      "side": 1,
      "message": "This should be unnecessary. If it _is_, then there\u0027s a bug because compute is not taken into account.",
      "range": {
        "startLine": 1678,
        "startChar": 40,
        "endLine": 1678,
        "endChar": 83
      },
      "revId": "4c8000bdd1dc0719500089d9cb8e8b000031badc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0235f448_30dc4240",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1689,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-01-04T18:31:37Z",
      "side": 1,
      "message": "You can simplify the logic here as such:\n\n    if (hasBeenBoundAsImage \u0026\u0026 hasImages)\n    {\n        ... ShaderWrite ...\n    }\n    else\n    {\n        ...\n    }",
      "range": {
        "startLine": 1680,
        "startChar": 0,
        "endLine": 1689,
        "endChar": 72
      },
      "revId": "4c8000bdd1dc0719500089d9cb8e8b000031badc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}