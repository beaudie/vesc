{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4fde4128_4fe19297",
        "filename": "src/tests/gl_tests/DepthStencilTest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 325,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-04-12T14:13:56Z",
      "side": 1,
      "message": "I\u0027m not sure but I think this is timing out the tests. Maybe try doing one pixel instead of the whole region? Or using an offscreen FBO with a smaller size.\n\nAlso seems to have a different issue on AMD.",
      "range": {
        "startLine": 322,
        "startChar": 0,
        "endLine": 325,
        "endChar": 5
      },
      "revId": "a309f1c2f243513417f0f448f912343e670a57c2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8d960b01_5765b24b",
        "filename": "src/tests/gl_tests/DepthStencilTest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 325,
      "author": {
        "id": 1491687
      },
      "writtenOn": "2021-04-13T13:05:25Z",
      "side": 1,
      "message": "I fixed the timeout issue by just reading one pixel. Although the test is failing due to different expected values.\nI could reproduce this on AMD/Mesa GL vs Vulkan. The unused bit of uint32_t differed, where 24 bits matched. GL had the most significant byte in the unused byte, Vulkan had the least significant. My fix to write a 0 to the unused byte before comparision fixed it for me, but apparently not for many of the bots.\n\nCould it be an issue that I am fetching the pixel at (0, 0)? Maybe I should try the center.",
      "parentUuid": "4fde4128_4fe19297",
      "range": {
        "startLine": 322,
        "startChar": 0,
        "endLine": 325,
        "endChar": 5
      },
      "revId": "a309f1c2f243513417f0f448f912343e670a57c2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad644215_aeacc4e3",
        "filename": "src/tests/gl_tests/DepthStencilTest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 325,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-04-13T13:38:50Z",
      "side": 1,
      "message": "I\u0027ve never had problems with (0,0). I\u0027d suspect it\u0027s some undefined behaviour. Maybe the depth values aren\u0027t scaled like you expect?",
      "parentUuid": "8d960b01_5765b24b",
      "range": {
        "startLine": 322,
        "startChar": 0,
        "endLine": 325,
        "endChar": 5
      },
      "revId": "a309f1c2f243513417f0f448f912343e670a57c2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9fdcfd03_7b665d32",
        "filename": "src/tests/gl_tests/DepthStencilTest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 325,
      "author": {
        "id": 1491687
      },
      "writtenOn": "2021-04-14T13:48:15Z",
      "side": 1,
      "message": "The values seem to be a bit off between Mesa/Intel/Vulkan and Mesa/AMD/Vulkan, as well as previously mentioned between GL and Vk. The error threshold of 256 is enough to cover these cases, I explained them in a comment. I suppose the value is tolerable considering the range.\n\nThe remaining failures were on D3D11 and Metal, where the depth values don\u0027t seem to change at all when clearing or drawing. I reported a bug and skipped the test for these back ends.\nhttps://bugs.chromium.org/p/angleproject/issues/detail?id\u003d5863\n\nUnfortunately the test still fails on Android/Pixel 2 with a GL error:\nMessage: GL_READ_FRAMEBUFFER_BINDING is nonzero and the read buffer selects an attachment that has no image attached.\n\nI look into reproducing this locally, didn\u0027t run the test on Android yet.",
      "parentUuid": "ad644215_aeacc4e3",
      "range": {
        "startLine": 322,
        "startChar": 0,
        "endLine": 325,
        "endChar": 5
      },
      "revId": "a309f1c2f243513417f0f448f912343e670a57c2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}