{
  "comments": [
    {
      "key": {
        "uuid": "62205b0f_80669c26",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-06-11T12:12:38Z",
      "side": 1,
      "message": "could you update this to be \"Implement copyBufferSubData\"? Since that\u0027s what you\u0027re doing in this CL.",
      "range": {
        "startLine": 7,
        "startChar": 8,
        "endLine": 7,
        "endChar": 39
      },
      "revId": "21a7ce9d6e3d1f9d55f0a10fc6ba72b366a7fb7e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3e1a51b6_836181c7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2019-06-12T19:46:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "62205b0f_80669c26",
      "range": {
        "startLine": 7,
        "startChar": 8,
        "endLine": 7,
        "endChar": 39
      },
      "revId": "21a7ce9d6e3d1f9d55f0a10fc6ba72b366a7fb7e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d9f23c45_8300e45c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-06-12T19:49:13Z",
      "side": 1,
      "message": "Maybe forgot to upload latest CL?",
      "parentUuid": "3e1a51b6_836181c7",
      "range": {
        "startLine": 7,
        "startChar": 8,
        "endLine": 7,
        "endChar": 39
      },
      "revId": "21a7ce9d6e3d1f9d55f0a10fc6ba72b366a7fb7e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fe0080d9_1b077e00",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 11,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-06-11T12:12:38Z",
      "side": 1,
      "message": "could you update this to be 3194?",
      "range": {
        "startLine": 11,
        "startChar": 18,
        "endLine": 11,
        "endChar": 22
      },
      "revId": "21a7ce9d6e3d1f9d55f0a10fc6ba72b366a7fb7e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f484f200_d7d53051",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 11,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2019-06-12T19:46:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fe0080d9_1b077e00",
      "range": {
        "startLine": 11,
        "startChar": 18,
        "endLine": 11,
        "endChar": 22
      },
      "revId": "21a7ce9d6e3d1f9d55f0a10fc6ba72b366a7fb7e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4363ba20_2015b87b",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 169,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2019-06-11T02:52:39Z",
      "side": 1,
      "message": "Super hacky pointer comparison. Presumably there\u0027s a handle or something I can check instead.",
      "revId": "21a7ce9d6e3d1f9d55f0a10fc6ba72b366a7fb7e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e803dbce_3e09221e",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 169,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-06-11T12:12:38Z",
      "side": 1,
      "message": "My suggestion is just to put the check in CommandGraphResource::addReadDependency. It\u0027s a bit hacky. We could update the command graph APIs at some point. But it would get you going. Maybe Shabi has a better solution.\n\nYou still need to call onRead even if source \u003d\u003d dest I think. To get the right access masks in the barrier.\n\nAlso onRead and onWrite should probably be called before copyFromBuffer.",
      "parentUuid": "4363ba20_2015b87b",
      "revId": "21a7ce9d6e3d1f9d55f0a10fc6ba72b366a7fb7e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "583cb0f1_2a9726da",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 169,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-06-11T14:35:32Z",
      "side": 1,
      "message": "I\u0027m revamping the graph API to be simpler and address these cases at the same time. Would you be able to wait a few days?",
      "parentUuid": "e803dbce_3e09221e",
      "revId": "21a7ce9d6e3d1f9d55f0a10fc6ba72b366a7fb7e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7fb60d39_1eed1e1d",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 169,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-06-11T14:37:24Z",
      "side": 1,
      "message": "So long as your revamp can be equally as fast or faster that sounds great! But landing a temporary solution to unblock Tim would be helpful. A few days is on the long side to wait.",
      "parentUuid": "583cb0f1_2a9726da",
      "revId": "21a7ce9d6e3d1f9d55f0a10fc6ba72b366a7fb7e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f61fec5_d745a577",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 169,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-06-11T14:48:41Z",
      "side": 1,
      "message": "The check here avoids a same-object dependency, which is fine by me. In that case, Tim can insert a memory barrier directly in the command buffer prior to copy (instead of using onRead/onWrite, though they are still needed for copy between objects).\n\n---\n\nSo far, it looks like my work will end up generating fewer nodes and edges. There could be a small performance gain, and likely some memory gain.",
      "parentUuid": "7fb60d39_1eed1e1d",
      "revId": "21a7ce9d6e3d1f9d55f0a10fc6ba72b366a7fb7e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "288701b4_22a80520",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 169,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-06-11T14:57:34Z",
      "side": 1,
      "message": "That\u0027s good. However we also need to update the command graph serial. I\u0027m still okay with my proposed workaround.\n\nBTW I was referring to CPU overhead. Having fewer graph edges is good too.",
      "parentUuid": "9f61fec5_d745a577",
      "revId": "21a7ce9d6e3d1f9d55f0a10fc6ba72b366a7fb7e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "27e94dee_398ef1f9",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 169,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2019-06-12T19:46:43Z",
      "side": 1,
      "message": "There isn\u0027t a huge rush to get this change in, so if waiting a few days saves some effort and we get a better CL, I\u0027m fine waiting.   There\u0027s also a lot to go read about based on these comments, so it\u0027ll take some time to play around with things anyway.",
      "parentUuid": "288701b4_22a80520",
      "revId": "21a7ce9d6e3d1f9d55f0a10fc6ba72b366a7fb7e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5f3e9b9f_f424f2ea",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 175,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-06-11T12:12:38Z",
      "side": 1,
      "message": "You should remove this. Will kill perf. If there\u0027s a bug we should try to fix it without a finish.",
      "range": {
        "startLine": 175,
        "startChar": 0,
        "endLine": 175,
        "endChar": 42
      },
      "revId": "21a7ce9d6e3d1f9d55f0a10fc6ba72b366a7fb7e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f7d11759_6c167967",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 175,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2019-06-12T19:46:43Z",
      "side": 1,
      "message": "The dEQP.GLES3/functional_buffer* tests can pass without this, however the angle_end2end_tests BufferDataTestES3.BufferResizing/ES3_Vulkan fails because the vkCmdCopyBuffer() is never executed.   The test itself seems straightforward, so I don\u0027t think it\u0027s bad.\n\nAny ideas on what to try next?",
      "parentUuid": "5f3e9b9f_f424f2ea",
      "range": {
        "startLine": 175,
        "startChar": 0,
        "endLine": 175,
        "endChar": 42
      },
      "revId": "21a7ce9d6e3d1f9d55f0a10fc6ba72b366a7fb7e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aeb84ec6_b5fdce44",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 175,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-06-12T19:49:13Z",
      "side": 1,
      "message": "Likely glMapBufferRange isn\u0027t calling finish when it should be? I imagine you would need to figure out why the command isn\u0027t being flushed to the GPU.",
      "parentUuid": "f7d11759_6c167967",
      "range": {
        "startLine": 175,
        "startChar": 0,
        "endLine": 175,
        "endChar": 42
      },
      "revId": "21a7ce9d6e3d1f9d55f0a10fc6ba72b366a7fb7e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3cfbd5d3_26e0c9a6",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 175,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2019-06-13T20:57:18Z",
      "side": 1,
      "message": "Ok, chatted with Courtney to help clarify why a map would be related to the copy, rather than the copy being issued being enough to require the work to be kicked off to the GPU.   A glCopyBufferSubData() can be issued without any commands following it, like in BufferDataTestES3.NoBufferInitDataCopyBug/ES3_Vulkan:\n\nTEST_P(BufferDataTestES3, NoBufferInitDataCopyBug)\n{\n    constexpr GLsizei size \u003d 64;\n\n    GLBuffer sourceBuffer;\n    glBindBuffer(GL_COPY_READ_BUFFER, sourceBuffer);\n    glBufferData(GL_COPY_READ_BUFFER, size, nullptr, GL_STATIC_DRAW);\n\n    GLBuffer destBuffer;\n    glBindBuffer(GL_ARRAY_BUFFER, destBuffer);\n    glBufferData(GL_ARRAY_BUFFER, size, nullptr, GL_STATIC_DRAW);\n\n    glCopyBufferSubData(GL_COPY_READ_BUFFER, GL_ARRAY_BUFFER, 0, 0, size);\n    ASSERT_GL_NO_ERROR();\n}\n\n\nIn this case, we don\u0027t actually want to immediately submit the work and drain the GPU when the command is issued, since we could unnecessarily stall the GPU for data that may never accessed by the CPU (or even at all).   Instead, the finish() calls should be made in the BufferVk::mapImpl() and BufferVk::mapRange() calls, since those are the cases where it\u0027s required that all of the GPU work is done and flushed to memory so that the CPU can see the results.",
      "parentUuid": "aeb84ec6_b5fdce44",
      "range": {
        "startLine": 175,
        "startChar": 0,
        "endLine": 175,
        "endChar": 42
      },
      "revId": "21a7ce9d6e3d1f9d55f0a10fc6ba72b366a7fb7e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}