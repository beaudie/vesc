{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "48e32bb9_f536e5e0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-01-09T03:11:40Z",
      "side": 1,
      "message": "I took a look at the next change, and I don\u0027t quite follow why you need this for EXT_sRGB_write_control. When sRGB write control mode changes, the render pass is broken anyway, so you might as well create a new \"normal\" framebuffer.",
      "revId": "270c322ef3de9b63cb9ea445b303c865f02a6e7b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3751082c_c48cc13c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-01-11T19:13:41Z",
      "side": 1,
      "message": "Even if the render pass is broken, we still need to be able to render onto a texture with a different colorspace from the texture\u0027s base format. There is a format reinterpretation step involved there that this feature implements.\nIf we did not have VK_KHR_imageless_framebuffer, we could not render onto an sRGB texture with a linear colorspace override at all, broken renderpass or not.\n\nsRGB_override and sRGB_decode do not interact with this, since those extensions are only for sampling, wheras EXT_sRGB_write_control is for rendering.",
      "parentUuid": "48e32bb9_f536e5e0",
      "revId": "270c322ef3de9b63cb9ea445b303c865f02a6e7b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "942e9cd9_d05eadce",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-01-11T19:32:03Z",
      "side": 1,
      "message": "I understand the point regarding the color space change. My question is, why not create a a VkFramebuffer as you normally would, with the image views that use a different color space? What benefit do you get from specifying the image views at a later time, instead of at VkFramebuffer creation time?",
      "parentUuid": "3751082c_c48cc13c",
      "revId": "270c322ef3de9b63cb9ea445b303c865f02a6e7b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cdac674a_d9213ffe",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-01-12T18:40:54Z",
      "side": 1,
      "message": "shabi, the validation error that used to appear no longer does. you seem to be correct that imageless extension is not needed. Will confirm and upload new patchset accordingly",
      "parentUuid": "942e9cd9_d05eadce",
      "revId": "270c322ef3de9b63cb9ea445b303c865f02a6e7b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4af6329c_319cd142",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-01-12T18:56:49Z",
      "side": 1,
      "message": "Excellent, one fewer complexity to track!\n\nThere\u0027s something useful here though nevertheless. If we could always use imageless framebuffers, our vk framebuffer cache could go away. Something to remember if we ever find that an interesting optimization.",
      "parentUuid": "cdac674a_d9213ffe",
      "revId": "270c322ef3de9b63cb9ea445b303c865f02a6e7b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6093a67b_9292a7bd",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 51,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-01-09T03:11:40Z",
      "side": 1,
      "message": "`x ? y : true` is `!x || y`.",
      "range": {
        "startLine": 50,
        "startChar": 11,
        "endLine": 51,
        "endChar": 82
      },
      "revId": "270c322ef3de9b63cb9ea445b303c865f02a6e7b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e9223773_f5bd6ca5",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 2054,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-01-09T03:11:40Z",
      "side": 1,
      "message": "No need for extension check. mDeviceImagelessFramebufferProperties is initialized to {} and never modified if the extension doesn\u0027t exist.",
      "range": {
        "startLine": 2054,
        "startChar": 8,
        "endLine": 2054,
        "endChar": 90
      },
      "revId": "270c322ef3de9b63cb9ea445b303c865f02a6e7b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a6c2617_7b8eb3ce",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.h",
        "patchSetId": 4
      },
      "lineNbr": 425,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-01-09T03:11:40Z",
      "side": 1,
      "message": "nit: Features",
      "range": {
        "startLine": 425,
        "startChar": 79,
        "endLine": 425,
        "endChar": 89
      },
      "revId": "270c322ef3de9b63cb9ea445b303c865f02a6e7b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c95a3f3c_301251e8",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 4
      },
      "lineNbr": 1243,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-01-09T03:11:40Z",
      "side": 1,
      "message": "Can\u0027t store `FramebufferVk *` here:\n\n1. You don\u0027t want to use locks when this command buffer is passed to a thread for processing\n2. It may be possible that it\u0027s deleted before the render pass is closed\n\nInstead you can store a",
      "revId": "270c322ef3de9b63cb9ea445b303c865f02a6e7b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0908c72c_ae6626e9",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 4
      },
      "lineNbr": 1243,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-01-11T17:59:21Z",
      "side": 1,
      "message": "shabi, your comment seemed to have been cut-off. can you repost?",
      "parentUuid": "c95a3f3c_301251e8",
      "revId": "270c322ef3de9b63cb9ea445b303c865f02a6e7b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d211c301_a7c1e3f1",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 4
      },
      "lineNbr": 1243,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-01-11T18:04:10Z",
      "side": 1,
      "message": "Hmm... I probably changed my mind with whatever I was about to suggest, and asked the question regarding the necessity of this CL instead.",
      "parentUuid": "0908c72c_ae6626e9",
      "revId": "270c322ef3de9b63cb9ea445b303c865f02a6e7b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "07a09110_a722a2f1",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 4
      },
      "lineNbr": 1243,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-01-11T19:13:41Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "d211c301_a7c1e3f1",
      "revId": "270c322ef3de9b63cb9ea445b303c865f02a6e7b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}