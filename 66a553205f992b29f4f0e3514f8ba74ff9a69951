{
  "comments": [
    {
      "key": {
        "uuid": "7f137b66_e60309e1",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 485,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-09-24T17:58:27Z",
      "side": 1,
      "message": "how about updateStreamedAttribs?",
      "range": {
        "startLine": 485,
        "startChar": 32,
        "endLine": 485,
        "endChar": 45
      },
      "revId": "66a553205f992b29f4f0e3514f8ba74ff9a69951",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b54d448c_36514b56",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 485,
      "author": {
        "id": 1256245
      },
      "writtenOn": "2019-09-25T15:01:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7f137b66_e60309e1",
      "range": {
        "startLine": 485,
        "startChar": 32,
        "endLine": 485,
        "endChar": 45
      },
      "revId": "66a553205f992b29f4f0e3514f8ba74ff9a69951",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "923b2690_77bdcaf8",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 2603,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-09-24T17:58:27Z",
      "side": 1,
      "message": "do you know under what circumstances mVertexArray \u003d\u003d nullptr? Pretty sure on any draw call we should have it valid. Maybe we don\u0027t need this function at all?",
      "range": {
        "startLine": 2603,
        "startChar": 12,
        "endLine": 2603,
        "endChar": 25
      },
      "revId": "66a553205f992b29f4f0e3514f8ba74ff9a69951",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a3e90e6_bdb73abe",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 2603,
      "author": {
        "id": 1256245
      },
      "writtenOn": "2019-09-24T22:38:42Z",
      "side": 1,
      "message": "I don\u0027t remember the exact tests, but there were some dEQP tests where this was true which led to me adding this function to handle mVertexArray \u003d\u003d nullptr case.",
      "parentUuid": "923b2690_77bdcaf8",
      "range": {
        "startLine": 2603,
        "startChar": 12,
        "endLine": 2603,
        "endChar": 25
      },
      "revId": "66a553205f992b29f4f0e3514f8ba74ff9a69951",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fd9a0bbb_990524fe",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 2603,
      "author": {
        "id": 1256245
      },
      "writtenOn": "2019-09-25T15:01:58Z",
      "side": 1,
      "message": "Patch 6 of this series definitely hit some of those cases.\nClearTest.ChangeFramebufferAttachmentFromRGBAtoRGB/ES2_Vulkan appears to be one such test.\nAlso dEQP.GLES2/functional_color_clear_long_masked_rgba definitely hits that case.",
      "parentUuid": "2a3e90e6_bdb73abe",
      "range": {
        "startLine": 2603,
        "startChar": 12,
        "endLine": 2603,
        "endChar": 25
      },
      "revId": "66a553205f992b29f4f0e3514f8ba74ff9a69951",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a72e615_63e95353",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 2603,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-09-25T19:14:18Z",
      "side": 1,
      "message": "It doesn\u0027t look like you call this anywhere. Can you remove it?",
      "parentUuid": "fd9a0bbb_990524fe",
      "range": {
        "startLine": 2603,
        "startChar": 12,
        "endLine": 2603,
        "endChar": 25
      },
      "revId": "66a553205f992b29f4f0e3514f8ba74ff9a69951",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "23e0aa07_67c9a02e",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 1055,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-09-24T17:58:27Z",
      "side": 1,
      "message": "nit: GraphicsPipelineDesc",
      "range": {
        "startLine": 1055,
        "startChar": 42,
        "endLine": 1055,
        "endChar": 46
      },
      "revId": "66a553205f992b29f4f0e3514f8ba74ff9a69951",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bf4f8e34_a8e5c0d5",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 1055,
      "author": {
        "id": 1256245
      },
      "writtenOn": "2019-09-24T22:38:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "23e0aa07_67c9a02e",
      "range": {
        "startLine": 1055,
        "startChar": 42,
        "endLine": 1055,
        "endChar": 46
      },
      "revId": "66a553205f992b29f4f0e3514f8ba74ff9a69951",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0cb63db4_f19e1993",
        "filename": "src/libANGLE/renderer/vulkan/VertexArrayVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 51,
      "author": {
        "id": 1256245
      },
      "writtenOn": "2019-09-23T17:03:12Z",
      "side": 1,
      "message": "I templated this as a perf opt so that in non-emulated case the additional branch is avoided. Can change this to no be templated and just use \"replicateCount !\u003d 1\" to decide if special copy path should be taken.",
      "revId": "66a553205f992b29f4f0e3514f8ba74ff9a69951",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "29d7f651_ba65e65b",
        "filename": "src/libANGLE/renderer/vulkan/VertexArrayVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 51,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-09-24T17:58:27Z",
      "side": 1,
      "message": "You can probably de-template without any real performance const. The time will be dominated by the memcpy time.",
      "parentUuid": "0cb63db4_f19e1993",
      "revId": "66a553205f992b29f4f0e3514f8ba74ff9a69951",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e84c173d_2cea7406",
        "filename": "src/libANGLE/renderer/vulkan/VertexArrayVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 51,
      "author": {
        "id": 1256245
      },
      "writtenOn": "2019-09-24T22:38:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "29d7f651_ba65e65b",
      "revId": "66a553205f992b29f4f0e3514f8ba74ff9a69951",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a6633362_c05c6e0a",
        "filename": "src/libANGLE/renderer/vulkan/VertexArrayVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 62,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-09-24T17:58:27Z",
      "side": 1,
      "message": "Could you try to avoid default arguments in ANGLE code? It tends to add code complexity. The Google guide allows them but for ANGLE we prefer to avoid them. \n\nSee https://chromium.googlesource.com/angle/angle/+/master/doc/CodingStandard.md#other-c_features",
      "range": {
        "startLine": 62,
        "startChar": 32,
        "endLine": 62,
        "endChar": 58
      },
      "revId": "66a553205f992b29f4f0e3514f8ba74ff9a69951",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "78a56e94_ef7d33ac",
        "filename": "src/libANGLE/renderer/vulkan/VertexArrayVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 62,
      "author": {
        "id": 1256245
      },
      "writtenOn": "2019-09-24T22:38:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a6633362_c05c6e0a",
      "range": {
        "startLine": 62,
        "startChar": 32,
        "endLine": 62,
        "endChar": 58
      },
      "revId": "66a553205f992b29f4f0e3514f8ba74ff9a69951",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "54bed2c2_a00870d0",
        "filename": "src/libANGLE/renderer/vulkan/VertexArrayVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 77,
      "author": {
        "id": 1256245
      },
      "writtenOn": "2019-09-23T17:03:12Z",
      "side": 1,
      "message": "This seems to be working. There are a number of variants of vertexLoadFunctions so I was suspicious if this direct approach would have some issues with various vtx formats, but on everything we\u0027re testing, at least, it\u0027s working.",
      "revId": "66a553205f992b29f4f0e3514f8ba74ff9a69951",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c112b956_2870720f",
        "filename": "src/libANGLE/renderer/vulkan/VertexArrayVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 77,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2019-09-23T21:36:30Z",
      "side": 1,
      "message": "This should probably be updated to prevent memory overwrites before they occur:\n\nwhile ((dataCopied + (stride * replicateCount)) \u003c bytesToAllocate)",
      "revId": "66a553205f992b29f4f0e3514f8ba74ff9a69951",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6ff2663c_c4d65fa4",
        "filename": "src/libANGLE/renderer/vulkan/VertexArrayVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 77,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-09-24T17:58:27Z",
      "side": 1,
      "message": "You can probably reproduce a bug using GL_FIXED. Or other formats listed with buffer formats in \"fallbacks\" in vk_format_map.json. Probably should fix this before landing.",
      "parentUuid": "54bed2c2_a00870d0",
      "revId": "66a553205f992b29f4f0e3514f8ba74ff9a69951",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "443b68d9_1fc70521",
        "filename": "src/libANGLE/renderer/vulkan/VertexArrayVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 77,
      "author": {
        "id": 1256245
      },
      "writtenOn": "2019-09-24T22:38:42Z",
      "side": 1,
      "message": "Refactored this loop",
      "parentUuid": "c112b956_2870720f",
      "revId": "66a553205f992b29f4f0e3514f8ba74ff9a69951",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4aee4330_c534b2cb",
        "filename": "src/libANGLE/renderer/vulkan/VertexArrayVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 77,
      "author": {
        "id": 1256245
      },
      "writtenOn": "2019-09-24T22:38:42Z",
      "side": 1,
      "message": "The matrix tests were hitting this case, updated copy to use convert function 1 element at a time.",
      "parentUuid": "6ff2663c_c4d65fa4",
      "revId": "66a553205f992b29f4f0e3514f8ba74ff9a69951",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d199716c_f55dfcb9",
        "filename": "src/libANGLE/renderer/vulkan/VertexArrayVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 79,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2019-09-23T21:36:30Z",
      "side": 1,
      "message": "I\u0027m not sure this piece is necessary, but if you want to keep it in here, I suggest updating it to also prevent memory overwrites:\n\n((dataCopied + stride) \u003c bytesToAllocate)",
      "range": {
        "startLine": 79,
        "startChar": 57,
        "endLine": 79,
        "endChar": 87
      },
      "revId": "66a553205f992b29f4f0e3514f8ba74ff9a69951",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "072ef142_c2265d22",
        "filename": "src/libANGLE/renderer/vulkan/VertexArrayVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 79,
      "author": {
        "id": 1256245
      },
      "writtenOn": "2019-09-24T22:38:42Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "d199716c_f55dfcb9",
      "range": {
        "startLine": 79,
        "startChar": 57,
        "endLine": 79,
        "endChar": 87
      },
      "revId": "66a553205f992b29f4f0e3514f8ba74ff9a69951",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3261f9c4_d6407b23",
        "filename": "src/libANGLE/renderer/vulkan/VertexArrayVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 81,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2019-09-23T21:36:30Z",
      "side": 1,
      "message": "Lots of little memcpy\u0027s aren\u0027t great.   Is there a vectorized version of this we could make?",
      "revId": "66a553205f992b29f4f0e3514f8ba74ff9a69951",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8816f54f_3e900449",
        "filename": "src/libANGLE/renderer/vulkan/VertexArrayVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 81,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-09-24T17:58:27Z",
      "side": 1,
      "message": "Might need to call the vertex convert function with one element multiple times. Or one time, then replicate it. I think performance won\u0027t be a real goal for this code though. We can implement a faster GPU conversion path at some point if necessary. But these high divisors are probably pretty rare. Hence why they were removed from Vulkan.",
      "parentUuid": "3261f9c4_d6407b23",
      "revId": "66a553205f992b29f4f0e3514f8ba74ff9a69951",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3957bea0_da770034",
        "filename": "src/libANGLE/renderer/vulkan/VertexArrayVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 81,
      "author": {
        "id": 1256245
      },
      "writtenOn": "2019-09-24T22:38:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8816f54f_3e900449",
      "revId": "66a553205f992b29f4f0e3514f8ba74ff9a69951",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "80770163_e35cbfb8",
        "filename": "src/libANGLE/renderer/vulkan/VertexArrayVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 121,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-09-24T17:58:27Z",
      "side": 1,
      "message": "nit: unnecessary, you can omit this.",
      "range": {
        "startLine": 121,
        "startChar": 6,
        "endLine": 121,
        "endChar": 34
      },
      "revId": "66a553205f992b29f4f0e3514f8ba74ff9a69951",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d5231918_57d9f236",
        "filename": "src/libANGLE/renderer/vulkan/VertexArrayVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 121,
      "author": {
        "id": 1256245
      },
      "writtenOn": "2019-09-24T22:38:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "80770163_e35cbfb8",
      "range": {
        "startLine": 121,
        "startChar": 6,
        "endLine": 121,
        "endChar": 34
      },
      "revId": "66a553205f992b29f4f0e3514f8ba74ff9a69951",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f598df8_5647589d",
        "filename": "src/libANGLE/renderer/vulkan/VertexArrayVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 453,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2019-09-23T21:36:30Z",
      "side": 1,
      "message": "I think this would look better as:\nmEmulateAttribDivisorMask.set(attribIndex);\n\nand then in the else case:\nmEmulateAttribDivisorMask.reset(attribIndex);",
      "revId": "66a553205f992b29f4f0e3514f8ba74ff9a69951",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ace246e_322c9cbc",
        "filename": "src/libANGLE/renderer/vulkan/VertexArrayVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 453,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-09-24T17:58:27Z",
      "side": 1,
      "message": "better yet:\n\nmEmulateAttribDivisorMask.set(attribIndex, binding.getDivisor() \u003e renderer-\u003egetMax...)\n\nI suggest you also flag attributes that have \"client\" data and use a single mask for both.",
      "parentUuid": "7f598df8_5647589d",
      "revId": "66a553205f992b29f4f0e3514f8ba74ff9a69951",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d136260a_604b5c35",
        "filename": "src/libANGLE/renderer/vulkan/VertexArrayVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 453,
      "author": {
        "id": 1256245
      },
      "writtenOn": "2019-09-25T15:01:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3ace246e_322c9cbc",
      "revId": "66a553205f992b29f4f0e3514f8ba74ff9a69951",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7bdeb12d_db4fab86",
        "filename": "src/libANGLE/renderer/vulkan/VertexArrayVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 578,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2019-09-23T21:36:30Z",
      "side": 1,
      "message": "What is \u0027\u0026emulatedBufferedAttribs\u0027 actually a reference to that\u0027s holding the result you\u0027re calculating?   I would have expected this to need to be a standalone gl::AttributesMask.",
      "revId": "66a553205f992b29f4f0e3514f8ba74ff9a69951",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "04824c5a_b68473e0",
        "filename": "src/libANGLE/renderer/vulkan/VertexArrayVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 578,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-09-24T17:58:27Z",
      "side": 1,
      "message": "The dangling const\u0026 valid (see clientAttribs above) but could just as easily use value assignment. Probably will result in the same assembly.",
      "parentUuid": "7bdeb12d_db4fab86",
      "revId": "66a553205f992b29f4f0e3514f8ba74ff9a69951",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1f02c8f5_f349c852",
        "filename": "src/libANGLE/renderer/vulkan/VertexArrayVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 578,
      "author": {
        "id": 1256245
      },
      "writtenOn": "2019-09-24T22:38:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "04824c5a_b68473e0",
      "revId": "66a553205f992b29f4f0e3514f8ba74ff9a69951",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a8fc6e3c_9d6d2e3f",
        "filename": "src/libANGLE/renderer/vulkan/VertexArrayVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 613,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-09-24T17:58:27Z",
      "side": 1,
      "message": "here you could check the divisor (assuming the combined mask)",
      "range": {
        "startLine": 613,
        "startChar": 15,
        "endLine": 613,
        "endChar": 55
      },
      "revId": "66a553205f992b29f4f0e3514f8ba74ff9a69951",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "369d377c_6dccb8bb",
        "filename": "src/libANGLE/renderer/vulkan/VertexArrayVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 613,
      "author": {
        "id": 1256245
      },
      "writtenOn": "2019-09-25T15:01:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a8fc6e3c_9d6d2e3f",
      "range": {
        "startLine": 613,
        "startChar": 15,
        "endLine": 613,
        "endChar": 55
      },
      "revId": "66a553205f992b29f4f0e3514f8ba74ff9a69951",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6db194de_5ec2ec2c",
        "filename": "src/libANGLE/renderer/vulkan/VertexArrayVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 616,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-09-24T17:58:27Z",
      "side": 1,
      "message": "I feel like you\u0027re probably better off just checking the properties of the binding than keeping a separate mask. Unless you wanted to move the \"ifs\" out of the for loop and use separate for loops for each category. But probably easier to just check the binding instead.",
      "range": {
        "startLine": 616,
        "startChar": 16,
        "endLine": 616,
        "endChar": 57
      },
      "revId": "66a553205f992b29f4f0e3514f8ba74ff9a69951",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d5c51acf_77dd658e",
        "filename": "src/libANGLE/renderer/vulkan/VertexArrayVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 616,
      "author": {
        "id": 1256245
      },
      "writtenOn": "2019-09-25T15:01:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6db194de_5ec2ec2c",
      "range": {
        "startLine": 616,
        "startChar": 16,
        "endLine": 616,
        "endChar": 57
      },
      "revId": "66a553205f992b29f4f0e3514f8ba74ff9a69951",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "14c56652_c569de91",
        "filename": "src/libANGLE/renderer/vulkan/VertexArrayVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 619,
      "author": {
        "id": 1256245
      },
      "writtenOn": "2019-09-23T17:03:12Z",
      "side": 1,
      "message": "For the buffer case, just need to map the source data and then can follow the same path as client attribs.",
      "revId": "66a553205f992b29f4f0e3514f8ba74ff9a69951",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "489515c6_5c79c607",
        "filename": "src/libANGLE/renderer/vulkan/VertexArrayVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 619,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-09-25T19:14:18Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "14c56652_c569de91",
      "revId": "66a553205f992b29f4f0e3514f8ba74ff9a69951",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87a53d40_6a40e6f9",
        "filename": "src/libANGLE/renderer/vulkan/VertexArrayVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 626,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-09-24T17:58:27Z",
      "side": 1,
      "message": "nit: you can wrap comments to 100 chars.",
      "range": {
        "startLine": 625,
        "startChar": 0,
        "endLine": 626,
        "endChar": 49
      },
      "revId": "66a553205f992b29f4f0e3514f8ba74ff9a69951",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f2a462f6_c22b8def",
        "filename": "src/libANGLE/renderer/vulkan/VertexArrayVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 626,
      "author": {
        "id": 1256245
      },
      "writtenOn": "2019-09-24T22:38:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "87a53d40_6a40e6f9",
      "range": {
        "startLine": 625,
        "startChar": 0,
        "endLine": 626,
        "endChar": 49
      },
      "revId": "66a553205f992b29f4f0e3514f8ba74ff9a69951",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6babf1dd_0d9238b1",
        "filename": "src/libANGLE/renderer/vulkan/VertexArrayVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 634,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-09-24T17:58:27Z",
      "side": 1,
      "message": "nit: bufferVk?",
      "range": {
        "startLine": 634,
        "startChar": 20,
        "endLine": 634,
        "endChar": 56
      },
      "revId": "66a553205f992b29f4f0e3514f8ba74ff9a69951",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9a91a234_42d80198",
        "filename": "src/libANGLE/renderer/vulkan/VertexArrayVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 634,
      "author": {
        "id": 1256245
      },
      "writtenOn": "2019-09-24T22:38:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6babf1dd_0d9238b1",
      "range": {
        "startLine": 634,
        "startChar": 20,
        "endLine": 634,
        "endChar": 56
      },
      "revId": "66a553205f992b29f4f0e3514f8ba74ff9a69951",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "96fd0de8_00d7739a",
        "filename": "src/libANGLE/renderer/vulkan/VertexArrayVk.h",
        "patchSetId": 10
      },
      "lineNbr": 90,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-09-24T17:58:27Z",
      "side": 1,
      "message": "How about we store a combined mask of emulated divisor and client attribs as mStreamingVertexAttribsMask/getStreamingVertexAttribsMask?",
      "range": {
        "startLine": 90,
        "startChar": 30,
        "endLine": 90,
        "endChar": 57
      },
      "revId": "66a553205f992b29f4f0e3514f8ba74ff9a69951",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b4a4dac1_ece8d727",
        "filename": "src/libANGLE/renderer/vulkan/VertexArrayVk.h",
        "patchSetId": 10
      },
      "lineNbr": 90,
      "author": {
        "id": 1256245
      },
      "writtenOn": "2019-09-25T15:01:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "96fd0de8_00d7739a",
      "range": {
        "startLine": 90,
        "startChar": 30,
        "endLine": 90,
        "endChar": 57
      },
      "revId": "66a553205f992b29f4f0e3514f8ba74ff9a69951",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b4b6fb7e_b31a9947",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "patchSetId": 10
      },
      "lineNbr": 662,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-09-24T17:58:27Z",
      "side": 1,
      "message": "should probably do this in updateVertexInput as we had discussed before.",
      "range": {
        "startLine": 661,
        "startChar": 0,
        "endLine": 662,
        "endChar": 97
      },
      "revId": "66a553205f992b29f4f0e3514f8ba74ff9a69951",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b832cb08_10508a5b",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "patchSetId": 10
      },
      "lineNbr": 662,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-09-25T19:14:18Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "b4b6fb7e_b31a9947",
      "range": {
        "startLine": 661,
        "startChar": 0,
        "endLine": 662,
        "endChar": 97
      },
      "revId": "66a553205f992b29f4f0e3514f8ba74ff9a69951",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae0b4cbf_04341a8b",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "patchSetId": 10
      },
      "lineNbr": 877,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-09-24T17:58:27Z",
      "side": 1,
      "message": "I think you need to update this for divisors \u003e max. or you\u0027ll get undefined behaviour/asserts.",
      "range": {
        "startLine": 877,
        "startChar": 4,
        "endLine": 877,
        "endChar": 47
      },
      "revId": "66a553205f992b29f4f0e3514f8ba74ff9a69951",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a875d616_ab0deeb8",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "patchSetId": 10
      },
      "lineNbr": 877,
      "author": {
        "id": 1256245
      },
      "writtenOn": "2019-09-24T22:38:42Z",
      "side": 1,
      "message": "The maxAttribDivisor is now set to 255 so divisors \u003e max will always be flagged as emulated in  VertexArrayVk::syncDirtyAttrib() and have divisor set to 1.",
      "parentUuid": "ae0b4cbf_04341a8b",
      "range": {
        "startLine": 877,
        "startChar": 4,
        "endLine": 877,
        "endChar": 47
      },
      "revId": "66a553205f992b29f4f0e3514f8ba74ff9a69951",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5828aeaf_65f0689d",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "patchSetId": 10
      },
      "lineNbr": 877,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-09-25T19:14:18Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "a875d616_ab0deeb8",
      "range": {
        "startLine": 877,
        "startChar": 4,
        "endLine": 877,
        "endChar": 47
      },
      "revId": "66a553205f992b29f4f0e3514f8ba74ff9a69951",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "281c904b_8feb66e5",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.h",
        "patchSetId": 10
      },
      "lineNbr": 168,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-09-24T17:58:27Z",
      "side": 1,
      "message": "needs a comment update.",
      "range": {
        "startLine": 168,
        "startChar": 4,
        "endLine": 168,
        "endChar": 79
      },
      "revId": "66a553205f992b29f4f0e3514f8ba74ff9a69951",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "381d0295_75d9d218",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.h",
        "patchSetId": 10
      },
      "lineNbr": 168,
      "author": {
        "id": 1256245
      },
      "writtenOn": "2019-09-24T22:38:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "281c904b_8feb66e5",
      "range": {
        "startLine": 168,
        "startChar": 4,
        "endLine": 168,
        "endChar": 79
      },
      "revId": "66a553205f992b29f4f0e3514f8ba74ff9a69951",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "962d4619_68b23be3",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.h",
        "patchSetId": 10
      },
      "lineNbr": 320,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-09-24T17:58:27Z",
      "side": 1,
      "message": "nit: can you revert this?",
      "range": {
        "startLine": 318,
        "startChar": 0,
        "endLine": 320,
        "endChar": 21
      },
      "revId": "66a553205f992b29f4f0e3514f8ba74ff9a69951",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d1e57ab_e263fb13",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.h",
        "patchSetId": 10
      },
      "lineNbr": 320,
      "author": {
        "id": 1256245
      },
      "writtenOn": "2019-09-24T22:38:42Z",
      "side": 1,
      "message": "Before I revert note that I changed the ordering to match the ordering of private members in GraphicsPipelineDesc which made it easier to verify that these sizes aligned when I was initially debugging.\nHappy to revert, though, if you\u0027d still like that.",
      "parentUuid": "962d4619_68b23be3",
      "range": {
        "startLine": 318,
        "startChar": 0,
        "endLine": 320,
        "endChar": 21
      },
      "revId": "66a553205f992b29f4f0e3514f8ba74ff9a69951",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9ff0becd_6151d893",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.h",
        "patchSetId": 10
      },
      "lineNbr": 320,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-09-25T19:14:18Z",
      "side": 1,
      "message": "Ack, you can leave it.",
      "parentUuid": "2d1e57ab_e263fb13",
      "range": {
        "startLine": 318,
        "startChar": 0,
        "endLine": 320,
        "endChar": 21
      },
      "revId": "66a553205f992b29f4f0e3514f8ba74ff9a69951",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "defa57b7_dfb73a8d",
        "filename": "src/tests/deqp_support/deqp_gles3_test_expectations.txt",
        "patchSetId": 10
      },
      "lineNbr": 558,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-09-24T17:58:27Z",
      "side": 1,
      "message": "any idea why these still fail?",
      "range": {
        "startLine": 558,
        "startChar": 52,
        "endLine": 558,
        "endChar": 55
      },
      "revId": "66a553205f992b29f4f0e3514f8ba74ff9a69951",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6e2c2cdb_f12617c5",
        "filename": "src/tests/deqp_support/deqp_gles3_test_expectations.txt",
        "patchSetId": 10
      },
      "lineNbr": 558,
      "author": {
        "id": 1256245
      },
      "writtenOn": "2019-09-24T22:38:42Z",
      "side": 1,
      "message": "Needed to use convert functions, fixed with new copy loop.",
      "parentUuid": "defa57b7_dfb73a8d",
      "range": {
        "startLine": 558,
        "startChar": 52,
        "endLine": 558,
        "endChar": 55
      },
      "revId": "66a553205f992b29f4f0e3514f8ba74ff9a69951",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}