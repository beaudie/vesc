{
  "comments": [
    {
      "key": {
        "uuid": "217a8bd9_c8a1a6c0",
        "filename": "src/common/debug.cpp",
        "patchSetId": 7
      },
      "lineNbr": 131,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2017-02-06T16:08:38Z",
      "side": 1,
      "message": "The destructor feels like an awkward place to put this logic, is there a more explicit way to \"flush\" the message?",
      "range": {
        "startLine": 124,
        "startChar": 4,
        "endLine": 131,
        "endChar": 5
      },
      "revId": "f5fb80d65c41e3edb00ed853461d582a366ff26f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d2af9ace_a7e34a39",
        "filename": "src/libANGLE/renderer/gl/egl/ozone/DisplayOzone.cpp",
        "patchSetId": 7
      },
      "lineNbr": 589,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-02-06T16:17:24Z",
      "side": 1,
      "message": "I\u0027m not sure I really follow ... in all the other code in ANGLE the policy we follow is .. if an OS call of any kind can generate an error, we propagate this internal error up through the layers all the way to the GL API as INVALID_OP or OOM. My thinking is we can\u0027t 100% guarantee success of the shader compilations in the event of OS internal error, device reset, etc.\n\nAnyway it\u0027s a pretty minor point, so still LGTM.",
      "range": {
        "startLine": 587,
        "startChar": 8,
        "endLine": 589,
        "endChar": 64
      },
      "revId": "f5fb80d65c41e3edb00ed853461d582a366ff26f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6f217b7_fe021d6b",
        "filename": "src/libANGLE/renderer/gl/egl/ozone/DisplayOzone.cpp",
        "patchSetId": 7
      },
      "lineNbr": 589,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2017-02-06T18:25:15Z",
      "side": 1,
      "message": "I see. Yes, that policy does make sense. This code is part of eglSwapBuffers. I guess we can return EGL_FALSE from there.\nThis can become relevant if we auto run these tests on ChromeOS devices.\nHowever, delivering pixels to monitor is not necessary for auto testing.\nAnd, this process is very slow, which makes end2end tests run for about an hour, I think.\nThus, all this code will probably be disabled on bots anyway.\nI\u0027ll amend anglebug.com/1423 with this info.",
      "parentUuid": "d2af9ace_a7e34a39",
      "revId": "f5fb80d65c41e3edb00ed853461d582a366ff26f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}