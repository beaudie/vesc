{
  "comments": [
    {
      "key": {
        "uuid": "8f89388e_a1f7bc3b",
        "filename": "src/tests/test_utils/angle_test_instantiate.cpp",
        "patchSetId": 13
      },
      "lineNbr": 127,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-02-27T01:30:30Z",
      "side": 1,
      "message": "On my Intel/Nvidia laptop this is always Intel, regardless of the actual GPU used.\nI think that this is not what this code would expect.",
      "range": {
        "startLine": 127,
        "startChar": 51,
        "endLine": 127,
        "endChar": 66
      },
      "revId": "7085305f6eda7d0a277b6c59fd6f4250d8d6f9da",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2898dc17_c61ab8a8",
        "filename": "src/tests/test_utils/angle_test_instantiate.cpp",
        "patchSetId": 13
      },
      "lineNbr": 127,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2019-02-27T03:04:47Z",
      "side": 1,
      "message": "You\u0027re probably right. I guess it\u0027s tricky to figure out what the primary GPU is.",
      "parentUuid": "8f89388e_a1f7bc3b",
      "range": {
        "startLine": 127,
        "startChar": 51,
        "endLine": 127,
        "endChar": 66
      },
      "revId": "7085305f6eda7d0a277b6c59fd6f4250d8d6f9da",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "23ed6d06_5f87b1ce",
        "filename": "src/tests/test_utils/angle_test_instantiate.cpp",
        "patchSetId": 13
      },
      "lineNbr": 127,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-02-27T19:08:35Z",
      "side": 1,
      "message": "My original thought was to pass the expectation to end2end tests with an argument which we would set in bot configuration. WDYTH?",
      "parentUuid": "2898dc17_c61ab8a8",
      "range": {
        "startLine": 127,
        "startChar": 51,
        "endLine": 127,
        "endChar": 66
      },
      "revId": "7085305f6eda7d0a277b6c59fd6f4250d8d6f9da",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9dd2dc50_ca0658f7",
        "filename": "src/tests/test_utils/angle_test_instantiate.cpp",
        "patchSetId": 13
      },
      "lineNbr": 127,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2019-02-27T19:22:25Z",
      "side": 1,
      "message": "Right now we\u0027re doing this:\n\n// On dual-GPU systems we assume the non-Intel GPU is the primary one.\n\nThis is clearly not correct. Let\u0027s bring it up with NVIDIA on the best practice for predicting which GPU will be initialized on a dual-GPU optimus system. Could you file an issue on the ANGLE tracker indicating the issue with GetSystemInfo and cc kkinnunen@nvidia.com ?",
      "parentUuid": "23ed6d06_5f87b1ce",
      "range": {
        "startLine": 127,
        "startChar": 51,
        "endLine": 127,
        "endChar": 66
      },
      "revId": "7085305f6eda7d0a277b6c59fd6f4250d8d6f9da",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5f8224f5_4c378175",
        "filename": "src/tests/test_utils/angle_test_instantiate.cpp",
        "patchSetId": 13
      },
      "lineNbr": 127,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-02-27T19:29:43Z",
      "side": 1,
      "message": "Actually, this heuristic of FindPrimaryGPU() gets overridden by the code that follows it in GetSystemInfo(), at least in SystemInfo_win.cpp.\nWhich results in the integrated GPU (Intel) being the primary and not the discreet NVIDIA, contrary to what FindPrimaryGPU() wants.\nSure, I can open a bug.",
      "parentUuid": "9dd2dc50_ca0658f7",
      "range": {
        "startLine": 127,
        "startChar": 51,
        "endLine": 127,
        "endChar": 66
      },
      "revId": "7085305f6eda7d0a277b6c59fd6f4250d8d6f9da",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}