{
  "comments": [
    {
      "key": {
        "uuid": "cfc63177_3cae2d6a",
        "filename": "src/compiler/translator/ShaderStorageBlockFunctionHLSL.cpp",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2018-10-10T08:33:54Z",
      "side": 1,
      "message": "This could just be const char*",
      "revId": "a25a230f1629ea57b94172cbe51754a16754024d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e0923552_469b5d5e",
        "filename": "src/compiler/translator/ShaderStorageBlockFunctionHLSL.cpp",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2018-10-10T08:33:54Z",
      "side": 1,
      "message": "nit: no need for a temporary data-string, we can output to \"out\" directly.",
      "revId": "a25a230f1629ea57b94172cbe51754a16754024d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "939e6b58_b554807f",
        "filename": "src/compiler/translator/ShaderStorageBlockFunctionHLSL.cpp",
        "patchSetId": 2
      },
      "lineNbr": 55,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2018-10-10T08:33:54Z",
      "side": 1,
      "message": "nit: index could be called row or rowIndex",
      "range": {
        "startLine": 55,
        "startChar": 17,
        "endLine": 55,
        "endChar": 22
      },
      "revId": "a25a230f1629ea57b94172cbe51754a16754024d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "70f0139c_929f5f47",
        "filename": "src/compiler/translator/ShaderStorageBlockFunctionHLSL.cpp",
        "patchSetId": 2
      },
      "lineNbr": 57,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2018-10-10T08:33:54Z",
      "side": 1,
      "message": "What is str? (would disappear when outputting to \"out\" anyway)",
      "range": {
        "startLine": 57,
        "startChar": 50,
        "endLine": 57,
        "endChar": 53
      },
      "revId": "a25a230f1629ea57b94172cbe51754a16754024d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f4bb0e13_e126e792",
        "filename": "src/compiler/translator/ShaderStorageBlockFunctionHLSL.cpp",
        "patchSetId": 2
      },
      "lineNbr": 58,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2018-10-10T08:33:54Z",
      "side": 1,
      "message": "Where does the constant 16 come from? I think it should be 8 for matrices with rows of size 2 for std430.",
      "range": {
        "startLine": 58,
        "startChar": 38,
        "endLine": 58,
        "endChar": 40
      },
      "revId": "a25a230f1629ea57b94172cbe51754a16754024d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "45dc6d8d_0aa15233",
        "filename": "src/compiler/translator/ShaderStorageBlockFunctionHLSL.cpp",
        "patchSetId": 2
      },
      "lineNbr": 58,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2018-10-10T08:33:54Z",
      "side": 1,
      "message": "Is the trailing comma ok?",
      "range": {
        "startLine": 58,
        "startChar": 47,
        "endLine": 58,
        "endChar": 48
      },
      "revId": "a25a230f1629ea57b94172cbe51754a16754024d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c6e17ec3_beb18f99",
        "filename": "src/compiler/translator/ShaderStorageBlockFunctionHLSL.cpp",
        "patchSetId": 2
      },
      "lineNbr": 89,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2018-10-10T08:33:54Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 89,
        "startChar": 17,
        "endLine": 89,
        "endChar": 22
      },
      "revId": "a25a230f1629ea57b94172cbe51754a16754024d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c4ae675c_1d99002a",
        "filename": "src/compiler/translator/ShaderStorageBlockFunctionHLSL.cpp",
        "patchSetId": 2
      },
      "lineNbr": 91,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2018-10-10T08:33:54Z",
      "side": 1,
      "message": "ditto.",
      "range": {
        "startLine": 91,
        "startChar": 92,
        "endLine": 91,
        "endChar": 94
      },
      "revId": "a25a230f1629ea57b94172cbe51754a16754024d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "382039c0_27989e87",
        "filename": "src/tests/gl_tests/ShaderStorageBufferTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 232,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2018-10-10T08:33:54Z",
      "side": 1,
      "message": "nit: dispatch compute. Also I\u0027m a fan of comments but this one is a bit unnecessary :)",
      "range": {
        "startLine": 232,
        "startChar": 7,
        "endLine": 232,
        "endChar": 14
      },
      "revId": "a25a230f1629ea57b94172cbe51754a16754024d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "60d24ea7_6cb3f6be",
        "filename": "src/tests/gl_tests/ShaderStorageBufferTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 247,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2018-10-10T08:33:54Z",
      "side": 1,
      "message": "nit: I don\u0027t think we need to unmap + unbind at the end of the test.",
      "revId": "a25a230f1629ea57b94172cbe51754a16754024d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b6b1d970_15343f08",
        "filename": "src/tests/gl_tests/ShaderStorageBufferTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 283,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2018-10-10T08:33:54Z",
      "side": 1,
      "message": "I think this should be 8 instead according to the std140 rules but I might be wrong",
      "range": {
        "startLine": 283,
        "startChar": 27,
        "endLine": 283,
        "endChar": 40
      },
      "revId": "a25a230f1629ea57b94172cbe51754a16754024d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "afd285cf_48d9ea54",
        "filename": "src/tests/gl_tests/ShaderStorageBufferTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 284,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2018-10-10T08:33:54Z",
      "side": 1,
      "message": "This isn\u0027t kBytesPerComponent but kVectorStride/kBytesPerComponent (even if it is the same value of 4). Also comment as to why it isn\u0027t kRows, and fill the gaps with zeros.",
      "range": {
        "startLine": 284,
        "startChar": 41,
        "endLine": 284,
        "endChar": 59
      },
      "revId": "a25a230f1629ea57b94172cbe51754a16754024d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be4d20c7_8facba43",
        "filename": "src/tests/gl_tests/ShaderStorageBufferTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 288,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2018-10-10T09:40:15Z",
      "side": 1,
      "message": "kInputData (it says dada right now)",
      "range": {
        "startLine": 288,
        "startChar": 69,
        "endLine": 288,
        "endChar": 79
      },
      "revId": "a25a230f1629ea57b94172cbe51754a16754024d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7e8ac28f_3ff54998",
        "filename": "src/tests/gl_tests/ShaderStorageBufferTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 296,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2018-10-10T08:33:54Z",
      "side": 1,
      "message": "ditto",
      "revId": "a25a230f1629ea57b94172cbe51754a16754024d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a61b632_9dd3f574",
        "filename": "src/tests/gl_tests/ShaderStorageBufferTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 313,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2018-10-10T08:33:54Z",
      "side": 1,
      "message": "\u0026kInputData[0][0] + idx * kVectorStride + idy",
      "range": {
        "startLine": 311,
        "startChar": 22,
        "endLine": 313,
        "endChar": 86
      },
      "revId": "a25a230f1629ea57b94172cbe51754a16754024d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb9079af_a5f69507",
        "filename": "src/tests/gl_tests/ShaderStorageBufferTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 317,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2018-10-10T08:33:54Z",
      "side": 1,
      "message": "ditto",
      "revId": "a25a230f1629ea57b94172cbe51754a16754024d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}