{
  "comments": [
    {
      "key": {
        "uuid": "2434d59f_6d38857f",
        "filename": "src/libANGLE/renderer/vulkan/ProgramVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 103,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-03-14T16:02:09Z",
      "side": 1,
      "message": "QueryDefaultUniformBlock? Or ReadFrom? You\u0027re not copying the entire block here.",
      "range": {
        "startLine": 103,
        "startChar": 5,
        "endLine": 103,
        "endChar": 28
      },
      "revId": "4be87be56ed3f3680fb88941b1080f4021d9ab80",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ffb12cd8_0a868a1b",
        "filename": "src/libANGLE/renderer/vulkan/ProgramVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 103,
      "author": {
        "id": 1262827
      },
      "writtenOn": "2018-03-14T18:00:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2434d59f_6d38857f",
      "range": {
        "startLine": 103,
        "startChar": 5,
        "endLine": 103,
        "endChar": 28
      },
      "revId": "4be87be56ed3f3680fb88941b1080f4021d9ab80",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da1f815f_deab3ce6",
        "filename": "src/libANGLE/renderer/vulkan/ProgramVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 431,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-03-14T16:02:09Z",
      "side": 1,
      "message": "can you add an unimplemented early exit if the linkedUniform is a sampler type? (isSampler())",
      "revId": "4be87be56ed3f3680fb88941b1080f4021d9ab80",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c5cb5829_3f7c6bf1",
        "filename": "src/libANGLE/renderer/vulkan/ProgramVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 431,
      "author": {
        "id": 1262827
      },
      "writtenOn": "2018-03-14T18:00:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "da1f815f_deab3ce6",
      "revId": "4be87be56ed3f3680fb88941b1080f4021d9ab80",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "acced3f0_becc54e0",
        "filename": "src/libANGLE/renderer/vulkan/ProgramVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 453,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-03-14T16:02:09Z",
      "side": 1,
      "message": "same here",
      "revId": "4be87be56ed3f3680fb88941b1080f4021d9ab80",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "25d7a977_cffb2eca",
        "filename": "src/libANGLE/renderer/vulkan/ProgramVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 453,
      "author": {
        "id": 1262827
      },
      "writtenOn": "2018-03-14T18:00:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "acced3f0_becc54e0",
      "revId": "4be87be56ed3f3680fb88941b1080f4021d9ab80",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2cfdfcad_aadd2575",
        "filename": "src/libANGLE/renderer/vulkan/ProgramVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 454,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-03-14T16:02:09Z",
      "side": 1,
      "message": "where did you pull this code from? the conversions should all be done at the gl::Program level now. I think you can remove all the casting stuff and replace this with ASSERTs that the types match.",
      "range": {
        "startLine": 454,
        "startChar": 5,
        "endLine": 454,
        "endChar": 73
      },
      "revId": "4be87be56ed3f3680fb88941b1080f4021d9ab80",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "98a6d5ef_46dcf9a8",
        "filename": "src/libANGLE/renderer/vulkan/ProgramVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 454,
      "author": {
        "id": 1262827
      },
      "writtenOn": "2018-03-14T18:00:16Z",
      "side": 1,
      "message": "I modified it because the linkedIUniform.type didnt work at all as soon as you start using FLOAT_VECX. I just realized the information on the component type is also available so I changed the condition to check the componentType agaisnt the entryPointType instead and now everything works.",
      "parentUuid": "2cfdfcad_aadd2575",
      "range": {
        "startLine": 454,
        "startChar": 5,
        "endLine": 454,
        "endChar": 73
      },
      "revId": "4be87be56ed3f3680fb88941b1080f4021d9ab80",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "adda5737_4ec7b810",
        "filename": "src/tests/gl_tests/UniformTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-03-14T16:02:09Z",
      "side": 1,
      "message": "rather than use a SetUp method, put the program definition in a constexpr char[] variable and use ANGLE_GL_PROGRAM to compile it in each test. then query the specific uniform you are interested in.",
      "range": {
        "startLine": 30,
        "startChar": 9,
        "endLine": 30,
        "endChar": 14
      },
      "revId": "4be87be56ed3f3680fb88941b1080f4021d9ab80",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d659c6cf_6194ec40",
        "filename": "src/tests/gl_tests/UniformTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1262827
      },
      "writtenOn": "2018-03-14T18:00:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "adda5737_4ec7b810",
      "range": {
        "startLine": 30,
        "startChar": 9,
        "endLine": 30,
        "endChar": 14
      },
      "revId": "4be87be56ed3f3680fb88941b1080f4021d9ab80",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "84ba9110_c099cab6",
        "filename": "src/tests/gl_tests/UniformTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-03-14T16:02:09Z",
      "side": 1,
      "message": "nit: comment before every test.",
      "range": {
        "startLine": 83,
        "startChar": 0,
        "endLine": 83,
        "endChar": 6
      },
      "revId": "4be87be56ed3f3680fb88941b1080f4021d9ab80",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "361f05ff_b061684c",
        "filename": "src/tests/gl_tests/UniformTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 1262827
      },
      "writtenOn": "2018-03-14T18:00:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "84ba9110_c099cab6",
      "range": {
        "startLine": 83,
        "startChar": 0,
        "endLine": 83,
        "endChar": 6
      },
      "revId": "4be87be56ed3f3680fb88941b1080f4021d9ab80",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "460966b1_6010b86e",
        "filename": "src/tests/gl_tests/UniformTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 143,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-03-14T16:02:09Z",
      "side": 1,
      "message": "make this a std::vector (same for the other tests)",
      "range": {
        "startLine": 143,
        "startChar": 4,
        "endLine": 143,
        "endChar": 12
      },
      "revId": "4be87be56ed3f3680fb88941b1080f4021d9ab80",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1d1bfe28_979c01bf",
        "filename": "src/tests/gl_tests/UniformTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 143,
      "author": {
        "id": 1262827
      },
      "writtenOn": "2018-03-14T18:00:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "460966b1_6010b86e",
      "range": {
        "startLine": 143,
        "startChar": 4,
        "endLine": 143,
        "endChar": 12
      },
      "revId": "4be87be56ed3f3680fb88941b1080f4021d9ab80",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "89428ac1_f76614f0",
        "filename": "src/tests/gl_tests/UniformTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 149,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-03-14T16:02:09Z",
      "side": 1,
      "message": "then you can replace the loops with a single EXPECT_EQ between the two vectors (strictly speaking, you can use EXPECT_EQ for the value comparisons, though ASSERT is required for most error checking)",
      "range": {
        "startLine": 146,
        "startChar": 4,
        "endLine": 149,
        "endChar": 5
      },
      "revId": "4be87be56ed3f3680fb88941b1080f4021d9ab80",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ca455120_3f2b5a1d",
        "filename": "src/tests/gl_tests/UniformTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 149,
      "author": {
        "id": 1262827
      },
      "writtenOn": "2018-03-14T18:00:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "89428ac1_f76614f0",
      "range": {
        "startLine": 146,
        "startChar": 4,
        "endLine": 149,
        "endChar": 5
      },
      "revId": "4be87be56ed3f3680fb88941b1080f4021d9ab80",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}