{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "63993bbf_2cb256fd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-03-31T18:16:17Z",
      "side": 1,
      "message": "I don\u0027t know if we have a check for this, but we should also make sure on first use that the array is sized. If there isn\u0027t one already, you could add a test that does something like:\n\n```\ndeclare unsized array\nvoid f() { use the array; }\ndeclare the layout\nvoid main() { f(); }\n```\n\nChanging the type after the array is used may work, but IIRC this scenario is illegal and should produce an error.",
      "revId": "fe4a522e9f4792711b8225b7904692da3bdd9967",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "965548cc_e957bc7b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2022-03-31T20:01:59Z",
      "side": 1,
      "message": "Since the variable won\u0027t be accessed until main runs and uses the function, why does it need to be sized early?  Is it due to parsing order?\n\nThis does not fail to compile currently (with the patch):\n```\nconst std::string \u0026shaderString3 \u003d\n    R\"(#version 310 es\n    #extension GL_EXT_geometry_shader : require\n    in vec4 texcoord[];\n    vec4 get_texcoord()\n    {\n        return texcoord[0];\n    }\n    layout (points) in;\n    layout (points, max_vertices \u003d 1) out;\n    void main()\n    {\n        vec4 coord \u003d get_texcoord();\n        int length \u003d texcoord.length();\n    })\";\n```",
      "parentUuid": "63993bbf_2cb256fd",
      "revId": "fe4a522e9f4792711b8225b7904692da3bdd9967",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b93aa2de_ef45a39c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-04-01T01:36:56Z",
      "side": 1,
      "message": "I think it should (fail). Yes the problem is parse order. The TType of the variable is used to derive the TType of nodes that use it, so the fact that we change it after declaration is only correct if the variable isn\u0027t otherwise used.\n\nTessellation may very well be broken here too.\n\nThat said, we are already accepting a shader that we should technically fail to compile, and the TType problems that may arise are really corner cases, so we\u0027re technically in the weeds. I wouldn\u0027t worry too much about it.",
      "parentUuid": "965548cc_e957bc7b",
      "revId": "fe4a522e9f4792711b8225b7904692da3bdd9967",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "36c9d729_13da83e4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2022-04-01T15:07:26Z",
      "side": 1,
      "message": "Okay, I\u0027ll hold off on this for now.",
      "parentUuid": "b93aa2de_ef45a39c",
      "revId": "fe4a522e9f4792711b8225b7904692da3bdd9967",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "42759e00_6b1b67f3",
        "filename": "src/compiler/translator/ParseContext.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1241,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-03-31T18:16:17Z",
      "side": 1,
      "message": "Needs to be updated",
      "range": {
        "startLine": 1241,
        "startChar": 61,
        "endLine": 1241,
        "endChar": 92
      },
      "revId": "fe4a522e9f4792711b8225b7904692da3bdd9967",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "23a867a3_b7cd71bd",
        "filename": "src/compiler/translator/ParseContext.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1241,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2022-03-31T20:01:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "42759e00_6b1b67f3",
      "range": {
        "startLine": 1241,
        "startChar": 61,
        "endLine": 1241,
        "endChar": 92
      },
      "revId": "fe4a522e9f4792711b8225b7904692da3bdd9967",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8955b028_f9432990",
        "filename": "src/compiler/translator/ParseContext.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1251,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-03-31T18:16:17Z",
      "side": 1,
      "message": "also here",
      "range": {
        "startLine": 1251,
        "startChar": 83,
        "endLine": 1251,
        "endChar": 95
      },
      "revId": "fe4a522e9f4792711b8225b7904692da3bdd9967",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0b92ffdf_378285c9",
        "filename": "src/compiler/translator/ParseContext.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1251,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2022-03-31T20:01:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8955b028_f9432990",
      "range": {
        "startLine": 1251,
        "startChar": 83,
        "endLine": 1251,
        "endChar": 95
      },
      "revId": "fe4a522e9f4792711b8225b7904692da3bdd9967",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ecd7d51d_2c48318c",
        "filename": "src/compiler/translator/ParseContext.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1258,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-03-31T18:16:17Z",
      "side": 1,
      "message": "You should be able to de-duplicate this with the previous if, just use a different string for the error if you have to (but honestly I would just use the same string encompassing both cases)",
      "revId": "fe4a522e9f4792711b8225b7904692da3bdd9967",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1f440639_23836e1a",
        "filename": "src/compiler/translator/ParseContext.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1258,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2022-03-31T20:01:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ecd7d51d_2c48318c",
      "revId": "fe4a522e9f4792711b8225b7904692da3bdd9967",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a0e6f3fd_b5c514c1",
        "filename": "src/compiler/translator/ParseContext.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2839,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-03-31T18:16:17Z",
      "side": 1,
      "message": "Good for debugging, but shouldn\u0027t be a warning. It\u0027s not a warning for tessellation, is it?\n\nAlso the comment above this needs updating",
      "range": {
        "startLine": 2836,
        "startChar": 0,
        "endLine": 2839,
        "endChar": 36
      },
      "revId": "fe4a522e9f4792711b8225b7904692da3bdd9967",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f75aa73c_b9c60a30",
        "filename": "src/compiler/translator/ParseContext.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2839,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2022-03-31T20:01:59Z",
      "side": 1,
      "message": "The behavior we\u0027re allowing is against the spec, but applications already expect it to work, that\u0027s why I left it as a warning.  The spec quote is still valid.  I can drop it if you prefer.  I don\u0027t know if tessellation emits the same warning, we don\u0027t have as many unit tests for that.",
      "parentUuid": "a0e6f3fd_b5c514c1",
      "range": {
        "startLine": 2836,
        "startChar": 0,
        "endLine": 2839,
        "endChar": 36
      },
      "revId": "fe4a522e9f4792711b8225b7904692da3bdd9967",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ab481747_1d529986",
        "filename": "src/compiler/translator/ParseContext.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2839,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-04-01T01:36:56Z",
      "side": 1,
      "message": "Ack, you\u0027re right tessellation and geometry are being different in this regard.",
      "parentUuid": "f75aa73c_b9c60a30",
      "range": {
        "startLine": 2836,
        "startChar": 0,
        "endLine": 2839,
        "endChar": 36
      },
      "revId": "fe4a522e9f4792711b8225b7904692da3bdd9967",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}