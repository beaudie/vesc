{
  "comments": [
    {
      "key": {
        "uuid": "3a715af1_2386624e",
        "filename": "extensions/EGL_ANGLE_platform_angle.txt",
        "patchSetId": 7
      },
      "lineNbr": 84,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2020-05-29T15:24:53Z",
      "side": 1,
      "message": "Can we call this NATIVE?",
      "range": {
        "startLine": 84,
        "startChar": 50,
        "endLine": 84,
        "endChar": 55
      },
      "revId": "b1021f9039b72c7753233c90e53ce609f62cbe58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e5f940c4_1fbfa356",
        "filename": "extensions/EGL_ANGLE_platform_angle.txt",
        "patchSetId": 7
      },
      "lineNbr": 146,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2020-05-29T15:24:53Z",
      "side": 1,
      "message": "Add a paragraph explaining what the new parameter does and what happens if display creation fails.",
      "revId": "b1021f9039b72c7753233c90e53ce609f62cbe58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fe1e8f39_91e758c1",
        "filename": "extensions/EGL_ANGLE_platform_angle.txt",
        "patchSetId": 7
      },
      "lineNbr": 155,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2020-05-29T15:24:53Z",
      "side": 1,
      "message": "I hope we can avoid defining this and just say that ANGLE makes the choice.  Hopefully this saves us from people/tests expecting a specific behaviour.",
      "range": {
        "startLine": 147,
        "startChar": 0,
        "endLine": 155,
        "endChar": 49
      },
      "revId": "b1021f9039b72c7753233c90e53ce609f62cbe58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "41e35e51_f8e55585",
        "filename": "extensions/EGL_ANGLE_platform_angle.txt",
        "patchSetId": 7
      },
      "lineNbr": 155,
      "author": {
        "id": 1001794
      },
      "writtenOn": "2020-05-30T18:52:14Z",
      "side": 1,
      "message": "I think in this case we should fall into DisplayEGL with an unspecified platform (eglGetDisplay()) and let native EGL figure it out.\n\nOr with vulkan, implementing a surfaceless display is a safe option.\n\nAgree with leaving this undocumented.",
      "parentUuid": "fe1e8f39_91e758c1",
      "range": {
        "startLine": 147,
        "startChar": 0,
        "endLine": 155,
        "endChar": 49
      },
      "revId": "b1021f9039b72c7753233c90e53ce609f62cbe58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a9062aed_11b1e569",
        "filename": "extensions/EGL_ANGLE_platform_angle.txt",
        "patchSetId": 7
      },
      "lineNbr": 176,
      "author": {
        "id": 1228974
      },
      "writtenOn": "2020-05-28T12:25:37Z",
      "side": 1,
      "message": "I left comments in the code as well.",
      "range": {
        "startLine": 175,
        "startChar": 4,
        "endLine": 176,
        "endChar": 27
      },
      "revId": "b1021f9039b72c7753233c90e53ce609f62cbe58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "33721e83_0dc73d6d",
        "filename": "extensions/EGL_ANGLE_platform_angle.txt",
        "patchSetId": 7
      },
      "lineNbr": 183,
      "author": {
        "id": 1228974
      },
      "writtenOn": "2020-05-28T12:25:37Z",
      "side": 1,
      "message": "Not sure about this. Thus, mentioned that explicitly here with an additional (***) comment.",
      "range": {
        "startLine": 183,
        "startChar": 36,
        "endLine": 183,
        "endChar": 43
      },
      "revId": "b1021f9039b72c7753233c90e53ce609f62cbe58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e982a9f1_1ee6b79f",
        "filename": "extensions/EGL_ANGLE_platform_angle.txt",
        "patchSetId": 7
      },
      "lineNbr": 186,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2020-05-29T15:24:53Z",
      "side": 1,
      "message": "I think these tables just end up describing implementation details. The extension spec is not the best place for that.  If you think it needs documentation, .md files or comments in the code (probably Display.cpp) would be the best.",
      "range": {
        "startLine": 156,
        "startChar": 0,
        "endLine": 186,
        "endChar": 50
      },
      "revId": "b1021f9039b72c7753233c90e53ce609f62cbe58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "79b9b5f9_88ddc858",
        "filename": "extensions/EGL_ANGLE_platform_angle.txt",
        "patchSetId": 7
      },
      "lineNbr": 186,
      "author": {
        "id": 1001794
      },
      "writtenOn": "2020-05-30T18:52:14Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "e982a9f1_1ee6b79f",
      "range": {
        "startLine": 156,
        "startChar": 0,
        "endLine": 186,
        "endChar": 50
      },
      "revId": "b1021f9039b72c7753233c90e53ce609f62cbe58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b16097cc_58133cbd",
        "filename": "include/EGL/eglext_angle.h",
        "patchSetId": 7
      },
      "lineNbr": 59,
      "author": {
        "id": 1228974
      },
      "writtenOn": "2020-05-28T12:25:37Z",
      "side": 1,
      "message": "Please help with choosing a correct value. Thanks!",
      "range": {
        "startLine": 59,
        "startChar": 53,
        "endLine": 59,
        "endChar": 59
      },
      "revId": "b1021f9039b72c7753233c90e53ce609f62cbe58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "332aa8ca_6b2596da",
        "filename": "include/EGL/eglext_angle.h",
        "patchSetId": 7
      },
      "lineNbr": 59,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2020-05-29T15:24:53Z",
      "side": 1,
      "message": "0x348F is our next enum",
      "parentUuid": "b16097cc_58133cbd",
      "range": {
        "startLine": 59,
        "startChar": 53,
        "endLine": 59,
        "endChar": 59
      },
      "revId": "b1021f9039b72c7753233c90e53ce609f62cbe58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "44efca57_aa47a3b9",
        "filename": "src/libANGLE/Display.cpp",
        "patchSetId": 7
      },
      "lineNbr": 226,
      "author": {
        "id": 1001794
      },
      "writtenOn": "2020-05-30T18:52:14Z",
      "side": 1,
      "message": "Unfortunately I suspect that not all drivers that have surfaceless behavior for eglGetDisplay() implement this extension, so we can\u0027t literally default to that value.\n\nThat\u0027s why the doc says \"SURFACELESS_MESA or equiavalent\" rather than SURFACELESS_MESA.\n\nI\u0027d just leave it zero and make sure we don\u0027t create a display that assumes a particular platform type unless we can prove the native display is of that type (e.g. with the display probing).",
      "range": {
        "startLine": 226,
        "startChar": 11,
        "endLine": 226,
        "endChar": 40
      },
      "revId": "b1021f9039b72c7753233c90e53ce609f62cbe58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "24c25815_2365b6db",
        "filename": "src/libANGLE/Display.cpp",
        "patchSetId": 7
      },
      "lineNbr": 226,
      "author": {
        "id": 1001794
      },
      "writtenOn": "2020-05-30T19:03:37Z",
      "side": 1,
      "message": "Please keep the ozone case, though, or do\n\n#if defined(ANGLE_USE_X11) \u0026\u0026 !defined(ANGLE_USE_OZONE)\n  return EGL_PLATFORM_X11_EXT;\n#else\n  return 0;\n#endif",
      "parentUuid": "44efca57_aa47a3b9",
      "range": {
        "startLine": 226,
        "startChar": 11,
        "endLine": 226,
        "endChar": 40
      },
      "revId": "b1021f9039b72c7753233c90e53ce609f62cbe58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "40f1b47f_0ca3a990",
        "filename": "src/libANGLE/Display.cpp",
        "patchSetId": 7
      },
      "lineNbr": 331,
      "author": {
        "id": 1001794
      },
      "writtenOn": "2020-05-30T18:52:14Z",
      "side": 1,
      "message": "I would just remove all the stuff about surfaceless_mesa or device_ext for now. ANGLE should check for those extensions in native EGL before using them, etc.\n\nThe doc is describing a rough end state which I don\u0027t expect will be reached with one change. There\u0027s no use to adding cases before they are working.",
      "range": {
        "startLine": 327,
        "startChar": 0,
        "endLine": 331,
        "endChar": 17
      },
      "revId": "b1021f9039b72c7753233c90e53ce609f62cbe58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}