{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c5402580_8012ff00",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-04-01T18:11:17Z",
      "side": 1,
      "message": "So the app is relying on the fact that a draw call should fail? Amazing stuff",
      "revId": "7599bed2854ba8c29fe0c96d2c45c1eaea3395a1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "975c69f7_79a5acc1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-04-01T18:18:17Z",
      "side": 1,
      "message": "No, the app is hitting the assert due to a bug in ANGLE when validating samplers before performing a draw with a PPO.   This CL fixes the ANGLE bug so the app doesn\u0027t hit the assert anymore and can draw successfully.",
      "parentUuid": "c5402580_8012ff00",
      "revId": "7599bed2854ba8c29fe0c96d2c45c1eaea3395a1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "de9ecfd1_7a915196",
        "filename": "src/libANGLE/ProgramPipeline.cpp",
        "patchSetId": 4
      },
      "lineNbr": 666,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-04-01T18:11:17Z",
      "side": 1,
      "message": "nit: It\u0027s not intuitive that this means a conflict in types. Could you at least add a comment at ProgramExecutable.cpp:754 where this is set to indicate \"conflicts are marked with InvalidEnum\"?",
      "range": {
        "startLine": 666,
        "startChar": 64,
        "endLine": 666,
        "endChar": 92
      },
      "revId": "7599bed2854ba8c29fe0c96d2c45c1eaea3395a1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0d1e4a8b_631c455f",
        "filename": "src/libANGLE/ProgramPipeline.cpp",
        "patchSetId": 4
      },
      "lineNbr": 666,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-04-01T18:18:17Z",
      "side": 1,
      "message": "Can do.\n\nAlso note that this is essentially copy/pasted from Program::validateSamplersImpl().   Another (likely better) approach is to try moving this into ProgramExecutable, if we\u0027re OK with losing the ASSERT(!mLinkingState) checking.",
      "parentUuid": "de9ecfd1_7a915196",
      "range": {
        "startLine": 666,
        "startChar": 64,
        "endLine": 666,
        "endChar": 92
      },
      "revId": "7599bed2854ba8c29fe0c96d2c45c1eaea3395a1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fe922443_013658ca",
        "filename": "src/libANGLE/ProgramPipeline.cpp",
        "patchSetId": 4
      },
      "lineNbr": 666,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2021-04-01T18:20:38Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "de9ecfd1_7a915196",
      "range": {
        "startLine": 666,
        "startChar": 64,
        "endLine": 666,
        "endChar": 92
      },
      "revId": "7599bed2854ba8c29fe0c96d2c45c1eaea3395a1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "84fd60fc_bdc2f39d",
        "filename": "src/libANGLE/ProgramPipeline.h",
        "patchSetId": 4
      },
      "lineNbr": 138,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2021-04-01T18:20:38Z",
      "side": 1,
      "message": "This comment doesn\u0027t jive with the code below.  You\u0027re describing reasons to skip it, but the code checks reasons to use it.  Can you invert one or the other?",
      "range": {
        "startLine": 137,
        "startChar": 11,
        "endLine": 138,
        "endChar": 97
      },
      "revId": "7599bed2854ba8c29fe0c96d2c45c1eaea3395a1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}