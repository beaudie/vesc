{
  "comments": [
    {
      "key": {
        "uuid": "e4518ba6_caa6649a",
        "filename": "src/tests/BUILD.gn",
        "patchSetId": 8
      },
      "lineNbr": 889,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-10-31T20:34:25Z",
      "side": 1,
      "message": "nit: gn naming (underscores)\n\nI would try to avoid using a python script. Not sure why you needed one. You should be able to use gn copies rules if things work correctly.",
      "range": {
        "startLine": 889,
        "startChar": 10,
        "endLine": 889,
        "endChar": 27
      },
      "revId": "b8c918e6f935d7c40acf276ddd56d342616fed1f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5628925a_773acc03",
        "filename": "src/tests/BUILD.gn",
        "patchSetId": 8
      },
      "lineNbr": 889,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2019-11-05T21:09:37Z",
      "side": 1,
      "message": "I\u0027ve updated it to use GN copy() commands.   These are generated by the Python script so we can modify paths however we need to.\n\nI was using the Python script initially to avoid growing this BUILD.gn file too much.",
      "parentUuid": "e4518ba6_caa6649a",
      "range": {
        "startLine": 889,
        "startChar": 10,
        "endLine": 889,
        "endChar": 27
      },
      "revId": "b8c918e6f935d7c40acf276ddd56d342616fed1f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef59daba_020f50cc",
        "filename": "src/tests/BUILD.gn",
        "patchSetId": 8
      },
      "lineNbr": 915,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-10-31T20:34:25Z",
      "side": 1,
      "message": "I would do away with the _api checks and just include the whole data dump in each build I think. Not sure it buys us much to keep them separated.\n\nNot sure if KHR needs to be isolated. I think for these though it\u0027s fine.\n\nAlternately you could make separate variables for each API level and specify them in each target.\n\nangle_deqp_core_gtest(\"gles2\") {\n  deqp_data \u003d angle_deqp_gles2_data\n}\n\nor something like that. Where |angle_deqp_gles2_data| is an autogenerated list. I think generally I like having all the data in one target.",
      "range": {
        "startLine": 915,
        "startChar": 6,
        "endLine": 915,
        "endChar": 28
      },
      "revId": "b8c918e6f935d7c40acf276ddd56d342616fed1f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "99e91010_32746d15",
        "filename": "src/tests/BUILD.gn",
        "patchSetId": 8
      },
      "lineNbr": 915,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2019-11-05T21:09:37Z",
      "side": 1,
      "message": "These _api checks reduce how long it takes to run the tests quite a bit.   For example, running the GLES3 tests it takes the following amount of time to upload the data files:\n\nWith _api checks: ~50sec\nWithout _api checks: ~140sec\n\nBased on that, I\u0027m going to leave the checks in.\n\nI\u0027ve moved the data lists into the appropriate angle_deqp_gles[2|3|31]_data lists though, and point to those based on the _api value to collect the autogenerated code a bit better.",
      "parentUuid": "ef59daba_020f50cc",
      "range": {
        "startLine": 915,
        "startChar": 6,
        "endLine": 915,
        "endChar": 28
      },
      "revId": "b8c918e6f935d7c40acf276ddd56d342616fed1f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}