{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "3969c0d8_b57c8a26",
        "filename": "src/libANGLE/Program.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1564,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2022-01-05T00:36:13Z",
      "side": 1,
      "message": "This change needs to be reverted, since we shouldn\u0027t indicate that the shader stages are linked until all of the linking steps have completed successfully.\n\nOtherwise, if any of the subsequent linking steps fail, the program will still indicate each of the stages are successfully linked.",
      "revId": "31d08343c1f690527a9289a67e210b793999ae58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "30419f0b_404bcb3d",
        "filename": "src/libANGLE/Program.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1564,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-01-05T15:33:58Z",
      "side": 1,
      "message": "If you were to write a test that expects the executable to be intact after a failed link, you can see from looking at the code here that there\u0027s multiple other places (lists of uniforms, blocks, etc) that damage consistent operation. The full fix is detailed in https://bugs.chromium.org/p/angleproject/issues/detail?id\u003d6358#c16 , if you want I can add a TODO with reference to that bug.\n\nBecause no tests fail with this change, and any new test you write could still be broken even I were to revert this change, I suggest we move forward like it is now, and fix it \"for real\" in anglebug.com/6358 .",
      "parentUuid": "3969c0d8_b57c8a26",
      "revId": "31d08343c1f690527a9289a67e210b793999ae58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "93d15607_1b0edd67",
        "filename": "src/libANGLE/Program.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1564,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2022-01-05T22:31:45Z",
      "side": 1,
      "message": "Ack\n\nI don\u0027t agree that breaking it even more is the right thing to do, since it\u0027s only being done as a workaround to give the desired stages to ProgramExecutable::linkUniforms(), rather than just passing them around.   In the interest of making progress though, marking this with the TODO to make sure it\u0027s cleaned up part of that bug is fine to me.",
      "parentUuid": "30419f0b_404bcb3d",
      "revId": "31d08343c1f690527a9289a67e210b793999ae58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ead9f933_a52b0fd8",
        "filename": "src/libANGLE/Program.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1564,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-01-07T15:41:08Z",
      "side": 1,
      "message": "Done - this change will not increase the difficulty of the fix. So this is acceptable b/c it\u0027s not increasing technical debt.",
      "parentUuid": "93d15607_1b0edd67",
      "revId": "31d08343c1f690527a9289a67e210b793999ae58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "21facf54_54ff1c14",
        "filename": "src/libANGLE/Program.cpp",
        "patchSetId": 3
      },
      "lineNbr": 3545,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2022-01-05T00:36:13Z",
      "side": 1,
      "message": "Nit: Remove the \"OrNull\", since it\u0027s unnecessary.",
      "range": {
        "startLine": 3545,
        "startChar": 72,
        "endLine": 3545,
        "endChar": 78
      },
      "revId": "31d08343c1f690527a9289a67e210b793999ae58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ed81d8e_9e9d1f93",
        "filename": "src/libANGLE/ProgramExecutable.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1473,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2022-01-05T00:36:13Z",
      "side": 1,
      "message": "There aren\u0027t any shader stages linked yet - we\u0027re still in the middle of linking them.   This should be the shaders attached to the program instead.",
      "range": {
        "startLine": 1473,
        "startChar": 25,
        "endLine": 1473,
        "endChar": 44
      },
      "revId": "31d08343c1f690527a9289a67e210b793999ae58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3aa257c4_368116aa",
        "filename": "src/libANGLE/ProgramExecutable.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1473,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-01-05T15:33:58Z",
      "side": 1,
      "message": "Attached isn\u0027t correct either because this could refer to ProgramPipelines. Rather than bikeshed too much (availableProgramStages? nonNullProgramStages?) how about we keep it as-is. LMKWYT",
      "parentUuid": "3ed81d8e_9e9d1f93",
      "range": {
        "startLine": 1473,
        "startChar": 25,
        "endLine": 1473,
        "endChar": 44
      },
      "revId": "31d08343c1f690527a9289a67e210b793999ae58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "41f2aa66_ae3e4c0b",
        "filename": "src/libANGLE/ProgramExecutable.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1473,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2022-01-05T22:31:45Z",
      "side": 1,
      "message": "\"Linked\" is wrong, so I\u0027d like to get that update to prevent misleading someone in the future.   It would be better to update these to \u0027linking\u0027, \u0027active\u0027, \u0027available\u0027, or something else that more accurately indicates these stages aren\u0027t linked yet.",
      "parentUuid": "3aa257c4_368116aa",
      "range": {
        "startLine": 1473,
        "startChar": 25,
        "endLine": 1473,
        "endChar": 44
      },
      "revId": "31d08343c1f690527a9289a67e210b793999ae58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6c1a1c06_3e44bc74",
        "filename": "src/libANGLE/ProgramExecutable.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1473,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-01-07T15:41:08Z",
      "side": 1,
      "message": "Done, for UniformLinker. I didn\u0027t want to rename PE\u0027s member variables/external API in this CL.",
      "parentUuid": "41f2aa66_ae3e4c0b",
      "range": {
        "startLine": 1473,
        "startChar": 25,
        "endLine": 1473,
        "endChar": 44
      },
      "revId": "31d08343c1f690527a9289a67e210b793999ae58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "63152a6e_c1c63f11",
        "filename": "src/libANGLE/ProgramLinkedResources.h",
        "patchSetId": 3
      },
      "lineNbr": 56,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2022-01-05T00:36:13Z",
      "side": 1,
      "message": "Similar to the above comment.   These shader stages aren\u0027t linked yet, but are in the process of being linked.   Instead, something like \u0027attachedShaderStages\u0027 would be more accurate.",
      "range": {
        "startLine": 56,
        "startChar": 38,
        "endLine": 56,
        "endChar": 56
      },
      "revId": "31d08343c1f690527a9289a67e210b793999ae58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "52f30129_d70e041e",
        "filename": "src/libANGLE/ProgramLinkedResources.h",
        "patchSetId": 3
      },
      "lineNbr": 66,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2022-01-05T00:36:13Z",
      "side": 1,
      "message": "nit: Ditto. Remove the \"OrNull\". No other nullable pointers in ANGLE follow this naming pattern.",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 66,
        "endChar": 78
      },
      "revId": "31d08343c1f690527a9289a67e210b793999ae58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f6e30afc_5216eb04",
        "filename": "src/libANGLE/ProgramLinkedResources.h",
        "patchSetId": 3
      },
      "lineNbr": 66,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-01-05T15:33:58Z",
      "side": 1,
      "message": "We use this pattern in a few places, because it helps readability. If you\u0027re fine with that I\u0027ll keep it.\n\ne.g. https://source.chromium.org/search?q\u003d%22indexTypeOrInvalid%22%20angle\u0026ss\u003dchromium",
      "parentUuid": "52f30129_d70e041e",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 66,
        "endChar": 78
      },
      "revId": "31d08343c1f690527a9289a67e210b793999ae58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "29f0d76f_44739c90",
        "filename": "src/libANGLE/ProgramLinkedResources.h",
        "patchSetId": 3
      },
      "lineNbr": 66,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2022-01-05T22:31:45Z",
      "side": 1,
      "message": "My vote is still to remove the \"OrNull\", since that\u0027s already implied by virtue of it being a pointer in the first place.",
      "parentUuid": "f6e30afc_5216eb04",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 66,
        "endChar": 78
      },
      "revId": "31d08343c1f690527a9289a67e210b793999ae58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d5fac775_7127991e",
        "filename": "src/libANGLE/ProgramLinkedResources.h",
        "patchSetId": 3
      },
      "lineNbr": 66,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-01-07T15:41:08Z",
      "side": 1,
      "message": "Ack - some pointers are assumed non-null in ANGLE (e.g. most Context pointers), so the OrNull provides some additional info to the reader.\n\nWe could go and change every non-nullable pointer into a reference at some point.",
      "parentUuid": "29f0d76f_44739c90",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 66,
        "endChar": 78
      },
      "revId": "31d08343c1f690527a9289a67e210b793999ae58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}