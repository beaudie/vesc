{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "3905aa58_659b96ac",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2024-10-09T20:29:57Z",
      "side": 1,
      "message": "PTAL",
      "revId": "922d65a188a3cc7db887127775d3399db0a99f1b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b4b1b61_1399a87b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2024-10-09T20:31:40Z",
      "side": 1,
      "message": "@syoussefi@chromium.org - if you can provide some info on the optimization you had in mind to the shader i can work on a follow up change that implements that",
      "revId": "922d65a188a3cc7db887127775d3399db0a99f1b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "51689c1f_f213c1c4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-10-10T02:08:21Z",
      "side": 1,
      "message": "Thank you, I just wanted to say we should be able to remove some meaningless combinations by doing this:\n\n- Pull the entire shader into a header file\n- Have ImageCopy.frag include it, also a new ImageCopyFloat.frag include it\n- Move the YUV and MS flags to ImageCopyFloat.frag.json\n- Have UtilsVk choose between ImageCopy and ImageCopyFloat\n\nThat should remove 16 impossible combinations with YUV/MS and int/uint src and destination.",
      "parentUuid": "3b4b1b61_1399a87b",
      "revId": "922d65a188a3cc7db887127775d3399db0a99f1b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "229ba48d_68d71ab5",
        "filename": "src/libANGLE/renderer/vulkan/shaders/src/ImageCopy.frag",
        "patchSetId": 3
      },
      "lineNbr": 36,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2024-10-09T20:31:40Z",
      "side": 1,
      "message": "i wasnt sure if it better to have this as `sampler2DMS`, any suggestions?",
      "range": {
        "startLine": 36,
        "startChar": 26,
        "endLine": 36,
        "endChar": 37
      },
      "revId": "922d65a188a3cc7db887127775d3399db0a99f1b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "28e6a91b_c54b8014",
        "filename": "src/libANGLE/renderer/vulkan/shaders/src/ImageCopy.frag",
        "patchSetId": 3
      },
      "lineNbr": 36,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-10-10T02:12:00Z",
      "side": 1,
      "message": "What does the spec require? If it\u0027s supposed to resolve the image, then you should pass in the sample count, have a loop and read all the samples and calculate the average.\n\nMaybe we can verify this with a test? The test could use `gl_SampleID` to initialize the samples differently, then after the copy you can verify the average value is copied. I happen to have written a similar test just the other day you can copy a lot from: https://chromium-review.googlesource.com/c/angle/angle/+/5917026",
      "parentUuid": "229ba48d_68d71ab5",
      "range": {
        "startLine": 36,
        "startChar": 26,
        "endLine": 36,
        "endChar": 37
      },
      "revId": "922d65a188a3cc7db887127775d3399db0a99f1b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "de5b4443_7edba4e0",
        "filename": "src/libANGLE/renderer/vulkan/shaders/src/ImageCopy.frag",
        "patchSetId": 3
      },
      "lineNbr": 146,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-10-10T02:12:00Z",
      "side": 1,
      "message": "`params.srcMip` doesn\u0027t make sense here. It happens to be 0, so you\u0027re always reading sample 0.",
      "revId": "922d65a188a3cc7db887127775d3399db0a99f1b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}