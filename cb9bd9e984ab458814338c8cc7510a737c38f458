{
  "comments": [
    {
      "key": {
        "uuid": "853df353_4f42fdaa",
        "filename": "src/libANGLE/VertexAttribute.h",
        "patchSetId": 3
      },
      "lineNbr": 104,
      "author": {
        "id": 1256245
      },
      "writtenOn": "2019-07-02T19:17:11Z",
      "side": 1,
      "message": "Sweet",
      "revId": "cb9bd9e984ab458814338c8cc7510a737c38f458",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "58032451_94d13692",
        "filename": "src/libANGLE/renderer/Format.h",
        "patchSetId": 3
      },
      "lineNbr": 62,
      "author": {
        "id": 1256245
      },
      "writtenOn": "2019-07-02T19:17:11Z",
      "side": 1,
      "message": "Good",
      "revId": "cb9bd9e984ab458814338c8cc7510a737c38f458",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "19d68e14_2e3eb07a",
        "filename": "src/libANGLE/renderer/d3d/VertexBuffer.cpp",
        "patchSetId": 3
      },
      "lineNbr": 234,
      "author": {
        "id": 1256245
      },
      "writtenOn": "2019-07-02T19:17:11Z",
      "side": 1,
      "message": "Nice",
      "revId": "cb9bd9e984ab458814338c8cc7510a737c38f458",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "644666ff_a20aed68",
        "filename": "src/libANGLE/renderer/gen_angle_format_table.py",
        "patchSetId": 3
      },
      "lineNbr": 230,
      "author": {
        "id": 1256245
      },
      "writtenOn": "2019-07-02T19:17:11Z",
      "side": 1,
      "message": "This and the table above LGTM. What\u0027s the fail case if something is broken here? We prevent app from using format it wants to, assert, some obscure bug?",
      "revId": "cb9bd9e984ab458814338c8cc7510a737c38f458",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2efb6fa1_d59149e5",
        "filename": "src/libANGLE/renderer/gen_angle_format_table.py",
        "patchSetId": 3
      },
      "lineNbr": 230,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-07-02T20:24:48Z",
      "side": 1,
      "message": "It would probably dramatically explode. Vertex attribute formats wouldn\u0027t work correctly and we\u0027d get validation layer errors. Our regression tests should protect us.",
      "parentUuid": "644666ff_a20aed68",
      "revId": "cb9bd9e984ab458814338c8cc7510a737c38f458",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5e403120_5676d4a4",
        "filename": "src/libANGLE/renderer/gl/VertexArrayGL.cpp",
        "patchSetId": 3
      },
      "lineNbr": 462,
      "author": {
        "id": 1256245
      },
      "writtenOn": "2019-07-02T19:17:11Z",
      "side": 1,
      "message": "So pretty",
      "revId": "cb9bd9e984ab458814338c8cc7510a737c38f458",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "01592b23_526e298c",
        "filename": "src/libANGLE/renderer/gl/VertexArrayGL.cpp",
        "patchSetId": 3
      },
      "lineNbr": 528,
      "author": {
        "id": 1256245
      },
      "writtenOn": "2019-07-02T19:17:11Z",
      "side": 1,
      "message": "More dopeness.",
      "revId": "cb9bd9e984ab458814338c8cc7510a737c38f458",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d4395e2e_b3141d72",
        "filename": "src/libANGLE/renderer/vulkan/UtilsVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 49,
      "author": {
        "id": 1256245
      },
      "writtenOn": "2019-07-02T19:17:11Z",
      "side": 1,
      "message": "Yes, simpler",
      "revId": "cb9bd9e984ab458814338c8cc7510a737c38f458",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "842e67ed_c5242e9e",
        "filename": "src/libANGLE/renderer/vulkan/UtilsVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 80,
      "author": {
        "id": 1326275
      },
      "writtenOn": "2019-07-03T14:46:21Z",
      "side": 1,
      "message": "Comment needs to be updated",
      "revId": "cb9bd9e984ab458814338c8cc7510a737c38f458",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1915e4c9_e1d5f5b4",
        "filename": "src/libANGLE/renderer/vulkan/UtilsVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 100,
      "author": {
        "id": 1326275
      },
      "writtenOn": "2019-07-03T14:46:21Z",
      "side": 1,
      "message": "I\u0027m a little confused by the language. In Format, you make it very explicit: GL_INT -\u003e Sint, GL_UNSIGNED_INT -\u003eUint. and Int means either.\nBut then in ConvertVertex, BufferUtils, and potentially elsewhere, it switches back to Int explicitly meaning signed.",
      "revId": "cb9bd9e984ab458814338c8cc7510a737c38f458",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}