{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ddf196b4_6994ec2e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 16
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-02-18T20:28:43Z",
      "side": 1,
      "message": "PTAL",
      "revId": "28504885c54d2d6f8d496445c8b5db9439701094",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b8161a8f_6b704ce6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 16
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-02-21T20:17:54Z",
      "side": 1,
      "message": "unable to repro failures, will rebase and run bots again",
      "revId": "28504885c54d2d6f8d496445c8b5db9439701094",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bbaee3b4_04bb0ba4",
        "filename": "include/GLSLANG/ShaderVars.h",
        "patchSetId": 16
      },
      "lineNbr": 192,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-02-18T21:26:55Z",
      "side": 1,
      "message": "I thought we settled in not calling it with the Vulkan term in the frontend?",
      "range": {
        "startLine": 192,
        "startChar": 8,
        "endLine": 192,
        "endChar": 23
      },
      "revId": "28504885c54d2d6f8d496445c8b5db9439701094",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "68371b6b_bfa52267",
        "filename": "include/GLSLANG/ShaderVars.h",
        "patchSetId": 16
      },
      "lineNbr": 192,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-02-19T16:40:23Z",
      "side": 1,
      "message": "FragmentInOut seems like a good name for these. And how is this index different from the location?",
      "parentUuid": "bbaee3b4_04bb0ba4",
      "range": {
        "startLine": 192,
        "startChar": 8,
        "endLine": 192,
        "endChar": 23
      },
      "revId": "28504885c54d2d6f8d496445c8b5db9439701094",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2986624c_1b8410a8",
        "filename": "include/GLSLANG/ShaderVars.h",
        "patchSetId": 16
      },
      "lineNbr": 192,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-02-22T18:37:35Z",
      "side": 1,
      "message": "\u003e FragmentInOut seems like a good name for these\n\nDone.\n\n\u003e And how is this index different from the location?\n\nindex and location are similar in that they refer to input draw buffer. Currently, the implementation uses \"FragmentInOut\" to figure out if it it a SubpassInput or not hence not reusing existing variables",
      "parentUuid": "68371b6b_bfa52267",
      "range": {
        "startLine": 192,
        "startChar": 8,
        "endLine": 192,
        "endChar": 23
      },
      "revId": "28504885c54d2d6f8d496445c8b5db9439701094",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aae006ad_f4c5faa2",
        "filename": "include/GLSLANG/ShaderVars.h",
        "patchSetId": 16
      },
      "lineNbr": 192,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-02-23T16:31:44Z",
      "side": 1,
      "message": "Sorry, I don\u0027t quite follow how this number is different from a location? Maybe this could be a bool instead, like isFragmentInOut? Or even we could store the property (in/out/inout) at some future point - just isFragmentInOut seems ok for now.\n\nBTW one nit - I used FragmentInOut generally for what to call this property vs Subpass/InputAttachment, but we should still stick with the ANGLE naming scheme with lower-case first character camelCase member variables.",
      "parentUuid": "2986624c_1b8410a8",
      "range": {
        "startLine": 192,
        "startChar": 8,
        "endLine": 192,
        "endChar": 23
      },
      "revId": "28504885c54d2d6f8d496445c8b5db9439701094",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e333dfa3_cab25137",
        "filename": "src/compiler/translator/BaseTypes.h",
        "patchSetId": 16
      },
      "lineNbr": 153,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-02-18T21:26:55Z",
      "side": 1,
      "message": "Same",
      "range": {
        "startLine": 153,
        "startChar": 7,
        "endLine": 153,
        "endChar": 14
      },
      "revId": "28504885c54d2d6f8d496445c8b5db9439701094",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cec993ea_d659d52e",
        "filename": "src/compiler/translator/BaseTypes.h",
        "patchSetId": 16
      },
      "lineNbr": 153,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-02-19T16:40:23Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "e333dfa3_cab25137",
      "range": {
        "startLine": 153,
        "startChar": 7,
        "endLine": 153,
        "endChar": 14
      },
      "revId": "28504885c54d2d6f8d496445c8b5db9439701094",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1eddbdbd_3a267dd0",
        "filename": "src/compiler/translator/BaseTypes.h",
        "patchSetId": 16
      },
      "lineNbr": 153,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-02-21T20:08:51Z",
      "side": 1,
      "message": "shabi, \"EbtSubpassInput\" predated our change, introduced here -\u003e https://chromium-review.googlesource.com/c/angle/angle/+/1731550\n\nI\u0027m not sure i understand the ask here",
      "parentUuid": "e333dfa3_cab25137",
      "range": {
        "startLine": 153,
        "startChar": 7,
        "endLine": 153,
        "endChar": 14
      },
      "revId": "28504885c54d2d6f8d496445c8b5db9439701094",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8604d088_a703072f",
        "filename": "src/compiler/translator/BaseTypes.h",
        "patchSetId": 16
      },
      "lineNbr": 153,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-02-22T18:37:35Z",
      "side": 1,
      "message": "pinging again on this to get some clarity",
      "parentUuid": "1eddbdbd_3a267dd0",
      "range": {
        "startLine": 153,
        "startChar": 7,
        "endLine": 153,
        "endChar": 14
      },
      "revId": "28504885c54d2d6f8d496445c8b5db9439701094",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e4816c81_496578be",
        "filename": "src/compiler/translator/BaseTypes.h",
        "patchSetId": 16
      },
      "lineNbr": 153,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-02-23T15:45:49Z",
      "side": 1,
      "message": "Ok, I thought renaming this was missed from an earlier commit of yours. It could be a nice follow up, but not necessary for this CL.",
      "parentUuid": "8604d088_a703072f",
      "range": {
        "startLine": 153,
        "startChar": 7,
        "endLine": 153,
        "endChar": 14
      },
      "revId": "28504885c54d2d6f8d496445c8b5db9439701094",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b2662364_ae5b605e",
        "filename": "src/compiler/translator/BaseTypes.h",
        "patchSetId": 16
      },
      "lineNbr": 153,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-02-23T15:59:59Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "e4816c81_496578be",
      "range": {
        "startLine": 153,
        "startChar": 7,
        "endLine": 153,
        "endChar": 14
      },
      "revId": "28504885c54d2d6f8d496445c8b5db9439701094",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "16123c33_c5a4c553",
        "filename": "src/compiler/translator/BaseTypes.h",
        "patchSetId": 16
      },
      "lineNbr": 153,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-02-23T16:31:44Z",
      "side": 1,
      "message": "I think this should be FragmentInOut as well, there\u0027s no concept of Subpasses in GLES that I can see.",
      "parentUuid": "b2662364_ae5b605e",
      "range": {
        "startLine": 153,
        "startChar": 7,
        "endLine": 153,
        "endChar": 14
      },
      "revId": "28504885c54d2d6f8d496445c8b5db9439701094",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "258f189c_ac177d48",
        "filename": "src/compiler/translator/glslang.l",
        "patchSetId": 16
      },
      "lineNbr": 250,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-02-19T16:40:23Z",
      "side": 1,
      "message": "this should be ES2_extension_2_ES3_keyword",
      "range": {
        "startLine": 250,
        "startChar": 19,
        "endLine": 250,
        "endChar": 34
      },
      "revId": "28504885c54d2d6f8d496445c8b5db9439701094",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "55d34b97_9ff53126",
        "filename": "src/compiler/translator/glslang.l",
        "patchSetId": 16
      },
      "lineNbr": 250,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-02-22T18:37:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "258f189c_ac177d48",
      "range": {
        "startLine": 250,
        "startChar": 19,
        "endLine": 250,
        "endChar": 34
      },
      "revId": "28504885c54d2d6f8d496445c8b5db9439701094",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6faa81e2_736ebb15",
        "filename": "src/libANGLE/renderer/d3d/ProgramD3D.cpp",
        "patchSetId": 16
      },
      "lineNbr": 225,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-02-19T16:40:23Z",
      "side": 1,
      "message": "nit: fetch isn\u0027t implemented in D3D",
      "range": {
        "startLine": 225,
        "startChar": 9,
        "endLine": 225,
        "endChar": 47
      },
      "revId": "28504885c54d2d6f8d496445c8b5db9439701094",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a27298f7_bb8b7adf",
        "filename": "src/libANGLE/renderer/d3d/ProgramD3D.cpp",
        "patchSetId": 16
      },
      "lineNbr": 225,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-02-22T18:37:35Z",
      "side": 1,
      "message": "Current class hierarchy -\n UniformEncodingVisitorD3D -- (inheritance) --\u003e BlockEncoderVisitor -- (inheritance) --\u003e VariableNameVisitor\n\nThe method of the abstract class for interfacing was changed (VariableNameVisitor). So, trickling it down to UniformEncodingVisitorD3D as well.\n\nDo you want a new method instead?",
      "parentUuid": "6faa81e2_736ebb15",
      "range": {
        "startLine": 225,
        "startChar": 9,
        "endLine": 225,
        "endChar": 47
      },
      "revId": "28504885c54d2d6f8d496445c8b5db9439701094",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "27e9714c_2330efbb",
        "filename": "src/libANGLE/renderer/d3d/ProgramD3D.cpp",
        "patchSetId": 16
      },
      "lineNbr": 225,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-02-23T16:31:44Z",
      "side": 1,
      "message": "Ack, if anything I would call this visitNamedOpaqueObject or something like that. If you must keep the Or-Or situation please use FragmentInOut to replace SubpassInput.",
      "parentUuid": "a27298f7_bb8b7adf",
      "range": {
        "startLine": 225,
        "startChar": 9,
        "endLine": 225,
        "endChar": 47
      },
      "revId": "28504885c54d2d6f8d496445c8b5db9439701094",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0c849d61_4ea5323c",
        "filename": "src/libANGLE/renderer/glslang_wrapper_utils.cpp",
        "patchSetId": 16
      },
      "lineNbr": 931,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-02-18T21:26:55Z",
      "side": 1,
      "message": "nit: hasAnyInputAttachments",
      "range": {
        "startLine": 931,
        "startChar": 9,
        "endLine": 931,
        "endChar": 35
      },
      "revId": "28504885c54d2d6f8d496445c8b5db9439701094",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cb5bc861_73abf34c",
        "filename": "src/libANGLE/renderer/glslang_wrapper_utils.cpp",
        "patchSetId": 16
      },
      "lineNbr": 931,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-02-19T16:40:23Z",
      "side": 1,
      "message": "I\u0027d use the GL terminology (hasFragmentInOutVars) or something like that",
      "parentUuid": "0c849d61_4ea5323c",
      "range": {
        "startLine": 931,
        "startChar": 9,
        "endLine": 931,
        "endChar": 35
      },
      "revId": "28504885c54d2d6f8d496445c8b5db9439701094",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1d0f5636_3cd2f13a",
        "filename": "src/libANGLE/renderer/glslang_wrapper_utils.cpp",
        "patchSetId": 16
      },
      "lineNbr": 931,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-02-22T18:37:35Z",
      "side": 1,
      "message": "\u003e hasFragmentInOutVars\n\nDone.",
      "parentUuid": "cb5bc861_73abf34c",
      "range": {
        "startLine": 931,
        "startChar": 9,
        "endLine": 931,
        "endChar": 35
      },
      "revId": "28504885c54d2d6f8d496445c8b5db9439701094",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3a22ff64_b2fa0011",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 16
      },
      "lineNbr": 1942,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-02-19T16:40:23Z",
      "side": 1,
      "message": "under what circumstances do we get here without a program bound? maybe add a comment.",
      "range": {
        "startLine": 1931,
        "startChar": 0,
        "endLine": 1942,
        "endChar": 5
      },
      "revId": "28504885c54d2d6f8d496445c8b5db9439701094",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9575f6a4_b5d3f6a8",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 16
      },
      "lineNbr": 1942,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-02-22T18:37:35Z",
      "side": 1,
      "message": "Added a comment -\n // In case bound program uses shader framebuffer fetch and bound attachments are changed without\n // program change, we update framebuffer fetch mode in Renderpass here.",
      "parentUuid": "3a22ff64_b2fa0011",
      "range": {
        "startLine": 1931,
        "startChar": 0,
        "endLine": 1942,
        "endChar": 5
      },
      "revId": "28504885c54d2d6f8d496445c8b5db9439701094",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ce7be309_c8a69c94",
        "filename": "src/libANGLE/renderer/vulkan/vk_caps_utils.cpp",
        "patchSetId": 16
      },
      "lineNbr": 867,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-02-19T16:40:23Z",
      "side": 1,
      "message": "nit: \u003e\u003d would be safer",
      "range": {
        "startLine": 867,
        "startChar": 36,
        "endLine": 867,
        "endChar": 37
      },
      "revId": "28504885c54d2d6f8d496445c8b5db9439701094",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dcffb0e5_58c7319a",
        "filename": "src/libANGLE/renderer/vulkan/vk_caps_utils.cpp",
        "patchSetId": 16
      },
      "lineNbr": 867,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-02-21T20:17:22Z",
      "side": 1,
      "message": "there are a lot of places with code like -\n 1. for (uint32_t colorIndex \u003d 0; colorIndex \u003c gl::IMPLEMENTATION_MAX_DRAW_BUFFERS; ++colorIndex) -\u003e\n\nif implementation maxDrawBuffers is greater, there is a real chance of incorrect iteration where we leave out indices \u003e \"gl::IMPLEMENTATION_MAX_DRAW_BUFFERS\"\n\n 2. programInterfaceInfo-\u003ecurrentShaderResourceBindingIndex +\u003d gl::IMPLEMENTATION_MAX_DRAW_BUFFERS; -\u003e\n\nthis math will be wrong as well",
      "parentUuid": "ce7be309_c8a69c94",
      "range": {
        "startLine": 867,
        "startChar": 36,
        "endLine": 867,
        "endChar": 37
      },
      "revId": "28504885c54d2d6f8d496445c8b5db9439701094",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "323dc367_3804355e",
        "filename": "src/libANGLE/renderer/vulkan/vk_caps_utils.cpp",
        "patchSetId": 16
      },
      "lineNbr": 867,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-02-23T16:31:44Z",
      "side": 1,
      "message": "I don\u0027t totally follow. You don\u0027t support the ext if there\u0027s more than max draw buffers than ANGLE internally allows? That seems like it should be something we can support. I don\u0027t see why we\u0027d need to iterate into more than we need.",
      "parentUuid": "dcffb0e5_58c7319a",
      "range": {
        "startLine": 867,
        "startChar": 36,
        "endLine": 867,
        "endChar": 37
      },
      "revId": "28504885c54d2d6f8d496445c8b5db9439701094",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}