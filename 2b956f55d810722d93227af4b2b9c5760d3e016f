{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "3bb38786_9219dfb4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2021-11-05T23:21:14Z",
      "side": 1,
      "message": "Still LGTM. Will give Tim a chance to +2 sinc ehe is also on the review list.",
      "revId": "2b956f55d810722d93227af4b2b9c5760d3e016f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e2022864_a31ef33a",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 8
      },
      "lineNbr": 703,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-11-08T03:42:28Z",
      "side": 1,
      "message": "ANGLE prefers to make these types of conditionals return bools:\n\n            bool rangeInvalidate \u003d (access \u0026 GL_MAP_INVALIDATE_RANGE_BIT) !\u003d 0;",
      "revId": "2b956f55d810722d93227af4b2b9c5760d3e016f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dbd9bb7a_568cdb21",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 8
      },
      "lineNbr": 703,
      "author": {
        "id": 1175714
      },
      "writtenOn": "2021-11-08T18:08:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e2022864_a31ef33a",
      "revId": "2b956f55d810722d93227af4b2b9c5760d3e016f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b0939003_3b57e490",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 8
      },
      "lineNbr": 705,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-11-08T03:42:28Z",
      "side": 1,
      "message": "nit: \u0027smallMapRange\u0027\n\nThis value doesn\u0027t rely on the buffer being invalidated.",
      "range": {
        "startLine": 705,
        "startChar": 17,
        "endLine": 705,
        "endChar": 33
      },
      "revId": "2b956f55d810722d93227af4b2b9c5760d3e016f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dd451507_a8c549e2",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 8
      },
      "lineNbr": 705,
      "author": {
        "id": 1175714
      },
      "writtenOn": "2021-11-08T18:08:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b0939003_3b57e490",
      "range": {
        "startLine": 705,
        "startChar": 17,
        "endLine": 705,
        "endChar": 33
      },
      "revId": "2b956f55d810722d93227af4b2b9c5760d3e016f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1e880d83_df2a1a63",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 8
      },
      "lineNbr": 714,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-11-08T03:42:28Z",
      "side": 1,
      "message": "This is never set to true.\n\nGoing further, is this variable necessary?   DynamicShadowBuffer already has a valid().",
      "range": {
        "startLine": 714,
        "startChar": 21,
        "endLine": 714,
        "endChar": 51
      },
      "revId": "2b956f55d810722d93227af4b2b9c5760d3e016f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "adea844f_e0be4914",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 8
      },
      "lineNbr": 714,
      "author": {
        "id": 1175714
      },
      "writtenOn": "2021-11-08T18:08:53Z",
      "side": 1,
      "message": "init() doesn\u0027t make DynamicShadowBuffers valid(), so the user still needs an external variable to track that.",
      "parentUuid": "1e880d83_df2a1a63",
      "range": {
        "startLine": 714,
        "startChar": 21,
        "endLine": 714,
        "endChar": 51
      },
      "revId": "2b956f55d810722d93227af4b2b9c5760d3e016f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0a058772_e0534e75",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 8
      },
      "lineNbr": 715,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-11-08T03:42:28Z",
      "side": 1,
      "message": "Wrap in {}s.",
      "revId": "2b956f55d810722d93227af4b2b9c5760d3e016f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ae23d800_a41f9583",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 8
      },
      "lineNbr": 715,
      "author": {
        "id": 1175714
      },
      "writtenOn": "2021-11-08T18:08:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0a058772_e0534e75",
      "revId": "2b956f55d810722d93227af4b2b9c5760d3e016f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f7f81ec8_2a7baf98",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 8
      },
      "lineNbr": 780,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-11-08T03:42:28Z",
      "side": 1,
      "message": "I haven\u0027t kept up entirely with Charlie\u0027s findings, but are we worried about this introducing additional GPU transfers and causing bubbles?\n\nAside from the perf test, is there a real app/benchmark that this CL should also be checked with?",
      "range": {
        "startLine": 780,
        "startChar": 18,
        "endLine": 780,
        "endChar": 30
      },
      "revId": "2b956f55d810722d93227af4b2b9c5760d3e016f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8acdf663_7a94fac5",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 8
      },
      "lineNbr": 780,
      "author": {
        "id": 1175714
      },
      "writtenOn": "2021-11-08T18:08:53Z",
      "side": 1,
      "message": "I\u0027ve ran all ANGLE traces multiple times before/after this change and don\u0027t see any regressions that weren\u0027t noise.",
      "parentUuid": "f7f81ec8_2a7baf98",
      "range": {
        "startLine": 780,
        "startChar": 18,
        "endLine": 780,
        "endChar": 30
      },
      "revId": "2b956f55d810722d93227af4b2b9c5760d3e016f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5b3a0515_a086fec4",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 8
      },
      "lineNbr": 780,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2021-11-08T20:04:19Z",
      "side": 1,
      "message": "Since right now you only get to here if invalidate range is \u003c1/2, It is a bit arguable we should go down ghost path versus stagedUpdate. It does seems bad if we have to clone entire buffer if user only update very small portion of data, even though I have picked the other direction for setDataImpl. So I am also okay with this. One potential thing we could do in future is that we actually stage it (right now we immediately issue vkCmdCopyBuffer) and then at the time buffer is been referenced, we check if GPU is finished referencing it or not and if yes then use cpu memcpy instead of VkCmdCopyBuffer. Because it is deferred, there is a higher chance we will able to use CPU to do memcpy, which will satisfy both needs (no barrier and less data copy).",
      "parentUuid": "8acdf663_7a94fac5",
      "range": {
        "startLine": 780,
        "startChar": 18,
        "endLine": 780,
        "endChar": 30
      },
      "revId": "2b956f55d810722d93227af4b2b9c5760d3e016f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5890217d_212a1501",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.h",
        "patchSetId": 8
      },
      "lineNbr": 237,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-11-08T03:42:28Z",
      "side": 1,
      "message": "This should be a uint8_t*, since we know we\u0027re mapping bytes.\n\nAlso, I think it would be better to move this into the DynamicShadowBuffer class itself.",
      "range": {
        "startLine": 237,
        "startChar": 4,
        "endLine": 237,
        "endChar": 10
      },
      "revId": "2b956f55d810722d93227af4b2b9c5760d3e016f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "743f383d_5f0f1816",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.h",
        "patchSetId": 8
      },
      "lineNbr": 237,
      "author": {
        "id": 1175714
      },
      "writtenOn": "2021-11-08T18:08:53Z",
      "side": 1,
      "message": "Done for conversion to uint8_t*. However, not sure how best to signal that there\u0027s an invalidate range active (Charlie said to use the mapped ptr to signal it), so keeping the member.",
      "parentUuid": "5890217d_212a1501",
      "range": {
        "startLine": 237,
        "startChar": 4,
        "endLine": 237,
        "endChar": 10
      },
      "revId": "2b956f55d810722d93227af4b2b9c5760d3e016f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}