{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "62f2453b_0289fca4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1543967
      },
      "writtenOn": "2023-05-06T06:35:44Z",
      "side": 1,
      "message": "Shabi, do you remember why we decided to ban transform feedback? Can it cause a render pass break?",
      "revId": "d1786b9cbe80ee3332c87d9e2ef5b63d3a394f8c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a4630bcb_95f74a91",
        "filename": "extensions/ANGLE_shader_pixel_local_storage.txt",
        "patchSetId": 2
      },
      "lineNbr": 344,
      "author": {
        "id": 1394635
      },
      "writtenOn": "2023-05-06T06:48:06Z",
      "side": 1,
      "message": "Similar interactions are needed for `EXT_blend_func_extended`:\n* Ban `*SRC1*` factors when PLS is active\n* Ban use of the extension string in fragment shaders together with PLS",
      "revId": "d1786b9cbe80ee3332c87d9e2ef5b63d3a394f8c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b18a218_41da9495",
        "filename": "extensions/ANGLE_shader_pixel_local_storage.txt",
        "patchSetId": 2
      },
      "lineNbr": 344,
      "author": {
        "id": 1543967
      },
      "writtenOn": "2023-05-08T05:23:34Z",
      "side": 1,
      "message": "Done.\n\nIt\u0027s hard to ban based on extension strings because if the shader does something like:\n\n```\n#extension all : enable\n```\n\nWe probably shouldn\u0027t cause PLS to fail by default because a blend extension was implicitly enabled.\n\nInstead, I updated the compiler to error if a shader *uses* PLS and KHR_blend_equation_advanced together.\n\nI believe there\u0027s nothing to do on the shader side for EXT_blend_func_extended because `gl_SecondaryFrag*` are only defined in the ES 1.00 shading language, whereas PLS is only defined in ES 3.0+.",
      "parentUuid": "a4630bcb_95f74a91",
      "revId": "d1786b9cbe80ee3332c87d9e2ef5b63d3a394f8c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4957da5b_9ace9b2b",
        "filename": "extensions/ANGLE_shader_pixel_local_storage.txt",
        "patchSetId": 2
      },
      "lineNbr": 344,
      "author": {
        "id": 1543967
      },
      "writtenOn": "2023-05-08T06:31:14Z",
      "side": 1,
      "message": "Also, we probably should ban `BindFragDataLocation*EXT` when the program has PLS, but our program objects are not yet set up to do that. Do you mind if we wait to implement that until programs have PLS information?",
      "parentUuid": "2b18a218_41da9495",
      "revId": "d1786b9cbe80ee3332c87d9e2ef5b63d3a394f8c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7c894ab9_4fbfbcb9",
        "filename": "extensions/ANGLE_shader_pixel_local_storage.txt",
        "patchSetId": 2
      },
      "lineNbr": 344,
      "author": {
        "id": 1394635
      },
      "writtenOn": "2023-05-08T06:49:59Z",
      "side": 1,
      "message": "\u003e if the shader does something like...\n\nEnabling (or requiring) all extensions is not allowed in ESSL.\n\n\u003e there\u0027s nothing to do on the shader side for EXT_blend_func_extended\n\nWith ESSL 3.x, this extension adds `index` layout qualifier and allows omitting fragment output bindings; both features should be banned with PLS.",
      "parentUuid": "2b18a218_41da9495",
      "revId": "d1786b9cbe80ee3332c87d9e2ef5b63d3a394f8c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ad3dca7_ab696416",
        "filename": "extensions/ANGLE_shader_pixel_local_storage.txt",
        "patchSetId": 2
      },
      "lineNbr": 344,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-05-08T07:42:47Z",
      "side": 1,
      "message": "\u003e Enabling (or requiring) all extensions is not allowed in ESSL.\n\nAre you sure? I had to deal with `#extension all : enable` in the ANGLE translator in the past.",
      "parentUuid": "7c894ab9_4fbfbcb9",
      "revId": "d1786b9cbe80ee3332c87d9e2ef5b63d3a394f8c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "30d17c7b_ed2f565c",
        "filename": "extensions/ANGLE_shader_pixel_local_storage.txt",
        "patchSetId": 2
      },
      "lineNbr": 344,
      "author": {
        "id": 1394635
      },
      "writtenOn": "2023-05-08T07:51:03Z",
      "side": 1,
      "message": "https://chromium.googlesource.com/angle/angle/+/main/src/compiler/translator/DirectiveHandler.cpp#132",
      "parentUuid": "7ad3dca7_ab696416",
      "revId": "d1786b9cbe80ee3332c87d9e2ef5b63d3a394f8c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "05c7f7c7_1f836885",
        "filename": "extensions/ANGLE_shader_pixel_local_storage.txt",
        "patchSetId": 2
      },
      "lineNbr": 344,
      "author": {
        "id": 1543967
      },
      "writtenOn": "2023-05-08T07:55:33Z",
      "side": 1,
      "message": "I think this still allows for \n\n```\n#extension all : warn\n```\n\nWhich is tested here: https://chromium.googlesource.com/angle/angle/+/main/src/tests/gl_tests/PixelLocalStorageTest.cpp#4892\n\nIs this a mistake?",
      "parentUuid": "30d17c7b_ed2f565c",
      "revId": "d1786b9cbe80ee3332c87d9e2ef5b63d3a394f8c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "386bb468_bef43edb",
        "filename": "extensions/ANGLE_shader_pixel_local_storage.txt",
        "patchSetId": 2
      },
      "lineNbr": 344,
      "author": {
        "id": 1394635
      },
      "writtenOn": "2023-05-08T08:37:48Z",
      "side": 1,
      "message": "That test is correct; `all : warn` is indeed the edge case here.\n\nNevertheless, the PLS extension should define whether the following shader and its variations are valid:\n```\n#extension all : warn\nlayout(binding\u003d0, rgba8) uniform lowp pixelLocalANGLE plane1;\nlayout(location\u003d0, index\u003d1) out vec4 outColor1;\n```",
      "parentUuid": "05c7f7c7_1f836885",
      "revId": "d1786b9cbe80ee3332c87d9e2ef5b63d3a394f8c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bb4fadeb_1dc09459",
        "filename": "extensions/ANGLE_shader_pixel_local_storage.txt",
        "patchSetId": 2
      },
      "lineNbr": 344,
      "author": {
        "id": 1543967
      },
      "writtenOn": "2023-05-08T17:39:07Z",
      "side": 1,
      "message": "I am unable to fully implement the EXT_blend_func_extended interaction due to https://bugs.chromium.org/p/angleproject/issues/detail?id\u003d8158 , but I\u0027ve added the spec wording and a currently-disabled unit test. I can finish the implementation once that bug is resolved.",
      "parentUuid": "386bb468_bef43edb",
      "revId": "d1786b9cbe80ee3332c87d9e2ef5b63d3a394f8c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fe5b3d2f_3dd543ab",
        "filename": "extensions/ANGLE_shader_pixel_local_storage.txt",
        "patchSetId": 2
      },
      "lineNbr": 344,
      "author": {
        "id": 1394635
      },
      "writtenOn": "2023-05-08T19:49:10Z",
      "side": 1,
      "message": "To fix the bug please add the following to `GenerateMinimumCaps` in `src/libANGLE/Caps.cpp`, somewhere near `if (extensions.textureRectangleANGLE)`:\n```\nif (extensions.blendFuncExtendedEXT)\n{\n    caps.maxDualSourceDrawBuffers \u003d 1;\n}\n```",
      "parentUuid": "bb4fadeb_1dc09459",
      "revId": "d1786b9cbe80ee3332c87d9e2ef5b63d3a394f8c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ea10ddcd_f73e2a2b",
        "filename": "extensions/ANGLE_shader_pixel_local_storage.txt",
        "patchSetId": 2
      },
      "lineNbr": 344,
      "author": {
        "id": 1543967
      },
      "writtenOn": "2023-05-09T03:21:53Z",
      "side": 1,
      "message": "Oh awesome! Thanks Alexey!\n\nI think this is all hooked up now.",
      "parentUuid": "fe5b3d2f_3dd543ab",
      "revId": "d1786b9cbe80ee3332c87d9e2ef5b63d3a394f8c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bfe18a46_fe0dce87",
        "filename": "extensions/ANGLE_shader_pixel_local_storage.txt",
        "patchSetId": 2
      },
      "lineNbr": 344,
      "author": {
        "id": 1543967
      },
      "writtenOn": "2023-05-09T16:06:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ea10ddcd_f73e2a2b",
      "revId": "d1786b9cbe80ee3332c87d9e2ef5b63d3a394f8c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}