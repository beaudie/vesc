{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "8a9d778d_7b611d8f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-09-03T03:36:53Z",
      "side": 1,
      "message": "Verified with a bogus implementation on SwiftShader. Found a spec bug that\u0027s causing VVL to complain about it, but a fix is in progress: https://gitlab.khronos.org/vulkan/vulkan/-/merge_requests/5392\n\nUnfortunately this won\u0027t get CQ testing, but an upcoming driver change in Fuchsia will require this.",
      "revId": "4237df8bb908bb8d020fe54f613cc62a17fb898b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "573ef1a1_1a2eae72",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2022-09-06T18:32:17Z",
      "side": 1,
      "message": "Is there test for GOOGLEX, or switch existing test to use GOOGLEX?",
      "revId": "4237df8bb908bb8d020fe54f613cc62a17fb898b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e60a96b0_e61e72d7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-09-06T18:52:32Z",
      "side": 1,
      "message": "There are numerous MSRTT tests that will automatically pick up emulation, GOOGLEX, or EXT based on device support. Unfortunately we don\u0027t have any devices with support for the ext, so this is untested in CI.\n\nGOOGLEX is tested by Fuchsia on ANGLE rolls, EXT _will be_ similarly done by that team on a future driver update. I locally tested ANGLE\u0027s implementation + VVL on a bogus implementation on top of SwiftShader.",
      "parentUuid": "573ef1a1_1a2eae72",
      "revId": "4237df8bb908bb8d020fe54f613cc62a17fb898b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d2781945_4e4a9606",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "patchSetId": 3
      },
      "lineNbr": 799,
      "author": {
        "id": 1520902
      },
      "writtenOn": "2022-09-06T18:02:18Z",
      "side": 1,
      "message": "What is the major difference between `VkMultisampledRenderToSingleSampledInfoEXT` and `VkMultisampledRenderToSingleSampledInfoGOOGLEX`?",
      "revId": "4237df8bb908bb8d020fe54f613cc62a17fb898b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ca8a2967_f5ba6bf3",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "patchSetId": 3
      },
      "lineNbr": 799,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-09-06T18:52:32Z",
      "side": 1,
      "message": "GOOGLEX is the WIP version we shipped on Fuchsia. The spec changed in the meantime. The visible difference here is that GOOGLEX has the resolve modes specified together with rasterization samples inside VkMSRTSS, while in EXT the rasterization samples is specified in VKMSRTSS, while the resolve modes are specified in VkSubpassDescriptionDepthStencilResolve.",
      "parentUuid": "d2781945_4e4a9606",
      "revId": "4237df8bb908bb8d020fe54f613cc62a17fb898b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "06af0234_69949af0",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "patchSetId": 3
      },
      "lineNbr": 799,
      "author": {
        "id": 1520902
      },
      "writtenOn": "2022-09-06T20:29:10Z",
      "side": 1,
      "message": "I see, so their functionality is the same, it\u0027s how we specify properties like `resolve modes` and `rasterization samples` are different.",
      "parentUuid": "ca8a2967_f5ba6bf3",
      "revId": "4237df8bb908bb8d020fe54f613cc62a17fb898b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9c93c132_bcce3807",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "patchSetId": 3
      },
      "lineNbr": 799,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-09-06T20:37:47Z",
      "side": 1,
      "message": "Yes!",
      "parentUuid": "06af0234_69949af0",
      "revId": "4237df8bb908bb8d020fe54f613cc62a17fb898b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:approval_code-owners"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "4237df8bb908bb8d020fe54f613cc62a17fb898b",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "4237df8bb908bb8d020fe54f613cc62a17fb898b",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "4237df8bb908bb8d020fe54f613cc62a17fb898b",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "4237df8bb908bb8d020fe54f613cc62a17fb898b",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}