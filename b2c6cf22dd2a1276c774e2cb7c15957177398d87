{
  "comments": [
    {
      "key": {
        "uuid": "a6d5b15b_463d0bb0",
        "filename": "src/compiler/translator/TranslatorVulkan.cpp",
        "patchSetId": 3
      },
      "lineNbr": 54,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2018-04-19T11:56:08Z",
      "side": 1,
      "message": "This does not seem to be catching cases where the declarator is an init expression.",
      "range": {
        "startLine": 54,
        "startChar": 8,
        "endLine": 54,
        "endChar": 37
      },
      "revId": "b2c6cf22dd2a1276c774e2cb7c15957177398d87",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc6adf87_436342e3",
        "filename": "src/compiler/translator/TranslatorVulkan.cpp",
        "patchSetId": 3
      },
      "lineNbr": 54,
      "author": {
        "id": 1262827
      },
      "writtenOn": "2018-04-19T12:04:34Z",
      "side": 1,
      "message": "It does catch it, but the getAsSymbolNode() returns a null pointer. I see what\u0027s wrong now and I\u0027ll work on that.",
      "parentUuid": "a6d5b15b_463d0bb0",
      "range": {
        "startLine": 54,
        "startChar": 8,
        "endLine": 54,
        "endChar": 37
      },
      "revId": "b2c6cf22dd2a1276c774e2cb7c15957177398d87",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9fbb9c31_be8a29e3",
        "filename": "src/compiler/translator/TranslatorVulkan.cpp",
        "patchSetId": 3
      },
      "lineNbr": 68,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2018-04-19T08:30:58Z",
      "side": 1,
      "message": "nit: \"can also have\"",
      "range": {
        "startLine": 68,
        "startChar": 54,
        "endLine": 68,
        "endChar": 63
      },
      "revId": "b2c6cf22dd2a1276c774e2cb7c15957177398d87",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "695c0661_6d197dee",
        "filename": "src/compiler/translator/TranslatorVulkan.cpp",
        "patchSetId": 3
      },
      "lineNbr": 68,
      "author": {
        "id": 1262827
      },
      "writtenOn": "2018-04-19T11:21:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9fbb9c31_be8a29e3",
      "range": {
        "startLine": 68,
        "startChar": 54,
        "endLine": 68,
        "endChar": 63
      },
      "revId": "b2c6cf22dd2a1276c774e2cb7c15957177398d87",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "455e0004_58d6d8c0",
        "filename": "src/compiler/translator/TranslatorVulkan.cpp",
        "patchSetId": 3
      },
      "lineNbr": 71,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-04-18T20:01:44Z",
      "side": 1,
      "message": "nit: can you swap out auto with simple type names even if they\u0027re RHS is evident?",
      "range": {
        "startLine": 71,
        "startChar": 16,
        "endLine": 71,
        "endChar": 20
      },
      "revId": "b2c6cf22dd2a1276c774e2cb7c15957177398d87",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3bcdd29e_c0ebf195",
        "filename": "src/compiler/translator/TranslatorVulkan.cpp",
        "patchSetId": 3
      },
      "lineNbr": 71,
      "author": {
        "id": 1262827
      },
      "writtenOn": "2018-04-19T11:21:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "455e0004_58d6d8c0",
      "range": {
        "startLine": 71,
        "startChar": 16,
        "endLine": 71,
        "endChar": 20
      },
      "revId": "b2c6cf22dd2a1276c774e2cb7c15957177398d87",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f3b28e9e_7b9357c9",
        "filename": "src/compiler/translator/TranslatorVulkan.cpp",
        "patchSetId": 3
      },
      "lineNbr": 78,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-04-18T20:01:44Z",
      "side": 1,
      "message": "seems reasonable, I wonder if Olli has any suggestions for making this a bit shorter",
      "range": {
        "startLine": 73,
        "startChar": 0,
        "endLine": 78,
        "endChar": 83
      },
      "revId": "b2c6cf22dd2a1276c774e2cb7c15957177398d87",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5463305b_653953b7",
        "filename": "src/compiler/translator/TranslatorVulkan.cpp",
        "patchSetId": 3
      },
      "lineNbr": 78,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2018-04-19T08:30:58Z",
      "side": 1,
      "message": "This is not entirely correct - what you end up with here is the declaration pointing to one TVariable and then all other references to the same original variable pointing to a different TVariable. This could cause references to the same variable to get treated as different variables later on.\n\nAlso it looks like this code loses the initializer - I\u0027m not sure why the test still seems to pass. Maybe manually take a look at the output GLSL of the test to check if it is in line with expectations.\n\nYou should use ReplaceVariable instead to handle all the cases correctly and make sure that references to variables stay consistent. In here you can add all the variables to be replaced to a list, and call ReplaceVariable on every variable in that list after this traversal is done. It could be more efficient but we can address optimizing it separately.",
      "parentUuid": "f3b28e9e_7b9357c9",
      "range": {
        "startLine": 73,
        "startChar": 0,
        "endLine": 78,
        "endChar": 83
      },
      "revId": "b2c6cf22dd2a1276c774e2cb7c15957177398d87",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "67e27c4d_8ebb8758",
        "filename": "src/compiler/translator/TranslatorVulkan.cpp",
        "patchSetId": 3
      },
      "lineNbr": 78,
      "author": {
        "id": 1262827
      },
      "writtenOn": "2018-04-19T11:21:15Z",
      "side": 1,
      "message": "I will try your suggestion for the replacement of the variable it makes a lot of sense.\n\nFor the initializer though, I\u0027m not losing it and I did check the output GLSL: \n\nlayout(location \u003d 0) out vec4 webgl_FragColor;\nstruct _uS {\nfloat _ua;\n} _us \u003d _uS(1.0);\nvoid main(){\n(webgl_FragColor \u003d vec4(0.0, 0.0, 0.0, 1.0));\n(webgl_FragColor.x +\u003d _us._ua);\n}",
      "parentUuid": "5463305b_653953b7",
      "range": {
        "startLine": 73,
        "startChar": 0,
        "endLine": 78,
        "endChar": 83
      },
      "revId": "b2c6cf22dd2a1276c774e2cb7c15957177398d87",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2176f2c9_f7272e66",
        "filename": "src/compiler/translator/TranslatorVulkan.cpp",
        "patchSetId": 3
      },
      "lineNbr": 78,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2018-04-19T11:25:18Z",
      "side": 1,
      "message": "Oh, now I realize what\u0027s wrong, it looks like you\u0027re not splitting the struct declaration from the variable declaration in this case either. The reason might be that the type of the declarator doesn\u0027t have \"isStructSpecifier\" set in case the declarator is an init expression. You\u0027ll probably need to check the \"isStructSpecifier\" from the LHS of the init expression in this case.",
      "parentUuid": "67e27c4d_8ebb8758",
      "range": {
        "startLine": 73,
        "startChar": 0,
        "endLine": 78,
        "endChar": 83
      },
      "revId": "b2c6cf22dd2a1276c774e2cb7c15957177398d87",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8b678466_9d09074d",
        "filename": "src/compiler/translator/TranslatorVulkan.cpp",
        "patchSetId": 3
      },
      "lineNbr": 78,
      "author": {
        "id": 1262827
      },
      "writtenOn": "2018-04-19T11:44:40Z",
      "side": 1,
      "message": "I\u0027m not sure I understand what you mean with \"You\u0027ll probably need to check the \"isStructSpecifier\" from the LHS of the init expression in this case.\"\n\nIt is not clear to me what is wrong here since I\u0027m manually setting \"isStructSpecifier\" to false in the TIntermDeclaration, when its going to get traversed next time, its just going to declare the struct variable as it should since its not a specifier anymore.\n\nCan you elaborate a little bit please?",
      "parentUuid": "2176f2c9_f7272e66",
      "range": {
        "startLine": 73,
        "startChar": 0,
        "endLine": 78,
        "endChar": 83
      },
      "revId": "b2c6cf22dd2a1276c774e2cb7c15957177398d87",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e7110348_00a7dfd4",
        "filename": "src/compiler/translator/TranslatorVulkan.cpp",
        "patchSetId": 3
      },
      "lineNbr": 78,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2018-04-19T11:56:08Z",
      "side": 1,
      "message": "The intent of this traverser is to put the declarations of struct types in the beginning of the shader, right? Right now it\u0027s not doing it for declarations that both declare a struct type and initialize a variable with that type. See comment above.\n\nTry to use a shader with both a struct declaration with an initializer and a uniform declared with the same struct in the test to cover this. Something like this I suggested on the bug:\n\n\"out vec4 outColor;\nstruct S { float a; } s \u003d S(1.0);\nuniform S us;\nvoid main() {\n    s.a +\u003d us.a;\n    outColor \u003d vec4(us.a + s.a);\n}\"",
      "parentUuid": "8b678466_9d09074d",
      "range": {
        "startLine": 73,
        "startChar": 0,
        "endLine": 78,
        "endChar": 83
      },
      "revId": "b2c6cf22dd2a1276c774e2cb7c15957177398d87",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ac390d6_0815e384",
        "filename": "src/compiler/translator/TranslatorVulkan.cpp",
        "patchSetId": 3
      },
      "lineNbr": 78,
      "author": {
        "id": 1262827
      },
      "writtenOn": "2018-04-19T12:04:34Z",
      "side": 1,
      "message": "Ok I understand the difference now, thank you.",
      "parentUuid": "e7110348_00a7dfd4",
      "range": {
        "startLine": 73,
        "startChar": 0,
        "endLine": 78,
        "endChar": 83
      },
      "revId": "b2c6cf22dd2a1276c774e2cb7c15957177398d87",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}