{
  "comments": [
    {
      "key": {
        "uuid": "c3c1b8e4_173fae72",
        "filename": "src/libANGLE/renderer/vulkan/vk_caps_utils.cpp",
        "patchSetId": 1
      },
      "lineNbr": 451,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-02-25T04:30:24Z",
      "side": 1,
      "message": "Per our style:\n\n    constexpr ... kReserved...",
      "range": {
        "startLine": 451,
        "startChar": 4,
        "endLine": 451,
        "endChar": 20
      },
      "revId": "72803ef90ddb4d89efeacc735f5cc80d040221e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ebcd8490_e56a41a1",
        "filename": "src/libANGLE/renderer/vulkan/vk_caps_utils.cpp",
        "patchSetId": 1
      },
      "lineNbr": 463,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-02-25T04:30:24Z",
      "side": 1,
      "message": "You could simplify this expression by accumulating all in `reservedVaryingVectorCount`, like:\n\n    // Comment on why 1\n    constexpr GLint kReservedVaryingVectorForGLLineRasterization \u003d 1;\n    // Comment on why 2\n    constexpr GLint kReservedVaryingVectorForTransformFeedbackExtension \u003d 2;\n\n    if (getFeatures().basicGLLineRasterization.enabled)\n    {\n        reservedVaryingVectorCount +\u003d kRservedVaryingForGLLineRasterization;\n    }\n    if (getFeatures().supportsTransformFeedbackExtension.enabled)\n    {\n        reservedVaryingVectorCount +\u003d kReservedVaryingForTransformFeedbackExtension;\n    }",
      "range": {
        "startLine": 462,
        "startChar": 70,
        "endLine": 463,
        "endChar": 96
      },
      "revId": "72803ef90ddb4d89efeacc735f5cc80d040221e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}