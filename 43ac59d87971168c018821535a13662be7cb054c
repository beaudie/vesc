{
  "comments": [
    {
      "key": {
        "uuid": "025cbd3b_47c5f6d8",
        "filename": "src/tests/test_expectations/GPUTestConfig.cpp",
        "patchSetId": 1
      },
      "lineNbr": 337,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-04-12T18:37:34Z",
      "side": 1,
      "message": "This doesn\u0027t match the implementation now.",
      "range": {
        "startLine": 334,
        "startChar": 0,
        "endLine": 337,
        "endChar": 0
      },
      "revId": "43ac59d87971168c018821535a13662be7cb054c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8939956e_fac97429",
        "filename": "src/tests/test_expectations/GPUTestConfig.cpp",
        "patchSetId": 1
      },
      "lineNbr": 337,
      "author": {
        "id": 1326275
      },
      "writtenOn": "2019-04-15T16:56:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "025cbd3b_47c5f6d8",
      "range": {
        "startLine": 334,
        "startChar": 0,
        "endLine": 337,
        "endChar": 0
      },
      "revId": "43ac59d87971168c018821535a13662be7cb054c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fd000bda_11632a74",
        "filename": "src/tests/test_expectations/GPUTestConfig.cpp",
        "patchSetId": 1
      },
      "lineNbr": 347,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-04-12T18:37:34Z",
      "side": 1,
      "message": "I\u0027m not sure how activeGPU is determined, but I know that primaryGPU detection is broken, at least on Windows.\nWhen I had to make an NVIDIA-specific change, I\u0027ve checked whether any of the GPUs is NVIDIA.\nSee in SystemInfo:\n    bool hasNVIDIAGPU() const;\n    bool hasIntelGPU() const;\n    bool hasAMDGPU() const;\n\nWhat do you think if we make the expectations apply if any of the GPUs matches the expectation?",
      "range": {
        "startLine": 347,
        "startChar": 20,
        "endLine": 347,
        "endChar": 35
      },
      "revId": "43ac59d87971168c018821535a13662be7cb054c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "68d21173_5e6b12a7",
        "filename": "src/tests/test_expectations/GPUTestConfig.cpp",
        "patchSetId": 1
      },
      "lineNbr": 347,
      "author": {
        "id": 1326275
      },
      "writtenOn": "2019-04-12T21:05:00Z",
      "side": 1,
      "message": "I think that could be a good idea. But in this case the Mac AMD tester has both AMD and Intel GPUs, and these tests pass on Mac Intel, so we\u0027d get some false FAIL expectations.\n\nWhat do you mean primary GPU detection is broken on windows? It seems to work for the windows dEQP testers.",
      "parentUuid": "fd000bda_11632a74",
      "range": {
        "startLine": 347,
        "startChar": 20,
        "endLine": 347,
        "endChar": 35
      },
      "revId": "43ac59d87971168c018821535a13662be7cb054c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "da89ab32_c2735c62",
        "filename": "src/tests/test_expectations/GPUTestConfig.cpp",
        "patchSetId": 1
      },
      "lineNbr": 347,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-04-12T21:36:33Z",
      "side": 1,
      "message": "Well, on my Intel/NVIDIA laptop it always returns Intel.\nI think it does it based on what GPU the display is connected to, and not on which one is used for 3D graphics.\n\nYes, false FAIL expectations are not a so good thing, since this will not allow us to catch regressions on platforms where the test is passing. (Though this still would be better than red bots).\n\nMaybe would could check if primaryGPUIndex returns what we expect on the bots that we have on the waterfall. I recall Corentin had gpu_info_tests or something running on the bots.",
      "parentUuid": "68d21173_5e6b12a7",
      "range": {
        "startLine": 347,
        "startChar": 20,
        "endLine": 347,
        "endChar": 35
      },
      "revId": "43ac59d87971168c018821535a13662be7cb054c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "50ec9201_449e4236",
        "filename": "src/tests/test_expectations/GPUTestConfig.cpp",
        "patchSetId": 1
      },
      "lineNbr": 347,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-04-12T21:41:37Z",
      "side": 1,
      "message": "These are info_collection_tests. The don\u0027t print primary GPU, though.\nActually, angle_end2end_tests print primary GPU.\nCould you please check if they print what\u0027s expected on all the bots.\nI\u0027m OK with this change if they do.\nAnd the function name is fixed.",
      "parentUuid": "da89ab32_c2735c62",
      "range": {
        "startLine": 347,
        "startChar": 20,
        "endLine": 347,
        "endChar": 35
      },
      "revId": "43ac59d87971168c018821535a13662be7cb054c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ce81d907_9e8e2d06",
        "filename": "src/tests/test_expectations/GPUTestConfig.cpp",
        "patchSetId": 1
      },
      "lineNbr": 347,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-04-15T12:57:54Z",
      "side": 1,
      "message": "end2end_tests and white box tests both print system info. According to correspondence from Kimmo from NVIDIA checking D3D11 descriptors is the only reliable way to detect the active/primary GPU on Windows. But Windows is kind of a separate problem from this CL.",
      "parentUuid": "50ec9201_449e4236",
      "range": {
        "startLine": 347,
        "startChar": 20,
        "endLine": 347,
        "endChar": 35
      },
      "revId": "43ac59d87971168c018821535a13662be7cb054c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "723090f1_406c3f93",
        "filename": "src/tests/test_expectations/GPUTestConfig.cpp",
        "patchSetId": 1
      },
      "lineNbr": 347,
      "author": {
        "id": 1326275
      },
      "writtenOn": "2019-04-15T16:56:06Z",
      "side": 1,
      "message": "Just verified all the bots, primary GPU will work.\nPrimary GPU on all platforms is just a heuristic to choose the non-intel GPU: https://cs.chromium.org/chromium/src/third_party/angle/src/gpu_info_util/SystemInfo.cpp?q\u003dSystemInfo.cpp\u0026sq\u003dpackage:chromium\u0026dr\u003dC\u0026l\u003d241\nThat makes me curious as to why it doesn\u0027t work on your laptop.\nActive GPU on Mac just returns the main display GPU, my bad for not checking. It doesn\u0027t look like active GPU is implemented anywhere else, so I\u0027m removing that altogether from this function.",
      "parentUuid": "ce81d907_9e8e2d06",
      "range": {
        "startLine": 347,
        "startChar": 20,
        "endLine": 347,
        "endChar": 35
      },
      "revId": "43ac59d87971168c018821535a13662be7cb054c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c7f61847_178f87eb",
        "filename": "src/tests/test_expectations/GPUTestConfig.cpp",
        "patchSetId": 1
      },
      "lineNbr": 347,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-04-15T16:58:50Z",
      "side": 1,
      "message": "That heuristic gets overridden in https://cs.chromium.org/chromium/src/third_party/angle/src/gpu_info_util/SystemInfo_win.cpp?sq\u003dpackage:chromium\u0026dr\u003dC\u0026g\u003d0\u0026l\u003d238.\n\nBut if this works on all the bots, this is a good solution.",
      "parentUuid": "723090f1_406c3f93",
      "range": {
        "startLine": 347,
        "startChar": 20,
        "endLine": 347,
        "endChar": 35
      },
      "revId": "43ac59d87971168c018821535a13662be7cb054c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}