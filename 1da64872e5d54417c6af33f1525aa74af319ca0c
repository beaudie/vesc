{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f79fb1da_8a4e790d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-11-20T20:01:39Z",
      "side": 1,
      "message": "W",
      "revId": "1da64872e5d54417c6af33f1525aa74af319ca0c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "78092fce_7b2d97e1",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 2
      },
      "lineNbr": 171,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-11-20T05:42:47Z",
      "side": 1,
      "message": "I\u0027m not entirely sure this is correct.\n\nThere\u0027s also the D/S feedback loop code that unconditionally uses the DepthStencilReadOnly layout for the texture. I _think_ that\u0027s fine because the layout will be correctly set to DepthStencilReadOnly or DepthStencilReadOnlyWithStore at the end of RP through the attachment. Not 100% sure either.\n\nThere\u0027s a failure with D/S feedback loop, so obviously something\u0027s not right. WDYT of any of this Charlie?\n\nAn alternative to this solution I can think of is a hacky ImageHelper::mExtraSrcAccessMask that would accumulate VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT despite the layout being DepthStencilReadOnly, and when transitioning out of the layout, add mExtraSrcAccessMask to the srcAccessMask.",
      "range": {
        "startLine": 171,
        "startChar": 28,
        "endLine": 171,
        "endChar": 36
      },
      "revId": "1da64872e5d54417c6af33f1525aa74af319ca0c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ca005f48_6988319b",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 2
      },
      "lineNbr": 171,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-11-20T05:48:27Z",
      "side": 1,
      "message": "Well, indeed the bot failure turned out to be due to the texture setting the layout to DepthStencilReadOnly and endRP setting it to DepthStencilReadOnlyWithStore, which to ANGLE are different layouts, so it generates a duplicate barrier.\n\nA third alternative is to be conservative and make DepthStencilReadOnly have srcAccessMask \u003d VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT unconditionally. It will be unnecessary especially with storeOp\u003dNONE, but maybe the perf impact is negligible?",
      "parentUuid": "78092fce_7b2d97e1",
      "range": {
        "startLine": 171,
        "startChar": 28,
        "endLine": 171,
        "endChar": 36
      },
      "revId": "1da64872e5d54417c6af33f1525aa74af319ca0c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ceac1e9c_70bd2894",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 2
      },
      "lineNbr": 171,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-11-20T17:39:50Z",
      "side": 1,
      "message": "mExtraSrcAccessMask or the third alternative all sounds good to me. Maybe we should file a bug for Khronos that spec allows write access with readOnly layout. The NoStore seems makes more sense to me.",
      "parentUuid": "ca005f48_6988319b",
      "range": {
        "startLine": 171,
        "startChar": 28,
        "endLine": 171,
        "endChar": 36
      },
      "revId": "1da64872e5d54417c6af33f1525aa74af319ca0c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a997706b_67f21579",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 2
      },
      "lineNbr": 171,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-11-20T20:01:39Z",
      "side": 1,
      "message": "Extra write bit SGTM for the time being. Can check with ARM/IMG to see if there\u0027s any real perf concern.",
      "parentUuid": "ceac1e9c_70bd2894",
      "range": {
        "startLine": 171,
        "startChar": 28,
        "endLine": 171,
        "endChar": 36
      },
      "revId": "1da64872e5d54417c6af33f1525aa74af319ca0c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "09eea04b_b2084b3f",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 2
      },
      "lineNbr": 171,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-11-24T16:58:16Z",
      "side": 1,
      "message": "Done. (although :barf:)\n\nThere\u0027s another sync with read-only D/S that I don\u0027t think can be fixed at all if NONE is not available:\n\n- Start RP\n- Draw with read-only depth attachment\n- Draw with read-only depth texture\n- End RP, storeOp!\u003dNONE\n\nsyncval complains that the second draw is doing read-after-write because of the storeOp.",
      "parentUuid": "a997706b_67f21579",
      "range": {
        "startLine": 171,
        "startChar": 28,
        "endLine": 171,
        "endChar": 36
      },
      "revId": "1da64872e5d54417c6af33f1525aa74af319ca0c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}