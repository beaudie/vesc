{
  "comments": [
    {
      "key": {
        "uuid": "91a48980_683434e6",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 4
      },
      "lineNbr": 264,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2017-08-30T15:40:16Z",
      "side": 1,
      "message": "Why || displayExtensions.createContextRobustness? It seems that only for context creates with RobustAccess we know for sure that we don\u0027t need the validation. This would also allow keeping the tests.",
      "revId": "138245c60ececb9f07b73518ba4536f9e12c0e89",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "80923d64_f8d8a36d",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 4
      },
      "lineNbr": 264,
      "author": {
        "id": 1165541
      },
      "writtenOn": "2017-08-31T12:00:59Z",
      "side": 1,
      "message": "From https://cs.chromium.org/chromium/src/third_party/angle/src/libANGLE/Display.cpp?q\u003dDisplay.cpp\u0026dr\u003dC\u0026l\u003d495, we can see that attribs is always empty. So I think passing the actual attribs should be in the TODO list? Here createContextRobustness will indicate whether it has extension \u0027GLX_ARB_create_context_robustness\u0027 which includes the robust buffer access.",
      "parentUuid": "91a48980_683434e6",
      "revId": "138245c60ececb9f07b73518ba4536f9e12c0e89",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9efe3c17_97423b5b",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 4
      },
      "lineNbr": 264,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2017-08-31T15:03:47Z",
      "side": 1,
      "message": "This is only the creation of a dummy context, real contexts are created here: https://cs.chromium.org/chromium/src/third_party/angle/src/libANGLE/Display.cpp?q\u003ddisplay.cpp\u0026dr\u003dC\u0026l\u003d758\n\ndisplayExtensions.createContextRobustness only indicates that the robustness extension is exposed, not that the context is created with the robust flags.  You should only check that the flag to create the context is present (it\u0027s validated here: https://cs.chromium.org/chromium/src/third_party/angle/src/libANGLE/validationEGL.cpp?q\u003dvalidationegl.cpp\u0026dr\u003dC\u0026l\u003d611)",
      "parentUuid": "80923d64_f8d8a36d",
      "revId": "138245c60ececb9f07b73518ba4536f9e12c0e89",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bb5cc1ae_09ed5093",
        "filename": "src/libANGLE/ContextState.h",
        "patchSetId": 4
      },
      "lineNbr": 115,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2017-08-30T15:40:16Z",
      "side": 1,
      "message": "nit: hasRobustBufferAccess",
      "revId": "138245c60ececb9f07b73518ba4536f9e12c0e89",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cfc6f4fa_3eb2a07d",
        "filename": "src/libANGLE/ContextState.h",
        "patchSetId": 4
      },
      "lineNbr": 115,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2017-08-30T20:07:41Z",
      "side": 1,
      "message": "This should not be needed with the change below.  Just check getExtensions().robustBufferAccess",
      "parentUuid": "bb5cc1ae_09ed5093",
      "revId": "138245c60ececb9f07b73518ba4536f9e12c0e89",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6fc31ee4_da7dfae0",
        "filename": "src/libANGLE/ContextState.h",
        "patchSetId": 4
      },
      "lineNbr": 115,
      "author": {
        "id": 1165541
      },
      "writtenOn": "2017-08-31T12:00:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cfc6f4fa_3eb2a07d",
      "revId": "138245c60ececb9f07b73518ba4536f9e12c0e89",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "98cb2ca4_dacf8cbd",
        "filename": "src/libANGLE/ContextState.h",
        "patchSetId": 4
      },
      "lineNbr": 142,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2017-08-30T20:07:41Z",
      "side": 1,
      "message": "Instead of storing it here, you need to add a bool to gl::Extensions for the KHR_robust_buffer_access_behavior extension and initialize it to true in gl::Context::initCaps iff the backend supports it and robustness is requested.  You will need to initialize it in the backends in the GenerateCaps functions in renderer9_utils.cpp, renderer11_utils.cpp and renderergl_utils.cpp.",
      "range": {
        "startLine": 142,
        "startChar": 4,
        "endLine": 142,
        "endChar": 23
      },
      "revId": "138245c60ececb9f07b73518ba4536f9e12c0e89",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1321f4c6_61fdb449",
        "filename": "src/libANGLE/ContextState.h",
        "patchSetId": 4
      },
      "lineNbr": 142,
      "author": {
        "id": 1165541
      },
      "writtenOn": "2017-08-31T12:00:59Z",
      "side": 1,
      "message": "Done. Thanks for your suggestion.",
      "parentUuid": "98cb2ca4_dacf8cbd",
      "range": {
        "startLine": 142,
        "startChar": 4,
        "endLine": 142,
        "endChar": 23
      },
      "revId": "138245c60ececb9f07b73518ba4536f9e12c0e89",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}