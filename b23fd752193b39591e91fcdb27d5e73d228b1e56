{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "4a74cf4b_82545c3d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2021-05-12T19:57:07Z",
      "side": 1,
      "message": "I didn\u0027t go as deep on this CL as the previous.  There aren\u0027t enough hours in the day to keep up with your commits and I\u0027m holding you back.  In the interest of moving this prototype forward quickly, LGTM but I didn\u0027t scrutinize every line.",
      "revId": "b23fd752193b39591e91fcdb27d5e73d228b1e56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d090da42_ad07c93e",
        "filename": "src/libANGLE/renderer/CLDeviceImpl.h",
        "patchSetId": 4
      },
      "lineNbr": 72,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-05-12T16:42:17Z",
      "side": 1,
      "message": "would rather you pass these around than cache them. If you want to share state between the impl and top-level object, use the ObjectState design we use in ANGLE. See pretty much any front-end class for an example.",
      "range": {
        "startLine": 71,
        "startChar": 0,
        "endLine": 72,
        "endChar": 32
      },
      "revId": "b23fd752193b39591e91fcdb27d5e73d228b1e56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f6a38875_17f026d2",
        "filename": "src/libANGLE/renderer/CLDeviceImpl.h",
        "patchSetId": 4
      },
      "lineNbr": 72,
      "author": {
        "id": 1499132
      },
      "writtenOn": "2021-05-12T19:40:40Z",
      "side": 1,
      "message": "Ok, I won\u0027t cache them and will use references to the front end objects instead. But I don\u0027t see the benefit of the ObjectState design, other than that it might be a better understandable match to OpenGL\u0027s state machine (which doesn\u0027t apply to OpenCL). Is there a design doc for the ObjectState?",
      "parentUuid": "d090da42_ad07c93e",
      "range": {
        "startLine": 71,
        "startChar": 0,
        "endLine": 72,
        "endChar": 32
      },
      "revId": "b23fd752193b39591e91fcdb27d5e73d228b1e56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "06907552_2bb115a0",
        "filename": "src/libANGLE/renderer/CLDeviceImpl.h",
        "patchSetId": 4
      },
      "lineNbr": 72,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-05-12T20:37:35Z",
      "side": 1,
      "message": "We have this: https://docs.google.com/document/d/17mxRfzXuEWyvGM3t2KqVY4svvfRj_GzysOEpmnDpqeo/edit?usp\u003dsharing\n\nThere may be another doc where this is discussed, but I couldn\u0027t find one. The intent was to provide a read-only view of the shared state between the front \u0026 back-ends without exposing the action commands to the back-end. So we organized each object into a \"*State\" and \"*\" class.\n\nUltimately I think we would do away with the pImpl design. The extra implementation pointer causes an indirection that wouldn\u0027t be present if we just used normal inheritance or c-style dispatch.",
      "parentUuid": "f6a38875_17f026d2",
      "range": {
        "startLine": 71,
        "startChar": 0,
        "endLine": 72,
        "endChar": 32
      },
      "revId": "b23fd752193b39591e91fcdb27d5e73d228b1e56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}