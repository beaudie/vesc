{
  "comments": [
    {
      "key": {
        "uuid": "75de51ba_6ca4f6b7",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 3
      },
      "lineNbr": 3103,
      "author": {
        "id": 1328182
      },
      "writtenOn": "2020-05-21T18:53:32Z",
      "side": 1,
      "message": "Maybe we should add a isWebGL() here",
      "revId": "4694bcd9864d2a3e9d7d5750827ec2b5bd6632d0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "36fafa34_16c56486",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 3
      },
      "lineNbr": 3103,
      "author": {
        "id": 1394635
      },
      "writtenOn": "2020-05-21T19:04:11Z",
      "side": 1,
      "message": "The main issue here is that Vulkan would need accurate `blendable` format cap which is additionally gated on extensions.colorBufferFloat. Maybe refactor gl::Float32BlendableSupport instead?",
      "parentUuid": "75de51ba_6ca4f6b7",
      "revId": "4694bcd9864d2a3e9d7d5750827ec2b5bd6632d0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "79caf5cf_a7e05d9e",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 3
      },
      "lineNbr": 3103,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-06-18T14:32:08Z",
      "side": 1,
      "message": "Can you explain what needs to happen in Vulkan? We could probably implement the blendable cap on Vulkan.",
      "parentUuid": "36fafa34_16c56486",
      "revId": "4694bcd9864d2a3e9d7d5750827ec2b5bd6632d0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9a3eac38_6ee82bae",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 3
      },
      "lineNbr": 3103,
      "author": {
        "id": 1394635
      },
      "writtenOn": "2020-06-18T16:24:16Z",
      "side": 1,
      "message": "That cap is already implemented. The issue is that it\u0027s set to false on ES2 contexts while the OpenGL ES extension string is present. This leads to internal inconsistency.\n\nTo fix ES2 contexts, we need to either set the cap to true or to disable the extension.",
      "parentUuid": "79caf5cf_a7e05d9e",
      "revId": "4694bcd9864d2a3e9d7d5750827ec2b5bd6632d0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}