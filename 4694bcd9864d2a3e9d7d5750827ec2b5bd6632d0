{
  "comments": [
    {
      "key": {
        "uuid": "75de51ba_6ca4f6b7",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 3
      },
      "lineNbr": 3103,
      "author": {
        "id": 1328182
      },
      "writtenOn": "2020-05-21T18:53:32Z",
      "side": 1,
      "message": "Maybe we should add a isWebGL() here",
      "revId": "4694bcd9864d2a3e9d7d5750827ec2b5bd6632d0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "36fafa34_16c56486",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 3
      },
      "lineNbr": 3103,
      "author": {
        "id": 1394635
      },
      "writtenOn": "2020-05-21T19:04:11Z",
      "side": 1,
      "message": "The main issue here is that Vulkan would need accurate `blendable` format cap which is additionally gated on extensions.colorBufferFloat. Maybe refactor gl::Float32BlendableSupport instead?",
      "parentUuid": "75de51ba_6ca4f6b7",
      "revId": "4694bcd9864d2a3e9d7d5750827ec2b5bd6632d0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "79caf5cf_a7e05d9e",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 3
      },
      "lineNbr": 3103,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-06-18T14:32:08Z",
      "side": 1,
      "message": "Can you explain what needs to happen in Vulkan? We could probably implement the blendable cap on Vulkan.",
      "parentUuid": "36fafa34_16c56486",
      "revId": "4694bcd9864d2a3e9d7d5750827ec2b5bd6632d0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9a3eac38_6ee82bae",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 3
      },
      "lineNbr": 3103,
      "author": {
        "id": 1394635
      },
      "writtenOn": "2020-06-18T16:24:16Z",
      "side": 1,
      "message": "That cap is already implemented. The issue is that it\u0027s set to false on ES2 contexts while the OpenGL ES extension string is present. This leads to internal inconsistency.\n\nTo fix ES2 contexts, we need to either set the cap to true or to disable the extension.",
      "parentUuid": "79caf5cf_a7e05d9e",
      "revId": "4694bcd9864d2a3e9d7d5750827ec2b5bd6632d0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "74d42811_02c63b7a",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 3
      },
      "lineNbr": 3103,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-06-18T16:55:28Z",
      "side": 1,
      "message": "If we fix the Vulkan back-end, would that meet your requirements? I\u0027m not sure what the motivation for this CL is.",
      "parentUuid": "9a3eac38_6ee82bae",
      "revId": "4694bcd9864d2a3e9d7d5750827ec2b5bd6632d0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "13e74dab_f9a40f0d",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 3
      },
      "lineNbr": 3103,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2020-06-18T16:57:32Z",
      "side": 1,
      "message": "Alexey, while the WebGL 1.0 floating-point texture and blending situation is not great - a lot of changes piled on top of one another - this change is going to break WebGL 1.0 content using the OES_texture_float extension:\n\nhttps://source.chromium.org/chromium/chromium/src/+/master:third_party/blink/renderer/modules/webgl/oes_texture_float.cc;l\u003d40?q\u003dEXT_float_blend\nhttps://github.com/KhronosGroup/WebGL/pull/2830\n\nI think we should leave well enough alone and not make this change.",
      "parentUuid": "9a3eac38_6ee82bae",
      "revId": "4694bcd9864d2a3e9d7d5750827ec2b5bd6632d0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b8acdd12_e176cf6e",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 3
      },
      "lineNbr": 3103,
      "author": {
        "id": 1394635
      },
      "writtenOn": "2020-06-18T17:02:02Z",
      "side": 1,
      "message": "The motivation is to keep format caps in sync with the exposed extension. The full picture is in the first comment. Vulkan backend just happens to rely on those caps instead of GL extensinos.\n\nThis CL shows the easiest way of fixing current inconsistency. Alternatively, we could change how caps are set.",
      "parentUuid": "74d42811_02c63b7a",
      "revId": "4694bcd9864d2a3e9d7d5750827ec2b5bd6632d0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1d15aca2_151f248b",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 3
      },
      "lineNbr": 3103,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2020-06-18T17:26:45Z",
      "side": 1,
      "message": "Alexey, that comment is buried deeply within the thread. Please surface these issues more clearly - the best place would be in the linked bug, where persistent discussion can occur.\n\nI\u0027m going to -1 this patch because it\u0027s going to break WebGL content, subtly at least. Let\u0027s please pursue alternate approaches, but before implementing something, let\u0027s let Jamie and Geoff weigh in.",
      "parentUuid": "b8acdd12_e176cf6e",
      "revId": "4694bcd9864d2a3e9d7d5750827ec2b5bd6632d0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}