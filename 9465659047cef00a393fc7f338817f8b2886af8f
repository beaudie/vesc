{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "179fa931_42ccc82b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-10-19T20:21:24Z",
      "side": 1,
      "message": "Very sorry for the slow review on these Gert... \n\nI haven\u0027t had a chance to dig into this in depth. I had two ideas:\n\n1) we replace Bind calls in the trace with a custom fixture call. the custom call would update the resource map if it detects the bind is a create.\n\n2) the capture harness detects when a bind is a create, and calls the fixture to update the resource map explictly.\n\nor 3) always update the resource map in a bind anyway, which is similar to 1)\n\nWould be good to hear your thoughts \u0026 Cody too.",
      "revId": "9465659047cef00a393fc7f338817f8b2886af8f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e66e48f6_4e7edf5d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2021-10-19T21:18:01Z",
      "side": 1,
      "message": "Looking at an example:\n\n    glBindBuffer(GL_ARRAY_BUFFER, gBufferMap2[774]);\n\nIn this case, the app never called Gen, so we\u0027re missing:\n\n    glGenBuffers(1, reinterpret_cast\u003cGLuint *\u003e(gReadBuffer));\n    UpdateBufferID2(774, 0);\n\nMaybe rather than having the map lookup directly in the parameter, we could call a helper that returns it or Gens it:\n\n    glBindBuffer(GL_ARRAY_BUFFER, GetBuffer(774));\n\nWhich is a fixture entry like:\n\n    GLint GetBuffer(GLint buffer)\n    {\n        if (!gBufferMap2.contains(buffer))\n        {\n            glGenBuffers(1, reinterpret_cast\u003cGLuint *\u003e(gReadBuffer));\n            UpdateBufferID2(buffer, 0);\n        }\n        return gBufferMap2[buffer];\n    }",
      "parentUuid": "179fa931_42ccc82b",
      "revId": "9465659047cef00a393fc7f338817f8b2886af8f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "99df17fa_4c22f24f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-10-20T12:42:19Z",
      "side": 1,
      "message": "The downside of inserting Gen calls is that it changes the behaviour of the trace compared to the app. I\u0027m wondering if we find a solution that only updates our book keeping.",
      "parentUuid": "e66e48f6_4e7edf5d",
      "revId": "9465659047cef00a393fc7f338817f8b2886af8f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d3090da6_2d4dc741",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2021-10-21T14:44:36Z",
      "side": 1,
      "message": "Sure, if the solution works without adding a Gen, that\u0027s fine.  My main point was, do it with a parameter change (which is already a lookup), not replacing the whole Bind call with a fixture call.",
      "parentUuid": "99df17fa_4c22f24f",
      "revId": "9465659047cef00a393fc7f338817f8b2886af8f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "32d795c7_4f327cf5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1491823
      },
      "writtenOn": "2021-11-08T11:12:15Z",
      "side": 1,
      "message": "I\u0027ve uploaded a new version of how this could be handled, i.e. update the resource map before the bind call is executed, and only update the resource map if the value at the given ID location was zero.\n\nThis is only done for FBOs at the moment, before I implement it for other types, I\u0027d like to hear your opinion.",
      "parentUuid": "d3090da6_2d4dc741",
      "revId": "9465659047cef00a393fc7f338817f8b2886af8f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "243c2597_afca3b17",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2021-11-08T15:57:01Z",
      "side": 1,
      "message": "This approach would work for me.  Using my earlier example, the app would submit:\n\n    glBindBuffer(GL_ARRAY_BUFFER, gBufferMap2[774]);\n\nand we would turn that into:\n\n    InjectBufferID(774);\n    glBindBuffer(GL_ARRAY_BUFFER, gBufferMap2[774]);\n    \nand we would only see new fixture calls for oddball gen-on-bind instances.",
      "parentUuid": "32d795c7_4f327cf5",
      "revId": "9465659047cef00a393fc7f338817f8b2886af8f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}