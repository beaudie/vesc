{
  "comments": [
    {
      "key": {
        "uuid": "fbc414cd_b91fa56b",
        "filename": "scripts/generate_entry_points.py",
        "patchSetId": 13
      },
      "lineNbr": 73,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-09-17T20:37:14Z",
      "side": 1,
      "message": "nit: add a trailing comma",
      "range": {
        "startLine": 73,
        "startChar": 35,
        "endLine": 73,
        "endChar": 36
      },
      "revId": "e762d5a56bcb35f0ad9c5aeed06fffd2c23a26d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5520bf0e_ab4b7248",
        "filename": "src/libANGLE/Framebuffer.cpp",
        "patchSetId": 13
      },
      "lineNbr": 294,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-09-17T20:37:14Z",
      "side": 1,
      "message": "This isn\u0027t neccessary, the vector should be all 0s anyways.",
      "range": {
        "startLine": 294,
        "startChar": 8,
        "endLine": 294,
        "endChar": 41
      },
      "revId": "e762d5a56bcb35f0ad9c5aeed06fffd2c23a26d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e2c26ebf_ce424af3",
        "filename": "src/libANGLE/Framebuffer.cpp",
        "patchSetId": 13
      },
      "lineNbr": 296,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-09-17T20:37:14Z",
      "side": 1,
      "message": "Same for this.",
      "range": {
        "startLine": 296,
        "startChar": 8,
        "endLine": 296,
        "endChar": 41
      },
      "revId": "e762d5a56bcb35f0ad9c5aeed06fffd2c23a26d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8273eab4_6f3dc006",
        "filename": "src/libANGLE/Framebuffer.h",
        "patchSetId": 13
      },
      "lineNbr": 342,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-09-17T20:37:14Z",
      "side": 1,
      "message": "I think we can just use the existing DIRTY_BIT_DRAW_BUFFERS and DIRTY_BIT_READ_BUFFER dirty bits to sync the indexed state.  As it is, there may be ordering issues if the indexed and non-indexed calls are both synced at once.",
      "range": {
        "startLine": 341,
        "startChar": 0,
        "endLine": 342,
        "endChar": 38
      },
      "revId": "e762d5a56bcb35f0ad9c5aeed06fffd2c23a26d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8d22c5e5_c32afc7f",
        "filename": "src/libANGLE/renderer/FramebufferImpl.h",
        "patchSetId": 13
      },
      "lineNbr": 95,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-09-17T20:37:14Z",
      "side": 1,
      "message": "These can be replaced with the dirty bit checks.",
      "range": {
        "startLine": 91,
        "startChar": 0,
        "endLine": 95,
        "endChar": 98
      },
      "revId": "e762d5a56bcb35f0ad9c5aeed06fffd2c23a26d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eae48370_425e7234",
        "filename": "src/libANGLE/renderer/d3d/RendererD3D.h",
        "patchSetId": 13
      },
      "lineNbr": 389,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-09-17T20:37:14Z",
      "side": 1,
      "message": "Bad merge?",
      "range": {
        "startLine": 389,
        "startChar": 4,
        "endLine": 389,
        "endChar": 51
      },
      "revId": "e762d5a56bcb35f0ad9c5aeed06fffd2c23a26d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "748a1400_4c2ed2d9",
        "filename": "src/libANGLE/renderer/d3d/SurfaceD3D.cpp",
        "patchSetId": 13
      },
      "lineNbr": 55,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-09-17T20:37:14Z",
      "side": 1,
      "message": "use AttributeMap::getAsInt",
      "range": {
        "startLine": 55,
        "startChar": 31,
        "endLine": 55,
        "endChar": 39
      },
      "revId": "e762d5a56bcb35f0ad9c5aeed06fffd2c23a26d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c82b309f_045d645b",
        "filename": "src/libANGLE/renderer/d3d/d3d11/Renderer11.cpp",
        "patchSetId": 13
      },
      "lineNbr": 3655,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-09-17T20:37:14Z",
      "side": 1,
      "message": "nit: make it a bit more descriptive:\n\n// TODO: Support EGL_multiview_window with D3D11.  anglebug.com/2754",
      "range": {
        "startLine": 3655,
        "startChar": 4,
        "endLine": 3655,
        "endChar": 14
      },
      "revId": "e762d5a56bcb35f0ad9c5aeed06fffd2c23a26d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ab299cfd_53be1e8d",
        "filename": "src/libANGLE/renderer/gl/renderergl_utils.cpp",
        "patchSetId": 13
      },
      "lineNbr": 991,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-09-17T20:37:14Z",
      "side": 1,
      "message": "I think we should be checking if the native driver supports the extension here.  It will be, at the very least, a strong indicator that the driver supports multiview properly.",
      "range": {
        "startLine": 991,
        "startChar": 39,
        "endLine": 991,
        "endChar": 81
      },
      "revId": "e762d5a56bcb35f0ad9c5aeed06fffd2c23a26d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}