{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "fcfbca3e_c3f9d1b5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-08-12T11:29:05Z",
      "side": 1,
      "message": "LGTM, nice targeted fix.",
      "revId": "3f5ff3b7014f2f12d65e899499edf6ca670cae58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d07be68b_3e1e6b67",
        "filename": "src/libANGLE/capture/FrameCapture.cpp",
        "patchSetId": 2
      },
      "lineNbr": 5220,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-08-12T11:29:05Z",
      "side": 1,
      "message": "nit: this is totally correct, but it looks a bit odd because you\u0027re assigning four bytes to make up an integer. How about\n\nstd::fill(data.begin, data.end, 0xFF)",
      "range": {
        "startLine": 5220,
        "startChar": 12,
        "endLine": 5220,
        "endChar": 59
      },
      "revId": "3f5ff3b7014f2f12d65e899499edf6ca670cae58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d8f308e_27097f86",
        "filename": "src/libANGLE/capture/FrameCapture.cpp",
        "patchSetId": 2
      },
      "lineNbr": 5220,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2021-08-12T16:28:33Z",
      "side": 1,
      "message": "Either way works for me since it is filling a uint8_t vector.",
      "parentUuid": "d07be68b_3e1e6b67",
      "range": {
        "startLine": 5220,
        "startChar": 12,
        "endLine": 5220,
        "endChar": 59
      },
      "revId": "3f5ff3b7014f2f12d65e899499edf6ca670cae58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1bf19a75_8e869a75",
        "filename": "src/libANGLE/capture/FrameCapture.cpp",
        "patchSetId": 2
      },
      "lineNbr": 5220,
      "author": {
        "id": 1495282
      },
      "writtenOn": "2021-08-14T11:43:10Z",
      "side": 1,
      "message": "I think I\u0027d like to stick with the current solution, because paramLength.data is actually std::vector\u003cstd::vector\u003cuint8_t\u003e\u003e, so that I would have to do \n\ndata[0].resize(4); \nstd::fill(...)\n\ninstead of just assigning the vector of the right size.",
      "parentUuid": "4d8f308e_27097f86",
      "range": {
        "startLine": 5220,
        "startChar": 12,
        "endLine": 5220,
        "endChar": 59
      },
      "revId": "3f5ff3b7014f2f12d65e899499edf6ca670cae58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1aefe173_4db27aa7",
        "filename": "src/libANGLE/capture/FrameCapture.cpp",
        "patchSetId": 2
      },
      "lineNbr": 5220,
      "author": {
        "id": 1491823
      },
      "writtenOn": "2021-08-14T13:36:58Z",
      "side": 1,
      "message": "It turns out that with GLSLTest.MixedShaderLengths the shader is written as an array, so the best option seems to be consistent, and to combine the strings at capture time to one string, and handle it like this, so I\u0027ve updated the patch accordingly.",
      "parentUuid": "1bf19a75_8e869a75",
      "range": {
        "startLine": 5220,
        "startChar": 12,
        "endLine": 5220,
        "endChar": 59
      },
      "revId": "3f5ff3b7014f2f12d65e899499edf6ca670cae58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}