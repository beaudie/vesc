{
  "comments": [
    {
      "key": {
        "uuid": "e4932916_4c4f47f2",
        "filename": "src/libGLESv2/renderer/d3d11/Renderer11.cpp",
        "patchSetId": 7
      },
      "lineNbr": 738,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2014-06-19T14:54:48Z",
      "side": 0,
      "message": "changing these checks, combined with changing our max supported viewport size from 16k to 32k, makes me a little bit cautious -- I recall back in Ottawa at TG we had to debug a WebGL test that used a very large viewport size, and this is why the code went in. Can you make sure you run the related WebGL tests (or possibly all tests) and make sure there\u0027s no errors/warnings dealing with textures or viewport size?",
      "range": {
        "startLine": 737,
        "startChar": 4,
        "endLine": 738,
        "endChar": 15
      },
      "revId": "84065ac86b9138adf6916a1b3fd8bbe1d50bed56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04d91d6f_ced8838b",
        "filename": "src/libGLESv2/renderer/d3d11/Renderer11.cpp",
        "patchSetId": 7
      },
      "lineNbr": 738,
      "author": {
        "id": 1105219
      },
      "writtenOn": "2014-06-25T21:27:56Z",
      "side": 0,
      "message": "The relevant tests are:\nhttps://www.khronos.org/registry/webgl/sdk/tests/conformance/rendering/gl-viewport-test.html\nhttps://www.khronos.org/registry/webgl/conformance-suites/1.0.2/conformance/canvas/drawingbuffer-test.html\n\nThese tests both pass with and without this CL. Looking back through the history of changes in this area, I suspect the viewport dimension scaling introduced to finally fix issue 224, landed in 42832a654cfe1fb76a54a8318c8a728ce0692f3b, may be what\u0027s handling everything correctly.",
      "parentUuid": "e4932916_4c4f47f2",
      "revId": "84065ac86b9138adf6916a1b3fd8bbe1d50bed56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44ba35ef_accb1b2d",
        "filename": "src/libGLESv2/renderer/d3d11/Renderer11.cpp",
        "patchSetId": 7
      },
      "lineNbr": 738,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2014-06-26T17:00:25Z",
      "side": 0,
      "message": "I also verified no failures.  I think it\u0027s fixed now that we properly handle arbitrary viewport sizes.",
      "parentUuid": "04d91d6f_ced8838b",
      "revId": "84065ac86b9138adf6916a1b3fd8bbe1d50bed56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04d91d6f_2ef2670a",
        "filename": "src/libGLESv2/renderer/d3d11/Renderer11.cpp",
        "patchSetId": 7
      },
      "lineNbr": 2069,
      "author": {
        "id": 1105219
      },
      "writtenOn": "2014-06-25T21:27:56Z",
      "side": 0,
      "message": "I do want to make sure, if the maximum viewport dimension is being increased for D3D11, that it\u0027s absolutely safe to do so, and that our reasons for needing this assurance are no longer applicable.\n\nFrom the Trac log, Nicolas recommended:\n\n\"The spec for glViewport says that \"width and height are clamped to implementation-dependent maximums when specified. The maximum width and height may be found by issuing an appropriate Get command\". We currently return mMaxRenderbufferDimension (\u003d mMaxTextureDimension) for this, which is probably the only safe value for D3D9. I suggest to create another virtual method for Renderer to make this independent of texture dimension, and for D3D11 return something like D3D11_VIEWPORT_BOUNDS_MAX - D3D11_REQ_TEXTURE2D_U_OR_V_DIMENSION (since both TopLeftX  and TopLeftX + Width have to be \u003c D3D11_VIEWPORT_BOUNDS_MAX but it\u0027s useless to have a viewport totally outside the render target).\"\n\nDoes the viewport scaling introduced later make this moot?",
      "revId": "84065ac86b9138adf6916a1b3fd8bbe1d50bed56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e4d5e933_cd476983",
        "filename": "src/libGLESv2/renderer/d3d11/Renderer11.cpp",
        "patchSetId": 7
      },
      "lineNbr": 2069,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2014-06-26T17:00:25Z",
      "side": 0,
      "message": "I think this is no longer an issue rendering wise.  We seem to properly handle any sized viewport.",
      "parentUuid": "04d91d6f_2ef2670a",
      "revId": "84065ac86b9138adf6916a1b3fd8bbe1d50bed56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a49db127_64ab40ad",
        "filename": "src/libGLESv2/renderer/d3d11/Renderer11.cpp",
        "patchSetId": 7
      },
      "lineNbr": 2075,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2014-06-19T14:54:48Z",
      "side": 0,
      "message": "re",
      "range": {
        "startLine": 2075,
        "startChar": 15,
        "endLine": 2075,
        "endChar": 51
      },
      "revId": "84065ac86b9138adf6916a1b3fd8bbe1d50bed56",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}