{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ee2f2b8a_0647fbcc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2020-10-21T00:32:00Z",
      "side": 1,
      "message": "Thanks James for upstreaming this.\n\nGeoff and I discussed this in today\u0027s ANGLE meeting and though it might be possible to make this work a different way by instrumenting every EGL API, Kimmo and I discussed this design at great length on Slack and it conclusively solves the limited multithreading problem with ANGLE in Apple\u0027s UIWebView. I personally like the solution of explicitly releasing ANGLE from the thread when we\u0027re returning control to the application - this is now what UIWebView does. I\u0027d prefer to see this land in roughly its current form to simplify future rolls of ANGLE into WebKit. Going forward it would be great to have better collaboration on upstream ANGLE.\n\nLooks like a bug fix is needed on the D3D backend along with this. James, do you have the ability to debug that?\n\nNote to Geoff and Jonah that this also changes the implementation of ANGLE\u0027s limited multithreading support on macOS (and iOS) a little bit. These changes seemed fine to me.\n",
      "revId": "0927b22bed52f56004c024e782a8db72325c4378",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "27e66009_8bb34a43",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2020-10-26T18:46:54Z",
      "side": 1,
      "message": "I think this patch is ok as is and we can land it in the interest of minimizing merge conflicts later.\n\nIf I was to implement this over again I would do it a bit differently I think:\n\nSince the real issue (I believe) is that ANGLE does some internal emulation that makes GL calls, we need to ensure a context is current on the the current thread just for those calls. eglMakeCurrent may also need to make sure the context it thinks is current really is too.\n\nI recently hit this issue in WindowSurfaceCGL and solved it by adding a little RAII wrapper to make a context current for that function: https://source.chromium.org/chromium/chromium/src/+/master:third_party/angle/src/libANGLE/renderer/gl/cgl/WindowSurfaceCGL.mm;l\u003d167\n\nWe could probably do the same in the relevant CGL and EAGL code that makes GL function calls and not need any new extensions. The cost of EGL calls is already expected to be high so it\u0027s not an issue adding more cost like this, IMO.\n",
      "revId": "0927b22bed52f56004c024e782a8db72325c4378",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0128ee0a_8a7349e2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1449558
      },
      "writtenOn": "2020-10-26T19:23:48Z",
      "side": 1,
      "message": "\u003e We could probably do the same in the relevant CGL and EAGL code that makes GL function calls and not need any new extensions.\n\nFWIW: approach here does not *need* any new extensions either. They were added to pre-empt \"cost too high for non-needing case\".\n\nNot saying existing RAII would be any worse. Maybe be hard to spot which functions to markup and which not, but nicer in many other ways.\nMany EGL entry points call multiple implementation entry points, so if all implementation entry points are marked up, then the RAII will be run multiple times per EGL call.",
      "parentUuid": "27e66009_8bb34a43",
      "revId": "0927b22bed52f56004c024e782a8db72325c4378",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7fd99d8b_bde5272e",
        "filename": "extensions/EGL_ANGLE_platform_angle_device_context_volatile_cgl.txt",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2020-10-21T00:32:00Z",
      "side": 1,
      "message": "I didn\u0027t notice this in the downstream review but this should be \"device context\", not \"device context contexts\".",
      "range": {
        "startLine": 41,
        "startChar": 41,
        "endLine": 41,
        "endChar": 48
      },
      "revId": "0927b22bed52f56004c024e782a8db72325c4378",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "85eb2ba0_caac72b9",
        "filename": "extensions/EGL_ANGLE_platform_angle_device_context_volatile_eagl.txt",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2020-10-21T00:32:00Z",
      "side": 1,
      "message": "Same comment here.",
      "range": {
        "startLine": 41,
        "startChar": 49,
        "endLine": 41,
        "endChar": 57
      },
      "revId": "0927b22bed52f56004c024e782a8db72325c4378",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f6889c65_13183d51",
        "filename": "src/libGLESv2/entry_points_egl.cpp",
        "patchSetId": 2
      },
      "lineNbr": 109,
      "author": {
        "id": 1326275
      },
      "writtenOn": "2020-10-21T18:44:20Z",
      "side": 1,
      "message": "Is there a reason these calls can\u0027t go inside Display.cpp instead of the entry points?",
      "range": {
        "startLine": 108,
        "startChar": 4,
        "endLine": 109,
        "endChar": 64
      },
      "revId": "0927b22bed52f56004c024e782a8db72325c4378",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b107f8be_bcfff0d9",
        "filename": "src/libGLESv2/entry_points_egl.cpp",
        "patchSetId": 2
      },
      "lineNbr": 109,
      "author": {
        "id": 1449558
      },
      "writtenOn": "2020-10-21T19:22:44Z",
      "side": 1,
      "message": "If you mean of form:\n\n  egl::Error Display::MakeCurrent(..) {\n    ANGLE_TRY(PrepareCall());\n    ...\n  }\n\nNot all of those calls operate on Display.",
      "parentUuid": "f6889c65_13183d51",
      "range": {
        "startLine": 108,
        "startChar": 4,
        "endLine": 109,
        "endChar": 64
      },
      "revId": "0927b22bed52f56004c024e782a8db72325c4378",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}