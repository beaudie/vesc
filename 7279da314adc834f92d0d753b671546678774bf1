{
  "comments": [
    {
      "key": {
        "uuid": "16f373ac_828b9c75",
        "filename": "include/GLSLANG/ShaderLang.h",
        "patchSetId": 3
      },
      "lineNbr": 217,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-09-07T14:20:09Z",
      "side": 1,
      "message": "nit: we should probably switch to 64-bit c++11 enum classes now (same comment as other CL). also you can call this SH_REWRITE_INTEGER_UNARY_MINUS_OPERATOR to be a bit more succinct.",
      "range": {
        "startLine": 217,
        "startChar": 4,
        "endLine": 217,
        "endChar": 47
      },
      "revId": "7279da314adc834f92d0d753b671546678774bf1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "36b157f2_37169861",
        "filename": "include/GLSLANG/ShaderLang.h",
        "patchSetId": 3
      },
      "lineNbr": 217,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2016-09-07T14:40:31Z",
      "side": 1,
      "message": "typo: MINURS -\u003e MINUS",
      "parentUuid": "16f373ac_828b9c75",
      "range": {
        "startLine": 217,
        "startChar": 4,
        "endLine": 217,
        "endChar": 47
      },
      "revId": "7279da314adc834f92d0d753b671546678774bf1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "36b157f2_b701c813",
        "filename": "src/compiler/translator/RewriteUnaryMinusOperatorInt.cpp",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2016-09-07T14:40:31Z",
      "side": 1,
      "message": "The code here can be put in RewriteMinusOperator directly.",
      "revId": "7279da314adc834f92d0d753b671546678774bf1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "16f373ac_02396c8f",
        "filename": "src/compiler/translator/RewriteUnaryMinusOperatorInt.cpp",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-09-07T14:49:13Z",
      "side": 1,
      "message": "We use this pattern elsewhere, it allows for more private functions, I like keeping it.",
      "parentUuid": "36b157f2_b701c813",
      "revId": "7279da314adc834f92d0d753b671546678774bf1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "36b157f2_d7fe3cfe",
        "filename": "src/compiler/translator/RewriteUnaryMinusOperatorInt.cpp",
        "patchSetId": 3
      },
      "lineNbr": 36,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2016-09-07T14:40:31Z",
      "side": 1,
      "message": "Because the transformation you are doing is \"simple\" you don\u0027t need to do an iterative transform, and doing traverse once is enough.",
      "revId": "7279da314adc834f92d0d753b671546678774bf1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "16f373ac_82b8bce8",
        "filename": "src/compiler/translator/RewriteUnaryMinusOperatorInt.cpp",
        "patchSetId": 3
      },
      "lineNbr": 36,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-09-07T14:49:13Z",
      "side": 1,
      "message": "Are you sure? What about something weird like (-(-(-(-(-x)))), etc",
      "parentUuid": "36b157f2_d7fe3cfe",
      "revId": "7279da314adc834f92d0d753b671546678774bf1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "36b157f2_3734d8eb",
        "filename": "src/compiler/translator/RewriteUnaryMinusOperatorInt.cpp",
        "patchSetId": 3
      },
      "lineNbr": 36,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2016-09-07T15:04:27Z",
      "side": 1,
      "message": "Good point, see [1] and [2].",
      "parentUuid": "16f373ac_82b8bce8",
      "revId": "7279da314adc834f92d0d753b671546678774bf1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "76dd8f9f_ece663d8",
        "filename": "src/compiler/translator/RewriteUnaryMinusOperatorInt.cpp",
        "patchSetId": 3
      },
      "lineNbr": 36,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-09-07T23:32:35Z",
      "side": 1,
      "message": "Cool. A test for this kind of code would be welcome.",
      "parentUuid": "36b157f2_3734d8eb",
      "revId": "7279da314adc834f92d0d753b671546678774bf1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8b373ada_5283946f",
        "filename": "src/compiler/translator/RewriteUnaryMinusOperatorInt.cpp",
        "patchSetId": 3
      },
      "lineNbr": 36,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2016-09-08T14:01:26Z",
      "side": 1,
      "message": "I second this - would like to see a test.",
      "parentUuid": "76dd8f9f_ece663d8",
      "revId": "7279da314adc834f92d0d753b671546678774bf1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6963bc8_9ab36858",
        "filename": "src/compiler/translator/RewriteUnaryMinusOperatorInt.cpp",
        "patchSetId": 3
      },
      "lineNbr": 36,
      "author": {
        "id": 1161747
      },
      "writtenOn": "2016-09-09T13:34:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8b373ada_5283946f",
      "revId": "7279da314adc834f92d0d753b671546678774bf1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ebefd6c0_8d212111",
        "filename": "src/compiler/translator/RewriteUnaryMinusOperatorInt.cpp",
        "patchSetId": 3
      },
      "lineNbr": 36,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2016-09-09T13:41:27Z",
      "side": 1,
      "message": "I can\u0027t see the test, did you notice comments about that? Even if you added some automated test outside of ANGLE, like to WebGL conformance, I\u0027d still prefer to see a test for a case like (-(-(-x))) in angle_end2end_tests or angle_unittests.",
      "parentUuid": "d6963bc8_9ab36858",
      "revId": "7279da314adc834f92d0d753b671546678774bf1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6963bc8_1aef58e6",
        "filename": "src/compiler/translator/RewriteUnaryMinusOperatorInt.cpp",
        "patchSetId": 3
      },
      "lineNbr": 36,
      "author": {
        "id": 1161747
      },
      "writtenOn": "2016-09-09T14:28:28Z",
      "side": 1,
      "message": "The related CTS test is still under preparation. Sorry for my missing explanation.\n\nThe only use of the variable temporarilyIndex in class TIntermTraverser is to generate temporary variables in order. See function TIntermTraverser::createTempSymbol()  in compiler/translator/IntermTraverse.cpp:119. Here no temporary variables should be created so I delete it in patch set 5.\n\nTo my investigation, the logic of this piece of code is that when the target is first found in root or its son, traverser.mFound will be set to true, the tree will be updated, and a new iteration of the traverse will be started again. So only when there is no workaround target in root and all its sons will the do-while loop be exited.",
      "parentUuid": "ebefd6c0_8d212111",
      "revId": "7279da314adc834f92d0d753b671546678774bf1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b3a0657_785cb21d",
        "filename": "src/compiler/translator/RewriteUnaryMinusOperatorInt.cpp",
        "patchSetId": 3
      },
      "lineNbr": 36,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-09-13T13:28:45Z",
      "side": 1,
      "message": "Can you add the test also to GLSLTest.cpp as an angle_end2end_test? This would ensure the code is tested at the same time it\u0027s being landed.",
      "parentUuid": "d6963bc8_1aef58e6",
      "revId": "7279da314adc834f92d0d753b671546678774bf1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b3926b8_88e31399",
        "filename": "src/compiler/translator/RewriteUnaryMinusOperatorInt.cpp",
        "patchSetId": 3
      },
      "lineNbr": 36,
      "author": {
        "id": 1161747
      },
      "writtenOn": "2016-09-19T08:50:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6b3a0657_785cb21d",
      "revId": "7279da314adc834f92d0d753b671546678774bf1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "36b157f2_b73f08c3",
        "filename": "src/compiler/translator/RewriteUnaryMinusOperatorInt.cpp",
        "patchSetId": 3
      },
      "lineNbr": 60,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2016-09-07T15:04:27Z",
      "side": 1,
      "message": "The traversal might continue even if mFound \u003d true, add if (mFound) {return false;} here.",
      "revId": "7279da314adc834f92d0d753b671546678774bf1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6963bc8_bac0248e",
        "filename": "src/compiler/translator/RewriteUnaryMinusOperatorInt.cpp",
        "patchSetId": 3
      },
      "lineNbr": 60,
      "author": {
        "id": 1161747
      },
      "writtenOn": "2016-09-09T13:34:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "36b157f2_b73f08c3",
      "revId": "7279da314adc834f92d0d753b671546678774bf1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "36b157f2_370bf82e",
        "filename": "src/compiler/translator/RewriteUnaryMinusOperatorInt.cpp",
        "patchSetId": 3
      },
      "lineNbr": 75,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2016-09-07T14:40:31Z",
      "side": 1,
      "message": "Put this at the end and use the following constructor that deduces the type automatically:\n\nTIntermBinary *add \u003d new TIntermBinary(EOpAdd, bitwiseNot, oneNode);",
      "revId": "7279da314adc834f92d0d753b671546678774bf1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6963bc8_dabdf021",
        "filename": "src/compiler/translator/RewriteUnaryMinusOperatorInt.cpp",
        "patchSetId": 3
      },
      "lineNbr": 75,
      "author": {
        "id": 1161747
      },
      "writtenOn": "2016-09-09T13:34:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "36b157f2_370bf82e",
      "revId": "7279da314adc834f92d0d753b671546678774bf1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "36b157f2_772e5099",
        "filename": "src/compiler/translator/RewriteUnaryMinusOperatorInt.cpp",
        "patchSetId": 3
      },
      "lineNbr": 95,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2016-09-07T15:04:27Z",
      "side": 1,
      "message": "[2] Found something, return false to stop the traversal of this node.",
      "revId": "7279da314adc834f92d0d753b671546678774bf1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6963bc8_fa8aac71",
        "filename": "src/compiler/translator/RewriteUnaryMinusOperatorInt.cpp",
        "patchSetId": 3
      },
      "lineNbr": 95,
      "author": {
        "id": 1161747
      },
      "writtenOn": "2016-09-09T13:34:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "36b157f2_772e5099",
      "revId": "7279da314adc834f92d0d753b671546678774bf1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "36b157f2_9704c424",
        "filename": "src/compiler/translator/RewriteUnaryMinusOperatorInt.cpp",
        "patchSetId": 3
      },
      "lineNbr": 100,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2016-09-07T14:40:31Z",
      "side": 1,
      "message": "The temporaryIndex is not used and can be removed.",
      "revId": "7279da314adc834f92d0d753b671546678774bf1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}