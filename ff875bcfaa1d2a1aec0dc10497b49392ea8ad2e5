{
  "comments": [
    {
      "key": {
        "uuid": "3e7e50e5_eefa64e8",
        "filename": "src/libANGLE/renderer/vulkan/renderervk_utils.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1259,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2017-11-27T15:56:57Z",
      "side": 1,
      "message": "I think this initializes attachmentDescs to zero already?",
      "range": {
        "startLine": 1258,
        "startChar": 63,
        "endLine": 1259,
        "endChar": 1
      },
      "revId": "ff875bcfaa1d2a1aec0dc10497b49392ea8ad2e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "977ee2fc_a2219da5",
        "filename": "src/libANGLE/renderer/vulkan/renderervk_utils.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1259,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-11-27T19:02:59Z",
      "side": 1,
      "message": "I\u0027m being a bit paranoid here- there\u0027s no guarantee that VkAttachmentDesc\u0027s members are completely packed, as I described above. I\u0027m fine with removing the memset if we can guarantee that.",
      "parentUuid": "3e7e50e5_eefa64e8",
      "range": {
        "startLine": 1258,
        "startChar": 63,
        "endLine": 1259,
        "endChar": 1
      },
      "revId": "ff875bcfaa1d2a1aec0dc10497b49392ea8ad2e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fe5f205c_0a5fb1c4",
        "filename": "src/libANGLE/renderer/vulkan/renderervk_utils.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1269,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2017-11-27T15:56:57Z",
      "side": 1,
      "message": "The default copy constructor already does that I think? Ditto for the copy assignment.",
      "revId": "ff875bcfaa1d2a1aec0dc10497b49392ea8ad2e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ff29bb54_c52d0f3d",
        "filename": "src/libANGLE/renderer/vulkan/renderervk_utils.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1269,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-11-27T19:02:59Z",
      "side": 1,
      "message": "Same comments.",
      "parentUuid": "fe5f205c_0a5fb1c4",
      "revId": "ff875bcfaa1d2a1aec0dc10497b49392ea8ad2e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "09183407_4551b3cf",
        "filename": "src/libANGLE/renderer/vulkan/renderervk_utils.h",
        "patchSetId": 2
      },
      "lineNbr": 682,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2017-11-27T15:56:57Z",
      "side": 1,
      "message": "Is the worry here that Vulkan requires specific alignment for the structs? attachmentDescs will be correctly aligned inside RenderPassDesc and will influence alignas(RenderPassDesc).",
      "revId": "ff875bcfaa1d2a1aec0dc10497b49392ea8ad2e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b087a8cf_08e4af4b",
        "filename": "src/libANGLE/renderer/vulkan/renderervk_utils.h",
        "patchSetId": 2
      },
      "lineNbr": 682,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-11-27T19:02:59Z",
      "side": 1,
      "message": "No, because this structure will be used as a hash key in a std::unordered_map, we want to avoid any undefined c++ behaviour where a bool (or possibly other types, like uint8_t) will leave a \"hole\" in the struct, with undefined/uninitialized values. I was seeing this problem in the other ANGLE structs used in unordered_map, so preemptively avoiding the problem here.",
      "parentUuid": "09183407_4551b3cf",
      "revId": "ff875bcfaa1d2a1aec0dc10497b49392ea8ad2e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c0e2726e_8a292412",
        "filename": "src/libANGLE/renderer/vulkan/renderervk_utils.h",
        "patchSetId": 2
      },
      "lineNbr": 682,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2017-11-27T19:08:24Z",
      "side": 1,
      "message": "Ack, hadn\u0027t realized it would be used as a hash key. Forget all I said.",
      "parentUuid": "b087a8cf_08e4af4b",
      "revId": "ff875bcfaa1d2a1aec0dc10497b49392ea8ad2e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}