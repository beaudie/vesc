{
  "comments": [
    {
      "key": {
        "uuid": "6adc9552_211e50fc",
        "filename": "src/compiler/translator/SymbolTable_autogen.cpp",
        "patchSetId": 9
      },
      "lineNbr": 14948,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-08-01T18:48:56Z",
      "side": 1,
      "message": "I think you should use equals instead of beginsWith since you now also include exact names.",
      "range": {
        "startLine": 14948,
        "startChar": 20,
        "endLine": 14948,
        "endChar": 63
      },
      "revId": "4aa8a1fb00176dd7f6cdc0219ad396c938641fd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "158936b1_c656368a",
        "filename": "src/compiler/translator/builtin_symbols_hash_autogen.txt",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-08-01T18:48:56Z",
      "side": 1,
      "message": "Could be a split change. Could you also remove the hashing check used by the builtin script?",
      "revId": "4aa8a1fb00176dd7f6cdc0219ad396c938641fd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c3fc1b36_e2b1939d",
        "filename": "src/compiler/translator/gen_builtin_symbols.py",
        "patchSetId": 9
      },
      "lineNbr": 48,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-08-01T18:48:56Z",
      "side": 1,
      "message": "do you know what expression triggers this warning? Can we fix it with static_cast or something like that?",
      "range": {
        "startLine": 45,
        "startChar": 0,
        "endLine": 48,
        "endChar": 6
      },
      "revId": "4aa8a1fb00176dd7f6cdc0219ad396c938641fd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5322e6f6_63ad97f2",
        "filename": "src/compiler/translator/gen_builtin_symbols.py",
        "patchSetId": 9
      },
      "lineNbr": 50,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-08-01T18:48:56Z",
      "side": 1,
      "message": "style nit: kT1/kT2/kG\n\nalso these can be constexpr.\n\nalso you could put them in a namespace {} block instead of using \u0027static\u0027",
      "range": {
        "startLine": 50,
        "startChar": 11,
        "endLine": 50,
        "endChar": 13
      },
      "revId": "4aa8a1fb00176dd7f6cdc0219ad396c938641fd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a0004a0d_63497aeb",
        "filename": "src/compiler/translator/gen_builtin_symbols.py",
        "patchSetId": 9
      },
      "lineNbr": 66,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-08-01T18:48:56Z",
      "side": 1,
      "message": "nit: PerfectHash/HashG",
      "range": {
        "startLine": 66,
        "startChar": 11,
        "endLine": 66,
        "endChar": 23
      },
      "revId": "4aa8a1fb00176dd7f6cdc0219ad396c938641fd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "339087a0_b5b04ed5",
        "filename": "src/compiler/translator/gen_builtin_symbols.py",
        "patchSetId": 9
      },
      "lineNbr": 89,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-08-01T18:48:56Z",
      "side": 1,
      "message": "can\u0027t you nuke all this FowlerNullVoHash stuff?",
      "range": {
        "startLine": 75,
        "startChar": 2,
        "endLine": 89,
        "endChar": 47
      },
      "revId": "4aa8a1fb00176dd7f6cdc0219ad396c938641fd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}