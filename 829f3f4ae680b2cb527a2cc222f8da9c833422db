{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "968bf66c_373ea940",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-12-09T13:13:39Z",
      "side": 1,
      "message": "Maybe this would be better done in VertexArray.cpp than in the Vulkan back-end?",
      "revId": "829f3f4ae680b2cb527a2cc222f8da9c833422db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dfda685a_d79fd1c6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1175714
      },
      "writtenOn": "2021-12-09T16:25:46Z",
      "side": 1,
      "message": "That was what I initially thought, but VertexArray.cpp already tracks enabled, and then we\u0027d need another \"next enabled\" or \"previous enabled\" member so I thought that would be controversial? Would that be OK actually?",
      "parentUuid": "968bf66c_373ea940",
      "revId": "829f3f4ae680b2cb527a2cc222f8da9c833422db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e4109d52_ba930797",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-12-09T16:48:22Z",
      "side": 1,
      "message": "The current state seemed to me like what you\u0027re adding here, so it makes sense to do it close to the source. You could potentially even eliminate an entire unnecessary syncState call (although I would skip that for now as it involves more checking)\n\nBasically yeah it\u0027s good, not too controversial, even if it\u0027s the first time we have cleared dirty bits like that, it sounds like something we should be doing as we run into these call patterns.",
      "parentUuid": "dfda685a_d79fd1c6",
      "revId": "829f3f4ae680b2cb527a2cc222f8da9c833422db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ccbde6e9_5b20867a",
        "filename": "src/libANGLE/renderer/vulkan/VertexArrayVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 505,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2021-12-09T17:55:52Z",
      "side": 1,
      "message": "if(sameEnabled){\n    bits\u003d...\n}",
      "range": {
        "startLine": 504,
        "startChar": 8,
        "endLine": 505,
        "endChar": 95
      },
      "revId": "829f3f4ae680b2cb527a2cc222f8da9c833422db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "09d4fce2_765a9f50",
        "filename": "src/libANGLE/renderer/vulkan/VertexArrayVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 508,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2021-12-09T17:55:52Z",
      "side": 1,
      "message": "This attribBits[] appears not been used other than this DIRTY_ATTRIB_POINTER_BUFFER. Looks to me the better way for the fix might be pass down this attribBits[] to syncDirtyAttrib() call and let it further inspect the dirty bit and avoid unnecessary code path when needed, not just for DIRTY_ATTRIB_POINTER_BUFFER?\n\nI am wondering why it wasn\u0027t done this way. Looks like we have these finer grain dirty bits but not really using it.",
      "range": {
        "startLine": 508,
        "startChar": 18,
        "endLine": 508,
        "endChar": 33
      },
      "revId": "829f3f4ae680b2cb527a2cc222f8da9c833422db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}