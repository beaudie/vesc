{
  "comments": [
    {
      "key": {
        "uuid": "5be742e1_e5101528",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-09-25T18:11:55Z",
      "side": 1,
      "message": "I haven\u0027t gone through the previous discussions, so these may be repeats or already explained somewhere.",
      "revId": "1e489dc3bb8221b9a26f451e040b8e1fbc00985b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0f7c04b7_f36d14d9",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 11
      },
      "lineNbr": 4736,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-09-25T18:11:55Z",
      "side": 1,
      "message": "Can these be moved outside of the feature checking?",
      "revId": "1e489dc3bb8221b9a26f451e040b8e1fbc00985b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8b44ebf9_e0f068a1",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 11
      },
      "lineNbr": 4736,
      "author": {
        "id": 1263724
      },
      "writtenOn": "2020-09-25T19:33:04Z",
      "side": 1,
      "message": "Not needed unless using threading. The flushToPrimary resets the renderpass so it would be impossible for later commands to add to previous renderpass, there\u0027s no way to get to it.\nWith threading, however, the processing of the renderpass is handled in a separate thread and there is still a pointer hanging around to that renderpass.",
      "parentUuid": "0f7c04b7_f36d14d9",
      "revId": "1e489dc3bb8221b9a26f451e040b8e1fbc00985b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "335ef123_28346d55",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 11
      },
      "lineNbr": 4736,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-09-25T22:40:11Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "8b44ebf9_e0f068a1",
      "revId": "1e489dc3bb8221b9a26f451e040b8e1fbc00985b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8ace46c7_1155bad8",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 11
      },
      "lineNbr": 965,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-09-25T18:11:55Z",
      "side": 1,
      "message": "I don\u0027t quite understand what these are doing.   It doesn\u0027t look like mCommandBuffer.open()/close() do any work, so these should probably be:\n\n    bool open()\n    {\n        return mCommandBuffer.open();\n    }\n    bool close()\n    {\n        return mCommandBuffer.close();\n    }\n\n?",
      "range": {
        "startLine": 956,
        "startChar": 0,
        "endLine": 965,
        "endChar": 5
      },
      "revId": "1e489dc3bb8221b9a26f451e040b8e1fbc00985b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f02e5280_1f0656b7",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 11
      },
      "lineNbr": 965,
      "author": {
        "id": 1263724
      },
      "writtenOn": "2020-09-25T19:33:04Z",
      "side": 1,
      "message": "I did it this way so that I could put the mRenderPassCommands-\u003eclose() \u0026 open calls inside an ASSERT that makes the code go away in a release build.\nJamie wanted to make sure this tracking didn\u0027t have any perf impact.\nThe mCommandBuffer.open \u0026 close simply set the tracking flag true or false accordingly. I don\u0027t call those anywhere but here so didn\u0027t see a need to propagate the return value lower.",
      "parentUuid": "8ace46c7_1155bad8",
      "range": {
        "startLine": 956,
        "startChar": 0,
        "endLine": 965,
        "endChar": 5
      },
      "revId": "1e489dc3bb8221b9a26f451e040b8e1fbc00985b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "46c2de2c_c7c644f3",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 11
      },
      "lineNbr": 965,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-09-25T21:48:37Z",
      "side": 1,
      "message": "I agree with Tim that this looks strange. You are using ASSERT to compile out functionality, but that\u0027s not what ASSERT is for.\n\nHonestly, I don\u0027t think there\u0027s a measurable performance impact here. These just set a bool, and there\u0027s what, 50 command buffers in the whole frame? The real impact is with checking the flag in every command recording, but that\u0027s already in ASSERT.\n\nI don\u0027t personally see a problem just calling these, but if you/Jamie insist, I think this\n\n#if defined(ANGLE_ENABLE_ASSERTS)\n    void open() { mCommandBuffer.open(); }\n    void close() { mCommandBuffer.close(); }\n#else\n    void open() {}\n    void close() {}\n#endif\n\nmakes more sense.",
      "parentUuid": "f02e5280_1f0656b7",
      "range": {
        "startLine": 956,
        "startChar": 0,
        "endLine": 965,
        "endChar": 5
      },
      "revId": "1e489dc3bb8221b9a26f451e040b8e1fbc00985b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "51517053_d3597dfd",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 11
      },
      "lineNbr": 965,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-09-25T22:40:11Z",
      "side": 1,
      "message": "Oh, I see now.   Yeah, I agree with what Shabi proposes, since I don\u0027t think this version will make immediate sense to the next person that comes across it in 12 month.",
      "parentUuid": "46c2de2c_c7c644f3",
      "range": {
        "startLine": 956,
        "startChar": 0,
        "endLine": 965,
        "endChar": 5
      },
      "revId": "1e489dc3bb8221b9a26f451e040b8e1fbc00985b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "48817de6_f1997485",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 11
      },
      "lineNbr": 965,
      "author": {
        "id": 1263724
      },
      "writtenOn": "2020-09-28T23:51:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "51517053_d3597dfd",
      "range": {
        "startLine": 956,
        "startChar": 0,
        "endLine": 965,
        "endChar": 5
      },
      "revId": "1e489dc3bb8221b9a26f451e040b8e1fbc00985b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}