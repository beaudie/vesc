{
  "comments": [
    {
      "key": {
        "uuid": "870c6ac1_271bba60",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 8,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-01-14T19:58:03Z",
      "side": 1,
      "message": "can you document your implementation in a paragraph after the title of the CL? It\u0027s worth recording and gives the reviewers a bit of context.",
      "revId": "f0e2a557bcaec4a216ce030417e9e1c18f877cf1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e7344668_623bb60d",
        "filename": "src/libANGLE/renderer/d3d/d3d11/InputLayoutCache.cpp",
        "patchSetId": 2
      },
      "lineNbr": 239,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-01-14T19:58:03Z",
      "side": 1,
      "message": "so if you\u0027re drawing 10 instances of a 6 vertex quad, this will draw each of those 10 instances 6xN times, where N is the maximum index in the index range info? Sorry I\u0027m trying to wrap my head around this and why we\u0027re using this implementation.",
      "range": {
        "startLine": 238,
        "startChar": 16,
        "endLine": 239,
        "endChar": 69
      },
      "revId": "f0e2a557bcaec4a216ce030417e9e1c18f877cf1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e759a674_8894756e",
        "filename": "src/libANGLE/renderer/d3d/d3d11/InputLayoutCache.cpp",
        "patchSetId": 2
      },
      "lineNbr": 239,
      "author": {
        "id": 1115159
      },
      "writtenOn": "2016-01-14T21:05:42Z",
      "side": 1,
      "message": "Yes.  This works for both arrays instanced and elements instanced only because the elements instanced buffer has already been expanded to match the indices 1 to 1 in counts.  I did this work earlier to support indexed GL_POINTS rendering a while ago.",
      "parentUuid": "e7344668_623bb60d",
      "range": {
        "startLine": 238,
        "startChar": 16,
        "endLine": 239,
        "endChar": 69
      },
      "revId": "f0e2a557bcaec4a216ce030417e9e1c18f877cf1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "47fef2bd_c52bbabc",
        "filename": "src/libANGLE/renderer/d3d/d3d11/InputLayoutCache.cpp",
        "patchSetId": 2
      },
      "lineNbr": 401,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-01-14T19:58:03Z",
      "side": 1,
      "message": "this isn\u0027t necessarily true. there can be a non-zero divisor, and a normal call to DrawElements. In this case, it\u0027s like calling DrawElementsInstanced with an instance count of one. does this code work in that case?",
      "range": {
        "startLine": 400,
        "startChar": 0,
        "endLine": 401,
        "endChar": 84
      },
      "revId": "f0e2a557bcaec4a216ce030417e9e1c18f877cf1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "27673e34_2f08d206",
        "filename": "src/libANGLE/renderer/d3d/d3d11/InputLayoutCache.cpp",
        "patchSetId": 2
      },
      "lineNbr": 401,
      "author": {
        "id": 1115159
      },
      "writtenOn": "2016-01-14T21:05:42Z",
      "side": 1,
      "message": "oh!  I didn\u0027t know that was valid.  Ok.  I will need to adjust some things a bit.  If I cannot make that assumption here by inspecting these values, then I will need to somehow push the type of rendering call used.  I do not want to enter this codepath if we are not rendering instanced points (with emulation).",
      "parentUuid": "47fef2bd_c52bbabc",
      "range": {
        "startLine": 400,
        "startChar": 0,
        "endLine": 401,
        "endChar": 84
      },
      "revId": "f0e2a557bcaec4a216ce030417e9e1c18f877cf1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c737426a_413f92ad",
        "filename": "src/libANGLE/renderer/d3d/d3d11/InputLayoutCache.cpp",
        "patchSetId": 2
      },
      "lineNbr": 403,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-01-14T19:58:03Z",
      "side": 1,
      "message": "DrawIndexedInstanced",
      "range": {
        "startLine": 403,
        "startChar": 20,
        "endLine": 403,
        "endChar": 38
      },
      "revId": "f0e2a557bcaec4a216ce030417e9e1c18f877cf1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c737426a_613896c8",
        "filename": "src/libANGLE/renderer/d3d/d3d11/Renderer11.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1885,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-01-14T19:58:03Z",
      "side": 1,
      "message": "nit: you can put this comment in one big line and use git cl format to wrap it optimally.",
      "range": {
        "startLine": 1882,
        "startChar": 15,
        "endLine": 1885,
        "endChar": 34
      },
      "revId": "f0e2a557bcaec4a216ce030417e9e1c18f877cf1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "07495aa4_934dc7c5",
        "filename": "src/libANGLE/renderer/d3d/d3d11/Renderer11.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1885,
      "author": {
        "id": 1115159
      },
      "writtenOn": "2016-01-14T21:05:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c737426a_613896c8",
      "range": {
        "startLine": 1882,
        "startChar": 15,
        "endLine": 1885,
        "endChar": 34
      },
      "revId": "f0e2a557bcaec4a216ce030417e9e1c18f877cf1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6703f691_464fd2b9",
        "filename": "src/libANGLE/renderer/d3d/d3d9/Renderer9.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1261,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-01-14T19:58:03Z",
      "side": 1,
      "message": "git cl format",
      "range": {
        "startLine": 1261,
        "startChar": 52,
        "endLine": 1261,
        "endChar": 54
      },
      "revId": "f0e2a557bcaec4a216ce030417e9e1c18f877cf1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c75ca266_cce202be",
        "filename": "src/libANGLE/renderer/d3d/d3d9/Renderer9.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1261,
      "author": {
        "id": 1115159
      },
      "writtenOn": "2016-01-14T21:05:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6703f691_464fd2b9",
      "range": {
        "startLine": 1261,
        "startChar": 52,
        "endLine": 1261,
        "endChar": 54
      },
      "revId": "f0e2a557bcaec4a216ce030417e9e1c18f877cf1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c737426a_c152c216",
        "filename": "src/tests/gl_tests/InstancingTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 157,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-01-14T19:58:03Z",
      "side": 1,
      "message": "nit: make this a member variable GLuing mProgram, init it to zero in the constructor and free it in the destructor. This will clean up well after any test execution, even if they don\u0027t allocate it or error out in the middle.",
      "range": {
        "startLine": 157,
        "startChar": 15,
        "endLine": 157,
        "endChar": 22
      },
      "revId": "f0e2a557bcaec4a216ce030417e9e1c18f877cf1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "07495aa4_733e3b0a",
        "filename": "src/tests/gl_tests/InstancingTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 157,
      "author": {
        "id": 1115159
      },
      "writtenOn": "2016-01-14T21:05:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c737426a_c152c216",
      "range": {
        "startLine": 157,
        "startChar": 15,
        "endLine": 157,
        "endChar": 22
      },
      "revId": "f0e2a557bcaec4a216ce030417e9e1c18f877cf1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "27fd7ec1_276df4d3",
        "filename": "src/tests/gl_tests/InstancingTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 376,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-01-14T19:58:03Z",
      "side": 1,
      "message": "nit: you can fit these two lines in one line",
      "range": {
        "startLine": 375,
        "startChar": 0,
        "endLine": 376,
        "endChar": 13
      },
      "revId": "f0e2a557bcaec4a216ce030417e9e1c18f877cf1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "07495aa4_53433f9a",
        "filename": "src/tests/gl_tests/InstancingTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 376,
      "author": {
        "id": 1115159
      },
      "writtenOn": "2016-01-14T21:05:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "27fd7ec1_276df4d3",
      "range": {
        "startLine": 375,
        "startChar": 0,
        "endLine": 376,
        "endChar": 13
      },
      "revId": "f0e2a557bcaec4a216ce030417e9e1c18f877cf1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}