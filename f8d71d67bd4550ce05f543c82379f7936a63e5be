{
  "comments": [
    {
      "key": {
        "uuid": "16a26a63_bcd3a180",
        "filename": "extensions/EGL_ANGLE_device_creation_d3d11.txt",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-11-03T13:23:45Z",
      "side": 1,
      "message": "I wonder if it might be sensible to split the create/destroy and d3d11 bits into split extensions, for future use with other types of renderers and ANGLE. Geoff any thoughts?",
      "revId": "f8d71d67bd4550ce05f543c82379f7936a63e5be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "366dadb4_96bb6a1e",
        "filename": "extensions/EGL_ANGLE_device_creation_d3d11.txt",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2015-11-03T14:49:21Z",
      "side": 1,
      "message": "Yes, I agree with this.  EGL usually does layered extensions for these types of things.",
      "parentUuid": "16a26a63_bcd3a180",
      "revId": "f8d71d67bd4550ce05f543c82379f7936a63e5be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "562a227b_8e4e7016",
        "filename": "extensions/EGL_ANGLE_device_creation_d3d11.txt",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1115160
      },
      "writtenOn": "2015-11-03T18:49:25Z",
      "side": 1,
      "message": "Yep, will do.",
      "parentUuid": "366dadb4_96bb6a1e",
      "revId": "f8d71d67bd4550ce05f543c82379f7936a63e5be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f6923665_4ba9c59f",
        "filename": "extensions/EGL_ANGLE_device_creation_d3d11.txt",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1115160
      },
      "writtenOn": "2015-11-04T18:14:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "562a227b_8e4e7016",
      "revId": "f8d71d67bd4550ce05f543c82379f7936a63e5be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "164a6942_f882c995",
        "filename": "extensions/EGL_ANGLE_device_creation_d3d11.txt",
        "patchSetId": 4
      },
      "lineNbr": 61,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-11-03T13:23:45Z",
      "side": 1,
      "message": "I think these can be in one line",
      "range": {
        "startLine": 60,
        "startChar": 28,
        "endLine": 61,
        "endChar": 57
      },
      "revId": "f8d71d67bd4550ce05f543c82379f7936a63e5be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "760e462a_e3b99d97",
        "filename": "extensions/EGL_ANGLE_device_creation_d3d11.txt",
        "patchSetId": 4
      },
      "lineNbr": 61,
      "author": {
        "id": 1115160
      },
      "writtenOn": "2015-11-03T18:49:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "164a6942_f882c995",
      "range": {
        "startLine": 60,
        "startChar": 28,
        "endLine": 61,
        "endChar": 57
      },
      "revId": "f8d71d67bd4550ce05f543c82379f7936a63e5be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "366dadb4_16075a9e",
        "filename": "extensions/EGL_ANGLE_device_creation_d3d11.txt",
        "patchSetId": 4
      },
      "lineNbr": 64,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-11-03T13:23:45Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 63,
        "startChar": 27,
        "endLine": 64,
        "endChar": 48
      },
      "revId": "f8d71d67bd4550ce05f543c82379f7936a63e5be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "562a227b_0e6e00d8",
        "filename": "extensions/EGL_ANGLE_device_creation_d3d11.txt",
        "patchSetId": 4
      },
      "lineNbr": 64,
      "author": {
        "id": 1115160
      },
      "writtenOn": "2015-11-03T18:49:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "366dadb4_16075a9e",
      "range": {
        "startLine": 63,
        "startChar": 27,
        "endLine": 64,
        "endChar": 48
      },
      "revId": "f8d71d67bd4550ce05f543c82379f7936a63e5be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "96781971_656d30ed",
        "filename": "extensions/EGL_ANGLE_device_creation_d3d11.txt",
        "patchSetId": 4
      },
      "lineNbr": 76,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2015-11-03T14:49:21Z",
      "side": 1,
      "message": "While pointers are often queried from attrib lists, they usually aren\u0027t passed in via them.  I think this should match calls like eglCreatePbufferFromClientBuffer or eglGetPlatformDisplay and pass the parameters like so:\n\n   EGLDeviceEXT eglCreateDeviceANGLE(EGLenum device_type, void *device, const EGLAttrib *attrib_list);\n\nIt could also be called eglGetDeviceANGLE to mirror how displays are \u0027got\u0027 rather than created.",
      "range": {
        "startLine": 76,
        "startChar": 8,
        "endLine": 76,
        "endChar": 72
      },
      "revId": "f8d71d67bd4550ce05f543c82379f7936a63e5be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "366dadb4_56dab271",
        "filename": "extensions/EGL_ANGLE_device_creation_d3d11.txt",
        "patchSetId": 4
      },
      "lineNbr": 76,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-11-03T15:22:56Z",
      "side": 1,
      "message": "Agree with the first suggestion, but I\u0027m not sure I agree with GetDevice... displays are implicitly assumed to exist already and the nomenclature uses Get/Initialize/Terminate. I\u0027m fine with any scheme but we almost want something like \"WrapDevice\"",
      "parentUuid": "96781971_656d30ed",
      "range": {
        "startLine": 76,
        "startChar": 8,
        "endLine": 76,
        "endChar": 72
      },
      "revId": "f8d71d67bd4550ce05f543c82379f7936a63e5be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b656fdeb_78a7b57e",
        "filename": "extensions/EGL_ANGLE_device_creation_d3d11.txt",
        "patchSetId": 4
      },
      "lineNbr": 76,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2015-11-03T15:58:10Z",
      "side": 1,
      "message": "Agree that WrapDevice is more precise but there is no precedent of using this naming in EGL yet.  I think the GetDevice is best because has a similar meaning to WrapDevice and similar naming is already used in EGL.",
      "parentUuid": "366dadb4_56dab271",
      "range": {
        "startLine": 76,
        "startChar": 8,
        "endLine": 76,
        "endChar": 72
      },
      "revId": "f8d71d67bd4550ce05f543c82379f7936a63e5be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "16a26a63_1c489507",
        "filename": "extensions/EGL_ANGLE_device_creation_d3d11.txt",
        "patchSetId": 4
      },
      "lineNbr": 76,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-11-03T16:04:20Z",
      "side": 1,
      "message": "SGTM",
      "parentUuid": "b656fdeb_78a7b57e",
      "range": {
        "startLine": 76,
        "startChar": 8,
        "endLine": 76,
        "endChar": 72
      },
      "revId": "f8d71d67bd4550ce05f543c82379f7936a63e5be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "96401a44_ba3baec5",
        "filename": "extensions/EGL_ANGLE_device_creation_d3d11.txt",
        "patchSetId": 4
      },
      "lineNbr": 76,
      "author": {
        "id": 1115160
      },
      "writtenOn": "2015-11-03T18:49:25Z",
      "side": 1,
      "message": "One requirement here is that if a D3D11 device is lost then the EGL device should be able to be completely released/destroyed. We don\u0027t want ANGLE hanging onto those lost D3D devices.\n\nTherefore, if a caller does the following:\n1) creates/gets an EGL device wrapping a D3D11 device\n2) releases/destroys the EGL device\n\nthen ANGLE shouldn\u0027t hang onto the EGL/D3D11 device. So now, if (after performing 1) and 2)) the caller calls create/get again with the same D3D11 device then they will get a different EGL device.\n\nThat\u0027s different to the Get[Platform]Display, and feels more like Create/Destroy to me.\n\nAnother (smaller) reason why I chose Create/Destroy was that I think it provides a clear interaction with a EGLDeviceEXT returned from eglQueryDisplayAttribEXT... if you query an EGL device that a Display created then the caller may think they have a taken a ref on it and need to \u0027Release\u0027 the device. I think it\u0027s clear that they shouldn\u0027t \u0027Destroy\u0027 it though.",
      "parentUuid": "16a26a63_1c489507",
      "range": {
        "startLine": 76,
        "startChar": 8,
        "endLine": 76,
        "endChar": 72
      },
      "revId": "f8d71d67bd4550ce05f543c82379f7936a63e5be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "765c8636_a9093409",
        "filename": "extensions/EGL_ANGLE_device_creation_d3d11.txt",
        "patchSetId": 4
      },
      "lineNbr": 76,
      "author": {
        "id": 1115160
      },
      "writtenOn": "2015-11-03T18:51:17Z",
      "side": 1,
      "message": "Regarding the pointer: any concerns about native rendering APIs that require two pointers to form an EGLDevice? e.g. D3D9 with IDirect3DDevice9 and IDirect3D9. That\u0027s why I chose to point the pointer in the attrib list, but I\u0027m happy to change that.\n\n\nRegarding pointers in attrib lists, I think that\u0027s changing with EGL 1.5:\n\n2 This is a functionality regression relative to earlier versions of EGL, first adopted in the November,\n2013 EGL 1.4 update. It was adopted because EGL implementations on some 64-bit platforms\nchose their EGLint type to be a 32-bit integer type, and changing the definition would break their\nABIs in a way considered to be too disruptive to their application base. The EGL_KHR_cl_-\nevent2 and EGL_KHR_lock_surface3 extensions replace similar earlier extensions allowing\npointers in attribute lists, and work around this regression by providing new interfaces using\nattribute types which are guaranteed to be sufficiently large. New commands in EGL 1.5 taking\nattribute lists and returning attribute values use the EGLAttrib type (see below).",
      "parentUuid": "96401a44_ba3baec5",
      "range": {
        "startLine": 76,
        "startChar": 8,
        "endLine": 76,
        "endChar": 72
      },
      "revId": "f8d71d67bd4550ce05f543c82379f7936a63e5be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "36168e90_2889030f",
        "filename": "extensions/EGL_ANGLE_device_creation_d3d11.txt",
        "patchSetId": 4
      },
      "lineNbr": 76,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2015-11-04T21:08:08Z",
      "side": 1,
      "message": "I don\u0027t think we should be worried about the D3D9 case since you can query the IDirect3D9 object from the device (or create a device from the IDirect3D9).\n\nI\u0027m fine with Create or Get but I still think that Release is better than Destroy because we\u0027ll be only calling Release on the underlying device.  I don\u0027t want to imply that the user\u0027s D3D11 device will be lost after cleaning up their EGL resources.",
      "parentUuid": "765c8636_a9093409",
      "range": {
        "startLine": 76,
        "startChar": 8,
        "endLine": 76,
        "endChar": 72
      },
      "revId": "f8d71d67bd4550ce05f543c82379f7936a63e5be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f69cf62b_7e466d57",
        "filename": "extensions/EGL_ANGLE_device_creation_d3d11.txt",
        "patchSetId": 4
      },
      "lineNbr": 90,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-11-03T13:23:45Z",
      "side": 1,
      "message": "is this possible to verify?",
      "range": {
        "startLine": 88,
        "startChar": 57,
        "endLine": 90,
        "endChar": 14
      },
      "revId": "f8d71d67bd4550ce05f543c82379f7936a63e5be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "765c8636_4993d83e",
        "filename": "extensions/EGL_ANGLE_device_creation_d3d11.txt",
        "patchSetId": 4
      },
      "lineNbr": 90,
      "author": {
        "id": 1115160
      },
      "writtenOn": "2015-11-03T18:49:25Z",
      "side": 1,
      "message": "Nope... removed.",
      "parentUuid": "f69cf62b_7e466d57",
      "range": {
        "startLine": 88,
        "startChar": 57,
        "endLine": 90,
        "endChar": 14
      },
      "revId": "f8d71d67bd4550ce05f543c82379f7936a63e5be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b686fe2b_29a48dc8",
        "filename": "extensions/EGL_ANGLE_device_creation_d3d11.txt",
        "patchSetId": 4
      },
      "lineNbr": 90,
      "author": {
        "id": 1115160
      },
      "writtenOn": "2015-11-04T18:14:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "765c8636_4993d83e",
      "range": {
        "startLine": 88,
        "startChar": 57,
        "endLine": 90,
        "endChar": 14
      },
      "revId": "f8d71d67bd4550ce05f543c82379f7936a63e5be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "36d04e3b_d5d01cd5",
        "filename": "extensions/EGL_ANGLE_device_creation_d3d11.txt",
        "patchSetId": 4
      },
      "lineNbr": 90,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-11-05T21:38:53Z",
      "side": 1,
      "message": "I think we can leave in some language for this condition, except instead of generating an error, which isn\u0027t possible, we can leave it as undefined behaviour.",
      "parentUuid": "b686fe2b_29a48dc8",
      "range": {
        "startLine": 88,
        "startChar": 57,
        "endLine": 90,
        "endChar": 14
      },
      "revId": "f8d71d67bd4550ce05f543c82379f7936a63e5be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7673a594_dbf18b96",
        "filename": "extensions/EGL_ANGLE_device_creation_d3d11.txt",
        "patchSetId": 4
      },
      "lineNbr": 105,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2015-11-03T14:49:21Z",
      "side": 1,
      "message": "I think eglReleaseDeviceANGLE would be a better name to not imply that the device that was passed in earlier is being completely destroyed.",
      "range": {
        "startLine": 105,
        "startChar": 19,
        "endLine": 105,
        "endChar": 40
      },
      "revId": "f8d71d67bd4550ce05f543c82379f7936a63e5be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "36204e91_082eea66",
        "filename": "extensions/EGL_ANGLE_device_creation_d3d11.txt",
        "patchSetId": 4
      },
      "lineNbr": 105,
      "author": {
        "id": 1115160
      },
      "writtenOn": "2015-11-03T18:49:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7673a594_dbf18b96",
      "range": {
        "startLine": 105,
        "startChar": 19,
        "endLine": 105,
        "endChar": 40
      },
      "revId": "f8d71d67bd4550ce05f543c82379f7936a63e5be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d69a9277_f2550846",
        "filename": "extensions/EGL_ANGLE_device_creation_d3d11.txt",
        "patchSetId": 4
      },
      "lineNbr": 105,
      "author": {
        "id": 1115160
      },
      "writtenOn": "2015-11-04T18:14:22Z",
      "side": 1,
      "message": "Switched back to \u0027Destroy\u0027 for now, happy to continue the discussion above.",
      "parentUuid": "36204e91_082eea66",
      "range": {
        "startLine": 105,
        "startChar": 19,
        "endLine": 105,
        "endChar": 40
      },
      "revId": "f8d71d67bd4550ce05f543c82379f7936a63e5be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b6619dbd_d4e78ddb",
        "filename": "extensions/EGL_ANGLE_device_creation_d3d11.txt",
        "patchSetId": 4
      },
      "lineNbr": 132,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-11-03T13:23:45Z",
      "side": 1,
      "message": "after you create a device and make a display from it, who manages the lifetime of the device?",
      "revId": "f8d71d67bd4550ce05f543c82379f7936a63e5be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5625c29e_d12c23d6",
        "filename": "extensions/EGL_ANGLE_device_creation_d3d11.txt",
        "patchSetId": 4
      },
      "lineNbr": 132,
      "author": {
        "id": 1115160
      },
      "writtenOn": "2015-11-03T18:49:25Z",
      "side": 1,
      "message": "You, and not the display. Any thoughts against that?",
      "parentUuid": "b6619dbd_d4e78ddb",
      "revId": "f8d71d67bd4550ce05f543c82379f7936a63e5be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "36892e3b_add6bd19",
        "filename": "extensions/EGL_ANGLE_device_creation_d3d11.txt",
        "patchSetId": 4
      },
      "lineNbr": 132,
      "author": {
        "id": 1115160
      },
      "writtenOn": "2015-11-04T18:14:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5625c29e_d12c23d6",
      "revId": "f8d71d67bd4550ce05f543c82379f7936a63e5be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6e61228_12d46c67",
        "filename": "extensions/EGL_ANGLE_device_creation_d3d11.txt",
        "patchSetId": 4
      },
      "lineNbr": 132,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-11-05T21:38:53Z",
      "side": 1,
      "message": "No, self-ownership is fine, as long as we mention this in the extension.",
      "parentUuid": "36892e3b_add6bd19",
      "revId": "f8d71d67bd4550ce05f543c82379f7936a63e5be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}