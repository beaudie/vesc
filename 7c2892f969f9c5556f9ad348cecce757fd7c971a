{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ae98464e_22b22467",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-03-03T19:52:15Z",
      "side": 1,
      "message": "Yuxin, did you verify mac-swangle-chromium-try-x64 on the try check fails before you added the fix? Just want to make our testing is valid.",
      "revId": "7c2892f969f9c5556f9ad348cecce757fd7c971a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ffb2a979_37edffd1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1520902
      },
      "writtenOn": "2022-03-03T21:03:36Z",
      "side": 1,
      "message": "Hi Jamie, yes I ran the mac-swangle-chromium-try-x64 on the patch1: https://ci.chromium.org/ui/p/chromium/builders/try/mac-swangle-chromium-try-x64/135/overview, and the test failed as expected.",
      "parentUuid": "ae98464e_22b22467",
      "revId": "7c2892f969f9c5556f9ad348cecce757fd7c971a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff040295_948f5b5a",
        "filename": "src/libANGLE/renderer/vulkan/ResourceVk.h",
        "patchSetId": 2
      },
      "lineNbr": 95,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2022-03-03T19:14:02Z",
      "side": 1,
      "message": "I saw there is getSerial() and updateSerialOneOff() API here, since you will only use clone if counter\u003d\u003d1, I think you don\u0027t need this API. Just create a new mUSe and then newUse.updateSerialOneOff(oldUse.getSerial()); See the other comment.",
      "range": {
        "startLine": 89,
        "startChar": 4,
        "endLine": 95,
        "endChar": 5
      },
      "revId": "7c2892f969f9c5556f9ad348cecce757fd7c971a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1bf5577f_f958064e",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 2
      },
      "lineNbr": 4766,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2022-03-03T19:14:02Z",
      "side": 1,
      "message": "I would just do this:\n\nimageView-\u003erelease(renderer, mImageAndViewGarbage);\n    \nif(!mUse.usedInRecordedCommands())\n{\n   SharedResourceUse use;\n   use.updateSerialOneOff(mUse.getSerial());\n   renderer-\u003ecollectGarbage(std::move(use),std::move(mImageAndViewGarbage));\n}\n    \nASSERT(mImageAndViewGarbage.size() \u003c\u003d 1000);\n\nThis way, when possible, you are releasing all collected views.",
      "range": {
        "startLine": 4742,
        "startChar": 4,
        "endLine": 4766,
        "endChar": 5
      },
      "revId": "7c2892f969f9c5556f9ad348cecce757fd7c971a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bfdaa6c8_4a77efdc",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 2
      },
      "lineNbr": 4766,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2022-03-03T19:26:02Z",
      "side": 1,
      "message": "sorry, you need to call newUse.init() first before calling updateSerialOneOff.",
      "parentUuid": "1bf5577f_f958064e",
      "range": {
        "startLine": 4742,
        "startChar": 4,
        "endLine": 4766,
        "endChar": 5
      },
      "revId": "7c2892f969f9c5556f9ad348cecce757fd7c971a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "18eae6c9_f4af43c6",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 2
      },
      "lineNbr": 4766,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-03-03T19:51:15Z",
      "side": 1,
      "message": "If the image is used in a single context\u0027s recorded commands, then we should allow for immediate GC. Right now you\u0027re asserting the image is never used in any context, which seems like it might not fix the issue.\n\nAdding a new method like \"usedInMultipleRecordedCommands\" might be appropriate.",
      "parentUuid": "bfdaa6c8_4a77efdc",
      "range": {
        "startLine": 4742,
        "startChar": 4,
        "endLine": 4766,
        "endChar": 5
      },
      "revId": "7c2892f969f9c5556f9ad348cecce757fd7c971a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "af9d01b0_8867bd05",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 2
      },
      "lineNbr": 2044,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2022-03-03T19:14:02Z",
      "side": 1,
      "message": "Also don\u0027t need this. See the other comment.",
      "range": {
        "startLine": 2044,
        "startChar": 0,
        "endLine": 2044,
        "endChar": 42
      },
      "revId": "7c2892f969f9c5556f9ad348cecce757fd7c971a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}