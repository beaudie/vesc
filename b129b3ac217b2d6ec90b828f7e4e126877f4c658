{
  "comments": [
    {
      "key": {
        "uuid": "3c365963_feff6fa2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-09-24T20:34:04Z",
      "side": 1,
      "message": "Am I wearing you out? The worst of it is over with this change!\n\nSome optimizations with invalidate and initial load are upcoming, but they should be fairly simple.",
      "revId": "b129b3ac217b2d6ec90b828f7e4e126877f4c658",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e5ebd98a_13fb7cba",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-09-25T22:18:39Z",
      "side": 1,
      "message": "Looks pretty similar to the last one, though I\u0027m even less familiar with the rules and subtleties of D/S stuff.\n\nThe only thing that stands out is that it seems all of the testing always has a color and D/S attachment when there\u0027s any drawing being done.   Is it possible to draw with just a D/S attachment and then attach a color attachment to verify the D/S contents (or query the D/S attachment directly)?",
      "revId": "b129b3ac217b2d6ec90b828f7e4e126877f4c658",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "408f3ebf_cef27075",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-09-25T22:18:57Z",
      "side": 1,
      "message": "Oops, forgot to +1.",
      "revId": "b129b3ac217b2d6ec90b828f7e4e126877f4c658",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "48056107_e422d585",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-09-29T16:54:05Z",
      "side": 1,
      "message": "Added a test.",
      "parentUuid": "e5ebd98a_13fb7cba",
      "revId": "b129b3ac217b2d6ec90b828f7e4e126877f4c658",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b3b43352_39923d8f",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 2449,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-09-25T22:18:39Z",
      "side": 1,
      "message": "mini-rant: It would be nice to have these gl::IMPLEMENTATION_MAX_DRAW_BUFFERS [+ 1] depth/stencil index values explicitly defined somewhere, so we can avoid this assumption about where depth/stencil live (and these magic +1s).   Unfortunately, there are a lot of places where the D/S index is determined by looping through all of the color attachments and then +1 to the final count, which some kind of well defined enum value wouldn\u0027t help with.\n\nIn a more perfect world, functions like these set() could even take a typed value, which is defined to contain the color, depth, and stencil attachment indexes, rather than raw uint32_t colorIndexGL that\u0027s used everywhere.\n\nOf course, with more time eventually this will all look more natural and maybe this is all just a non-issue for everyone else.",
      "range": {
        "startLine": 2442,
        "startChar": 0,
        "endLine": 2449,
        "endChar": 9
      },
      "revId": "b129b3ac217b2d6ec90b828f7e4e126877f4c658",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0bb8f393_1b9e0e7e",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 2449,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-09-29T16:54:05Z",
      "side": 1,
      "message": "You have a point. I don\u0027t immediately see a good way though, as you said, sometimes D/S is right after the last color, sometimes it has a fixed index. In UtilsVk, the flags set 2*MAX_DRAW and 2*MAX_DRAW+1.\n\nI\u0027m thinking of renaming and reusing kClearValueDepthIndex and kClearValueStencilIndex. Do you mind if I follow up in a separate CL for that?",
      "parentUuid": "b3b43352_39923d8f",
      "range": {
        "startLine": 2442,
        "startChar": 0,
        "endLine": 2449,
        "endChar": 9
      },
      "revId": "b129b3ac217b2d6ec90b828f7e4e126877f4c658",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "245226d7_9c5dfa1d",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 2449,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-09-29T23:17:59Z",
      "side": 1,
      "message": "Yeah, nothing in this CL needs to change regarding this.   I certainly don\u0027t have a good answer for any of this, it\u0027s just something that stands out whenever I see it.",
      "parentUuid": "0bb8f393_1b9e0e7e",
      "range": {
        "startLine": 2442,
        "startChar": 0,
        "endLine": 2449,
        "endChar": 9
      },
      "revId": "b129b3ac217b2d6ec90b828f7e4e126877f4c658",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "91f0404d_4c4755ea",
        "filename": "src/libANGLE/renderer/vulkan/UtilsVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 321,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-09-29T16:54:05Z",
      "side": 1,
      "message": "FYI. Caught a bug here and added test. These should have been set on bits 16 and 17 unconditionally, otherwise they were aliasing color attachment N+1.",
      "range": {
        "startLine": 315,
        "startChar": 0,
        "endLine": 321,
        "endChar": 5
      },
      "revId": "b129b3ac217b2d6ec90b828f7e4e126877f4c658",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b428ba70_087c6d6c",
        "filename": "src/libANGLE/renderer/vulkan/UtilsVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 395,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-09-25T22:18:39Z",
      "side": 1,
      "message": "These lines show that the \u0027input_attachment_index\u0027 values are unique for depth and stencil, but the code below reuses the same depthStencilInputIndex.   Which is correct?   My guess is a missing ++input_attachment_index below.",
      "range": {
        "startLine": 394,
        "startChar": 0,
        "endLine": 395,
        "endChar": 96
      },
      "revId": "b129b3ac217b2d6ec90b828f7e4e126877f4c658",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "06cea9f6_bfba90c5",
        "filename": "src/libANGLE/renderer/vulkan/UtilsVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 395,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-09-29T16:54:05Z",
      "side": 1,
      "message": "I originally had one attachment per aspect, but then merged them into a single attachment. Forgot to update this comment. Done.",
      "parentUuid": "b428ba70_087c6d6c",
      "range": {
        "startLine": 394,
        "startChar": 0,
        "endLine": 395,
        "endChar": 96
      },
      "revId": "b129b3ac217b2d6ec90b828f7e4e126877f4c658",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "58b07387_3273b54d",
        "filename": "src/libANGLE/renderer/vulkan/UtilsVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 433,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-09-25T22:18:39Z",
      "side": 1,
      "message": "After looking at this stuff a bit more, I think these hard coded \u00270\u0027 should actually be DescriptorSetIndex::InternalShader.   It\u0027s a bit of a pain to fill out, but I think more correct.",
      "range": {
        "startLine": 433,
        "startChar": 21,
        "endLine": 433,
        "endChar": 26
      },
      "revId": "b129b3ac217b2d6ec90b828f7e4e126877f4c658",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e833130c_1fa6bf43",
        "filename": "src/libANGLE/renderer/vulkan/UtilsVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 433,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-09-29T16:54:05Z",
      "side": 1,
      "message": "True, done.",
      "parentUuid": "58b07387_3273b54d",
      "range": {
        "startLine": 433,
        "startChar": 21,
        "endLine": 433,
        "endChar": 26
      },
      "revId": "b129b3ac217b2d6ec90b828f7e4e126877f4c658",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3e1e9cf4_e35c5aff",
        "filename": "src/libANGLE/renderer/vulkan/UtilsVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 2248,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-09-25T22:18:39Z",
      "side": 1,
      "message": "Can you add an ASSERT(totalBindingCount \u003e 0)?",
      "revId": "b129b3ac217b2d6ec90b828f7e4e126877f4c658",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c5711e85_1a63c1d0",
        "filename": "src/libANGLE/renderer/vulkan/UtilsVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 2248,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-09-29T16:54:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3e1e9cf4_e35c5aff",
      "revId": "b129b3ac217b2d6ec90b828f7e4e126877f4c658",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "662246ab_12398012",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "patchSetId": 6
      },
      "lineNbr": 1670,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-09-25T22:18:39Z",
      "side": 1,
      "message": "Why is this check necessary?   It looks like everything here is only concerned with color attachments.",
      "revId": "b129b3ac217b2d6ec90b828f7e4e126877f4c658",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a6e29e0e_dd253450",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "patchSetId": 6
      },
      "lineNbr": 1670,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-09-29T16:54:05Z",
      "side": 1,
      "message": "If color doesn\u0027t need resolve but depth/stencil does, we still have an initial subpass, so we need to adjust blendState.attachmentCount for that initial subpass (which is 0 in that case).\n\nAdded a test. It does\u0027t actually trigger a VVL warning, which is a bug I\u0027m going to report.",
      "parentUuid": "662246ab_12398012",
      "revId": "b129b3ac217b2d6ec90b828f7e4e126877f4c658",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7d6fe48f_23a68233",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.h",
        "patchSetId": 6
      },
      "lineNbr": 282,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-09-29T21:26:42Z",
      "side": 1,
      "message": "it keeps getting more and more packed! amazing.\n\nAre RenderPass with different unresolve flags compatible?",
      "range": {
        "startLine": 281,
        "startChar": 0,
        "endLine": 282,
        "endChar": 58
      },
      "revId": "b129b3ac217b2d6ec90b828f7e4e126877f4c658",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3dfd3e61_e951eff8",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 6
      },
      "lineNbr": 364,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-09-29T21:26:42Z",
      "side": 1,
      "message": "did I forget to update this way back? shouldn\u0027t this be early fragment tests or something?",
      "range": {
        "startLine": 364,
        "startChar": 11,
        "endLine": 364,
        "endChar": 84
      },
      "revId": "b129b3ac217b2d6ec90b828f7e4e126877f4c658",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}