{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "358f5329_85b83c0e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-01-13T21:18:20Z",
      "side": 1,
      "message": "I don\u0027t understand how/why iOS is so different. I think there\u0027s something subtle I misunderstand here. I\u0027m hopefuly we can do it without needing to introduce a public headers concept. Because I already coded a bunch of \"headers\" targets to fix gn check.",
      "revId": "65df8447874a8fc83a75947853983638619d2c9d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "66b52a5e_d4b2a9a3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2021-01-13T21:25:54Z",
      "side": 1,
      "message": "If you look at template(\"ios_framework_bundle\") in https://source.chromium.org/chromium/chromium/src/+/master:build/config/ios/rules.gni, it creates a bunch of targets instead of just 1 shared library.\n\nWithout my change, \"gn gen --check\" gives errors like:\n\nERROR at //third_party/angle/src/feature_support_util/feature_support_util_unittest.cpp:12:11: Can\u0027t include this header from here.\n#include \"feature_support_util.h\"\n          ^---------------------\nThe target:\n  //third_party/angle/src/tests:angle_unittests_arch_executable_sources\nis including a file from the target:\n  //third_party/angle:libfeature_support_framework_arch_shared_library_sources\n\nIt\u0027s usually best to depend directly on the destination target.\nIn some cases, the destination target is considered a subcomponent\nof an intermediate target. In this case, the intermediate target\nshould depend publicly on the destination to forward the ability\nto include headers.\n\nDependency chain (there may also be others):\n  //third_party/angle/src/tests:angle_unittests_arch_executable_sources --\u003e\n  //third_party/angle:libfeature_support --\u003e\n  //third_party/angle:libfeature_support_framework+bundle --\u003e\n  //third_party/angle:libfeature_support_framework --\u003e\n  //third_party/angle:libfeature_support_framework_signed_bundle --\u003e\n  //third_party/angle:libfeature_support_framework_shared_library --[private]--\u003e\n  //third_party/angle:libfeature_support_framework_arch_shared_library --[private]--\u003e\n  //third_party/angle:libfeature_support_framework_arch_shared_library_sources\n\nBy defining public_headers variable, I get ios_framework_bundle to also create *_framework_headers target. Then I add it to public_deps of the target which is the shared_library on non-iOS",
      "parentUuid": "358f5329_85b83c0e",
      "revId": "65df8447874a8fc83a75947853983638619d2c9d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "743b712f_1f1aab91",
        "filename": "gni/angle.gni",
        "patchSetId": 1
      },
      "lineNbr": 309,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-01-13T21:18:20Z",
      "side": 1,
      "message": "this is a bit too general for a specific issue. I\u0027d suggest just making a specific libglesv2_headers target or template target and making that a public_deps of the libGLESv2 specializations.",
      "range": {
        "startLine": 305,
        "startChar": 0,
        "endLine": 309,
        "endChar": 7
      },
      "revId": "65df8447874a8fc83a75947853983638619d2c9d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8f1a6303_83271871",
        "filename": "gni/angle.gni",
        "patchSetId": 1
      },
      "lineNbr": 309,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2021-01-13T21:32:12Z",
      "side": 1,
      "message": "The \"specific libglesv2_headers target\" is created by template(\"ios_framework_bundle\") and is named libGLESv2_framework_framework_headers.\nHere I make it a public_deps of libGLESv2, so that anyone who depends on libGLESv2 also has access to it\u0027s headers.\n\nWhy do you think the issue is specific? This applies to any wannabe shared_library on iOS.",
      "parentUuid": "743b712f_1f1aab91",
      "range": {
        "startLine": 305,
        "startChar": 0,
        "endLine": 309,
        "endChar": 7
      },
      "revId": "65df8447874a8fc83a75947853983638619d2c9d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "241ad681_50905c2f",
        "filename": "src/libGLESv2.gni",
        "patchSetId": 1
      },
      "lineNbr": 524,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-01-13T21:18:20Z",
      "side": 1,
      "message": "For consistency we can use all of the headers in libglesv2 and just call this libglesv2_headers. There\u0027s no real public/private separation here. As it stands only using 4 of the headers is a bit selective.",
      "range": {
        "startLine": 524,
        "startChar": 17,
        "endLine": 524,
        "endChar": 46
      },
      "revId": "65df8447874a8fc83a75947853983638619d2c9d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1560a3c8_d67c4f18",
        "filename": "src/libGLESv2.gni",
        "patchSetId": 1
      },
      "lineNbr": 524,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2021-01-13T21:32:12Z",
      "side": 1,
      "message": "I don\u0027t mind adding the rest, but looks like they are not used outside of libGLESv2",
      "parentUuid": "241ad681_50905c2f",
      "range": {
        "startLine": 524,
        "startChar": 17,
        "endLine": 524,
        "endChar": 46
      },
      "revId": "65df8447874a8fc83a75947853983638619d2c9d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}