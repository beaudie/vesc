{
  "comments": [
    {
      "key": {
        "uuid": "5e1c5865_abae54bf",
        "filename": "include/platform/FeaturesGL.h",
        "patchSetId": 2
      },
      "lineNbr": 404,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-01-08T20:43:32Z",
      "side": 1,
      "message": "nit: Some drivers\n\nThese are public strings, and we don\u0027t generally want to point fingers when giving this information to users. They could also get out of date, which can be confusing to them.",
      "range": {
        "startLine": 404,
        "startChar": 9,
        "endLine": 404,
        "endChar": 27
      },
      "revId": "48466714c6ac71f0f4114c9452279520c5a1be23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "18093564_9bbca01e",
        "filename": "include/platform/FeaturesGL.h",
        "patchSetId": 2
      },
      "lineNbr": 404,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2020-01-08T22:04:22Z",
      "side": 1,
      "message": "OK, done.",
      "parentUuid": "5e1c5865_abae54bf",
      "range": {
        "startLine": 404,
        "startChar": 9,
        "endLine": 404,
        "endChar": 27
      },
      "revId": "48466714c6ac71f0f4114c9452279520c5a1be23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3595fdf7_fb9107ee",
        "filename": "src/libANGLE/renderer/gl/TextureGL.cpp",
        "patchSetId": 2
      },
      "lineNbr": 154,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-01-08T20:43:32Z",
      "side": 1,
      "message": "So if texture A is copied to, deletion of unrelated texture B also requires a flush? I\u0027m going to guess that\u0027s not what you intended.\n\nIf I\u0027m right, why not track the bool in TextureGL itself?",
      "range": {
        "startLine": 154,
        "startChar": 8,
        "endLine": 154,
        "endChar": 71
      },
      "revId": "48466714c6ac71f0f4114c9452279520c5a1be23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fdf2557b_aef35e29",
        "filename": "src/libANGLE/renderer/gl/TextureGL.cpp",
        "patchSetId": 2
      },
      "lineNbr": 154,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2020-01-08T22:04:22Z",
      "side": 1,
      "message": "We don\u0027t know exactly what the bug is. I aimed to be conservative with this workaround and put a barrier between copying to any destination texture in the context, and the first subsequent texture deletion in the context. Certainly we don\u0027t want to flush multiple times if calling DeleteTextures repeatedly and there haven\u0027t been any CopyTex{Sub}Image calls in between.",
      "parentUuid": "3595fdf7_fb9107ee",
      "range": {
        "startLine": 154,
        "startChar": 8,
        "endLine": 154,
        "endChar": 71
      },
      "revId": "48466714c6ac71f0f4114c9452279520c5a1be23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e185f56b_04b5926c",
        "filename": "src/libANGLE/renderer/gl/TextureGL.cpp",
        "patchSetId": 2
      },
      "lineNbr": 154,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-01-09T03:22:59Z",
      "side": 1,
      "message": "I understand. It\u0027s just surprising to me that a copy to some texture should cause a flush on deletion of an unrelated texture.\n\nI think it\u0027s better to try being more precise with the flushes, and if it doesn\u0027t work out, get conservative. If your concern is multiple consecutive flush calls, I\u0027d hazard a guess that flush calls with nothing to flush is a noop in any driver worth its salt.",
      "parentUuid": "fdf2557b_aef35e29",
      "range": {
        "startLine": 154,
        "startChar": 8,
        "endLine": 154,
        "endChar": 71
      },
      "revId": "48466714c6ac71f0f4114c9452279520c5a1be23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a02c46d2_47dfb985",
        "filename": "src/libANGLE/renderer/gl/TextureGL.cpp",
        "patchSetId": 2
      },
      "lineNbr": 154,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2020-01-09T19:19:48Z",
      "side": 1,
      "message": "It\u0027s not free, as evidenced by the large performance regression reported in http://crbug.com/1032210 , which was a consequence of adding glFlush calls around glBindFramebuffer as a workaround for Intel driver bug http://crbug.com/1018028 . A glDeleteTextures call won\u0027t be a no-op, and will result in a real hardware flush.\n\nFrom testing, adding flushes before every glDeleteTextures call against a texture that has ever been copied to is redundant. In order to get the driver into a consistent state, what seems to be necessary is to flush the command buffer where the copies have been issued.",
      "parentUuid": "e185f56b_04b5926c",
      "range": {
        "startLine": 154,
        "startChar": 8,
        "endLine": 154,
        "endChar": 71
      },
      "revId": "48466714c6ac71f0f4114c9452279520c5a1be23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2df50d31_f6345d04",
        "filename": "src/libANGLE/renderer/gl/TextureGL.cpp",
        "patchSetId": 2
      },
      "lineNbr": 154,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-01-09T19:38:03Z",
      "side": 1,
      "message": "Well, I\u0027d guess that glBindFramebuffer probably records a few barriers, so the command buffer is not exactly empty.\n\nThat said, I don\u0027t particularly have a strong feeling about this. After all, it\u0027s a driver bug workaround.",
      "parentUuid": "a02c46d2_47dfb985",
      "range": {
        "startLine": 154,
        "startChar": 8,
        "endLine": 154,
        "endChar": 71
      },
      "revId": "48466714c6ac71f0f4114c9452279520c5a1be23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f866e1d7_3c16fe2c",
        "filename": "src/tests/gl_tests/CopyTexImageTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 488,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-01-08T20:43:32Z",
      "side": 1,
      "message": "You can use GLTexture from gl_raii.h so you don\u0027t need to Gen/Delete them.",
      "range": {
        "startLine": 488,
        "startChar": 4,
        "endLine": 488,
        "endChar": 10
      },
      "revId": "48466714c6ac71f0f4114c9452279520c5a1be23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a28ebd0_f641a046",
        "filename": "src/tests/gl_tests/CopyTexImageTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 488,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2020-01-08T22:04:22Z",
      "side": 1,
      "message": "Thanks for that pointer - I didn\u0027t know about that - but for this test case I wanted to replicate this exact order of these Gen/Delete commands. This is essentially the exact same test I provided in the bug report filed with Apple. Is it OK to leave the test in its current form?",
      "parentUuid": "f866e1d7_3c16fe2c",
      "range": {
        "startLine": 488,
        "startChar": 4,
        "endLine": 488,
        "endChar": 10
      },
      "revId": "48466714c6ac71f0f4114c9452279520c5a1be23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "993d351b_427e2e9a",
        "filename": "src/tests/gl_tests/CopyTexImageTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 488,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-01-09T03:22:59Z",
      "side": 1,
      "message": "It\u0027s certainly ok. I would add a comment with that information though, so future visitors won\u0027t change this.",
      "parentUuid": "0a28ebd0_f641a046",
      "range": {
        "startLine": 488,
        "startChar": 4,
        "endLine": 488,
        "endChar": 10
      },
      "revId": "48466714c6ac71f0f4114c9452279520c5a1be23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "56408c9b_48f49bb3",
        "filename": "src/tests/gl_tests/CopyTexImageTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 488,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2020-01-09T20:08:12Z",
      "side": 1,
      "message": "Jamie gave the same feedback you did, so I\u0027ve restructured the test to use the RAII constructors, and am using reset() to get the same deletion behavior. Thanks for your suggestion.",
      "parentUuid": "993d351b_427e2e9a",
      "range": {
        "startLine": 488,
        "startChar": 4,
        "endLine": 488,
        "endChar": 10
      },
      "revId": "48466714c6ac71f0f4114c9452279520c5a1be23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba087878_3488adc9",
        "filename": "src/tests/gl_tests/CopyTexImageTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 506,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-01-08T20:43:32Z",
      "side": 1,
      "message": "Same with GLFramebuffer.",
      "range": {
        "startLine": 506,
        "startChar": 4,
        "endLine": 506,
        "endChar": 10
      },
      "revId": "48466714c6ac71f0f4114c9452279520c5a1be23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7735e893_e3cc4f27",
        "filename": "src/tests/gl_tests/CopyTexImageTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 506,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2020-01-08T22:04:22Z",
      "side": 1,
      "message": "I actually aimed to not explicitly delete the framebuffer - that\u0027s what I did in the test case for the bug report I filed with Apple. Is it OK if I leave this test in its current form?",
      "parentUuid": "ba087878_3488adc9",
      "range": {
        "startLine": 506,
        "startChar": 4,
        "endLine": 506,
        "endChar": 10
      },
      "revId": "48466714c6ac71f0f4114c9452279520c5a1be23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9363ce7b_ddb1dca0",
        "filename": "src/tests/gl_tests/CopyTexImageTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 506,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-01-09T03:22:59Z",
      "side": 1,
      "message": "Again, add a comment saying why this is not deleted.",
      "parentUuid": "7735e893_e3cc4f27",
      "range": {
        "startLine": 506,
        "startChar": 4,
        "endLine": 506,
        "endChar": 10
      },
      "revId": "48466714c6ac71f0f4114c9452279520c5a1be23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0152a92c_d8773a66",
        "filename": "src/tests/gl_tests/CopyTexImageTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 506,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2020-01-09T20:08:12Z",
      "side": 1,
      "message": "Restructured to use the RAII helpers based on your and Jamie\u0027s suggestions.",
      "parentUuid": "9363ce7b_ddb1dca0",
      "range": {
        "startLine": 506,
        "startChar": 4,
        "endLine": 506,
        "endChar": 10
      },
      "revId": "48466714c6ac71f0f4114c9452279520c5a1be23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}