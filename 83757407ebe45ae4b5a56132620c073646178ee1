{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "48e59c47_ebcc7fe8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1517514
      },
      "writtenOn": "2023-09-22T18:12:28Z",
      "side": 1,
      "message": "hi all,\n\nplease help to review the changes.\n\nthanks\n\nhailin",
      "revId": "83757407ebe45ae4b5a56132620c073646178ee1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b4d267db_b2a2afa8",
        "filename": "include/platform/vk_features.json",
        "patchSetId": 4
      },
      "lineNbr": 1392,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-09-22T18:21:59Z",
      "side": 1,
      "message": "Please use `issuetracker.google.com`, ANGLE is a public repo.",
      "range": {
        "startLine": 1392,
        "startChar": 30,
        "endLine": 1392,
        "endChar": 36
      },
      "revId": "83757407ebe45ae4b5a56132620c073646178ee1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "37a91237_7f780c87",
        "filename": "include/platform/vk_features.json",
        "patchSetId": 4
      },
      "lineNbr": 1392,
      "author": {
        "id": 1517514
      },
      "writtenOn": "2023-09-22T18:55:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b4d267db_b2a2afa8",
      "range": {
        "startLine": 1392,
        "startChar": 30,
        "endLine": 1392,
        "endChar": 36
      },
      "revId": "83757407ebe45ae4b5a56132620c073646178ee1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f89394f2_7cf1d9c2",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 88,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-09-22T18:21:59Z",
      "side": 1,
      "message": "Do we know for what configurations cached memory is better here? If so, I\u0027d prefer it if you also initialized this feature (in RendererVk) to the correct value, so the benefit of all your investigations would be for everybody.",
      "range": {
        "startLine": 88,
        "startChar": 43,
        "endLine": 88,
        "endChar": 80
      },
      "revId": "83757407ebe45ae4b5a56132620c073646178ee1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "be6131aa_6d346779",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 88,
      "author": {
        "id": 1517514
      },
      "writtenOn": "2023-09-22T18:55:22Z",
      "side": 1,
      "message": "https://developer.arm.com/documentation/101897/0301/CPU-overheads/Vulkan-CPU-memory-mapping.\n\nfor the spec, it shows for arm based. it sounds ok to use uncached. \nfor x86 since it need strong ordering. it may not good. but this is just my assumption. I\u0027m not sure about each different architecture.",
      "parentUuid": "f89394f2_7cf1d9c2",
      "range": {
        "startLine": 88,
        "startChar": 43,
        "endLine": 88,
        "endChar": 80
      },
      "revId": "83757407ebe45ae4b5a56132620c073646178ee1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3dd79ad3_2b4c9481",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 88,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-09-22T19:06:23Z",
      "side": 1,
      "message": "Looks to me like for this kind of usage (write-only), it\u0027s better to use uncached on ARM? From that doc:\n\n\u003e Hardware coherency has a small power cost, so must not be used for resources that are write-only on the CPU. For write-only resources, bypass the CPU cache by using the Not Cached, coherent memory type.\n\n\u003e Use HOST_VISIBLE | HOST_COHERENT memory for resources which are write-only on the CPU.\n\n---\n\nOk, looks like whatever\u0027s causing you to make this change might be a bad app usage or something; like they use DynamicDraw, but actually meant to use something else?\n\nAnyway, if this is supposed to only affect DynamicDraw (as the feature name suggests), please make this actually only apply to `gl::BufferUsage::DynamicDraw`, as it is now also applying to `StreamDraw`. If you mean to apply to both (which probably makes sense), please rename to `preferHostCachedForNonStaticBufferUsage`",
      "parentUuid": "be6131aa_6d346779",
      "range": {
        "startLine": 88,
        "startChar": 43,
        "endLine": 88,
        "endChar": 80
      },
      "revId": "83757407ebe45ae4b5a56132620c073646178ee1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dabdbf84_dc4eeecb",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 88,
      "author": {
        "id": 1517514
      },
      "writtenOn": "2023-09-22T19:06:51Z",
      "side": 1,
      "message": "or we have something wrong on the virtual machine side. I think it is always good to choose cached. unless don\u0027t have such memory type.",
      "parentUuid": "be6131aa_6d346779",
      "range": {
        "startLine": 88,
        "startChar": 43,
        "endLine": 88,
        "endChar": 80
      },
      "revId": "83757407ebe45ae4b5a56132620c073646178ee1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}