{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "fc5039d5_0adfb079",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 30
      },
      "lineNbr": 0,
      "author": {
        "id": 1525982
      },
      "writtenOn": "2023-09-07T21:59:25Z",
      "side": 1,
      "message": "Thanks!\nIn this update, the following main updates have occurred:\n* The lower-level functions, which are related to allocation, return `VkResult` instead of `angle::Result` (with the exception of `initializeNonZeroMemory()`).\n* The main macros from the last update have been replaced with `ContextVk` functions.\n* In addition, in order to reduce the CL\u0027s diff, some of the result bubbling, especially in `vk_helpers`, have been limited.",
      "revId": "7ba894a3bc31ebacfb7ff5024e12773e768e3d01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "15a2d205_18db16ff",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 30
      },
      "lineNbr": 0,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2023-09-08T18:36:15Z",
      "side": 1,
      "message": "Overall I think this looks much nicer now.",
      "revId": "7ba894a3bc31ebacfb7ff5024e12773e768e3d01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c0253efa_7e5467e9",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 30
      },
      "lineNbr": 7397,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2023-09-08T18:36:15Z",
      "side": 1,
      "message": "Suggest remove this function. Just let ContextVk::initImageAllocation call finishImpl directly since it is just one line function.",
      "range": {
        "startLine": 7397,
        "startChar": 25,
        "endLine": 7397,
        "endChar": 38
      },
      "revId": "7ba894a3bc31ebacfb7ff5024e12773e768e3d01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d023262a_ddf4e37d",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.h",
        "patchSetId": 30
      },
      "lineNbr": 812,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2023-09-08T18:36:15Z",
      "side": 1,
      "message": "Maybe name it initBufferAllocation to be consistent with initImageAllocation, since the fact that buffer is sub allocated is BufferHelper\u0027s implementation detail.",
      "range": {
        "startLine": 812,
        "startChar": 18,
        "endLine": 812,
        "endChar": 40
      },
      "revId": "7ba894a3bc31ebacfb7ff5024e12773e768e3d01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7bbb4d78_a64a59d5",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 30
      },
      "lineNbr": 875,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2023-09-08T18:36:15Z",
      "side": 1,
      "message": "This diff is no longer needed.",
      "range": {
        "startLine": 875,
        "startChar": 4,
        "endLine": 875,
        "endChar": 10
      },
      "revId": "7ba894a3bc31ebacfb7ff5024e12773e768e3d01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5335bdd2_7dd5b9ed",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 30
      },
      "lineNbr": 5918,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2023-09-08T18:36:15Z",
      "side": 1,
      "message": "Suggest move this logic into ContextVk::initImageAllocation as well so that this can be performed as the last resort.",
      "range": {
        "startLine": 5918,
        "startChar": 0,
        "endLine": 5918,
        "endChar": 91
      },
      "revId": "7ba894a3bc31ebacfb7ff5024e12773e768e3d01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "43f4d0a7_980e350f",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 30
      },
      "lineNbr": 583,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2023-09-08T18:36:15Z",
      "side": 1,
      "message": "Can\u0027t this just ANGLE_VK_TRY(context, ...) instead of ANGLE_VK_CHECK? Not sure whats the difference here.",
      "range": {
        "startLine": 583,
        "startChar": 4,
        "endLine": 583,
        "endChar": 21
      },
      "revId": "7ba894a3bc31ebacfb7ff5024e12773e768e3d01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "992424ff_16d9ddc3",
        "filename": "src/libANGLE/renderer/vulkan/VertexArrayVk.cpp",
        "patchSetId": 30
      },
      "lineNbr": 283,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2023-09-08T18:36:15Z",
      "side": 1,
      "message": "Minor suggestion: avoid making necessary diff here and other places so that people can focus in the diffs actually matters, especially this CL changes return type of some functions.",
      "range": {
        "startLine": 283,
        "startChar": 4,
        "endLine": 283,
        "endChar": 10
      },
      "revId": "7ba894a3bc31ebacfb7ff5024e12773e768e3d01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d27c936e_18652b6d",
        "filename": "src/libANGLE/renderer/vulkan/mac/IOSurfaceSurfaceVkMac.mm",
        "patchSetId": 30
      },
      "lineNbr": 207,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2023-09-08T18:36:15Z",
      "side": 1,
      "message": "Is this diff (and a few other diffs in mac folder) actaully needed or just accidentally carried over from previous patchset?",
      "range": {
        "startLine": 207,
        "startChar": 37,
        "endLine": 207,
        "endChar": 56
      },
      "revId": "7ba894a3bc31ebacfb7ff5024e12773e768e3d01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8955d6a9_373d41de",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 30
      },
      "lineNbr": 4866,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2023-09-08T18:36:15Z",
      "side": 1,
      "message": "Can this move to ContextVk::initBufferSuballocation as well so that you can get rid of VK_RESULT_TRY_CONTINUE macro?",
      "range": {
        "startLine": 4861,
        "startChar": 0,
        "endLine": 4866,
        "endChar": 0
      },
      "revId": "7ba894a3bc31ebacfb7ff5024e12773e768e3d01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f85fa39_9a11d9d3",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 30
      },
      "lineNbr": 4882,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2023-09-08T18:36:15Z",
      "side": 1,
      "message": "Suggest to move these and allocateForVertexConversion etc into ContextVk as well in the follow up CL.",
      "revId": "7ba894a3bc31ebacfb7ff5024e12773e768e3d01",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}