{
  "comments": [
    {
      "key": {
        "uuid": "f5f2bb9d_1705269e",
        "filename": "src/compiler/translator/tree_ops/RewriteDfdy.cpp",
        "patchSetId": 2
      },
      "lineNbr": 166,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-06-01T20:19:18Z",
      "side": 1,
      "message": "Can you create a temporary and assign this to it? Then swizzle that temporary to avoid duplicating this expression.",
      "range": {
        "startLine": 166,
        "startChar": 19,
        "endLine": 166,
        "endChar": 32
      },
      "revId": "e6a6426f428d0194396621f0ad0cd6f08f57621a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1b34cbac_4d7b5fd5",
        "filename": "src/compiler/translator/tree_ops/RewriteDfdy.cpp",
        "patchSetId": 2
      },
      "lineNbr": 166,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-06-02T15:59:55Z",
      "side": 1,
      "message": "Seem like a good idea, but I\u0027ve not figured out how to do this.  The only example I\u0027m following is the breshenham code, which is generating a one-time-use set of code.  dFdx()/dFdy() can be used more than once.  Can you help me on this?",
      "parentUuid": "f5f2bb9d_1705269e",
      "range": {
        "startLine": 166,
        "startChar": 19,
        "endLine": 166,
        "endChar": 32
      },
      "revId": "e6a6426f428d0194396621f0ad0cd6f08f57621a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "877e1ce1_567a7a64",
        "filename": "src/compiler/translator/tree_ops/RewriteDfdy.cpp",
        "patchSetId": 2
      },
      "lineNbr": 166,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-06-02T17:08:30Z",
      "side": 1,
      "message": "Sure. Look for CreateTempVariable and CreateTempInitDeclarationNode, and let me know if it\u0027s not clear. There are many examples in AddBresenhamEmulationVS/FS in fact.",
      "parentUuid": "1b34cbac_4d7b5fd5",
      "range": {
        "startLine": 166,
        "startChar": 19,
        "endLine": 166,
        "endChar": 32
      },
      "revId": "e6a6426f428d0194396621f0ad0cd6f08f57621a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ccaddf6a_de2a041a",
        "filename": "src/compiler/translator/tree_ops/RewriteDfdy.cpp",
        "patchSetId": 2
      },
      "lineNbr": 173,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-06-01T20:19:18Z",
      "side": 1,
      "message": "nit: just `operand`, this is not the copy.",
      "range": {
        "startLine": 173,
        "startChar": 18,
        "endLine": 173,
        "endChar": 29
      },
      "revId": "e6a6426f428d0194396621f0ad0cd6f08f57621a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "50db6237_ac7487a5",
        "filename": "src/compiler/translator/tree_ops/RewriteDfdy.cpp",
        "patchSetId": 2
      },
      "lineNbr": 173,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-06-02T15:59:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ccaddf6a_de2a041a",
      "range": {
        "startLine": 173,
        "startChar": 18,
        "endLine": 173,
        "endChar": 29
      },
      "revId": "e6a6426f428d0194396621f0ad0cd6f08f57621a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f246a005_3fe7a508",
        "filename": "src/compiler/translator/tree_ops/RewriteDfdy.cpp",
        "patchSetId": 2
      },
      "lineNbr": 185,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-06-01T20:19:18Z",
      "side": 1,
      "message": "Remove all deepCopy()s here, these were just created and there are no other users of them.",
      "range": {
        "startLine": 178,
        "startChar": 0,
        "endLine": 185,
        "endChar": 98
      },
      "revId": "e6a6426f428d0194396621f0ad0cd6f08f57621a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d118c902_81555eae",
        "filename": "src/compiler/translator/tree_ops/RewriteDfdy.cpp",
        "patchSetId": 2
      },
      "lineNbr": 185,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-06-02T15:59:55Z",
      "side": 1,
      "message": "I couldn\u0027t remove the multiplier*-\u003edeepCopy()\u0027s, but I removed the rest.",
      "parentUuid": "f246a005_3fe7a508",
      "range": {
        "startLine": 178,
        "startChar": 0,
        "endLine": 185,
        "endChar": 98
      },
      "revId": "e6a6426f428d0194396621f0ad0cd6f08f57621a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa0e9041_dcb68c0c",
        "filename": "src/compiler/translator/tree_ops/RewriteDfdy.cpp",
        "patchSetId": 2
      },
      "lineNbr": 185,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-06-02T17:08:30Z",
      "side": 1,
      "message": "Ok, that\u0027s because the definition of multiplierY is reusing rotatedFlipXY without deepCopy. So you can change the multipliers to:\n\n    TIntermSwizzle *multiplierX \u003d new TIntermSwizzle(rotatedFlipXY, swizzleOffsetX);\n    TIntermSwizzle *multiplierY \u003d new TIntermSwizzle(rotatedFlipXY-\u003edeepCopy(), swizzleOffsetY);\n\nAnd then remove the two deepCopy()s from here.",
      "parentUuid": "d118c902_81555eae",
      "range": {
        "startLine": 178,
        "startChar": 0,
        "endLine": 185,
        "endChar": 98
      },
      "revId": "e6a6426f428d0194396621f0ad0cd6f08f57621a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}