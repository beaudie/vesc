{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ccd1c19d_978d4b87",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-01-05T23:28:22Z",
      "side": 1,
      "message": "all bots green - PTAL",
      "revId": "23c8f1c52a3dc1936d7ee85f7945fe740209ceee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5d441c4a_44c510d8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-01-06T05:31:30Z",
      "side": 1,
      "message": "LGTM",
      "revId": "23c8f1c52a3dc1936d7ee85f7945fe740209ceee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e6e433a1_b8bf16e6",
        "filename": "src/compiler/translator/Compiler.cpp",
        "patchSetId": 11
      },
      "lineNbr": 630,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-01-07T18:04:48Z",
      "side": 1,
      "message": "this can probably be an ASSERT - I think we don\u0027t get here if we attempt to enable the EXT in 1.00. It should be an error anyway, maybe we can add a test for that.",
      "range": {
        "startLine": 630,
        "startChar": 8,
        "endLine": 630,
        "endChar": 29
      },
      "revId": "23c8f1c52a3dc1936d7ee85f7945fe740209ceee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f5f5b0c_3574fc1f",
        "filename": "src/compiler/translator/Compiler.cpp",
        "patchSetId": 11
      },
      "lineNbr": 630,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-01-08T19:20:40Z",
      "side": 1,
      "message": "the ValidateClipCullDistance(...) method has been modified to only validate gl_MaxCombinedClipAndCullDistances. So, this if-condition needs to just check for whether EXT_clip_cull_distance extension is enabled or not.",
      "parentUuid": "e6e433a1_b8bf16e6",
      "range": {
        "startLine": 630,
        "startChar": 8,
        "endLine": 630,
        "endChar": 29
      },
      "revId": "23c8f1c52a3dc1936d7ee85f7945fe740209ceee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "65a89c82_647ebd1f",
        "filename": "src/compiler/translator/ParseContext.cpp",
        "patchSetId": 11
      },
      "lineNbr": 1306,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-01-07T18:04:48Z",
      "side": 1,
      "message": "what about the else() care here? what happens if the shader declares this builtin without the extension? maybe this should be an ASSERT as well since it seems like an error?",
      "range": {
        "startLine": 1304,
        "startChar": 0,
        "endLine": 1306,
        "endChar": 52
      },
      "revId": "23c8f1c52a3dc1936d7ee85f7945fe740209ceee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "74d65c1e_5b90f3d3",
        "filename": "src/compiler/translator/ParseContext.cpp",
        "patchSetId": 11
      },
      "lineNbr": 1306,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-01-08T19:20:40Z",
      "side": 1,
      "message": "no need to worry about else case here. if EXT_clip_cull_distance extension is not enabled, there is no need to validate whether the sum of the size of both gl_ClipDistance and gl_CullDistance is greater then gl_MaxCombinedClipAndCullDistances.\n\nAlso, there is no need to check the extension is enabled like this. Just checking that maxCombinedClipAndCullDistances is available is enough.",
      "parentUuid": "65a89c82_647ebd1f",
      "range": {
        "startLine": 1304,
        "startChar": 0,
        "endLine": 1306,
        "endChar": 52
      },
      "revId": "23c8f1c52a3dc1936d7ee85f7945fe740209ceee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dec51d3e_1eb1889b",
        "filename": "src/compiler/translator/ParseContext.cpp",
        "patchSetId": 11
      },
      "lineNbr": 1363,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-01-07T18:04:48Z",
      "side": 1,
      "message": "this code looks different from the above- can you consolidate? also probably we should make this a helper function to reuse common code.",
      "range": {
        "startLine": 1363,
        "startChar": 63,
        "endLine": 1363,
        "endChar": 74
      },
      "revId": "23c8f1c52a3dc1936d7ee85f7945fe740209ceee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2d58d587_ff0e70e6",
        "filename": "src/compiler/translator/ParseContext.cpp",
        "patchSetId": 11
      },
      "lineNbr": 1363,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-01-08T19:20:40Z",
      "side": 1,
      "message": "on second thought this code is unnecessary, because in the case of the combination of the built-in and redeclaration variable, this code can\u0027t validate it. Therefore, it seems that validating the gl_MaxCombinedClipAndCullDistances in ValidateClipCullDistances is better. WDYT?",
      "parentUuid": "dec51d3e_1eb1889b",
      "range": {
        "startLine": 1363,
        "startChar": 63,
        "endLine": 1363,
        "endChar": 74
      },
      "revId": "23c8f1c52a3dc1936d7ee85f7945fe740209ceee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fdf7bb90_64c8e196",
        "filename": "src/compiler/translator/tree_util/ReplaceClipCullDistanceVariable.cpp",
        "patchSetId": 11
      },
      "lineNbr": 611,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-01-07T18:04:48Z",
      "side": 1,
      "message": "what happens if not? is it an error of some kind? do we detect this earlier?",
      "range": {
        "startLine": 611,
        "startChar": 58,
        "endLine": 611,
        "endChar": 65
      },
      "revId": "23c8f1c52a3dc1936d7ee85f7945fe740209ceee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d92a9b96_4969e8f0",
        "filename": "src/compiler/translator/tree_util/ReplaceClipCullDistanceVariable.cpp",
        "patchSetId": 11
      },
      "lineNbr": 611,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-01-08T19:20:40Z",
      "side": 1,
      "message": "If gl_ClipDistance or gl_CullDistance value is not initialized results are undefined.\n\nSpecs -\n\n    APPLE_clip_distance -\n\n    The shader must also set all values in gl_ClipDistance that have been enabled via the OpenGL API, or results are undefined.\n    Values written into gl_ClipDistance for planes that are not enabled have no effect.\n\n    EXT_clip_cull_distance -\n\n    The shader must also set all values in gl_ClipDistance that have been enabled via the OpenGL ES API, or results are undefined.\n    Values written into gl_ClipDistance for planes that are not enabled have no effect.\n    ...\n    Shaders writing gl_CullDistance must write all enabled distances, or culling results are undefined.",
      "parentUuid": "fdf7bb90_64c8e196",
      "range": {
        "startLine": 611,
        "startChar": 58,
        "endLine": 611,
        "endChar": 65
      },
      "revId": "23c8f1c52a3dc1936d7ee85f7945fe740209ceee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "56493717_191f4171",
        "filename": "src/libANGLE/Program.cpp",
        "patchSetId": 11
      },
      "lineNbr": 4406,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-01-07T18:04:48Z",
      "side": 1,
      "message": "I\u0027m making a refactoring here to support tess shaders.",
      "range": {
        "startLine": 4406,
        "startChar": 14,
        "endLine": 4406,
        "endChar": 41
      },
      "revId": "23c8f1c52a3dc1936d7ee85f7945fe740209ceee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "48743e99_a74f96c0",
        "filename": "src/libANGLE/Program.cpp",
        "patchSetId": 11
      },
      "lineNbr": 4406,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-01-08T19:20:40Z",
      "side": 1,
      "message": "Ack, will be rebased if your change merges first",
      "parentUuid": "56493717_191f4171",
      "range": {
        "startLine": 4406,
        "startChar": 14,
        "endLine": 4406,
        "endChar": 41
      },
      "revId": "23c8f1c52a3dc1936d7ee85f7945fe740209ceee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ef0f2f0c_dbed53eb",
        "filename": "src/libANGLE/renderer/vulkan/vk_caps_utils.cpp",
        "patchSetId": 11
      },
      "lineNbr": 950,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-01-06T05:31:30Z",
      "side": 1,
      "message": "nit: can probably just use `true`, tess/geom themselves are conditional to this.",
      "range": {
        "startLine": 950,
        "startChar": 12,
        "endLine": 950,
        "endChar": 75
      },
      "revId": "23c8f1c52a3dc1936d7ee85f7945fe740209ceee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5a45af0f_44a1c096",
        "filename": "src/libANGLE/renderer/vulkan/vk_caps_utils.cpp",
        "patchSetId": 11
      },
      "lineNbr": 950,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-01-08T19:20:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ef0f2f0c_dbed53eb",
      "range": {
        "startLine": 950,
        "startChar": 12,
        "endLine": 950,
        "endChar": 75
      },
      "revId": "23c8f1c52a3dc1936d7ee85f7945fe740209ceee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "757ab3a4_989c477c",
        "filename": "src/libANGLE/renderer/vulkan/vk_caps_utils.cpp",
        "patchSetId": 11
      },
      "lineNbr": 959,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-01-06T05:31:30Z",
      "side": 1,
      "message": "Same",
      "range": {
        "startLine": 959,
        "startChar": 16,
        "endLine": 959,
        "endChar": 79
      },
      "revId": "23c8f1c52a3dc1936d7ee85f7945fe740209ceee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f7905f6e_9def6716",
        "filename": "src/libANGLE/renderer/vulkan/vk_caps_utils.cpp",
        "patchSetId": 11
      },
      "lineNbr": 959,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-01-08T19:20:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "757ab3a4_989c477c",
      "range": {
        "startLine": 959,
        "startChar": 16,
        "endLine": 959,
        "endChar": 79
      },
      "revId": "23c8f1c52a3dc1936d7ee85f7945fe740209ceee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ac2944d2_9c3331f5",
        "filename": "src/libANGLE/validationES2.cpp",
        "patchSetId": 11
      },
      "lineNbr": 714,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-01-06T05:31:30Z",
      "side": 1,
      "message": "Comment mismatches code?",
      "revId": "23c8f1c52a3dc1936d7ee85f7945fe740209ceee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a0eddd74_26be0479",
        "filename": "src/libANGLE/validationES2.cpp",
        "patchSetId": 11
      },
      "lineNbr": 714,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-01-07T18:04:48Z",
      "side": 1,
      "message": "I don\u0027t see why we\u0027re checking for the extension and the version. We should just check the the EXT.",
      "parentUuid": "ac2944d2_9c3331f5",
      "revId": "23c8f1c52a3dc1936d7ee85f7945fe740209ceee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "256433f0_7fd2e714",
        "filename": "src/libANGLE/validationES2.cpp",
        "patchSetId": 11
      },
      "lineNbr": 714,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-01-08T19:20:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a0eddd74_26be0479",
      "revId": "23c8f1c52a3dc1936d7ee85f7945fe740209ceee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}