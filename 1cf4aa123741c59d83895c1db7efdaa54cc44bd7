{
  "comments": [
    {
      "key": {
        "uuid": "462177d1_97a8c946",
        "filename": "src/libANGLE/renderer/vulkan/gen_vk_format_table.py",
        "patchSetId": 2
      },
      "lineNbr": 117,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-09-10T18:50:02Z",
      "side": 1,
      "message": "nit: define these at the global scope",
      "range": {
        "startLine": 97,
        "startChar": 0,
        "endLine": 117,
        "endChar": 9
      },
      "revId": "1cf4aa123741c59d83895c1db7efdaa54cc44bd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c34faef8_55d3d0e6",
        "filename": "src/libANGLE/renderer/vulkan/gen_vk_format_table.py",
        "patchSetId": 2
      },
      "lineNbr": 117,
      "author": {
        "id": 1001426
      },
      "writtenOn": "2018-09-10T23:02:36Z",
      "side": 1,
      "message": "All these functions use variables local to the enclosing function: vk_overrides, vk_map, vk_fallbacks, angle, internal_format.\nThat would be a lot of stuff to pass around, if they were moved outside.\nYou really want that?",
      "parentUuid": "462177d1_97a8c946",
      "range": {
        "startLine": 97,
        "startChar": 0,
        "endLine": 117,
        "endChar": 9
      },
      "revId": "1cf4aa123741c59d83895c1db7efdaa54cc44bd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "077d9fc6_97b59be7",
        "filename": "src/libANGLE/renderer/vulkan/gen_vk_format_table.py",
        "patchSetId": 2
      },
      "lineNbr": 117,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-09-10T23:12:43Z",
      "side": 1,
      "message": "No, that\u0027s fine.",
      "parentUuid": "c34faef8_55d3d0e6",
      "range": {
        "startLine": 97,
        "startChar": 0,
        "endLine": 117,
        "endChar": 9
      },
      "revId": "1cf4aa123741c59d83895c1db7efdaa54cc44bd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "28006712_761d4804",
        "filename": "src/libANGLE/renderer/vulkan/vk_format_map.json",
        "patchSetId": 2
      },
      "lineNbr": 246,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-09-10T18:50:02Z",
      "side": 1,
      "message": "nit: instead of changing these, you can make the script accept a list or single value.",
      "range": {
        "startLine": 246,
        "startChar": 23,
        "endLine": 246,
        "endChar": 44
      },
      "revId": "1cf4aa123741c59d83895c1db7efdaa54cc44bd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b8b0d363_411f0d3d",
        "filename": "src/libANGLE/renderer/vulkan/vk_format_map.json",
        "patchSetId": 2
      },
      "lineNbr": 246,
      "author": {
        "id": 1001426
      },
      "writtenOn": "2018-09-10T23:02:36Z",
      "side": 1,
      "message": "I did it this way for consistency.  Simpler for people looking at this file and simpler to process.",
      "parentUuid": "28006712_761d4804",
      "range": {
        "startLine": 246,
        "startChar": 23,
        "endLine": 246,
        "endChar": 44
      },
      "revId": "1cf4aa123741c59d83895c1db7efdaa54cc44bd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "20a694d8_f38e640a",
        "filename": "src/libANGLE/renderer/vulkan/vk_format_map.json",
        "patchSetId": 2
      },
      "lineNbr": 246,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-09-10T23:12:43Z",
      "side": 1,
      "message": "I still would like it. I think it\u0027s easier to read if it doesn\u0027t have brackets. Is there a very strong overriding reason not to do this?",
      "parentUuid": "b8b0d363_411f0d3d",
      "range": {
        "startLine": 246,
        "startChar": 23,
        "endLine": 246,
        "endChar": 44
      },
      "revId": "1cf4aa123741c59d83895c1db7efdaa54cc44bd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a42f317d_87023887",
        "filename": "src/libANGLE/renderer/vulkan/vk_format_map.json",
        "patchSetId": 2
      },
      "lineNbr": 246,
      "author": {
        "id": 1001426
      },
      "writtenOn": "2018-09-11T02:49:26Z",
      "side": 1,
      "message": "I think my reason is stronger than yours but whatever.  Done.",
      "parentUuid": "20a694d8_f38e640a",
      "range": {
        "startLine": 246,
        "startChar": 23,
        "endLine": 246,
        "endChar": 44
      },
      "revId": "1cf4aa123741c59d83895c1db7efdaa54cc44bd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "35a783d0_3cf4a6e1",
        "filename": "src/libANGLE/renderer/vulkan/vk_format_utils.cpp",
        "patchSetId": 2
      },
      "lineNbr": 108,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-09-10T18:50:02Z",
      "side": 1,
      "message": "I don\u0027t want to create vectors here. Can you instead pass two values, a pointer and size?",
      "range": {
        "startLine": 108,
        "startChar": 33,
        "endLine": 108,
        "endChar": 73
      },
      "revId": "1cf4aa123741c59d83895c1db7efdaa54cc44bd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e43a9045_596d5348",
        "filename": "src/libANGLE/renderer/vulkan/vk_format_utils.cpp",
        "patchSetId": 2
      },
      "lineNbr": 108,
      "author": {
        "id": 1001426
      },
      "writtenOn": "2018-09-10T23:02:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "35a783d0_3cf4a6e1",
      "range": {
        "startLine": 108,
        "startChar": 33,
        "endLine": 108,
        "endChar": 73
      },
      "revId": "1cf4aa123741c59d83895c1db7efdaa54cc44bd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "50ffe47e_7b00615c",
        "filename": "src/libANGLE/renderer/vulkan/vk_format_utils.cpp",
        "patchSetId": 2
      },
      "lineNbr": 124,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-09-10T18:50:02Z",
      "side": 1,
      "message": "Instead of the UNREACHABLE, how about you iterate over the size of the fallback array minus one. Then if the loop exits you assign the last value in the array as the format and ASSERT(HasFull*FeatureSupport). This would avoid one check and still guard for an implementation error.",
      "range": {
        "startLine": 124,
        "startChar": 4,
        "endLine": 124,
        "endChar": 15
      },
      "revId": "1cf4aa123741c59d83895c1db7efdaa54cc44bd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f414c32c_146eb5a6",
        "filename": "src/libANGLE/renderer/vulkan/vk_format_utils.cpp",
        "patchSetId": 2
      },
      "lineNbr": 124,
      "author": {
        "id": 1001426
      },
      "writtenOn": "2018-09-10T23:02:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "50ffe47e_7b00615c",
      "range": {
        "startLine": 124,
        "startChar": 4,
        "endLine": 124,
        "endChar": 15
      },
      "revId": "1cf4aa123741c59d83895c1db7efdaa54cc44bd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bdad0bce_18637b1d",
        "filename": "src/libANGLE/renderer/vulkan/vk_format_utils.cpp",
        "patchSetId": 2
      },
      "lineNbr": 128,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-09-10T18:50:02Z",
      "side": 1,
      "message": "same",
      "range": {
        "startLine": 128,
        "startChar": 32,
        "endLine": 128,
        "endChar": 70
      },
      "revId": "1cf4aa123741c59d83895c1db7efdaa54cc44bd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "16777087_f33193ac",
        "filename": "src/libANGLE/renderer/vulkan/vk_format_utils.cpp",
        "patchSetId": 2
      },
      "lineNbr": 128,
      "author": {
        "id": 1001426
      },
      "writtenOn": "2018-09-10T23:02:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bdad0bce_18637b1d",
      "range": {
        "startLine": 128,
        "startChar": 32,
        "endLine": 128,
        "endChar": 70
      },
      "revId": "1cf4aa123741c59d83895c1db7efdaa54cc44bd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d3f227b8_5f164b83",
        "filename": "src/libANGLE/renderer/vulkan/vk_format_utils.cpp",
        "patchSetId": 2
      },
      "lineNbr": 145,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-09-10T18:50:02Z",
      "side": 1,
      "message": "same",
      "range": {
        "startLine": 145,
        "startChar": 4,
        "endLine": 145,
        "endChar": 15
      },
      "revId": "1cf4aa123741c59d83895c1db7efdaa54cc44bd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5f1659c3_aaa571de",
        "filename": "src/libANGLE/renderer/vulkan/vk_format_utils.cpp",
        "patchSetId": 2
      },
      "lineNbr": 145,
      "author": {
        "id": 1001426
      },
      "writtenOn": "2018-09-10T23:02:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d3f227b8_5f164b83",
      "range": {
        "startLine": 145,
        "startChar": 4,
        "endLine": 145,
        "endChar": 15
      },
      "revId": "1cf4aa123741c59d83895c1db7efdaa54cc44bd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "92a2481a_7a760ca4",
        "filename": "src/libANGLE/renderer/vulkan/vk_format_utils.h",
        "patchSetId": 2
      },
      "lineNbr": 51,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-09-10T18:50:02Z",
      "side": 1,
      "message": "nit: define these out of the class. makes forward declaring easier. Can call them TextureFormatInitInfo and BufferFormatInitInfo to scope.",
      "range": {
        "startLine": 38,
        "startChar": 0,
        "endLine": 51,
        "endChar": 6
      },
      "revId": "1cf4aa123741c59d83895c1db7efdaa54cc44bd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "222d2324_c65a238f",
        "filename": "src/libANGLE/renderer/vulkan/vk_format_utils.h",
        "patchSetId": 2
      },
      "lineNbr": 51,
      "author": {
        "id": 1001426
      },
      "writtenOn": "2018-09-10T23:02:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "92a2481a_7a760ca4",
      "range": {
        "startLine": 38,
        "startChar": 0,
        "endLine": 51,
        "endChar": 6
      },
      "revId": "1cf4aa123741c59d83895c1db7efdaa54cc44bd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}