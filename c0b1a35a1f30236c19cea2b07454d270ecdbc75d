{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "272a1d7f_20530f89",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 16
      },
      "lineNbr": 0,
      "author": {
        "id": 1524687
      },
      "writtenOn": "2022-01-12T07:27:54Z",
      "side": 1,
      "message": "The former validation layer fail on angle_end2end_test of ComputeShaderTest.DispatchDrawDrawDispatch group is caused by the discontinuous of image layout transition assigned.\nconsider below api sequence:\nglDispatch\nglDrawArrays\ngiDispatch\nBefore do the 2nd dispatch, we only flush the former outsideRenderPass commands, but for this case, the layout transition commands (dirty handler of TextureImplï¼‰ locates in renderpass commands. This makes image layout transition of draw missing flushing when flush the dispatch.\nTo resolve it, I make a change that flush and end current renderpass before dispatch.",
      "revId": "c0b1a35a1f30236c19cea2b07454d270ecdbc75d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ffc2570d_f45ee53f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 16
      },
      "lineNbr": 0,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2022-01-12T19:01:58Z",
      "side": 1,
      "message": "LGTM",
      "revId": "c0b1a35a1f30236c19cea2b07454d270ecdbc75d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ec24f5a6_938fabe7",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 16
      },
      "lineNbr": 1354,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-01-14T20:16:15Z",
      "side": 1,
      "message": "Unfortunately this is not the right approach, and will cause performance regressions. We shouldn\u0027t close the render pass unless we have to. IIRC Manhattan 3.1 at least issues an unrelated dispatch call mid-rendering that ANGLE reorders before the render pass. This change will regress that.\n\nThis problem can likely be fixed by appropriately setting dirty bits. For example, when switching from a !hasImage() to hasImage() program or vice versa, we should probably set `DIRTY_BIT_TEXTURES` and that should take care of things.",
      "revId": "c0b1a35a1f30236c19cea2b07454d270ecdbc75d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "afd5c205_c507ffd2",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 16
      },
      "lineNbr": 1354,
      "author": {
        "id": 1524687
      },
      "writtenOn": "2022-01-17T06:20:06Z",
      "side": 1,
      "message": "Hi Shahbaz,\nThanks for notify the performance regress will be caused by the CL. \nI have a uncertain for the dirty bit notify of \u0027DIRTY_BIT_TEXTURE\u0027 on image used changed when switch program. Can I consider it that we need add this situation as a constrict condition to close the renderpass? For my understand, before we do the following dispatch, the former layout transition must be performed firstly.",
      "parentUuid": "ec24f5a6_938fabe7",
      "revId": "c0b1a35a1f30236c19cea2b07454d270ecdbc75d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "847a8b83_4c5bbaa7",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 16
      },
      "lineNbr": 1354,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2022-01-18T17:18:04Z",
      "side": 1,
      "message": "+1, we should not endRP for every compute dispatch.",
      "parentUuid": "afd5c205_c507ffd2",
      "revId": "c0b1a35a1f30236c19cea2b07454d270ecdbc75d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9fc90dc9_e68a4402",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 16
      },
      "lineNbr": 1354,
      "author": {
        "id": 1524687
      },
      "writtenOn": "2022-01-20T09:07:22Z",
      "side": 1,
      "message": "DONE. Revert it.",
      "parentUuid": "847a8b83_4c5bbaa7",
      "revId": "c0b1a35a1f30236c19cea2b07454d270ecdbc75d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d6da6e64_96b127dc",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 16
      },
      "lineNbr": 1354,
      "author": {
        "id": 1524687
      },
      "writtenOn": "2022-01-20T09:09:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9fc90dc9_e68a4402",
      "revId": "c0b1a35a1f30236c19cea2b07454d270ecdbc75d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}