{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "fe71f996_ccce5930",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1543967
      },
      "writtenOn": "2022-10-03T23:50:25Z",
      "side": 1,
      "message": "Could add 7279, or is that not the protocol when 7604 is already designated as blocking 7279?",
      "revId": "5cc158c0564fc3642cf3e3f9fca5a0534d71fa36",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "793ddc75_67e114cb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-10-04T02:21:59Z",
      "side": 1,
      "message": "No typically we don\u0027t. Usage of this extension is not just for PLS, I actually did it for framebuffer fetch and advanced blend. I would if there was anything explicitly about PLS in the change, but there isn\u0027t.",
      "parentUuid": "fe71f996_ccce5930",
      "revId": "5cc158c0564fc3642cf3e3f9fca5a0534d71fa36",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eb9cf16d_ba3570ab",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1543967
      },
      "writtenOn": "2022-10-05T16:25:49Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "793ddc75_67e114cb",
      "revId": "5cc158c0564fc3642cf3e3f9fca5a0534d71fa36",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eb75f52e_26b6b534",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-10-05T16:18:20Z",
      "side": 1,
      "message": "Any other comments Chris?",
      "revId": "5cc158c0564fc3642cf3e3f9fca5a0534d71fa36",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "725c4a02_10ef2d0d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1543967
      },
      "writtenOn": "2022-10-05T16:25:49Z",
      "side": 1,
      "message": "Nope! So excited to see official Vulkan support for coherent framebuffer fetch!",
      "parentUuid": "eb75f52e_26b6b534",
      "revId": "5cc158c0564fc3642cf3e3f9fca5a0534d71fa36",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "28c4199f_056d89eb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-10-05T16:59:26Z",
      "side": 1,
      "message": "Thanks. Yuxin, please turn your +1 to +2 then, Chris doesn\u0027t have permission.",
      "parentUuid": "725c4a02_10ef2d0d",
      "revId": "5cc158c0564fc3642cf3e3f9fca5a0534d71fa36",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1a23efc7_ff9f92f4",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 5989,
      "author": {
        "id": 1543967
      },
      "writtenOn": "2022-10-03T23:47:28Z",
      "side": 1,
      "message": "Should we have a similar skip for ARM and SwiftShader? Or no, since that\u0027s an off-script usage of the API?",
      "revId": "5cc158c0564fc3642cf3e3f9fca5a0534d71fa36",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c7394276_650f0418",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 5989,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-10-04T02:21:59Z",
      "side": 1,
      "message": "Ext is supported by SwiftShader FYI.\n\nBut no, we shouldn\u0027t because yes, that\u0027s not per spec. Mostly satisfying VVL though.\n\nActually this change is rather redundant. With the rasterization order ext, we expose framebuffer fetch as coherent, so the barrier is not going to be called anyway. I added the if here because if the application does call the barrier (unnecessarily), we can\u0027t technically issue a Vulkan barrier because elsewhere I\u0027ve also removed the subpass self-dependency.",
      "parentUuid": "1a23efc7_ff9f92f4",
      "revId": "5cc158c0564fc3642cf3e3f9fca5a0534d71fa36",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "416627c0_65309729",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 5989,
      "author": {
        "id": 1543967
      },
      "writtenOn": "2022-10-05T16:25:49Z",
      "side": 1,
      "message": "Agreed",
      "parentUuid": "c7394276_650f0418",
      "revId": "5cc158c0564fc3642cf3e3f9fca5a0534d71fa36",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1de42247_ccfe1ca9",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 2257,
      "author": {
        "id": 1543967
      },
      "writtenOn": "2022-10-03T23:47:28Z",
      "side": 1,
      "message": "Nice to have the ARM extension in here too!",
      "revId": "5cc158c0564fc3642cf3e3f9fca5a0534d71fa36",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}