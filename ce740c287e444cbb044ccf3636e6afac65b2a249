{
  "comments": [
    {
      "key": {
        "uuid": "54d23e19_817abaea",
        "filename": "include/GLSLANG/ShaderLang.h",
        "patchSetId": 6
      },
      "lineNbr": 325,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-08-03T14:47:42Z",
      "side": 1,
      "message": "nit: i think it\u0027s more correct to say we generate an error when the shader binds to a unit \u003e\u003d MaxImageUnits.",
      "range": {
        "startLine": 324,
        "startChar": 48,
        "endLine": 325,
        "endChar": 32
      },
      "revId": "ce740c287e444cbb044ccf3636e6afac65b2a249",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "54d23e19_0166aa55",
        "filename": "include/GLSLANG/ShaderLang.h",
        "patchSetId": 6
      },
      "lineNbr": 344,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-08-03T14:47:42Z",
      "side": 1,
      "message": "This use of std::array makes me a bit suspicious - can we guarantee using std::array never makes any heap allocations?",
      "range": {
        "startLine": 344,
        "startChar": 9,
        "endLine": 344,
        "endChar": 14
      },
      "revId": "ce740c287e444cbb044ccf3636e6afac65b2a249",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "54d23e19_21872ebe",
        "filename": "include/GLSLANG/ShaderLang.h",
        "patchSetId": 6
      },
      "lineNbr": 344,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2016-08-03T15:07:30Z",
      "side": 1,
      "message": "All the spec mentions is that std::array is an aggregate, so it can\u0027t have user-defined constructors, and cannot do allocations when the default constructor is used. Implementations could do lazy allocation, but the whole point of std::array is that it does no allocations.",
      "parentUuid": "54d23e19_0166aa55",
      "range": {
        "startLine": 344,
        "startChar": 9,
        "endLine": 344,
        "endChar": 14
      },
      "revId": "ce740c287e444cbb044ccf3636e6afac65b2a249",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "54d23e19_01986a62",
        "filename": "src/compiler/translator/Initialize.cpp",
        "patchSetId": 6
      },
      "lineNbr": 499,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2016-08-03T14:25:19Z",
      "side": 1,
      "message": "Changing the precision from EbpUndefined to EbpMedium seems fine.",
      "revId": "ce740c287e444cbb044ccf3636e6afac65b2a249",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "54d23e19_c18da229",
        "filename": "src/compiler/translator/Initialize.cpp",
        "patchSetId": 6
      },
      "lineNbr": 545,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2016-08-03T14:25:19Z",
      "side": 1,
      "message": "ultra-nit: empty line here, or maybe I\u0027m missing the logic behind the grouping.",
      "revId": "ce740c287e444cbb044ccf3636e6afac65b2a249",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d4ef0ec1_adefbd84",
        "filename": "src/compiler/translator/SymbolTable.h",
        "patchSetId": 6
      },
      "lineNbr": 35,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2016-08-03T13:33:42Z",
      "side": 1,
      "message": "nit: Includes in alphabetical order.",
      "revId": "ce740c287e444cbb044ccf3636e6afac65b2a249",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d4ef0ec1_cde689ad",
        "filename": "src/compiler/translator/SymbolTable.h",
        "patchSetId": 6
      },
      "lineNbr": 35,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2016-08-03T13:47:02Z",
      "side": 1,
      "message": "As a clarification, grouping includes in standard libraries and project headers is still the convertion, but inside the groups includes should be alphabetically ordered.",
      "parentUuid": "d4ef0ec1_adefbd84",
      "revId": "ce740c287e444cbb044ccf3636e6afac65b2a249",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "54d23e19_4170b20c",
        "filename": "src/libANGLE/Compiler.cpp",
        "patchSetId": 6
      },
      "lineNbr": 90,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-08-03T14:47:42Z",
      "side": 1,
      "message": "nit: always use \u0027unsigned int\u0027 for angle style",
      "range": {
        "startLine": 90,
        "startChar": 9,
        "endLine": 90,
        "endChar": 17
      },
      "revId": "ce740c287e444cbb044ccf3636e6afac65b2a249",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}