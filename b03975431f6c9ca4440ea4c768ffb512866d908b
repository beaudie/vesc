{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4b3dd61e_63593b41",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-07-13T21:32:00Z",
      "side": 1,
      "message": "If this type of change is helpful, I think the expectations files should be updated to match the already existing files which contain the backend and expectations (skip/fail/etc.) instead.   Otherwise, having so many different expectations files will be difficult to maintain and scale whenever new tests are added/modified.",
      "revId": "b03975431f6c9ca4440ea4c768ffb512866d908b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "901747b4_c3b1dfc9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1491823
      },
      "writtenOn": "2021-07-14T06:38:30Z",
      "side": 1,
      "message": "I\u0027ll have a closer look at this. For the moment I just removed the WIP tag, because I wanted the change to be discussed.",
      "parentUuid": "4b3dd61e_63593b41",
      "revId": "b03975431f6c9ca4440ea4c768ffb512866d908b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "49bc26ac_9170003d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-07-14T12:39:39Z",
      "side": 1,
      "message": "Yeah, please follow either the existing ANGLE format (see deqp_support folder) or use the Chromium format:\n\nhttps://chromium.googlesource.com/chromium/src/+/HEAD/docs/testing/web_test_expectations.md#syntax\n\nskip/fail/etc as Tim said are part of the syntax of the file. The Chromium format has Python code already for parsing it:\n\nhttps://chromium.googlesource.com/chromium/src/+/HEAD/third_party/blink/tools/blinkpy/web_tests/models/test_expectations.py\n\nNot sure how easily reusable it is.",
      "parentUuid": "901747b4_c3b1dfc9",
      "revId": "b03975431f6c9ca4440ea4c768ffb512866d908b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "74f6ea61_41c35fe0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1491823
      },
      "writtenOn": "2021-07-14T13:49:45Z",
      "side": 1,
      "message": "I\u0027d probably go with the ANGLE format, although it means opening a bug for each tests that is not passing, and I\u0027d have to figure out a way to not duplicate the information about the backend.",
      "parentUuid": "49bc26ac_9170003d",
      "revId": "b03975431f6c9ca4440ea4c768ffb512866d908b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "560430dc_21b6580a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2021-07-15T15:58:16Z",
      "side": 1,
      "message": "To save you some trouble, I think it would be acceptable to just have a single bug to kick start this.",
      "parentUuid": "74f6ea61_41c35fe0",
      "revId": "b03975431f6c9ca4440ea4c768ffb512866d908b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "00f20fe6_e61e8632",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-07-13T21:32:00Z",
      "side": 1,
      "message": "Why are per-backend expectations files necessary when the test name itself already specifies the backend.",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 37
      },
      "revId": "b03975431f6c9ca4440ea4c768ffb512866d908b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ccf1418_4cc0d69f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1491823
      },
      "writtenOn": "2021-07-14T06:38:30Z",
      "side": 1,
      "message": "This I based on the fact that different backends are supported differently, e.g. AFAIK the CI currently only runs the ES2_Vulkan_SwiftShader I can also put them all into one file.",
      "parentUuid": "00f20fe6_e61e8632",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 37
      },
      "revId": "b03975431f6c9ca4440ea4c768ffb512866d908b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6426b337_a0cf9755",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-07-14T12:39:39Z",
      "side": 1,
      "message": "+1.. when running on a system implementation (Linux/NV, etc) we might need to start using even more specific tags. We can\u0027t really maintain these right now so I suggest we omit them and always run on SwiftShader unless there\u0027s a reason to need to run on NV/AMD/etc.",
      "parentUuid": "8ccf1418_4cc0d69f",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 37
      },
      "revId": "b03975431f6c9ca4440ea4c768ffb512866d908b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "85b1fe9f_76b58ee4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-07-13T21:32:00Z",
      "side": 1,
      "message": "Why is a separate file required for this, rather than marking the test as \"skip\" in the expectations file?",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 16,
        "endChar": 16
      },
      "revId": "b03975431f6c9ca4440ea4c768ffb512866d908b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fed5fecf_89adbb86",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1491823
      },
      "writtenOn": "2021-07-14T06:38:30Z",
      "side": 1,
      "message": "As the name says: The expectation file shows the expected results, it should not be read to decide which tests are to be run. \n\nSpecifically, there are two different types of \"skip\": One is that the test runner skips a test because it is listed in the skip file, these tests don\u0027t show up in the expectation file, because there is no expectation. And there is the skip because the test itself says it is to be skipped because of the environment or backend it is run on. This latter type of skip is what would show up in the expectation file. \n\nIf we would use the expectation file to skip tests issued by the runner, a change that enables a test of the second type, i.e. a test that was skipped before based on some platform check would still not be run, because the runner would drop it based on the \u0027skip\u0027 in the expectation, the change would not be captured unless we also change the expectation file, and nothing reminds us about that this is needed. \n\nThat\u0027s why a separate skip file is needed, maybe I should call it capture_replay_disabled_tests.txt to make the difference clear.",
      "parentUuid": "85b1fe9f_76b58ee4",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 16,
        "endChar": 16
      },
      "revId": "b03975431f6c9ca4440ea4c768ffb512866d908b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9ef64834_efff83c6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-07-14T12:39:39Z",
      "side": 1,
      "message": "I suggest we use one file and different test result for different categories of skip.",
      "parentUuid": "fed5fecf_89adbb86",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 16,
        "endChar": 16
      },
      "revId": "b03975431f6c9ca4440ea4c768ffb512866d908b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ccd50f16_59ca829a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1491823
      },
      "writtenOn": "2021-07-14T13:49:45Z",
      "side": 1,
      "message": "As of now neither the ANGLE format nor the Chromium format seem to distinguish between tests that are skipped because test itself issues the skip based on the environment, and the skipping because we want to skip, so I\u0027d add a tag DISABLED there for the latter case.",
      "parentUuid": "9ef64834_efff83c6",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 16,
        "endChar": 16
      },
      "revId": "b03975431f6c9ca4440ea4c768ffb512866d908b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9e455e50_5dc9b21d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1491823
      },
      "writtenOn": "2021-07-13T15:25:46Z",
      "side": 1,
      "message": "This is my take at replacing the current requirement that all enabled capture/replay tests pass by a combination of the current \"Skip\" feature and an expectation files that holds test outcomes on a per backend base.\n\nFor the expectation to be correct the series requires the fence, semaphore, context serialization, and the ES2/ES3 feature correction patch to be landed, for that reason I also didn\u0027t try to run the CQ.",
      "revId": "b03975431f6c9ca4440ea4c768ffb512866d908b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d81a79dd_cd466be2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-07-14T12:39:39Z",
      "side": 1,
      "message": "Nice work Gert, I have some similar comments as Tim made.",
      "revId": "b03975431f6c9ca4440ea4c768ffb512866d908b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0f90bdda_8312862e",
        "filename": "src/tests/capture_replay_tests/capture_replay_expectation_ES2_Vulkan.txt",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-07-13T21:32:00Z",
      "side": 1,
      "message": "Are these \"Pass\" values necessary?   It would be much nicer to default to passing rather than having to update expectations files every time a new test is added.",
      "revId": "b03975431f6c9ca4440ea4c768ffb512866d908b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "de816660_b484bbf3",
        "filename": "src/tests/capture_replay_tests/capture_replay_expectation_ES2_Vulkan.txt",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1491823
      },
      "writtenOn": "2021-07-14T06:38:30Z",
      "side": 1,
      "message": "If we don\u0027t have \"Pass\" in the expectation, we don\u0027t have prove that the (new) tests are actually run if they pass.",
      "parentUuid": "0f90bdda_8312862e",
      "revId": "b03975431f6c9ca4440ea4c768ffb512866d908b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ae9da9f_d47199f1",
        "filename": "src/tests/capture_replay_tests/capture_replay_expectation_ES2_Vulkan.txt",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-07-14T12:39:39Z",
      "side": 1,
      "message": "I agree there is some value in pass, as you say it ensures the tests run. I don\u0027t think we want to maintain pass, because it\u0027s inconsistent with our other test suites and will cause developers to now have to update these files when they add new tests. At least it\u0027s a more impactful change and we\u0027d have to get some consensus from the wider team.",
      "parentUuid": "de816660_b484bbf3",
      "revId": "b03975431f6c9ca4440ea4c768ffb512866d908b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c5394c52_d00a47de",
        "filename": "src/tests/capture_replay_tests/capture_replay_expectation_ES2_Vulkan.txt",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1491823
      },
      "writtenOn": "2021-07-14T13:49:45Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "8ae9da9f_d47199f1",
      "revId": "b03975431f6c9ca4440ea4c768ffb512866d908b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}