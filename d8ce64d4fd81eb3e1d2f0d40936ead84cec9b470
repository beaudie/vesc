{
  "comments": [
    {
      "key": {
        "uuid": "a59175b2_77319e31",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 9
      },
      "lineNbr": 4399,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-04-29T23:56:35Z",
      "side": 1,
      "message": "This looks like a common pattern.   Is there a way to abstract it out into a vk::QueryHelper function?",
      "range": {
        "startLine": 4395,
        "startChar": 0,
        "endLine": 4399,
        "endChar": 87
      },
      "revId": "d8ce64d4fd81eb3e1d2f0d40936ead84cec9b470",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b960c85a_76c7b6c6",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 9
      },
      "lineNbr": 4399,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-04-30T18:07:07Z",
      "side": 1,
      "message": "The other choice here is just record the mQuery and defer the reset call. You can save mQuery number in mRenderPassCommands object and call reset at flushToPrimary time. I think it will be much simpler and efficient than has to record it in mOutsideRenderPassCommands immediately.",
      "parentUuid": "a59175b2_77319e31",
      "range": {
        "startLine": 4395,
        "startChar": 0,
        "endLine": 4399,
        "endChar": 87
      },
      "revId": "d8ce64d4fd81eb3e1d2f0d40936ead84cec9b470",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b216955_3428a543",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 9
      },
      "lineNbr": 4399,
      "author": {
        "id": 1256245
      },
      "writtenOn": "2020-04-30T18:59:18Z",
      "side": 1,
      "message": "This is another good input. I\u0027ve created a bug to track this improvement:\nhttps://bugs.chromium.org/p/angleproject/issues/detail?id\u003d4603\n\nThe point of the current CL is to lay the groundwork for the worker thread by moving all uses of primary command buffer in the main thread to be on SecondaryCommandBuffer (SCB) instead. I\u0027d prefer to avoid functional changes in this CL and track them for follow-on work. This keeps the current SCB refactor simple and allows creation of the worker thread to proceed.\n\nThere are a number of improvements that can be made to SCBs, which I would like to save for separate CLs and follow-on work after the worker thread is complete.",
      "parentUuid": "b960c85a_76c7b6c6",
      "range": {
        "startLine": 4395,
        "startChar": 0,
        "endLine": 4399,
        "endChar": 87
      },
      "revId": "d8ce64d4fd81eb3e1d2f0d40936ead84cec9b470",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0ecde1a4_e1512d9c",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 9
      },
      "lineNbr": 4399,
      "author": {
        "id": 1256245
      },
      "writtenOn": "2020-04-30T20:55:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4b216955_3428a543",
      "range": {
        "startLine": 4395,
        "startChar": 0,
        "endLine": 4399,
        "endChar": 87
      },
      "revId": "d8ce64d4fd81eb3e1d2f0d40936ead84cec9b470",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}