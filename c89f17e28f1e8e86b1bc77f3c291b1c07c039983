{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "0a4a9e39_5418d945",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-11-17T20:47:03Z",
      "side": 1,
      "message": "design looks good, I\u0027m glad we\u0027re able to detect when a gen-on-bind resource is created.",
      "revId": "c89f17e28f1e8e86b1bc77f3c291b1c07c039983",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fed1e26f_b3cd042e",
        "filename": "src/libANGLE/capture/trace_fixture.cpp",
        "patchSetId": 9
      },
      "lineNbr": 409,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-11-17T20:47:03Z",
      "side": 1,
      "message": "wording suggestions: SetResourceID and SetFramebufferID . inject conveys a meaning of insertion into the middle of an ordered list or some kind of splicing behaviour.",
      "range": {
        "startLine": 409,
        "startChar": 5,
        "endLine": 409,
        "endChar": 13
      },
      "revId": "c89f17e28f1e8e86b1bc77f3c291b1c07c039983",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f90c76b2_620a5593",
        "filename": "src/libANGLE/capture/trace_fixture.cpp",
        "patchSetId": 9
      },
      "lineNbr": 409,
      "author": {
        "id": 1491823
      },
      "writtenOn": "2021-11-18T10:48:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fed1e26f_b3cd042e",
      "range": {
        "startLine": 409,
        "startChar": 5,
        "endLine": 409,
        "endChar": 13
      },
      "revId": "c89f17e28f1e8e86b1bc77f3c291b1c07c039983",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6d5b524a_a32b0d65",
        "filename": "src/libANGLE/capture/trace_fixture.cpp",
        "patchSetId": 9
      },
      "lineNbr": 411,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-11-17T20:47:03Z",
      "side": 1,
      "message": "I believe this can be an ASSERT",
      "range": {
        "startLine": 411,
        "startChar": 2,
        "endLine": 411,
        "endChar": 21
      },
      "revId": "c89f17e28f1e8e86b1bc77f3c291b1c07c039983",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ef1972e6_b5f59f3b",
        "filename": "src/libANGLE/capture/trace_fixture.cpp",
        "patchSetId": 9
      },
      "lineNbr": 411,
      "author": {
        "id": 1491823
      },
      "writtenOn": "2021-11-18T10:48:15Z",
      "side": 1,
      "message": "This requires  gl::priv::ShouldCreatePlatformLogMessage, do we really want to pull the according library in, or would it be okay to use \"assert\" (as I nave done to test whether it\u0027s correct)?",
      "parentUuid": "6d5b524a_a32b0d65",
      "range": {
        "startLine": 411,
        "startChar": 2,
        "endLine": 411,
        "endChar": 21
      },
      "revId": "c89f17e28f1e8e86b1bc77f3c291b1c07c039983",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bca32d27_3fc94c26",
        "filename": "src/libANGLE/capture/trace_fixture.cpp",
        "patchSetId": 9
      },
      "lineNbr": 411,
      "author": {
        "id": 1491823
      },
      "writtenOn": "2021-11-18T10:50:57Z",
      "side": 1,
      "message": "What I meant is that it would require the replay executable to pull in that library.",
      "parentUuid": "ef1972e6_b5f59f3b",
      "range": {
        "startLine": 411,
        "startChar": 2,
        "endLine": 411,
        "endChar": 21
      },
      "revId": "c89f17e28f1e8e86b1bc77f3c291b1c07c039983",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a6484a70_3395d72b",
        "filename": "src/libANGLE/capture/trace_fixture.cpp",
        "patchSetId": 9
      },
      "lineNbr": 411,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-11-18T13:42:36Z",
      "side": 1,
      "message": "My bad.. we shouldn\u0027t use ASSERT. And assert() has its own issues. Please use the above fprintf/exit pattern instead.",
      "parentUuid": "bca32d27_3fc94c26",
      "range": {
        "startLine": 411,
        "startChar": 2,
        "endLine": 411,
        "endChar": 21
      },
      "revId": "c89f17e28f1e8e86b1bc77f3c291b1c07c039983",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d6e88201_770ca75c",
        "filename": "src/libANGLE/capture/trace_fixture.cpp",
        "patchSetId": 9
      },
      "lineNbr": 411,
      "author": {
        "id": 1491823
      },
      "writtenOn": "2021-11-18T14:17:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a6484a70_3395d72b",
      "range": {
        "startLine": 411,
        "startChar": 2,
        "endLine": 411,
        "endChar": 21
      },
      "revId": "c89f17e28f1e8e86b1bc77f3c291b1c07c039983",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "041bd46e_f674478f",
        "filename": "src/libANGLE/capture/trace_fixture.cpp",
        "patchSetId": 9
      },
      "lineNbr": 411,
      "author": {
        "id": 1491823
      },
      "writtenOn": "2021-11-19T08:27:24Z",
      "side": 1,
      "message": "There were two problems: 1. the FBO tests for GLES1 started to fail, because for glGenFramebufferOES the IDs were not created (fixed in this patch too), and some MSVC bug seems to have thrashed all the builds on Windows, so I created an extra CL to work around this bug.",
      "parentUuid": "d6e88201_770ca75c",
      "range": {
        "startLine": 411,
        "startChar": 2,
        "endLine": 411,
        "endChar": 21
      },
      "revId": "c89f17e28f1e8e86b1bc77f3c291b1c07c039983",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "988ed021_cc5dc8e0",
        "filename": "src/libANGLE/capture/trace_fixture.cpp",
        "patchSetId": 9
      },
      "lineNbr": 411,
      "author": {
        "id": 1491823
      },
      "writtenOn": "2021-11-22T15:25:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "041bd46e_f674478f",
      "range": {
        "startLine": 411,
        "startChar": 2,
        "endLine": 411,
        "endChar": 21
      },
      "revId": "c89f17e28f1e8e86b1bc77f3c291b1c07c039983",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}