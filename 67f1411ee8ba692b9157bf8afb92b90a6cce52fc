{
  "comments": [
    {
      "key": {
        "uuid": "ff8a9c4c_06e4db88",
        "filename": "src/libANGLE/renderer/vulkan/CommandGraph.cpp",
        "patchSetId": 21
      },
      "lineNbr": 223,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-03-25T13:45:41Z",
      "side": 1,
      "message": "can we remove the TODO now?",
      "range": {
        "startLine": 223,
        "startChar": 4,
        "endLine": 223,
        "endChar": 81
      },
      "revId": "67f1411ee8ba692b9157bf8afb92b90a6cce52fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8dfd7ff1_7d87e512",
        "filename": "src/libANGLE/renderer/vulkan/CommandGraph.cpp",
        "patchSetId": 21
      },
      "lineNbr": 223,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-03-25T21:22:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ff8a9c4c_06e4db88",
      "range": {
        "startLine": 223,
        "startChar": 4,
        "endLine": 223,
        "endChar": 81
      },
      "revId": "67f1411ee8ba692b9157bf8afb92b90a6cce52fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4c7c1668_ac2a14d6",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 21
      },
      "lineNbr": 214,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-03-25T13:45:41Z",
      "side": 1,
      "message": "nit: consider rephrasing to something like \"We can use render pass load ops if clearing depth/stencil or unmasked color.\"",
      "range": {
        "startLine": 214,
        "startChar": 52,
        "endLine": 214,
        "endChar": 95
      },
      "revId": "67f1411ee8ba692b9157bf8afb92b90a6cce52fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "53593fff_e528130b",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 21
      },
      "lineNbr": 214,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-03-25T13:45:41Z",
      "side": 1,
      "message": "nit: ops",
      "range": {
        "startLine": 214,
        "startChar": 35,
        "endLine": 214,
        "endChar": 38
      },
      "revId": "67f1411ee8ba692b9157bf8afb92b90a6cce52fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "697de692_4884a5ea",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 21
      },
      "lineNbr": 214,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-03-25T21:22:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4c7c1668_ac2a14d6",
      "range": {
        "startLine": 214,
        "startChar": 52,
        "endLine": 214,
        "endChar": 95
      },
      "revId": "67f1411ee8ba692b9157bf8afb92b90a6cce52fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "425302eb_bccee315",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 21
      },
      "lineNbr": 214,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-03-25T21:22:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "53593fff_e528130b",
      "range": {
        "startLine": 214,
        "startChar": 35,
        "endLine": 214,
        "endChar": 38
      },
      "revId": "67f1411ee8ba692b9157bf8afb92b90a6cce52fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f042693_a7377cc0",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 21
      },
      "lineNbr": 219,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-03-25T13:45:41Z",
      "side": 1,
      "message": "maybe add the clearColor check in here? seems to always be included in the test, and can use short circuiting.",
      "range": {
        "startLine": 219,
        "startChar": 9,
        "endLine": 219,
        "endChar": 31
      },
      "revId": "67f1411ee8ba692b9157bf8afb92b90a6cce52fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7303fe4d_119019bf",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 21
      },
      "lineNbr": 219,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-03-25T21:22:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5f042693_a7377cc0",
      "range": {
        "startLine": 219,
        "startChar": 9,
        "endLine": 219,
        "endChar": 31
      },
      "revId": "67f1411ee8ba692b9157bf8afb92b90a6cce52fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dddd8d4c_ee6e6b1c",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 21
      },
      "lineNbr": 222,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-03-21T21:04:22Z",
      "side": 1,
      "message": "I went with the safe option here, as a cursory read didn\u0027t answer this question, but if render pass loadOp respects scissor, that would simplify a lot in this function.",
      "range": {
        "startLine": 222,
        "startChar": 47,
        "endLine": 222,
        "endChar": 81
      },
      "revId": "67f1411ee8ba692b9157bf8afb92b90a6cce52fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fd67b79c_bbc81df9",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 21
      },
      "lineNbr": 222,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-03-25T13:45:41Z",
      "side": 1,
      "message": "\u003e VK_ATTACHMENT_LOAD_OP_CLEAR specifies that the contents within the render area will be cleared\n\u003e to a uniform value, which is specified when a render pass instance is begun.\n\n\u003e renderArea is the render area that is affected by the render pass instance. The effects of\n\u003e attachment load, store and multisample resolve operations are restricted to the pixels whose\n\u003e x and y coordinates fall within the render area on all attachments. The render area extends\n\u003e to all layers of framebuffer. The application must ensure (using scissor if necessary) that\n\u003e all rendering is contained within the render area. The render area must be contained within\n\u003e the framebuffer dimensions.\n\nSeems pretty clear that the scissor test does affect load ops.",
      "parentUuid": "dddd8d4c_ee6e6b1c",
      "range": {
        "startLine": 222,
        "startChar": 47,
        "endLine": 222,
        "endChar": 81
      },
      "revId": "67f1411ee8ba692b9157bf8afb92b90a6cce52fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "35652745_29762402",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 21
      },
      "lineNbr": 222,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-03-25T21:22:48Z",
      "side": 1,
      "message": "Your quote actually tells me the opposite. That the \"render area\" controls load op, and that it\u0027s up to the application to ensure writes are actually contained within the render area (using scissor). In other words, render area affects load op, scissor affects fragment-shaded pixels.\n\nWhich also makes sense, given that the scissor can change inside the render pass.",
      "parentUuid": "fd67b79c_bbc81df9",
      "range": {
        "startLine": 222,
        "startChar": 47,
        "endLine": 222,
        "endChar": 81
      },
      "revId": "67f1411ee8ba692b9157bf8afb92b90a6cce52fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "907dc2de_c12b0f1a",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 21
      },
      "lineNbr": 222,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-03-25T21:39:52Z",
      "side": 1,
      "message": "Maybe I don\u0027t understand what you were asking. You want to ignore the scissor region when using a load op it seems? Or do you want your clear to be restricted to the scissor region? The load op will not clear the region outside the scissor.",
      "parentUuid": "35652745_29762402",
      "range": {
        "startLine": 222,
        "startChar": 47,
        "endLine": 222,
        "endChar": 81
      },
      "revId": "67f1411ee8ba692b9157bf8afb92b90a6cce52fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e49eb15_4d84b31f",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 21
      },
      "lineNbr": 222,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-03-26T04:02:37Z",
      "side": 1,
      "message": "I was speculating whether we can contain the effect of loadOp to the scissor region.\n\nMy understanding of the spec is the opposite of yours. What I understand is that if you have this situation:\n\nRenderArea \u003d (0, 0, W, H)\nScissor \u003d (W/4, H/4, W/2, H/2)\nloadOp \u003d Clear\n\nThen the whole of (0, 0, W, H) is cleared regardless of the scissor. The scissor is just there to ensure no actual \"rendering\" is done outside the render area:\n\n\u003e The effects of attachment load ... are restricted to the pixels whose x and y coordinates fall within the render area ...\n\n---\n\nThat by the way means that we could always do the clear with renderpass loadOp if we limit the render area to the current scissor, but then we would have to restart the render pass if on a subsequent draw the scissor grows beyond the current one.\n\nThat just actually gave me the idea to enable this path if the current scissor size is the same as the framebuffer size.",
      "parentUuid": "907dc2de_c12b0f1a",
      "range": {
        "startLine": 222,
        "startChar": 47,
        "endLine": 222,
        "endChar": 81
      },
      "revId": "67f1411ee8ba692b9157bf8afb92b90a6cce52fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b17f4654_b2b18928",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 21
      },
      "lineNbr": 922,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-03-25T13:45:41Z",
      "side": 1,
      "message": "In the future for ES 3.0 clear functionality/MRT we could use an append-like function to save starting a new rp every clear. but can do that as a follow-up.",
      "range": {
        "startLine": 921,
        "startChar": 5,
        "endLine": 922,
        "endChar": 74
      },
      "revId": "67f1411ee8ba692b9157bf8afb92b90a6cce52fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "75317390_048410c1",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 21
      },
      "lineNbr": 922,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-03-25T21:22:48Z",
      "side": 1,
      "message": "Yes I\u0027ve noticed that. That\u0027s the plan, and would be done in a future CL.",
      "parentUuid": "b17f4654_b2b18928",
      "range": {
        "startLine": 921,
        "startChar": 5,
        "endLine": 922,
        "endChar": 74
      },
      "revId": "67f1411ee8ba692b9157bf8afb92b90a6cce52fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b4c1ad93_f0450f75",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 21
      },
      "lineNbr": 1126,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-03-25T13:45:41Z",
      "side": 1,
      "message": "nit: would extract into a temporary for clarity",
      "range": {
        "startLine": 1126,
        "startChar": 12,
        "endLine": 1126,
        "endChar": 81
      },
      "revId": "67f1411ee8ba692b9157bf8afb92b90a6cce52fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "894a1fff_3ed0d12f",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 21
      },
      "lineNbr": 1126,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-03-25T21:22:48Z",
      "side": 1,
      "message": "Done. Duplicate comment from PS 17.",
      "parentUuid": "b4c1ad93_f0450f75",
      "range": {
        "startLine": 1126,
        "startChar": 12,
        "endLine": 1126,
        "endChar": 81
      },
      "revId": "67f1411ee8ba692b9157bf8afb92b90a6cce52fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "06075922_9ba07c68",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 21
      },
      "lineNbr": 1151,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-03-25T13:45:41Z",
      "side": 1,
      "message": "same for the ?: here",
      "range": {
        "startLine": 1149,
        "startChar": 13,
        "endLine": 1151,
        "endChar": 83
      },
      "revId": "67f1411ee8ba692b9157bf8afb92b90a6cce52fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e9729161_01537c5c",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 21
      },
      "lineNbr": 1151,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-03-25T21:22:48Z",
      "side": 1,
      "message": "Done. Duplicate comment from PS 17.",
      "parentUuid": "06075922_9ba07c68",
      "range": {
        "startLine": 1149,
        "startChar": 13,
        "endLine": 1151,
        "endChar": 83
      },
      "revId": "67f1411ee8ba692b9157bf8afb92b90a6cce52fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c8d06f0f_3969aa39",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.h",
        "patchSetId": 21
      },
      "lineNbr": 132,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-03-25T13:45:41Z",
      "side": 1,
      "message": "these are fairly big structs. should probably be const \u0026",
      "range": {
        "startLine": 132,
        "startChar": 41,
        "endLine": 132,
        "endChar": 59
      },
      "revId": "67f1411ee8ba692b9157bf8afb92b90a6cce52fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a815eb20_eae66f96",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.h",
        "patchSetId": 21
      },
      "lineNbr": 132,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-03-25T21:22:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c8d06f0f_3969aa39",
      "range": {
        "startLine": 132,
        "startChar": 41,
        "endLine": 132,
        "endChar": 59
      },
      "revId": "67f1411ee8ba692b9157bf8afb92b90a6cce52fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bd85b446_4e350ece",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.h",
        "patchSetId": 21
      },
      "lineNbr": 133,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-03-25T13:45:41Z",
      "side": 1,
      "message": "same",
      "range": {
        "startLine": 133,
        "startChar": 41,
        "endLine": 133,
        "endChar": 66
      },
      "revId": "67f1411ee8ba692b9157bf8afb92b90a6cce52fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "491ea60e_321df573",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.h",
        "patchSetId": 21
      },
      "lineNbr": 133,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-03-25T21:22:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bd85b446_4e350ece",
      "range": {
        "startLine": 133,
        "startChar": 41,
        "endLine": 133,
        "endChar": 66
      },
      "revId": "67f1411ee8ba692b9157bf8afb92b90a6cce52fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f8d99db6_0015f440",
        "filename": "src/libANGLE/renderer/vulkan/RenderTargetVk.cpp",
        "patchSetId": 21
      },
      "lineNbr": 125,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-03-25T13:45:41Z",
      "side": 1,
      "message": "same question as before. is this an unrelated fix?",
      "range": {
        "startLine": 125,
        "startChar": 20,
        "endLine": 125,
        "endChar": 51
      },
      "revId": "67f1411ee8ba692b9157bf8afb92b90a6cce52fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "65f802e5_63a76908",
        "filename": "src/libANGLE/renderer/vulkan/RenderTargetVk.cpp",
        "patchSetId": 21
      },
      "lineNbr": 125,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-03-25T21:22:48Z",
      "side": 1,
      "message": "It\u0027s a bug that was unveiled in this work. I would rather rename the function to `getExtents` rather than `getImageLevelExtents`. The reason is that this returns the extents of the render target, and the user shouldn\u0027t need to care about the fact that the render target is viewing a certain level of an image. Would that be ok with you?",
      "parentUuid": "f8d99db6_0015f440",
      "range": {
        "startLine": 125,
        "startChar": 20,
        "endLine": 125,
        "endChar": 51
      },
      "revId": "67f1411ee8ba692b9157bf8afb92b90a6cce52fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a3825e2_11a0a88a",
        "filename": "src/libANGLE/renderer/vulkan/RenderTargetVk.cpp",
        "patchSetId": 21
      },
      "lineNbr": 125,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-03-25T21:39:52Z",
      "side": 1,
      "message": "That\u0027s fine. You could split this into a separate CL if you like.",
      "parentUuid": "65f802e5_63a76908",
      "range": {
        "startLine": 125,
        "startChar": 20,
        "endLine": 125,
        "endChar": 51
      },
      "revId": "67f1411ee8ba692b9157bf8afb92b90a6cce52fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eac612f1_146ed42d",
        "filename": "src/libANGLE/renderer/vulkan/RenderTargetVk.cpp",
        "patchSetId": 21
      },
      "lineNbr": 125,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-03-26T04:02:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2a3825e2_11a0a88a",
      "range": {
        "startLine": 125,
        "startChar": 20,
        "endLine": 125,
        "endChar": 51
      },
      "revId": "67f1411ee8ba692b9157bf8afb92b90a6cce52fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}