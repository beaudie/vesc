{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4634477c_e872ccd7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 20,
      "author": {
        "id": 1394635
      },
      "writtenOn": "2023-03-08T12:46:19Z",
      "side": 1,
      "message": "I\u0027d suggest another approach.\n\nANGLE:\n- both extensions are requestable;\n- enabling the coherent extension implicitly enables its non-coherent variant.\n\nWebGL:\n- support for the WebGL extension string requires only the non-coherent ANGLE extension name;\n- user-agent requests both ANGLE extensions;\n- `isCoherent()` query result is cached on the user-agent side based on the list of supported extensions.\n\nSimilar case:\nhttps://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/modules/webgl/webgl_compressed_texture_astc.cc",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 20,
        "endChar": 23
      },
      "revId": "e9b4683699776ad6f808319d02979139d8cc961d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c6de202e_ccdbe050",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 20,
      "author": {
        "id": 1543967
      },
      "writtenOn": "2023-03-08T16:38:46Z",
      "side": 1,
      "message": "For the most part, coherency is just a property of the hardware, and not a feature that can be enabled. So what does it mean to request the main extension but not the coherent extension?\n\nIf we want to support turning on coherency separately, should we also support turning it off?\n\nHow does the `isCoherent()` method map to emscripten?\n\nIs there a reason to not instead do `glGetBooleanv(GL_PIXEL_LOCAL_STORAGE_COHERENT_ANGLE, \u0026coherent)`?",
      "parentUuid": "4634477c_e872ccd7",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 20,
        "endChar": 23
      },
      "revId": "e9b4683699776ad6f808319d02979139d8cc961d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "05b88c12_bb956b50",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 20,
      "author": {
        "id": 1394635
      },
      "writtenOn": "2023-03-08T17:18:32Z",
      "side": 1,
      "message": "\u003e So what does it mean to request the main extension but not the coherent extension?\n\nSince the concept of \"requestable ES extensions\" exists only in ANGLE, it can enforce that enabling certain extensions implicitly enables others.\n\n\u003e How does the `isCoherent()` method map to emscripten?\n\nIt should probably check the returned value and put one or two `GL_ANGLE_` extension strings into its list of ES extensions, assuming that an app relies on ES names.\n\n\u003e Is there a reason to not instead do...\n\nThat\u0027s a high-level extension design question.\n\nOption 1.\nDefine two extension strings in ES (as happened in ES with other extensions) and hide this implementation detail from WebGL via a WebGL-specific API, like `getSupportedProfiles()` in the ASTC extension.\n\nOption 2.\nDefine only one ES extension string and define an implementation-dependent boolean cap (plenty of ES examples as well). Passthrough everything to WebGL as-is.\n\nThe first would be aligned with the existing ASTC example, the second would be much cleaner but may require more work. Mixing both seems  _incoherent_.",
      "parentUuid": "c6de202e_ccdbe050",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 20,
        "endChar": 23
      },
      "revId": "e9b4683699776ad6f808319d02979139d8cc961d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6fb9aa32_a704bd19",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 20,
      "author": {
        "id": 1543967
      },
      "writtenOn": "2023-03-08T23:08:35Z",
      "side": 1,
      "message": "Let\u0027s go fully in on Option 1 since it\u0027s the path of least resistance, and also matches the ASTC extension, as well as KHR_blend_equation_advanced(_coherent) and EXT_shader_framebuffer_fetch(_noncoherent).\n\n(BTW, `isCoherent()` does not have a WEBGL suffix like the other commands in the WebGL extension. Does that seem correct to you? I could see an argument for either way.)",
      "parentUuid": "05b88c12_bb956b50",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 20,
        "endChar": 23
      },
      "revId": "e9b4683699776ad6f808319d02979139d8cc961d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}