{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "9ecc7f39_262bc2b1",
        "filename": "src/libANGLE/renderer/vulkan/shaders/src/EtcToBc.comp",
        "patchSetId": 4
      },
      "lineNbr": 142,
      "author": {
        "id": 1517514
      },
      "writtenOn": "2023-09-26T04:49:49Z",
      "side": 0,
      "message": "I understand that if remove the PUNCHTHROUGH logic, it will make it simpler. but I do see it did introduce big errors. there is some perf loss, but not that bigger.",
      "range": {
        "startLine": 134,
        "startChar": 4,
        "endLine": 142,
        "endChar": 5
      },
      "revId": "c9955641bcc2323ea2c92f9ff3d827466ac0a2db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3e577332_2c4351a7",
        "filename": "src/libANGLE/renderer/vulkan/shaders/src/EtcToBc.comp",
        "patchSetId": 4
      },
      "lineNbr": 142,
      "author": {
        "id": 1517514
      },
      "writtenOn": "2023-09-26T04:52:20Z",
      "side": 0,
      "message": "if there is bigger performance loss, we may keep it as seperate code version.",
      "parentUuid": "9ecc7f39_262bc2b1",
      "range": {
        "startLine": 134,
        "startChar": 4,
        "endLine": 142,
        "endChar": 5
      },
      "revId": "c9955641bcc2323ea2c92f9ff3d827466ac0a2db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "efb821ee_18a71041",
        "filename": "src/libANGLE/renderer/vulkan/shaders/src/EtcToBc.comp",
        "patchSetId": 4
      },
      "lineNbr": 142,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-09-26T08:11:57Z",
      "side": 0,
      "message": "Does this work?\n\n```\n    ivec3 dx;\n    uvec3 clusterSum \u003d subgroupClusteredAdd(rgbColor, 16);\n    int clusterCount \u003d subgroupClusteredAdd(1, 16);\n    if( alphaBits \u003d\u003d 1 ) {\n        int count \u003d subgroupClusteredAdd(1, 16);\n        ivec3 avg \u003d ivec3(clusterSum * 2 + count)/ (2*clusterCount));\n        dx \u003d ivec3(rgbColor) - avg;\n    }\n    else {\n        dx \u003d ivec3(rgbColor) - ivec3(clusterSum + 8 \u003e\u003e 4);\n    }\n```\n\nIt avoids the control flow issue, but also preserves the `alphaBits \u003d\u003d 1` logic to avoid the errors.",
      "parentUuid": "3e577332_2c4351a7",
      "range": {
        "startLine": 134,
        "startChar": 4,
        "endLine": 142,
        "endChar": 5
      },
      "revId": "c9955641bcc2323ea2c92f9ff3d827466ac0a2db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "21cf5cae_e9b86c63",
        "filename": "src/libANGLE/renderer/vulkan/shaders/src/EtcToBc.comp",
        "patchSetId": 4
      },
      "lineNbr": 142,
      "author": {
        "id": 1557704
      },
      "writtenOn": "2023-09-26T17:04:51Z",
      "side": 0,
      "message": "\u003e  I do see it did introduce big errors. there is some perf loss, but not that bigger.\n\n@Hailin: could you share where you saw those errors? Thanks!\n\nIn any case, I think I might end up just reverting this change. The proper fix here would be to make several shader versions, since whether we\u0027re going to use 1 bit or 8 bits is known ahead of time.",
      "parentUuid": "efb821ee_18a71041",
      "range": {
        "startLine": 134,
        "startChar": 4,
        "endLine": 142,
        "endChar": 5
      },
      "revId": "c9955641bcc2323ea2c92f9ff3d827466ac0a2db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "50ec0e12_9b0c4ca5",
        "filename": "src/libANGLE/renderer/vulkan/shaders/src/EtcToBc.comp",
        "patchSetId": 4
      },
      "lineNbr": 142,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-09-26T17:21:06Z",
      "side": 0,
      "message": "Actually please refrain from that. If there\u0027s anything that can be turned into a runtime decision, it should stay so. Build-time specialization has a non-trivial cost on ANGLE\u0027s binary size, and we made an effort in the past to only keep that were we have to (for example because the types change)",
      "parentUuid": "21cf5cae_e9b86c63",
      "range": {
        "startLine": 134,
        "startChar": 4,
        "endLine": 142,
        "endChar": 5
      },
      "revId": "c9955641bcc2323ea2c92f9ff3d827466ac0a2db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f0188016_f6c1fa49",
        "filename": "src/libANGLE/renderer/vulkan/shaders/src/EtcToBc.comp",
        "patchSetId": 4
      },
      "lineNbr": 142,
      "author": {
        "id": 1557704
      },
      "writtenOn": "2023-09-26T17:22:38Z",
      "side": 0,
      "message": "Ah, that\u0027s unfortunate.",
      "parentUuid": "50ec0e12_9b0c4ca5",
      "range": {
        "startLine": 134,
        "startChar": 4,
        "endLine": 142,
        "endChar": 5
      },
      "revId": "c9955641bcc2323ea2c92f9ff3d827466ac0a2db",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}