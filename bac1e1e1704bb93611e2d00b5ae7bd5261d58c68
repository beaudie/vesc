{
  "comments": [
    {
      "key": {
        "uuid": "8a512264_bc0ee3ea",
        "filename": "scripts/generate_entry_points.py",
        "patchSetId": 10
      },
      "lineNbr": 124,
      "author": {
        "id": 1326275
      },
      "writtenOn": "2019-07-04T15:24:16Z",
      "side": 1,
      "message": "It seems a bit arbitrary to put the capture after checking the context but before validation. Wouldn\u0027t there be a use-case where you\u0027d want to capture frames when there\u0027s no valid context or does that never happen?\n\nEDIT: I see that\u0027s because the Context owns the FrameCapture object. Why?",
      "revId": "bac1e1e1704bb93611e2d00b5ae7bd5261d58c68",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3eb9f196_c1da6c28",
        "filename": "scripts/generate_entry_points.py",
        "patchSetId": 10
      },
      "lineNbr": 124,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-07-04T15:30:52Z",
      "side": 1,
      "message": "It\u0027s very low priority to capture applications that don\u0027t have a valid context.\n\nThe capture is in the Context since the Context can own global variables.\n\nDoes that satisfy your worry? Or is there something specific you\u0027re thinking about.",
      "parentUuid": "8a512264_bc0ee3ea",
      "revId": "bac1e1e1704bb93611e2d00b5ae7bd5261d58c68",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d48b0975_b2c3a95c",
        "filename": "scripts/generate_entry_points.py",
        "patchSetId": 10
      },
      "lineNbr": 124,
      "author": {
        "id": 1326275
      },
      "writtenOn": "2019-07-04T15:42:21Z",
      "side": 1,
      "message": "I was mostly just curious, trying to understand",
      "parentUuid": "3eb9f196_c1da6c28",
      "revId": "bac1e1e1704bb93611e2d00b5ae7bd5261d58c68",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}