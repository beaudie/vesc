{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "9ac645c0_5d061329",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-10-19T17:25:46Z",
      "side": 1,
      "message": "How does this work when running from the command line? How do I switch between native and vulkan with `./angle_perftests --gtest_filter\u003d...`?",
      "revId": "dc19020c391b33df034daf5fd113116492930f92",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a324c323_cb14e401",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-10-19T21:06:44Z",
      "side": 1,
      "message": "See the prior CL here:\n\nhttps://chromium-review.googlesource.com/c/angle/angle/+/3956937\n\nYou can use --use-gl\u003dnative for system GL. You can also use --use-angle\u003dswiftshader to run SwiftShader tests now, no need for --enable-all-trace-tests or other shenanigans. Feel free to ping the internal chat if you need more info.",
      "parentUuid": "9ac645c0_5d061329",
      "revId": "dc19020c391b33df034daf5fd113116492930f92",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b0f6e554_cef65da8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1531247
      },
      "writtenOn": "2022-10-19T21:27:22Z",
      "side": 1,
      "message": "Isn\u0027t this going in the opposite direction of how other tests generally work? We\u0027re going to need to remember that for running `angle_perftests` we should specify test name as `vulkan_somename` and for `angle_trace_tests` it\u0027s going to be `somename` combined with `--use-gl` (or some other flag), right? How is this going to be disambiguated in dashboards? Instead of just `testname` we\u0027ll have to somehow identify tests by tuples like `(testname,renderer)`?",
      "parentUuid": "a324c323_cb14e401",
      "revId": "dc19020c391b33df034daf5fd113116492930f92",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "15d57bbb_cd284c65",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2022-10-19T23:33:33Z",
      "side": 1,
      "message": "Things are little bit broken on ToT at the moment, so we need to clean this up.\nFor instance, I can run the following:\n```\nangle_trace_tests --gtest_filter\u003dTracePerfTest.Run/vulkan_shadowgun_legends\n```\nand it works as expected, using ANGLE with Vulkan.\n\nBut if I run this:\n```\nangle_trace_tests --gtest_filter\u003dTracePerfTest.Run/vulkan_shadowgun_legends --use-gl\u003dnative\n```\nit doesn\u0027t run anything, finding no tests.\n\nThis also fails:\n```\nangle_trace_tests --gtest_filter\u003dTracePerfTest.Run/native_shadowgun_legends\n```\n\nBut if I add the flag, it works:\n```\nangle_trace_tests --gtest_filter\u003dTracePerfTest.Run/native_shadowgun_legends --use-gl\u003dnative\n```",
      "parentUuid": "b0f6e554_cef65da8",
      "revId": "dc19020c391b33df034daf5fd113116492930f92",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6012fb8a_1477b460",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2022-10-19T23:49:34Z",
      "side": 1,
      "message": "I pulled this CL locally and it works as expected.\n\nYou do get some output that informs you which backend is in use:\n```\nrunning test name: \"TracePerf\", backend: \"_vulkan\", story: \"shadowgun_legends\"\n```\n\nTo Roman\u0027s point, I think this will make the trace tests just like any other perf or end2end test.",
      "parentUuid": "15d57bbb_cd284c65",
      "revId": "dc19020c391b33df034daf5fd113116492930f92",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dbc5d0d4_a2ce89dd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-10-20T20:45:33Z",
      "side": 1,
      "message": "Thanks Cody for providing some great examples on how this CL makes things easier to work with. \n\nThere is a situation where angle_end2end_tests and others pack every configuration under the sun into one test set. This CL moves away from that design into working more like dEQP, which uses one fixed configuration specified by command line arguments. Then we run multiple variations of the test suite as different test sets on the bots. This is a better world to be in, if we can get there. ðŸ˜Š\n\nAlso this doesn\u0027t change how the dashboard tests are named, they keep the same names, although now they\u0027re under the angle_trace_tests entry instead of angle_perftests. That change was in a prior CL that split the binaries.\n\nThanks all for the questions \u0026 feedback. Are we reaching consensus here?",
      "parentUuid": "6012fb8a_1477b460",
      "revId": "dc19020c391b33df034daf5fd113116492930f92",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "51c4c2b5_7500a637",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1531247
      },
      "writtenOn": "2022-10-21T12:20:01Z",
      "side": 1,
      "message": "\u003e To Roman\u0027s point, I think this will make the trace tests just like any other perf or end2end test.\n\nSorry, not following here..\n\nperf tests:\n```\nCopyTexImageTest.RGBAToA/ES2_OpenGL\nCopyTexImageTest.RGBAToA/ES2_Vulkan_AsyncCommandQueue\n```\n\nend2end tests:\n```\nUniformsBenchmark.Run/gl_110_mat4x4\nUniformsBenchmark.Run/vulkan_110_mat4x4\n```\n\nThis CL is changing test name from `TracePerfTest.Run/vulkan_trex_200` (seemingly consistent with the above) to `TraceTest.trex_200` with flags. In what sense is it making it \"just like any other perf or end2end test\", what am I missing?\n\n@Jamie could you elaborate on the rationale in the CL description to explain this?\nAlso, shouldn\u0027t this CL be updating some docs?",
      "parentUuid": "dbc5d0d4_a2ce89dd",
      "revId": "dc19020c391b33df034daf5fd113116492930f92",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "692c8702_181fac20",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-10-21T12:47:59Z",
      "side": 1,
      "message": "Spoke to Roman offline - I think the missing rationale was the problems we had with --enable-all-trace-tests. I updated the issue description to summarize this and also went through the code more carefully with code search and updated some references to the old test names. Thanks Roman for the feedback, PTAL.",
      "parentUuid": "51c4c2b5_7500a637",
      "revId": "dc19020c391b33df034daf5fd113116492930f92",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}