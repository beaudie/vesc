{
  "comments": [
    {
      "key": {
        "uuid": "199b714d_84a96adc",
        "filename": "src/libANGLE/renderer/vulkan/SyncVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 313,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2020-06-04T16:13:00Z",
      "side": 1,
      "message": "All good changes, I only don\u0027t understand this added call to queueSubmit(). I would expect the app, after calling dupNativeFenceFD(), to call eglClientWaitSync(), but I guess you are saying that is not the case, and the FD needs to be submitted, so that the exported/dup\u0027d FD gets signaled?",
      "revId": "ef0072cb18e52a6c10b4733785d1d60da969e5d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "16c33b98_3cc67a0c",
        "filename": "src/libANGLE/renderer/vulkan/SyncVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 313,
      "author": {
        "id": 1382541
      },
      "writtenOn": "2020-06-05T02:53:25Z",
      "side": 1,
      "message": "Just to clarify: the queueSubmit() is to submit the fence explicitly so the latter sync wait could wait for the fence to be signaled. Take API sequence below:\n\nGLES sequence:\n\neglCreateSyncKHR(fence)\neglDupNativeFenceFDANDROID(fence)\n\u003csome draw call or clear\u003e\nglFlush()\neglClientWaitSyncKHR(fence)\n\nVulkan sequence:\n\nvkCreateFence(vfence)\nvkGetFenceFdKHR(vfence) // get new FD, meanwhile reset the fence\n\u003csubmissions for draw\u003e\nvkQueueSubmit()     // vfence was not ensured to be submitted into queue\nvkWaitForFences(vfence)\n\n\nSo the extra queueSubmit() is to ensure the \u0027vfence\u0027 after reset is in the queue so that the latter vkWaitForFences(vfence) could wait on.\n\n-----------------\nBackground:\nThe tests failed on Mali, and the failed reason is the fence after vkGetFenceFdKHR() was reset and the latter flush didn\u0027t queue the submission with \u0027vfence\u0027 explicitly, then we can not get the signaled fence in vkWaitForFences(vfence).",
      "parentUuid": "199b714d_84a96adc",
      "revId": "ef0072cb18e52a6c10b4733785d1d60da969e5d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f438430_ff1b4766",
        "filename": "src/libANGLE/renderer/vulkan/SyncVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 313,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-06-05T04:03:03Z",
      "side": 1,
      "message": "I have a question. Since this submission has no explicit dependency to other submissions (such as through a semaphore wait), won\u0027t the driver immediately signal the fence? Or some implicit dependency to the previous submissions ensure that the fence gets signaled until all the previous work is done?\n\nAlso, in your example \"vkQueueSubmit()     // vfence was not ensured to be submitted into queue\", what was the expected behavior? Was the fence supposed to be signaled after or before the draw calls?",
      "parentUuid": "16c33b98_3cc67a0c",
      "revId": "ef0072cb18e52a6c10b4733785d1d60da969e5d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "805d754f_7f2a0e4b",
        "filename": "src/libANGLE/renderer/vulkan/SyncVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 313,
      "author": {
        "id": 1382541
      },
      "writtenOn": "2020-06-05T06:03:29Z",
      "side": 1,
      "message": "The vfence get it\u0027s dependency at creation in initializeWithFd(), refer to line 174 part of create a new android native fence with no input FD, so here only submit empty job into queue.\n\nAnd the expected behavior could be:\nvkCreateFence(vfence)\nvkGetFenceFdKHR(vfence) // get new FD, meanwhile reset the fence\n\u003csubmissions for draw\u003e\nvkQueueSubmit(vfence)     // vfence was submitted into queue after the reset\nvkWaitForFences(vfence)\n\n\nPS: I was wondering that the vfence payload duplication issue was introduced by the current implementation not putting the native fence into the \"RendererVk::mFenceRecycler\", which would link fence with submit queue at flush. Instead, the native fence part used a independent way of job submission in vulkan backend, and the context flush would not explicitly link the vfence with submission queue.",
      "parentUuid": "0f438430_ff1b4766",
      "revId": "ef0072cb18e52a6c10b4733785d1d60da969e5d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5adc06eb_e2e4fd9a",
        "filename": "src/libANGLE/renderer/vulkan/SyncVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 313,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2020-06-08T21:49:47Z",
      "side": 1,
      "message": "Yes, the init causes a new native FD, and by spec, it is submitted, so there is some question why dup needs a submit also. If a native FD is provided to init, then the only use case is ServerWait, so no need to submit until then.\n\nThe Recycler feature resets a VkFence. And it seems we need VkExportFenceCreateInfo, as part of the VkFence creation.",
      "parentUuid": "805d754f_7f2a0e4b",
      "revId": "ef0072cb18e52a6c10b4733785d1d60da969e5d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8659bd8f_dbc8d114",
        "filename": "src/libANGLE/renderer/vulkan/SyncVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 313,
      "author": {
        "id": 1382541
      },
      "writtenOn": "2020-06-09T07:51:55Z",
      "side": 1,
      "message": "For the queueSubmit(), quote our vulkan expert:\n\"Exporting a sync_fd will reset the source , and hence waits become illegal as the (source) vkFence is not signalled nor pending. So you cannot call WaitForFences on it because the (vulkan object) fence is not in the right state for allowing the call any longer\"\n\nAs the Spec says, under SYNC_FD semantic, export a fence is \"as executing a fence reset operation\", and then waiting on a reset fence could be undefined since fence is reset.\n\n------\n\nFor the VkFence creation part, the VkExportFenceCreateInfo is already added in line 149. :)",
      "parentUuid": "5adc06eb_e2e4fd9a",
      "revId": "ef0072cb18e52a6c10b4733785d1d60da969e5d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}