{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "775fd141_b9ea5623",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2020-10-19T15:54:03Z",
      "side": 1,
      "message": "PTAL\n\nThe query API isn\u0027t strictly necessary for what I\u0027m trying to achieve here but the init state setting is.  If we feel like the query API is too much of a risk, I can remove it.",
      "revId": "3000f799e06f20c2fc61bd9285fb63aab1c19ebf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cbb9dbf8_bac995f1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-10-19T16:01:25Z",
      "side": 1,
      "message": "Nice stuff.",
      "revId": "3000f799e06f20c2fc61bd9285fb63aab1c19ebf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e3b0ab12_ce1e1f3c",
        "filename": "src/libANGLE/Renderbuffer.cpp",
        "patchSetId": 5
      },
      "lineNbr": 37,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-10-20T02:14:05Z",
      "side": 1,
      "message": "Does this remove the robust init of renderbuffers?!",
      "range": {
        "startLine": 37,
        "startChar": 28,
        "endLine": 37,
        "endChar": 39
      },
      "revId": "3000f799e06f20c2fc61bd9285fb63aab1c19ebf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b858b28f_f74a5ecc",
        "filename": "src/libANGLE/Renderbuffer.cpp",
        "patchSetId": 5
      },
      "lineNbr": 37,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2020-10-20T15:38:16Z",
      "side": 1,
      "message": "No, the state is set to MayNeedInit when the renderbuffer is allocated. see ref.",
      "parentUuid": "e3b0ab12_ce1e1f3c",
      "range": {
        "startLine": 37,
        "startChar": 28,
        "endLine": 37,
        "endChar": 39
      },
      "revId": "3000f799e06f20c2fc61bd9285fb63aab1c19ebf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1e0d6db6_e5d02aea",
        "filename": "src/libANGLE/Renderbuffer.cpp",
        "patchSetId": 5
      },
      "lineNbr": 84,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2020-10-20T15:38:16Z",
      "side": 1,
      "message": "ref",
      "revId": "3000f799e06f20c2fc61bd9285fb63aab1c19ebf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "59e3f650_704e6d0d",
        "filename": "src/libANGLE/Texture.cpp",
        "patchSetId": 5
      },
      "lineNbr": 609,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-10-19T16:01:25Z",
      "side": 1,
      "message": "nit: I\u0027d invert this and say allImagesInitialized \u003d true .. then false in the loop",
      "range": {
        "startLine": 609,
        "startChar": 13,
        "endLine": 609,
        "endChar": 36
      },
      "revId": "3000f799e06f20c2fc61bd9285fb63aab1c19ebf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8ba2f42e_4034af42",
        "filename": "src/libANGLE/Texture.cpp",
        "patchSetId": 5
      },
      "lineNbr": 609,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2020-10-20T15:38:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "59e3f650_704e6d0d",
      "range": {
        "startLine": 609,
        "startChar": 13,
        "endLine": 609,
        "endChar": 36
      },
      "revId": "3000f799e06f20c2fc61bd9285fb63aab1c19ebf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b577dc96_84e8297e",
        "filename": "src/libANGLE/Texture.cpp",
        "patchSetId": 5
      },
      "lineNbr": 610,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-10-20T02:14:05Z",
      "side": 1,
      "message": "Shouldn\u0027t this be done only for images in [base, max]? Then changing base/max would also update this.",
      "range": {
        "startLine": 610,
        "startChar": 37,
        "endLine": 610,
        "endChar": 48
      },
      "revId": "3000f799e06f20c2fc61bd9285fb63aab1c19ebf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9d38d037_a286eef3",
        "filename": "src/libANGLE/Texture.cpp",
        "patchSetId": 5
      },
      "lineNbr": 610,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2020-10-20T15:38:16Z",
      "side": 1,
      "message": "I tried this but dropped the idea because max level defaults to 1000 so it covers the entire texture anyways. If I changed it to calculate based on the full mip pyramid from baseLevel then it\u0027s still not fully accurate because the texture may not be used for mipmapping.\n\nI think this is probably the most useful query indicating that all defined images are initialized and provides a fast path for querying in the common case.",
      "parentUuid": "b577dc96_84e8297e",
      "range": {
        "startLine": 610,
        "startChar": 37,
        "endLine": 610,
        "endChar": 48
      },
      "revId": "3000f799e06f20c2fc61bd9285fb63aab1c19ebf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}