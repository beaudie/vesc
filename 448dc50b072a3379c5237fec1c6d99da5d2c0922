{
  "comments": [
    {
      "key": {
        "uuid": "979d8172_179b5ca0",
        "filename": "src/libANGLE/angletypes.h",
        "patchSetId": 3
      },
      "lineNbr": 308,
      "author": {
        "id": 1003154
      },
      "writtenOn": "2016-03-08T20:37:11Z",
      "side": 1,
      "message": "This is against coding style.  You can only use alias if it is intended to be used by client. Here you are not.",
      "range": {
        "startLine": 308,
        "startChar": 6,
        "endLine": 308,
        "endChar": 17
      },
      "revId": "448dc50b072a3379c5237fec1c6d99da5d2c0922",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "979d8172_1ad621c7",
        "filename": "src/libANGLE/angletypes.h",
        "patchSetId": 3
      },
      "lineNbr": 308,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-03-08T20:54:56Z",
      "side": 1,
      "message": "Can you elaborate? I checked the discussion link on the c++11 allowed features (https://groups.google.com/a/chromium.org/forum/#!topic/chromium-dev/8dOAMzgR4ao) but it\u0027s quite long and I didn\u0027t see the portion you are referencing.",
      "parentUuid": "979d8172_179b5ca0",
      "range": {
        "startLine": 308,
        "startChar": 6,
        "endLine": 308,
        "endChar": 17
      },
      "revId": "448dc50b072a3379c5237fec1c6d99da5d2c0922",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "979d8172_bac6f511",
        "filename": "src/libANGLE/angletypes.h",
        "patchSetId": 3
      },
      "lineNbr": 308,
      "author": {
        "id": 1003154
      },
      "writtenOn": "2016-03-08T20:56:25Z",
      "side": 1,
      "message": "https://google.github.io/styleguide/cppguide.html#Aliases",
      "parentUuid": "979d8172_1ad621c7",
      "range": {
        "startLine": 308,
        "startChar": 6,
        "endLine": 308,
        "endChar": 17
      },
      "revId": "448dc50b072a3379c5237fec1c6d99da5d2c0922",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "979d8172_3a3765df",
        "filename": "src/libANGLE/angletypes.h",
        "patchSetId": 3
      },
      "lineNbr": 308,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-03-08T21:02:01Z",
      "side": 1,
      "message": "Thanks, I think you\u0027re mistaken though, this is not a public API. No client code. See this line:\n\n\"However, local convenience aliases are fine in function definitions, private sections of classes, explicitly marked internal namespaces, and in .cc files:\"\n\nHere gl:: is an internal namespace.",
      "parentUuid": "979d8172_bac6f511",
      "range": {
        "startLine": 308,
        "startChar": 6,
        "endLine": 308,
        "endChar": 17
      },
      "revId": "448dc50b072a3379c5237fec1c6d99da5d2c0922",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "979d8172_fa16bd26",
        "filename": "src/libANGLE/angletypes.h",
        "patchSetId": 3
      },
      "lineNbr": 308,
      "author": {
        "id": 1003154
      },
      "writtenOn": "2016-03-08T21:06:30Z",
      "side": 1,
      "message": "What is explicitly marked internal namespaces? I don\u0027t see why gl:: fits that description.",
      "parentUuid": "979d8172_3a3765df",
      "range": {
        "startLine": 308,
        "startChar": 6,
        "endLine": 308,
        "endChar": 17
      },
      "revId": "448dc50b072a3379c5237fec1c6d99da5d2c0922",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "979d8172_fa487d2f",
        "filename": "src/libANGLE/angletypes.h",
        "patchSetId": 3
      },
      "lineNbr": 308,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-03-08T21:09:49Z",
      "side": 1,
      "message": "My interpretation is that if a namespace is public (EG something we expose via the ANGLE platform, ShaderLang header or GL apis) it\u0027s a client API and all other namespaces are internal. Here gl:: is only used internally in libANGLE.",
      "parentUuid": "979d8172_fa16bd26",
      "range": {
        "startLine": 308,
        "startChar": 6,
        "endLine": 308,
        "endChar": 17
      },
      "revId": "448dc50b072a3379c5237fec1c6d99da5d2c0922",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}