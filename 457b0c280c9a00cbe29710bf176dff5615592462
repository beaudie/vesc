{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "3edf5e0c_996f89d6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-10-28T20:41:40Z",
      "side": 1,
      "message": "Looks like Pixel4, Linux/Nvidia and Intel/windows need `|| exposeNonConformant` in a few conditions, need to figure out what they are missing to expose 3.2\n\nThe Linux/Nvidia bot issue at least would hopefully be resolved with the new devices (running linux-exp-test to verify). Trying win-exp-test to see if that fixes intel too or not. For Pixel4, we should really get a more recent QC based device for testing üòê",
      "revId": "457b0c280c9a00cbe29710bf176dff5615592462",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "27b569bc_328e975e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1525982
      },
      "writtenOn": "2024-10-28T23:36:58Z",
      "side": 1,
      "message": "Thanks! It looks like `linux-exp-test` has passed the tests. Also locally, I am unable to see errors on Linux/NVIDIA. Seems like the latest driver should no longer have this issue. As for the rest: (Using `kEnableLogMissingExtensionsForGLES32`)\n\n* Windows/Intel lacks `blendEquationAdvancedKHR`.\n* Pixel 4 lacks geometry/tessellation and `textureBorderClampEXT`.",
      "parentUuid": "3edf5e0c_996f89d6",
      "revId": "457b0c280c9a00cbe29710bf176dff5615592462",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7770831b_245a0758",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-10-29T02:24:08Z",
      "side": 1,
      "message": "Ok for windows/intel, I think the problem is input attachment usage missing from swapchain; you can add an `|| nonconformant` to this for `!isIntel` to work around it: https://source.chromium.org/chromium/chromium/src/+/main:third_party/angle/src/libANGLE/renderer/vulkan/vk_renderer.cpp\n\nFor Pixel 4: I think the right thing to do is actually treat it like SwiftShader. If it can\u0027t support ES3.2, then we shouldn\u0027t force it, just don\u0027t test ES3.2 on Pixel 4.\n\nAfter that, we can just wait for the Linux/Nvidia bot upgrade to finish before landing this change.",
      "parentUuid": "27b569bc_328e975e",
      "revId": "457b0c280c9a00cbe29710bf176dff5615592462",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ca43f1b5_7f4fe0c1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1525982
      },
      "writtenOn": "2024-10-30T01:03:22Z",
      "side": 1,
      "message": "I tried adding the `blendEquationAdvancedKHR` exception for Intel. However, it fails on the related end2end tests. (The non-conformant flag is also enabled for end2end tests?)\n\nWe could also skip ES 3.2 tests for Pixel 4. However, there are still the trace tests that fail.",
      "parentUuid": "7770831b_245a0758",
      "revId": "457b0c280c9a00cbe29710bf176dff5615592462",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "270bc82e_ed0e6567",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-10-30T01:37:11Z",
      "side": 1,
      "message": "\u003e However, it fails on the related end2end tests\n\nYes, and it should be skipped.\n\n\u003e We could also skip ES 3.2 tests for Pixel 4.\n\nYes, just like with SwiftShader. You can remove ES3.2 deqp testing from Pixel 4 on the bots (the relevant files are under `infra/`). For the traces, ES3.2 traces should also be skipped on Pixel4 like I imagine they already are for SwiftShader.",
      "parentUuid": "ca43f1b5_7f4fe0c1",
      "revId": "457b0c280c9a00cbe29710bf176dff5615592462",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "06ad9700_5529e124",
        "filename": "src/tests/deqp_support/deqp_khr_gles32_test_expectations.txt",
        "patchSetId": 7
      },
      "lineNbr": 13,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-10-28T20:41:40Z",
      "side": 1,
      "message": "The deqp expectations should be unnecessary because we don\u0027t run the corresponding executables on SwiftShader, right?",
      "revId": "457b0c280c9a00cbe29710bf176dff5615592462",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f3aa6d66_17cd6a75",
        "filename": "src/tests/deqp_support/deqp_khr_gles32_test_expectations.txt",
        "patchSetId": 7
      },
      "lineNbr": 13,
      "author": {
        "id": 1525982
      },
      "writtenOn": "2024-10-28T23:36:58Z",
      "side": 1,
      "message": "It looks like it. No failure seems to come from this suite. I think we can remove this.",
      "parentUuid": "06ad9700_5529e124",
      "revId": "457b0c280c9a00cbe29710bf176dff5615592462",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6f9d3994_020a4b23",
        "filename": "src/tests/deqp_support/deqp_khr_gles32_test_expectations.txt",
        "patchSetId": 7
      },
      "lineNbr": 13,
      "author": {
        "id": 1525982
      },
      "writtenOn": "2024-10-29T01:20:13Z",
      "side": 1,
      "message": "Removed.",
      "parentUuid": "f3aa6d66_17cd6a75",
      "revId": "457b0c280c9a00cbe29710bf176dff5615592462",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}