{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "3abdd2f9_b8364621",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1163549
      },
      "writtenOn": "2023-02-02T22:36:18Z",
      "side": 1,
      "message": "PTAL",
      "revId": "b66a561187e552ca400fb2be06643f03135bd493",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d75e0618_dff98c6f",
        "filename": "src/tests/restricted_traces/restricted_trace_gold_tests.py",
        "patchSetId": 1
      },
      "lineNbr": 232,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-02-03T03:07:27Z",
      "side": 1,
      "message": "I\u0027m worried this will end up letting huge diffs go through (as far as correctness goes, human eyes are irrelevant). Like a real bug was caught by this: https://angle-gold.skia.org/diff?grouping\u003dname%3Ddead_cells%26source_type%3Dangle\u0026left\u003d13034a2f512cd13a51628c62cfacf247\u0026right\u003d37b6fc489a4edaee10e11e75da655d7e\u0026changelist_id\u003d4031489\u0026crs\u003dgerrit (which has a diff of 100, but it might have as well got lucky with a diff of 5).\n\nAnother example is if for example we accidentally turn dithering off this would happily accept that.\n\nMy suggestion is instead to not base this on human perception, and try to reduce sensitivity to precision issues without giving it a chance to slip through a real change.\n\nHow about making the diff be 1 (instead of 10), and if possible make sure that the total number of different pixels is less than 10% the size of the image?",
      "range": {
        "startLine": 232,
        "startChar": 25,
        "endLine": 232,
        "endChar": 40
      },
      "revId": "b66a561187e552ca400fb2be06643f03135bd493",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a49f8c68_35ccea63",
        "filename": "src/tests/restricted_traces/restricted_trace_gold_tests.py",
        "patchSetId": 1
      },
      "lineNbr": 232,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2023-02-03T17:31:48Z",
      "side": 1,
      "message": "\u003e as far as correctness goes, human eyes are irrelevant  \n\nAre you sure? I thought that Vulkan has a lot of freedom in the implementation. How would you define correctness, if not by human eyes? Are restricted_trace_gold_tests capable of testing this definition of correctness?  \nhttps://angle-gold.skia.org/diff?grouping\u003dname%3Ddead_cells%26source_type%3Dangle\u0026left\u003d13034a2f512cd13a51628c62cfacf247\u0026right\u003d37b6fc489a4edaee10e11e75da655d7e\u0026changelist_id\u003d4031489\u0026crs\u003dgerrit looks significantly different to me and would still be caught by this algorithm. Do you have other examples, that a human wouldn\u0027t triage as positive?\n\n\u003e How about making the diff be 1 (instead of 10)  \n\nI\u0027m afraid this would still leave many images to humans to triage, i.e. wouldn\u0027t be really helpful. Brian, I remember there was a way to calibrate arguments to fuzzy matching. Is it something we can do here? I\u0027d like to get some information about how the history of each test would be triaged by the new algorithm and compare the algorithm to what I would do.  \n\n\u003e if possible make sure that the total number of different pixels is less than 10% the size of the image?  \n\nSeems reasonable, I think we can add this condition. Again, would be nice to check with the history of images.",
      "parentUuid": "d75e0618_dff98c6f",
      "range": {
        "startLine": 232,
        "startChar": 25,
        "endLine": 232,
        "endChar": 40
      },
      "revId": "b66a561187e552ca400fb2be06643f03135bd493",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e5745c2d_e7d3510d",
        "filename": "src/tests/restricted_traces/restricted_trace_gold_tests.py",
        "patchSetId": 1
      },
      "lineNbr": 232,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-02-03T18:27:56Z",
      "side": 1,
      "message": "\u003e How would you define correctness\n\nMaybe we have different goals here. I don\u0027t care how we compare an image from two different devices, yes they could be very different (though still not as big as 10 values, the spec still has _some_ guarantees!).\n\nWhat I want to avoid is a new image on the same device regressing after a CL without it being flagged. Normally you wouldn\u0027t expect a CL to really change the output (hence a diff of 1 value, which is a typical precision thing).\n\nMake sure to get @cnorthrop@google.com\u0027s output here too.",
      "parentUuid": "a49f8c68_35ccea63",
      "range": {
        "startLine": 232,
        "startChar": 25,
        "endLine": 232,
        "endChar": 40
      },
      "revId": "b66a561187e552ca400fb2be06643f03135bd493",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "328e7464_8d614186",
        "filename": "src/tests/restricted_traces/restricted_trace_gold_tests.py",
        "patchSetId": 1
      },
      "lineNbr": 232,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2023-02-03T18:34:05Z",
      "side": 1,
      "message": "I think we have similar goals. Mine is to save time for humans triaging Goldens, while producing a similar results to what a human would. That\u0027s the rationale behind \"replicate how a human sees differences\". While I agree, that if it\u0027s possible for the algorithm to produce better results than a human would, we should try to.\nHopefully, having less Goldens to triage would also lead to humans paying more attention to the ones they do need to triage, helping to catch more regressions.",
      "parentUuid": "e5745c2d_e7d3510d",
      "range": {
        "startLine": 232,
        "startChar": 25,
        "endLine": 232,
        "endChar": 40
      },
      "revId": "b66a561187e552ca400fb2be06643f03135bd493",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}