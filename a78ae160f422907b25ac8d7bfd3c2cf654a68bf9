{
  "comments": [
    {
      "key": {
        "uuid": "ee33a85b_86c08b1d",
        "filename": "src/compiler/translator/VariablePacker.h",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2017-08-11T10:02:13Z",
      "side": 1,
      "message": "Would be nicer to not to have to template this function, but since the ShaderLang API is passing vectors of objects rather than vectors of pointers I couldn\u0027t come up with a better solution. Do you think this is okay as it is?",
      "revId": "a78ae160f422907b25ac8d7bfd3c2cf654a68bf9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ac60300_c93e077e",
        "filename": "src/compiler/translator/VariablePacker.h",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2017-08-11T15:54:03Z",
      "side": 1,
      "message": "Approach looks ok, since the template almost immediately defers to a non-template function. However it seems that the code could be simplified more:\n\n - GetNumComponentsPerRow and GetNumRows can go in utils.h/cpp\n - The only remaining entry point for this file is checkVariablesWithinPackingLimits so we can do the same transform as we\u0027ve done for other passes where we hide the implementation details in the .cpp file.\n - T is only used as Uniform or ShaderVariable so we can either have declaration of the template in the header and instantiations in the .cpp file, or overloaded function for each case (and a tiny tiny bit of code duplication)",
      "parentUuid": "ee33a85b_86c08b1d",
      "revId": "a78ae160f422907b25ac8d7bfd3c2cf654a68bf9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ddb9d5bf_c2895696",
        "filename": "src/compiler/translator/VariablePacker.h",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2017-08-11T19:09:06Z",
      "side": 1,
      "message": "I\u0027m not a big fan of having GetNumComponentsPerRow and GetNumRows disassociated from VariablePacker. That\u0027s confusing since there\u0027s already TType::getRows() that returns matrix rows. And there\u0027s also std140 packing and GLSL ES 1.00 appendix A packing, so even another name like \"GetNumRowsWhenPacked\" isn\u0027t necessarily unambiguous either. If it wasn\u0027t for needing these in tests I\u0027d prefer to just have them in an anonymous namespace in VariablePacker.cpp. But I think for now we can leave them be.\n\nI\u0027ll change this patch to have the template instantiation next week.",
      "parentUuid": "3ac60300_c93e077e",
      "revId": "a78ae160f422907b25ac8d7bfd3c2cf654a68bf9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5b93ab5c_477531b1",
        "filename": "src/compiler/translator/VariablePacker.h",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2017-08-14T13:19:14Z",
      "side": 1,
      "message": "Not moving GetNum* sounds good. However I\u0027m still concerned that this class is always used in the following way:\n\n    VariablePacker packer;\n    packer.checkVariablesWithinPackingLimits(...);\n\nThe class is an implementation detail, and could be hidden inside the .cpp file like we\u0027ve been doing for all AST transforms. This header would then just have the template declaration and the two GetNum* functions.",
      "parentUuid": "ddb9d5bf_c2895696",
      "revId": "a78ae160f422907b25ac8d7bfd3c2cf654a68bf9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3fafc6b3_93af6b50",
        "filename": "src/compiler/translator/VariablePacker.h",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2017-08-14T15:43:49Z",
      "side": 1,
      "message": "Done. This .h file surely is nicer to look at this way.",
      "parentUuid": "5b93ab5c_477531b1",
      "revId": "a78ae160f422907b25ac8d7bfd3c2cf654a68bf9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc609ea2_d002515c",
        "filename": "src/compiler/translator/VariablePacker.h",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2017-08-14T15:44:34Z",
      "side": 1,
      "message": "Thanks!",
      "parentUuid": "3fafc6b3_93af6b50",
      "revId": "a78ae160f422907b25ac8d7bfd3c2cf654a68bf9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}