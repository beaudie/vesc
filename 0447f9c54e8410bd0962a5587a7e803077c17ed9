{
  "comments": [
    {
      "key": {
        "uuid": "639d33d8_6abf57ad",
        "filename": "src/libANGLE/BinaryStream.h",
        "patchSetId": 11
      },
      "lineNbr": 190,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-01-31T04:56:03Z",
      "side": 1,
      "message": "Supports writing binary data, which is the SPIR-V blob. The uint32_t values in the SPIR-V blob don\u0027t necessarily fit in `int` (was hit by webgl tests)",
      "revId": "0447f9c54e8410bd0962a5587a7e803077c17ed9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "043e06e4_9652ed17",
        "filename": "src/libANGLE/VaryingPacking.cpp",
        "patchSetId": 11
      },
      "lineNbr": 322,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-01-31T04:56:03Z",
      "side": 1,
      "message": "Stolen from Tim\u0027s WIP patch to fix varying linking of separable programs.",
      "range": {
        "startLine": 322,
        "startChar": 59,
        "endLine": 322,
        "endChar": 77
      },
      "revId": "0447f9c54e8410bd0962a5587a7e803077c17ed9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c28a622_933c9c69",
        "filename": "src/tests/deqp_support/deqp_gles31_test_expectations.txt",
        "patchSetId": 11
      },
      "lineNbr": 178,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-01-31T04:56:03Z",
      "side": 1,
      "message": "This should fix it: https://chromium-review.googlesource.com/c/angle/angle/+/2030026",
      "revId": "0447f9c54e8410bd0962a5587a7e803077c17ed9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7ca6c022_30c1b757",
        "filename": "src/tests/deqp_support/deqp_gles31_test_expectations.txt",
        "patchSetId": 11
      },
      "lineNbr": 206,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-01-31T04:56:03Z",
      "side": 1,
      "message": "Need to take the function rewriting code out of sampler rewrite and apply it to array of array of images too.\n\nMight make sense to split sampler rewrite in two:\n\n- One transformation that takes samplers out of structs, generating array of array of samplers\n- One transformation that flattens array of array of samplers and images in one go.",
      "revId": "0447f9c54e8410bd0962a5587a7e803077c17ed9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c16573bf_4fe2c9ef",
        "filename": "src/tests/deqp_support/deqp_gles31_test_expectations.txt",
        "patchSetId": 11
      },
      "lineNbr": 209,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-01-31T04:56:03Z",
      "side": 1,
      "message": "Should be fixed by this: https://swiftshader-review.googlesource.com/c/SwiftShader/+/40668\n\n(which hopefully will pass the tests soon)",
      "revId": "0447f9c54e8410bd0962a5587a7e803077c17ed9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8a690b48_daa975fa",
        "filename": "src/tests/deqp_support/deqp_khr_gles31_test_expectations.txt",
        "patchSetId": 11
      },
      "lineNbr": 77,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-01-31T04:56:03Z",
      "side": 1,
      "message": "Again, should be fixed by https://swiftshader-review.googlesource.com/c/SwiftShader/+/40668",
      "revId": "0447f9c54e8410bd0962a5587a7e803077c17ed9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}