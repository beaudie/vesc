{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "69c25f47_7b55e648",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2021-09-01T21:23:46Z",
      "side": 1,
      "message": "Amazing work Gregg! lgtm\n\nLet\u0027s discuss turning on more tests in a follow-up; maybe we\u0027re close to being able to switch from the SPIR-V Metal backend to the direct-to-Metal backend by default.\n\n+Kyle and Kimmo for visibility.\n",
      "revId": "bc661bdbbecef11bd188726e76d89d7401c8211d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4587a359_6bffeb77",
        "filename": "src/compiler/translator/tree_ops/ConvertUnsupportedConstructorsToFunctionCalls.cpp",
        "patchSetId": 2
      },
      "lineNbr": 139,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2021-09-01T21:23:46Z",
      "side": 1,
      "message": "Is there any chance of a precision mismatch if the variable being defined is mediump/lowp? Only curious.",
      "revId": "bc661bdbbecef11bd188726e76d89d7401c8211d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7272a3d1_2bb0b62c",
        "filename": "src/compiler/translator/tree_ops/ConvertUnsupportedConstructorsToFunctionCalls.cpp",
        "patchSetId": 2
      },
      "lineNbr": 139,
      "author": {
        "id": 1115588
      },
      "writtenOn": "2021-09-01T22:54:39Z",
      "side": 1,
      "message": "I have no idea ðŸ˜…  I changed it to EbpUndefined on the voodoo that that makes it take on whatever it needs. My fiction is it doesn\u0027t matter as it\u0027s just outputting 0.0f inside a constructor and if the object being constructed is a lowp it will be lowp even if passed highp",
      "parentUuid": "4587a359_6bffeb77",
      "revId": "bc661bdbbecef11bd188726e76d89d7401c8211d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6a95f8a7_7d2636f6",
        "filename": "src/compiler/translator/tree_ops/ConvertUnsupportedConstructorsToFunctionCalls.cpp",
        "patchSetId": 2
      },
      "lineNbr": 139,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-09-02T00:48:59Z",
      "side": 1,
      "message": "It does matter, and I\u0027m glad you changed it to undefined. Precision gets propagated through the AST, and we have transformations that decide to do things based on precision. This transformation is done after all those, so it didn\u0027t matter in practice, but it could technically.",
      "parentUuid": "7272a3d1_2bb0b62c",
      "revId": "bc661bdbbecef11bd188726e76d89d7401c8211d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}