{
  "comments": [
    {
      "key": {
        "uuid": "d2a03365_9343d954",
        "filename": "src/libANGLE/Texture.cpp",
        "patchSetId": 5
      },
      "lineNbr": 967,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-06-27T14:40:42Z",
      "side": 1,
      "message": "Should this be in setSubImage too?  The spec is a bit vague about what triggers the mipmap generation: \"making any change to the texels of the zero level array of a mipmap will also compute a complete set of mipmap arrays\".  I assume this covers glTexSubImage and glCopy[Sub]Image but I don\u0027t know about rendering to mip 0, that could be costly to track.",
      "range": {
        "startLine": 964,
        "startChar": 0,
        "endLine": 967,
        "endChar": 5
      },
      "revId": "4af0ed9f4de81af1f60f0b8860972af7d418f00b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5f43991f_4590ab03",
        "filename": "src/libANGLE/Texture.cpp",
        "patchSetId": 5
      },
      "lineNbr": 967,
      "author": {
        "id": 1175714
      },
      "writtenOn": "2018-06-27T17:18:09Z",
      "side": 1,
      "message": "Good catch, yes it should be tripped by setting the sub image as well.\n\nAdded those for sub image, copy image, and compressed as well.\n\nIf we are rendering to the texture, I guess if we strictly interpret that spec we can check for a framebuffer attachment that is getting written to for each draw, but it\u0027s not clear whether it applies since FBOs are an extension to OpenGL ES 1 (GL_OES_framebuffer_object) and there\u0027s nothing in there about how mipmap hints interact with them (but glGenerateMipmapOES is offered).\n\nI\u0027m going to assume that since there hasn\u0027t been a conformance test or app (that I know of) that exercises this concept yet, let\u0027s go with the IMO simpler option of not auto calling glGenerateMipmap every draw call when a texture with the hint is bound.",
      "parentUuid": "d2a03365_9343d954",
      "range": {
        "startLine": 964,
        "startChar": 0,
        "endLine": 967,
        "endChar": 5
      },
      "revId": "4af0ed9f4de81af1f60f0b8860972af7d418f00b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "57679bf7_941873ad",
        "filename": "src/libANGLE/Texture.cpp",
        "patchSetId": 5
      },
      "lineNbr": 967,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-06-27T17:20:33Z",
      "side": 1,
      "message": "Sounds good.  The spec does say that compressed textures will not automatically generate mips though.",
      "parentUuid": "5f43991f_4590ab03",
      "range": {
        "startLine": 964,
        "startChar": 0,
        "endLine": 967,
        "endChar": 5
      },
      "revId": "4af0ed9f4de81af1f60f0b8860972af7d418f00b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3265d414_61f8abc4",
        "filename": "src/libANGLE/queryconversions.cpp",
        "patchSetId": 5
      },
      "lineNbr": 91,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-06-27T13:37:36Z",
      "side": 1,
      "message": "why not use GLint?",
      "range": {
        "startLine": 91,
        "startChar": 50,
        "endLine": 91,
        "endChar": 53
      },
      "revId": "4af0ed9f4de81af1f60f0b8860972af7d418f00b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d859ea2f_497d2abb",
        "filename": "src/libANGLE/queryconversions.cpp",
        "patchSetId": 5
      },
      "lineNbr": 91,
      "author": {
        "id": 1175714
      },
      "writtenOn": "2018-06-27T17:18:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3265d414_61f8abc4",
      "range": {
        "startLine": 91,
        "startChar": 50,
        "endLine": 91,
        "endChar": 53
      },
      "revId": "4af0ed9f4de81af1f60f0b8860972af7d418f00b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "00598df1_c1795aad",
        "filename": "src/libANGLE/validationES2.cpp",
        "patchSetId": 5
      },
      "lineNbr": 6277,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-06-27T13:37:36Z",
      "side": 1,
      "message": "what does passing 1 instead of -1 bufSize do?",
      "range": {
        "startLine": 6277,
        "startChar": 11,
        "endLine": 6277,
        "endChar": 35
      },
      "revId": "4af0ed9f4de81af1f60f0b8860972af7d418f00b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2b8e9c4a_0f156fe1",
        "filename": "src/libANGLE/validationES2.cpp",
        "patchSetId": 5
      },
      "lineNbr": 6277,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-06-27T14:37:06Z",
      "side": 1,
      "message": "Skips the validation of bufSize.",
      "parentUuid": "00598df1_c1795aad",
      "range": {
        "startLine": 6277,
        "startChar": 11,
        "endLine": 6277,
        "endChar": 35
      },
      "revId": "4af0ed9f4de81af1f60f0b8860972af7d418f00b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}