{
  "comments": [
    {
      "key": {
        "uuid": "17b1c7da_88c48699",
        "filename": "scripts/gen_vk_gl_cts_build.py",
        "patchSetId": 15
      },
      "lineNbr": 5,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-11-12T03:52:47Z",
      "side": 1,
      "message": "nit: can you include a file level comment, and disclaimer not to run the script directly but to run \"run_code_generation.py\" ? see other autogen scripts.",
      "revId": "5e59ddb6359cc02b28135c8a3017bd53ed65cd94",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d5c9ab16_12f7b039",
        "filename": "scripts/gen_vk_gl_cts_build.py",
        "patchSetId": 15
      },
      "lineNbr": 101,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-11-12T03:52:47Z",
      "side": 1,
      "message": "nit: can you use a comprehension on a list with just the directory names to make this a bit more compact?\n\ne.g.\n\ncmakeDirs \u003d [ \"execserver\", \"executor\", \"external/amber\", ...]\n\ninputs \u003d [ os.path.join(deqpDir, \"%s/CmakeLists.txt\" % dir) for dir in cmakeDirs ]",
      "range": {
        "startLine": 101,
        "startChar": 12,
        "endLine": 101,
        "endChar": 75
      },
      "revId": "5e59ddb6359cc02b28135c8a3017bd53ed65cd94",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c82a1ee9_56e20844",
        "filename": "scripts/gen_vk_gl_cts_build.py",
        "patchSetId": 15
      },
      "lineNbr": 337,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-11-12T03:52:47Z",
      "side": 1,
      "message": "nit: maybe make this replacement a small helper?",
      "range": {
        "startLine": 337,
        "startChar": 80,
        "endLine": 337,
        "endChar": 97
      },
      "revId": "5e59ddb6359cc02b28135c8a3017bd53ed65cd94",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ed3e35ed_a6ef9213",
        "filename": "src/tests/deqp_data_autogen.gni",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-11-12T03:52:47Z",
      "side": 1,
      "message": "nit: place in deqp_support?",
      "revId": "5e59ddb6359cc02b28135c8a3017bd53ed65cd94",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "af8f01fe_c277c3fd",
        "filename": "src/tests/deqp_data_autogen.gni",
        "patchSetId": 15
      },
      "lineNbr": 6,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-11-12T03:52:47Z",
      "side": 1,
      "message": "minor request but can you make this consistent with our other autogenerated files? the first line in the autogen files are:\n\n# GENERATED FILE - DO NOT EDIT.\n# Generated by \u003cdata_source_name\u003e\n#\n# Copyright 2019 ....",
      "range": {
        "startLine": 4,
        "startChar": 0,
        "endLine": 6,
        "endChar": 38
      },
      "revId": "5e59ddb6359cc02b28135c8a3017bd53ed65cd94",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a6b9758f_2c274758",
        "filename": "src/tests/deqp_support/BUILD.gn",
        "patchSetId": 15
      },
      "lineNbr": 6,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-11-12T03:52:47Z",
      "side": 1,
      "message": "same request",
      "range": {
        "startLine": 5,
        "startChar": 0,
        "endLine": 6,
        "endChar": 38
      },
      "revId": "5e59ddb6359cc02b28135c8a3017bd53ed65cd94",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}