{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "d127f4f6_8e814931",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2024-10-04T19:29:09Z",
      "side": 1,
      "message": "LGTM with a couple of optimizations and fixups",
      "revId": "3beafa3556c8fc3adc87e34070a8f177238a9024",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6aea6baa_0ded7937",
        "filename": "src/libANGLE/renderer/wgpu/ContextWgpu.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1056,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2024-10-04T19:29:09Z",
      "side": 1,
      "message": "The default value for WebGPU\u0027s blend constant is [0, 0, 0, 0] which matches OpenGL. \n\nIdeally we don\u0027t add a setBlendConstant command to every webgpu command buffer to set the default state so can you track this in the same way viewport and scissor are tracked? A bool in CommandBuffer to know if it\u0027s been set before and a check to see if the new value is the default (see handleDirtyScissor).",
      "range": {
        "startLine": 1056,
        "startChar": 20,
        "endLine": 1056,
        "endChar": 76
      },
      "revId": "3beafa3556c8fc3adc87e34070a8f177238a9024",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e8c8adcc_f09edae5",
        "filename": "src/libANGLE/renderer/wgpu/ContextWgpu.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1241,
      "author": {
        "id": 1297347
      },
      "writtenOn": "2024-10-02T21:29:06Z",
      "side": 1,
      "message": "nit: maybe gl::State::DirtyBits::Iterator to make it obvious which bit this is?",
      "range": {
        "startLine": 1241,
        "startChar": 51,
        "endLine": 1241,
        "endChar": 57
      },
      "revId": "3beafa3556c8fc3adc87e34070a8f177238a9024",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "52464b7b_1d22f24a",
        "filename": "src/libANGLE/renderer/wgpu/ContextWgpu.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1272,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2024-10-04T19:29:09Z",
      "side": 1,
      "message": "UNREACHABLE to avoid calling this for unexpected dirty bits.",
      "range": {
        "startLine": 1272,
        "startChar": 16,
        "endLine": 1272,
        "endChar": 22
      },
      "revId": "3beafa3556c8fc3adc87e34070a8f177238a9024",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aea714d5_72476c9c",
        "filename": "src/libANGLE/renderer/wgpu/wgpu_command_buffer.h",
        "patchSetId": 2
      },
      "lineNbr": 240,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2024-10-04T19:29:09Z",
      "side": 1,
      "message": "nit: const ref",
      "range": {
        "startLine": 240,
        "startChar": 26,
        "endLine": 240,
        "endChar": 36
      },
      "fixSuggestions": [
        {
          "fixId": "96495c40_96cec66a",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "src/libANGLE/renderer/wgpu/wgpu_command_buffer.h",
              "range": {
                "startLine": 240,
                "startChar": 0,
                "endLine": 241,
                "endChar": 0
              },
              "replacement": "    void setBlendConstant(const gl::ColorF \u0026glColor);\n"
            }
          ]
        }
      ],
      "revId": "3beafa3556c8fc3adc87e34070a8f177238a9024",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "22cb1e27_2eb22e80",
        "filename": "src/libANGLE/renderer/wgpu/wgpu_pipeline_state.cpp",
        "patchSetId": 2
      },
      "lineNbr": 115,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2024-10-04T19:29:09Z",
      "side": 1,
      "message": "nit: these would fit better in wgpu_util.h\u0027s `gl_wgpu` namespace.",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 115,
        "endChar": 1
      },
      "revId": "3beafa3556c8fc3adc87e34070a8f177238a9024",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}