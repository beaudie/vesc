{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "22404ee1_a4120e73",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2020-11-30T16:44:05Z",
      "side": 1,
      "message": "FYI - shabi i will be uploading a change adding support for EXT_clip_cull_distance shortly. will this change have any impact on the extension support i am about to add?",
      "revId": "597c1cbbdad251516c76ec13d498dfe3fc9f6738",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3d4f7650_9b504c30",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-11-30T16:59:46Z",
      "side": 1,
      "message": "It shouldn\u0027t as long as the front-end sees those new builtins in the list of shader outputs and they are marked active. See VaryingPacking::collectAndPackUserVaryings:\n\n    // Keep track of output builtins that are used by the shader, such as gl_Position,\n    // gl_PointSize etc.\n    if (isActiveBuiltInInput)\n    {\n        mActiveOutputBuiltIns[ref.frontShaderStage].push_back(input-\u003ename);\n    }\n\nYou can try your change on top of this, and if gl_ClipDistance and gl_CullDistance don\u0027t make it inside the if, your implementation is missing something (probably in the translator\u0027s CollectVariables).",
      "parentUuid": "22404ee1_a4120e73",
      "revId": "597c1cbbdad251516c76ec13d498dfe3fc9f6738",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "11b19d0b_c4373e63",
        "filename": "src/libANGLE/renderer/glslang_wrapper_utils.cpp",
        "patchSetId": 5
      },
      "lineNbr": 647,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-11-30T18:45:07Z",
      "side": 1,
      "message": "Why only active output built-ins?",
      "range": {
        "startLine": 646,
        "startChar": 0,
        "endLine": 647,
        "endChar": 82
      },
      "revId": "597c1cbbdad251516c76ec13d498dfe3fc9f6738",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7fd602a2_3e151e4e",
        "filename": "src/libANGLE/renderer/glslang_wrapper_utils.cpp",
        "patchSetId": 5
      },
      "lineNbr": 1461,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-11-30T18:45:07Z",
      "side": 1,
      "message": "Probably worth moving these into a private PerVertex struct, similar to TransformedIDs.",
      "range": {
        "startLine": 1453,
        "startChar": 0,
        "endLine": 1461,
        "endChar": 44
      },
      "revId": "597c1cbbdad251516c76ec13d498dfe3fc9f6738",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "43a77e66_90b317dc",
        "filename": "src/libANGLE/renderer/glslang_wrapper_utils.cpp",
        "patchSetId": 5
      },
      "lineNbr": 1746,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-11-30T18:45:07Z",
      "side": 1,
      "message": "Since the rest of this function is specific to handling \u0027gl_PerVertex\u0027, I think it would be helpful to move the code into a helper function that indicates this.   Something like:\n\n    if (strcmp(mNamesById[id], \"gl_PerVertex\") \u003d\u003d 0)\n    {\n        visitGlPerVertex();\n    }\n\nYou probably want a better name, but that would make adding new handlers here cleaner and keep visitMemberName() more generic.",
      "range": {
        "startLine": 1743,
        "startChar": 0,
        "endLine": 1746,
        "endChar": 5
      },
      "revId": "597c1cbbdad251516c76ec13d498dfe3fc9f6738",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "87fd1106_561fb7ff",
        "filename": "src/libANGLE/renderer/glslang_wrapper_utils.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2295,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-11-30T18:45:07Z",
      "side": 1,
      "message": "What\u0027s the \"+1\" for?",
      "range": {
        "startLine": 2295,
        "startChar": 75,
        "endLine": 2295,
        "endChar": 78
      },
      "revId": "597c1cbbdad251516c76ec13d498dfe3fc9f6738",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}