{
  "comments": [
    {
      "key": {
        "uuid": "dc9bc331_87968927",
        "filename": "src/compiler/translator/Compiler.cpp",
        "patchSetId": 14
      },
      "lineNbr": 508,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2016-10-17T16:36:00Z",
      "side": 1,
      "message": "Could be worth having TPublicType::initializeBasicType() that does all of what\u0027s below to avoid missing setting memoryQualifier.",
      "revId": "5831995ec0f081278145d557c3bdb1e5e55e61e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dc9bc331_c48b2f38",
        "filename": "src/tests/compiler_tests/MalformedShader_test.cpp",
        "patchSetId": 14
      },
      "lineNbr": 2838,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2016-10-17T15:58:58Z",
      "side": 1,
      "message": "I don\u0027t think that the spec actually forbids images in structs. The test should be changed to the opposite - it should include a \"uniform myStruct S;\" as well.\n\nYou could of course add another test for that a shader can\u0027t declare an instance of a struct that contains an image with other qualifiers than \"uniform\".",
      "revId": "5831995ec0f081278145d557c3bdb1e5e55e61e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dc9bc331_872a09ae",
        "filename": "src/tests/compiler_tests/MalformedShader_test.cpp",
        "patchSetId": 14
      },
      "lineNbr": 2838,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2016-10-17T16:36:00Z",
      "side": 1,
      "message": "The spec forbids it, see page 32 of https://www.khronos.org/registry/gles/specs/3.1/GLSL_ES_Specification_3.10.withchanges.pdf",
      "parentUuid": "dc9bc331_c48b2f38",
      "revId": "5831995ec0f081278145d557c3bdb1e5e55e61e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dc9bc331_a772a5c5",
        "filename": "src/tests/compiler_tests/MalformedShader_test.cpp",
        "patchSetId": 14
      },
      "lineNbr": 2838,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2016-10-17T16:42:37Z",
      "side": 1,
      "message": "Aha, I was still looking at revision 3. In that case just remove \"uniform\" from the test, make sure that the test fails, and add a reference to the spec in a comment.",
      "parentUuid": "dc9bc331_872a09ae",
      "revId": "5831995ec0f081278145d557c3bdb1e5e55e61e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dc9bc331_243d3384",
        "filename": "src/tests/compiler_tests/MalformedShader_test.cpp",
        "patchSetId": 14
      },
      "lineNbr": 2845,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2016-10-17T15:58:58Z",
      "side": 1,
      "message": "This incorrect qualifier is what\u0027s making the shader fail, not the fact that there\u0027s an image in the struct.",
      "range": {
        "startLine": 2845,
        "startChar": 40,
        "endLine": 2845,
        "endChar": 47
      },
      "revId": "5831995ec0f081278145d557c3bdb1e5e55e61e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dc9bc331_6729fdb6",
        "filename": "src/tests/compiler_tests/MalformedShader_test.cpp",
        "patchSetId": 14
      },
      "lineNbr": 2845,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2016-10-17T16:36:00Z",
      "side": 1,
      "message": "+1 on removing the qualifier, the test should still fail.",
      "parentUuid": "dc9bc331_243d3384",
      "revId": "5831995ec0f081278145d557c3bdb1e5e55e61e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dc9bc331_e4366ba5",
        "filename": "src/tests/compiler_tests/MalformedShader_test.cpp",
        "patchSetId": 14
      },
      "lineNbr": 2855,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2016-10-17T15:58:58Z",
      "side": 1,
      "message": "This test could use a reference to the spec.",
      "revId": "5831995ec0f081278145d557c3bdb1e5e55e61e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dc9bc331_8711a979",
        "filename": "src/tests/compiler_tests/MalformedShader_test.cpp",
        "patchSetId": 14
      },
      "lineNbr": 2894,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2016-10-17T16:36:00Z",
      "side": 1,
      "message": "The test should be passing if the invariant or the readonly qualifiers were removed which doesn\u0027t seem to be the case here.",
      "revId": "5831995ec0f081278145d557c3bdb1e5e55e61e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dc9bc331_04fd97c4",
        "filename": "src/tests/test_utils/compiler_test.cpp",
        "patchSetId": 14
      },
      "lineNbr": 45,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2016-10-17T15:58:58Z",
      "side": 1,
      "message": "FunctionCallFinder.",
      "revId": "5831995ec0f081278145d557c3bdb1e5e55e61e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dc9bc331_24fa13cd",
        "filename": "src/tests/test_utils/compiler_test.cpp",
        "patchSetId": 14
      },
      "lineNbr": 55,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2016-10-17T15:58:58Z",
      "side": 1,
      "message": "Check for mOp \u003d\u003d EOpFunctionCall.",
      "revId": "5831995ec0f081278145d557c3bdb1e5e55e61e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dc9bc331_c406cff8",
        "filename": "src/tests/test_utils/compiler_test.h",
        "patchSetId": 14
      },
      "lineNbr": 96,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2016-10-17T15:58:58Z",
      "side": 1,
      "message": "Change the name to FindFunctionCallNode, as it is specifically used to find function calls, not function definitions for example. Add a comment that functionName is the mangled function name.",
      "revId": "5831995ec0f081278145d557c3bdb1e5e55e61e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}