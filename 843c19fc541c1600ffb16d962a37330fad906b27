{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "04d13bda_d7121bf1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-08-02T20:18:41Z",
      "side": 1,
      "message": "Not even sure if I\u0027ll be able to land this, given how gold works.",
      "revId": "843c19fc541c1600ffb16d962a37330fad906b27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ea84da83_4e01c436",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-08-03T13:34:05Z",
      "side": 1,
      "message": "Brian: how do you recommend I land this? Just force submit it, then accept goldens/tweak inexact parameters after it lands?",
      "revId": "843c19fc541c1600ffb16d962a37330fad906b27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d1dea8b7_24009f61",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1163549
      },
      "writtenOn": "2022-08-03T16:21:36Z",
      "side": 1,
      "message": "That\u0027s probably the simplest solution. The Chromium tests have the option of setting a grace period that automatically expires, within which failures are ignored, specifically to address cases like this. They\u0027re added to the test definitions like this https://source.chromium.org/chromium/chromium/src/+/main:content/test/gpu/gpu_tests/pixel_test_pages.py;l\u003d515 and used here https://source.chromium.org/chromium/chromium/src/+/main:content/test/gpu/gpu_tests/skia_gold_integration_test_base.py;l\u003d345 and here https://source.chromium.org/chromium/chromium/src/+/main:content/test/gpu/gpu_tests/skia_gold_integration_test_base.py;l\u003d450\n\nAdding something like that for ANGLE is the better solution, but if you need to get this in ASAP, forcing it in will work as long as you follow up quickly.",
      "parentUuid": "ea84da83_4e01c436",
      "revId": "843c19fc541c1600ffb16d962a37330fad906b27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "206bcec2_ed060796",
        "filename": "src/tests/restricted_traces/restricted_trace_gold_tests.py",
        "patchSetId": 4
      },
      "lineNbr": 325,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2022-08-02T20:00:20Z",
      "side": 1,
      "message": "This approach could be built upon to narrow the skips to include trace name.  I think allowing fuzzy results on a case by case basis is the safest way to go.  Would you be okay gating this even further?  I could do it as a follow up if you\u0027d like to be done with this CL for now.",
      "range": {
        "startLine": 325,
        "startChar": 0,
        "endLine": 325,
        "endChar": 77
      },
      "revId": "843c19fc541c1600ffb16d962a37330fad906b27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "af6b301d_5ff4fca0",
        "filename": "src/tests/restricted_traces/restricted_trace_gold_tests.py",
        "patchSetId": 4
      },
      "lineNbr": 325,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-08-02T20:07:51Z",
      "side": 1,
      "message": "My intuitive thinking is that it\u0027s not worth spending our time on, as it wouldn\u0027t provide much safety. We don\u0027t really need to maintain NV and Intel at all, let alone for small pixel differences. That being said I\u0027m happy if you are happy to unblock this CL.\n\nLonger term it would be nice to move to an expectations format like we do for the other tests.",
      "parentUuid": "206bcec2_ed060796",
      "range": {
        "startLine": 325,
        "startChar": 0,
        "endLine": 325,
        "endChar": 77
      },
      "revId": "843c19fc541c1600ffb16d962a37330fad906b27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6e59c539_756f3e5b",
        "filename": "src/tests/restricted_traces/restricted_trace_gold_tests.py",
        "patchSetId": 4
      },
      "lineNbr": 325,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2022-08-02T20:11:28Z",
      "side": 1,
      "message": "It is worth the time, people rely on ANGLE\u0027s CI to provide the highest quality driver we can.  But I can do it as a follow up, this is no problem.  Thank you for exploring ways to skip it in a more isolated fashion.",
      "parentUuid": "af6b301d_5ff4fca0",
      "range": {
        "startLine": 325,
        "startChar": 0,
        "endLine": 325,
        "endChar": 77
      },
      "revId": "843c19fc541c1600ffb16d962a37330fad906b27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "78e2b523_a967c822",
        "filename": "src/tests/restricted_traces/restricted_trace_gold_tests.py",
        "patchSetId": 4
      },
      "lineNbr": 325,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-11-30T17:00:59Z",
      "side": 1,
      "message": "It does seem to affect by and large a few traces on Intel. Maybe a certain type of GL call pattern causes this. Without digging into it further, it seems advantageous to apply the inexact matching to Intel only, as long as we have exact matching on other platforms I\u0027m certainly open to future work to make this more maintainable, or more strict.",
      "parentUuid": "6e59c539_756f3e5b",
      "range": {
        "startLine": 325,
        "startChar": 0,
        "endLine": 325,
        "endChar": 77
      },
      "revId": "843c19fc541c1600ffb16d962a37330fad906b27",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}