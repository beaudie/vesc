{
  "comments": [
    {
      "key": {
        "uuid": "541d1f51_d3db0aa9",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1647,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-09-02T18:51:15Z",
      "side": 1,
      "message": "You can do better than only doing this for the all-disable case. As long as the draw buffers are a subset of the current framebuffer\u0027s draw buffers, this optimization can be enabled. `mCurrentEnabledDrawBuffers` can be used for this.",
      "revId": "7b866b5a5001509852d5b1916645b55a103a1463",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ac206c24_2213ee5b",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1647,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-09-02T19:37:17Z",
      "side": 1,
      "message": "Sorry that I am not getting this. If one of draw buffer is still enabled, the color should still write into that buffer. But color mask is global, it will stop all buffers from been written if set to false. My understanding is that we can only enable this if we know that we are not writing to any buffer.",
      "parentUuid": "541d1f51_d3db0aa9",
      "revId": "7b866b5a5001509852d5b1916645b55a103a1463",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dcec0487_20607276",
        "filename": "src/tests/gl_tests/VulkanPerformanceCounterTest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 503,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-09-02T18:51:15Z",
      "side": 1,
      "message": "Please add correctness tests (in a test suite that runs everywhere) based on this as well.",
      "revId": "7b866b5a5001509852d5b1916645b55a103a1463",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9829ad7b_df8c547a",
        "filename": "src/tests/gl_tests/VulkanPerformanceCounterTest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 503,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-09-02T18:57:00Z",
      "side": 1,
      "message": "Also, the change switches to `mCurrentEnabledDrawBuffers` in quite a few places, all of which are prone to be future bugs. glDrawBuffers is not fantastically tested, especially in a way that triggers this optimization, so it\u0027s imperative that tests be written for *all* of those cases.\n\nOnce you write the test for one case, you should be able to copy-paste the same test and change the operation after glDrawBuffer for each one (like blit, blit that resolves, clear, masked clear, scissored clear etc).",
      "parentUuid": "dcec0487_20607276",
      "revId": "7b866b5a5001509852d5b1916645b55a103a1463",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}