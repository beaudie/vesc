{
  "comments": [
    {
      "key": {
        "uuid": "e7ead7dd_8b26849f",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 499,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2019-02-12T15:26:25Z",
      "side": 1,
      "message": "I think you should just leave the destroy here. It doesn\u0027t do anything if the pool is invalid. And it does handle the error case.",
      "range": {
        "startLine": 494,
        "startChar": 0,
        "endLine": 499,
        "endChar": 6
      },
      "revId": "463469ee2a41fa7b4ebb1fb6a645bb1a1b58e72f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e3ba7e1d_68111d41",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 554,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2019-02-12T15:26:25Z",
      "side": 1,
      "message": "nit: don\u0027t need auto here.",
      "range": {
        "startLine": 554,
        "startChar": 9,
        "endLine": 554,
        "endChar": 14
      },
      "revId": "463469ee2a41fa7b4ebb1fb6a645bb1a1b58e72f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c51a87c8_b3c3141c",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 554,
      "author": {
        "id": 1256245
      },
      "writtenOn": "2019-02-12T16:22:25Z",
      "side": 1,
      "message": "Suggested syntax? Compiler complains w/o auto.",
      "parentUuid": "e3ba7e1d_68111d41",
      "range": {
        "startLine": 554,
        "startChar": 9,
        "endLine": 554,
        "endChar": 14
      },
      "revId": "463469ee2a41fa7b4ebb1fb6a645bb1a1b58e72f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eca07271_33d59718",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 953,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2019-02-12T15:26:25Z",
      "side": 1,
      "message": "nit: don\u0027t need auto here.",
      "range": {
        "startLine": 953,
        "startChar": 9,
        "endLine": 953,
        "endChar": 14
      },
      "revId": "463469ee2a41fa7b4ebb1fb6a645bb1a1b58e72f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7e73d7e9_0e088923",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 953,
      "author": {
        "id": 1256245
      },
      "writtenOn": "2019-02-12T16:22:25Z",
      "side": 1,
      "message": "Can you clarify? Compiler doesn\u0027t like \"auto\" being removed - \"range-based for loop requires type for loop variable\"",
      "parentUuid": "eca07271_33d59718",
      "range": {
        "startLine": 953,
        "startChar": 9,
        "endLine": 953,
        "endChar": 14
      },
      "revId": "463469ee2a41fa7b4ebb1fb6a645bb1a1b58e72f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9dd1164d_fad70f9e",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 953,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-02-12T16:42:09Z",
      "side": 1,
      "message": "Jamie meant for you to specify the type instead of using auto.",
      "parentUuid": "7e73d7e9_0e088923",
      "range": {
        "startLine": 953,
        "startChar": 9,
        "endLine": 953,
        "endChar": 14
      },
      "revId": "463469ee2a41fa7b4ebb1fb6a645bb1a1b58e72f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ab2c1c59_1c1392d2",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 959,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2019-02-12T15:26:25Z",
      "side": 1,
      "message": "can make this a helper",
      "range": {
        "startLine": 958,
        "startChar": 0,
        "endLine": 959,
        "endChar": 29
      },
      "revId": "463469ee2a41fa7b4ebb1fb6a645bb1a1b58e72f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a2ac561b_e6505d13",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 959,
      "author": {
        "id": 1256245
      },
      "writtenOn": "2019-02-12T16:22:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ab2c1c59_1c1392d2",
      "range": {
        "startLine": 958,
        "startChar": 0,
        "endLine": 959,
        "endChar": 29
      },
      "revId": "463469ee2a41fa7b4ebb1fb6a645bb1a1b58e72f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9718a6ce_5f8b02c9",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1415,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-02-12T15:15:14Z",
      "side": 1,
      "message": "Why not do the reset before giving the command pool back to `mCommandPools`? That would mean any command pool in `mCommandPools` is always at init state.\n\nRight now, the pools that are created initially are reset for no reason (no big deal by itself, but it means you don\u0027t have an invariant (like \"any pool taken from `mCommandPools` is at init\") that you can reason about).",
      "revId": "463469ee2a41fa7b4ebb1fb6a645bb1a1b58e72f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "de16a721_fefbb9c5",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1415,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2019-02-12T15:26:25Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "9718a6ce_5f8b02c9",
      "revId": "463469ee2a41fa7b4ebb1fb6a645bb1a1b58e72f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7b6fd803_8253432e",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1415,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-02-12T16:05:02Z",
      "side": 1,
      "message": "Ok, I just saw a previous comment of yours that said you didn\u0027t do this because `freeAllInFlightResources` doesn\u0027t have the context. That\u0027s fine then as is for me.",
      "parentUuid": "de16a721_fefbb9c5",
      "revId": "463469ee2a41fa7b4ebb1fb6a645bb1a1b58e72f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc9db236_31c7acb2",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1415,
      "author": {
        "id": 1256245
      },
      "writtenOn": "2019-02-12T16:22:25Z",
      "side": 1,
      "message": "Yes, switched this around. freeAllInFlightResources() doesn\u0027t have context or display param so just calling raw vkResetCommandPool() and manually checking result similar to fence wait in same function.",
      "parentUuid": "de16a721_fefbb9c5",
      "revId": "463469ee2a41fa7b4ebb1fb6a645bb1a1b58e72f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}