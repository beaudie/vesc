{
  "comments": [
    {
      "key": {
        "uuid": "a9d91f82_37e8892b",
        "filename": "src/libANGLE/VertexArray.cpp",
        "patchSetId": 53
      },
      "lineNbr": 116,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-01-26T17:10:20Z",
      "side": 1,
      "message": "you\u0027ll also need to update the Binding * in this method.",
      "range": {
        "startLine": 116,
        "startChar": 3,
        "endLine": 116,
        "endChar": 61
      },
      "revId": "90f68dbddae542948446456f1a80a5eb5f22579a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "75d98b63_e1aed816",
        "filename": "src/libANGLE/VertexArray.cpp",
        "patchSetId": 53
      },
      "lineNbr": 116,
      "author": {
        "id": 1161747
      },
      "writtenOn": "2017-02-03T11:41:48Z",
      "side": 1,
      "message": "Actually I think it is redundant to store both bindingIndex and the pointer to AttributeBinding, since we can access the AttributeBinding by the bindingIndex in VAO. Furthermore, we have to add validations against the mismatch between the bindingIndex and the pointer to the AttributeBinding.\n\nIn my current implementation, I store the const pointer to all AttributeBindings in the struct VertexAttribute, then we can access the AttributeBinding only by bindingIndex, so it is enough just to update bindingIndex here:\n// VertexAttribute.h#60\nconst AttributeBinding \u0026getBinding() const { return (*bindings)[format.bindingIndex]; }\n\nDo you agree with this design?",
      "parentUuid": "a9d91f82_37e8892b",
      "revId": "90f68dbddae542948446456f1a80a5eb5f22579a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "98f9d7ba_12f11236",
        "filename": "src/libANGLE/VertexArray.h",
        "patchSetId": 53
      },
      "lineNbr": 37,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-01-26T17:10:20Z",
      "side": 1,
      "message": "nit: maxBindings",
      "range": {
        "startLine": 37,
        "startChar": 47,
        "endLine": 37,
        "endChar": 64
      },
      "revId": "90f68dbddae542948446456f1a80a5eb5f22579a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6f4891e2_4172cdd9",
        "filename": "src/libANGLE/VertexArray.h",
        "patchSetId": 53
      },
      "lineNbr": 37,
      "author": {
        "id": 1161747
      },
      "writtenOn": "2017-02-04T13:28:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "98f9d7ba_12f11236",
      "revId": "90f68dbddae542948446456f1a80a5eb5f22579a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2b1ee3b1_5df2f2ed",
        "filename": "src/libANGLE/VertexArray.h",
        "patchSetId": 53
      },
      "lineNbr": 51,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-01-26T17:10:20Z",
      "side": 1,
      "message": "nit: getBindings is probably fine.",
      "range": {
        "startLine": 51,
        "startChar": 41,
        "endLine": 51,
        "endChar": 58
      },
      "revId": "90f68dbddae542948446456f1a80a5eb5f22579a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6f88c49_a5310c2e",
        "filename": "src/libANGLE/VertexArray.h",
        "patchSetId": 53
      },
      "lineNbr": 51,
      "author": {
        "id": 1161747
      },
      "writtenOn": "2017-02-04T13:28:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2b1ee3b1_5df2f2ed",
      "revId": "90f68dbddae542948446456f1a80a5eb5f22579a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4902e734_e95067a1",
        "filename": "src/libANGLE/VertexArray.h",
        "patchSetId": 53
      },
      "lineNbr": 52,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-01-26T17:10:20Z",
      "side": 1,
      "message": "getBinding",
      "range": {
        "startLine": 52,
        "startChar": 28,
        "endLine": 52,
        "endChar": 44
      },
      "revId": "90f68dbddae542948446456f1a80a5eb5f22579a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "65bb6b91_32958bee",
        "filename": "src/libANGLE/VertexArray.h",
        "patchSetId": 53
      },
      "lineNbr": 52,
      "author": {
        "id": 1161747
      },
      "writtenOn": "2017-02-04T13:28:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4902e734_e95067a1",
      "revId": "90f68dbddae542948446456f1a80a5eb5f22579a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aee75e33_dc9eb51f",
        "filename": "src/libANGLE/VertexArray.h",
        "patchSetId": 53
      },
      "lineNbr": 61,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-01-26T17:10:20Z",
      "side": 1,
      "message": "nit: mAttributeBindings or mBindings.",
      "range": {
        "startLine": 61,
        "startChar": 34,
        "endLine": 61,
        "endChar": 49
      },
      "revId": "90f68dbddae542948446456f1a80a5eb5f22579a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fe8efe14_1f1b54ba",
        "filename": "src/libANGLE/VertexArray.h",
        "patchSetId": 53
      },
      "lineNbr": 61,
      "author": {
        "id": 1161747
      },
      "writtenOn": "2017-02-04T13:28:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "aee75e33_dc9eb51f",
      "revId": "90f68dbddae542948446456f1a80a5eb5f22579a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "24879d94_43af3d88",
        "filename": "src/libANGLE/VertexArray.h",
        "patchSetId": 53
      },
      "lineNbr": 63,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-01-26T17:10:20Z",
      "side": 1,
      "message": "nit: move this back under mLabel and above mAttribBindings to reduce the diff. Also rename it mVertexAttributes as it was before.",
      "range": {
        "startLine": 63,
        "startChar": 4,
        "endLine": 63,
        "endChar": 48
      },
      "revId": "90f68dbddae542948446456f1a80a5eb5f22579a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d3982e6b_b86fdd5e",
        "filename": "src/libANGLE/VertexArray.h",
        "patchSetId": 53
      },
      "lineNbr": 63,
      "author": {
        "id": 1161747
      },
      "writtenOn": "2017-02-04T13:28:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "24879d94_43af3d88",
      "revId": "90f68dbddae542948446456f1a80a5eb5f22579a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ab46dc3b_7c238ca4",
        "filename": "src/libANGLE/VertexArray.h",
        "patchSetId": 53
      },
      "lineNbr": 77,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-01-26T17:10:20Z",
      "side": 1,
      "message": "same for these guys",
      "range": {
        "startLine": 77,
        "startChar": 28,
        "endLine": 77,
        "endChar": 44
      },
      "revId": "90f68dbddae542948446456f1a80a5eb5f22579a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4c380531_2556baf7",
        "filename": "src/libANGLE/VertexArray.h",
        "patchSetId": 53
      },
      "lineNbr": 77,
      "author": {
        "id": 1161747
      },
      "writtenOn": "2017-02-04T13:28:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ab46dc3b_7c238ca4",
      "revId": "90f68dbddae542948446456f1a80a5eb5f22579a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "16321f25_2f6cccde",
        "filename": "src/libANGLE/VertexAttribute.cpp",
        "patchSetId": 53
      },
      "lineNbr": 104,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-01-26T17:10:20Z",
      "side": 1,
      "message": "this is actually a nice optimization.",
      "range": {
        "startLine": 103,
        "startChar": 0,
        "endLine": 104,
        "endChar": 57
      },
      "revId": "90f68dbddae542948446456f1a80a5eb5f22579a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f09a8fc5_8e22db24",
        "filename": "src/libANGLE/VertexAttribute.h",
        "patchSetId": 53
      },
      "lineNbr": 35,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-01-26T17:10:20Z",
      "side": 1,
      "message": "can we also make this NonCopyable?",
      "range": {
        "startLine": 35,
        "startChar": 7,
        "endLine": 35,
        "endChar": 22
      },
      "revId": "90f68dbddae542948446456f1a80a5eb5f22579a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "640b82c3_b2d1e71c",
        "filename": "src/libANGLE/VertexAttribute.h",
        "patchSetId": 53
      },
      "lineNbr": 35,
      "author": {
        "id": 1161747
      },
      "writtenOn": "2017-02-04T13:28:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f09a8fc5_8e22db24",
      "revId": "90f68dbddae542948446456f1a80a5eb5f22579a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9e1971b5_1de91033",
        "filename": "src/libANGLE/VertexAttribute.h",
        "patchSetId": 53
      },
      "lineNbr": 63,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-01-26T17:10:20Z",
      "side": 1,
      "message": "I see why you moved these here, I think it\u0027s a good idea. They don\u0027t really apply to the Format like the ES 3.1 spec says. I think you should also do the same for the bindingIndex.",
      "range": {
        "startLine": 62,
        "startChar": 0,
        "endLine": 63,
        "endChar": 72
      },
      "revId": "90f68dbddae542948446456f1a80a5eb5f22579a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "17424dd4_06074e98",
        "filename": "src/libANGLE/VertexAttribute.h",
        "patchSetId": 53
      },
      "lineNbr": 63,
      "author": {
        "id": 1161747
      },
      "writtenOn": "2017-02-03T11:41:48Z",
      "side": 1,
      "message": "According to https://www.opengl.org/registry/specs/ARB/vertex_attrib_binding.txt, there is \u0027a reference to one of the new buffer binding points above\u0027 in each \u0027vertex attribute format information record\u0027, so I put bindingIndex in AttributeFormat.\n \nFurthermore, I should add a vector\u003cGLuint\u003ebindingIndexes in VertexArrayGL to store the cache of bindingIndex in GL drivers because in my current implementation I don\u0027t store the cache of pointer and stride in VertexArrayGL because they won\u0027t be set into GL drivers.",
      "parentUuid": "9e1971b5_1de91033",
      "revId": "90f68dbddae542948446456f1a80a5eb5f22579a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "11a9ffe7_58abe6f5",
        "filename": "src/libANGLE/renderer/d3d/d3d11/renderer11_utils.cpp",
        "patchSetId": 53
      },
      "lineNbr": 1218,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-01-26T17:10:20Z",
      "side": 1,
      "message": "shouldn\u0027t you initialize them to some kind of sensible value? Are they zero by default? Is there any kind of test for this right now?",
      "range": {
        "startLine": 1217,
        "startChar": 4,
        "endLine": 1218,
        "endChar": 93
      },
      "revId": "90f68dbddae542948446456f1a80a5eb5f22579a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2f5a1b52_9221ba42",
        "filename": "src/libANGLE/renderer/d3d/d3d11/renderer11_utils.cpp",
        "patchSetId": 53
      },
      "lineNbr": 1218,
      "author": {
        "id": 1161747
      },
      "writtenOn": "2017-02-03T11:41:48Z",
      "side": 1,
      "message": "Got it. I will do that in this patch.",
      "parentUuid": "11a9ffe7_58abe6f5",
      "revId": "90f68dbddae542948446456f1a80a5eb5f22579a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0475da83_5080eb77",
        "filename": "src/libANGLE/renderer/gl/VertexArrayGL.cpp",
        "patchSetId": 53
      },
      "lineNbr": 515,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-01-26T17:10:20Z",
      "side": 1,
      "message": "Please use GetAttribIndex like you did in VertexArray11. Can you make GetAttribIndex a helper function exposed in VertexArray.h?",
      "range": {
        "startLine": 515,
        "startChar": 12,
        "endLine": 515,
        "endChar": 83
      },
      "revId": "90f68dbddae542948446456f1a80a5eb5f22579a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c27d82c8_a8dec8f5",
        "filename": "src/libANGLE/renderer/gl/VertexArrayGL.cpp",
        "patchSetId": 53
      },
      "lineNbr": 515,
      "author": {
        "id": 1161747
      },
      "writtenOn": "2017-02-04T13:28:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0475da83_5080eb77",
      "revId": "90f68dbddae542948446456f1a80a5eb5f22579a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}