{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "13a1fc40_c8d6dcb4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-12-19T16:41:11Z",
      "side": 1,
      "message": "Thanks for suppressing this Yuly",
      "revId": "852ea3149475f0cadb4ba9dced4a334df28192d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "df942166_dfe73bac",
        "filename": "src/tests/angle_end2end_tests_expectations.txt",
        "patchSetId": 1
      },
      "lineNbr": 254,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-12-19T16:41:11Z",
      "side": 1,
      "message": "```suggestion\n8465 MAC NVIDIA OPENGL : UniformBufferTest.BufferBlockBindingChange/* \u003d SKIP\n```",
      "revId": "852ea3149475f0cadb4ba9dced4a334df28192d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "04773f55_c5e4aa02",
        "filename": "src/tests/angle_end2end_tests_expectations.txt",
        "patchSetId": 1
      },
      "lineNbr": 254,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2023-12-19T16:45:32Z",
      "side": 1,
      "message": "I think a precise suppression is better?\nLooks like there is a mix of the 2 approaches above.",
      "parentUuid": "df942166_dfe73bac",
      "revId": "852ea3149475f0cadb4ba9dced4a334df28192d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad4019ff_7de01715",
        "filename": "src/tests/angle_end2end_tests_expectations.txt",
        "patchSetId": 1
      },
      "lineNbr": 254,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-12-19T16:50:45Z",
      "side": 1,
      "message": "The specialized ones above look like should have been `*` too. Otherwise when someone adds a variant to the test they have to come back and resuppress these.\n\nWe (were supposed to) only use specialized for when only the specialized test fails, like `.../ES3_OpenGL_WithSpecialFeature1_WithSpecialFeature2`",
      "parentUuid": "04773f55_c5e4aa02",
      "revId": "852ea3149475f0cadb4ba9dced4a334df28192d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3afce80c_8e613e4f",
        "filename": "src/tests/angle_end2end_tests_expectations.txt",
        "patchSetId": 1
      },
      "lineNbr": 254,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2023-12-19T16:54:29Z",
      "side": 1,
      "message": "Maybe you could go over the expectation file and make it consistent then?\nAnd add a presubmit warning?\nOtherwise, it\u0027s going to diverge again.",
      "parentUuid": "ad4019ff_7de01715",
      "revId": "852ea3149475f0cadb4ba9dced4a334df28192d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:approval_code-owners"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "852ea3149475f0cadb4ba9dced4a334df28192d4",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Bot-Commit=+1"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "852ea3149475f0cadb4ba9dced4a334df28192d4",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "852ea3149475f0cadb4ba9dced4a334df28192d4",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "852ea3149475f0cadb4ba9dced4a334df28192d4",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}