{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "7feb51b1_92a9f967",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2021-12-17T03:05:58Z",
      "side": 1,
      "message": "+Shabi as the author",
      "revId": "3d7de1dcb516d886a0daa15ecfffb2e8c6d72f1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ca2369b8_96a2fbd0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-12-17T03:55:54Z",
      "side": 1,
      "message": "Echoing from chat for posterity:\n\nI added this optimization because ARM pointed out that setting state for 8 attachments every time is showing up as costly in the Driver Overhead 2 benchmark. Basically the goal was to:\n\n- Only update the blend state corresponding to the current attachment mask\n- When the framebuffer changes, clear away the blend state for attachments that no longer exist\n\nI get the bug, and I don\u0027t remember exactly why I added `resetBlendFuncsAndEquations`. It was likely to get the state cleaned up to avoid unnecessary program pipeline creations that are otherwise really identical (because they differ in blend state of non-existing attachments). You can try removing `resetBlendFuncsAndEquations` and if nothing fails, I guess that\u0027s fine (maybe chances are low for what I was concerned about happening).\n\nHowever, you could also instead update the blend state for for this attachment mask `newColorAttachmentMask \u0026 ~mCachedDrawFramebufferColorAttachmentMask`\n\nBasically `resetBlendFuncsAndEquations` is cleaning up attachments that are removed (by looking at `mCachedDrawFramebufferColorAttachmentMask \u0026 ~newColorAttachmentMask`, but I had missed updating attachments that were added.\n",
      "revId": "3d7de1dcb516d886a0daa15ecfffb2e8c6d72f1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7b4cb90c_308671fa",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 3951,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2021-12-17T03:05:58Z",
      "side": 1,
      "message": "You could almost call updateBlendFuncsAndEquations here, but it sets a different value for mCachedDrawFramebufferColorAttachmentMask.  Potentially worth a refactor to pass in the mask, if you decide to keep this approach.",
      "revId": "3d7de1dcb516d886a0daa15ecfffb2e8c6d72f1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a2525705_674952d7",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 3954,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2021-12-17T03:05:58Z",
      "side": 1,
      "message": "nit: This and the one below can be mCachedDrawFramebufferColorAttachmentMask or newColorAttachmentMask.  Probably the former for consistency.",
      "range": {
        "startLine": 3954,
        "startChar": 24,
        "endLine": 3954,
        "endChar": 78
      },
      "revId": "3d7de1dcb516d886a0daa15ecfffb2e8c6d72f1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d365319e_9f8e09d4",
        "filename": "src/tests/gl_tests/StateChangeTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 7513,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-12-20T13:36:37Z",
      "side": 1,
      "message": "rather than defining a new test type, just use SimpleStateChangeTestES3 and put all the setup inline in the test using RAII. This will let you use RAII safely.",
      "range": {
        "startLine": 7513,
        "startChar": 6,
        "endLine": 7513,
        "endChar": 38
      },
      "revId": "3d7de1dcb516d886a0daa15ecfffb2e8c6d72f1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}