{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "9a0be67c_3eb5db48",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2023-02-23T03:06:15Z",
      "side": 1,
      "message": "Hey Yuly - are you comfortable reviewing these changes?  I can wait for Roman to get back next week, if you prefer.",
      "revId": "da7af85bf42a1ddcf4385b53950d612113d8de86",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4c8b9c44_f5b0987d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2023-02-23T17:04:49Z",
      "side": 1,
      "message": "I\u0027m OK with reviewing stuff.\nBut maybe Roman should take another look when he\u0027s back.",
      "parentUuid": "9a0be67c_3eb5db48",
      "revId": "da7af85bf42a1ddcf4385b53950d612113d8de86",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "de52ba28_105e72f9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2023-02-23T20:20:05Z",
      "side": 1,
      "message": "Ack - I\u0027ll make sure Roman sees it.  Going to land it because I\u0027ve got another trace that benefits from the feature, and other engineers making traces are excited to start using it.",
      "parentUuid": "4c8b9c44_f5b0987d",
      "revId": "da7af85bf42a1ddcf4385b53950d612113d8de86",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "de223bb9_1c8cefaf",
        "filename": "src/tests/perf_tests/ANGLEPerfTestArgs.cpp",
        "patchSetId": 2
      },
      "lineNbr": 140,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2023-02-23T17:04:49Z",
      "side": 1,
      "message": "Per my understanging, you\u0027re adding this mode for Gold image comparison.\nBut I wonder why not use it for performance as well, it sounds to me like the interesting stuff happens when rendering the key frame - the frames after it might be less interesting performance-wise.\nSo, I\u0027d measure performance rendering from beginning to key frame in a loop. Not sure what do we measure now, actually.",
      "range": {
        "startLine": 135,
        "startChar": 0,
        "endLine": 140,
        "endChar": 5
      },
      "revId": "da7af85bf42a1ddcf4385b53950d612113d8de86",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f53ca431_49d2a2a1",
        "filename": "src/tests/perf_tests/ANGLEPerfTestArgs.cpp",
        "patchSetId": 2
      },
      "lineNbr": 140,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2023-02-23T17:52:08Z",
      "side": 1,
      "message": "Yes, `--run-to-key-frame` is mostly to inform the bots they can stop.  I could leave it out, but running all the frames on SwiftShader would definitely consume more resources.  There would be a benefit to running them all the way through, including Reset (I don\u0027t know if we already do that on the bots anywhere).\n\nIt would be difficult to incorporate a key frame into performance measurements, mostly because looping requires Reset, which is complicated.  We don\u0027t support looping on arbitrary frames or frame ranges.  You can do it by trimming the trace to just the frames you care about, but we\u0027re still in the process of hardening our capture/replay to ensure robust trimming.",
      "parentUuid": "de223bb9_1c8cefaf",
      "range": {
        "startLine": 135,
        "startChar": 0,
        "endLine": 140,
        "endChar": 5
      },
      "revId": "da7af85bf42a1ddcf4385b53950d612113d8de86",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "de6c581e_1e1b66bc",
        "filename": "src/tests/perf_tests/ANGLEPerfTestArgs.cpp",
        "patchSetId": 2
      },
      "lineNbr": 140,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2023-02-23T20:20:05Z",
      "side": 1,
      "message": "Keeping the flag in for now to save bot time.",
      "parentUuid": "f53ca431_49d2a2a1",
      "range": {
        "startLine": 135,
        "startChar": 0,
        "endLine": 140,
        "endChar": 5
      },
      "revId": "da7af85bf42a1ddcf4385b53950d612113d8de86",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c8127541_46f558ab",
        "filename": "src/tests/perf_tests/TracePerfTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 892,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2023-02-23T17:52:08Z",
      "side": 1,
      "message": "ref",
      "range": {
        "startLine": 884,
        "startChar": 0,
        "endLine": 892,
        "endChar": 9
      },
      "revId": "da7af85bf42a1ddcf4385b53950d612113d8de86",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f6a4ed8b_705d06fa",
        "filename": "src/tests/perf_tests/TracePerfTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 892,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2023-02-23T20:20:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c8127541_46f558ab",
      "range": {
        "startLine": 884,
        "startChar": 0,
        "endLine": 892,
        "endChar": 9
      },
      "revId": "da7af85bf42a1ddcf4385b53950d612113d8de86",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}