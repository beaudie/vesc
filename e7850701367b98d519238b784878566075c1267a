{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e278d2b6_80dab8d3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-05-24T13:49:10Z",
      "side": 1,
      "message": "Thanks for the fix Mohan - one question.",
      "revId": "e7850701367b98d519238b784878566075c1267a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc3f9988_521dd402",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 6388,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-05-24T13:49:10Z",
      "side": 1,
      "message": "this is going to add overhead to texture state changes to handle what I assume is an edge case with immutable textures. What kinds of redesign could we do here to avoid a loop or any overhead if possible?",
      "range": {
        "startLine": 6380,
        "startChar": 0,
        "endLine": 6388,
        "endChar": 5
      },
      "revId": "e7850701367b98d519238b784878566075c1267a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b2fce21_00ff2d30",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 6388,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2022-05-24T18:04:31Z",
      "side": 1,
      "message": "we loop through `samplerBindings.size()` so wouldn\u0027t go through `IMPLEMENTATION_MAX_ACTIVE_TEXTURES`.\n\nhaving said that, it makes sense to cache this in `ProgramExecutable` with the rest of the `mActive...` members while leveraging the looping we already do there",
      "parentUuid": "bc3f9988_521dd402",
      "range": {
        "startLine": 6380,
        "startChar": 0,
        "endLine": 6388,
        "endChar": 5
      },
      "revId": "e7850701367b98d519238b784878566075c1267a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "29ba6a12_12a6395c",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 6388,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-05-25T13:23:43Z",
      "side": 1,
      "message": "Wait.. are you trying to map backwards from an active texture index to a sampler index? That doesn\u0027t work because it\u0027s a many-to-one mapping. e.g., you can have two samplers reading from texture unit 0. Can you help me understand the error you have in your reproduction test here? Maybe I can think of an alternate solution.",
      "parentUuid": "3b2fce21_00ff2d30",
      "range": {
        "startLine": 6380,
        "startChar": 0,
        "endLine": 6388,
        "endChar": 5
      },
      "revId": "e7850701367b98d519238b784878566075c1267a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1e749505_88ad954d",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 6388,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-05-25T13:24:22Z",
      "side": 1,
      "message": "Well, it doesn\u0027t always work. It will work for this test, not for some edge cases.",
      "parentUuid": "29ba6a12_12a6395c",
      "range": {
        "startLine": 6380,
        "startChar": 0,
        "endLine": 6388,
        "endChar": 5
      },
      "revId": "e7850701367b98d519238b784878566075c1267a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3cbbd55e_f29070b3",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 6388,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2022-05-25T16:06:13Z",
      "side": 1,
      "message": "\u003e you can have two samplers reading from texture unit 0.\n\nas long as sampler type and texture type matches, which it should if we have not errored out from draw, this is functionally correct since we will always choose the \"last\" samplerIndex for a texture unit.\n\n\u003e Can you help me understand the error you have in your reproduction test here?\n\n`textureUnit \u003d\u003d 0` is sampled from `samplerIndex \u003d\u003d 0` and `textureUnit \u003d\u003d 1` is sampled from `samplerIndex \u003d\u003d 1`.\n\nIf we switch the sampler uniform values then `textureUnit \u003d\u003d 0` is sampled from `samplerIndex \u003d\u003d 1` and `textureUnit \u003d\u003d 1` is sampled from `samplerIndex \u003d\u003d 0`\n\nthis could result in incompatibility with current pipeline layout and hence needs to be recreated.\n\n\u003e not for some edge cases\n\ncould you elaborate?",
      "parentUuid": "1e749505_88ad954d",
      "range": {
        "startLine": 6380,
        "startChar": 0,
        "endLine": 6388,
        "endChar": 5
      },
      "revId": "e7850701367b98d519238b784878566075c1267a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a4077f35_1b3ec90f",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 6388,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-05-25T19:26:05Z",
      "side": 1,
      "message": "OK, I get the error condition although I don\u0027t quite know how the pipeline gets incompatible. Where does the mixup of IDs impact the incompatibility?\n\nSo the issue is the way the sampler uniform bindings work with the active textures.\n\nIf you have active textures 1 and 2 as in your example, say your program has 4 samplers in the shader. Using sampler uniforms, you could bind uniform \"1\" to active texture \"1\", uniform \"2\" to active texture \"1\", uniform \"3\" to active texture \"2\", uniform \"4\" to active texture \"2\" and so on. The mapping structure you have here won\u0027t hold up under these conditions.\n\nSo I am trying to understand better how immutable samplers work so maybe we can figure out a better solution.",
      "parentUuid": "3cbbd55e_f29070b3",
      "range": {
        "startLine": 6380,
        "startChar": 0,
        "endLine": 6388,
        "endChar": 5
      },
      "revId": "e7850701367b98d519238b784878566075c1267a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "04108a7b_b4dbac74",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 6388,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2022-05-25T20:50:30Z",
      "side": 1,
      "message": "\u003e I don\u0027t quite know how the pipeline gets incompatible. Where does the mixup of IDs impact the incompatibility?\n\nthe incompatibility is when the descriptor counts required by a sampler binding changes. So if a sampler binding is updated from a texture with a 2 planes to a texture with 3 planes, the pipeline layout needs to be recreated\n\n\u003e Using sampler uniforms, you could bind uniform \"1\" to active texture \"1\", uniform \"2\" to active texture \"1\", uniform \"3\" to active texture \"2\", uniform \"4\" to active texture \"2\" and so on. The mapping structure you have here won\u0027t hold up under these conditions.\n\noops, missed updating `ProgramExecutableVk::addTextureDescriptorSetDesc` when i refactored",
      "parentUuid": "a4077f35_1b3ec90f",
      "range": {
        "startLine": 6380,
        "startChar": 0,
        "endLine": 6388,
        "endChar": 5
      },
      "revId": "e7850701367b98d519238b784878566075c1267a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ca0c22a2_01c20919",
        "filename": "src/libANGLE/renderer/vulkan/ProgramExecutableVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 645,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-05-24T13:49:10Z",
      "side": 1,
      "message": "nit: this seems like an unrelated refactor change",
      "range": {
        "startLine": 645,
        "startChar": 77,
        "endLine": 645,
        "endChar": 89
      },
      "revId": "e7850701367b98d519238b784878566075c1267a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3fde1fa5_0165d310",
        "filename": "src/libANGLE/renderer/vulkan/ProgramExecutableVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 645,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2022-05-24T18:00:47Z",
      "side": 1,
      "message": "this is what threw me off during debug, `textureUnit` or `samplerIndex` mean something, `textureIndex` not so much. This renaming is to reinforce the association between an immutable sampler and the `samplerIndex`",
      "parentUuid": "ca0c22a2_01c20919",
      "range": {
        "startLine": 645,
        "startChar": 77,
        "endLine": 645,
        "endChar": 89
      },
      "revId": "e7850701367b98d519238b784878566075c1267a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3a986fd8_3d7b79dc",
        "filename": "src/libANGLE/renderer/vulkan/ProgramExecutableVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 645,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2022-05-25T18:48:31Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "3fde1fa5_0165d310",
      "range": {
        "startLine": 645,
        "startChar": 77,
        "endLine": 645,
        "endChar": 89
      },
      "revId": "e7850701367b98d519238b784878566075c1267a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}