{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "947b875b_fe8881f7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-01-26T13:29:35Z",
      "side": 1,
      "message": "LGTM\n\nNow I see why the shared garbage list is so slow, because there is no ordering.",
      "revId": "f080b67f3d437b1cb257f568273a732fc69f788d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd5972fa_a1321dbd",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 3395,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-01-26T02:52:42Z",
      "side": 1,
      "message": "I thought you wanted to stop on first !complete?",
      "revId": "f080b67f3d437b1cb257f568273a732fc69f788d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "07b7ff2e_9c9452f8",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 3395,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2022-01-26T17:14:13Z",
      "side": 1,
      "message": "Yea, that was my initial thinking. But after I think it a bit ore I ditched that. The reason is that we inject the garabeg even if it is not submitted. This means in shared context cases, if one shared context inject an unsubmitted garbage, it may stop the entire garbage collection to make progress. Luckily, even without stopping at first !complete, I still see the same perf.",
      "parentUuid": "fd5972fa_a1321dbd",
      "revId": "f080b67f3d437b1cb257f568273a732fc69f788d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f1d8ae5f_ff017e26",
        "filename": "src/libANGLE/renderer/vulkan/ResourceVk.h",
        "patchSetId": 6
      },
      "lineNbr": 134,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-01-26T02:52:42Z",
      "side": 1,
      "message": "Can you give std::deque a very quick try to see if it\u0027s faster than std::queue?",
      "range": {
        "startLine": 134,
        "startChar": 31,
        "endLine": 134,
        "endChar": 36
      },
      "revId": "f080b67f3d437b1cb257f568273a732fc69f788d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c3e48d15_74d6d33a",
        "filename": "src/libANGLE/renderer/vulkan/ResourceVk.h",
        "patchSetId": 6
      },
      "lineNbr": 134,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2022-01-26T17:14:13Z",
      "side": 1,
      "message": "Yes, I did. No difference. I think both are implemented very similarly, with dque may have slightly moire state to track because it handle the case to push_front and pop_back which is impossible for queue.",
      "parentUuid": "f1d8ae5f_ff017e26",
      "range": {
        "startLine": 134,
        "startChar": 31,
        "endLine": 134,
        "endChar": 36
      },
      "revId": "f080b67f3d437b1cb257f568273a732fc69f788d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}