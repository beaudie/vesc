{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "560400c2_79e5a576",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-03-25T15:23:20Z",
      "side": 1,
      "message": "Thanks for fixing the sample!",
      "revId": "af4c0c9ad2b7759d6f6246a942b489ac3ac24030",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6ba613b6_1f80886d",
        "filename": "doc/CaptureAndReplay.md",
        "patchSetId": 4
      },
      "lineNbr": 70,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-03-25T15:23:20Z",
      "side": 1,
      "message": "pretty sure Vulkan is default everywhere but Mac.. do we need the explicit arg?",
      "range": {
        "startLine": 70,
        "startChar": 100,
        "endLine": 70,
        "endChar": 119
      },
      "revId": "af4c0c9ad2b7759d6f6246a942b489ac3ac24030",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "df300d12_7ffc9ccd",
        "filename": "doc/CaptureAndReplay.md",
        "patchSetId": 4
      },
      "lineNbr": 70,
      "author": {
        "id": 1531247
      },
      "writtenOn": "2022-03-25T15:29:41Z",
      "side": 1,
      "message": "Cody: I added this because you asked me to. I didn\u0027t have any issues without this arg myself. Do you know why it was an issue in your case?",
      "parentUuid": "6ba613b6_1f80886d",
      "range": {
        "startLine": 70,
        "startChar": 100,
        "endLine": 70,
        "endChar": 119
      },
      "revId": "af4c0c9ad2b7759d6f6246a942b489ac3ac24030",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a79e4a9a_5c9e82e6",
        "filename": "doc/CaptureAndReplay.md",
        "patchSetId": 4
      },
      "lineNbr": 70,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2022-03-25T15:33:05Z",
      "side": 1,
      "message": "Without the flag I\u0027m getting d3d11 on Windows:\n```\nC:\\src\\angle\u003eout\\Debug\\simple_texture_2d.exe\nINFO: Limit some features because FrameCapture is enabled\n\nINFO: Disabling GL_OES_get_program_binary for trace portability\nINFO: Limiting image unit count to 8\nINFO: Setting uniform buffer offset alignment to 256\nINFO: Disabling GL_EXT_map_buffer_range and GL_OES_mapbuffer during capture, which are not supported on some native drivers\nINFO: Disabling GL_CHROMIUM_bind_uniform_location during capture, which is not supported on native drivers\nINFO: Disabling GL_NV_shader_noperspective_interpolation during capture, which is not supported on some native drivers\nINFO: Limiting draw buffer count to 4\nINFO: Enabling validation to prevent invalid calls from being captured. This effectively disables GL_KHR_no_error and enables GL_ANGLE_robust_client_memory.\nINFO: Disabling GL_OES_depth32 during capture, which is not widely supported on mobile\nINFO: Limiting max atomic counter buffer bindings to 6\nINFO: Limiting max shader storage buffer bindings to 12\nERR: StateManager11.cpp:980 (syncState):        ! Assert failed in syncState (../../src/libANGLE/renderer/d3d/d3d11/StateManager11.cpp:980): mCurBlendStateExt.mMaxDrawBuffers \u003d\u003d blendStateExt.mMaxDrawBuffers\nFATAL: StateManager11.cpp:980 (syncState):      ! Assert failed in syncState (../../src/libANGLE/renderer/d3d/d3d11/StateManager11.cpp:980): mCurBlendStateExt.mMaxDrawBuffers \u003d\u003d blendStateExt.mMaxDrawBuffers\n\nC:\\src\\angle\u003e\n```",
      "parentUuid": "6ba613b6_1f80886d",
      "range": {
        "startLine": 70,
        "startChar": 100,
        "endLine": 70,
        "endChar": 119
      },
      "revId": "af4c0c9ad2b7759d6f6246a942b489ac3ac24030",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3de5291a_67cdf9cc",
        "filename": "doc/CaptureAndReplay.md",
        "patchSetId": 4
      },
      "lineNbr": 70,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-03-25T15:39:35Z",
      "side": 1,
      "message": "Ah, okay, I guess it\u0027s specific to dEQP tests that we get Vulkan by default. N/m then, better keep it.",
      "parentUuid": "a79e4a9a_5c9e82e6",
      "range": {
        "startLine": 70,
        "startChar": 100,
        "endLine": 70,
        "endChar": 119
      },
      "revId": "af4c0c9ad2b7759d6f6246a942b489ac3ac24030",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "767bdfa9_fb270b0e",
        "filename": "doc/CaptureAndReplay.md",
        "patchSetId": 4
      },
      "lineNbr": 70,
      "author": {
        "id": 1531247
      },
      "writtenOn": "2022-03-25T15:53:38Z",
      "side": 1,
      "message": "Ok thanks for the clarification! So many use cases ~:}",
      "parentUuid": "3de5291a_67cdf9cc",
      "range": {
        "startLine": 70,
        "startChar": 100,
        "endLine": 70,
        "endChar": 119
      },
      "revId": "af4c0c9ad2b7759d6f6246a942b489ac3ac24030",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:approval_code-owners"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "af4c0c9ad2b7759d6f6246a942b489ac3ac24030",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "af4c0c9ad2b7759d6f6246a942b489ac3ac24030",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two googlers using a trusted device must approve the change, see http://go/change-management-policy"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {},
      "overrideExpressionResult": {},
      "patchSetCommitId": "af4c0c9ad2b7759d6f6246a942b489ac3ac24030",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {},
      "overrideExpressionResult": {},
      "patchSetCommitId": "af4c0c9ad2b7759d6f6246a942b489ac3ac24030",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}