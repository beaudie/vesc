{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1e85c02d_d84491d1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-07-23T14:59:07Z",
      "side": 1,
      "message": "I can confirm that locally, chrome unstable has disable_sync_control_support disabled due to this bug, and with this change it becomes enabled (so it\u0027s working)",
      "revId": "d46446b088038294a5f55588181c443e86e4dfde",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c5f811e1_4f7a270b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-07-23T15:02:22Z",
      "side": 1,
      "message": "not really clear on the logic of the change but lgtm as most people are out.",
      "revId": "d46446b088038294a5f55588181c443e86e4dfde",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7c31015c_041d0ff1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-07-23T15:06:41Z",
      "side": 1,
      "message": "GetSystemInfo uses libpci and sees 2 GPUs. It looks at the vendors, sees Intel and Nvidia, and takes a chance by assuming the Nvidia one is the active one. When it\u0027s wrong, the GL backend applies Nvidia workarounds even if the active GPU is really the Intel one.\n\nThis change makes the vendor detection use the context\u0027s pointers, so the active GPU is always correctly detected.",
      "parentUuid": "c5f811e1_4f7a270b",
      "revId": "d46446b088038294a5f55588181c443e86e4dfde",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fe99c93b_a8d60690",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-07-23T15:38:16Z",
      "side": 1,
      "message": "@Ken, looks like some dual-GPU bots were passing tests because non-Intel workarounds were being applied to Intel tests. If you have any information on what the other GPU is on the failing bots, I could try and apply the workarounds appropriately.\n\nIf you have resources to actually look into what workarounds are necessary on Intel, that would be even better.",
      "revId": "d46446b088038294a5f55588181c443e86e4dfde",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9ea28185_97eff340",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2021-07-23T19:41:45Z",
      "side": 1,
      "message": "I think something\u0027s going more deeply wrong in this CL. For example the webgl-multi-draw and instanced-arrays failures here:\nhttps://ci.chromium.org/ui/p/chromium/builders/try/mac-angle-chromium-try/3445/overview\n\nare on single-GPU, Intel Macs. Shrek worked around macOS OpenGL driver bugs on Intel GPUs to make these tests pass, and I think those workarounds aren\u0027t being applied correctly any more.\n\nIt would be helpful if you could add logging to your CL to see what the behavioral differences are on the bots.",
      "parentUuid": "fe99c93b_a8d60690",
      "revId": "d46446b088038294a5f55588181c443e86e4dfde",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}