{
  "comments": [
    {
      "key": {
        "uuid": "5edf7219_8ba9513b",
        "filename": "src/common/PackedEnums.cpp",
        "patchSetId": 2
      },
      "lineNbr": 384,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-01-04T03:38:33Z",
      "side": 1,
      "message": "Not a fan of `#if`s on platform in arbitrary places. It can quickly turn into a mess of hard to follow platform dependent code. I don\u0027t know the surrounding code, but would it be simple to change this function to a member of say Display, with a default implementation and an override for DisplayEAGL or something?",
      "range": {
        "startLine": 384,
        "startChar": 0,
        "endLine": 384,
        "endChar": 71
      },
      "revId": "c74052fdcf762523e910085c3b7d75a97b99a08d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f7e88d30_8616bc3c",
        "filename": "src/common/PackedEnums.cpp",
        "patchSetId": 2
      },
      "lineNbr": 384,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2020-01-05T22:24:32Z",
      "side": 1,
      "message": "This change, I think, has been made unnecessary in my addition of support for the iOS Simulator in https://bugs.webkit.org/show_bug.cgi?id\u003d205618 - which needs to be upstreamed to ANGLE, but which is dependent on this upstreaming of the iOS backend.\n\nI would prefer to upstream this unmodified, and then work with Apple to undo this change. They will have to test the removal, since only they can build and test WebKit for iOS hardware.",
      "parentUuid": "5edf7219_8ba9513b",
      "range": {
        "startLine": 384,
        "startChar": 0,
        "endLine": 384,
        "endChar": 71
      },
      "revId": "c74052fdcf762523e910085c3b7d75a97b99a08d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7e58103b_2660f655",
        "filename": "src/common/PackedEnums.cpp",
        "patchSetId": 2
      },
      "lineNbr": 384,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2020-01-05T22:27:16Z",
      "side": 1,
      "message": "Note: filed https://bugs.webkit.org/show_bug.cgi?id\u003d205781 to track the removal of this #ifdef.",
      "parentUuid": "f7e88d30_8616bc3c",
      "range": {
        "startLine": 384,
        "startChar": 0,
        "endLine": 384,
        "endChar": 71
      },
      "revId": "c74052fdcf762523e910085c3b7d75a97b99a08d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "98d7a7c8_417cf06c",
        "filename": "src/common/PackedEnums.cpp",
        "patchSetId": 2
      },
      "lineNbr": 384,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-01-06T02:39:15Z",
      "side": 1,
      "message": "In my experience, once the code goes in, fixing things like this usually becomes low priority enough to rarely ever be done. If the other reviewers are ok with this though, I concede.\n\nOn the same subject, it\u0027s not great that Apple is the only one that can test these changes.",
      "parentUuid": "7e58103b_2660f655",
      "range": {
        "startLine": 384,
        "startChar": 0,
        "endLine": 384,
        "endChar": 71
      },
      "revId": "c74052fdcf762523e910085c3b7d75a97b99a08d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "23d71457_a4770230",
        "filename": "src/common/PackedEnums.cpp",
        "patchSetId": 2
      },
      "lineNbr": 384,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-01-06T15:36:56Z",
      "side": 1,
      "message": "Suggestion: leave a TODO with the bug number and ensure we address the TODO before closing the bug and calling the work complete.",
      "parentUuid": "98d7a7c8_417cf06c",
      "range": {
        "startLine": 384,
        "startChar": 0,
        "endLine": 384,
        "endChar": 71
      },
      "revId": "c74052fdcf762523e910085c3b7d75a97b99a08d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "52e2f36a_61c974cc",
        "filename": "src/gpu_info_util/SystemInfo_ios.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-01-06T15:36:56Z",
      "side": 1,
      "message": "drive-by nit: should be in a third_party subfolder or should have the copyright updated to the ANGLE copyright.",
      "range": {
        "startLine": 2,
        "startChar": 3,
        "endLine": 2,
        "endChar": 53
      },
      "revId": "c74052fdcf762523e910085c3b7d75a97b99a08d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d42ab9f1_1d773809",
        "filename": "src/gpu_info_util/SystemInfo_ios.cpp",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1326275
      },
      "writtenOn": "2020-01-06T16:22:16Z",
      "side": 1,
      "message": "This is probably out of the scope of this CL, but is there a way to do this platform stuff in the gn files? I see a lot of different combinations of PLATFORM_IOS, PLATFORM_MACOS, and PLATFORM_MACCATALYST in this CL and it would be more clear to use the build system instead of #ifdefs",
      "revId": "c74052fdcf762523e910085c3b7d75a97b99a08d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "404d4345_3fc50cb7",
        "filename": "src/gpu_info_util/SystemInfo_ios.cpp",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 1326275
      },
      "writtenOn": "2020-01-06T16:22:16Z",
      "side": 1,
      "message": "Use TODO with a linked angle bug",
      "revId": "c74052fdcf762523e910085c3b7d75a97b99a08d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "14acb09b_8b6aea5e",
        "filename": "src/gpu_info_util/SystemInfo_ios.cpp",
        "patchSetId": 2
      },
      "lineNbr": 49,
      "author": {
        "id": 1326275
      },
      "writtenOn": "2020-01-06T16:22:16Z",
      "side": 1,
      "message": "comment doesn\u0027t match the #if",
      "revId": "c74052fdcf762523e910085c3b7d75a97b99a08d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a12681b4_1c9aa67c",
        "filename": "src/libANGLE/formatutils.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1013,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-01-04T03:38:33Z",
      "side": 1,
      "message": "Really would prefer if this kind of code doesn\u0027t creep in. Imagine the horrors if every platform started `#if`ing their peculiarities in.\n\nWhy isn\u0027t this platform advertising textureFormatBGRA8888 but supporting GL_BGRA_EXT anyway? Can we make things work like every other platform?",
      "range": {
        "startLine": 1011,
        "startChar": 0,
        "endLine": 1013,
        "endChar": 5
      },
      "revId": "c74052fdcf762523e910085c3b7d75a97b99a08d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5f6f933b_5d1f5ce7",
        "filename": "src/libANGLE/formatutils.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1013,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2020-01-05T22:24:32Z",
      "side": 1,
      "message": "I\u0027m not 100% sure why this #ifdef was added but will ask colleagues at Apple. If it turns out this is needed, it\u0027s a tiny change to make in support of running WebKit\u0027s WebGL implementation on top of ANGLE on iOS, and I would strongly advocate for adding it.",
      "parentUuid": "a12681b4_1c9aa67c",
      "range": {
        "startLine": 1011,
        "startChar": 0,
        "endLine": 1013,
        "endChar": 5
      },
      "revId": "c74052fdcf762523e910085c3b7d75a97b99a08d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fc4cb6dd_c3cae53f",
        "filename": "src/libANGLE/renderer/gl/eagl/ContextEAGL.h",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-01-04T03:38:33Z",
      "side": 1,
      "message": "I have a feeling these license files should turn into Copyright ... ANGLE ..., and with ANGLE\u0027s license.",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 23,
        "endChar": 71
      },
      "revId": "c74052fdcf762523e910085c3b7d75a97b99a08d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f9eaaaaa_f36cd25a",
        "filename": "src/libANGLE/renderer/gl/eagl/ContextEAGL.h",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2020-01-05T22:24:32Z",
      "side": 1,
      "message": "We\u0027d have to ask our colleagues at Apple for permission to do that. (I will ask.) There is plenty of precedent for incorporating BSD-licensed code copyrighted by Apple into Chromium.",
      "parentUuid": "fc4cb6dd_c3cae53f",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 23,
        "endChar": 71
      },
      "revId": "c74052fdcf762523e910085c3b7d75a97b99a08d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "22e80338_e70fa573",
        "filename": "src/libANGLE/renderer/gl/eagl/ContextEAGL.h",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-01-06T02:39:15Z",
      "side": 1,
      "message": "Ok, if there is precedence to having code in Chromium not copy-righted to Google, that\u0027s fine.",
      "parentUuid": "f9eaaaaa_f36cd25a",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 23,
        "endChar": 71
      },
      "revId": "c74052fdcf762523e910085c3b7d75a97b99a08d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9c11abbf_bbc41f15",
        "filename": "src/libANGLE/renderer/gl/eagl/WindowSurfaceEAGL.h",
        "patchSetId": 2
      },
      "lineNbr": 67,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-01-04T03:38:33Z",
      "side": 1,
      "message": "Is this set in stone? Even if for the sake of uniformity, I\u0027d still prefer if cross-platform APIs that ANGLE uses elsewhere is used.\n\nIs the EAGL code at all exercised on our bots?",
      "range": {
        "startLine": 67,
        "startChar": 22,
        "endLine": 67,
        "endChar": 55
      },
      "revId": "c74052fdcf762523e910085c3b7d75a97b99a08d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b88d9f1d_691a0884",
        "filename": "src/libANGLE/renderer/gl/eagl/WindowSurfaceEAGL.h",
        "patchSetId": 2
      },
      "lineNbr": 67,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2020-01-05T22:24:32Z",
      "side": 1,
      "message": "Chrome\u0027s rendering engine will never port to iOS. Apple\u0027s policies forbid third-party companies from building new web browser engines for iOS. (Chrome on iOS is a wrapper around Apple\u0027s WebView.)\n\nNo, we don\u0027t build ANGLE on iOS on our bots, so this code path is only tested on WebKit\u0027s bots when they build with their ANGLE backend for WebGL.\n\nI\u0027ll take this feedback to Apple but would prefer to not change this CL during upstreaming as mentioned above.",
      "parentUuid": "9c11abbf_bbc41f15",
      "range": {
        "startLine": 67,
        "startChar": 22,
        "endLine": 67,
        "endChar": 55
      },
      "revId": "c74052fdcf762523e910085c3b7d75a97b99a08d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1704ce71_287bc30f",
        "filename": "src/libANGLE/renderer/gl/eagl/WindowSurfaceEAGL.mm",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 1326275
      },
      "writtenOn": "2020-01-06T16:22:16Z",
      "side": 1,
      "message": "TODO with name or angle bug",
      "revId": "c74052fdcf762523e910085c3b7d75a97b99a08d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3cfa6a4d_81db6edf",
        "filename": "src/libANGLE/renderer/gl/eagl/WindowSurfaceEAGL.mm",
        "patchSetId": 2
      },
      "lineNbr": 106,
      "author": {
        "id": 1326275
      },
      "writtenOn": "2020-01-06T16:22:16Z",
      "side": 1,
      "message": "TODO with name or angle bug",
      "revId": "c74052fdcf762523e910085c3b7d75a97b99a08d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c4cb275b_1e3ebf6f",
        "filename": "src/libANGLE/renderer/gl/renderergl_utils.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1287,
      "author": {
        "id": 1326275
      },
      "writtenOn": "2020-01-06T16:22:16Z",
      "side": 1,
      "message": "Have you looked at all the other defined(ANGLE_PLATFORM_APPLE) checks to see if there are any other issues like this?",
      "revId": "c74052fdcf762523e910085c3b7d75a97b99a08d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "da30226d_c5bef7c5",
        "filename": "src/libANGLE/validationES2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 6527,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-01-04T03:38:33Z",
      "side": 1,
      "message": "Again, would prefer if there wasn\u0027t an #if",
      "range": {
        "startLine": 6527,
        "startChar": 0,
        "endLine": 6527,
        "endChar": 71
      },
      "revId": "c74052fdcf762523e910085c3b7d75a97b99a08d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0fe32611_58fe5a9b",
        "filename": "src/libANGLE/validationES2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 6527,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2020-01-05T22:24:32Z",
      "side": 1,
      "message": "This is another piece of code which I think has been made unnecessary by my addition of support for the iOS Simulator in https://bugs.webkit.org/show_bug.cgi?id\u003d205618 . I will work to remove this change after this CL lands and the iOS Simulator support is upstreamed.",
      "parentUuid": "da30226d_c5bef7c5",
      "range": {
        "startLine": 6527,
        "startChar": 0,
        "endLine": 6527,
        "endChar": 71
      },
      "revId": "c74052fdcf762523e910085c3b7d75a97b99a08d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1af4b92e_10c81b89",
        "filename": "src/libANGLE/validationES2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 6527,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-01-06T02:39:15Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "0fe32611_58fe5a9b",
      "range": {
        "startLine": 6527,
        "startChar": 0,
        "endLine": 6527,
        "endChar": 71
      },
      "revId": "c74052fdcf762523e910085c3b7d75a97b99a08d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3daeb202_e6210086",
        "filename": "src/libGLESv2.gni",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-01-06T15:36:56Z",
      "side": 1,
      "message": "Will we enable the ios build in GN at some point? Will be helpful for the Metal back-end as well.",
      "revId": "c74052fdcf762523e910085c3b7d75a97b99a08d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}