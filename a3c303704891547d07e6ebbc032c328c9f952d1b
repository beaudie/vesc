{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "649d7f98_980dab38",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2021-05-07T04:58:44Z",
      "side": 1,
      "message": "Fran asked me to try to enable the \"coherent\" extension using the \"non-coherent\" extension (because two new games are using the coherent extension).  I thought the experiment would be simple, but I\u0027m not sure it is.  I can see that I don\u0027t understand the translator well enough.  I could use help.  Thanks in advance.",
      "revId": "a3c303704891547d07e6ebbc032c328c9f952d1b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0a08edf2_cc4a7a78",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-05-07T11:33:24Z",
      "side": 1,
      "message": "Does the application call the barrier function? Otherwise I don\u0027t know if this\u0027ll work. It\u0027s like glFramebufferFetchBarrierEXT or something.",
      "parentUuid": "649d7f98_980dab38",
      "revId": "a3c303704891547d07e6ebbc032c328c9f952d1b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "46d4dbc5_1a43bad7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2021-05-07T20:08:51Z",
      "side": 1,
      "message": "The one app that I\u0027ve seen logcat for (with all GLES API calls logged) shows that the app does NOT call FramebufferFetchBarrierEXT().  I think this approach may be a dead-end.\n\nI\u0027m going to put this on hold for now, and wait for Fran/Ben Gable to talk with the ISVs",
      "parentUuid": "0a08edf2_cc4a7a78",
      "revId": "a3c303704891547d07e6ebbc032c328c9f952d1b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d3be1534_56335170",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2021-05-07T20:08:51Z",
      "side": 1,
      "message": "Using this WIP CL to test the bots",
      "revId": "a3c303704891547d07e6ebbc032c328c9f952d1b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1d11954d_cf34e36d",
        "filename": "src/compiler/translator/builtin_variables.json",
        "patchSetId": 2
      },
      "lineNbr": 857,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2021-05-07T04:58:44Z",
      "side": 1,
      "message": "Changing the order of these changes the preferences of the symbolTable.findBuiltIn() method.  I don\u0027t think this is a good fix, but just works around an issue to get some tests to pass.",
      "range": {
        "startLine": 839,
        "startChar": 0,
        "endLine": 857,
        "endChar": 14
      },
      "revId": "a3c303704891547d07e6ebbc032c328c9f952d1b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "877ead53_0b2c8b37",
        "filename": "src/compiler/translator/builtin_variables.json",
        "patchSetId": 2
      },
      "lineNbr": 857,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2021-05-12T00:52:20Z",
      "side": 1,
      "message": "I don\u0027t think that is needed.  Removing it.",
      "parentUuid": "1d11954d_cf34e36d",
      "range": {
        "startLine": 839,
        "startChar": 0,
        "endLine": 857,
        "endChar": 14
      },
      "revId": "a3c303704891547d07e6ebbc032c328c9f952d1b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "05c6660e_8b6e3182",
        "filename": "src/libANGLE/Compiler.cpp",
        "patchSetId": 2
      },
      "lineNbr": 155,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2021-05-07T04:58:44Z",
      "side": 1,
      "message": "I thought this was a fast/efficient solution.  However, there is more than one \"built-in\" variable for the \"gl_lastFragData\" identifier, and setting this to true causes the symbolTable.findBuiltIn() method to always return the one associated for the \"coherent\" extension.\n\nIs there a better approach?  At some point, we know what the application enabled/required.  Can we change this decision once we know that?",
      "range": {
        "startLine": 155,
        "startChar": 4,
        "endLine": 155,
        "endChar": 17
      },
      "revId": "a3c303704891547d07e6ebbc032c328c9f952d1b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e4c47703_ce7006d2",
        "filename": "src/libANGLE/Compiler.cpp",
        "patchSetId": 2
      },
      "lineNbr": 155,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2021-05-12T00:52:20Z",
      "side": 1,
      "message": "I hope that enabling one extension or the other will help with this problem.  I\u0027ll learn more with Patchset 3.",
      "parentUuid": "05c6660e_8b6e3182",
      "range": {
        "startLine": 155,
        "startChar": 4,
        "endLine": 155,
        "endChar": 17
      },
      "revId": "a3c303704891547d07e6ebbc032c328c9f952d1b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c0bf75d6_bd63b10f",
        "filename": "src/libANGLE/Compiler.cpp",
        "patchSetId": 2
      },
      "lineNbr": 155,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2021-05-12T02:55:18Z",
      "side": 1,
      "message": "I think this is the right approach.",
      "parentUuid": "e4c47703_ce7006d2",
      "range": {
        "startLine": 155,
        "startChar": 4,
        "endLine": 155,
        "endChar": 17
      },
      "revId": "a3c303704891547d07e6ebbc032c328c9f952d1b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}