{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e74c8d8c_9cb629fa",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1393148
      },
      "writtenOn": "2021-01-15T06:09:28Z",
      "side": 1,
      "message": "Hi,Jamie,Shahbaz,Geoff. It\u0027s the implementation to compress pipelineCache. Please review.\nDisign doc: https://docs.google.com/document/d/1bxUU7tDy8kO4eMAXYv9c7IP0_xdupYSfdFLcI4IheLk/edit#heading\u003dh.8i8f2fpm9qkd",
      "revId": "59ff3ca11fd6fb5e10be4e0ac84f7a0ece82fa7a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "74483206_3014f1a6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-01-15T14:14:33Z",
      "side": 1,
      "message": "Thanks Amy. Please find some detailed comments below.",
      "revId": "59ff3ca11fd6fb5e10be4e0ac84f7a0ece82fa7a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1c5c3f9a_550595fb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-01-17T07:25:52Z",
      "side": 1,
      "message": "I wonder if this could be moved to the front-end, in BlobCache.cpp itself.\n\nRight now MemoryProgramCache::putProgram() calls gzip, and hands the program to BlobCache. Now we call gzip here too then hand to BlobCache.\n\nWhy not have BlobCache call gzip itself, and chunk up the data if needs be? Then everybody can benefit and we won\u0027t have this duplication of logic (compress / decompress).\n\nNot blocking the change though, if that\u0027s out of the scope of your work.",
      "revId": "59ff3ca11fd6fb5e10be4e0ac84f7a0ece82fa7a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d619f3c3_c8d9c9cc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-01-17T07:26:31Z",
      "side": 1,
      "message": "You might be interested in following this as well: https://gitlab.khronos.org/vulkan/vulkan/-/issues/2499",
      "revId": "59ff3ca11fd6fb5e10be4e0ac84f7a0ece82fa7a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "403ff37d_833bb536",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1393148
      },
      "writtenOn": "2021-01-19T13:47:19Z",
      "side": 1,
      "message": "Thanks Shahbaz, It\u0027s a good idea to implement some functions in blobcache.cpp. I have moved basic compress and decompress functions to blobcache.cpp in new patchset. Should I replace the logic in MemoryProgramCache with new added function?",
      "parentUuid": "1c5c3f9a_550595fb",
      "revId": "59ff3ca11fd6fb5e10be4e0ac84f7a0ece82fa7a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f76b35f2_5635ffa1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1393148
      },
      "writtenOn": "2021-01-19T13:47:19Z",
      "side": 1,
      "message": "Thanks Jamie.",
      "parentUuid": "74483206_3014f1a6",
      "revId": "59ff3ca11fd6fb5e10be4e0ac84f7a0ece82fa7a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "df54c6de_fb0d8f0b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1393148
      },
      "writtenOn": "2021-01-19T13:47:19Z",
      "side": 1,
      "message": "Thanks,Shahbaz üëç",
      "parentUuid": "d619f3c3_c8d9c9cc",
      "revId": "59ff3ca11fd6fb5e10be4e0ac84f7a0ece82fa7a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a0e5de71_9f89f1d9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-01-20T05:22:14Z",
      "side": 1,
      "message": "If it\u0027s no trouble, yes please.",
      "parentUuid": "403ff37d_833bb536",
      "revId": "59ff3ca11fd6fb5e10be4e0ac84f7a0ece82fa7a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "647b17b6_9c83abb9",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 2068,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-01-15T14:14:33Z",
      "side": 1,
      "message": "nit: if you pass the mPhysicalDeviceProperties to this function it can also be local static.",
      "range": {
        "startLine": 2068,
        "startChar": 17,
        "endLine": 2068,
        "endChar": 47
      },
      "revId": "59ff3ca11fd6fb5e10be4e0ac84f7a0ece82fa7a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9c5a53cc_c3676cdd",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 2078,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-01-17T07:25:52Z",
      "side": 1,
      "message": "nit: \"chunk index\" is not just \"for good measure\"",
      "range": {
        "startLine": 2078,
        "startChar": 49,
        "endLine": 2078,
        "endChar": 66
      },
      "revId": "59ff3ca11fd6fb5e10be4e0ac84f7a0ece82fa7a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e3bb743e_f6def469",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 2169,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-01-15T14:14:33Z",
      "side": 1,
      "message": "Because this function uses no member variables, it can be a private static function in this file, in the anonymous namespace {} block at the top of the file. This encapsulates the function in a smaller scope which is a bit cleaner.",
      "range": {
        "startLine": 2169,
        "startChar": 17,
        "endLine": 2169,
        "endChar": 40
      },
      "revId": "59ff3ca11fd6fb5e10be4e0ac84f7a0ece82fa7a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "53968665_117b6318",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 2169,
      "author": {
        "id": 1393148
      },
      "writtenOn": "2021-01-19T13:47:19Z",
      "side": 1,
      "message": "Hi Jamie, basic compress and decompress function have been moved to BlobCache.cpp. Do you agree with this change?",
      "parentUuid": "e3bb743e_f6def469",
      "range": {
        "startLine": 2169,
        "startChar": 17,
        "endLine": 2169,
        "endChar": 40
      },
      "revId": "59ff3ca11fd6fb5e10be4e0ac84f7a0ece82fa7a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "095c9710_f993dade",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 2169,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-01-21T20:28:33Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "53968665_117b6318",
      "range": {
        "startLine": 2169,
        "startChar": 17,
        "endLine": 2169,
        "endChar": 40
      },
      "revId": "59ff3ca11fd6fb5e10be4e0ac84f7a0ece82fa7a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "572be883_cc28efeb",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 2200,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-01-15T14:14:33Z",
      "side": 1,
      "message": "if you pass the mPhysicalDeviceProperties in here it can also be local static.",
      "range": {
        "startLine": 2200,
        "startChar": 17,
        "endLine": 2200,
        "endChar": 48
      },
      "revId": "59ff3ca11fd6fb5e10be4e0ac84f7a0ece82fa7a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f13c9a91_9f301b37",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 2210,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-01-15T14:14:33Z",
      "side": 1,
      "message": "nit: larger",
      "range": {
        "startLine": 2210,
        "startChar": 40,
        "endLine": 2210,
        "endChar": 46
      },
      "revId": "59ff3ca11fd6fb5e10be4e0ac84f7a0ece82fa7a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "356e88c7_ad1e5d4b",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 2210,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-01-15T14:14:33Z",
      "side": 1,
      "message": "nit: use the named constant here.",
      "range": {
        "startLine": 2210,
        "startChar": 52,
        "endLine": 2210,
        "endChar": 56
      },
      "revId": "59ff3ca11fd6fb5e10be4e0ac84f7a0ece82fa7a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae9afb17_d6e7cf1a",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 2214,
      "author": {
        "id": 1393148
      },
      "writtenOn": "2021-01-15T06:40:27Z",
      "side": 1,
      "message": "Just like the comments here. There is no good way to query the limit size of android. One limitation is the maxValueSize 64k, the other is the total maxSize 2M. Is it possible to add the implementation of querying android\u0027s actual limit size in ANGLE later? Because the user may enlarge or delete the limit size in app\u0027s testing or using. If so, the compression and decompression here will be needless.",
      "revId": "59ff3ca11fd6fb5e10be4e0ac84f7a0ece82fa7a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d02a371a_a892b746",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 2214,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-01-15T14:14:33Z",
      "side": 1,
      "message": "Sounds fine. Is this an Android platform limitation? We can potentially raise this with the Android folks.\n\nSuggest you make this a static constexpr and call it kMaxBlobCacheSize.",
      "parentUuid": "ae9afb17_d6e7cf1a",
      "revId": "59ff3ca11fd6fb5e10be4e0ac84f7a0ece82fa7a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "673e60d2_8bd970f0",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 2214,
      "author": {
        "id": 1424723
      },
      "writtenOn": "2021-01-18T09:02:50Z",
      "side": 1,
      "message": "I think it worth raising to Android folks.\nJamie, could you please help do that to check if there\u0027s a elegant way to query the limit?",
      "parentUuid": "d02a371a_a892b746",
      "revId": "59ff3ca11fd6fb5e10be4e0ac84f7a0ece82fa7a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9db2a115_6354c2c6",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 2214,
      "author": {
        "id": 1393148
      },
      "writtenOn": "2021-01-19T13:47:19Z",
      "side": 1,
      "message": "\" Is this an Android platform limitation? \"\nYes, Jamie, you can check the limitation in https://android.googlesource.com/platform/frameworks/native/+/master/opengl/libs/EGL/egl_cache.cpp\n\"\n// Cache size limits.\nstatic const size_t maxKeySize \u003d 12 * 1024;\nstatic const size_t maxValueSize \u003d 64 * 1024;\nstatic const size_t maxTotalSize \u003d 2 * 1024 * 1024;\n\"",
      "parentUuid": "673e60d2_8bd970f0",
      "revId": "59ff3ca11fd6fb5e10be4e0ac84f7a0ece82fa7a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "24d78686_f3ec74c4",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 2214,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-01-21T20:28:33Z",
      "side": 1,
      "message": "Done, will follow up with the response from the Android graphics team.",
      "parentUuid": "9db2a115_6354c2c6",
      "revId": "59ff3ca11fd6fb5e10be4e0ac84f7a0ece82fa7a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "20ff4e89_eba4aeb9",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 2223,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-01-15T14:14:33Z",
      "side": 1,
      "message": "nit: I\u0027d suggest making this const and assigning and declaring it in the same line.",
      "range": {
        "startLine": 2223,
        "startChar": 4,
        "endLine": 2223,
        "endChar": 14
      },
      "revId": "59ff3ca11fd6fb5e10be4e0ac84f7a0ece82fa7a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "919e617d_61585333",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 2225,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-01-15T14:14:33Z",
      "side": 1,
      "message": "I don\u0027t understand this line, it should be \"1\" always and do nothing.",
      "range": {
        "startLine": 2224,
        "startChar": 38,
        "endLine": 2225,
        "endChar": 64
      },
      "revId": "59ff3ca11fd6fb5e10be4e0ac84f7a0ece82fa7a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2d00b7d3_03977e0f",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 2225,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-01-17T07:25:52Z",
      "side": 1,
      "message": "It\u0027s roundUp(x, y) / y, so not 1.\n\nWe have a helper for this actually: UnsignedCeilDivide",
      "parentUuid": "919e617d_61585333",
      "range": {
        "startLine": 2224,
        "startChar": 38,
        "endLine": 2225,
        "endChar": 64
      },
      "revId": "59ff3ca11fd6fb5e10be4e0ac84f7a0ece82fa7a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "626eac05_2f911a25",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 2225,
      "author": {
        "id": 1393148
      },
      "writtenOn": "2021-01-19T13:47:19Z",
      "side": 1,
      "message": "replace roundUp with UnsignedCeilDivide.",
      "parentUuid": "2d00b7d3_03977e0f",
      "range": {
        "startLine": 2224,
        "startChar": 38,
        "endLine": 2225,
        "endChar": 64
      },
      "revId": "59ff3ca11fd6fb5e10be4e0ac84f7a0ece82fa7a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c83a577b_1db505c7",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 2227,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-01-15T14:14:33Z",
      "side": 1,
      "message": "same here",
      "range": {
        "startLine": 2226,
        "startChar": 54,
        "endLine": 2227,
        "endChar": 53
      },
      "revId": "59ff3ca11fd6fb5e10be4e0ac84f7a0ece82fa7a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "713ee449_d2ebfd13",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 2229,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-01-15T14:14:33Z",
      "side": 1,
      "message": "nit: I\u0027d suggest defining int chunkIndex here to be cleaner.",
      "range": {
        "startLine": 2229,
        "startChar": 9,
        "endLine": 2229,
        "endChar": 19
      },
      "revId": "59ff3ca11fd6fb5e10be4e0ac84f7a0ece82fa7a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fdf762e2_753776e3",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 2229,
      "author": {
        "id": 1393148
      },
      "writtenOn": "2021-01-19T13:47:19Z",
      "side": 1,
      "message": "To decrease the \"memcpy\" operation, replace the data type from \"int\" to \"uint8_t\".\nThen I can set chunkIndex and numChunks by:\n\"\nkeyData.data()[0] \u003d chunkIndex;\nkeyData.data()[1] \u003d numChunks;\n\"",
      "parentUuid": "713ee449_d2ebfd13",
      "range": {
        "startLine": 2229,
        "startChar": 9,
        "endLine": 2229,
        "endChar": 19
      },
      "revId": "59ff3ca11fd6fb5e10be4e0ac84f7a0ece82fa7a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "395637fd_126fa80a",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 2248,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-01-15T14:14:33Z",
      "side": 1,
      "message": "nit: if (!resize)\n{\n   return false;\n}\n\n...\n\nor generate an error as described below.",
      "range": {
        "startLine": 2237,
        "startChar": 0,
        "endLine": 2248,
        "endChar": 9
      },
      "revId": "59ff3ca11fd6fb5e10be4e0ac84f7a0ece82fa7a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "46833521_904a35ec",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 2259,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-01-15T14:14:33Z",
      "side": 1,
      "message": "looks like this can also be private static.",
      "range": {
        "startLine": 2259,
        "startChar": 28,
        "endLine": 2259,
        "endChar": 29
      },
      "revId": "59ff3ca11fd6fb5e10be4e0ac84f7a0ece82fa7a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "99de1106_9f573653",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 2272,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-01-15T14:14:33Z",
      "side": 1,
      "message": "nit: if (!...)\n{\n   return false;\n}\n\n...",
      "range": {
        "startLine": 2270,
        "startChar": 0,
        "endLine": 2272,
        "endChar": 5
      },
      "revId": "59ff3ca11fd6fb5e10be4e0ac84f7a0ece82fa7a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2296b6b2_527b4be1",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 2284,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-01-15T14:14:33Z",
      "side": 1,
      "message": "this should generate an error. recommend returning angle::Result and using ANGLE_VK_CHECK here, and returning Continue on early exit/success.",
      "range": {
        "startLine": 2281,
        "startChar": 0,
        "endLine": 2284,
        "endChar": 9
      },
      "revId": "59ff3ca11fd6fb5e10be4e0ac84f7a0ece82fa7a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e738c172_70938df3",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 2284,
      "author": {
        "id": 1393148
      },
      "writtenOn": "2021-01-19T13:47:19Z",
      "side": 1,
      "message": "Static compressAndStorePipelineCacheVk() and getAndDecompressPipelineCacheVk() function return angle::Result now.\nBasic compress and decompress function have been moved to BlobCache.cpp. Should I add  ANGLE_VK_CHECK in BlobCache.cpp?",
      "parentUuid": "2296b6b2_527b4be1",
      "range": {
        "startLine": 2281,
        "startChar": 0,
        "endLine": 2284,
        "endChar": 9
      },
      "revId": "59ff3ca11fd6fb5e10be4e0ac84f7a0ece82fa7a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "484fed8b_20c8bfab",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 2284,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-01-21T20:28:33Z",
      "side": 1,
      "message": "No, BlobCache doesn\u0027t have access to VK.",
      "parentUuid": "e738c172_70938df3",
      "range": {
        "startLine": 2281,
        "startChar": 0,
        "endLine": 2284,
        "endChar": 9
      },
      "revId": "59ff3ca11fd6fb5e10be4e0ac84f7a0ece82fa7a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "07091a89_72329e8e",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 2295,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-01-15T14:14:33Z",
      "side": 1,
      "message": "similarly:\n\nif (!)\n{\n    return false;\n}\n\n...",
      "range": {
        "startLine": 2293,
        "startChar": 11,
        "endLine": 2295,
        "endChar": 13
      },
      "revId": "59ff3ca11fd6fb5e10be4e0ac84f7a0ece82fa7a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eb361838_be95057e",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 2319,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-01-15T14:14:33Z",
      "side": 1,
      "message": "nit: memorybuffer for error handling.",
      "range": {
        "startLine": 2319,
        "startChar": 13,
        "endLine": 2319,
        "endChar": 19
      },
      "revId": "59ff3ca11fd6fb5e10be4e0ac84f7a0ece82fa7a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0486314e_81447223",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 2319,
      "author": {
        "id": 1393148
      },
      "writtenOn": "2021-01-19T13:47:19Z",
      "side": 1,
      "message": "replace:\nangle::MemoryBuffer uncompressedData;\nif (!uncompressedData.resize(uncompressedSize))\n{\n   ANGLE_VK_CHECK(display, false, VK_ERROR_INITIALIZATION_FAILED);\n   return angle::Result::Continue;\n}",
      "parentUuid": "eb361838_be95057e",
      "range": {
        "startLine": 2319,
        "startChar": 13,
        "endLine": 2319,
        "endChar": 19
      },
      "revId": "59ff3ca11fd6fb5e10be4e0ac84f7a0ece82fa7a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ef9b2f0_5d264f84",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 2319,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-01-21T20:28:33Z",
      "side": 1,
      "message": "Instead:\n\nANGLE_VK_CHECK(!uncompressedData.resize());\n\nYou want a flagrant error when memory can\u0027t be allocated.",
      "parentUuid": "0486314e_81447223",
      "range": {
        "startLine": 2319,
        "startChar": 13,
        "endLine": 2319,
        "endChar": 19
      },
      "revId": "59ff3ca11fd6fb5e10be4e0ac84f7a0ece82fa7a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d254e41a_72eb6134",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 2319,
      "author": {
        "id": 1393148
      },
      "writtenOn": "2021-01-22T07:54:14Z",
      "side": 1,
      "message": "Hi Jamie, basic decompress has been moved to BlobCache.cpp (can\u0027t use ANGLE_VK_CHECK).\nBut there are still resize() called in CompressAndStorePipelineCacheVk() and GetAndDecompressPipelineCacheVk().\nFor example:\n\"\n    // Allocate enough memory.\n    angle::MemoryBuffer compressedData;\n    if (!compressedData.resize(chunkSize * numChunks))\n    {\n        ANGLE_VK_CHECK(display, false, VK_ERROR_INITIALIZATION_FAILED);\n        return angle::Result::Continue;\n    }\n\"\nShould I change them to \"ANGLE_VK_CHECK(display, !compressedData.resize(chunkSize * numChunks),VK_ERROR_INITIALIZATION_FAILED);\"?\nMaybe it\u0027s better to return \"angle::Result::Continue\" like here to continue the following process?",
      "parentUuid": "4ef9b2f0_5d264f84",
      "range": {
        "startLine": 2319,
        "startChar": 13,
        "endLine": 2319,
        "endChar": 19
      },
      "revId": "59ff3ca11fd6fb5e10be4e0ac84f7a0ece82fa7a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "98c0c843_1eff4c68",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 2319,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-01-22T14:04:46Z",
      "side": 1,
      "message": "Yes please make the change. Resize failure should not be a fail-and-continue mode since it means OOM and we should abort ASAP.",
      "parentUuid": "d254e41a_72eb6134",
      "range": {
        "startLine": 2319,
        "startChar": 13,
        "endLine": 2319,
        "endChar": 19
      },
      "revId": "59ff3ca11fd6fb5e10be4e0ac84f7a0ece82fa7a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6733cdd8_f6ce4d0f",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 2319,
      "author": {
        "id": 1393148
      },
      "writtenOn": "2021-01-25T08:06:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "98c0c843_1eff4c68",
      "range": {
        "startLine": 2319,
        "startChar": 13,
        "endLine": 2319,
        "endChar": 19
      },
      "revId": "59ff3ca11fd6fb5e10be4e0ac84f7a0ece82fa7a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d856dcee_dbbd52b9",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 2403,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-01-15T14:14:33Z",
      "side": 1,
      "message": "make this ANGLE_VK_CHECK. If there\u0027s a \"false\" then something very bad happened.\n\nAlternately make compressAndStore return angle::Result and process the error inside compressAndStore.",
      "range": {
        "startLine": 2403,
        "startChar": 4,
        "endLine": 2403,
        "endChar": 7
      },
      "revId": "59ff3ca11fd6fb5e10be4e0ac84f7a0ece82fa7a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}