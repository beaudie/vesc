{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "72edec49_da8738db",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-06-20T14:02:30Z",
      "side": 1,
      "message": "(no opinion)",
      "revId": "6a0b59527717a2923119499b7192260dd92fa421",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dc8a827b_da6f8266",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2024-08-19T13:04:03Z",
      "side": 1,
      "message": "Could you add a simple test for this? \n\nShould be enough to copy the body from RobustResourceInitTestES3.CheckDepthStencilRenderbufferIsCleared minus the framebuffer init code and test with the default framebuffer. RobustResourceInitTest.SurfaceInitialized already covers the color clearing for default framebuffers.",
      "revId": "6a0b59527717a2923119499b7192260dd92fa421",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6ae8cb8a_d06c5b9f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1449558
      },
      "writtenOn": "2024-08-21T11:30:10Z",
      "side": 1,
      "message": "opens a can of worms.",
      "parentUuid": "dc8a827b_da6f8266",
      "revId": "6a0b59527717a2923119499b7192260dd92fa421",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "40e41948_98609ba1",
        "filename": "src/libANGLE/renderer/metal/mtl_state_cache.h",
        "patchSetId": 1
      },
      "lineNbr": 362,
      "author": {
        "id": 1543187
      },
      "writtenOn": "2024-06-20T18:35:41Z",
      "side": 1,
      "message": "I am not familiar with how robustness interact with framebuffer\u0027s clear. But what does this default clearDepth do? How is it different from setting it explicitly in InitializeDepthStencilTextureContentsGPU?",
      "range": {
        "startLine": 362,
        "startChar": 24,
        "endLine": 362,
        "endChar": 27
      },
      "revId": "6a0b59527717a2923119499b7192260dd92fa421",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b2cda7c_0920b690",
        "filename": "src/libANGLE/renderer/metal/mtl_state_cache.h",
        "patchSetId": 1
      },
      "lineNbr": 362,
      "author": {
        "id": 1449558
      },
      "writtenOn": "2024-08-16T06:50:54Z",
      "side": 1,
      "message": "There\u0027s two places that use  \n  depthAttachment.loadAction \u003d MTLLoadActionClear;\n\nOne place uses correct excplict assignement of default value of 1.0. (mtl_utils.mm)\nOne place uses incorrect implicit value 0. (SurfaceMtl.mm)\n\nThis change fixes the bug and future similar bugs by setting the implicit value correct (1.0)\n\nIf I understand correctly, the depth load action clear is done in cases when we have marked the depth as \"don\u0027t care\", for example with invalidate framebuffer. With robustness / WebGL on, we have to have a defined value for the depth.",
      "parentUuid": "40e41948_98609ba1",
      "range": {
        "startLine": 362,
        "startChar": 24,
        "endLine": 362,
        "endChar": 27
      },
      "revId": "6a0b59527717a2923119499b7192260dd92fa421",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}