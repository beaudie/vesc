{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e137bbc6_1cf755e5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-03-20T01:15:05Z",
      "side": 1,
      "message": "Nice! Can you please take a chrome or perfetto trace with this to make sure our existing events are making it through without problem?",
      "revId": "fceda2f29239339d120b16cee795a6333a3ebacb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4fd29bb7_561f8239",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1557704
      },
      "writtenOn": "2023-03-20T16:08:31Z",
      "side": 1,
      "message": "Could you point me to some documentation on how to do that? Never done it before. Thanks.",
      "parentUuid": "e137bbc6_1cf755e5",
      "revId": "fceda2f29239339d120b16cee795a6333a3ebacb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3abbffcf_3a50220f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-03-20T16:41:32Z",
      "side": 1,
      "message": "One way is to test it with Chrome. Install Chrome Dev (Linux) or Canary (Windows), then use `update_chrome_angle.py` (on a non-component build, i.e. everything statically linked, also enable events: `angle_enable_trace \u003d true`) to replace the ANGLE libs inside the Chrome installation. If you encounter issues with the script, it\u0027s really just `libGLESv2.so` and `libEGL.so` that are being copied to the installation dir.\n\nThen run chrome and use chrome://tracing/ to capture a trace of something (like https://webglsamples.org/aquarium/aquarium.html), use the \"Rendering\" category. The trace should have ANGLE events in it (see the GPU process).",
      "parentUuid": "4fd29bb7_561f8239",
      "revId": "fceda2f29239339d120b16cee795a6333a3ebacb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b7bb2446_2f11ee69",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2023-03-20T16:53:51Z",
      "side": 1,
      "message": "Looks good to me. Please make sure existing trace still working (as brought up in shabi\u0027s comment) before landing.",
      "revId": "fceda2f29239339d120b16cee795a6333a3ebacb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff17692c_9ec4c9f2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1557704
      },
      "writtenOn": "2023-03-21T00:04:17Z",
      "side": 1,
      "message": "So I tried following these steps but I\u0027m not able to build angle in a way that works.\n\n1. Install Chrome Canary\n2. `cd c:\\src\\angle`\n3. `gn args out/Debug`\n4. Set my args as follows:\n```\nuse_goma \u003d true\nis_component_build \u003d false \nangle_enable_trace \u003d true\nbuild_angle_trace_perf_tests \u003d false\n```\n5. `autoninja -C out/Debug`\n6. (build fails for capture_replay_tests.exe because platform methods aren\u0027t found (`lld-link: error: undefined symbol: __declspec(dllimport) public: __cdecl angle::PlatformMethods::PlatformMethods(void)`) - however `libGLESv2.dll` and `libEGL.dll` appear correctly rebuilt.\n7. python scripts/update_chrome_angle.py\n```\nCopying binaries from out\\Debug to C:\\Users\\gregschlom\\AppData\\Local\\Google\\Chrome SxS\\Application\\113.0.5665.2.\n - out\\Debug\\libGLESv2.dll   --\u003e   C:\\Users\\gregschlom\\AppData\\Local\\Google\\Chrome SxS\\Application\\113.0.5665.2\\libGLESv2.dll\n - out\\Debug\\libGLESv2.dll.pdb   --\u003e   C:\\Users\\gregschlom\\AppData\\Local\\Google\\Chrome SxS\\Application\\113.0.5665.2\\libGLESv2.dll.pdb\n - out\\Debug\\libEGL.dll   --\u003e   C:\\Users\\gregschlom\\AppData\\Local\\Google\\Chrome SxS\\Application\\113.0.5665.2\\libEGL.dll\n - out\\Debug\\libEGL.dll.pdb   --\u003e   C:\\Users\\gregschlom\\AppData\\Local\\Google\\Chrome SxS\\Application\\113.0.5665.2\\libEGL.dll.pdb\n```\n\nHowever when I open Chrome Canary and visit https://webglsamples.org/aquarium/aquarium.html, the page fails with this error:\n\n```\n\nStatus: Could not create a WebGL context, VENDOR \u003d 0x10de, DEVICE \u003d 0x1fb9, GL_VENDOR \u003d Google Inc. (NVIDIA), GL_RENDERER \u003d ANGLE (NVIDIA, NVIDIA Quadro T1000 with Max-Q Design Direct3D11 vs_5_0 ps_5_0, D3D11-31.0.15.1713), GL_VERSION \u003d 31.0.15.1713, Sandboxed \u003d yes, Optimus \u003d no, AMD switchable \u003d no, Reset notification strategy \u003d 0x8252, ErrorMessage \u003d BindToCurrentSequence failed: .\n\nIt does not appear your computer supports WebGL.\nClick here for more information.\n\nStatus: Could not create a WebGL context, VENDOR \u003d 0x10de, DEVICE \u003d 0x1fb9, GL_VENDOR \u003d Google Inc. (NVIDIA), GL_RENDERER \u003d ANGLE (NVIDIA, NVIDIA Quadro T1000 with Max-Q Design Direct3D11 vs_5_0 ps_5_0, D3D11-31.0.15.1713), GL_VERSION \u003d 31.0.15.1713, Sandboxed \u003d yes, Optimus \u003d no, AMD switchable \u003d no, Reset notification strategy \u003d 0x8252, ErrorMessage \u003d BindToCurrentSequence failed: .\n```\n\nBut if I copy the original DLLs from my prod Chrome, then the page renders correctly.\n\nNote: **I get the same error when I build the master branch (without the changes in this CL**, so this is definitely not related to this particular CL, but with the way I build ANGLE.",
      "parentUuid": "3abbffcf_3a50220f",
      "revId": "fceda2f29239339d120b16cee795a6333a3ebacb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "babd565b_a100cf15",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2023-03-21T15:12:48Z",
      "side": 1,
      "message": "The flags you added all look normal to me. I\u0027ve seen issues in the past with x86 vs x64 dlls but I don\u0027t think we ship x86 anymore.\n\nTake a look at about:gpu for the GL_RENDERER and error log at the bottom to verify Chrome\u0027s loading the ANGLE DLL at all. \n\n\nIf you want to proceed with this path, I\u0027d recommend building Chrome from scratch, it\u0027s fairly similar to building ANGLE. Otherwise you\u0027ll have to attach a debugger to figure out what\u0027s going wrong with the dropped DLLs.",
      "parentUuid": "ff17692c_9ec4c9f2",
      "revId": "fceda2f29239339d120b16cee795a6333a3ebacb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3520123e_79f398f0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-03-21T15:14:43Z",
      "side": 1,
      "message": "I often do this on Linux without problem, any chance you could try there?",
      "parentUuid": "babd565b_a100cf15",
      "revId": "fceda2f29239339d120b16cee795a6333a3ebacb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "173df09a_4832aa37",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1557704
      },
      "writtenOn": "2023-03-21T17:46:01Z",
      "side": 1,
      "message": "I\u0027m going to try on Linux but it\u0027s going to take a while since I need to download the angle repo and build from scratch.\n\nIn the meantime I made some progress on Windows: `about:gpu` showed that angle was calling `UNREACHABLE` [here](http://cs/sc-dev/external/angle/src/common/utilities.cpp;l\u003d1393;rcl\u003dd417ff2385758a44d8ad29be9b6a7dbfb88ffb37).\n\nAdding a log line there showed that the path was an empty string.\n\nI tried attaching a debugger but it didn\u0027t work. I made the hypothesis that it wasn\u0027t working due Chrome\u0027s sandboxing, so I tried running with `--no-sandbox` flag and that solved ANGLE\u0027s issue! Now I was able to view the aquarium demo properly (although at only 5 FPS, which I assume is due to this being a debug build).\n\nAnyway, tried capturing a trace with `chrome://tracing/`, but couldn\u0027t get any ANGLE events. (This is on the main branch, without the changes from this CL). \n\nClicking around a bit more, it seems that the `gpu.angle` category is disabled by default, even when selecting the Rendering category. I had to click on Edit categories and manually add `gpu.angle`.\n\nHowever, even after this, I still couldn\u0027t get any ANGLE events (again, on the main branch, without these changes).\n\nI\u0027ll try on Linux when it\u0027s done building, but I\u0027d appreciate any insights.",
      "parentUuid": "3520123e_79f398f0",
      "revId": "fceda2f29239339d120b16cee795a6333a3ebacb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5d99ead1_8ff9a53a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1557704
      },
      "writtenOn": "2023-03-21T19:17:52Z",
      "side": 1,
      "message": "Ok, same thing on Linux, I can\u0027t see any ANGLE events. Is there any other flag or step I have to take in order to get ANGLE events in the trace?",
      "parentUuid": "173df09a_4832aa37",
      "revId": "fceda2f29239339d120b16cee795a6333a3ebacb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3e141d9a_7152044c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-03-21T19:56:58Z",
      "side": 1,
      "message": "I just ran this, I can see events (thanks for figuring out the `gpu.angle` category that needs to be enabled):\n\n```\n$ google-chrome-unstable --use-angle\u003dvulkan --enable-logging --disable-gpu-watchdog --enable-features\u003dVizDisplayCompositor,UseSkiaRenderer,UiGpuRasterization,Vulkan --enable-oop-rasterization --enable-gpu-rasterization --force-gpu-rasterization --show-fps-counter-no --disable-gpu-sandbox --vulkan\u003dnative\n```",
      "parentUuid": "5d99ead1_8ff9a53a",
      "revId": "fceda2f29239339d120b16cee795a6333a3ebacb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fbdc9d53_6bab33f1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-03-21T19:58:57Z",
      "side": 1,
      "message": "And since I got my hands dirty, I tried your change, it works fine.",
      "parentUuid": "3e141d9a_7152044c",
      "revId": "fceda2f29239339d120b16cee795a6333a3ebacb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a5937fcb_e21ab266",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1557704
      },
      "writtenOn": "2023-03-21T20:50:13Z",
      "side": 1,
      "message": "Thanks for verifying for me. My mistake was to search for events by doing ctrl+f on \"angle\". I didn\u0027t realize the events don\u0027t have angle in the name, only in the category name, and that there\u0027s a separate search function in the tool that one can access with `/`.\n\nUsing that, I was able to find angle events in both Windows and Linux.",
      "parentUuid": "fbdc9d53_6bab33f1",
      "revId": "fceda2f29239339d120b16cee795a6333a3ebacb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}