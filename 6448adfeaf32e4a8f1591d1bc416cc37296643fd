{
  "comments": [
    {
      "key": {
        "uuid": "274e5eac_e5056c29",
        "filename": "src/libANGLE/RefCountObject.h",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1130144
      },
      "writtenOn": "2016-01-12T02:11:58Z",
      "side": 1,
      "message": "While you\u0027re here, you should make the destructor be protected. Release should be the only way to free RefCounted objects.",
      "range": {
        "startLine": 26,
        "startChar": 4,
        "endLine": 26,
        "endChar": 29
      },
      "revId": "6448adfeaf32e4a8f1591d1bc416cc37296643fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6777760f_86d64a20",
        "filename": "src/libANGLE/RefCountObject.h",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 1117984
      },
      "writtenOn": "2016-01-14T19:14:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "274e5eac_e5056c29",
      "range": {
        "startLine": 26,
        "startChar": 4,
        "endLine": 26,
        "endChar": 29
      },
      "revId": "6448adfeaf32e4a8f1591d1bc416cc37296643fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6aa2db12_8ea51b73",
        "filename": "src/libANGLE/RefCountObject.h",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1117984
      },
      "writtenOn": "2016-01-07T10:55:19Z",
      "side": 1,
      "message": "Remark about formatting:\nI put the implementations in the class, I think that is the way it is done\nin this project. \n\nPersonally I would have preferred to put them outside the class as inline functions. I think that makes it easier for a reader to see what methods \nare provided by a class.",
      "revId": "6448adfeaf32e4a8f1591d1bc416cc37296643fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "27673e34_da3c856b",
        "filename": "src/libANGLE/RefCountObject.h",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1130144
      },
      "writtenOn": "2016-01-12T02:11:58Z",
      "side": 1,
      "message": "FYI, when LTCG (Link Time Code Generation) is enabled in Microsoft compilers, the compiler will inline methods even if they\u0027re in the cpp file. \nInlining every addRef and release will increase the binary size and may not give performance benefits. Be sure and measure before going down this route.",
      "parentUuid": "6aa2db12_8ea51b73",
      "revId": "6448adfeaf32e4a8f1591d1bc416cc37296643fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8780ea14_07e896d0",
        "filename": "src/libANGLE/RefCountObject.h",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1117984
      },
      "writtenOn": "2016-01-13T22:24:02Z",
      "side": 1,
      "message": "So in that case it does not matter if I put the code in the .h or .cpp file, LTCG will do what it seems best.",
      "parentUuid": "27673e34_da3c856b",
      "revId": "6448adfeaf32e4a8f1591d1bc416cc37296643fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "07623a24_b0f281c1",
        "filename": "src/libANGLE/RefCountObject.h",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1130144
      },
      "writtenOn": "2016-01-14T20:00:24Z",
      "side": 1,
      "message": "In the LTCG case, it is generally better to put all code in the .cpp file and let the compiler do the right thing. For paths that show up as hot, you can inline as appropriate.\n\nNot a big deal here, but in general, the more code you put in header files, the more header files you have to include in more places, the more code the compiler has to parse and the more entangled your code gets. I usually avoid putting code in header files whenever possible.  \n\nWhile it is true that Angle applications are content driven, the content is in the heap. CPU instruction caches are at a premium. Smaller code is, generally speaking, faster code, especially on mobile hardware.",
      "parentUuid": "8780ea14_07e896d0",
      "revId": "6448adfeaf32e4a8f1591d1bc416cc37296643fd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}