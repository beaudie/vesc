{
  "comments": [
    {
      "key": {
        "uuid": "185442e3_73651ac1",
        "filename": "src/libANGLE/renderer/gl/glx/FunctionsGLX.cpp",
        "patchSetId": 1
      },
      "lineNbr": 149,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-07-20T21:05:01Z",
      "side": 1,
      "message": "why not just make this an #else case of !defined(ANGLE_LINK_GLX) and use one macro? Is there some weird string macro substitution problem that I\u0027m not understanding?",
      "range": {
        "startLine": 144,
        "startChar": 0,
        "endLine": 149,
        "endChar": 6
      },
      "revId": "bd8f213675f22d2f7dcb32d439fe03a5aa78ccd3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0d0ec228_5aaa718b",
        "filename": "src/libANGLE/renderer/gl/glx/FunctionsGLX.cpp",
        "patchSetId": 1
      },
      "lineNbr": 149,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2015-07-21T00:52:37Z",
      "side": 1,
      "message": "No, it is just that I still need GET_PROC_OR_ERROR to load extension entrypoints, see [1].",
      "parentUuid": "185442e3_73651ac1",
      "range": {
        "startLine": 144,
        "startChar": 0,
        "endLine": 149,
        "endChar": 6
      },
      "revId": "bd8f213675f22d2f7dcb32d439fe03a5aa78ccd3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "78429e31_9fa7e318",
        "filename": "src/libANGLE/renderer/gl/glx/FunctionsGLX.cpp",
        "patchSetId": 1
      },
      "lineNbr": 149,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-07-21T14:18:57Z",
      "side": 1,
      "message": "OK, thanks.",
      "parentUuid": "0d0ec228_5aaa718b",
      "range": {
        "startLine": 144,
        "startChar": 0,
        "endLine": 149,
        "endChar": 6
      },
      "revId": "bd8f213675f22d2f7dcb32d439fe03a5aa78ccd3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8d00f2f0_5e37116c",
        "filename": "src/libANGLE/renderer/gl/glx/FunctionsGLX.cpp",
        "patchSetId": 1
      },
      "lineNbr": 208,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2015-07-21T00:52:37Z",
      "side": 1,
      "message": "[1]",
      "revId": "bd8f213675f22d2f7dcb32d439fe03a5aa78ccd3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "786d3eb3_33b9c835",
        "filename": "src/libGLESv2.gypi",
        "patchSetId": 1
      },
      "lineNbr": 736,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-07-20T21:05:01Z",
      "side": 1,
      "message": "I know this is internal test-only code, but if there\u0027s a way to avoid \u0027all_dependent_settings\u0027 we should avoid it. I had some conversations with a gyp guy who told me this. direct_dependent_settings + export_dependent_settings, or putting it in the config if we must.",
      "range": {
        "startLine": 736,
        "startChar": 21,
        "endLine": 736,
        "endChar": 43
      },
      "revId": "bd8f213675f22d2f7dcb32d439fe03a5aa78ccd3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6d11fe41_1d951795",
        "filename": "src/libGLESv2.gypi",
        "patchSetId": 1
      },
      "lineNbr": 736,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2015-07-21T00:52:37Z",
      "side": 1,
      "message": "Ok, I\u0027ll try to narrow it down.",
      "parentUuid": "786d3eb3_33b9c835",
      "range": {
        "startLine": 736,
        "startChar": 21,
        "endLine": 736,
        "endChar": 43
      },
      "revId": "bd8f213675f22d2f7dcb32d439fe03a5aa78ccd3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d83d4aa0_6247fe6f",
        "filename": "src/libGLESv2.gypi",
        "patchSetId": 1
      },
      "lineNbr": 736,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-07-21T14:18:57Z",
      "side": 1,
      "message": "k. it\u0027s not critical, so don\u0027t struggle too much, but if you can find something simple, yeah.",
      "parentUuid": "6d11fe41_1d951795",
      "range": {
        "startLine": 736,
        "startChar": 21,
        "endLine": 736,
        "endChar": 43
      },
      "revId": "bd8f213675f22d2f7dcb32d439fe03a5aa78ccd3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b83896b1_217fb68b",
        "filename": "src/libGLESv2.gypi",
        "patchSetId": 1
      },
      "lineNbr": 736,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2015-07-21T14:40:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d83d4aa0_6247fe6f",
      "range": {
        "startLine": 736,
        "startChar": 21,
        "endLine": 736,
        "endChar": 43
      },
      "revId": "bd8f213675f22d2f7dcb32d439fe03a5aa78ccd3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}