{
  "comments": [
    {
      "key": {
        "uuid": "478051f9_f49682bf",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1359667
      },
      "writtenOn": "2020-09-10T19:44:13Z",
      "side": 1,
      "message": "PTAL",
      "revId": "fd68989e415e0cb64e93fd69e94b7e0f8d422859",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b290cd6d_50b5363f",
        "filename": "src/libANGLE/formatutils.h",
        "patchSetId": 2
      },
      "lineNbr": 141,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-09-10T20:14:52Z",
      "side": 1,
      "message": "nit: can you make these return \"ANGLE_NO_DISCARD bool\" like the below, with an out parameter? they should get inlined so no pointer math is used. Then you can use the MATH macro to satisfy Tim\u0027s comment.",
      "range": {
        "startLine": 141,
        "startChar": 26,
        "endLine": 141,
        "endChar": 48
      },
      "revId": "fd68989e415e0cb64e93fd69e94b7e0f8d422859",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d5bbceb5_eab38b5d",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1692,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-09-10T20:12:12Z",
      "side": 1,
      "message": "Are these doing anything against a raw uint32_t (do we not allow 0 to be returned)?   Also, are they necessary when the checked values already did a ValueOrDie()?\n\nI think it should be safe to remove them here and below.",
      "range": {
        "startLine": 1691,
        "startChar": 0,
        "endLine": 1692,
        "endChar": 54
      },
      "revId": "fd68989e415e0cb64e93fd69e94b7e0f8d422859",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d9f3a143_07bc0d99",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1692,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-09-11T20:04:03Z",
      "side": 1,
      "message": "Rather, it looks like these should be impossible, so you can turn them into ASSERTs.\n\n---\n\nActually, there\u0027s a difference in behavior here. Previously, if there was an overflow (because, say the application uploads to coordinates near MAX_UINT), there would be failure but not a crash. The valueOrDie() calls turn it into a crash. As Tim mentioned, these are ineffective because of the previous valueOrDie().\n\nCould you please add a test that tries something crazy like that? As in upload/copy/something to near maximum coordinates? You should be able to get a GL error prior to this CL.",
      "parentUuid": "d5bbceb5_eab38b5d",
      "range": {
        "startLine": 1691,
        "startChar": 0,
        "endLine": 1692,
        "endChar": 54
      },
      "revId": "fd68989e415e0cb64e93fd69e94b7e0f8d422859",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e106a8db_79e466b7",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1692,
      "author": {
        "id": 1359667
      },
      "writtenOn": "2020-09-11T21:31:25Z",
      "side": 1,
      "message": "Not sure if I fully follow this test suggestion. Can a test get near MAX_UINT if the width/height of the texture should be limited to GL_MAX_TEXTURE_SIZE, which I think is around 16k for most GPUs.",
      "parentUuid": "d9f3a143_07bc0d99",
      "range": {
        "startLine": 1691,
        "startChar": 0,
        "endLine": 1692,
        "endChar": 54
      },
      "revId": "fd68989e415e0cb64e93fd69e94b7e0f8d422859",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}