{
  "comments": [
    {
      "key": {
        "uuid": "b9f87cd3_a3f31a06",
        "filename": "src/common/shadervars.cpp",
        "patchSetId": 1
      },
      "lineNbr": 66,
      "author": {
        "id": 1114374
      },
      "writtenOn": "2014-07-17T07:31:57Z",
      "side": 1,
      "message": "I\u0027ve not really understood the point of returning *this from an assignment operator. It\u0027s the convention, but if nobody is going to use the return value, why bother?",
      "revId": "d9dd6c5d3fb3353c13d62036554db3472728a5bc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1902688d_4ce253a7",
        "filename": "src/common/shadervars.h",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 1003154
      },
      "writtenOn": "2014-07-17T01:28:48Z",
      "side": 1,
      "message": "Google coding style strongly discourage copy and assign.\n\nInstead, you can make explicit functions of clone() and copy() to do the same thing.  Just not sure if it can reduce the binary size the same way.\n\nWhat you do here should be the last thing to consider, when all other alternatives are unavailable.",
      "revId": "d9dd6c5d3fb3353c13d62036554db3472728a5bc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7938c45c_613c16dd",
        "filename": "src/common/shadervars.h",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 1114374
      },
      "writtenOn": "2014-07-17T07:31:57Z",
      "side": 1,
      "message": "They discourage them unless the class is used in stl containers. This is used in stl containers so there is no choice of naming the operations.",
      "parentUuid": "1902688d_4ce253a7",
      "revId": "d9dd6c5d3fb3353c13d62036554db3472728a5bc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "593dc04b_c0ff1e41",
        "filename": "src/common/shadervars.h",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2014-07-17T14:50:18Z",
      "side": 1,
      "message": "Mo, the other alternative would be to use const char * and a custom array type to replace std::vector, use disallow copy and assign, and use clone(). Do you see one approach being better?",
      "parentUuid": "7938c45c_613c16dd",
      "revId": "d9dd6c5d3fb3353c13d62036554db3472728a5bc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9f87cd3_a6f208b9",
        "filename": "src/common/shadervars.h",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 1114374
      },
      "writtenOn": "2014-07-17T15:00:52Z",
      "side": 1,
      "message": "I think that if this (plus destructors) have a good effect, then it\u0027s not necessary to do more until there is more indications that there is gains to be had. Hand written strings and arrays add the complexities of memory management.\n\nBut you know how the code is used better than I. Maybe this code being highly optimal is important for angle as a toolkit.",
      "parentUuid": "593dc04b_c0ff1e41",
      "revId": "d9dd6c5d3fb3353c13d62036554db3472728a5bc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3942ccdc_bf9b1762",
        "filename": "src/common/shadervars.h",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2014-07-17T15:04:47Z",
      "side": 1,
      "message": "I was thinking in terms of code style/maintainability. This particular bit of code is under high scrutiny because it\u0027s the interface between ANGLE\u0027s translator and Firefox/Chrome.",
      "parentUuid": "b9f87cd3_a6f208b9",
      "revId": "d9dd6c5d3fb3353c13d62036554db3472728a5bc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "593dc04b_80a03616",
        "filename": "src/common/shadervars.h",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2014-07-17T17:17:04Z",
      "side": 1,
      "message": "Actually, another option might be to use pointers inside the std::vectors, and pointers to strings for the name, then use clone() and disallow copy and assign.",
      "parentUuid": "3942ccdc_bf9b1762",
      "revId": "d9dd6c5d3fb3353c13d62036554db3472728a5bc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}