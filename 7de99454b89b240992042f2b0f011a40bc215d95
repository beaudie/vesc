{
  "comments": [
    {
      "key": {
        "uuid": "55ea58b3_4fdce7d2",
        "filename": "src/compiler/translator/ShaderStorageBlockOutputHLSL.cpp",
        "patchSetId": 1
      },
      "lineNbr": 462,
      "author": {
        "id": 1165541
      },
      "writtenOn": "2018-10-29T11:56:27Z",
      "side": 1,
      "message": "[1]",
      "revId": "7de99454b89b240992042f2b0f011a40bc215d95",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9636f260_13e5795b",
        "filename": "src/compiler/translator/ShaderStorageBlockOutputHLSL.cpp",
        "patchSetId": 1
      },
      "lineNbr": 469,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2018-10-29T09:35:57Z",
      "side": 1,
      "message": "I\u0027m not sure I understand why you need to modify this case. When is this branch taken?",
      "revId": "7de99454b89b240992042f2b0f011a40bc215d95",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7268fac0_03114d5a",
        "filename": "src/compiler/translator/ShaderStorageBlockOutputHLSL.cpp",
        "patchSetId": 1
      },
      "lineNbr": 469,
      "author": {
        "id": 1165541
      },
      "writtenOn": "2018-10-29T11:56:27Z",
      "side": 1,
      "message": "If we use a scalar data from a matrix, it will go to this branch.\nAssume we have \u0027mat2 m\u0027 as the field member of SSBO. When we use m[i][j] in the main, the first \u0027[\u0027 node will match the condition of line 458 and enter [1] and the second \u0027[\u0027 node will match the condition of Line 469 and enter [2]. So we have locationOf(m[i][j]) \u003d m.offset + BytesPerComponent * i + mMatrixStride * j",
      "parentUuid": "9636f260_13e5795b",
      "revId": "7de99454b89b240992042f2b0f011a40bc215d95",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "13fdca9f_61febdea",
        "filename": "src/compiler/translator/ShaderStorageBlockOutputHLSL.cpp",
        "patchSetId": 1
      },
      "lineNbr": 469,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2018-10-29T13:20:56Z",
      "side": 1,
      "message": "My worry is that this branch is also taken we when are indexing vectors and the statefulness of mRowMajor might make use go in the wrong path if it is still true when indexing the vector.\n\nFor example I think it might happen with something like this:\n\n layout(std140, binding \u003d 0) buffer blockIn {\n     layout(row_major) mat2x3 data;\n } instanceIn;\n\n layout(std140, binding \u003d 1) buffer vec2 myVec;\n\n main:\n   float a \u003d instanceIn.data[1][1] // mRowMajor is set to true\n   float b \u003d myVec[1] // mrowMajor is still set to true and we go in the wrong codepath.",
      "parentUuid": "7268fac0_03114d5a",
      "revId": "7de99454b89b240992042f2b0f011a40bc215d95",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5f33618c_54351350",
        "filename": "src/compiler/translator/ShaderStorageBlockOutputHLSL.cpp",
        "patchSetId": 1
      },
      "lineNbr": 473,
      "author": {
        "id": 1165541
      },
      "writtenOn": "2018-10-29T11:56:27Z",
      "side": 1,
      "message": "[2]",
      "revId": "7de99454b89b240992042f2b0f011a40bc215d95",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}