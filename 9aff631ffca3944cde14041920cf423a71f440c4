{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "df92bd19_987829d1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2023-04-21T20:04:54Z",
      "side": 1,
      "message": "LGTM",
      "revId": "9aff631ffca3944cde14041920cf423a71f440c4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "053b7023_af265cc1",
        "filename": "src/libGLESv2/entry_points_gles_ext_autogen.cpp",
        "patchSetId": 6
      },
      "lineNbr": 4727,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2023-04-21T20:04:54Z",
      "side": 1,
      "message": "this function may end up calling context-\u003eisContextLost(), which may get set from other thread. I am not seeing it been protected by lock. Does not seems to be a regression with your CL either. I guess this might be okay since it is inherently race anyway.",
      "range": {
        "startLine": 4727,
        "startChar": 23,
        "endLine": 4727,
        "endChar": 44
      },
      "revId": "9aff631ffca3944cde14041920cf423a71f440c4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1e53da0a_b8ee2381",
        "filename": "src/libGLESv2/entry_points_gles_ext_autogen.cpp",
        "patchSetId": 6
      },
      "lineNbr": 4727,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-04-21T20:16:39Z",
      "side": 1,
      "message": "I noticed this too and was planning on making `mContextLost` atomic. Normally `Context::setContextLost` also sets the current context pointer to nullptr, so there\u0027s no perf cost to that in the hot-path... except the Android path doesn\u0027t do that, which we should fix.\n\nDoes that sound good?",
      "parentUuid": "053b7023_af265cc1",
      "range": {
        "startLine": 4727,
        "startChar": 23,
        "endLine": 4727,
        "endChar": 44
      },
      "revId": "9aff631ffca3944cde14041920cf423a71f440c4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e4ce6227_8a91598e",
        "filename": "src/libGLESv2/entry_points_gles_ext_autogen.cpp",
        "patchSetId": 6
      },
      "lineNbr": 4727,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-04-21T21:09:53Z",
      "side": 1,
      "message": "Actually I think this change does make regress this; previously it was either safe because the context is alone in share group, or it was protected by this lock. Now it\u0027s not protected by any lock.\n\nThat said, I\u0027m fixing it right now, so nothing to do in this change.",
      "parentUuid": "1e53da0a_b8ee2381",
      "range": {
        "startLine": 4727,
        "startChar": 23,
        "endLine": 4727,
        "endChar": 44
      },
      "revId": "9aff631ffca3944cde14041920cf423a71f440c4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6ff184fd_00a7f8c1",
        "filename": "src/libGLESv2/entry_points_gles_ext_autogen.cpp",
        "patchSetId": 6
      },
      "lineNbr": 4727,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-04-22T02:42:29Z",
      "side": 1,
      "message": "With this change, `GetValidGlobalContext` shouldn\u0027t access `mContextLost` any more https://chromium-review.googlesource.com/c/angle/angle/+/4454769\n\nI also wrote https://chromium-review.googlesource.com/c/angle/angle/+/4462131 but now I don\u0027t think we actually need that.",
      "parentUuid": "e4ce6227_8a91598e",
      "range": {
        "startLine": 4727,
        "startChar": 23,
        "endLine": 4727,
        "endChar": 44
      },
      "revId": "9aff631ffca3944cde14041920cf423a71f440c4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c2090950_11990333",
        "filename": "src/libGLESv2/entry_points_gles_ext_autogen.cpp",
        "patchSetId": 6
      },
      "lineNbr": 4727,
      "author": {
        "id": 1564492
      },
      "writtenOn": "2023-04-24T14:40:13Z",
      "side": 1,
      "message": "\u003e Actually I think this change does make regress this; previously it was either safe because the context is alone in share group, or it was protected by this lock.\n\nIt regress only for these APIs, but what about all other APIs, like `GL_CopyImageSubDataOES()` for example? They all call `GetValidGlobalContext()` without a lock...\n\nOr I am missing something?",
      "parentUuid": "6ff184fd_00a7f8c1",
      "range": {
        "startLine": 4727,
        "startChar": 23,
        "endLine": 4727,
        "endChar": 44
      },
      "revId": "9aff631ffca3944cde14041920cf423a71f440c4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}