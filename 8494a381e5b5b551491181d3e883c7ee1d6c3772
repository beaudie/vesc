{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5553fe91_2eef5e80",
        "filename": "src/libANGLE/capture/FrameCapture.cpp",
        "patchSetId": 1
      },
      "lineNbr": 4160,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-08-19T11:30:45Z",
      "side": 1,
      "message": "Shouldn\u0027t this be dstTarget? And what about the other five faces?",
      "range": {
        "startLine": 4160,
        "startChar": 78,
        "endLine": 4160,
        "endChar": 97
      },
      "revId": "8494a381e5b5b551491181d3e883c7ee1d6c3772",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "354c6444_a1f028dd",
        "filename": "src/libANGLE/capture/FrameCapture.cpp",
        "patchSetId": 1
      },
      "lineNbr": 4160,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-08-19T17:15:36Z",
      "side": 1,
      "message": "From the GLES 3.2 spec:\n\n\u003e 16.2.2 Copying Between Images\n\u003e \n\u003e Slices of a two-dimensional array, cube map array, or three dimensional texture,\n\u003e or faces of a cube map texture are all compatible provided they share a compatible\n\u003e internal format, and multiple slices or faces may be copied between these objects\n\u003e with a single call by specifying the starting slice with srcZ and dstZ, and the number\n\u003e of slices to be copied with srcDepth. Cubemap textures always have six faces\n\u003e which are selected by a zero-based face index, according to the order specified in\n\u003e table 8.20.\n\nSo, rather than assuming GL_TEXTURE_CUBE_MAP_POSITIVE_X, we need to instead determine the correct face based on the srcZ, dstZ, and srcDepth.",
      "parentUuid": "5553fe91_2eef5e80",
      "range": {
        "startLine": 4160,
        "startChar": 78,
        "endLine": 4160,
        "endChar": 97
      },
      "revId": "8494a381e5b5b551491181d3e883c7ee1d6c3772",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e10a73bf_4c1515e5",
        "filename": "src/libANGLE/capture/FrameCapture.cpp",
        "patchSetId": 1
      },
      "lineNbr": 4160,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2021-08-19T17:21:48Z",
      "side": 1,
      "message": "Whoops... yes.  That should be dstTarget.  I obviously dropped in a workaround and moved on.\n\nThanks for the quote Tim, I\u0027ll update this.",
      "parentUuid": "5553fe91_2eef5e80",
      "range": {
        "startLine": 4160,
        "startChar": 78,
        "endLine": 4160,
        "endChar": 97
      },
      "revId": "8494a381e5b5b551491181d3e883c7ee1d6c3772",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "57e60b83_2f699835",
        "filename": "src/libANGLE/capture/FrameCapture.cpp",
        "patchSetId": 1
      },
      "lineNbr": 4160,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2021-08-19T17:39:21Z",
      "side": 1,
      "message": "I remember now.  We\u0027re only looking at the dstTarget because we want to know if it is compressed.  Therefore it doesn\u0027t matter which cube face we use.",
      "parentUuid": "e10a73bf_4c1515e5",
      "range": {
        "startLine": 4160,
        "startChar": 78,
        "endLine": 4160,
        "endChar": 97
      },
      "revId": "8494a381e5b5b551491181d3e883c7ee1d6c3772",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7bb8ab69_65379f36",
        "filename": "src/libANGLE/capture/FrameCapture.cpp",
        "patchSetId": 1
      },
      "lineNbr": 4160,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-08-19T17:41:46Z",
      "side": 1,
      "message": "Can you use getBaseLevel something something instead of getFormat?",
      "parentUuid": "57e60b83_2f699835",
      "range": {
        "startLine": 4160,
        "startChar": 78,
        "endLine": 4160,
        "endChar": 97
      },
      "revId": "8494a381e5b5b551491181d3e883c7ee1d6c3772",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e4e6a8f6_6b10b4dc",
        "filename": "src/libANGLE/capture/FrameCapture.cpp",
        "patchSetId": 1
      },
      "lineNbr": 4160,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2021-08-19T18:41:22Z",
      "side": 1,
      "message": "We actually do the same thing in gl::ValidateCopyImageSubDataBase.  It calls a helper (gl::GetTargetFormatInfo) which does the following:\n\n Texture *texture          \u003d context-\u003egetTexture(PackParam\u003cTextureID\u003e(name));\n GLenum textureTargetToUse \u003d target;\n\n if (target \u003d\u003d GL_TEXTURE_CUBE_MAP)\n {\n     // Use GL_TEXTURE_CUBE_MAP_POSITIVE_X to properly gather the\n     // textureWidth/textureHeight\n     textureTargetToUse \u003d GL_TEXTURE_CUBE_MAP_POSITIVE_X;\n }\n return *texture-\u003egetFormat(PackParam\u003cTextureTarget\u003e(textureTargetToUse), level).info;\n            \nRef: https://source.chromium.org/chromium/chromium/src/+/main:third_party/angle/src/libANGLE/validationES.cpp;l\u003d3101-3110",
      "parentUuid": "7bb8ab69_65379f36",
      "range": {
        "startLine": 4160,
        "startChar": 78,
        "endLine": 4160,
        "endChar": 97
      },
      "revId": "8494a381e5b5b551491181d3e883c7ee1d6c3772",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6ab8528d_56f02e2a",
        "filename": "src/libANGLE/capture/FrameCapture.cpp",
        "patchSetId": 1
      },
      "lineNbr": 4160,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-08-19T18:46:47Z",
      "side": 1,
      "message": "I see.. maybe we should expose that helper function? Anyway seems reasonable. I would probably organize the code so readers aren\u0027t as confused (somehow).",
      "parentUuid": "e4e6a8f6_6b10b4dc",
      "range": {
        "startLine": 4160,
        "startChar": 78,
        "endLine": 4160,
        "endChar": 97
      },
      "revId": "8494a381e5b5b551491181d3e883c7ee1d6c3772",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "761d60d5_c58a5f45",
        "filename": "src/libANGLE/capture/FrameCapture.cpp",
        "patchSetId": 1
      },
      "lineNbr": 4160,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2021-08-21T01:06:44Z",
      "side": 1,
      "message": "I updated this implementation to use dstZ and the texture\u0027s name, which seems cleaner than just using a cube face.",
      "parentUuid": "6ab8528d_56f02e2a",
      "range": {
        "startLine": 4160,
        "startChar": 78,
        "endLine": 4160,
        "endChar": 97
      },
      "revId": "8494a381e5b5b551491181d3e883c7ee1d6c3772",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}