{
  "comments": [
    {
      "key": {
        "uuid": "1b81c16b_dbd803df",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 17
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-08-18T13:48:16Z",
      "side": 1,
      "message": "PTAL. This is just a redesign - it is the first CL that introduces new concepts like a \"read-only\" depth mode.",
      "revId": "de4c0eae1928ec8218267bf71f330eefb3bcd926",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cceaad3f_99f81d16",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "patchSetId": 17
      },
      "lineNbr": 481,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-08-18T16:33:59Z",
      "side": 1,
      "message": "typo",
      "range": {
        "startLine": 481,
        "startChar": 58,
        "endLine": 481,
        "endChar": 59
      },
      "revId": "de4c0eae1928ec8218267bf71f330eefb3bcd926",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e73b26c_9842e1de",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "patchSetId": 17
      },
      "lineNbr": 481,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-08-18T16:33:59Z",
      "side": 1,
      "message": "Can you explain what the trick is and why you need Color0 and ColorMax for DS Read/Write?   Maybe an example of how the mod and division below work.",
      "revId": "de4c0eae1928ec8218267bf71f330eefb3bcd926",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f6ded1e0_ab38c055",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "patchSetId": 17
      },
      "lineNbr": 481,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-08-18T17:45:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2e73b26c_9842e1de",
      "revId": "de4c0eae1928ec8218267bf71f330eefb3bcd926",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bcff3087_14c535d8",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "patchSetId": 17
      },
      "lineNbr": 481,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-08-18T17:45:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cceaad3f_99f81d16",
      "range": {
        "startLine": 481,
        "startChar": 58,
        "endLine": 481,
        "endChar": 59
      },
      "revId": "de4c0eae1928ec8218267bf71f330eefb3bcd926",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9fe5e4c0_86e2a37a",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "patchSetId": 17
      },
      "lineNbr": 540,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-08-18T16:33:59Z",
      "side": 1,
      "message": "Should add back the other ASSERT also to make sure there is only a single DS attachment:\n\n    ASSERT(getDepthStencilAccess() \u003d\u003d ResourceAccess::Unused);",
      "revId": "de4c0eae1928ec8218267bf71f330eefb3bcd926",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4ac9b789_926cb7eb",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "patchSetId": 17
      },
      "lineNbr": 540,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-08-18T17:45:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9fe5e4c0_86e2a37a",
      "revId": "de4c0eae1928ec8218267bf71f330eefb3bcd926",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "79e338f1_124e33e3",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "patchSetId": 17
      },
      "lineNbr": 550,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-08-18T16:33:59Z",
      "side": 1,
      "message": "How do you know to use Color0DepthStencilRead versus ColorMaxDepthStencilRead?",
      "revId": "de4c0eae1928ec8218267bf71f330eefb3bcd926",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ae03652_dc729ac9",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "patchSetId": 17
      },
      "lineNbr": 550,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-08-18T17:45:20Z",
      "side": 1,
      "message": "I don\u0027t follow the question. Can you try asking another way?\n\nThis offset is the base enum value which we the add the \"range\" to to get the real enum max.",
      "parentUuid": "79e338f1_124e33e3",
      "revId": "de4c0eae1928ec8218267bf71f330eefb3bcd926",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "81492a31_e8998f49",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "patchSetId": 17
      },
      "lineNbr": 550,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-08-18T18:42:18Z",
      "side": 1,
      "message": "Ok, I get it now.\n\nNumber of draw attachments \u003d {None, GL_COLOR_ATTACHMENT0, ..., gl::IMPLEMENTATION_MAX_DRAW_BUFFERS - 1} \u003d 9\nNumber of DS states \u003d {Unused, Read, Write} \u003d 3\n\nTotal values \u003d draw attachments * DS states \u003d 9 * 3 \u003d 27\n\nCreating a value \u003d num color attachments * DS state, which the enum pre-bakes.\n\nActive color attachments \u003d value % ColorMax\nDS state \u003d value / ColorMax, which is: {Unused, Read, Write} where Color0 \u003d Unused",
      "parentUuid": "1ae03652_dc729ac9",
      "revId": "de4c0eae1928ec8218267bf71f330eefb3bcd926",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2ee43dd7_c01d470f",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "patchSetId": 17
      },
      "lineNbr": 589,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-08-18T16:33:59Z",
      "side": 1,
      "message": "hasDepthStencilAttachment()",
      "range": {
        "startLine": 589,
        "startChar": 29,
        "endLine": 589,
        "endChar": 78
      },
      "revId": "de4c0eae1928ec8218267bf71f330eefb3bcd926",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "abdfdbb1_d44ecf0b",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "patchSetId": 17
      },
      "lineNbr": 589,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-08-18T17:45:20Z",
      "side": 1,
      "message": "I removed hasDepthStencilAttachment to make sure the code handles different access modes.\n\nedit - went and added it after a later comment.",
      "parentUuid": "2ee43dd7_c01d470f",
      "range": {
        "startLine": 589,
        "startChar": 29,
        "endLine": 589,
        "endChar": 78
      },
      "revId": "de4c0eae1928ec8218267bf71f330eefb3bcd926",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b25799ea_8823d580",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "patchSetId": 17
      },
      "lineNbr": 2145,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-08-18T16:33:59Z",
      "side": 1,
      "message": "This pattern has come up a couple times, so it should probably be put back into a hasDepthStencilAttachment(), which would also help readability.",
      "range": {
        "startLine": 2144,
        "startChar": 0,
        "endLine": 2145,
        "endChar": 47
      },
      "revId": "de4c0eae1928ec8218267bf71f330eefb3bcd926",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "12b4f3a6_6fc4674e",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "patchSetId": 17
      },
      "lineNbr": 2145,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-08-18T17:45:20Z",
      "side": 1,
      "message": "OK, will do. I did it explicitly to make sure I always checked the access mode instead of the code operating with just \"bool\" results.",
      "parentUuid": "b25799ea_8823d580",
      "range": {
        "startLine": 2144,
        "startChar": 0,
        "endLine": 2145,
        "endChar": 47
      },
      "revId": "de4c0eae1928ec8218267bf71f330eefb3bcd926",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7fa2ab92_acc7e336",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "patchSetId": 17
      },
      "lineNbr": 2156,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-08-18T16:33:59Z",
      "side": 1,
      "message": "A \u0027default\u0027 case that can be only 1 value seems odd.\n\nIt\u0027s probably better to just do an if-else (with an assert) rather than a switch statement here.",
      "range": {
        "startLine": 2153,
        "startChar": 0,
        "endLine": 2156,
        "endChar": 22
      },
      "revId": "de4c0eae1928ec8218267bf71f330eefb3bcd926",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5ad6bf44_1377a2a6",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "patchSetId": 17
      },
      "lineNbr": 2156,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-08-18T17:45:20Z",
      "side": 1,
      "message": "I had it your way originally and changed it to be this way I believe because of a compiler warning. Would prefer to keep this code if you don\u0027t mind.",
      "parentUuid": "7fa2ab92_acc7e336",
      "range": {
        "startLine": 2153,
        "startChar": 0,
        "endLine": 2156,
        "endChar": 22
      },
      "revId": "de4c0eae1928ec8218267bf71f330eefb3bcd926",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3d271ada_5db8ac31",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "patchSetId": 17
      },
      "lineNbr": 2156,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-08-18T18:42:18Z",
      "side": 1,
      "message": "What is the compiler warning about?   Seems straightforward.\n\n    if (desc.hasDepthStencilAttachment())\n    {\n        vk::ResourceAccess dsAccess \u003d desc.getDepthStencilAccess();\n        vk::ImageLayout imageLayout;\n\n        if (dsAccess \u003d\u003d vk::ResourceAccess::ReadOnly)\n        {\n            imageLayout \u003d vk::ImageLayout::DepthStencilReadOnly;\n        } else {\n            ASSERT(dsAccess \u003d\u003d vk::ResourceAccess::Write);\n            imageLayout \u003d vk::ImageLayout::DepthStencilAttachment;\n        }\n\n        uint32_t depthStencilIndexVk \u003d colorAttachmentCount;\n        ops.initWithLoadStore(depthStencilIndexVk, imageLayout, imageLayout);\n    }",
      "parentUuid": "5ad6bf44_1377a2a6",
      "range": {
        "startLine": 2153,
        "startChar": 0,
        "endLine": 2156,
        "endChar": 22
      },
      "revId": "de4c0eae1928ec8218267bf71f330eefb3bcd926",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7838145d_15b745c7",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.h",
        "patchSetId": 17
      },
      "lineNbr": 62,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-08-18T13:48:16Z",
      "side": 1,
      "message": "I could go and replace the BarrierType enum with this as well if desired.",
      "range": {
        "startLine": 62,
        "startChar": 5,
        "endLine": 62,
        "endChar": 19
      },
      "revId": "de4c0eae1928ec8218267bf71f330eefb3bcd926",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "184a3860_52c46e18",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.h",
        "patchSetId": 17
      },
      "lineNbr": 121,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-08-18T13:48:16Z",
      "side": 1,
      "message": "I had to pack this additional bit into the structure without increasing its size.",
      "range": {
        "startLine": 121,
        "startChar": 12,
        "endLine": 121,
        "endChar": 51
      },
      "revId": "de4c0eae1928ec8218267bf71f330eefb3bcd926",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2845de6e_c872e11d",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 17
      },
      "lineNbr": 353,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-08-18T16:33:59Z",
      "side": 1,
      "message": "Why is this necessary?\n\n\u003e VK_ACCESS_SHADER_READ_BIT specifies read access to a storage buffer, physical storage buffer, shader binding table, uniform texel buffer, storage texel buffer, sampled image, or storage image.",
      "range": {
        "startLine": 353,
        "startChar": 12,
        "endLine": 353,
        "endChar": 37
      },
      "revId": "de4c0eae1928ec8218267bf71f330eefb3bcd926",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c4ec78d1_242f322f",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 17
      },
      "lineNbr": 353,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-08-18T16:33:59Z",
      "side": 1,
      "message": "Why is this necessary if the attachment is read only?\n\n\u003e VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT specifies write access to a depth/stencil attachment, via depth or stencil operations or via certain subpass load and store operations.",
      "range": {
        "startLine": 353,
        "startChar": 86,
        "endLine": 353,
        "endChar": 130
      },
      "revId": "de4c0eae1928ec8218267bf71f330eefb3bcd926",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0dde158e_3e02bcf9",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 17
      },
      "lineNbr": 353,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-08-18T17:45:20Z",
      "side": 1,
      "message": "This is transition \"to\". We need to flush out potential depth stencil attachment writes to this image.",
      "parentUuid": "c4ec78d1_242f322f",
      "range": {
        "startLine": 353,
        "startChar": 86,
        "endLine": 353,
        "endChar": 130
      },
      "revId": "de4c0eae1928ec8218267bf71f330eefb3bcd926",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f20947f9_01ecb962",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 17
      },
      "lineNbr": 353,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-08-18T17:45:20Z",
      "side": 1,
      "message": "This could be a depth stencil texture, same as other textures.",
      "parentUuid": "2845de6e_c872e11d",
      "range": {
        "startLine": 353,
        "startChar": 12,
        "endLine": 353,
        "endChar": 37
      },
      "revId": "de4c0eae1928ec8218267bf71f330eefb3bcd926",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3fdda235_f7480239",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 17
      },
      "lineNbr": 353,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-08-18T18:07:12Z",
      "side": 1,
      "message": "I think you don\u0027t need this bit, see ComputeShaderReadOnly as an example. dstAccess means what we will do after we transition into this layout.",
      "parentUuid": "0dde158e_3e02bcf9",
      "range": {
        "startLine": 353,
        "startChar": 86,
        "endLine": 353,
        "endChar": 130
      },
      "revId": "de4c0eae1928ec8218267bf71f330eefb3bcd926",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "32b43e29_4bc4adb9",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 17
      },
      "lineNbr": 353,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-08-18T18:42:18Z",
      "side": 1,
      "message": "Shouldn\u0027t ImageLayout::DepthStencilAttachment below require this also then?",
      "parentUuid": "f20947f9_01ecb962",
      "range": {
        "startLine": 353,
        "startChar": 12,
        "endLine": 353,
        "endChar": 37
      },
      "revId": "de4c0eae1928ec8218267bf71f330eefb3bcd926",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e071a267_c3fa5208",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 17
      },
      "lineNbr": 353,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-08-18T18:42:18Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "0dde158e_3e02bcf9",
      "range": {
        "startLine": 353,
        "startChar": 86,
        "endLine": 353,
        "endChar": 130
      },
      "revId": "de4c0eae1928ec8218267bf71f330eefb3bcd926",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "66760421_6953bd4a",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 17
      },
      "lineNbr": 355,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-08-18T16:33:59Z",
      "side": 1,
      "message": "Why don\u0027t we need VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT here to specify all writes must complete before transitioning to read only?",
      "revId": "de4c0eae1928ec8218267bf71f330eefb3bcd926",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1704c624_9f7ff17a",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 17
      },
      "lineNbr": 355,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-08-18T17:45:20Z",
      "side": 1,
      "message": "I think maybe you got to and from backwards? ReadOnly layouts all have zero here.",
      "parentUuid": "66760421_6953bd4a",
      "revId": "de4c0eae1928ec8218267bf71f330eefb3bcd926",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b546896_c0b64479",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 17
      },
      "lineNbr": 355,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-08-18T18:42:18Z",
      "side": 1,
      "message": "\u003e I think maybe you got to and from backwards?\n\nHm, yeah, I think so.",
      "parentUuid": "1704c624_9f7ff17a",
      "revId": "de4c0eae1928ec8218267bf71f330eefb3bcd926",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6baf5f95_61c15020",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 17
      },
      "lineNbr": 920,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-08-18T16:33:59Z",
      "side": 1,
      "message": "hasDepthStencilAttachment()",
      "range": {
        "startLine": 920,
        "startChar": 28,
        "endLine": 920,
        "endChar": 77
      },
      "revId": "de4c0eae1928ec8218267bf71f330eefb3bcd926",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3e0e3fdf_d98deaba",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 17
      },
      "lineNbr": 920,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-08-18T17:45:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6baf5f95_61c15020",
      "range": {
        "startLine": 920,
        "startChar": 28,
        "endLine": 920,
        "endChar": 77
      },
      "revId": "de4c0eae1928ec8218267bf71f330eefb3bcd926",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}