{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "fc599099_aa53976e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2021-07-01T19:54:00Z",
      "side": 1,
      "message": "timvp: Friendly ping",
      "revId": "bd0bfbf6ed5738b179719d026c239329a7081475",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b0f8edcc_7754ed0f",
        "filename": "src/libANGLE/Display.cpp",
        "patchSetId": 1
      },
      "lineNbr": 316,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-06-30T02:15:44Z",
      "side": 1,
      "message": "Don\u0027t we need a break after `UNREACHABLE()` too? Otherwise it\u0027s falling through to the next case.",
      "revId": "bd0bfbf6ed5738b179719d026c239329a7081475",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c17b46d4_f35a3b20",
        "filename": "src/libANGLE/Display.cpp",
        "patchSetId": 1
      },
      "lineNbr": 316,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2021-06-30T04:24:17Z",
      "side": 1,
      "message": "No, UNREACHABLE terminates execution (FATAL() or ASSERT(false)).",
      "parentUuid": "b0f8edcc_7754ed0f",
      "revId": "bd0bfbf6ed5738b179719d026c239329a7081475",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "93202d03_5ea7d33a",
        "filename": "src/libANGLE/Display.cpp",
        "patchSetId": 1
      },
      "lineNbr": 316,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-07-01T20:06:01Z",
      "side": 1,
      "message": "ASSERT(false) doesn\u0027t terminate execution on a non-dcheck build.\n\nSee how UNREACHABLE_IS_NORETURN is used elsewhere.",
      "parentUuid": "c17b46d4_f35a3b20",
      "revId": "bd0bfbf6ed5738b179719d026c239329a7081475",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b2b8cc2f_d09fe941",
        "filename": "src/libANGLE/Display.cpp",
        "patchSetId": 1
      },
      "lineNbr": 316,
      "author": {
        "id": 1000805
      },
      "writtenOn": "2021-07-02T16:16:07Z",
      "side": 1,
      "message": "Ah, interesting!  OK, I think I fixed up things correctly, looking at all the other cases here...",
      "parentUuid": "93202d03_5ea7d33a",
      "revId": "bd0bfbf6ed5738b179719d026c239329a7081475",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "119537c1_99414af6",
        "filename": "src/tests/gl_tests/ProgramBinaryTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1275,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-06-30T02:15:44Z",
      "side": 1,
      "message": "In this instance, the explicit return was actually helpful IMO. It\u0027s not obvious that FAIL() makes the function return. But it is what it is...",
      "range": {
        "startLine": 1275,
        "startChar": 8,
        "endLine": 1275,
        "endChar": 12
      },
      "revId": "bd0bfbf6ed5738b179719d026c239329a7081475",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}