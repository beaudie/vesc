{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c7e05825_d447db15",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2024-03-05T01:42:58Z",
      "side": 1,
      "message": "Moving Shabi to CC as he\u0027s OOO, adding Geoff",
      "revId": "bef43d595509596f8e984bd686ef58b2f714701f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "55ee396b_a4406d82",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1525982
      },
      "writtenOn": "2024-03-05T21:28:18Z",
      "side": 1,
      "message": "Thanks :)",
      "parentUuid": "c7e05825_d447db15",
      "revId": "bef43d595509596f8e984bd686ef58b2f714701f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b3875ad_cd1f185c",
        "filename": "src/libANGLE/renderer/driver_utils.cpp",
        "patchSetId": 3
      },
      "lineNbr": 165,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2024-03-05T01:42:58Z",
      "side": 1,
      "message": "It looks like this already exists in `src/libANGLE/renderer/d3d/d3d11/renderer11_utils.cpp`:\n```\nIntelDriverVersion GetIntelDriverVersion(const Optional\u003cLARGE_INTEGER\u003e driverVersion)\n{\n    if (!driverVersion.valid())\n        return IntelDriverVersion(0);\n\n    DWORD lowPart \u003d driverVersion.value().LowPart;\n    return IntelDriverVersion(HIWORD(lowPart) * 10000 + LOWORD(lowPart));\n}\n```\n@geofflang@chromium.org Should we merge the implementations?",
      "range": {
        "startLine": 165,
        "startChar": 19,
        "endLine": 165,
        "endChar": 43
      },
      "revId": "bef43d595509596f8e984bd686ef58b2f714701f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1732f856_d2183f21",
        "filename": "src/libANGLE/renderer/driver_utils.cpp",
        "patchSetId": 3
      },
      "lineNbr": 165,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2024-03-05T01:42:58Z",
      "side": 1,
      "message": "It looks like we use `Parse` functions in `src/libANGLE/renderer/driver_utils.cpp` to perform this i.e. `ParseARMDriverVersion`.\n\nCan we move this there and call it `ParseIntelDriverVersion`?",
      "revId": "bef43d595509596f8e984bd686ef58b2f714701f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0dbc5c55_7b5242fb",
        "filename": "src/libANGLE/renderer/driver_utils.cpp",
        "patchSetId": 3
      },
      "lineNbr": 165,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-03-05T03:08:52Z",
      "side": 1,
      "message": "Doesn\u0027t look like the implementation is the same? (also, is it strange that the rnederer11_utils version is doing `low * 1000 + low`?) Maybe the d3d11 reported version and the Vulkan version are different.",
      "parentUuid": "9b3875ad_cd1f185c",
      "range": {
        "startLine": 165,
        "startChar": 19,
        "endLine": 165,
        "endChar": 43
      },
      "revId": "bef43d595509596f8e984bd686ef58b2f714701f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc3e2294_ef0535e1",
        "filename": "src/libANGLE/renderer/driver_utils.cpp",
        "patchSetId": 3
      },
      "lineNbr": 165,
      "author": {
        "id": 1525982
      },
      "writtenOn": "2024-03-05T21:28:18Z",
      "side": 1,
      "message": "Updated and renamed the function to `ParseIntelDriverVersion()`. However, `IntelDriverVersion` has only one member (`mBuildNumber`) which will contain the driver version after construction.\n\nFor `IntelDriverVersion`, I added a Windows-only constructor to use major and minor versions for the build number, which is also used in `ParseIntelDriverVersion()` for Windows platforms.",
      "parentUuid": "1732f856_d2183f21",
      "revId": "bef43d595509596f8e984bd686ef58b2f714701f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "31d26ce5_5ca82f85",
        "filename": "src/libANGLE/renderer/driver_utils.cpp",
        "patchSetId": 3
      },
      "lineNbr": 165,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-03-06T03:08:42Z",
      "side": 1,
      "message": "Given that the Intel driver on windows and mesa are completely different, suggest calling it `ParseIntelWindowsDriverVersion()`.",
      "parentUuid": "fc3e2294_ef0535e1",
      "revId": "bef43d595509596f8e984bd686ef58b2f714701f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f9d52675_89e66a83",
        "filename": "src/libANGLE/renderer/driver_utils.cpp",
        "patchSetId": 3
      },
      "lineNbr": 165,
      "author": {
        "id": 1525982
      },
      "writtenOn": "2024-03-06T20:14:09Z",
      "side": 1,
      "message": "I agree. Name updated.",
      "parentUuid": "31d26ce5_5ca82f85",
      "revId": "bef43d595509596f8e984bd686ef58b2f714701f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "af7e6d24_02590bf5",
        "filename": "src/libANGLE/renderer/driver_utils.cpp",
        "patchSetId": 3
      },
      "lineNbr": 165,
      "author": {
        "id": 1525982
      },
      "writtenOn": "2024-03-06T20:14:09Z",
      "side": 1,
      "message": "The function in `renderer11_utils.cpp` was updated in [the following CL](https://chromium-review.googlesource.com/c/angle/angle/+/3007570) since the low part was reaching the limit of 9999. IIUC from the CL, D3D and Vulkan driver versions should be the same number. However, this implementation and its usage look different from this CL.",
      "parentUuid": "0dbc5c55_7b5242fb",
      "range": {
        "startLine": 165,
        "startChar": 19,
        "endLine": 165,
        "endChar": 43
      },
      "revId": "bef43d595509596f8e984bd686ef58b2f714701f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bdbf7379_4b6d8296",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 4661,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-03-05T03:08:52Z",
      "side": 1,
      "message": "You\u0027re disabling a lot more than vertex input dynamic state with this change. Could you please revert the `isArm44OrLess` rename, and add a separate bool for the win/intel workaround? Then that separate bool can apply only to the relevant dynamic state.\n\nThe expressions here also end up in chrome://gpu, and a generic `isExtendedDynamicStateSupported` is not descriptive.\n\nAlternatively, if you don\u0027t care at all about dynamic state on those old drivers, you can use the generic flag but call it `isExtendedDynamicStateBuggy`. Then at least the description is clear that the dynamic state is being disabled due to _bugs_ rather than _lack of support_.",
      "revId": "bef43d595509596f8e984bd686ef58b2f714701f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "700f025f_1071f96c",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 4661,
      "author": {
        "id": 1525982
      },
      "writtenOn": "2024-03-05T21:28:18Z",
      "side": 1,
      "message": "I see. Thanks! Updated to include a separate flag to disable `useVertexInputBindingStrideDynamicState`.",
      "parentUuid": "bdbf7379_4b6d8296",
      "revId": "bef43d595509596f8e984bd686ef58b2f714701f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}