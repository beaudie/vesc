{
  "comments": [
    {
      "key": {
        "uuid": "fd189210_2a383840",
        "filename": "src/compiler/translator/ConstantUnion.cpp",
        "patchSetId": 1
      },
      "lineNbr": 89,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-07-18T18:25:24Z",
      "side": 1,
      "message": "we\u0027ll probably need a solution that doesn\u0027t remove these ASSERTs. Obviously these would give the wrong values as it is using reinterpret_cast instead of a conversion function.",
      "range": {
        "startLine": 89,
        "startChar": 4,
        "endLine": 89,
        "endChar": 32
      },
      "revId": "83eb8979342e2f5f3044a0c65bf6ec26b33f54ce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "49be8005_39c156f3",
        "filename": "src/compiler/translator/FunctionLookup.cpp",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-07-18T18:25:24Z",
      "side": 1,
      "message": "Couple requests:\n\nGetImplicitConversionCombinations, statics should be Caps. And make it in an anonymous namespace block at the top of the file.",
      "range": {
        "startLine": 75,
        "startChar": 30,
        "endLine": 75,
        "endChar": 45
      },
      "revId": "83eb8979342e2f5f3044a0c65bf6ec26b33f54ce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "10f534c4_90c737b9",
        "filename": "src/compiler/translator/FunctionLookup.h",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-07-18T18:25:24Z",
      "side": 1,
      "message": "how about getMangledNamesForImplicitConversions?",
      "range": {
        "startLine": 31,
        "startChar": 33,
        "endLine": 31,
        "endChar": 48
      },
      "revId": "83eb8979342e2f5f3044a0c65bf6ec26b33f54ce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e4bb44ad_7c2b331f",
        "filename": "src/compiler/translator/FunctionLookup.h",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-07-18T18:25:24Z",
      "side": 1,
      "message": "can this be private in FunctionLookup.cpp?",
      "range": {
        "startLine": 32,
        "startChar": 40,
        "endLine": 32,
        "endChar": 55
      },
      "revId": "83eb8979342e2f5f3044a0c65bf6ec26b33f54ce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "22caca13_71576cba",
        "filename": "src/compiler/translator/ParseContext.cpp",
        "patchSetId": 1
      },
      "lineNbr": 5224,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-07-18T18:25:24Z",
      "side": 1,
      "message": "again we can\u0027t commit this. it would likely break all kind of code.",
      "range": {
        "startLine": 5224,
        "startChar": 8,
        "endLine": 5224,
        "endChar": 24
      },
      "revId": "83eb8979342e2f5f3044a0c65bf6ec26b33f54ce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}