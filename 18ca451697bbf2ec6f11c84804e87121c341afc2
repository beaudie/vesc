{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "352bb20b_6d3f7e6d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 18,
      "author": {
        "id": 1449558
      },
      "writtenOn": "2023-05-02T17:44:40Z",
      "side": 1,
      "message": "You can imagine content with, say, for loop calling drawIndexed for 30 mins straight. There\u0027s no conceptual opengl context switches here.\n\nOn WebKit, there should not be any context switches in normal operation.\n\nHow about if command buffer completion could be used as the natural epoch, since the free buffers are available after the completion? If the buffers are not used within few completions, they are likely unneeded.",
      "revId": "18ca451697bbf2ec6f11c84804e87121c341afc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a8e008d4_55be851f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 18,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2023-05-06T09:34:14Z",
      "side": 1,
      "message": "Thanks for the suggestion. I\u0027ve added the number of command buffer commits as one of the triggers of GC, and tuned the count so it doesn\u0027t happen more than once every few seconds for some representative workloads. It\u0027s easy to adjust the count further without completely changing the heuristic.",
      "parentUuid": "352bb20b_6d3f7e6d",
      "revId": "18ca451697bbf2ec6f11c84804e87121c341afc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d306f45f_096bf71f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2023-05-02T05:00:19Z",
      "side": 1,
      "message": "Gregg, Geoff: could you please review? The only significant (and still small) change is between patchsets 1 and 2. See the linked bug for more details. Thanks.\n\nKyle, Kimmo: any comments welcome. Will email you about this separately.",
      "revId": "18ca451697bbf2ec6f11c84804e87121c341afc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b1a6cb6_5d078d25",
        "filename": "src/libANGLE/renderer/metal/BufferMtl.mm",
        "patchSetId": 2
      },
      "lineNbr": 645,
      "author": {
        "id": 1449558
      },
      "writtenOn": "2023-05-02T18:45:36Z",
      "side": 1,
      "message": "Just a refresher for me, I don\u0027t remember exactly how the ordering goes:\nSo here we leave the current render encoder open, with the intention that the next draw call can be added to the render pass.\n\nSo suppose the next draw call is supposed to use the contents of the new buffer.\n\nBy intention the draw call will be appended to the open render encoder, while the new buffer blit is sitting in the (uncommitted?) blit encoder?",
      "revId": "18ca451697bbf2ec6f11c84804e87121c341afc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3e952c67_07da48bc",
        "filename": "src/libANGLE/renderer/metal/BufferMtl.mm",
        "patchSetId": 2
      },
      "lineNbr": 645,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2023-05-06T09:34:14Z",
      "side": 1,
      "message": "I\u0027m not 100% sure but it looks like the blit encoder puts its commands into the same command buffer that the render encoder does, so these blit commands are inlined directly into the rendering command stream.",
      "parentUuid": "3b1a6cb6_5d078d25",
      "revId": "18ca451697bbf2ec6f11c84804e87121c341afc2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}