{
  "comments": [
    {
      "key": {
        "uuid": "42850d03_52891ded",
        "filename": "src/libANGLE/renderer/gl/renderergl_utils.cpp",
        "patchSetId": 20
      },
      "lineNbr": 636,
      "author": {
        "id": 1161747
      },
      "writtenOn": "2017-02-15T10:29:19Z",
      "side": 1,
      "message": "Without these this patch will fail on Android trybots.",
      "revId": "00f55cd7f0418b6ddb6712727e83af19776435b9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4f55d1ca_26b69d5e",
        "filename": "src/libANGLE/renderer/gl/renderergl_utils.cpp",
        "patchSetId": 20
      },
      "lineNbr": 636,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2017-02-15T15:20:06Z",
      "side": 1,
      "message": "This sounds like a bug in the Android driver, it would be interesting to know what value it returns for MAX_VERTEX_ATTRIB_RELATIVE_OFFSET and see if there is a better fix that putting the minimum maximum required by the spec.",
      "parentUuid": "42850d03_52891ded",
      "revId": "00f55cd7f0418b6ddb6712727e83af19776435b9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "765b1a68_e991879f",
        "filename": "src/libANGLE/renderer/gl/renderergl_utils.cpp",
        "patchSetId": 20
      },
      "lineNbr": 636,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2017-02-16T01:25:40Z",
      "side": 1,
      "message": "Nexus 5X returns 2147483647 for both GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET and GL_MAX_VERTEX_ATTRIB_STRIDE.\nSeems legit.",
      "parentUuid": "4f55d1ca_26b69d5e",
      "revId": "00f55cd7f0418b6ddb6712727e83af19776435b9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eb52843f_3968d410",
        "filename": "src/libANGLE/renderer/gl/renderergl_utils.cpp",
        "patchSetId": 20
      },
      "lineNbr": 636,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2017-02-16T01:32:11Z",
      "side": 1,
      "message": "Math certainly overflows in DrawArraysWithStrideAndOffset() with these values. Better fix the test.",
      "parentUuid": "765b1a68_e991879f",
      "revId": "00f55cd7f0418b6ddb6712727e83af19776435b9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3b5e9e4b_b995989c",
        "filename": "src/libANGLE/renderer/gl/renderergl_utils.cpp",
        "patchSetId": 20
      },
      "lineNbr": 636,
      "author": {
        "id": 1161747
      },
      "writtenOn": "2017-02-16T01:46:51Z",
      "side": 1,
      "message": "Hi, Yuly, thanks for pointing out the math overflow issue. I will fix it.\n\nThis test is for enabling ES3.1 feature Vertex Attrib Binding. In ES3.1 dEQP there is a test which requires the minimum value of GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET to be 2047 and GL_MAX_VERTEX_ATTRIB_STRIDE to be 2048:\nhttps://chromium.googlesource.com/external/deqp/+/lollipop-mr1-dev/modules/gles31/functional/es31fIntegerStateQueryTests.cpp#641\n\nSoI think it is legal on Nexus 5X, and these restrictions are necessary to fit all platforms.",
      "parentUuid": "eb52843f_3968d410",
      "revId": "00f55cd7f0418b6ddb6712727e83af19776435b9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c382b6e5_15d191d7",
        "filename": "src/libANGLE/renderer/gl/renderergl_utils.cpp",
        "patchSetId": 20
      },
      "lineNbr": 636,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2017-02-16T02:09:47Z",
      "side": 1,
      "message": "Not sure why you mention this dEQP test. It makes sure that GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET \u003e\u003d 2047 \u0026\u0026 GL_MAX_VERTEX_ATTRIB_STRIDE \u003e\u003d 2048, which is what ES3.1 spec requires. This check is certainly true for 2147483647.\n\nThese 2 lines should be removed.",
      "parentUuid": "3b5e9e4b_b995989c",
      "revId": "00f55cd7f0418b6ddb6712727e83af19776435b9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "68cc4388_efc8069f",
        "filename": "src/libANGLE/renderer/gl/renderergl_utils.cpp",
        "patchSetId": 20
      },
      "lineNbr": 636,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2017-02-16T02:18:57Z",
      "side": 1,
      "message": "Or do you think there are platforms which don\u0027t conform to ES3.1 spec, and on these platforms GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET \u003c 2047 || GL_MAX_VERTEX_ATTRIB_STRIDE \u003c 2048?\nIn that case:\n1. This should be std::max() and not std::min().\n2. This is not enough, you need to emulate in ANGLE the correct behavior for strides and offsets which are not supported natively.",
      "parentUuid": "c382b6e5_15d191d7",
      "revId": "00f55cd7f0418b6ddb6712727e83af19776435b9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4ac90589_74f1b570",
        "filename": "src/libANGLE/renderer/gl/renderergl_utils.cpp",
        "patchSetId": 20
      },
      "lineNbr": 636,
      "author": {
        "id": 1161747
      },
      "writtenOn": "2017-02-16T05:16:17Z",
      "side": 1,
      "message": "Should we make ANGLE return unified values for thes queries regardless of the actual backend? Or just leave them having different values on different platforms?",
      "parentUuid": "68cc4388_efc8069f",
      "revId": "00f55cd7f0418b6ddb6712727e83af19776435b9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}