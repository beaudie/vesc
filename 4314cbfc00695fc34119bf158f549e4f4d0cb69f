{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "3ac6b53b_d991d219",
        "filename": "BUILD.gn",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-04-29T18:48:09Z",
      "side": 1,
      "message": "still looking for separate libraries for icd/canonical functions",
      "revId": "4314cbfc00695fc34119bf158f549e4f4d0cb69f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b2d7d155_2244b08e",
        "filename": "BUILD.gn",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-04-29T18:48:33Z",
      "side": 1,
      "message": "Ack, my bad, was looking in the wrong place.",
      "parentUuid": "3ac6b53b_d991d219",
      "revId": "4314cbfc00695fc34119bf158f549e4f4d0cb69f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f0730659_963c0600",
        "filename": "gni/angle.gni",
        "patchSetId": 10
      },
      "lineNbr": 147,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-04-29T18:51:55Z",
      "side": 1,
      "message": "please remove this now that the prior change landed.",
      "range": {
        "startLine": 142,
        "startChar": 0,
        "endLine": 147,
        "endChar": 1
      },
      "revId": "4314cbfc00695fc34119bf158f549e4f4d0cb69f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d392894b_7f4a3150",
        "filename": "gni/angle.gni",
        "patchSetId": 10
      },
      "lineNbr": 147,
      "author": {
        "id": 1499132
      },
      "writtenOn": "2021-04-29T19:47:15Z",
      "side": 1,
      "message": "Yes, replaced with an assertion, so someone who manually tries to configure OpenCL with Windows UWP will get a meaningful error message instead of a failing build.",
      "parentUuid": "f0730659_963c0600",
      "range": {
        "startLine": 142,
        "startChar": 0,
        "endLine": 147,
        "endChar": 1
      },
      "revId": "4314cbfc00695fc34119bf158f549e4f4d0cb69f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eb97e2c6_e69bca93",
        "filename": "include/angle_cl.h",
        "patchSetId": 10
      },
      "lineNbr": 41,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-04-29T18:51:55Z",
      "side": 1,
      "message": "nit: please make this private/protected to follow the mNaming.",
      "range": {
        "startLine": 41,
        "startChar": 33,
        "endLine": 41,
        "endChar": 42
      },
      "revId": "4314cbfc00695fc34119bf158f549e4f4d0cb69f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8d54b563_ab2933e7",
        "filename": "include/angle_cl.h",
        "patchSetId": 10
      },
      "lineNbr": 41,
      "author": {
        "id": 1499132
      },
      "writtenOn": "2021-04-29T19:47:15Z",
      "side": 1,
      "message": "I had it private in an earlier patchset, but the templated static_assert in msvc couldn\u0027t access it. Maybe it works now.",
      "parentUuid": "eb97e2c6_e69bca93",
      "range": {
        "startLine": 41,
        "startChar": 33,
        "endLine": 41,
        "endChar": 42
      },
      "revId": "4314cbfc00695fc34119bf158f549e4f4d0cb69f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e858a604_99feb69b",
        "filename": "include/angle_cl.h",
        "patchSetId": 10
      },
      "lineNbr": 41,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-04-29T19:51:49Z",
      "side": 1,
      "message": "OK, let\u0027s see if the error comes up and we can see if we can solve it.",
      "parentUuid": "8d54b563_ab2933e7",
      "range": {
        "startLine": 41,
        "startChar": 33,
        "endLine": 41,
        "endChar": 42
      },
      "revId": "4314cbfc00695fc34119bf158f549e4f4d0cb69f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9f4c3ae5_b50637f8",
        "filename": "include/angle_cl.h",
        "patchSetId": 10
      },
      "lineNbr": 41,
      "author": {
        "id": 1499132
      },
      "writtenOn": "2021-04-29T20:16:30Z",
      "side": 1,
      "message": "Compiling now",
      "parentUuid": "e858a604_99feb69b",
      "range": {
        "startLine": 41,
        "startChar": 33,
        "endLine": 41,
        "endChar": 42
      },
      "revId": "4314cbfc00695fc34119bf158f549e4f4d0cb69f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f9145ff8_c0963653",
        "filename": "src/libANGLE/CLObject.h",
        "patchSetId": 10
      },
      "lineNbr": 22,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-04-29T18:51:55Z",
      "side": 1,
      "message": "nit: I\u0027d remove this for now as you have already implemented the dispatch elsewhere.",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 22,
        "endChar": 0
      },
      "revId": "4314cbfc00695fc34119bf158f549e4f4d0cb69f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "70b2cbf0_b1bcfb84",
        "filename": "src/libANGLE/CLObject.h",
        "patchSetId": 10
      },
      "lineNbr": 22,
      "author": {
        "id": 1499132
      },
      "writtenOn": "2021-04-29T19:47:15Z",
      "side": 1,
      "message": "This class will be filled anyway with more functionality in the coming days, so please let it in for now.",
      "parentUuid": "f9145ff8_c0963653",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 22,
        "endChar": 0
      },
      "revId": "4314cbfc00695fc34119bf158f549e4f4d0cb69f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3682821a_f8150e12",
        "filename": "src/libANGLE/CLObject.h",
        "patchSetId": 10
      },
      "lineNbr": 22,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-04-29T19:51:49Z",
      "side": 1,
      "message": "OK. If you can somehow enforce no virtual functions that would be appreciated. Otherwise I think the vtable will break the ICD requirement of having dispatch be the first element.",
      "parentUuid": "70b2cbf0_b1bcfb84",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 22,
        "endChar": 0
      },
      "revId": "4314cbfc00695fc34119bf158f549e4f4d0cb69f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6a838ec3_10b09b48",
        "filename": "src/libANGLE/CLProgram.h",
        "patchSetId": 10
      },
      "lineNbr": 20,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-04-29T18:51:55Z",
      "side": 1,
      "message": "nit: can you make cpp files for these and embed them there to prevent the cons/dtr being inlined in multiple files? You\u0027ll need the cpp in a follow-up patch in any case.",
      "range": {
        "startLine": 20,
        "startChar": 17,
        "endLine": 20,
        "endChar": 24
      },
      "revId": "4314cbfc00695fc34119bf158f549e4f4d0cb69f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7bd05f16_47728337",
        "filename": "src/libANGLE/CLProgram.h",
        "patchSetId": 10
      },
      "lineNbr": 20,
      "author": {
        "id": 1499132
      },
      "writtenOn": "2021-04-29T19:47:15Z",
      "side": 1,
      "message": "Sure, I moved the constructors to the existing cpp files. I planned to move them anyway in the next days.\n\nThe default destructors can stay in the header. A defining declaration inside a class body is implicitly declared inline, so the compiler will avoid symbol conflicts.",
      "parentUuid": "6a838ec3_10b09b48",
      "range": {
        "startLine": 20,
        "startChar": 17,
        "endLine": 20,
        "endChar": 24
      },
      "revId": "4314cbfc00695fc34119bf158f549e4f4d0cb69f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8350aa76_6e566392",
        "filename": "src/libANGLE/CLProgram.h",
        "patchSetId": 10
      },
      "lineNbr": 20,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-04-29T19:51:49Z",
      "side": 1,
      "message": "Beware of inline destructors. \n\nhttps://google.github.io/styleguide/cppguide.html#Inline_Functions\n\nFor now put them in the cpp. That ok?",
      "parentUuid": "7bd05f16_47728337",
      "range": {
        "startLine": 20,
        "startChar": 17,
        "endLine": 20,
        "endChar": 24
      },
      "revId": "4314cbfc00695fc34119bf158f549e4f4d0cb69f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "37b645b4_c2c50a9c",
        "filename": "src/libANGLE/CLProgram.h",
        "patchSetId": 10
      },
      "lineNbr": 20,
      "author": {
        "id": 1499132
      },
      "writtenOn": "2021-04-29T20:16:30Z",
      "side": 1,
      "message": "As discussed.",
      "parentUuid": "8350aa76_6e566392",
      "range": {
        "startLine": 20,
        "startChar": 17,
        "endLine": 20,
        "endChar": 24
      },
      "revId": "4314cbfc00695fc34119bf158f549e4f4d0cb69f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}