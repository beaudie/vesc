{
  "comments": [
    {
      "key": {
        "uuid": "ba8b239f_e8249f9b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 13,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2020-04-09T16:17:06Z",
      "side": 1,
      "message": "write directly to a new VkBuffer that will be used for\nsubsequent gpu operations.",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 13,
        "endChar": 25
      },
      "revId": "8f4d94a300e57e0a4cdc2eb71396494c0cb997d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "98774e2f_dd768b37",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 13,
      "author": {
        "id": 1359667
      },
      "writtenOn": "2020-04-13T18:43:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ba8b239f_e8249f9b",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 13,
        "endChar": 25
      },
      "revId": "8f4d94a300e57e0a4cdc2eb71396494c0cb997d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d61daf0d_719934d8",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 523,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2020-04-09T16:12:46Z",
      "side": 1,
      "message": "// if the buffer is currently in use -\n//     if size matches mBuffer\u0027s size, acquire a new BufferHelper from the pool\n//     else stage an update\n// else update the buffer directly",
      "range": {
        "startLine": 523,
        "startChar": 4,
        "endLine": 523,
        "endChar": 97
      },
      "revId": "8f4d94a300e57e0a4cdc2eb71396494c0cb997d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3912dc52_b2c03cf0",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 523,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-04-10T15:42:00Z",
      "side": 1,
      "message": "allocate says:\n\n    // Is the buffer being respecified\n    if (sizeInBytes !\u003d mSize)\n    {\n        ...\n\nSo it looks like the buffer pool is capable of handling the resize. stagedUpdate shouldn\u0027t be necessary then, isn\u0027t that right?",
      "parentUuid": "d61daf0d_719934d8",
      "range": {
        "startLine": 523,
        "startChar": 4,
        "endLine": 523,
        "endChar": 97
      },
      "revId": "8f4d94a300e57e0a4cdc2eb71396494c0cb997d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bf3c80fa_12478603",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 523,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2020-04-10T16:18:10Z",
      "side": 1,
      "message": "stagedUpdate is used when size \u003c mBuffer\u0027s size, which implies we are not respecifying the entire buffer but just updating a subsection of the buffer",
      "parentUuid": "3912dc52_b2c03cf0",
      "range": {
        "startLine": 523,
        "startChar": 4,
        "endLine": 523,
        "endChar": 97
      },
      "revId": "8f4d94a300e57e0a4cdc2eb71396494c0cb997d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b50f382f_dd2c2b85",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 523,
      "author": {
        "id": 1359667
      },
      "writtenOn": "2020-04-13T18:43:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bf3c80fa_12478603",
      "range": {
        "startLine": 523,
        "startChar": 4,
        "endLine": 523,
        "endChar": 97
      },
      "revId": "8f4d94a300e57e0a4cdc2eb71396494c0cb997d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e96b55ba_d55e162f",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 526,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2020-04-09T16:12:46Z",
      "side": 1,
      "message": "you can then remove this comment",
      "revId": "8f4d94a300e57e0a4cdc2eb71396494c0cb997d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "973fab81_1f199f1a",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 526,
      "author": {
        "id": 1359667
      },
      "writtenOn": "2020-04-13T18:43:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e96b55ba_d55e162f",
      "revId": "8f4d94a300e57e0a4cdc2eb71396494c0cb997d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e10bb2dd_1864c22f",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 5
      },
      "lineNbr": 199,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-04-10T15:42:00Z",
      "side": 1,
      "message": "Couldn\u0027t DynamicBuffer be used directly? Maybe the functionality of this class could have just been part of the BufferVk class itself. Do you envision other possible users of this?",
      "range": {
        "startLine": 199,
        "startChar": 3,
        "endLine": 199,
        "endChar": 34
      },
      "revId": "8f4d94a300e57e0a4cdc2eb71396494c0cb997d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "da8a666c_ecce8159",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 5
      },
      "lineNbr": 199,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2020-04-10T16:18:10Z",
      "side": 1,
      "message": "1. allocate is different since no offsets or chunks are invloved\n2. conditions that \"release\" buffer is different\n3. we may want to later introduce a limit/cap on how many buffers we can acquire from the pool, having a dedicated class provides nice encapsultation\n\nif it is really needed we could roll this all in into the dynamicbuffer class itself but i felt that would conflate 2 different purposes unnecessarily",
      "parentUuid": "e10bb2dd_1864c22f",
      "range": {
        "startLine": 199,
        "startChar": 3,
        "endLine": 199,
        "endChar": 34
      },
      "revId": "8f4d94a300e57e0a4cdc2eb71396494c0cb997d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5d56d232_8eed2717",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 5
      },
      "lineNbr": 202,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2020-04-09T16:17:06Z",
      "side": 1,
      "message": "we can have a follow up change that has a \"maxBufferHelperCount\" that caps the number\nof buffers that can be in the pool taking into account the size requested",
      "revId": "8f4d94a300e57e0a4cdc2eb71396494c0cb997d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0aeeee9b_84766860",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 5
      },
      "lineNbr": 202,
      "author": {
        "id": 1359667
      },
      "writtenOn": "2020-04-13T18:43:58Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "5d56d232_8eed2717",
      "revId": "8f4d94a300e57e0a4cdc2eb71396494c0cb997d3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}