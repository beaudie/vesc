{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ca5b5602_3804975d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2022-08-24T04:28:07Z",
      "side": 1,
      "message": "LGTM, might be able to remove `kEnumInvalid` if you can cast some of the packed enums. +2\u0027ing for timezone friendly review.",
      "revId": "974b3e56ccb95c54bd3d0687b9f35c4f771c94a6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f4538b8f_7d8bcca2",
        "filename": "src/libANGLE/validationES1.cpp",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2022-08-24T04:28:07Z",
      "side": 1,
      "message": "Can you use `ToGLenum(AlphaTestFunc from)` to write this out?",
      "range": {
        "startLine": 37,
        "startChar": 12,
        "endLine": 37,
        "endChar": 16
      },
      "revId": "974b3e56ccb95c54bd3d0687b9f35c4f771c94a6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "75a8cb90_ec5e4d0a",
        "filename": "src/libANGLE/validationES1.cpp",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 1491687
      },
      "writtenOn": "2022-08-24T08:43:41Z",
      "side": 1,
      "message": "I had this initially like that but added these 4 exceptions since `ToGLenum(AlphaTestFunc::InvalidEnum)` will trigger an assertion, as it is not mappable to a GL enum. This is the reason I added the `kEnumInvalid` error string, that does not take a value argument.",
      "parentUuid": "f4538b8f_7d8bcca2",
      "range": {
        "startLine": 37,
        "startChar": 12,
        "endLine": 37,
        "endChar": 16
      },
      "revId": "974b3e56ccb95c54bd3d0687b9f35c4f771c94a6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "50a05fb5_8b4fa96b",
        "filename": "src/libANGLE/validationES1.cpp",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2022-08-24T15:49:27Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "75a8cb90_ec5e4d0a",
      "range": {
        "startLine": 37,
        "startChar": 12,
        "endLine": 37,
        "endChar": 16
      },
      "revId": "974b3e56ccb95c54bd3d0687b9f35c4f771c94a6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "883fa2be_8f277379",
        "filename": "src/libANGLE/validationES2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1671,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2022-08-24T04:28:07Z",
      "side": 1,
      "message": "Same here, can we write this out using `GLenum ToGLenum(TextureType from)`?",
      "range": {
        "startLine": 1671,
        "startChar": 0,
        "endLine": 1671,
        "endChar": 80
      },
      "revId": "974b3e56ccb95c54bd3d0687b9f35c4f771c94a6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8b2a4008_b88a907f",
        "filename": "src/libANGLE/validationES2.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1671,
      "author": {
        "id": 1491687
      },
      "writtenOn": "2022-08-25T14:18:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "883fa2be_8f277379",
      "range": {
        "startLine": 1671,
        "startChar": 0,
        "endLine": 1671,
        "endChar": 80
      },
      "revId": "974b3e56ccb95c54bd3d0687b9f35c4f771c94a6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "be6662cd_ce16ca62",
        "filename": "src/libANGLE/validationES3.cpp",
        "patchSetId": 2
      },
      "lineNbr": 624,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2022-08-24T04:28:07Z",
      "side": 1,
      "message": "Same here: `ToGLenum(TextureType from)`",
      "range": {
        "startLine": 624,
        "startChar": 0,
        "endLine": 624,
        "endChar": 80
      },
      "revId": "974b3e56ccb95c54bd3d0687b9f35c4f771c94a6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "63cceacb_3c8d61f5",
        "filename": "src/libANGLE/validationES3.cpp",
        "patchSetId": 2
      },
      "lineNbr": 624,
      "author": {
        "id": 1491687
      },
      "writtenOn": "2022-08-25T14:18:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "be6662cd_ce16ca62",
      "range": {
        "startLine": 624,
        "startChar": 0,
        "endLine": 624,
        "endChar": 80
      },
      "revId": "974b3e56ccb95c54bd3d0687b9f35c4f771c94a6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2e9d2984_c5202b15",
        "filename": "src/libANGLE/validationES3.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2271,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2022-08-24T04:28:07Z",
      "side": 1,
      "message": "If the pattern holds, can use `ToGLenum(BufferBinding from)` here",
      "range": {
        "startLine": 2271,
        "startChar": 0,
        "endLine": 2271,
        "endChar": 80
      },
      "revId": "974b3e56ccb95c54bd3d0687b9f35c4f771c94a6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4d5e8cd9_a01efc4b",
        "filename": "src/libANGLE/validationES3.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2271,
      "author": {
        "id": 1491687
      },
      "writtenOn": "2022-08-25T14:18:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2e9d2984_c5202b15",
      "range": {
        "startLine": 2271,
        "startChar": 0,
        "endLine": 2271,
        "endChar": 80
      },
      "revId": "974b3e56ccb95c54bd3d0687b9f35c4f771c94a6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:approval_code-owners"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "974b3e56ccb95c54bd3d0687b9f35c4f771c94a6",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "974b3e56ccb95c54bd3d0687b9f35c4f771c94a6",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "974b3e56ccb95c54bd3d0687b9f35c4f771c94a6",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "974b3e56ccb95c54bd3d0687b9f35c4f771c94a6",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}