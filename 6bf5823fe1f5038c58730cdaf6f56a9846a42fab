{
  "comments": [
    {
      "key": {
        "uuid": "f193e272_194bba55",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-06-06T01:35:35Z",
      "side": 1,
      "message": "What exactly is the issue here? No time for a proper fix? Some issue with drivers?\n\nWouldn\u0027t it be enough to make the copy shader apply (or unapply?) an sRGB transformation?",
      "range": {
        "startLine": 9,
        "startChar": 21,
        "endLine": 9,
        "endChar": 42
      },
      "revId": "6bf5823fe1f5038c58730cdaf6f56a9846a42fab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2b8a5900_a89c9f57",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1369468
      },
      "writtenOn": "2020-06-08T14:41:39Z",
      "side": 1,
      "message": "When using the draw path, the values sampled from the RGBA source texture (the Canvas) will be converted to sRGB when stored in the target sRGB texture. What\u0027s needed here is that no conversion occurs at all when storing in the sRGB buffer, but there isn\u0027t an easy way to do that using the draw path.\n\nOne way would be to modify the copy fragment shader that ANGLE uses so that when copying to an sRGB texture, have it perform an sRGB -\u003e Linear conversion of the sampled texels so that when they get converted to sRGB on write to the target texture, they end up with the original value. This would means adding another flag to the current set of flags (isInt, isFloat, isArray), and I\u0027m not sure this is really what you\u0027d want.\n\nThis bug is something I spent time looking at with geofflang@, and once we realized this bug was something that occured for all Vulkan drivers, he suggested that we handle this in the same was as is done for the GL backend.",
      "parentUuid": "f193e272_194bba55",
      "range": {
        "startLine": 9,
        "startChar": 21,
        "endLine": 9,
        "endChar": 42
      },
      "revId": "6bf5823fe1f5038c58730cdaf6f56a9846a42fab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f35e4bab_697bd2ed",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-06-08T15:02:32Z",
      "side": 1,
      "message": "Well, if a feature goes through a CPU readback path, it\u0027s worse than not existing in my opinion, as it severely hurts an applications framerate. At least if the feature doesn\u0027t exist, the application has a chance to do something else, which we are taking away by providing an inefficient implementation.\n\nThe shader compilation flags are used for things we can\u0027t really choose dynamically, such as sampler types etc. For something like this, you can simply add a flag to the push constants sent to the shader, and add a simple `if` in the body to do the sRGB-\u003eLinear conversion. Let me know on Chat if you need help figuring out how to do that.",
      "parentUuid": "2b8a5900_a89c9f57",
      "range": {
        "startLine": 9,
        "startChar": 21,
        "endLine": 9,
        "endChar": 42
      },
      "revId": "6bf5823fe1f5038c58730cdaf6f56a9846a42fab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd90d786_2caddc26",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1369468
      },
      "writtenOn": "2020-06-08T15:14:39Z",
      "side": 1,
      "message": "I suggest we go with this, as it\u0027s the solution in place for the GL backend, and is what geofflang@ recommended, and you can follow up with an optimization change, as you suggest. What do you think?",
      "parentUuid": "f35e4bab_697bd2ed",
      "range": {
        "startLine": 9,
        "startChar": 21,
        "endLine": 9,
        "endChar": 42
      },
      "revId": "6bf5823fe1f5038c58730cdaf6f56a9846a42fab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "63433ac2_61762123",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1369468
      },
      "writtenOn": "2020-06-08T15:22:11Z",
      "side": 1,
      "message": "Also, am a bit confused by this:\n\n\u003e Well, if a feature goes through a CPU readback path, it\u0027s worse than not existing in my opinion, as it severely hurts an applications framerate. At least if the feature doesn\u0027t exist, the application has a chance to do something else, which we are taking away by providing an inefficient implementation.\n\nThis isn\u0027t a feature, it\u0027s a bug fix. Without this change, code that uses glTexImage2D to load values from a non-sRGB to an sRGB texture will not work correctly.",
      "parentUuid": "dd90d786_2caddc26",
      "range": {
        "startLine": 9,
        "startChar": 21,
        "endLine": 9,
        "endChar": 42
      },
      "revId": "6bf5823fe1f5038c58730cdaf6f56a9846a42fab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dbaf2906_cf106a04",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-06-08T15:24:13Z",
      "side": 1,
      "message": "The feature is sRGB support.\n\nOk, if you\u0027re not up to the task, I can handle it myself. You can commit this.",
      "parentUuid": "63433ac2_61762123",
      "range": {
        "startLine": 9,
        "startChar": 21,
        "endLine": 9,
        "endChar": 42
      },
      "revId": "6bf5823fe1f5038c58730cdaf6f56a9846a42fab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bf19f908_bc63ab4a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1369468
      },
      "writtenOn": "2020-06-08T15:28:19Z",
      "side": 1,
      "message": "\u003e The feature is sRGB support.\n\nI don\u0027t fully agree. If sRGB support is a feature that\u0027s lacking, then attempting to use it should report some kind of \"unsupported\" error. Right now, it does something without error, and produces the wrong result. Semantics, perhaps, but to me, this change is a bug fix, not a feature.\n\n \n\u003e Ok, if you\u0027re not up to the task, I can handle it myself.\n\nTo be clear, it\u0027s not that I\u0027m not up to it. I don\u0027t think it should be done as part of this change. The goal of this change is to fix a bug in the most straightforward way so that WebGL conformance tests pass for SWANGLE. Making it faster can be done later. Note that optimizing this path implies that it should also be done for the other backends, including GL, and probably D3D.\n\n\u003e You can commit this.\n\nThanks.",
      "parentUuid": "dbaf2906_cf106a04",
      "range": {
        "startLine": 9,
        "startChar": 21,
        "endLine": 9,
        "endChar": 42
      },
      "revId": "6bf5823fe1f5038c58730cdaf6f56a9846a42fab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}