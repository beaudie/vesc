{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "937a99b0_269f7b8f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-02-02T17:51:44Z",
      "side": 1,
      "message": "i modified the bitsetiteratorperf test and these are the numbers -\nnote -\nBitSetIteratorPerfTest/5 \u003d\u003d angle::BitSet\u003c96\u003e\nBitSetIteratorPerfTest/6 \u003d\u003d angle::BitSetLarge\u003c96\u003e\nBitSetIteratorPerfTest/7 \u003d\u003d angle::BitSet128\u003c96\u003e\n\n[----------] 1 test from BitSetIteratorPerfTest/5, where TypeParam \u003d \u003ctype\u003e\n[ RUN      ] BitSetIteratorPerfTest/5.Run\n*RESULT BitSetIteratorPerf.wall_time: run\u003d 1700.0129446387 ns\nRESULT BitSetIteratorPerf.trial_steps: run\u003d 1 count\nRESULT BitSetIteratorPerf.total_steps: run\u003d 1 count\n*RESULT BitSetIteratorPerf.wall_time: run\u003d 1499.9823179096 ns\nRESULT BitSetIteratorPerf.trial_steps: run\u003d 1 count\nRESULT BitSetIteratorPerf.total_steps: run\u003d 2 count\n*RESULT BitSetIteratorPerf.wall_time: run\u003d 1500.0114217401 ns\nRESULT BitSetIteratorPerf.trial_steps: run\u003d 1 count\nRESULT BitSetIteratorPerf.total_steps: run\u003d 3 count\n[       OK ] BitSetIteratorPerfTest/5.Run (1 ms)\n[----------] 1 test from BitSetIteratorPerfTest/5 (1 ms total)\n\n[----------] 1 test from BitSetIteratorPerfTest/6, where TypeParam \u003d \u003ctype\u003e\n[ RUN      ] BitSetIteratorPerfTest/6.Run\n*RESULT BitSetIteratorPerf.wall_time: run\u003d 300.0022843480 ns\nRESULT BitSetIteratorPerf.trial_steps: run\u003d 1 count\nRESULT BitSetIteratorPerf.total_steps: run\u003d 1 count\n*RESULT BitSetIteratorPerf.wall_time: run\u003d 300.0022843480 ns\nRESULT BitSetIteratorPerf.trial_steps: run\u003d 1 count\nRESULT BitSetIteratorPerf.total_steps: run\u003d 2 count\n*RESULT BitSetIteratorPerf.wall_time: run\u003d 300.0022843480 ns\nRESULT BitSetIteratorPerf.trial_steps: run\u003d 1 count\nRESULT BitSetIteratorPerf.total_steps: run\u003d 3 count\n[       OK ] BitSetIteratorPerfTest/6.Run (1 ms)\n[----------] 1 test from BitSetIteratorPerfTest/6 (2 ms total)\n\n[----------] 1 test from BitSetIteratorPerfTest/7, where TypeParam \u003d \u003ctype\u003e\n[ RUN      ] BitSetIteratorPerfTest/7.Run\n*RESULT BitSetIteratorPerf.wall_time: run\u003d 400.0030457973 ns\nRESULT BitSetIteratorPerf.trial_steps: run\u003d 1 count\nRESULT BitSetIteratorPerf.total_steps: run\u003d 1 count\n*RESULT BitSetIteratorPerf.wall_time: run\u003d 300.0022843480 ns\nRESULT BitSetIteratorPerf.trial_steps: run\u003d 1 count\nRESULT BitSetIteratorPerf.total_steps: run\u003d 2 count\n*RESULT BitSetIteratorPerf.wall_time: run\u003d 300.0022843480 ns\nRESULT BitSetIteratorPerf.trial_steps: run\u003d 1 count\nRESULT BitSetIteratorPerf.total_steps: run\u003d 3 count\n[       OK ] BitSetIteratorPerfTest/7.Run (1 ms)\n[----------] 1 test from BitSetIteratorPerfTest/7 (2 ms total)",
      "revId": "9ee0e2135a86ef3fe44609df32680136e7f34b8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1963389f_abddaace",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-02-02T17:53:48Z",
      "side": 1,
      "message": "right now my bandwidth is limited, if more profiling is needed could you guys please help out?\n\nonce we decide on which class to use i will take care of the comments related to style and fix the 32bit problem with BitSet128",
      "revId": "9ee0e2135a86ef3fe44609df32680136e7f34b8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c90bce17_51c6fff7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-02-02T19:19:49Z",
      "side": 1,
      "message": "FYI - something i noticed and was a bit surprising, BitSetLarge performs marginally better than BitSet128. in the texture perf benchmark the numbers are like ~820ns and ~830ns respectively.",
      "parentUuid": "937a99b0_269f7b8f",
      "revId": "9ee0e2135a86ef3fe44609df32680136e7f34b8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bcb76dfc_00910619",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-02-02T19:24:00Z",
      "side": 1,
      "message": "I would prefer sticking with BitSetLarge and getting rid of BitSet128. Given the added benefit that 32bit is already taken care of in BitSetLarge",
      "parentUuid": "c90bce17_51c6fff7",
      "revId": "9ee0e2135a86ef3fe44609df32680136e7f34b8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "62ecbf9a_55849c95",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-02-02T19:38:03Z",
      "side": 1,
      "message": "OK Mohan. Let me run the numbers on my machine and see if I can replicate your results.",
      "parentUuid": "bcb76dfc_00910619",
      "revId": "9ee0e2135a86ef3fe44609df32680136e7f34b8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3b86defe_e9978cb8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-02-02T19:43:34Z",
      "side": 1,
      "message": "thanks jamie, here are the 2 command lines i used to run the tests -\n\n1. ./out/Release/angle_perftests.exe --gtest_filter\u003dTexturesBenchmark.Run/vulkan_null_8_textures_5_rebind_3_state_8_mips\n2. ./out/Release/angle_white_box_perftests.exe --gtest_filter\u003dBitSetIteratorPerfTest*",
      "parentUuid": "62ecbf9a_55849c95",
      "revId": "9ee0e2135a86ef3fe44609df32680136e7f34b8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8091dc23_4efc7b96",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-02-02T20:03:57Z",
      "side": 1,
      "message": "With BitSetIteratorPerfTest*, BitSetLarge performs marginally but consistently better than BitSet128 for me too.",
      "parentUuid": "3b86defe_e9978cb8",
      "revId": "9ee0e2135a86ef3fe44609df32680136e7f34b8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9ddfc0c1_ef1441f5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-02-03T19:46:32Z",
      "side": 1,
      "message": "jamie, new data with your perf harness iteration count fix -\n\n[----------] 1 test from BitSetIteratorPerfTest/5, where TypeParam \u003d \u003ctype\u003e\n[ RUN      ] BitSetIteratorPerfTest/5.Run\n*RESULT BitSetIteratorPerf.wall_time: run\u003d 1252.0331836686 ns\nRESULT BitSetIteratorPerf.trial_steps: run\u003d 736628 count\nRESULT BitSetIteratorPerf.total_steps: run\u003d 1473257 count\n*RESULT BitSetIteratorPerf.wall_time: run\u003d 1279.2891391420 ns\nRESULT BitSetIteratorPerf.trial_steps: run\u003d 736628 count\nRESULT BitSetIteratorPerf.total_steps: run\u003d 2209885 count\n*RESULT BitSetIteratorPerf.wall_time: run\u003d 1331.6773188142 ns\nRESULT BitSetIteratorPerf.trial_steps: run\u003d 736628 count\nRESULT BitSetIteratorPerf.total_steps: run\u003d 2946513 count\n[       OK ] BitSetIteratorPerfTest/5.Run (3850 ms)\n[----------] 1 test from BitSetIteratorPerfTest/5 (3851 ms total)\n\n[----------] 1 test from BitSetIteratorPerfTest/6, where TypeParam \u003d \u003ctype\u003e\n[ RUN      ] BitSetIteratorPerfTest/6.Run\n*RESULT BitSetIteratorPerf.wall_time: run\u003d 159.4278510872 ns\nRESULT BitSetIteratorPerf.trial_steps: run\u003d 5966943 count\nRESULT BitSetIteratorPerf.total_steps: run\u003d 11933889 count\n*RESULT BitSetIteratorPerf.wall_time: run\u003d 166.5619229193 ns\nRESULT BitSetIteratorPerf.trial_steps: run\u003d 5966943 count\nRESULT BitSetIteratorPerf.total_steps: run\u003d 17900832 count\n*RESULT BitSetIteratorPerf.wall_time: run\u003d 163.9136824272 ns\nRESULT BitSetIteratorPerf.trial_steps: run\u003d 5966943 count\nRESULT BitSetIteratorPerf.total_steps: run\u003d 23867775 count\n[       OK ] BitSetIteratorPerfTest/6.Run (3928 ms)\n[----------] 1 test from BitSetIteratorPerfTest/6 (3929 ms total)\n\n[----------] 1 test from BitSetIteratorPerfTest/7, where TypeParam \u003d \u003ctype\u003e\n[ RUN      ] BitSetIteratorPerfTest/7.Run\n*RESULT BitSetIteratorPerf.wall_time: run\u003d 177.1952231688 ns\nRESULT BitSetIteratorPerf.trial_steps: run\u003d 5764915 count\nRESULT BitSetIteratorPerf.total_steps: run\u003d 11529832 count\n*RESULT BitSetIteratorPerf.wall_time: run\u003d 178.2739207782 ns\nRESULT BitSetIteratorPerf.trial_steps: run\u003d 5764915 count\nRESULT BitSetIteratorPerf.total_steps: run\u003d 17294747 count\n*RESULT BitSetIteratorPerf.wall_time: run\u003d 180.6482662863 ns\nRESULT BitSetIteratorPerf.trial_steps: run\u003d 5764915 count\nRESULT BitSetIteratorPerf.total_steps: run\u003d 23059662 count\n[       OK ] BitSetIteratorPerfTest/7.Run (4096 ms)\n[----------] 1 test from BitSetIteratorPerfTest/7 (4097 ms total)",
      "parentUuid": "8091dc23_4efc7b96",
      "revId": "9ee0e2135a86ef3fe44609df32680136e7f34b8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4d68743a_41fdf4dd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-02-04T19:42:20Z",
      "side": 1,
      "message": "Looks good re: the \"Large\" bitset. Sorry, had some comments that I missed sending off.",
      "parentUuid": "9ddfc0c1_ef1441f5",
      "revId": "9ee0e2135a86ef3fe44609df32680136e7f34b8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "adac4d8c_33b0d6fe",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-02-04T22:51:28Z",
      "side": 1,
      "message": "jamie, i sync\u0027d to tip before pushing patch and ran the perf tests once but for some reason i am now unable to get any wall_time/count or any such data when i run any perf test. It just writes total time into a file called \"output.json\" and nothing else. Is this a known problem?",
      "revId": "9ee0e2135a86ef3fe44609df32680136e7f34b8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "386d205c_dd7930e3",
        "filename": "src/common/bitset_utils.h",
        "patchSetId": 3
      },
      "lineNbr": 563,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-02-04T19:42:20Z",
      "side": 1,
      "message": "naming-wise, can we think about the name for this class a bit? Maybe BitSetArray?",
      "range": {
        "startLine": 563,
        "startChar": 6,
        "endLine": 563,
        "endChar": 17
      },
      "revId": "9ee0e2135a86ef3fe44609df32680136e7f34b8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d8218275_02733c7d",
        "filename": "src/common/bitset_utils.h",
        "patchSetId": 3
      },
      "lineNbr": 563,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-02-04T22:51:28Z",
      "side": 1,
      "message": "i really wanted to call it BigBitSet",
      "parentUuid": "386d205c_dd7930e3",
      "range": {
        "startLine": 563,
        "startChar": 6,
        "endLine": 563,
        "endChar": 17
      },
      "revId": "9ee0e2135a86ef3fe44609df32680136e7f34b8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6af852aa_5b97c89e",
        "filename": "src/common/bitset_utils.h",
        "patchSetId": 3
      },
      "lineNbr": 563,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-02-08T00:24:24Z",
      "side": 1,
      "message": "BitSetArray SGTM, will upload a patch soon",
      "parentUuid": "d8218275_02733c7d",
      "range": {
        "startLine": 563,
        "startChar": 6,
        "endLine": 563,
        "endChar": 17
      },
      "revId": "9ee0e2135a86ef3fe44609df32680136e7f34b8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5016bdcc_06431f81",
        "filename": "src/common/bitset_utils.h",
        "patchSetId": 3
      },
      "lineNbr": 573,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-02-04T19:42:20Z",
      "side": 1,
      "message": "same comment here - put a type inside the above ifdef and use it",
      "range": {
        "startLine": 567,
        "startChar": 0,
        "endLine": 573,
        "endChar": 39
      },
      "revId": "9ee0e2135a86ef3fe44609df32680136e7f34b8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f657dca1_d769fb2b",
        "filename": "src/common/bitset_utils.h",
        "patchSetId": 3
      },
      "lineNbr": 573,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-02-04T22:51:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5016bdcc_06431f81",
      "range": {
        "startLine": 567,
        "startChar": 0,
        "endLine": 573,
        "endChar": 39
      },
      "revId": "9ee0e2135a86ef3fe44609df32680136e7f34b8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b516c135_5f5642ba",
        "filename": "src/common/bitset_utils.h",
        "patchSetId": 3
      },
      "lineNbr": 585,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-02-04T19:42:20Z",
      "side": 1,
      "message": "I\u0027d make this \u003c\u003d the platform native word size, not 64. again using a constant defined above.",
      "range": {
        "startLine": 585,
        "startChar": 8,
        "endLine": 585,
        "endChar": 75
      },
      "revId": "9ee0e2135a86ef3fe44609df32680136e7f34b8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f6136955_a8372833",
        "filename": "src/common/bitset_utils.h",
        "patchSetId": 3
      },
      "lineNbr": 585,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-02-04T22:51:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b516c135_5f5642ba",
      "range": {
        "startLine": 585,
        "startChar": 8,
        "endLine": 585,
        "endChar": 75
      },
      "revId": "9ee0e2135a86ef3fe44609df32680136e7f34b8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c5432d6b_d200effa",
        "filename": "src/common/bitset_utils.h",
        "patchSetId": 3
      },
      "lineNbr": 796,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-02-04T19:42:20Z",
      "side": 1,
      "message": "Can you prove this function is more efficient than other paths? If not we should remove it because it doesn\u0027t exist in std::bitset.",
      "range": {
        "startLine": 796,
        "startChar": 9,
        "endLine": 796,
        "endChar": 19
      },
      "revId": "9ee0e2135a86ef3fe44609df32680136e7f34b8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3814f89e_bf4046b6",
        "filename": "src/common/bitset_utils.h",
        "patchSetId": 3
      },
      "lineNbr": 796,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-02-04T22:51:28Z",
      "side": 1,
      "message": "it takes lesser memory than the existing solution where it constructs a temp object which will need more instructions and hence less efficient? why are we trying to maintain compatibility with std::bitset?",
      "parentUuid": "c5432d6b_d200effa",
      "range": {
        "startLine": 796,
        "startChar": 9,
        "endLine": 796,
        "endChar": 19
      },
      "revId": "9ee0e2135a86ef3fe44609df32680136e7f34b8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b06a0007_dc46419e",
        "filename": "src/common/bitset_utils.h",
        "patchSetId": 3
      },
      "lineNbr": 821,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-02-04T19:46:37Z",
      "side": 1,
      "message": "Didn\u0027t we establish that the other class is actually faster than the manually unrolled one? Should we delete this one?",
      "revId": "9ee0e2135a86ef3fe44609df32680136e7f34b8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1da12bc4_59df233c",
        "filename": "src/common/bitset_utils.h",
        "patchSetId": 3
      },
      "lineNbr": 821,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-02-04T22:51:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b06a0007_dc46419e",
      "revId": "9ee0e2135a86ef3fe44609df32680136e7f34b8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}