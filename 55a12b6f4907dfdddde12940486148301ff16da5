{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "836d9049_f00cca38",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-02-06T16:07:17Z",
      "side": 1,
      "message": "Excellent work, thank you",
      "revId": "55a12b6f4907dfdddde12940486148301ff16da5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "626e3e03_f3fc17e2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2023-02-06T19:29:23Z",
      "side": 1,
      "message": "lgtm+2\n\nThank you so much Alexey for digging into these remaining bugs. One question.",
      "revId": "55a12b6f4907dfdddde12940486148301ff16da5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a7ef6ad0_13bad077",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2023-02-06T21:31:28Z",
      "side": 1,
      "message": "Also LGTM",
      "revId": "55a12b6f4907dfdddde12940486148301ff16da5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6d79beb1_64aef074",
        "filename": "src/tests/gl_tests/TextureTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1872,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2023-02-06T19:29:23Z",
      "side": 1,
      "message": "If I\u0027m reading the test correctly, when this helper is called with a depth-only format and GL_STENCIL_INDEX mode, it sets up the GL_DEPTH_STENCIL_TEXTURE_MODE to sample the (nonexistent) stencil index, but the fragment shader to sample the depth aspect.\n\nAre there any other behaviors that should be tested by this test? For example, asserting that the stencil is always 0 when sampling these depth-only textures?",
      "revId": "55a12b6f4907dfdddde12940486148301ff16da5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "48aab01e_7c744c4b",
        "filename": "src/tests/gl_tests/TextureTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1872,
      "author": {
        "id": 1394635
      },
      "writtenOn": "2023-02-06T20:21:38Z",
      "side": 1,
      "message": "\u003e it sets up the GL_DEPTH_STENCIL_TEXTURE_MODE to sample the (nonexistent) stencil index\n\nYes. This mode must have no effect on depth sampling of depth textures, so the test asserts that.\n\n\u003e Are there any other behaviors that should be tested by this test?\n\nAn attempt to, e.g., sample a depth component with an uint sampler would lead to undefined behavior as with any other case of mismatching shader sampler and texture data type.",
      "parentUuid": "6d79beb1_64aef074",
      "revId": "55a12b6f4907dfdddde12940486148301ff16da5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e678f0ed_3d7b7378",
        "filename": "src/tests/gl_tests/TextureTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1872,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2023-02-06T21:08:37Z",
      "side": 1,
      "message": "Got it, thanks.",
      "parentUuid": "48aab01e_7c744c4b",
      "revId": "55a12b6f4907dfdddde12940486148301ff16da5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:approval_code-owners"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "55a12b6f4907dfdddde12940486148301ff16da5",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "55a12b6f4907dfdddde12940486148301ff16da5",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "55a12b6f4907dfdddde12940486148301ff16da5",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "55a12b6f4907dfdddde12940486148301ff16da5",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}