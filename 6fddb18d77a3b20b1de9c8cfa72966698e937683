{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a137e0ac_281c5dba",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1169885
      },
      "writtenOn": "2024-08-26T20:34:19Z",
      "side": 1,
      "message": "Shouldn\u0027t the backends be setting those `multidrawEmulated`/`baseInstanceBaseVertexEmulated`/`baseInstanceEmulated` to false if the feature isn\u0027t emulated? e.g. Vulkan supports it and GL desktop may support it. But currently these `Emulated` flags are set to true and none of the backends modify them, so it just ends up disabling multidraw everywhere.",
      "revId": "6fddb18d77a3b20b1de9c8cfa72966698e937683",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cebf2077_8a15ccbc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2024-08-27T13:53:36Z",
      "side": 1,
      "message": "All backends currently emulate these extensions even if native support is possible so I made the limitation an opt-in:\n\nAll `ContextImpl::multiDraw*` entry points call `rx::MultiDrawArraysGeneral` which loops, sets uniforms and draws. [0]\n\n`Context::*BaseInstance` functions emulate using a uniform in the frontend. [1]\n\nIf we directly make API calls for these, we can mark them as non-emulated for VK/GL.\n\n[0] https://source.chromium.org/chromium/chromium/src/+/main:third_party/angle/src/libANGLE/renderer/vulkan/ContextVk.cpp;l\u003d4290;drc\u003d82dff63dbf9db05e9274e11d9128af7b9f51ceaa\n\n[1] https://source.chromium.org/chromium/chromium/src/+/main:third_party/angle/src/libANGLE/Context.cpp;l\u003d6655;drc\u003dda5721601b98255415e63eeac78cd71f8d5c5b94",
      "parentUuid": "a137e0ac_281c5dba",
      "revId": "6fddb18d77a3b20b1de9c8cfa72966698e937683",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "94bc9c01_3aa1a1cd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-08-28T18:12:49Z",
      "side": 1,
      "message": "The linked issue says:\n\n\u003e The multidraw and base vertex base instance extensions are heavily emulated in ANGLE\u0027s GL backend, manipulating vertex arrays multiple times per draw.\n\nBut AFAICT, there\u0027s no manipulation of vertex arrays in `rx::MultiDrawArraysGeneral, just uniforms. Either way, this CL is tagged with `GL:`, maybe the intention was to only disable this for the GL backend? Is use of the extension really slower on Vulkan and other backends than _not_ using it?",
      "parentUuid": "cebf2077_8a15ccbc",
      "revId": "6fddb18d77a3b20b1de9c8cfa72966698e937683",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b394029_fd8b8342",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1394635
      },
      "writtenOn": "2024-08-28T18:19:25Z",
      "side": 1,
      "message": "At the very least, non-multi base vertex / base instance draw calls are not emulated in most backends so these limitations should be enabled only for specific GL versions.",
      "parentUuid": "94bc9c01_3aa1a1cd",
      "revId": "6fddb18d77a3b20b1de9c8cfa72966698e937683",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "af9977fd_308716ab",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2024-09-09T18:57:13Z",
      "side": 1,
      "message": "I haven\u0027t forgot about this. I think the base instance ones can definitely be re-added for a few backends.",
      "parentUuid": "3b394029_fd8b8342",
      "revId": "6fddb18d77a3b20b1de9c8cfa72966698e937683",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}