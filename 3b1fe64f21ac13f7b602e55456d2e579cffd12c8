{
  "comments": [
    {
      "key": {
        "uuid": "e657c41f_69dd3b55",
        "filename": "src/libANGLE/renderer/vulkan/vk_format_utils.cpp",
        "patchSetId": 7
      },
      "lineNbr": 74,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2018-09-12T15:16:01Z",
      "side": 1,
      "message": "Why can\u0027t `numInfo` be 1? One could only provide the safe format and this would work as expected.",
      "revId": "3b1fe64f21ac13f7b602e55456d2e579cffd12c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2c1a5dbd_f7d0b1db",
        "filename": "src/libANGLE/renderer/vulkan/vk_format_utils.cpp",
        "patchSetId": 7
      },
      "lineNbr": 74,
      "author": {
        "id": 1001426
      },
      "writtenOn": "2018-09-12T21:33:19Z",
      "side": 1,
      "message": "That makes sense to me too, but Jamie wanted to separate these cases:\n1) need to test support at startup time - we come here with \u003e 1 choices\n2) one choice, known at compile time - handled inside in Format::initialize()\nI think the goal is to hard code part 2 entirely instead of doing all those assignments at startup time like it does now, to shave a millisecond off startup time.",
      "parentUuid": "e657c41f_69dd3b55",
      "revId": "3b1fe64f21ac13f7b602e55456d2e579cffd12c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "290b2cc9_99c29b7f",
        "filename": "src/libANGLE/renderer/vulkan/vk_format_utils.cpp",
        "patchSetId": 7
      },
      "lineNbr": 74,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2018-09-13T00:56:46Z",
      "side": 1,
      "message": "A comment may be useful then.\n\nSome formats are better, but they are not available on all platforms. If you go with choice 2 everywhere, you would have to choose the most basic formats that are guaranteed to always be supported, no? Wouldn\u0027t you be losing opportunities then to use the better (but not ubiquitous) formats?",
      "parentUuid": "2c1a5dbd_f7d0b1db",
      "revId": "3b1fe64f21ac13f7b602e55456d2e579cffd12c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "efb28896_97e23d71",
        "filename": "src/libANGLE/renderer/vulkan/vk_format_utils.cpp",
        "patchSetId": 7
      },
      "lineNbr": 74,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-09-13T00:58:49Z",
      "side": 1,
      "message": "You could implement that with option 1) in Frank\u0027s design, right? There shouldn\u0027t be anything design wise preventing optionally better formats. Although in any case if you have the exact format I think choice 2) is preferable. So they\u0027d always be in some kind of fallback path.",
      "parentUuid": "290b2cc9_99c29b7f",
      "revId": "3b1fe64f21ac13f7b602e55456d2e579cffd12c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}