{
  "comments": [
    {
      "key": {
        "uuid": "c3644a2c_d25259d4",
        "filename": "src/tests/gl_tests/VulkanPerformanceCounterTest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 91,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-08-07T15:24:10Z",
      "side": 1,
      "message": "nit: sampling from",
      "range": {
        "startLine": 91,
        "startChar": 13,
        "endLine": 91,
        "endChar": 14
      },
      "revId": "faa81470a55fbad3447d651316d3c621f48ef3cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f9af3da_9b4ea039",
        "filename": "src/tests/gl_tests/VulkanPerformanceCounterTest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 134,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-08-07T15:24:10Z",
      "side": 1,
      "message": "nit: rendering to",
      "range": {
        "startLine": 134,
        "startChar": 13,
        "endLine": 134,
        "endChar": 14
      },
      "revId": "faa81470a55fbad3447d651316d3c621f48ef3cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e2d22ee3_55518966",
        "filename": "src/tests/gl_tests/VulkanPerformanceCounterTest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 159,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-08-07T14:58:31Z",
      "side": 1,
      "message": "By putting this line here, I\u0027m not sure how this test ensures that the renderpass wasn\u0027t broken.  There\u0027s only one draw call happening.  If you were to move this line up to above the glTexImage2D call, would that help?",
      "range": {
        "startLine": 159,
        "startChar": 4,
        "endLine": 159,
        "endChar": 65
      },
      "revId": "faa81470a55fbad3447d651316d3c621f48ef3cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5538ff79_ca4d8d16",
        "filename": "src/tests/gl_tests/VulkanPerformanceCounterTest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 159,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-08-07T15:24:10Z",
      "side": 1,
      "message": "glTexImage2D shouldn\u0027t start a renderpass, so I don\u0027t think that would help.\n\n---\n\nIs the draw call here creating two render passes?",
      "parentUuid": "e2d22ee3_55518966",
      "range": {
        "startLine": 159,
        "startChar": 4,
        "endLine": 159,
        "endChar": 65
      },
      "revId": "faa81470a55fbad3447d651316d3c621f48ef3cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "097a450f_ddbf1f8d",
        "filename": "src/tests/gl_tests/VulkanPerformanceCounterTest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 159,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-08-07T16:12:05Z",
      "side": 1,
      "message": "Maybe this is here so the test can pass in the \"Broken\" state? That\u0027s why I landed my test as skipped (so that the test was correct but we could lift the skip expectation)",
      "parentUuid": "5538ff79_ca4d8d16",
      "range": {
        "startLine": 159,
        "startChar": 4,
        "endLine": 159,
        "endChar": 65
      },
      "revId": "faa81470a55fbad3447d651316d3c621f48ef3cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b83afb2f_2460a128",
        "filename": "src/tests/gl_tests/VulkanPerformanceCounterTest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 159,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-08-07T16:14:13Z",
      "side": 1,
      "message": "@Ian, Shabi is right. The code above this line does not start any renderpass.\n\nIn this test, the glClear call triggers renderpass. But it sees the texture has a staged clear operation due to emulated alpha channel (which is my fix try to get rid of), so it starts a new renderpass to do the alpha clear and then starts renderpass for glClear. SO right now there are two renderpasses.",
      "parentUuid": "097a450f_ddbf1f8d",
      "range": {
        "startLine": 159,
        "startChar": 4,
        "endLine": 159,
        "endChar": 65
      },
      "revId": "faa81470a55fbad3447d651316d3c621f48ef3cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}