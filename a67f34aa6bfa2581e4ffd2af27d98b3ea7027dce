{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "fed19b38_5bad3c57",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2022-06-10T23:20:04Z",
      "side": 1,
      "message": "lgtm with a few small changes.\n",
      "revId": "a67f34aa6bfa2581e4ffd2af27d98b3ea7027dce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "abe6fb4d_03e4a31b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1543967
      },
      "writtenOn": "2022-06-10T23:45:04Z",
      "side": 1,
      "message": "Thanks for the review Ken! Just a couple questions in comments.",
      "revId": "a67f34aa6bfa2581e4ffd2af27d98b3ea7027dce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "403a8e23_1aaf0cc3",
        "filename": "src/tests/gl_tests/PixelLocalStorageTest.cpp",
        "patchSetId": 11
      },
      "lineNbr": 389,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2022-06-10T23:20:04Z",
      "side": 1,
      "message": "ANGLE\u0027s test harnesses already have EXPECT_PIXEL_RECT_EQ - please use that and don\u0027t add a duplicate.",
      "revId": "a67f34aa6bfa2581e4ffd2af27d98b3ea7027dce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4de71316_3376887a",
        "filename": "src/tests/gl_tests/PixelLocalStorageTest.cpp",
        "patchSetId": 11
      },
      "lineNbr": 389,
      "author": {
        "id": 1543967
      },
      "writtenOn": "2022-06-10T23:45:04Z",
      "side": 1,
      "message": "I looked before rolling out this one, and didn\u0027t see \"EXPECT_PIXEL_RECT_EQ\" equivalents for integer and floating point pixel formats. Should I add those to the harness?",
      "parentUuid": "403a8e23_1aaf0cc3",
      "revId": "a67f34aa6bfa2581e4ffd2af27d98b3ea7027dce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7992669c_ace4260e",
        "filename": "src/tests/gl_tests/PixelLocalStorageTest.cpp",
        "patchSetId": 11
      },
      "lineNbr": 389,
      "author": {
        "id": 1543967
      },
      "writtenOn": "2022-06-11T02:46:53Z",
      "side": 1,
      "message": "Took a stab at adding it to the harness",
      "parentUuid": "4de71316_3376887a",
      "revId": "a67f34aa6bfa2581e4ffd2af27d98b3ea7027dce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b1971773_2bdee88c",
        "filename": "src/tests/gl_tests/PixelLocalStorageTest.cpp",
        "patchSetId": 11
      },
      "lineNbr": 389,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2022-06-13T20:03:44Z",
      "side": 1,
      "message": "Thanks for doing this - the new variants look good.",
      "parentUuid": "7992669c_ace4260e",
      "revId": "a67f34aa6bfa2581e4ffd2af27d98b3ea7027dce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a3bd3001_352df5a4",
        "filename": "src/tests/gl_tests/PixelLocalStorageTest.cpp",
        "patchSetId": 11
      },
      "lineNbr": 414,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2022-06-10T23:20:04Z",
      "side": 1,
      "message": "Similar point here about reusing existing test helpers.",
      "revId": "a67f34aa6bfa2581e4ffd2af27d98b3ea7027dce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5880ecb2_75fa1d24",
        "filename": "src/tests/gl_tests/PixelLocalStorageTest.cpp",
        "patchSetId": 11
      },
      "lineNbr": 414,
      "author": {
        "id": 1543967
      },
      "writtenOn": "2022-06-11T02:46:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a3bd3001_352df5a4",
      "revId": "a67f34aa6bfa2581e4ffd2af27d98b3ea7027dce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "910215d3_93255569",
        "filename": "src/tests/gl_tests/PixelLocalStorageTest.cpp",
        "patchSetId": 11
      },
      "lineNbr": 503,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2022-06-10T23:20:04Z",
      "side": 1,
      "message": "What does \"inltrb\" stand for? Could you please expand this acronym more or comment it?",
      "revId": "a67f34aa6bfa2581e4ffd2af27d98b3ea7027dce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3238eeb0_9c244b50",
        "filename": "src/tests/gl_tests/PixelLocalStorageTest.cpp",
        "patchSetId": 11
      },
      "lineNbr": 503,
      "author": {
        "id": 1543967
      },
      "writtenOn": "2022-06-10T23:45:04Z",
      "side": 1,
      "message": "\"left, top, right, bottom\" -- I\u0027ll choose a better name.",
      "parentUuid": "910215d3_93255569",
      "revId": "a67f34aa6bfa2581e4ffd2af27d98b3ea7027dce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "305c420a_9d4c771b",
        "filename": "src/tests/gl_tests/PixelLocalStorageTest.cpp",
        "patchSetId": 11
      },
      "lineNbr": 503,
      "author": {
        "id": 1543967
      },
      "writtenOn": "2022-06-11T02:46:53Z",
      "side": 1,
      "message": "Is \"rect\" better? It doesn\u0027t clarify whether it\u0027s XYWH or LTRB, but that\u0027s quickly ascertainable from the code..",
      "parentUuid": "3238eeb0_9c244b50",
      "revId": "a67f34aa6bfa2581e4ffd2af27d98b3ea7027dce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f9c5a328_c1cfbdc7",
        "filename": "src/tests/gl_tests/PixelLocalStorageTest.cpp",
        "patchSetId": 11
      },
      "lineNbr": 503,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2022-06-13T20:03:44Z",
      "side": 1,
      "message": "\"rect\" sounds better, thanks.",
      "parentUuid": "305c420a_9d4c771b",
      "revId": "a67f34aa6bfa2581e4ffd2af27d98b3ea7027dce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ac23e44f_ff36013f",
        "filename": "src/tests/gl_tests/PixelLocalStorageTest.cpp",
        "patchSetId": 11
      },
      "lineNbr": 692,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2022-06-10T23:20:04Z",
      "side": 1,
      "message": "Here and below, it seems to me these will need a bit of tolerance to handle different GPUs\u0027 behavior. It looks like while there\u0027s an EXPECT_PIXEL_RECT_EQ, there\u0027s no EXPECT_PIXEL_RECT_NEAR, despite the existence of EXPECT_PIXEL_NEAR_HELPER. Would you please consider adding EXPECT_PIXEL_RECT_NEAR and using it, along with a small tolerance?",
      "revId": "a67f34aa6bfa2581e4ffd2af27d98b3ea7027dce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2657ff59_e0fca5b0",
        "filename": "src/tests/gl_tests/PixelLocalStorageTest.cpp",
        "patchSetId": 11
      },
      "lineNbr": 692,
      "author": {
        "id": 1543967
      },
      "writtenOn": "2022-06-10T23:45:04Z",
      "side": 1,
      "message": "I think these need to be exact, at least unless proven otherwise.\n\nGL_R32F is spec\u0027d as a 32-bit IEEE float, and it\u0027s a similar story for GL_R32UI, so I believe we can expect these to have exact precision. There is some slop allowed for fused operations, but \"a + b\" is required to be correctly rounded.\n\nFrom the GLSL ES 3.1 spec:\n\n  \"Highp unsigned integers have exactly 32 bits of precision. Highp signed integers use 32 bits, including a sign bit, in two\u0027s complement form.\"\n\n  \"Highp floating-point variables within a shader are encoded according to the IEEE 754 specification for single-precision floating-point values (logically, not necessarily physically).\"\n\nI\u0027ll add a comment.",
      "parentUuid": "ac23e44f_ff36013f",
      "revId": "a67f34aa6bfa2581e4ffd2af27d98b3ea7027dce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b99f59e7_a6994cd1",
        "filename": "src/tests/gl_tests/PixelLocalStorageTest.cpp",
        "patchSetId": 11
      },
      "lineNbr": 692,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2022-06-13T20:03:44Z",
      "side": 1,
      "message": "OK, let\u0027s go with the assumption that these comparisons are exact.",
      "parentUuid": "2657ff59_e0fca5b0",
      "revId": "a67f34aa6bfa2581e4ffd2af27d98b3ea7027dce",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}