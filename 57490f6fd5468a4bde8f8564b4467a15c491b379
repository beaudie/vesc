{
  "comments": [
    {
      "key": {
        "uuid": "05a8296d_1f58bdf0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-09-30T14:56:09Z",
      "side": 1,
      "message": "PTAL",
      "revId": "57490f6fd5468a4bde8f8564b4467a15c491b379",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "01999513_d249fa31",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 309,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-09-30T15:16:51Z",
      "side": 1,
      "message": "Same comment",
      "revId": "57490f6fd5468a4bde8f8564b4467a15c491b379",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8aee417f_989ca2f2",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 309,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-09-30T17:11:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "01999513_d249fa31",
      "revId": "57490f6fd5468a4bde8f8564b4467a15c491b379",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "08192a3f_32ee59a2",
        "filename": "src/libANGLE/renderer/vulkan/ProgramExecutableVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1582,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-09-30T15:16:51Z",
      "side": 1,
      "message": "Weird dependency, also doesn\u0027t match the comment above the file.\n\nCan you instead do this?\n\n    // Top of file\n    constexpr bool kOutputCumulativePerfCounters \u003d false;\n\n    // Here\n    if (!kOutputCumulativePerfCounters)\n    {\n        return;\n    }\n\nThis avoids accidentally breaking compilation of this piece of code. If this is ever needed for debugging, you can set the variable to true locally.",
      "revId": "57490f6fd5468a4bde8f8564b4467a15c491b379",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c39bf4e2_6335f181",
        "filename": "src/libANGLE/renderer/vulkan/ProgramExecutableVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1582,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-09-30T17:11:56Z",
      "side": 1,
      "message": "Done (mostly).\n\nI want to keep the association of outputting the counter values and the overlay, since we don\u0027t want to see these values every time debug is enabled, so I went with:\n\n#if defined(ANGLE_ENABLE_OVERLAY)\nconstexpr bool kOutputCumulativePerfCounters \u003d ANGLE_ENABLE_OVERLAY;\n#else\nconstexpr bool kOutputCumulativePerfCounters \u003d false;\n#endif\n\nThis may be overloading ANGLE_ENABLE_OVERLAY to also mean \"enable perf counters\", which we may want to split apart at some point (and make enabling perf counters a pre-req for enabling the overlay).",
      "parentUuid": "08192a3f_32ee59a2",
      "revId": "57490f6fd5468a4bde8f8564b4467a15c491b379",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "72705ebd_5dcada93",
        "filename": "src/libANGLE/renderer/vulkan/ProgramExecutableVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1582,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-09-30T17:17:19Z",
      "side": 1,
      "message": "The question is, do you need this information unconditionally when overlay is enabled? Aren\u0027t they for debugging only? I suggested modifying `kOutputCumulativePerfCounters` to true if and when it\u0027s necessary to debug this, because it seems to me that normally (even with overlay) you wouldn\u0027t want to see this output. Correct me if I\u0027m wrong.",
      "parentUuid": "c39bf4e2_6335f181",
      "revId": "57490f6fd5468a4bde8f8564b4467a15c491b379",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a948ee98_d05e992a",
        "filename": "src/libANGLE/renderer/vulkan/ProgramExecutableVk.h",
        "patchSetId": 4
      },
      "lineNbr": 179,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-09-30T15:16:51Z",
      "side": 1,
      "message": "I prefer to see this next to PerfCounters in vk_utils.h (and named ProgramExecutablePerfCounters). I added a RenderPassPerfCounters there too, and eventually we should probably move them all to their own file.",
      "range": {
        "startLine": 176,
        "startChar": 0,
        "endLine": 179,
        "endChar": 6
      },
      "revId": "57490f6fd5468a4bde8f8564b4467a15c491b379",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a9326d17_724447ae",
        "filename": "src/libANGLE/renderer/vulkan/ProgramExecutableVk.h",
        "patchSetId": 4
      },
      "lineNbr": 179,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-09-30T17:11:56Z",
      "side": 1,
      "message": "Done.\n\nYeah, moving them out of vk_utils.h would be nice, so we can include the necessary header files and remove the magic numbers I\u0027m currently stuck with due to circular includes.",
      "parentUuid": "a948ee98_d05e992a",
      "range": {
        "startLine": 176,
        "startChar": 0,
        "endLine": 179,
        "endChar": 6
      },
      "revId": "57490f6fd5468a4bde8f8564b4467a15c491b379",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}