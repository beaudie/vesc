{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ad091c86_816a2c49",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2022-10-25T17:08:29Z",
      "side": 1,
      "message": "+Geoff since Jamie is out",
      "revId": "1460cee83a4749cad14bf608092a29fa973dfa77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bf4fa63b_39719a12",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 4
      },
      "lineNbr": 7581,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2022-11-02T22:34:05Z",
      "side": 1,
      "message": "You may want to hash up to `count` strings.",
      "range": {
        "startLine": 7581,
        "startChar": 53,
        "endLine": 7581,
        "endChar": 60
      },
      "revId": "1460cee83a4749cad14bf608092a29fa973dfa77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a7f184b2_0ac94100",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 4
      },
      "lineNbr": 7581,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2022-11-02T22:34:05Z",
      "side": 1,
      "message": "How about combining this with your shader file logging? If you refactored the hashing into a function then you could write the shader files to disk with the same hashing scheme used for loading them here.",
      "revId": "1460cee83a4749cad14bf608092a29fa973dfa77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8c061321_f2771645",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 4
      },
      "lineNbr": 7586,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2022-11-02T22:34:05Z",
      "side": 1,
      "message": "Handle the case where GetTempDirectory fails. Don\u0027t think we support it everywhere:\n\n```\nif(tempdir.valid())\n{\n   shaderFile \u003c\u003c tempDir.value() \u003c\u003c std::filesystem::path::preferred_separator;\n}\n...\n```",
      "range": {
        "startLine": 7586,
        "startChar": 29,
        "endLine": 7586,
        "endChar": 37
      },
      "revId": "1460cee83a4749cad14bf608092a29fa973dfa77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1afca5d4_a147114c",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 4
      },
      "lineNbr": 7604,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2022-11-02T22:34:05Z",
      "side": 1,
      "message": "Just using nullptr here is fine. NULL is allowed if the strings are null terminated.",
      "range": {
        "startLine": 7604,
        "startChar": 52,
        "endLine": 7604,
        "endChar": 73
      },
      "revId": "1460cee83a4749cad14bf608092a29fa973dfa77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e8f4791f_83a4a060",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 4
      },
      "lineNbr": 7607,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2022-11-02T22:34:05Z",
      "side": 1,
      "message": "Count needs to be modified to 1 when you do the substitution.",
      "range": {
        "startLine": 7607,
        "startChar": 32,
        "endLine": 7607,
        "endChar": 37
      },
      "revId": "1460cee83a4749cad14bf608092a29fa973dfa77",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}