{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b0df2437_a446fc0e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2024-01-19T18:22:05Z",
      "side": 1,
      "message": "Looks reasonable to me. Adding Geoff here.",
      "revId": "ce58eca3fe60b1e843d0a028044cd0552eadd71e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "870865d0_ee6d0f0d",
        "filename": "src/libANGLE/Framebuffer.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2742,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2024-01-19T21:41:58Z",
      "side": 1,
      "message": "If `FocalPoint` can be compared directly, you can structure this in one of two ways:\n\n - `mState.mFoveationState` returns a bool to indicate if the new value is different.\n - this compares `mState.mFoveationState.getFocalPoint(layer, focalPoint) \u003d\u003d focalPoint`\n \nThis avoids copying the whole FoveationState, changing one part of it and comparing the whole thing.",
      "range": {
        "startLine": 2736,
        "startChar": 4,
        "endLine": 2742,
        "endChar": 5
      },
      "revId": "ce58eca3fe60b1e843d0a028044cd0552eadd71e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8b3a8523_4d43527a",
        "filename": "src/libANGLE/Framebuffer.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2742,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2024-01-21T18:57:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "870865d0_ee6d0f0d",
      "range": {
        "startLine": 2736,
        "startChar": 4,
        "endLine": 2742,
        "endChar": 5
      },
      "revId": "ce58eca3fe60b1e843d0a028044cd0552eadd71e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cbfb974d_ed48bb8d",
        "filename": "src/libANGLE/angletypes.h",
        "patchSetId": 5
      },
      "lineNbr": 1319,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2024-01-19T21:41:58Z",
      "side": 1,
      "message": "No need to bring context into here. The functions that use it don\u0027t reference it.",
      "range": {
        "startLine": 1319,
        "startChar": 0,
        "endLine": 1319,
        "endChar": 14
      },
      "revId": "ce58eca3fe60b1e843d0a028044cd0552eadd71e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fab2df94_ffec0772",
        "filename": "src/libANGLE/angletypes.h",
        "patchSetId": 5
      },
      "lineNbr": 1319,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2024-01-21T18:57:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cbfb974d_ed48bb8d",
      "range": {
        "startLine": 1319,
        "startChar": 0,
        "endLine": 1319,
        "endChar": 14
      },
      "revId": "ce58eca3fe60b1e843d0a028044cd0552eadd71e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "792930ee_159ae7a1",
        "filename": "src/libANGLE/angletypes.h",
        "patchSetId": 5
      },
      "lineNbr": 1322,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2024-01-19T21:41:58Z",
      "side": 1,
      "message": "I\u0027d just call this `FocalPoint`",
      "range": {
        "startLine": 1322,
        "startChar": 7,
        "endLine": 1322,
        "endChar": 21
      },
      "revId": "ce58eca3fe60b1e843d0a028044cd0552eadd71e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "75b7ce3a_2aec37d1",
        "filename": "src/libANGLE/angletypes.h",
        "patchSetId": 5
      },
      "lineNbr": 1322,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2024-01-21T18:57:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "792930ee_159ae7a1",
      "range": {
        "startLine": 1322,
        "startChar": 7,
        "endLine": 1322,
        "endChar": 21
      },
      "revId": "ce58eca3fe60b1e843d0a028044cd0552eadd71e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7460853e_f362cd0f",
        "filename": "src/libANGLE/angletypes.h",
        "patchSetId": 5
      },
      "lineNbr": 1324,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2024-01-19T21:41:58Z",
      "side": 1,
      "message": "I propose you remove this. Add an `isFoviated` which compares the values against defaults.",
      "range": {
        "startLine": 1324,
        "startChar": 0,
        "endLine": 1324,
        "endChar": 18
      },
      "revId": "ce58eca3fe60b1e843d0a028044cd0552eadd71e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "007c1d4b_8651c2b6",
        "filename": "src/libANGLE/angletypes.h",
        "patchSetId": 5
      },
      "lineNbr": 1324,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2024-01-21T18:57:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7460853e_f362cd0f",
      "range": {
        "startLine": 1324,
        "startChar": 0,
        "endLine": 1324,
        "endChar": 18
      },
      "revId": "ce58eca3fe60b1e843d0a028044cd0552eadd71e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b5fddcb1_a95cb73b",
        "filename": "src/libANGLE/angletypes.h",
        "patchSetId": 5
      },
      "lineNbr": 1329,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2024-01-19T21:41:58Z",
      "side": 1,
      "message": "Add constructor that memsets and initializes (or takes them as parameters). Then add a comparison on this struct instead of the `FoveationState` (see comments in Framebuffer.cpp).",
      "range": {
        "startLine": 1325,
        "startChar": 0,
        "endLine": 1329,
        "endChar": 20
      },
      "revId": "ce58eca3fe60b1e843d0a028044cd0552eadd71e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "db8f9608_c53c1bd0",
        "filename": "src/libANGLE/angletypes.h",
        "patchSetId": 5
      },
      "lineNbr": 1329,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2024-01-21T18:57:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b5fddcb1_a95cb73b",
      "range": {
        "startLine": 1325,
        "startChar": 0,
        "endLine": 1329,
        "endChar": 20
      },
      "revId": "ce58eca3fe60b1e843d0a028044cd0552eadd71e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "767fb675_6b1267c9",
        "filename": "src/libANGLE/angletypes.h",
        "patchSetId": 5
      },
      "lineNbr": 1338,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2024-01-19T21:41:58Z",
      "side": 1,
      "message": "Add a `IMPLEMENTATION_MAX_FOCAL_POINTS` around here: https://source.chromium.org/chromium/chromium/src/+/main:third_party/angle/src/libANGLE/Constants.h;l\u003d102;drc\u003d3cc22c22d7637bc5604e8fef3b0882b51a762901\n\nEventually it needs to be queried from TextureImpl.",
      "range": {
        "startLine": 1338,
        "startChar": 4,
        "endLine": 1338,
        "endChar": 51
      },
      "revId": "ce58eca3fe60b1e843d0a028044cd0552eadd71e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5c5e6650_c33393d6",
        "filename": "src/libANGLE/angletypes.h",
        "patchSetId": 5
      },
      "lineNbr": 1338,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2024-01-21T18:57:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "767fb675_6b1267c9",
      "range": {
        "startLine": 1338,
        "startChar": 4,
        "endLine": 1338,
        "endChar": 51
      },
      "revId": "ce58eca3fe60b1e843d0a028044cd0552eadd71e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "76a9bac7_73acd353",
        "filename": "src/libANGLE/angletypes.h",
        "patchSetId": 5
      },
      "lineNbr": 1351,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2024-01-19T21:41:58Z",
      "side": 1,
      "message": "Reset is called in the FoveationState constructor and Texture/Framebuffer constructor (not necessary). Let\u0027s just fold it into the constructor.\n\nAs far as I can tell it\u0027s never used to reset state of an existing object.",
      "range": {
        "startLine": 1345,
        "startChar": 0,
        "endLine": 1351,
        "endChar": 5
      },
      "revId": "ce58eca3fe60b1e843d0a028044cd0552eadd71e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3e8a9840_59feda6b",
        "filename": "src/libANGLE/angletypes.h",
        "patchSetId": 5
      },
      "lineNbr": 1351,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2024-01-21T18:57:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "76a9bac7_73acd353",
      "range": {
        "startLine": 1345,
        "startChar": 0,
        "endLine": 1351,
        "endChar": 5
      },
      "revId": "ce58eca3fe60b1e843d0a028044cd0552eadd71e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dab7697e_f3e70916",
        "filename": "src/libANGLE/angletypes.h",
        "patchSetId": 5
      },
      "lineNbr": 1372,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2024-01-19T21:41:58Z",
      "side": 1,
      "message": "Have this take the whole `FocalPoint` struct instead of individual parameters (and call sites in Texture/Framebuffer).",
      "range": {
        "startLine": 1365,
        "startChar": 23,
        "endLine": 1372,
        "endChar": 38
      },
      "revId": "ce58eca3fe60b1e843d0a028044cd0552eadd71e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e6a495a2_4917e4ef",
        "filename": "src/libANGLE/angletypes.h",
        "patchSetId": 5
      },
      "lineNbr": 1372,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2024-01-21T18:57:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dab7697e_f3e70916",
      "range": {
        "startLine": 1365,
        "startChar": 23,
        "endLine": 1372,
        "endChar": 38
      },
      "revId": "ce58eca3fe60b1e843d0a028044cd0552eadd71e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ac9a2a6_06f15510",
        "filename": "src/libANGLE/angletypes.h",
        "patchSetId": 5
      },
      "lineNbr": 1375,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2024-01-19T21:41:58Z",
      "side": 1,
      "message": "`layer \u003c kMaxNumLayers \u0026\u0026 focalPoint \u003c kMaxNumFocalPoints`",
      "range": {
        "startLine": 1375,
        "startChar": 15,
        "endLine": 1375,
        "endChar": 65
      },
      "revId": "ce58eca3fe60b1e843d0a028044cd0552eadd71e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "748974c0_e87040ab",
        "filename": "src/libANGLE/angletypes.h",
        "patchSetId": 5
      },
      "lineNbr": 1375,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2024-01-21T18:57:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3ac9a2a6_06f15510",
      "range": {
        "startLine": 1375,
        "startChar": 15,
        "endLine": 1375,
        "endChar": 65
      },
      "revId": "ce58eca3fe60b1e843d0a028044cd0552eadd71e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2237819e_c80cd61c",
        "filename": "src/libANGLE/angletypes.h",
        "patchSetId": 5
      },
      "lineNbr": 1387,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2024-01-19T21:41:58Z",
      "side": 1,
      "message": "same as above",
      "range": {
        "startLine": 1387,
        "startChar": 15,
        "endLine": 1387,
        "endChar": 65
      },
      "revId": "ce58eca3fe60b1e843d0a028044cd0552eadd71e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "97e4a6c3_7c3598b7",
        "filename": "src/libANGLE/angletypes.h",
        "patchSetId": 5
      },
      "lineNbr": 1387,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2024-01-21T18:57:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2237819e_c80cd61c",
      "range": {
        "startLine": 1387,
        "startChar": 15,
        "endLine": 1387,
        "endChar": 65
      },
      "revId": "ce58eca3fe60b1e843d0a028044cd0552eadd71e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "33de0803_6fc4847e",
        "filename": "src/libANGLE/angletypes.h",
        "patchSetId": 5
      },
      "lineNbr": 1393,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2024-01-19T21:41:58Z",
      "side": 1,
      "message": "This eventually needs to be a function on TextureImpl.",
      "range": {
        "startLine": 1393,
        "startChar": 15,
        "endLine": 1393,
        "endChar": 85
      },
      "revId": "ce58eca3fe60b1e843d0a028044cd0552eadd71e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b96f37ba_d233283a",
        "filename": "src/libANGLE/angletypes.h",
        "patchSetId": 5
      },
      "lineNbr": 1393,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2024-01-19T23:44:03Z",
      "side": 1,
      "message": "note to self - remove this bit",
      "range": {
        "startLine": 1393,
        "startChar": 46,
        "endLine": 1393,
        "endChar": 85
      },
      "revId": "ce58eca3fe60b1e843d0a028044cd0552eadd71e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f482c990_1e83a836",
        "filename": "src/libANGLE/angletypes.h",
        "patchSetId": 5
      },
      "lineNbr": 1393,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2024-01-21T18:57:30Z",
      "side": 1,
      "message": "Ack, but will make sense only when different backends support different types of foveated rendering?",
      "parentUuid": "33de0803_6fc4847e",
      "range": {
        "startLine": 1393,
        "startChar": 15,
        "endLine": 1393,
        "endChar": 85
      },
      "revId": "ce58eca3fe60b1e843d0a028044cd0552eadd71e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cb375954_3c3ec470",
        "filename": "src/libANGLE/angletypes.h",
        "patchSetId": 5
      },
      "lineNbr": 1393,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2024-01-21T18:57:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b96f37ba_d233283a",
      "range": {
        "startLine": 1393,
        "startChar": 46,
        "endLine": 1393,
        "endChar": 85
      },
      "revId": "ce58eca3fe60b1e843d0a028044cd0552eadd71e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aa843209_2bef97cd",
        "filename": "src/libANGLE/angletypes.h",
        "patchSetId": 5
      },
      "lineNbr": 1393,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2024-01-23T19:27:12Z",
      "side": 1,
      "message": "Different backend or just different Vulkan drivers could support different features. We\u0027ll need a way to communicate from the backend. The extension seems say that this query is per-texture which seems extreme.",
      "parentUuid": "f482c990_1e83a836",
      "range": {
        "startLine": 1393,
        "startChar": 15,
        "endLine": 1393,
        "endChar": 85
      },
      "revId": "ce58eca3fe60b1e843d0a028044cd0552eadd71e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dc0cee43_c458e82a",
        "filename": "src/libANGLE/angletypes.h",
        "patchSetId": 5
      },
      "lineNbr": 1393,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2024-01-25T14:26:49Z",
      "side": 1,
      "message": "\u003e Vulkan drivers could support different features\n\nwhich will mean we need new feature bits added to the GLES spec to expose those different kinds of foveation?",
      "parentUuid": "aa843209_2bef97cd",
      "range": {
        "startLine": 1393,
        "startChar": 15,
        "endLine": 1393,
        "endChar": 85
      },
      "revId": "ce58eca3fe60b1e843d0a028044cd0552eadd71e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7c5dd7f2_b368a0a9",
        "filename": "src/libANGLE/angletypes.h",
        "patchSetId": 5
      },
      "lineNbr": 1393,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2024-02-02T15:38:48Z",
      "side": 1,
      "message": "Possibly. QCOM_texture_foveated adds the FOVEATION_SCALED_BIN_METHOD_BIT_QCOM method of foveation but the spec is written in a way that other extensions can depend on it and add new methods. We would eventually want to ask the backend what the supported feature bits are, this extension doesn\u0027t require any as far as I can tell.",
      "parentUuid": "dc0cee43_c458e82a",
      "range": {
        "startLine": 1393,
        "startChar": 15,
        "endLine": 1393,
        "endChar": 85
      },
      "revId": "ce58eca3fe60b1e843d0a028044cd0552eadd71e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9cd27224_fe90d723",
        "filename": "src/libANGLE/angletypes.h",
        "patchSetId": 5
      },
      "lineNbr": 1393,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2024-02-02T20:35:26Z",
      "side": 1,
      "message": "\u003e this extension doesn\u0027t require any as far as I can tell\n\nyes, all this extension requires is `GL_FOVEATION_ENABLE_BIT_QCOM` feature bit but the rest is implementation defined\n\nqcom added `FOVEATION_SCALED_BIN_METHOD_BIT_QCOM` and it looks like they added a new one as well here -\u003e https://registry.khronos.org/OpenGL/extensions/QCOM/QCOM_texture_foveated_subsampled_layout.txt",
      "parentUuid": "7c5dd7f2_b368a0a9",
      "range": {
        "startLine": 1393,
        "startChar": 15,
        "endLine": 1393,
        "endChar": 85
      },
      "revId": "ce58eca3fe60b1e843d0a028044cd0552eadd71e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}