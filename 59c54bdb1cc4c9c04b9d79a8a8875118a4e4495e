{
  "comments": [
    {
      "key": {
        "uuid": "b84715fa_b856390a",
        "filename": "src/libANGLE/renderer/gl/egl/DisplayEGL.cpp",
        "patchSetId": 7
      },
      "lineNbr": 175,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-02-07T13:14:09Z",
      "side": 1,
      "message": "nit: you can assign to mEGL directly and do away with the temporary.",
      "range": {
        "startLine": 174,
        "startChar": 0,
        "endLine": 175,
        "endChar": 30
      },
      "revId": "59c54bdb1cc4c9c04b9d79a8a8875118a4e4495e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e80fd303_af28d0b7",
        "filename": "src/libANGLE/renderer/gl/egl/DisplayEGL.cpp",
        "patchSetId": 7
      },
      "lineNbr": 184,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-02-07T13:14:09Z",
      "side": 1,
      "message": "feels like this extension at least shouldn\u0027t be necessary. we can survive without it.",
      "range": {
        "startLine": 184,
        "startChar": 9,
        "endLine": 184,
        "endChar": 27
      },
      "revId": "59c54bdb1cc4c9c04b9d79a8a8875118a4e4495e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d6ad7043_260ee9b8",
        "filename": "src/libANGLE/renderer/gl/egl/DisplayEGL.cpp",
        "patchSetId": 7
      },
      "lineNbr": 186,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-02-07T13:14:09Z",
      "side": 1,
      "message": "for these two can you please add a comment indicating why they are necessary?",
      "range": {
        "startLine": 185,
        "startChar": 0,
        "endLine": 186,
        "endChar": 38
      },
      "revId": "59c54bdb1cc4c9c04b9d79a8a8875118a4e4495e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be5249f9_63d64c80",
        "filename": "src/libANGLE/renderer/gl/egl/DisplayEGL.cpp",
        "patchSetId": 7
      },
      "lineNbr": 221,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-02-07T13:14:09Z",
      "side": 1,
      "message": "nt: can you make this into a small helper function that returns an esBit and takes the mEGL and platformAttrib as parameters?",
      "range": {
        "startLine": 199,
        "startChar": 0,
        "endLine": 221,
        "endChar": 5
      },
      "revId": "59c54bdb1cc4c9c04b9d79a8a8875118a4e4495e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "97975895_a08d7c19",
        "filename": "src/libANGLE/renderer/gl/egl/DisplayEGL.cpp",
        "patchSetId": 7
      },
      "lineNbr": 223,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-02-07T13:14:09Z",
      "side": 1,
      "message": "nit: can you ditch the clang-format tags here? a collapsed list shouldn\u0027t be a problem. manual format tags are a pain.",
      "range": {
        "startLine": 223,
        "startChar": 0,
        "endLine": 223,
        "endChar": 23
      },
      "revId": "59c54bdb1cc4c9c04b9d79a8a8875118a4e4495e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e35f0fd9_c175215d",
        "filename": "src/libANGLE/renderer/gl/egl/DisplayEGL.cpp",
        "patchSetId": 7
      },
      "lineNbr": 352,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-02-07T13:14:09Z",
      "side": 1,
      "message": "this function should just return a context pointer. any work that can fail should be done on ContextImpl::initialize. There should be no need to swallow errors here.",
      "range": {
        "startLine": 329,
        "startChar": 0,
        "endLine": 352,
        "endChar": 0
      },
      "revId": "59c54bdb1cc4c9c04b9d79a8a8875118a4e4495e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}