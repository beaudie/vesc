{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "3b299ee2_1aa1ba01",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 22
      },
      "lineNbr": 0,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-12-04T01:26:24Z",
      "side": 1,
      "message": "PTAL.",
      "revId": "a814137c9ef8fb1841ac56c48afb8f0c69922755",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8ffb77ce_5309803f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 22
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-12-04T20:34:59Z",
      "side": 1,
      "message": "Overall design looks good, just some cleanup notes as usual.",
      "revId": "a814137c9ef8fb1841ac56c48afb8f0c69922755",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e7bb556e_19e850ab",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 22
      },
      "lineNbr": 691,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-12-04T16:42:13Z",
      "side": 1,
      "message": "Looks like you meant to delete part of this phrase",
      "range": {
        "startLine": 690,
        "startChar": 83,
        "endLine": 691,
        "endChar": 35
      },
      "revId": "a814137c9ef8fb1841ac56c48afb8f0c69922755",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "15e8a34c_1f62bac7",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 22
      },
      "lineNbr": 691,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-12-04T23:57:07Z",
      "side": 1,
      "message": "Reworded it a little bit to try and clarify things.",
      "parentUuid": "e7bb556e_19e850ab",
      "range": {
        "startLine": 690,
        "startChar": 83,
        "endLine": 691,
        "endChar": 35
      },
      "revId": "a814137c9ef8fb1841ac56c48afb8f0c69922755",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "14a1d54f_a89677ce",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 22
      },
      "lineNbr": 693,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-12-04T01:49:50Z",
      "side": 1,
      "message": "I am wondering if this should be more restrictive that instead of \"||\", it should be \"\u0026\u0026\". What you are doing here right now, as long as it is a shared context, you will always get down to defer case, which seems a bit risky to me (risky in terms of I am not sure there is no bug here).",
      "range": {
        "startLine": 693,
        "startChar": 8,
        "endLine": 693,
        "endChar": 55
      },
      "revId": "a814137c9ef8fb1841ac56c48afb8f0c69922755",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9ff66124_4002a72c",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 22
      },
      "lineNbr": 693,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-12-04T16:42:13Z",
      "side": 1,
      "message": "+1, if only the context is shared, then at least we should check for deferFlushUntilEndRenderPass before deferring flush (i.e. take the usual path)",
      "parentUuid": "14a1d54f_a89677ce",
      "range": {
        "startLine": 693,
        "startChar": 8,
        "endLine": 693,
        "endChar": 55
      },
      "revId": "a814137c9ef8fb1841ac56c48afb8f0c69922755",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fd4ec4dd_29a69d92",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 22
      },
      "lineNbr": 693,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-12-04T23:57:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9ff66124_4002a72c",
      "range": {
        "startLine": 693,
        "startChar": 8,
        "endLine": 693,
        "endChar": 55
      },
      "revId": "a814137c9ef8fb1841ac56c48afb8f0c69922755",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "41609968_e6ebfe2a",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 22
      },
      "lineNbr": 693,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-12-05T01:05:34Z",
      "side": 1,
      "message": "Unresolving, to bring this back to everyone\u0027s attention.\n\n\"mSyncObjectPendingFlush \u0026\u0026 context-\u003eisShared()\" fails the following test:\n\nhttps://ci.chromium.org/ui/p/chromium/builders/try/linux-angle-rel/14145/overview\n    EGLContextSharingTest.DeleteReaderOfSharedTexture/*_Vulkan\n\nI\u0027m not sure how \"|| (context-\u003eisShared() \u0026\u0026 deferFlushUntilEndRenderPass)\" would help, since that would imply there\u0027s only a bug on certain platforms.\n\nI\u0027m going to keep this as:\n    if (mSyncObjectPendingFlush || context-\u003eisShared())\n\nCQ and a handful of apps (Asphalt 8 and 9, candy crush, call of duty mobile) all seem happy so far (admittedly, there aren\u0027t many apps that use multithreaded multicontext rendering).   We can look at restricting this further if we find there are issues in a particular app once we know what conditions lead to it so we can keep everyone happy.\n\nWe aren\u0027t skipping the flush entirely, we\u0027re just flushing the commands and closing the render pass rather than submitting the work to the renderer.\n\nCharlie - Can you describe the issue you\u0027re worried about?",
      "parentUuid": "fd4ec4dd_29a69d92",
      "range": {
        "startLine": 693,
        "startChar": 8,
        "endLine": 693,
        "endChar": 55
      },
      "revId": "a814137c9ef8fb1841ac56c48afb8f0c69922755",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "18097b67_0550faad",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 22
      },
      "lineNbr": 700,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-12-04T20:34:59Z",
      "side": 1,
      "message": "nit: can you use a verb that identifies the ownership transfer? like collectResourceUseList or acquireResourceUseList?",
      "range": {
        "startLine": 700,
        "startChar": 27,
        "endLine": 700,
        "endChar": 33
      },
      "revId": "a814137c9ef8fb1841ac56c48afb8f0c69922755",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c9ecb122_6fd7f7e6",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 22
      },
      "lineNbr": 700,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-12-04T23:57:07Z",
      "side": 1,
      "message": "I went with acquireResourceUseList().",
      "parentUuid": "18097b67_0550faad",
      "range": {
        "startLine": 700,
        "startChar": 27,
        "endLine": 700,
        "endChar": 33
      },
      "revId": "a814137c9ef8fb1841ac56c48afb8f0c69922755",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eb0c55b3_0835e3bf",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 22
      },
      "lineNbr": 705,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-12-04T01:49:50Z",
      "side": 1,
      "message": "Should you leave hasStartedRenderPass() check here since you only care about the abobve two conditions?",
      "range": {
        "startLine": 705,
        "startChar": 8,
        "endLine": 705,
        "endChar": 69
      },
      "revId": "a814137c9ef8fb1841ac56c48afb8f0c69922755",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a08f8a2b_41fc44b9",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 22
      },
      "lineNbr": 705,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-12-04T23:57:07Z",
      "side": 1,
      "message": "Everything seems happy without that check, and not having it means we can ignore even more glFlush calls (which seems like it should help performance).\n\nIs there something in particular you\u0027re worried about that would require that checking?",
      "parentUuid": "eb0c55b3_0835e3bf",
      "range": {
        "startLine": 705,
        "startChar": 8,
        "endLine": 705,
        "endChar": 69
      },
      "revId": "a814137c9ef8fb1841ac56c48afb8f0c69922755",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3d70c488_3e3c93b5",
        "filename": "src/libANGLE/renderer/vulkan/DisplayVk.h",
        "patchSetId": 22
      },
      "lineNbr": 38,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-12-04T20:34:59Z",
      "side": 1,
      "message": "suggestion: return rvalue reference (releaseResourceUseLists()) or add the action command to ShareGroupVk, passing in the needed extra members.",
      "range": {
        "startLine": 38,
        "startChar": 38,
        "endLine": 38,
        "endChar": 57
      },
      "revId": "a814137c9ef8fb1841ac56c48afb8f0c69922755",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a098453a_788def5d",
        "filename": "src/libANGLE/renderer/vulkan/DisplayVk.h",
        "patchSetId": 22
      },
      "lineNbr": 38,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-12-04T23:57:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3d70c488_3e3c93b5",
      "range": {
        "startLine": 38,
        "startChar": 38,
        "endLine": 38,
        "endChar": 57
      },
      "revId": "a814137c9ef8fb1841ac56c48afb8f0c69922755",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f0686286_f58d382b",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 22
      },
      "lineNbr": 2466,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-12-04T20:34:59Z",
      "side": 1,
      "message": "maybe instead just merge resourceUstList with shareGroupResourceUseLists (note: plural) and pass one member to be simpler.",
      "range": {
        "startLine": 2466,
        "startChar": 73,
        "endLine": 2466,
        "endChar": 98
      },
      "revId": "a814137c9ef8fb1841ac56c48afb8f0c69922755",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e7a4cecf_ccd07812",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 22
      },
      "lineNbr": 2466,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-12-04T23:57:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f0686286_f58d382b",
      "range": {
        "startLine": 2466,
        "startChar": 73,
        "endLine": 2466,
        "endChar": 98
      },
      "revId": "a814137c9ef8fb1841ac56c48afb8f0c69922755",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "be4c450f_bf6fef4a",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 22
      },
      "lineNbr": 2494,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-12-04T20:34:59Z",
      "side": 1,
      "message": "nit: don\u0027t need auto here, can use the explicit type (vk::ResourceUseList \u0026)",
      "range": {
        "startLine": 2494,
        "startChar": 9,
        "endLine": 2494,
        "endChar": 14
      },
      "revId": "a814137c9ef8fb1841ac56c48afb8f0c69922755",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "01e4ae6d_39102e51",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 22
      },
      "lineNbr": 2494,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-12-04T23:57:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "be4c450f_bf6fef4a",
      "range": {
        "startLine": 2494,
        "startChar": 9,
        "endLine": 2494,
        "endChar": 14
      },
      "revId": "a814137c9ef8fb1841ac56c48afb8f0c69922755",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1bb54174_5fe5c547",
        "filename": "src/libANGLE/renderer/vulkan/ResourceVk.h",
        "patchSetId": 22
      },
      "lineNbr": 147,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-12-04T20:34:59Z",
      "side": 1,
      "message": "not used that I can see.",
      "range": {
        "startLine": 144,
        "startChar": 0,
        "endLine": 147,
        "endChar": 5
      },
      "revId": "a814137c9ef8fb1841ac56c48afb8f0c69922755",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2baa6832_a7d2c0d7",
        "filename": "src/libANGLE/renderer/vulkan/ResourceVk.h",
        "patchSetId": 22
      },
      "lineNbr": 147,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-12-04T23:57:07Z",
      "side": 1,
      "message": "Oops, good catch. Forgot to clean up after experimenting with how the refactor should look.",
      "parentUuid": "1bb54174_5fe5c547",
      "range": {
        "startLine": 144,
        "startChar": 0,
        "endLine": 147,
        "endChar": 5
      },
      "revId": "a814137c9ef8fb1841ac56c48afb8f0c69922755",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aa1de140_def365fd",
        "filename": "src/libANGLE/renderer/vulkan/ResourceVk.h",
        "patchSetId": 22
      },
      "lineNbr": 152,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-12-04T20:34:59Z",
      "side": 1,
      "message": "not referenced",
      "range": {
        "startLine": 152,
        "startChar": 0,
        "endLine": 152,
        "endChar": 79
      },
      "revId": "a814137c9ef8fb1841ac56c48afb8f0c69922755",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d28b4772_3554b12a",
        "filename": "src/libANGLE/renderer/vulkan/ResourceVk.h",
        "patchSetId": 22
      },
      "lineNbr": 152,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-12-04T23:57:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "aa1de140_def365fd",
      "range": {
        "startLine": 152,
        "startChar": 0,
        "endLine": 152,
        "endChar": 79
      },
      "revId": "a814137c9ef8fb1841ac56c48afb8f0c69922755",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f87a9627_e0ff2fc9",
        "filename": "src/libANGLE/renderer/vulkan/SyncVk.cpp",
        "patchSetId": 22
      },
      "lineNbr": 94,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-12-04T16:42:13Z",
      "side": 1,
      "message": "nit: that the glFence\u0027s signal operation is pending submission",
      "range": {
        "startLine": 94,
        "startChar": 51,
        "endLine": 94,
        "endChar": 99
      },
      "revId": "a814137c9ef8fb1841ac56c48afb8f0c69922755",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "db4327b6_c560f60f",
        "filename": "src/libANGLE/renderer/vulkan/SyncVk.cpp",
        "patchSetId": 22
      },
      "lineNbr": 94,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-12-04T23:57:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f87a9627_e0ff2fc9",
      "range": {
        "startLine": 94,
        "startChar": 51,
        "endLine": 94,
        "endChar": 99
      },
      "revId": "a814137c9ef8fb1841ac56c48afb8f0c69922755",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f3113dba_e498a433",
        "filename": "src/tests/egl_tests/EGLSyncTest.cpp",
        "patchSetId": 22
      },
      "lineNbr": 223,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-12-04T16:42:13Z",
      "side": 1,
      "message": "Ok I take back my previous comment. I hadn\u0027t noticed the glClear call in the second loop.\n\nCould you partially revert this? Basically the first loop can be replaced with a timed wait, but the second loop can remain as is (for whatever reason it was doing clear/wait in loop):\n\n    // Don\u0027t wait forever to make sure the test terminates\n    constexpr GLuint64 kTimeout \u003d 1\u0027000\u0027000\u0027000;  // 1 second\n    ASSERT_EQ(\n            EGL_CONDITION_SATISFIED_KHR,\n            eglClientWaitSyncKHR(display, sync, EGL_SYNC_FLUSH_COMMANDS_BIT_KHR, kTimeout));\n\n    for (size_t i \u003d 0; i \u003c 20; i++)\n    {\n        glClear(GL_COLOR_BUFFER_BIT);\n        EXPECT_EQ(\n            EGL_CONDITION_SATISFIED_KHR,\n            eglClientWaitSyncKHR(display, sync, EGL_SYNC_FLUSH_COMMANDS_BIT_KHR, EGL_FOREVER_KHR));\n        EXPECT_EGL_TRUE(eglGetSyncAttribKHR(display, sync, EGL_SYNC_STATUS_KHR, \u0026value));\n        EXPECT_EQ(value, EGL_SIGNALED_KHR);\n    }",
      "range": {
        "startLine": 223,
        "startChar": 34,
        "endLine": 223,
        "endChar": 41
      },
      "revId": "a814137c9ef8fb1841ac56c48afb8f0c69922755",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "058d2b72_ba7e11b8",
        "filename": "src/tests/egl_tests/EGLSyncTest.cpp",
        "patchSetId": 22
      },
      "lineNbr": 223,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-12-04T23:57:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f3113dba_e498a433",
      "range": {
        "startLine": 223,
        "startChar": 34,
        "endLine": 223,
        "endChar": 41
      },
      "revId": "a814137c9ef8fb1841ac56c48afb8f0c69922755",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "081897cd_3f3d6cd2",
        "filename": "src/tests/gl_tests/FenceSyncTests.cpp",
        "patchSetId": 22
      },
      "lineNbr": 250,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-12-04T16:42:13Z",
      "side": 1,
      "message": "Same. I have a feeling the clear/wait loop is a regression test for something that\u0027s not documented.",
      "revId": "a814137c9ef8fb1841ac56c48afb8f0c69922755",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "757499b5_956abd95",
        "filename": "src/tests/gl_tests/FenceSyncTests.cpp",
        "patchSetId": 22
      },
      "lineNbr": 250,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-12-04T23:57:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "081897cd_3f3d6cd2",
      "revId": "a814137c9ef8fb1841ac56c48afb8f0c69922755",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}