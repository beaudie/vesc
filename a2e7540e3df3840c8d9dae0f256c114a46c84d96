{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "7e09242b_d2965850",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 18
      },
      "lineNbr": 0,
      "author": {
        "id": 1491823
      },
      "writtenOn": "2021-03-26T10:22:08Z",
      "side": 1,
      "message": "There was still some debug output code that was removed only in the next patch and that I moved here. ",
      "revId": "a2e7540e3df3840c8d9dae0f256c114a46c84d96",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bd2d4b92_b18f4670",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 18
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-03-26T16:03:48Z",
      "side": 1,
      "message": "Gert: code mostly looks good, one suggestion about moving the serialization func.\n\nIf we change the trace signatures (e.g. changing the signature of the serialization getter) we will need to re-trace the existing traces to resolve the difference with the old traces. I\u0027ve made a change to SwiftShader that rolled in today that we can use the re-trace everything on Linux or Windows with SwiftShader. I\u0027ll take a crack at that on Monday - we can proceed with landing this.",
      "revId": "a2e7540e3df3840c8d9dae0f256c114a46c84d96",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c5880cf9_4669712f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 18
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-03-29T00:49:11Z",
      "side": 1,
      "message": "re-lgtm",
      "revId": "a2e7540e3df3840c8d9dae0f256c114a46c84d96",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d03aa215_7a65a34c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 18
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-03-29T00:49:55Z",
      "side": 1,
      "message": "Look like we won\u0027t need to re-trace as all the serialization functions are conditionally added.",
      "parentUuid": "bd2d4b92_b18f4670",
      "revId": "a2e7540e3df3840c8d9dae0f256c114a46c84d96",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "663f60dd_588b8e17",
        "filename": "src/libANGLE/capture/FrameCapture.cpp",
        "patchSetId": 18
      },
      "lineNbr": 1086,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-03-26T16:03:48Z",
      "side": 1,
      "message": "this is cool that you embedded the data in the trace - can you also move this block to the start replay frame? I\u0027m looking to move all the \"fixture\" code (resource maps, etc) into a common file so this unique string would be better embedded in a frame. We could consider adding a frame number to the function as well, but that\u0027s just a minor detail.",
      "range": {
        "startLine": 1086,
        "startChar": 31,
        "endLine": 1086,
        "endChar": 81
      },
      "revId": "a2e7540e3df3840c8d9dae0f256c114a46c84d96",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ea6cb233_fdedc6ce",
        "filename": "src/libANGLE/capture/FrameCapture.cpp",
        "patchSetId": 18
      },
      "lineNbr": 1086,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-03-29T00:49:11Z",
      "side": 1,
      "message": "I started working on moving the fixture code - it\u0027ll be fine to leave this code as-is. I\u0027ll end up keeping the \"index\" source files around.",
      "parentUuid": "663f60dd_588b8e17",
      "range": {
        "startLine": 1086,
        "startChar": 31,
        "endLine": 1086,
        "endChar": 81
      },
      "revId": "a2e7540e3df3840c8d9dae0f256c114a46c84d96",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1ebb3d25_cab29460",
        "filename": "src/libANGLE/capture/FrameCapture.cpp",
        "patchSetId": 18
      },
      "lineNbr": 1086,
      "author": {
        "id": 1491823
      },
      "writtenOn": "2021-03-29T09:16:43Z",
      "side": 1,
      "message": "I was actually thinking that we should write (and read) the context serialization as an extra JSON file, so that there is no need to write this captured serialization (again) when the  comparison fails and one wants to do a diff against the replay context serialization. \nBetter would be the test would directly write out the diff, but it might be that there is not enough context in a normal diff to really locate the error - unless the diff would not only write the difference between the normal json textual representation, but print out the full path for each node that is different. For that one would have to write some comparison code that walks the json document tree.",
      "parentUuid": "ea6cb233_fdedc6ce",
      "range": {
        "startLine": 1086,
        "startChar": 31,
        "endLine": 1086,
        "endChar": 81
      },
      "revId": "a2e7540e3df3840c8d9dae0f256c114a46c84d96",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "da38ddbc_fe050067",
        "filename": "src/libANGLE/capture/FrameCapture.cpp",
        "patchSetId": 18
      },
      "lineNbr": 1086,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-03-29T13:15:08Z",
      "side": 1,
      "message": "Yeah it would be nice to have the diff and the separate JSON file. This is already a big improvement and I\u0027d like to get it landed. We can always make the separate file/diff changes improvements after this lands.",
      "parentUuid": "1ebb3d25_cab29460",
      "range": {
        "startLine": 1086,
        "startChar": 31,
        "endLine": 1086,
        "endChar": 81
      },
      "revId": "a2e7540e3df3840c8d9dae0f256c114a46c84d96",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}