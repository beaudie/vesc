{
  "comments": [
    {
      "key": {
        "uuid": "30ce278f_275804f2",
        "filename": "src/libANGLE/Caps.h",
        "patchSetId": 28
      },
      "lineNbr": 446,
      "author": {
        "id": 1161747
      },
      "writtenOn": "2017-03-17T05:42:03Z",
      "side": 1,
      "message": "VertexAttribFormat accepts GLuint as relativeOffset, so I think it is more convenient to make this a GLuint.",
      "revId": "449baec35536f68f59dc6132080b0eb23560b05f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "237e2410_835b3b9b",
        "filename": "src/libANGLE/Caps.h",
        "patchSetId": 28
      },
      "lineNbr": 446,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2017-03-17T17:00:17Z",
      "side": 1,
      "message": "We use the types in the GL state tables for these.  In this case it is a \u0027Z\u0027 which is \u0027Integer\u0027.  I\u0027d prefer to keep it as a GLint because that is how it\u0027s queried.",
      "parentUuid": "30ce278f_275804f2",
      "revId": "449baec35536f68f59dc6132080b0eb23560b05f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87d736d5_a8363a39",
        "filename": "src/libANGLE/Caps.h",
        "patchSetId": 28
      },
      "lineNbr": 446,
      "author": {
        "id": 1161747
      },
      "writtenOn": "2017-03-20T02:05:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "237e2410_835b3b9b",
      "revId": "449baec35536f68f59dc6132080b0eb23560b05f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3be6393f_831d3ee6",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 28
      },
      "lineNbr": 1044,
      "author": {
        "id": 1161747
      },
      "writtenOn": "2017-03-17T05:42:03Z",
      "side": 1,
      "message": "Here I refer the structure of Context::vertexAttribPointer(), but I see Context::bindElementArrayBuffer() uses another one:\nLine 994:\nvoid Context::bindElementArrayBuffer(GLuint bufferHandle)\n{\n    Buffer *buffer \u003d mState.mBuffers-\u003echeckBufferAllocation(mImplementation.get(), bufferHandle);\n    mGLState.getVertexArray()-\u003esetElementArrayBuffer(buffer);\n}\nShould we update all these functions like this?",
      "revId": "449baec35536f68f59dc6132080b0eb23560b05f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "787926db_e06f96e3",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 28
      },
      "lineNbr": 1044,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2017-03-17T17:00:17Z",
      "side": 1,
      "message": "We should probably make a State::bindVertexBuffer and update Context::bindElementArrayBuffer to do the same thing because the State class tracks that the VertexArray becomes dirty in these cases.  Jamie will know for sure if Context::bindElementArrayBuffer  is bugged.",
      "parentUuid": "3be6393f_831d3ee6",
      "revId": "449baec35536f68f59dc6132080b0eb23560b05f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30c430a2_2425fea3",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 28
      },
      "lineNbr": 1044,
      "author": {
        "id": 1161747
      },
      "writtenOn": "2017-03-20T02:05:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "787926db_e06f96e3",
      "revId": "449baec35536f68f59dc6132080b0eb23560b05f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87865d34_02687ade",
        "filename": "src/libANGLE/ContextState.cpp",
        "patchSetId": 28
      },
      "lineNbr": 689,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2017-03-17T17:00:17Z",
      "side": 1,
      "message": "These also need to be added to State::getIntegeri_v.",
      "range": {
        "startLine": 686,
        "startChar": 8,
        "endLine": 689,
        "endChar": 38
      },
      "revId": "449baec35536f68f59dc6132080b0eb23560b05f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3b93fa82_11f6b592",
        "filename": "src/libANGLE/ContextState.cpp",
        "patchSetId": 28
      },
      "lineNbr": 689,
      "author": {
        "id": 1161747
      },
      "writtenOn": "2017-03-20T02:05:35Z",
      "side": 1,
      "message": "I have added these to State::getIntegeri_v:\nhttps://chromium-review.googlesource.com/c/446124/30/src/libANGLE/State.cpp#1978",
      "parentUuid": "87865d34_02687ade",
      "range": {
        "startLine": 686,
        "startChar": 8,
        "endLine": 689,
        "endChar": 38
      },
      "revId": "449baec35536f68f59dc6132080b0eb23560b05f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b7d97790_cddd2b05",
        "filename": "src/libANGLE/VertexArray.cpp",
        "patchSetId": 28
      },
      "lineNbr": 124,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2017-03-17T17:00:17Z",
      "side": 1,
      "message": "nit: just merge these into one line:\n\n   mState.mVertexAttributes[attribIndex].bindingIndex \u003d static_cast\u003cGLuint\u003e(bindingIndex);",
      "range": {
        "startLine": 122,
        "startChar": 4,
        "endLine": 124,
        "endChar": 61
      },
      "revId": "449baec35536f68f59dc6132080b0eb23560b05f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8fa78e51_1c138fd6",
        "filename": "src/libANGLE/VertexArray.cpp",
        "patchSetId": 28
      },
      "lineNbr": 124,
      "author": {
        "id": 1161747
      },
      "writtenOn": "2017-03-20T02:05:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b7d97790_cddd2b05",
      "range": {
        "startLine": 122,
        "startChar": 4,
        "endLine": 124,
        "endChar": 61
      },
      "revId": "449baec35536f68f59dc6132080b0eb23560b05f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "19415831_f7f55fe1",
        "filename": "src/libANGLE/renderer/gl/RendererGL.cpp",
        "patchSetId": 28
      },
      "lineNbr": 557,
      "author": {
        "id": 1161747
      },
      "writtenOn": "2017-03-17T05:42:03Z",
      "side": 1,
      "message": "I should use mWorkarounds to set maxVertexAttribStride for Linux AMD OpenGL drivers.",
      "revId": "449baec35536f68f59dc6132080b0eb23560b05f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "06188eb0_3b652780",
        "filename": "src/libANGLE/renderer/gl/WorkaroundsGL.h",
        "patchSetId": 28
      },
      "lineNbr": 126,
      "author": {
        "id": 1161747
      },
      "writtenOn": "2017-03-17T05:42:03Z",
      "side": 1,
      "message": "In ES3.1 it is required that stride should be less than maxVertexAttribStride both in VertexAttribPointer and bindVertexBuffer, so we have to emulate this value for AMD OpenGL drivers.\nHere I treated this emulation as a workaround and use it in generateCaps().",
      "revId": "449baec35536f68f59dc6132080b0eb23560b05f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "36c5e781_ecabaf63",
        "filename": "src/libANGLE/renderer/gl/renderergl_utils.cpp",
        "patchSetId": 28
      },
      "lineNbr": 641,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2017-03-17T17:00:17Z",
      "side": 1,
      "message": "Merge the workaround check with this instead.",
      "range": {
        "startLine": 641,
        "startChar": 12,
        "endLine": 641,
        "endChar": 97
      },
      "revId": "449baec35536f68f59dc6132080b0eb23560b05f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5cf78c7a_f21e0b1b",
        "filename": "src/libANGLE/renderer/gl/renderergl_utils.cpp",
        "patchSetId": 28
      },
      "lineNbr": 641,
      "author": {
        "id": 1161747
      },
      "writtenOn": "2017-03-20T02:05:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "36c5e781_ecabaf63",
      "range": {
        "startLine": 641,
        "startChar": 12,
        "endLine": 641,
        "endChar": 97
      },
      "revId": "449baec35536f68f59dc6132080b0eb23560b05f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f8dac16f_bda235ad",
        "filename": "src/libANGLE/renderer/gl/renderergl_utils.h",
        "patchSetId": 28
      },
      "lineNbr": 45,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2017-03-17T17:00:17Z",
      "side": 1,
      "message": "Pass this by const reference because it is not being modified.  Move it up to just after functions because it is not an output variable.",
      "range": {
        "startLine": 45,
        "startChar": 18,
        "endLine": 45,
        "endChar": 50
      },
      "revId": "449baec35536f68f59dc6132080b0eb23560b05f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b8049ef8_eebdbc58",
        "filename": "src/libANGLE/renderer/gl/renderergl_utils.h",
        "patchSetId": 28
      },
      "lineNbr": 45,
      "author": {
        "id": 1161747
      },
      "writtenOn": "2017-03-20T02:05:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f8dac16f_bda235ad",
      "range": {
        "startLine": 45,
        "startChar": 18,
        "endLine": 45,
        "endChar": 50
      },
      "revId": "449baec35536f68f59dc6132080b0eb23560b05f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f8395ffa_b506de63",
        "filename": "src/libANGLE/validationES.h",
        "patchSetId": 28
      },
      "lineNbr": 619,
      "author": {
        "id": 1161747
      },
      "writtenOn": "2017-03-17T05:42:03Z",
      "side": 1,
      "message": "This function can be shared as the validation of formats in  ValidateVertexAttribPointer, ValidateVertexAttribIPointer and ValidateVertexAttibFormat. \n\nI put it here to reuse this code.",
      "revId": "449baec35536f68f59dc6132080b0eb23560b05f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aafda16a_bb00bc20",
        "filename": "src/libANGLE/validationES3.cpp",
        "patchSetId": 28
      },
      "lineNbr": 2320,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2017-03-17T17:00:17Z",
      "side": 1,
      "message": "Please add a comment to this statement because it\u0027s not obvious.  Something about this command being equivalent to calling glVertexAttribBinding and inheriting it\u0027s validation (spec pg 245)",
      "range": {
        "startLine": 2320,
        "startChar": 8,
        "endLine": 2320,
        "endChar": 50
      },
      "revId": "449baec35536f68f59dc6132080b0eb23560b05f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "68fec545_2bdd1db9",
        "filename": "src/libANGLE/validationES3.cpp",
        "patchSetId": 28
      },
      "lineNbr": 2320,
      "author": {
        "id": 1161747
      },
      "writtenOn": "2017-03-20T02:05:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "aafda16a_bb00bc20",
      "range": {
        "startLine": 2320,
        "startChar": 8,
        "endLine": 2320,
        "endChar": 50
      },
      "revId": "449baec35536f68f59dc6132080b0eb23560b05f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4a66907c_49e17e1c",
        "filename": "src/libGLESv2/entry_points_gles_3_0.cpp",
        "patchSetId": 28
      },
      "lineNbr": 825,
      "author": {
        "id": 1161747
      },
      "writtenOn": "2017-03-17T05:42:03Z",
      "side": 1,
      "message": "I move these validations into ValidateVertexAttribIPointer().",
      "revId": "449baec35536f68f59dc6132080b0eb23560b05f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ab01a4ef_bfc79ae8",
        "filename": "src/libGLESv2/entry_points_gles_3_0.cpp",
        "patchSetId": 28
      },
      "lineNbr": 825,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2017-03-17T17:00:17Z",
      "side": 1,
      "message": "Thanks!",
      "parentUuid": "4a66907c_49e17e1c",
      "revId": "449baec35536f68f59dc6132080b0eb23560b05f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cefcc003_94d01921",
        "filename": "src/tests/deqp_support/deqp_gles31_test_expectations.txt",
        "patchSetId": 28
      },
      "lineNbr": 36,
      "author": {
        "id": 1161747
      },
      "writtenOn": "2017-03-17T05:42:03Z",
      "side": 1,
      "message": "We cannot use Vertex Attrib Binding to draw now because no backends are ready.",
      "revId": "449baec35536f68f59dc6132080b0eb23560b05f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}