{
  "comments": [
    {
      "key": {
        "uuid": "d6302960_c4e97f1f",
        "filename": "src/libANGLE/Uniform.cpp",
        "patchSetId": 23
      },
      "lineNbr": 41,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2017-10-23T16:10:44Z",
      "side": 1,
      "message": "The name of the function makes it difficult to now how things are updated when just looking at the call. I\u0027m not sure what would be a good name though.\n\nAlso should we consider making that static use flags be bitfields so that this operation becomes a single integer bitwise or?",
      "revId": "29abc479357e0f811e849c8f0cccbed292a74818",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4e9d3221_1516bc1a",
        "filename": "src/libANGLE/Uniform.cpp",
        "patchSetId": 23
      },
      "lineNbr": 41,
      "author": {
        "id": 1109831
      },
      "writtenOn": "2017-10-24T13:23:02Z",
      "side": 1,
      "message": "I tried to encapsulate them into a ShaderRef class, so that we can avoid using these poorly named global template methods.",
      "parentUuid": "d6302960_c4e97f1f",
      "revId": "29abc479357e0f811e849c8f0cccbed292a74818",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "24acca51_2e351b03",
        "filename": "src/libANGLE/queryutils.cpp",
        "patchSetId": 23
      },
      "lineNbr": 693,
      "author": {
        "id": 1165541
      },
      "writtenOn": "2017-10-16T09:42:04Z",
      "side": 1,
      "message": "typo: pos?\nSame with other similar places.",
      "range": {
        "startLine": 693,
        "startChar": 54,
        "endLine": 693,
        "endChar": 57
      },
      "revId": "29abc479357e0f811e849c8f0cccbed292a74818",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1f7fec35_c2797318",
        "filename": "src/libANGLE/queryutils.cpp",
        "patchSetId": 23
      },
      "lineNbr": 693,
      "author": {
        "id": 1109831
      },
      "writtenOn": "2017-10-16T12:02:18Z",
      "side": 1,
      "message": "Not typo. \u0027put\u0027 is the position in buffer to put new data.",
      "parentUuid": "24acca51_2e351b03",
      "range": {
        "startLine": 693,
        "startChar": 54,
        "endLine": 693,
        "endChar": 57
      },
      "revId": "29abc479357e0f811e849c8f0cccbed292a74818",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f919626b_97e07207",
        "filename": "src/libANGLE/queryutils.cpp",
        "patchSetId": 23
      },
      "lineNbr": 693,
      "author": {
        "id": 1165541
      },
      "writtenOn": "2017-10-17T01:51:32Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "1f7fec35_c2797318",
      "range": {
        "startLine": 693,
        "startChar": 54,
        "endLine": 693,
        "endChar": 57
      },
      "revId": "29abc479357e0f811e849c8f0cccbed292a74818",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c48d2322_89045a52",
        "filename": "src/libANGLE/queryutils.cpp",
        "patchSetId": 23
      },
      "lineNbr": 747,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2017-10-23T16:10:44Z",
      "side": 1,
      "message": "nit: this could be in GetShaderVariableBufferResourceProperty which would make this function disappear.",
      "revId": "29abc479357e0f811e849c8f0cccbed292a74818",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f90806a_05699330",
        "filename": "src/libANGLE/queryutils.cpp",
        "patchSetId": 23
      },
      "lineNbr": 747,
      "author": {
        "id": 1109831
      },
      "writtenOn": "2017-10-24T13:23:02Z",
      "side": 1,
      "message": "ShaderVaraibleBuffer was designed to cover both interface block and atomic buffer. So it\u0027s nameless as atomic counter buffer has no name and can only be identified by the value of its binding.",
      "parentUuid": "c48d2322_89045a52",
      "revId": "29abc479357e0f811e849c8f0cccbed292a74818",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c313193_3c76f791",
        "filename": "src/libANGLE/queryutils.cpp",
        "patchSetId": 23
      },
      "lineNbr": 775,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2017-10-23T16:10:44Z",
      "side": 1,
      "message": "nit: references should always be const so put should be a pointer. This make it so variable that will be modified can be seen easily when the function is called.\nnit: put -\u003e outputPosition?",
      "revId": "29abc479357e0f811e849c8f0cccbed292a74818",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "48bc3a3c_72c4c898",
        "filename": "src/libANGLE/queryutils.cpp",
        "patchSetId": 23
      },
      "lineNbr": 1171,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2017-10-23T16:10:44Z",
      "side": 1,
      "message": "note to other reviewers: checked that this doesn\u0027t break the \"RobustANGLE\" version of the entry point as an error is generated during validation if params is too small.",
      "revId": "29abc479357e0f811e849c8f0cccbed292a74818",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "751fb527_8dea2c08",
        "filename": "src/libANGLE/queryutils.cpp",
        "patchSetId": 23
      },
      "lineNbr": 1506,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2017-10-23T16:10:44Z",
      "side": 1,
      "message": "this block can be removed as it is now done at the end of the function.",
      "revId": "29abc479357e0f811e849c8f0cccbed292a74818",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1dd34c1b_2c4b1abe",
        "filename": "src/libANGLE/queryutils.cpp",
        "patchSetId": 23
      },
      "lineNbr": 1506,
      "author": {
        "id": 1109831
      },
      "writtenOn": "2017-10-24T13:23:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "751fb527_8dea2c08",
      "revId": "29abc479357e0f811e849c8f0cccbed292a74818",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "062699d2_87420af0",
        "filename": "src/libANGLE/queryutils.cpp",
        "patchSetId": 23
      },
      "lineNbr": 1550,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2017-10-23T16:10:44Z",
      "side": 1,
      "message": "Please comment about this making the output buffer bounds check for all cases writing only one value and that ACTIVE_OUTPUT_VARIABLES needs special casing.",
      "revId": "29abc479357e0f811e849c8f0cccbed292a74818",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9eb57491_9d3b3253",
        "filename": "src/libANGLE/queryutils.cpp",
        "patchSetId": 23
      },
      "lineNbr": 1550,
      "author": {
        "id": 1109831
      },
      "writtenOn": "2017-10-24T13:23:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "062699d2_87420af0",
      "revId": "29abc479357e0f811e849c8f0cccbed292a74818",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b62aaaf9_38116d3e",
        "filename": "src/libANGLE/queryutils.cpp",
        "patchSetId": 23
      },
      "lineNbr": 1553,
      "author": {
        "id": 1165541
      },
      "writtenOn": "2017-10-16T09:42:04Z",
      "side": 1,
      "message": "Can it be removed?",
      "range": {
        "startLine": 1550,
        "startChar": 0,
        "endLine": 1553,
        "endChar": 9
      },
      "revId": "29abc479357e0f811e849c8f0cccbed292a74818",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c5c0752e_b8b59de4",
        "filename": "src/libANGLE/queryutils.cpp",
        "patchSetId": 23
      },
      "lineNbr": 1553,
      "author": {
        "id": 1109831
      },
      "writtenOn": "2017-10-16T12:02:18Z",
      "side": 1,
      "message": "No.",
      "parentUuid": "b62aaaf9_38116d3e",
      "range": {
        "startLine": 1550,
        "startChar": 0,
        "endLine": 1553,
        "endChar": 9
      },
      "revId": "29abc479357e0f811e849c8f0cccbed292a74818",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "94c0a907_daf2ce7b",
        "filename": "src/libANGLE/queryutils.cpp",
        "patchSetId": 23
      },
      "lineNbr": 1553,
      "author": {
        "id": 1165541
      },
      "writtenOn": "2017-10-17T01:51:32Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "c5c0752e_b8b59de4",
      "range": {
        "startLine": 1550,
        "startChar": 0,
        "endLine": 1553,
        "endChar": 9
      },
      "revId": "29abc479357e0f811e849c8f0cccbed292a74818",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f10ed353_9d46f0ab",
        "filename": "src/libANGLE/queryutils.cpp",
        "patchSetId": 23
      },
      "lineNbr": 1559,
      "author": {
        "id": 1165541
      },
      "writtenOn": "2017-10-16T09:42:04Z",
      "side": 1,
      "message": "In what kind of situation it will happen? Do you need a test for this?",
      "range": {
        "startLine": 1558,
        "startChar": 8,
        "endLine": 1559,
        "endChar": 0
      },
      "revId": "29abc479357e0f811e849c8f0cccbed292a74818",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a6e7adba_4739d50b",
        "filename": "src/libANGLE/queryutils.cpp",
        "patchSetId": 23
      },
      "lineNbr": 1559,
      "author": {
        "id": 1109831
      },
      "writtenOn": "2017-10-16T12:02:18Z",
      "side": 1,
      "message": "The test case GetUniformBlockProperties has already covered this.\nFor most resource properties, one property returns one value. But for GL_ACTIVE_VARIABLES property, it may return many values -- an array of its children indices.",
      "parentUuid": "f10ed353_9d46f0ab",
      "range": {
        "startLine": 1558,
        "startChar": 8,
        "endLine": 1559,
        "endChar": 0
      },
      "revId": "29abc479357e0f811e849c8f0cccbed292a74818",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0bbeccc1_28e5b07a",
        "filename": "src/libANGLE/queryutils.cpp",
        "patchSetId": 23
      },
      "lineNbr": 1559,
      "author": {
        "id": 1165541
      },
      "writtenOn": "2017-10-17T01:51:32Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "a6e7adba_4739d50b",
      "range": {
        "startLine": 1558,
        "startChar": 8,
        "endLine": 1559,
        "endChar": 0
      },
      "revId": "29abc479357e0f811e849c8f0cccbed292a74818",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "362c933d_e9a89720",
        "filename": "src/libANGLE/validationES31.cpp",
        "patchSetId": 23
      },
      "lineNbr": 268,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2017-10-23T16:10:44Z",
      "side": 1,
      "message": "Should there be a getActiveAtomicCounterBuffers equivalent to getActiveUniformBlockCount?",
      "revId": "29abc479357e0f811e849c8f0cccbed292a74818",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b588a80_1cb174d5",
        "filename": "src/libANGLE/validationES31.cpp",
        "patchSetId": 23
      },
      "lineNbr": 268,
      "author": {
        "id": 1109831
      },
      "writtenOn": "2017-10-24T13:23:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "362c933d_e9a89720",
      "revId": "29abc479357e0f811e849c8f0cccbed292a74818",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "73c905fd_2a62547d",
        "filename": "src/tests/gl_tests/ProgramInterfaceTest.cpp",
        "patchSetId": 23
      },
      "lineNbr": 472,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2017-10-23T16:10:44Z",
      "side": 1,
      "message": "This can be replaced by ArraySize(props)",
      "revId": "29abc479357e0f811e849c8f0cccbed292a74818",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f97573f0_f3b1e59e",
        "filename": "src/tests/gl_tests/ProgramInterfaceTest.cpp",
        "patchSetId": 23
      },
      "lineNbr": 472,
      "author": {
        "id": 1109831
      },
      "writtenOn": "2017-10-24T13:23:02Z",
      "side": 1,
      "message": "kPropCount is used to define props. So it seems disallowed to use props before defined.",
      "parentUuid": "73c905fd_2a62547d",
      "revId": "29abc479357e0f811e849c8f0cccbed292a74818",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8e33295a_f42c0746",
        "filename": "src/tests/gl_tests/ProgramInterfaceTest.cpp",
        "patchSetId": 23
      },
      "lineNbr": 534,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2017-10-23T16:10:44Z",
      "side": 1,
      "message": "ditto.",
      "revId": "29abc479357e0f811e849c8f0cccbed292a74818",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a7cde2f_357969ce",
        "filename": "src/tests/gl_tests/ProgramInterfaceTest.cpp",
        "patchSetId": 23
      },
      "lineNbr": 551,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2017-10-23T16:10:44Z",
      "side": 1,
      "message": "Can we also have tests for bufSize too small, both while querying single value properties, and while querying active variables?",
      "revId": "29abc479357e0f811e849c8f0cccbed292a74818",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f322aff5_e915deb7",
        "filename": "src/tests/gl_tests/ProgramInterfaceTest.cpp",
        "patchSetId": 23
      },
      "lineNbr": 551,
      "author": {
        "id": 1109831
      },
      "writtenOn": "2017-10-24T13:23:02Z",
      "side": 1,
      "message": "Such cases have already been covered in GetResource and GetUniformBlockProperties respectively.",
      "parentUuid": "0a7cde2f_357969ce",
      "revId": "29abc479357e0f811e849c8f0cccbed292a74818",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}