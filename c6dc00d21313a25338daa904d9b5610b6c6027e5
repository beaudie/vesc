{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d8dd5605_9bcaa81f",
        "filename": "src/tests/gl_tests/DepthStencilFormatsTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 496,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2023-10-31T21:58:17Z",
      "side": 0,
      "message": "So you are removing this because glBindRenderbuffer was just consuming whatever integer this texture object had and genning a new renderbuffer with that ID?  (it doesn\u0027t make sense to bind a depth/stencil texture as a render buffer).  I wonder if this should have thrown an error, but I guess ... this is what you get with GenOnBind semantics.",
      "range": {
        "startLine": 492,
        "startChar": 0,
        "endLine": 496,
        "endChar": 25
      },
      "revId": "c6dc00d21313a25338daa904d9b5610b6c6027e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fbaf6b17_f8c632f0",
        "filename": "src/tests/gl_tests/DepthStencilFormatsTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 496,
      "author": {
        "id": 1459767
      },
      "writtenOn": "2023-10-31T22:11:08Z",
      "side": 0,
      "message": "Exactly, I got rid of the texture because the driver never bound it.",
      "parentUuid": "d8dd5605_9bcaa81f",
      "range": {
        "startLine": 492,
        "startChar": 0,
        "endLine": 496,
        "endChar": 25
      },
      "revId": "c6dc00d21313a25338daa904d9b5610b6c6027e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "06294be1_b339af16",
        "filename": "src/tests/gl_tests/DepthStencilFormatsTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 496,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2023-10-31T22:22:01Z",
      "side": 0,
      "message": "I wonder if the test intended to use `glFramebufferTexture2D` instead as below in `DepthTextureRender`.  Either way, I *think* the intent of the test still stands, just the attachment is a renderbuffer instead of a texutre.",
      "parentUuid": "fbaf6b17_f8c632f0",
      "range": {
        "startLine": 492,
        "startChar": 0,
        "endLine": 496,
        "endChar": 25
      },
      "revId": "c6dc00d21313a25338daa904d9b5610b6c6027e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "20d80419_f854b106",
        "filename": "src/tests/gl_tests/DepthStencilFormatsTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 496,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-11-01T15:26:08Z",
      "side": 0,
      "message": "Drive by: test bug of course, but GL apps are full bugs. Bugs that don\u0027t get fixed because things seemingly work anyway.\n\nShould we perhaps want to make sure Capture is robust against this sort of bug?",
      "parentUuid": "06294be1_b339af16",
      "range": {
        "startLine": 492,
        "startChar": 0,
        "endLine": 496,
        "endChar": 25
      },
      "revId": "c6dc00d21313a25338daa904d9b5610b6c6027e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "65ac102e_ba861f5d",
        "filename": "src/tests/gl_tests/DepthStencilFormatsTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 496,
      "author": {
        "id": 1459767
      },
      "writtenOn": "2023-11-01T17:30:46Z",
      "side": 0,
      "message": "I think capture is more robust to gen-on-bind patterns now than it was previously, but one tradeoff is that replay handle ids are not guaranteed to match capture handle ids. These specific tests are failing because the handle ids embedded in the serialized state don\u0027t match, even if replay behavior is functionally the same.",
      "parentUuid": "20d80419_f854b106",
      "range": {
        "startLine": 492,
        "startChar": 0,
        "endLine": 496,
        "endChar": 25
      },
      "revId": "c6dc00d21313a25338daa904d9b5610b6c6027e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}