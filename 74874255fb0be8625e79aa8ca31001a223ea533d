{
  "comments": [
    {
      "key": {
        "uuid": "0563432a_6d26af5e",
        "filename": "src/compiler/translator/OutputHLSL.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1243,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2018-11-23T14:52:18Z",
      "side": 1,
      "message": "This corresponds to method 2 of the \"SSBO to RWByteAddressBuffer\" when we agreed to go with method 1 instead.",
      "revId": "74874255fb0be8625e79aa8ca31001a223ea533d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a6ab846d_99fd9bfa",
        "filename": "src/compiler/translator/OutputHLSL.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1243,
      "author": {
        "id": 1165541
      },
      "writtenOn": "2018-11-26T09:48:26Z",
      "side": 1,
      "message": "Hi Correntin. Sorry that I used method 2 to support ssbo as binary operand. I thought it would be more complicated in implemention if we adjust the AST tree. But it seems that I am wrong. There are already some utils that I can conveviently to use. Now I am switching it to method 1 and the code is almost ready. Just one question about ssbo as the argument of a function (https://chromium-review.googlesource.com/c/angle/angle/+/1349071), do you think that patch is still needed? Or it needs to be done in AST pass as well?",
      "parentUuid": "0563432a_6d26af5e",
      "revId": "74874255fb0be8625e79aa8ca31001a223ea533d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7cc62fef_262f12f4",
        "filename": "src/compiler/translator/OutputHLSL.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1243,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2018-11-26T11:56:22Z",
      "side": 1,
      "message": "It\u0027s complicated, see my answer there.",
      "parentUuid": "a6ab846d_99fd9bfa",
      "revId": "74874255fb0be8625e79aa8ca31001a223ea533d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}