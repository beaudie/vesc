{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "427febaf_2207bad3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000050
      },
      "writtenOn": "2022-04-12T14:37:05Z",
      "side": 1,
      "message": "Hi Shahbaz, PTAL. Thanks",
      "revId": "24a2c055ab85bf9480d89593f4914596b3252890",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9f4f86f6_96ef1a55",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-04-12T15:46:55Z",
      "side": 1,
      "message": "When can this happen? Could you please add a regression test?",
      "revId": "24a2c055ab85bf9480d89593f4914596b3252890",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "29420c9d_65b30cc8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000050
      },
      "writtenOn": "2022-04-12T16:13:56Z",
      "side": 1,
      "message": "This CL is related to crash report [1]. Seems client is calling glGetInteger(GL_IMPLEMENTATION_COLOR_READ_FORMAT) but the color read attachment is nullptr. Do you why it can reach here?\n\n[1]https://crash.corp.google.com/browse?q\u003dproduct_name%3D%27Chrome_Android%27+AND+ComparableVersion%28product.version%29+%3E%3D+ComparableVersion%28%27102.0.4997.0%27%29+AND+expanded_custom_data.ChromeCrashProto.channel%3D%27canary%27+AND+expanded_custom_data.ChromeCrashProto.magic_signature_1.name%3D%27gl%3A%3AFramebufferAttachment%3A%3AgetFormat%27\u0026stbtiq\u003d\u0026reportid\u003dfe88757fdfebe673\u0026index\u003d0",
      "parentUuid": "9f4f86f6_96ef1a55",
      "revId": "24a2c055ab85bf9480d89593f4914596b3252890",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9f80235e_0d094b6c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-04-12T16:38:17Z",
      "side": 1,
      "message": "Adding Jamie who should be more familiar with this stuff than me.",
      "revId": "24a2c055ab85bf9480d89593f4914596b3252890",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "88ccc7a4_6bde82eb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-04-12T16:38:17Z",
      "side": 1,
      "message": "From what I gather, calling that function should lead to this validation: https://source.chromium.org/chromium/chromium/src/+/main:third_party/angle/src/libANGLE/validationES.cpp;l\u003d2981\n\nAs far as I can tell, looking at Framebuffer::getReadColorAttachment and FramebufferState::getReadAttachment, the validation should have covered every case that could lead to the read attachment pointer being nullptr. So, no, I don\u0027t know what could lead to this.\n\nThat said, if the validation is not bullet-proof, that\u0027s what should be fixed instead of this.",
      "parentUuid": "29420c9d_65b30cc8",
      "revId": "24a2c055ab85bf9480d89593f4914596b3252890",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a129e0fc_cda15557",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-04-12T17:30:31Z",
      "side": 1,
      "message": "This looks like a Skia bug where we\u0027re missing a GLES error because they skip validation. We validate already that the read buffer is set correctly in ValidateStateQuery:\n\n            if (readFramebuffer-\u003egetReadBufferState() \u003d\u003d GL_NONE)\n            {\n                context-\u003evalidationError(entryPoint, GL_INVALID_OPERATION, kReadBufferNone);\n                return false;\n            }\n\nPeng can you figure this out with Skia somehow?\n\nA couple areas where ANGLE could be deficient:\n\n- the spec says the default value of the read buffer is GL_BACK or GL_NONE. Looks like we default the read buffer to COLOR_ATTACHMENT0 which is incorrect.\n- some APIs (e.g. BlitFramebuffer) may be missing validation.",
      "revId": "24a2c055ab85bf9480d89593f4914596b3252890",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1883316c_7218f3a8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-04-12T17:31:32Z",
      "side": 1,
      "message": "I should mention we also validate the attachment is non-null:\n\n            const FramebufferAttachment *attachment \u003d readFramebuffer-\u003egetReadColorAttachment();\n            if (!attachment)\n            {\n                context-\u003evalidationError(entryPoint, GL_INVALID_OPERATION, kReadBufferNotAttached);\n                return false;\n            }",
      "parentUuid": "a129e0fc_cda15557",
      "revId": "24a2c055ab85bf9480d89593f4914596b3252890",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "413de03c_20e4f1c2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000050
      },
      "writtenOn": "2022-04-12T18:45:24Z",
      "side": 1,
      "message": "Based on spec, it could be GL_COLOR_ATTACHMENTi, right?\n\n[1] https://www.khronos.org/registry/OpenGL-Refpages/es3.0/html/glReadBuffer.xhtml\n\nAnd getReadAttachment() checks `framebufferAttachment.isAttached()` and returns nullptr. Is it legit use case? What does a non-attached color attachment means?\n```\nconst FramebufferAttachment *FramebufferState::getReadAttachment() const\n{\n    if (mReadBufferState \u003d\u003d GL_NONE)\n    {\n        return nullptr;\n    }\n\n    uint32_t readIndex \u003d getReadIndex();\n    const gl::FramebufferAttachment \u0026framebufferAttachment \u003d\n        isDefault() ? mDefaultFramebufferReadAttachment : mColorAttachments[readIndex];\n\n    return framebufferAttachment.isAttached() ? \u0026framebufferAttachment : nullptr;\n}\n```",
      "parentUuid": "1883316c_7218f3a8",
      "revId": "24a2c055ab85bf9480d89593f4914596b3252890",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b9dfaed0_2e67d168",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-04-12T18:59:25Z",
      "side": 1,
      "message": "There is a check in GetIntegeri for a null attached RB. So I\u0027m pretty sure this is yet another Skia invalid GLES usage, with validation disabled. (See my second comment, or the code under ValidateStateQuery)\n\nBTW I don\u0027t think it means anything when there\u0027s no read buffer, just that there is no read buffer, and some operations are no longer valid.",
      "parentUuid": "413de03c_20e4f1c2",
      "revId": "24a2c055ab85bf9480d89593f4914596b3252890",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e66ae0a3_795f5d21",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000050
      },
      "writtenOn": "2022-04-13T14:56:09Z",
      "side": 1,
      "message": "We checked skia code, there are not obvious problem in skia. So there is nothing we can do in skia. \n\nBTW, for disabling the validation, I think it means to avoid the extra validation and passthrough gl calls to native gl driver. But we don\u0027t expect crashes in ANGLE source code, we still expect the native gl will return us some gl errors for client to handle. So I feel it is better to land this CL.",
      "parentUuid": "b9dfaed0_2e67d168",
      "revId": "24a2c055ab85bf9480d89593f4914596b3252890",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "13d3b89c_011d8efa",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-04-13T21:41:29Z",
      "side": 1,
      "message": "Geoff: what\u0027s the deal with Skia doing invalid things with validation off? Didn\u0027t we trap these errors? Any idea how we can pinpoint the invalid usage?",
      "revId": "24a2c055ab85bf9480d89593f4914596b3252890",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}