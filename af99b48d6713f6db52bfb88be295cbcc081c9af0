{
  "comments": [
    {
      "key": {
        "uuid": "963ee7fe_90742025",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1326275
      },
      "writtenOn": "2020-08-18T20:37:35Z",
      "side": 1,
      "message": "LGMT with Jamie\u0027s comments addressed",
      "revId": "af99b48d6713f6db52bfb88be295cbcc081c9af0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "53fd7d84_1e25eccb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-08-19T17:44:46Z",
      "side": 1,
      "message": "Quyen: waiting on response on the nits. Let us know if you\u0027re too busy and potentially we could address this for you. This is now the front of the queue of patches to land.",
      "revId": "af99b48d6713f6db52bfb88be295cbcc081c9af0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0138c822_167dcc82",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1374244
      },
      "writtenOn": "2020-08-20T02:15:24Z",
      "side": 1,
      "message": "i will only able to address them during weekend. Feel free to address them yourself if needed. If this CL is not landed by weekend I will do the required changes it myself.",
      "parentUuid": "53fd7d84_1e25eccb",
      "revId": "af99b48d6713f6db52bfb88be295cbcc081c9af0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "100b903f_975524c9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-08-20T02:46:37Z",
      "side": 1,
      "message": "OK, thanks. Happy to wait! Appreciate your support on this.",
      "parentUuid": "0138c822_167dcc82",
      "revId": "af99b48d6713f6db52bfb88be295cbcc081c9af0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d2e863ab_056506ae",
        "filename": "src/gpu_info_util/SystemInfo_macos.mm",
        "patchSetId": 11
      },
      "lineNbr": 216,
      "author": {
        "id": 1326275
      },
      "writtenOn": "2020-08-18T20:37:35Z",
      "side": 1,
      "message": "Can you change the logic so it\u0027s more clear? this looks like a typo to me since the whole rest of the function is wrapped in this if\n\nSomething like:\n#    if defined(ANGLE_PLATFORM_MACOS)\n    if (!@available(macOS 10.13, *))\n        return 0;\n#    endif\n\n\u003cfunction body\u003e",
      "range": {
        "startLine": 214,
        "startChar": 0,
        "endLine": 216,
        "endChar": 10
      },
      "revId": "af99b48d6713f6db52bfb88be295cbcc081c9af0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b32d3225_b48e2094",
        "filename": "src/gpu_info_util/SystemInfo_macos.mm",
        "patchSetId": 11
      },
      "lineNbr": 216,
      "author": {
        "id": 1374244
      },
      "writtenOn": "2020-08-23T17:50:00Z",
      "side": 1,
      "message": "Unfortunately, we cannot use NOT operator with @available directive.\nOnly two platforms support this code: macOS and mac Catalyst. On macOS, the code is only supported since 10.13 (this is what I got from Dawn\u0027s reference code anw).",
      "parentUuid": "d2e863ab_056506ae",
      "range": {
        "startLine": 214,
        "startChar": 0,
        "endLine": 216,
        "endChar": 10
      },
      "revId": "af99b48d6713f6db52bfb88be295cbcc081c9af0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d64ca23e_1da883de",
        "filename": "src/libANGLE/renderer/metal/ContextMtl.h",
        "patchSetId": 11
      },
      "lineNbr": 307,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-08-11T14:51:59Z",
      "side": 1,
      "message": "nit: it is good practice to use unique names for methods instead of overloading.",
      "range": {
        "startLine": 307,
        "startChar": 31,
        "endLine": 307,
        "endChar": 54
      },
      "revId": "af99b48d6713f6db52bfb88be295cbcc081c9af0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "16c96879_34f87f65",
        "filename": "src/libANGLE/renderer/metal/ContextMtl.h",
        "patchSetId": 11
      },
      "lineNbr": 307,
      "author": {
        "id": 1374244
      },
      "writtenOn": "2020-08-23T17:50:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d64ca23e_1da883de",
      "range": {
        "startLine": 307,
        "startChar": 31,
        "endLine": 307,
        "endChar": 54
      },
      "revId": "af99b48d6713f6db52bfb88be295cbcc081c9af0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ec2586b2_78f76509",
        "filename": "src/tests/gl_tests/BlitFramebufferANGLETest.cpp",
        "patchSetId": 11
      },
      "lineNbr": 23,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-08-11T14:51:59Z",
      "side": 1,
      "message": "thanks for getting the double underscore right! It\u0027s easy to miss.",
      "range": {
        "startLine": 23,
        "startChar": 15,
        "endLine": 23,
        "endChar": 32
      },
      "revId": "af99b48d6713f6db52bfb88be295cbcc081c9af0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "effebfd4_0aea2266",
        "filename": "src/tests/test_utils/ANGLETest.h",
        "patchSetId": 11
      },
      "lineNbr": 357,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-08-11T14:51:59Z",
      "side": 1,
      "message": "Can you please remove this and use the new way of specifying features via the EGL extension? This is legacy and we should probably add a comment not to use these.\n\nSee WithAllocateNonZeroMemory in RobustResourceInitTest.cpp.",
      "range": {
        "startLine": 357,
        "startChar": 17,
        "endLine": 357,
        "endChar": 38
      },
      "revId": "af99b48d6713f6db52bfb88be295cbcc081c9af0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a37e453a_fff25bfc",
        "filename": "src/tests/test_utils/ANGLETest.h",
        "patchSetId": 11
      },
      "lineNbr": 357,
      "author": {
        "id": 1374244
      },
      "writtenOn": "2020-08-23T17:50:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "effebfd4_0aea2266",
      "range": {
        "startLine": 357,
        "startChar": 17,
        "endLine": 357,
        "endChar": 38
      },
      "revId": "af99b48d6713f6db52bfb88be295cbcc081c9af0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}