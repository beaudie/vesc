{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e87c10ff_592c6f14",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2021-05-14T23:08:46Z",
      "side": 1,
      "message": "Hi Mark,\n\nI looked over the change (seemed reasonable) and then tried it with AGI and PUBG.  The problem still exists.\n\nDoing some additional debugging, I found the problem.  It\u0027s in \"DebugAnnotatorVk.cpp\".  I added glDrawBuffer* to the list of commands that should trigger an endEvent.  That\u0027s why there was no draw/begin associated with the end.  My CL is https://chromium-review.googlesource.com/c/angle/angle/+/2898472, and I\u0027ll make you a reviewer.  Please try my CL and see if you see the same results as me.  If so, I suggest pressing the \"Abandon\" button on this CL.\n\nI tested my fix with the Ragnarok game (https://github.com/google/agi/issues/697), but my fix did not fix the glDispatch* issue reported with bug 697.\n\nBest regards,\nIan",
      "revId": "59127975428381bf015512a3d8b5daadfaff61e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "877f3bc4_01227e8c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1511618
      },
      "writtenOn": "2021-05-17T19:02:35Z",
      "side": 1,
      "message": "Ian, I\u0027m not sure I am correctly reproducing the issue on PUBG or Gangster (can\u0027t run the shared traces) but I did verify that both of those apps made glDrawBuffer* calls.  OTOH, I don\u0027t see any glDrawBuffer* calls made by Hillclimb and I\u0027m not seeing this CL having any effect on the mismatches there -- did your CL fix Hillclimb as well? These may be two separate issues.",
      "parentUuid": "e87c10ff_592c6f14",
      "revId": "59127975428381bf015512a3d8b5daadfaff61e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4440eca6_f48b96e4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2021-05-17T19:14:45Z",
      "side": 1,
      "message": "My change affects frame capture (which is where the bad hierarchy is introduced by ANGLE).\n\nI tested with PUBG and \"Ragnarok M: Eternal Love\" (which has the compute bug).  I did before and after testing (2-3 times just to make sure:-).\n\nI didn\u0027t try Gangster or Hillclimb.  Please give them a try.  There may be more than one bug.\n\nWhat I looked for was that the hierarchy shown in AGI was wrong without a CL and was correct with a CL.  I take PUBG all the way till when I\u0027ve landed (after parachuting), and then I start the trace.",
      "parentUuid": "877f3bc4_01227e8c",
      "revId": "59127975428381bf015512a3d8b5daadfaff61e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d6e5c07c_590a4bb3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1511618
      },
      "writtenOn": "2021-05-18T00:07:21Z",
      "side": 1,
      "message": "Verified that the DrawBuffers CL (2898472) works for PUBG Mobile, but that it does not cover the behavior in Hillclimb (I was not able to reproduce the behavior in Real Gangster).  This CL fixes the hillclimb issue and from inspection it does seem that the two issues are distinct and unrelated, other than to their effect which manifests similarly.",
      "parentUuid": "4440eca6_f48b96e4",
      "revId": "59127975428381bf015512a3d8b5daadfaff61e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b08cf182_0bffdfab",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2021-05-18T16:35:32Z",
      "side": 1,
      "message": "I apologize for not looking at Hill Climb sooner.  I made a modification to one of your methods that will improve this CL, and then we can land it.  Thanks for this CL!",
      "revId": "59127975428381bf015512a3d8b5daadfaff61e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "87ebc255_8ea21381",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 3008,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2021-05-18T16:35:32Z",
      "side": 1,
      "message": "I looked at the traces without and with this CL.  This definitely fixes the draws not being under the render pass.  However, it didn\u0027t the GLES calls that preceded this draw under the draw.  I modified this highlighted part of the method to be:\n\n```\n    // Even though this draw call is being no-op\u0027d, we still must handle the dirty event log\n    ASSERT(mRenderPassCommandBuffer);\n    angle::Result result \u003d handleDirtyEventLogImpl(mRenderPassCommandBuffer);\n    ASSERT(result \u003d\u003d angle::Result::Continue);\n```\n\nThis will put preceding non-draw calls under this draw (just like a non-noop\u0027d draw).\n\nI\u0027m a little uncertain if my handling of the `angle::Result` is proper.  Can you look at how other void functions handle those return values and modify this please?",
      "range": {
        "startLine": 3000,
        "startChar": 0,
        "endLine": 3008,
        "endChar": 0
      },
      "revId": "59127975428381bf015512a3d8b5daadfaff61e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "72690817_1712bfdd",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 3008,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-05-18T16:43:43Z",
      "side": 1,
      "message": "You shouldn\u0027t really be returning void if you generate angle::Result. It\u0027s meant to be passed up all the way to the entry points.\n\nThe exceptions to that rule are for threading, and for legacy code.\n\nNot sure which function is generating errors here.",
      "parentUuid": "87ebc255_8ea21381",
      "range": {
        "startLine": 3000,
        "startChar": 0,
        "endLine": 3008,
        "endChar": 0
      },
      "revId": "59127975428381bf015512a3d8b5daadfaff61e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "907f5b0b_f2fda264",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 3008,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2021-05-18T16:50:36Z",
      "side": 1,
      "message": "Thanks for replying Jamie!\n\nLooking at this CL broader, this method is called from methods like: Context::drawArraysInstanced(), which return void.  I\u0027m guessing that\u0027s why Mark made this method return void.\n\nI see that the Context::draw* methods call lower-level methods via the ANGLE_CONTEXT_TRY macro.  Is that what should happen here?  Or should this method return angle::Result, and the Context::draw* methods handle it per normal?",
      "parentUuid": "72690817_1712bfdd",
      "range": {
        "startLine": 3000,
        "startChar": 0,
        "endLine": 3008,
        "endChar": 0
      },
      "revId": "59127975428381bf015512a3d8b5daadfaff61e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ac975537_403e1688",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 3008,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2021-05-18T16:54:16Z",
      "side": 1,
      "message": "Wait, I think I know the correct answer (I was just being too quick in my previous review feedback).  This method should \"return angle::Result, and the Context::draw* methods handle it per normal\".",
      "parentUuid": "907f5b0b_f2fda264",
      "range": {
        "startLine": 3000,
        "startChar": 0,
        "endLine": 3008,
        "endChar": 0
      },
      "revId": "59127975428381bf015512a3d8b5daadfaff61e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ea45f634_e2bcc090",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 3008,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-05-18T17:19:24Z",
      "side": 1,
      "message": "I think that\u0027s correct, your last statement.",
      "parentUuid": "ac975537_403e1688",
      "range": {
        "startLine": 3000,
        "startChar": 0,
        "endLine": 3008,
        "endChar": 0
      },
      "revId": "59127975428381bf015512a3d8b5daadfaff61e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f5abda32_f1269f02",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 3008,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-05-18T18:23:37Z",
      "side": 1,
      "message": "Drive by:\n\n\u003e This will put preceding non-draw calls under this draw (just like a non-noop\u0027d draw).\n\nIdeally you want the noop\u0027d draws to also have their own entry. Otherwise the developer may get confused as they don\u0027t see the draw call immediately. Likely not a big deal (since you would think no one issues noop draw calls)",
      "parentUuid": "ea45f634_e2bcc090",
      "range": {
        "startLine": 3000,
        "startChar": 0,
        "endLine": 3008,
        "endChar": 0
      },
      "revId": "59127975428381bf015512a3d8b5daadfaff61e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}