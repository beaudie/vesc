{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "702c6b34_d7a02aa9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 18
      },
      "lineNbr": 0,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2022-10-19T17:25:11Z",
      "side": 1,
      "message": "LGTM.",
      "revId": "ceb447d357f07dc71761affbe06e4fc9bc570dfb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ca054147_bef62735",
        "filename": "src/libANGLE/renderer/vulkan/AllocatorManagerPool.h",
        "patchSetId": 18
      },
      "lineNbr": 29,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-10-31T21:07:09Z",
      "side": 1,
      "message": "nit: can we drop the `Manager`? It\u0027s meaningless, every class is managing something.\n\nAlso, what does `Shared` mean here?",
      "range": {
        "startLine": 29,
        "startChar": 6,
        "endLine": 29,
        "endChar": 32
      },
      "revId": "ceb447d357f07dc71761affbe06e4fc9bc570dfb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ad69b237_5dd40587",
        "filename": "src/libANGLE/renderer/vulkan/AllocatorManagerPool.h",
        "patchSetId": 18
      },
      "lineNbr": 29,
      "author": {
        "id": 1525982
      },
      "writtenOn": "2022-11-07T18:41:26Z",
      "side": 1,
      "message": "The `Shared` was taken from what would be a counterpart for the `SharedRingAllocator`. Renamed to `SecondaryPoolAllocatorHelper`. The other `Manager` classes have also been renamed, mostly to `Helper` classes.",
      "parentUuid": "ca054147_bef62735",
      "range": {
        "startLine": 29,
        "startChar": 6,
        "endLine": 29,
        "endChar": 32
      },
      "revId": "ceb447d357f07dc71761affbe06e4fc9bc570dfb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "302d56ea_bcd926de",
        "filename": "src/libANGLE/renderer/vulkan/AllocatorManagerPool.h",
        "patchSetId": 18
      },
      "lineNbr": 63,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-10-31T21:07:09Z",
      "side": 1,
      "message": "ditto\n\nSince these classes are specific to command buffers, they could be named like `CommandPoolAllocator` etc",
      "range": {
        "startLine": 63,
        "startChar": 6,
        "endLine": 63,
        "endChar": 26
      },
      "revId": "ceb447d357f07dc71761affbe06e4fc9bc570dfb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ba263eda_e7343472",
        "filename": "src/libANGLE/renderer/vulkan/AllocatorManagerPool.h",
        "patchSetId": 18
      },
      "lineNbr": 63,
      "author": {
        "id": 1525982
      },
      "writtenOn": "2022-11-07T18:41:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "302d56ea_bcd926de",
      "range": {
        "startLine": 63,
        "startChar": 6,
        "endLine": 63,
        "endChar": 26
      },
      "revId": "ceb447d357f07dc71761affbe06e4fc9bc570dfb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d6cb2c67_413c2aaa",
        "filename": "src/libANGLE/renderer/vulkan/AllocatorManagerRing.cpp",
        "patchSetId": 18
      },
      "lineNbr": 36,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-10-31T21:07:09Z",
      "side": 1,
      "message": "What\u0027s the purpose of this function? Check what for recycle? All it does is call `open()` which is a function for debug purposes, and `recycleCommandBufferHelper` already calls `markOpen()`.\n\nCould the asserts be done in another function that happens to get called in the process of recycling and avoid this extra function?",
      "revId": "ceb447d357f07dc71761affbe06e4fc9bc570dfb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6b13918e_ee1ee6ae",
        "filename": "src/libANGLE/renderer/vulkan/AllocatorManagerRing.cpp",
        "patchSetId": 18
      },
      "lineNbr": 36,
      "author": {
        "id": 1525982
      },
      "writtenOn": "2022-11-07T18:41:26Z",
      "side": 1,
      "message": "Thanks for pointing it out. Removed.\nIn addition, the empty check for the command buffer is already being done in `recycleCommandBufferHelper()`. As for the `hasAllocatorLinks()` assert, I didn\u0027t see another function to embed it into. So I added a `hasAllocatorLinks()` function to the pool allocator class, so it could be added next to the `empty()` assert. After that, `checkForRecycle()` was removed.",
      "parentUuid": "d6cb2c67_413c2aaa",
      "revId": "ceb447d357f07dc71761affbe06e4fc9bc570dfb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "76c61c32_8f0e0a55",
        "filename": "src/libANGLE/renderer/vulkan/AllocatorManagerRing.cpp",
        "patchSetId": 18
      },
      "lineNbr": 124,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-10-31T21:07:09Z",
      "side": 1,
      "message": "Does this allocator have zero memory waste?",
      "revId": "ceb447d357f07dc71761affbe06e4fc9bc570dfb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "815ac068_b215f6ca",
        "filename": "src/libANGLE/renderer/vulkan/AllocatorManagerRing.cpp",
        "patchSetId": 18
      },
      "lineNbr": 124,
      "author": {
        "id": 1525982
      },
      "writtenOn": "2022-11-07T18:41:26Z",
      "side": 1,
      "message": "Do you mean in terms of memory leaking?",
      "parentUuid": "76c61c32_8f0e0a55",
      "revId": "ceb447d357f07dc71761affbe06e4fc9bc570dfb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d63e23dd_98d1a747",
        "filename": "src/libANGLE/renderer/vulkan/AllocatorManagerRing.cpp",
        "patchSetId": 18
      },
      "lineNbr": 124,
      "author": {
        "id": 1525982
      },
      "writtenOn": "2022-11-11T01:54:24Z",
      "side": 1,
      "message": "As per our discussion, it could be possible to remove this function altogether.",
      "parentUuid": "815ac068_b215f6ca",
      "revId": "ceb447d357f07dc71761affbe06e4fc9bc570dfb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "96425c9b_1b40acd8",
        "filename": "src/libANGLE/renderer/vulkan/BUILD.gn",
        "patchSetId": 18
      },
      "lineNbr": 31,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2022-10-18T23:31:27Z",
      "side": 1,
      "message": "The biggest suggestion here is that we actually enable it for async submission path. Otherwise it won\u0027t tested and will regress over time as well. (When async submission is disabled, we will still use pool allocator). It will require some surgery, I think, but better than get it bit rotten.",
      "range": {
        "startLine": 31,
        "startChar": 53,
        "endLine": 31,
        "endChar": 58
      },
      "revId": "ceb447d357f07dc71761affbe06e4fc9bc570dfb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1eefebaf_dea458bb",
        "filename": "src/libANGLE/renderer/vulkan/BUILD.gn",
        "patchSetId": 18
      },
      "lineNbr": 31,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-10-19T00:26:38Z",
      "side": 1,
      "message": "Could we do that in a follow up separate CL? In particular, we haven\u0027t really reviewed the new pool closely, it\u0027s complicated and unsure if it\u0027s correct. Also making that decision dynamic requires some more work.\n\nThe goal of this change is mostly to ease Mohan\u0027s rebase job. We don\u0027t even have to land the new pool at all as long as Samsung can do a drop-in replacement.",
      "parentUuid": "96425c9b_1b40acd8",
      "range": {
        "startLine": 31,
        "startChar": 53,
        "endLine": 31,
        "endChar": 58
      },
      "revId": "ceb447d357f07dc71761affbe06e4fc9bc570dfb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7238b03b_6cad06f8",
        "filename": "src/libANGLE/renderer/vulkan/BUILD.gn",
        "patchSetId": 18
      },
      "lineNbr": 31,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2022-10-19T17:25:11Z",
      "side": 1,
      "message": "SGTM",
      "parentUuid": "1eefebaf_dea458bb",
      "range": {
        "startLine": 31,
        "startChar": 53,
        "endLine": 31,
        "endChar": 58
      },
      "revId": "ceb447d357f07dc71761affbe06e4fc9bc570dfb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae9b1bc9_fc0917a4",
        "filename": "src/libANGLE/renderer/vulkan/CommandProcessor.cpp",
        "patchSetId": 18
      },
      "lineNbr": 830,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-10-31T21:07:09Z",
      "side": 1,
      "message": "Could you please consolidate on the existing method? The problem you are trying to solve here is already solved with the `getCommandPool()` call here; the pool is extracted from the previous CB, passed into `getOutsideRenderPassCommandBufferHelper`, which in turn initializes the new CB with the same pool.\n\nWe should be able to instead `getAllocator()` and pass that around instead of `getCommandPool()` (which the allocator is replacing)",
      "range": {
        "startLine": 830,
        "startChar": 17,
        "endLine": 830,
        "endChar": 55
      },
      "revId": "ceb447d357f07dc71761affbe06e4fc9bc570dfb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "563d56de_6b4b6e68",
        "filename": "src/libANGLE/renderer/vulkan/CommandProcessor.cpp",
        "patchSetId": 18
      },
      "lineNbr": 830,
      "author": {
        "id": 1525982
      },
      "writtenOn": "2022-11-07T18:41:26Z",
      "side": 1,
      "message": "Do we still need to initialize the command pool object in the command buffer?",
      "parentUuid": "ae9b1bc9_fc0917a4",
      "range": {
        "startLine": 830,
        "startChar": 17,
        "endLine": 830,
        "endChar": 55
      },
      "revId": "ceb447d357f07dc71761affbe06e4fc9bc570dfb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9618ef77_315545b4",
        "filename": "src/libANGLE/renderer/vulkan/CommandProcessor.cpp",
        "patchSetId": 18
      },
      "lineNbr": 830,
      "author": {
        "id": 1525982
      },
      "writtenOn": "2022-11-11T01:54:24Z",
      "side": 1,
      "message": "Passed the allocator pointer alongside the Vulkan command pool pointer.",
      "parentUuid": "563d56de_6b4b6e68",
      "range": {
        "startLine": 830,
        "startChar": 17,
        "endLine": 830,
        "endChar": 55
      },
      "revId": "ceb447d357f07dc71761affbe06e4fc9bc570dfb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "122008f2_28bb9439",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 18
      },
      "lineNbr": 1022,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-10-31T21:07:09Z",
      "side": 1,
      "message": "How about adding a doc under `src/libANGLE/renderer/vulkan/doc` that describes the differences between the allocators?\n\nWhile this is good knowledge to have, the point of unifying the interfaces is that the user (rest of ANGLE code) wouldn\u0027t need to care about what the difference is",
      "range": {
        "startLine": 1021,
        "startChar": 0,
        "endLine": 1022,
        "endChar": 18
      },
      "revId": "ceb447d357f07dc71761affbe06e4fc9bc570dfb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a8725338_029e1e24",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 18
      },
      "lineNbr": 1022,
      "author": {
        "id": 1525982
      },
      "writtenOn": "2022-11-11T01:54:24Z",
      "side": 1,
      "message": "Added the file `Allocators.md`.",
      "parentUuid": "122008f2_28bb9439",
      "range": {
        "startLine": 1021,
        "startChar": 0,
        "endLine": 1022,
        "endChar": 18
      },
      "revId": "ceb447d357f07dc71761affbe06e4fc9bc570dfb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "93524d38_76a0915f",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 18
      },
      "lineNbr": 1146,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-10-31T21:07:09Z",
      "side": 1,
      "message": "ditto",
      "revId": "ceb447d357f07dc71761affbe06e4fc9bc570dfb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8e40fd76_0d0a0b7d",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 18
      },
      "lineNbr": 1146,
      "author": {
        "id": 1525982
      },
      "writtenOn": "2022-11-11T01:54:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "93524d38_76a0915f",
      "revId": "ceb447d357f07dc71761affbe06e4fc9bc570dfb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ad93fc1_8f7f8d44",
        "filename": "src/libANGLE/renderer/vulkan/SecondaryCommandBuffer.h",
        "patchSetId": 18
      },
      "lineNbr": 953,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-10-31T21:07:09Z",
      "side": 1,
      "message": "Looks to me like this could be a private function in the classes, with `checkSizeToAllocateNewBlock*` returning the resulting pointer. You can pass that pointer to `commonInit`",
      "range": {
        "startLine": 953,
        "startChar": 30,
        "endLine": 953,
        "endChar": 60
      },
      "revId": "ceb447d357f07dc71761affbe06e4fc9bc570dfb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cd7c78bd_f2e6a5d2",
        "filename": "src/libANGLE/renderer/vulkan/SecondaryCommandBuffer.h",
        "patchSetId": 18
      },
      "lineNbr": 953,
      "author": {
        "id": 1525982
      },
      "writtenOn": "2022-11-07T18:41:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8ad93fc1_8f7f8d44",
      "range": {
        "startLine": 953,
        "startChar": 30,
        "endLine": 953,
        "endChar": 60
      },
      "revId": "ceb447d357f07dc71761affbe06e4fc9bc570dfb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "22edbea8_28ed350d",
        "filename": "src/libANGLE/renderer/vulkan/SecondaryCommandBuffer.h",
        "patchSetId": 18
      },
      "lineNbr": 975,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-10-31T21:07:09Z",
      "side": 1,
      "message": "naming nit: `onNewVariableSizedCommand`.",
      "range": {
        "startLine": 975,
        "startChar": 30,
        "endLine": 975,
        "endChar": 57
      },
      "revId": "ceb447d357f07dc71761affbe06e4fc9bc570dfb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1d01861a_ba8299e1",
        "filename": "src/libANGLE/renderer/vulkan/SecondaryCommandBuffer.h",
        "patchSetId": 18
      },
      "lineNbr": 975,
      "author": {
        "id": 1525982
      },
      "writtenOn": "2022-11-07T18:41:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "22edbea8_28ed350d",
      "range": {
        "startLine": 975,
        "startChar": 30,
        "endLine": 975,
        "endChar": 57
      },
      "revId": "ceb447d357f07dc71761affbe06e4fc9bc570dfb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a5747f9f_0a2e6d5b",
        "filename": "src/libANGLE/renderer/vulkan/SecondaryCommandBuffer.h",
        "patchSetId": 18
      },
      "lineNbr": 979,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-10-31T21:07:09Z",
      "side": 1,
      "message": "Why the duplicate code? Can this function just return `void`? Wouldn\u0027t the `commonInit` that follows just work?",
      "range": {
        "startLine": 976,
        "startChar": 0,
        "endLine": 979,
        "endChar": 9
      },
      "revId": "ceb447d357f07dc71761affbe06e4fc9bc570dfb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0edf52e6_271c3728",
        "filename": "src/libANGLE/renderer/vulkan/SecondaryCommandBuffer.h",
        "patchSetId": 18
      },
      "lineNbr": 979,
      "author": {
        "id": 1525982
      },
      "writtenOn": "2022-11-07T18:41:26Z",
      "side": 1,
      "message": "`*variableDataPtr` takes different parameters for each allocator. In the case of the ring allocator, it depends on the output of `commonInit()`. I added a bool output for the inside the `onNewCommand*()` functions to assign `*variableDataPtr` accordingly, and managed to remove some of the duplications after moving the header update function.",
      "parentUuid": "a5747f9f_0a2e6d5b",
      "range": {
        "startLine": 976,
        "startChar": 0,
        "endLine": 979,
        "endChar": 9
      },
      "revId": "ceb447d357f07dc71761affbe06e4fc9bc570dfb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9c65e35f_4fc90ab4",
        "filename": "src/libANGLE/renderer/vulkan/SecondaryCommandBuffer.h",
        "patchSetId": 18
      },
      "lineNbr": 997,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-10-31T21:07:09Z",
      "side": 1,
      "message": "naming nit: `onNewCommand`",
      "range": {
        "startLine": 997,
        "startChar": 26,
        "endLine": 997,
        "endChar": 68
      },
      "revId": "ceb447d357f07dc71761affbe06e4fc9bc570dfb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cfda78e4_b33a07cb",
        "filename": "src/libANGLE/renderer/vulkan/SecondaryCommandBuffer.h",
        "patchSetId": 18
      },
      "lineNbr": 997,
      "author": {
        "id": 1525982
      },
      "writtenOn": "2022-11-07T18:41:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9c65e35f_4fc90ab4",
      "range": {
        "startLine": 997,
        "startChar": 26,
        "endLine": 997,
        "endChar": 68
      },
      "revId": "ceb447d357f07dc71761affbe06e4fc9bc570dfb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1035c3f9_b4a72b7d",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 18
      },
      "lineNbr": 1205,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-10-31T21:07:09Z",
      "side": 1,
      "message": "naming nit: Just `CommandsAllocator`, it\u0027s not specific to render passes, and `Type` in the type name is redundant.",
      "range": {
        "startLine": 1205,
        "startChar": 4,
        "endLine": 1205,
        "endChar": 35
      },
      "revId": "ceb447d357f07dc71761affbe06e4fc9bc570dfb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "37eca4fe_c35b82a2",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 18
      },
      "lineNbr": 1205,
      "author": {
        "id": 1525982
      },
      "writtenOn": "2022-11-07T18:41:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1035c3f9_b4a72b7d",
      "range": {
        "startLine": 1205,
        "startChar": 4,
        "endLine": 1205,
        "endChar": 35
      },
      "revId": "ceb447d357f07dc71761affbe06e4fc9bc570dfb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}