{
  "comments": [
    {
      "key": {
        "uuid": "40cd5ece_d851a7da",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-09-10T16:20:02Z",
      "side": 1,
      "message": "nit: Vulkan:",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 6
      },
      "revId": "6b31ad9cbf4b1f283fe565758f88885111eaa469",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "062548ff_7bf30642",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1263724
      },
      "writtenOn": "2020-09-10T16:35:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "40cd5ece_d851a7da",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 6
      },
      "revId": "6b31ad9cbf4b1f283fe565758f88885111eaa469",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5bbfc7c_48ba4f0d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 13,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-09-10T16:38:56Z",
      "side": 1,
      "message": "Ouch! This should even show easily without threading. Take this test for example:\n\n- Attach FBO to texture level 0\n- Draw\n- glTexSubImage2D into texture level 0\n- Draw again\n\nWithout this change, the data upload would be lost because it\u0027s written to a command buffer that\u0027s already flushed. Isn\u0027t that correct?",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 13,
        "endChar": 8
      },
      "revId": "6b31ad9cbf4b1f283fe565758f88885111eaa469",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0203d31b_9f2b8d01",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 13,
      "author": {
        "id": 1263724
      },
      "writtenOn": "2020-09-10T21:28:30Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "c5bbfc7c_48ba4f0d",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 13,
        "endChar": 8
      },
      "revId": "6b31ad9cbf4b1f283fe565758f88885111eaa469",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e2603996_c0672923",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-09-10T16:20:02Z",
      "side": 1,
      "message": "Can you add a regression test for this bug? LGTM with a test that fails before / passes after this fix.",
      "revId": "6b31ad9cbf4b1f283fe565758f88885111eaa469",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3111125b_6ad2da9c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1263724
      },
      "writtenOn": "2020-09-10T16:35:42Z",
      "side": 1,
      "message": "The manhattan trace test will fail with threading enabled. Not sure if I can rig a test to trigger this failure without threading.",
      "parentUuid": "e2603996_c0672923",
      "revId": "6b31ad9cbf4b1f283fe565758f88885111eaa469",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "930bd6bc_b997818a",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 2
      },
      "lineNbr": 4481,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-09-10T16:38:56Z",
      "side": 1,
      "message": "I think if you take the command buffer right after the above operation, there\u0027s nothing that can break it again, so you don\u0027t need to retake it in every command below.",
      "revId": "6b31ad9cbf4b1f283fe565758f88885111eaa469",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ea4b1cd3_f1ee6c3c",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 2
      },
      "lineNbr": 4481,
      "author": {
        "id": 1263724
      },
      "writtenOn": "2020-09-10T16:51:00Z",
      "side": 1,
      "message": "Yeah, I was thinking of that but then thought what happens if someone changes something and it is no longer valid? It\u0027s not an obvious thing to catch.",
      "parentUuid": "930bd6bc_b997818a",
      "revId": "6b31ad9cbf4b1f283fe565758f88885111eaa469",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "85745f11_476f0feb",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 2
      },
      "lineNbr": 4481,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-09-10T19:10:06Z",
      "side": 1,
      "message": "It would be good to fix that with an ASSERT as that situation can arise in any number of situations throughout the backend.\n\nI took a closer look, and I agree the non-threaded version of the bug is impossible to reproduce currently as kNumCommandBuffers\u003d2. So effectively after the render pass is closed, the command buffer gets reallocated to the same one!\n\nProbably the (or one of) the reasons Tobin couldn\u0027t increase that number is the very same bug you are fixing here.\n\n---\n\nMy suggestion would be to:\n\n- Fix this minimally (get the command buffer here) and submit it.\n\nAs a follow up:\n\n- Increase kNumCommandBuffers to at least 4\n- In functions that record a command in the command buffer, add an ASSERT that the command buffer is initialized/active/whatever (effectively a bool that on flush gets set to false and back to true when the command buffer is selected again)\n- Fix any other similar bugs that are encountered",
      "parentUuid": "ea4b1cd3_f1ee6c3c",
      "revId": "6b31ad9cbf4b1f283fe565758f88885111eaa469",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ff296b3b_cffb0c0d",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 2
      },
      "lineNbr": 4481,
      "author": {
        "id": 1263724
      },
      "writtenOn": "2020-09-10T21:08:34Z",
      "side": 1,
      "message": "I did the \"minimal\" version and I hit the same validation error I was seeing before. Would appear somewhere things are getting out of whack.\nI like the idea of having an assert fire when trying to add to a \"closed\" command buffer.",
      "parentUuid": "85745f11_476f0feb",
      "revId": "6b31ad9cbf4b1f283fe565758f88885111eaa469",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3da61e8c_fe5461cb",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 2
      },
      "lineNbr": 4481,
      "author": {
        "id": 1263724
      },
      "writtenOn": "2020-09-10T21:28:30Z",
      "side": 1,
      "message": "There were a couple of places where I needed to update the commandBuffer pointer.",
      "parentUuid": "ff296b3b_cffb0c0d",
      "revId": "6b31ad9cbf4b1f283fe565758f88885111eaa469",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}