{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "bf89847e_be580410",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-05-11T18:14:57Z",
      "side": 1,
      "message": "Did this actually happen or is this change speculative? If the event creation fails, we have much bigger problems, how about returning `angle::Result` and let the usual ANGLE_TRY deal with this?\n\nSo far, abiding by \"Fail Fast\" has worked out for us.",
      "revId": "0f5740288beaaf8c3d09a269b5a989c257677869",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f6afce80_856d8a1a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2024-05-13T16:06:55Z",
      "side": 1,
      "message": "It happened when I had a leak in later CL. Under normal situation without bug, it is not expected to happen. But even if event fail to create, we are still able to continue with PipelineBarrier. That is why it returns bool not angle::Result.",
      "parentUuid": "bf89847e_be580410",
      "revId": "0f5740288beaaf8c3d09a269b5a989c257677869",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1b0cc2b3_913cb787",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-05-13T17:18:15Z",
      "side": 1,
      "message": "Ok in that case, my preference is still to cause a GL error (via returning angle::Result::Stop) instead of continuing along. Otherwise the leak you mentioned would have been much harder to find.\n\nThat is until at least there is a legitimate app that actually hits a limitation here somehow.",
      "parentUuid": "f6afce80_856d8a1a",
      "revId": "0f5740288beaaf8c3d09a269b5a989c257677869",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "65f525eb_c2fdb6ba",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2024-05-13T17:28:37Z",
      "side": 1,
      "message": "There are other ways to proactively detect potential leaks (right now I added a WARN()). But an event failed to allocate itself is not a fatal error, and not a GL error since we have ways to continue. How about I add an ASSERT after WARN() so that our bots will fail the test, Would that be okay with you?",
      "parentUuid": "1b0cc2b3_913cb787",
      "revId": "0f5740288beaaf8c3d09a269b5a989c257677869",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ac314c62_6967f4a0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-05-13T17:30:03Z",
      "side": 1,
      "message": "Yes, ASSERT would work!",
      "parentUuid": "65f525eb_c2fdb6ba",
      "revId": "0f5740288beaaf8c3d09a269b5a989c257677869",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}