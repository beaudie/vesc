{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "3b9aa60f_1e608544",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 14,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-09-28T19:02:15Z",
      "side": 1,
      "message": "I think this should be made conditional to the feature you have added in the next CL (preferCPUForBufferDataSubData). Using the CPU to do the copy isn\u0027t necessarily better on every platform.",
      "range": {
        "startLine": 12,
        "startChar": 62,
        "endLine": 14,
        "endChar": 16
      },
      "revId": "41c0ec9d0d1140a66a5cecf081145da71e7ba310",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b2d082e8_9984207c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 14,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2021-09-28T20:40:34Z",
      "side": 1,
      "message": "If the buffer is on VRAM, then yes, the GPU copy maybe preferred. But this is only applying to a host visible memory, which  is system memory, there is no advantage to have GPU to do copy if src and dst are both system memory and host visible (GPU actually will be at disadvantage because it has to do across the PCIE bus and has to compete with other essential bus traffic).\n\nThe other CL has a preference because we have a choice between having GPU do copy versus having CPU to do copy and the advantage is actually very controversial, because if we choose CPU code path, we may use more memory and copy more data. That is why it is protected by preference and only enabled on a given GPU where we think the trade off is worth it. The choice we are making in this CL, the exact amount of data is been copied and uses the same amount of memory, its just use CPU or GPU to do the copy.",
      "parentUuid": "3b9aa60f_1e608544",
      "range": {
        "startLine": 12,
        "startChar": 62,
        "endLine": 14,
        "endChar": 16
      },
      "revId": "41c0ec9d0d1140a66a5cecf081145da71e7ba310",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "61e57f59_22d0a1bb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 14,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-09-29T02:14:56Z",
      "side": 1,
      "message": "Presumably we could introduce some parallelism here by doing a memcpy() with the CPU while the GPU is still rendering the previous frame.   Would a good answer be to favor the CPU only if the GPU is currently working on something already?   Otherwise, if the GPU is idle, kick off the DMA and let the CPU make progress doing something else.\n\nOf course, that assumes we submit the DMA  immediately so the GPU doesn\u0027t get delayed later by spending time copying data before rendering, which isn\u0027t true in this case.",
      "parentUuid": "b2d082e8_9984207c",
      "range": {
        "startLine": 12,
        "startChar": 62,
        "endLine": 14,
        "endChar": 16
      },
      "revId": "41c0ec9d0d1140a66a5cecf081145da71e7ba310",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7a77b41f_25ff2693",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 14,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2021-09-30T17:11:31Z",
      "side": 1,
      "message": "You reach acquireAndUpdate() function because the buffer is currently in use by GPU. So you know for sure GPU is busy ATM. If we do CPU copy it gets done immediately.",
      "parentUuid": "61e57f59_22d0a1bb",
      "range": {
        "startLine": 12,
        "startChar": 62,
        "endLine": 14,
        "endChar": 16
      },
      "revId": "41c0ec9d0d1140a66a5cecf081145da71e7ba310",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f3991dfe_4117b35e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 14,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-10-01T18:23:15Z",
      "side": 1,
      "message": "\u003e You reach acquireAndUpdate() function because the buffer is currently in use by GPU. So you know for sure GPU is busy ATM.\n\nThat\u0027s not necessarily true.   The \"buffer is currently in use by GPU\" flag is set once the buffer is retained, not when the command is submitted and the GPU is actively using the buffer.   So, there is a period of time when a buffer can be used in a command buffer that will eventually be submitted and thus is already \"in use\", but the GPU hasn\u0027t actually started working on it yet.",
      "parentUuid": "7a77b41f_25ff2693",
      "range": {
        "startLine": 12,
        "startChar": 62,
        "endLine": 14,
        "endChar": 16
      },
      "revId": "41c0ec9d0d1140a66a5cecf081145da71e7ba310",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "95cdb253_9dc37941",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-09-28T18:35:56Z",
      "side": 1,
      "message": "Same question if there\u0027s a microbench in BufferSubData.cpp that could demonstrate this perf improvement.",
      "revId": "41c0ec9d0d1140a66a5cecf081145da71e7ba310",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e3822ace_ff393300",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 882,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-09-28T18:35:56Z",
      "side": 1,
      "message": "grammar nit: (articles)\n\nthe buffer, the GPU, the CPU, the copy, the source buffer pointer, we acquire, a new buffer.\n\nLMK if you\u0027d prefer I give grammar nits offline.",
      "range": {
        "startLine": 882,
        "startChar": 14,
        "endLine": 882,
        "endChar": 21
      },
      "revId": "41c0ec9d0d1140a66a5cecf081145da71e7ba310",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "182b2ecd_73dbb002",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 882,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-09-28T19:02:15Z",
      "side": 1,
      "message": "more nits: also \"writing to\"",
      "parentUuid": "e3822ace_ff393300",
      "range": {
        "startLine": 882,
        "startChar": 14,
        "endLine": 882,
        "endChar": 21
      },
      "revId": "41c0ec9d0d1140a66a5cecf081145da71e7ba310",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5f26e207_e165401f",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 882,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2021-09-30T17:11:31Z",
      "side": 1,
      "message": "Thanks. Done.",
      "parentUuid": "182b2ecd_73dbb002",
      "range": {
        "startLine": 882,
        "startChar": 14,
        "endLine": 882,
        "endChar": 21
      },
      "revId": "41c0ec9d0d1140a66a5cecf081145da71e7ba310",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "93ea8fc3_cb0fe847",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 889,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-09-29T02:14:56Z",
      "side": 1,
      "message": "It\u0027s probably worth adding a comment that unmapping the buffer will be handled by directUpdate(), rather than being done in this function.",
      "revId": "41c0ec9d0d1140a66a5cecf081145da71e7ba310",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d11bd923_688c6404",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 889,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2021-09-30T17:11:31Z",
      "side": 1,
      "message": "directUpdate is map/unmap the destination buffer, not the source buffer. The unmap will occur when it gets released. Also see my reply in the other comment in vk_helpers.cpp",
      "parentUuid": "93ea8fc3_cb0fe847",
      "revId": "41c0ec9d0d1140a66a5cecf081145da71e7ba310",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b17bd43f_72cc6ff5",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 904,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-09-29T02:14:56Z",
      "side": 1,
      "message": "Redundant, since the buffer can only be mapped if it\u0027s host visible.",
      "range": {
        "startLine": 904,
        "startChar": 38,
        "endLine": 904,
        "endChar": 62
      },
      "revId": "41c0ec9d0d1140a66a5cecf081145da71e7ba310",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5b7e0686_53bf4a09",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 904,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2021-09-30T17:11:31Z",
      "side": 1,
      "message": "This is the destination buffer. The mapping  at line 889 is for src buffer. Most likely they will be the same host visibility. Maybe I can chnage it to assertion.",
      "parentUuid": "b17bd43f_72cc6ff5",
      "range": {
        "startLine": 904,
        "startChar": 38,
        "endLine": 904,
        "endChar": 62
      },
      "revId": "41c0ec9d0d1140a66a5cecf081145da71e7ba310",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "db7819c4_e06e88c8",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 917,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-09-29T02:14:56Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 917,
        "startChar": 37,
        "endLine": 917,
        "endChar": 61
      },
      "revId": "41c0ec9d0d1140a66a5cecf081145da71e7ba310",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b78667db_36391c30",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 917,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2021-09-30T17:11:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "db7819c4_e06e88c8",
      "range": {
        "startLine": 917,
        "startChar": 37,
        "endLine": 917,
        "endChar": 61
      },
      "revId": "41c0ec9d0d1140a66a5cecf081145da71e7ba310",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}