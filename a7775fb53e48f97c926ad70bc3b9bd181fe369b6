{
  "comments": [
    {
      "key": {
        "uuid": "b692cbfb_ddf9d37e",
        "filename": "src/compiler/translator/ShaderStorageBlockOutputHLSL.cpp",
        "patchSetId": 2
      },
      "lineNbr": 79,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2018-10-12T12:58:45Z",
      "side": 1,
      "message": "Wow this is O(number of elements in the array * members of the struct) when it could be O(members of the struct). When dealing with an array, we should be able to just multiply the size with the total array size and keep the same arrayStride.\n\nSee suggestion at [1]",
      "revId": "a7775fb53e48f97c926ad70bc3b9bd181fe369b6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "384ee364_3ac19ade",
        "filename": "src/compiler/translator/ShaderStorageBlockOutputHLSL.cpp",
        "patchSetId": 2
      },
      "lineNbr": 130,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2018-10-12T12:58:45Z",
      "side": 1,
      "message": "What we should do here is:\n\n - Compute the info for the member of the struct and get the size and arrayStride of the struct at the same time.\n - Update \"encoder\"\u0027s offset with totalArraySize * struct size. You might need to double check this it is valid for both std140 and HLSL but I believe it is.\n\nYou might need to add something to the encoder where you can say \"add n times the struct represented by this other encoder\" or something like that. But it would make the code much much simpler and with better complexity.",
      "revId": "a7775fb53e48f97c926ad70bc3b9bd181fe369b6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aaef6af7_f297463c",
        "filename": "src/tests/gl_tests/ShaderStorageBufferTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 324,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2018-10-12T12:58:45Z",
      "side": 1,
      "message": "It would be good to have at least two members, and at least one which is an array of arrays so that we test all code paths",
      "revId": "a7775fb53e48f97c926ad70bc3b9bd181fe369b6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}