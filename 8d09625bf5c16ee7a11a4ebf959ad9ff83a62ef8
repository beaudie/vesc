{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1e21052f_4d1df9d4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1359667
      },
      "writtenOn": "2021-09-02T17:43:32Z",
      "side": 1,
      "message": "PTAL",
      "revId": "8d09625bf5c16ee7a11a4ebf959ad9ff83a62ef8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "726e7f2e_51da4575",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-09-02T19:57:23Z",
      "side": 1,
      "message": "LGTM",
      "revId": "8d09625bf5c16ee7a11a4ebf959ad9ff83a62ef8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "43a4528f_dcaac3a6",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1778,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-09-02T19:57:23Z",
      "side": 1,
      "message": "Can this be: ASSERT(programExecutable)?   It looks like we were dereferencing it unconditionally before.",
      "revId": "8d09625bf5c16ee7a11a4ebf959ad9ff83a62ef8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0975df54_88899172",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1778,
      "author": {
        "id": 1359667
      },
      "writtenOn": "2021-09-02T21:40:47Z",
      "side": 1,
      "message": "programExecutable can be null in some test cases/traces. We haven\u0027t hit this issue before as the mismatched type code path isn\u0027t tested as extensively",
      "parentUuid": "43a4528f_dcaac3a6",
      "revId": "8d09625bf5c16ee7a11a4ebf959ad9ff83a62ef8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "74db56e5_a2c03a92",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1778,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-09-03T01:10:00Z",
      "side": 1,
      "message": "That seems unexpected considering how necessary a ProgramExecutable is to the rest of this code path.   I\u0027m also only able to find 2 paths to here, both of which require a ProgramExecutable:\n\n  GraphicsPipelineDesc::initializePipeline\n    GraphicsPipelineCache::insertPipeline\n      GraphicsPipelineCache::getPipeline\n        ShaderProgramHelper::getGraphicsPipeline\n          ProgramExecutableVk::getGraphicsPipeline\n          UtilsVk::setupProgram\n\nIt\u0027s possible my IDE is missing something, but can you give an example of the failing tests with this as an ASSERT?",
      "parentUuid": "0975df54_88899172",
      "revId": "8d09625bf5c16ee7a11a4ebf959ad9ff83a62ef8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "af0f3f10_d358db08",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1778,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-09-03T11:23:26Z",
      "side": 1,
      "message": "This function is called from UtilsVk, so the program type information could be incorrect if we pull it from the context state. Sorry I didn\u0027t notice this before.\n\nThis function is meant to be decoupled from context state information that changes between draw calls. So we would like to design this behaviour to only infer decisions from the pipeline cache or from information that is set up at context initialization like certain extensions being enabled.\n\nInstead of checking the size of a particular attribute, please just take the vertex attrib type and convert it to the unsigned version. That will pull from the buffer the same vertex values and will have exactly the same behaviour. You shouldn\u0027t need to look at the number of components in the program attrib type IIUC.",
      "parentUuid": "74db56e5_a2c03a92",
      "revId": "8d09625bf5c16ee7a11a4ebf959ad9ff83a62ef8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1d5df5b2_ed5488b1",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1778,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-09-03T11:24:16Z",
      "side": 1,
      "message": "Sorry, flip the signed-ness - so IVEC2 becomes UIVEC2, UIVEC3 becomes IVEC3, etc.",
      "parentUuid": "af0f3f10_d358db08",
      "revId": "8d09625bf5c16ee7a11a4ebf959ad9ff83a62ef8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "06c30950_1e50b895",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1778,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-09-03T11:24:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "af0f3f10_d358db08",
      "revId": "8d09625bf5c16ee7a11a4ebf959ad9ff83a62ef8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "02189fa9_c53763c0",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1778,
      "author": {
        "id": 1359667
      },
      "writtenOn": "2021-09-03T23:52:19Z",
      "side": 1,
      "message": "Done. Looks like the flipping signed-ness already happens on line `1817`",
      "parentUuid": "1d5df5b2_ed5488b1",
      "revId": "8d09625bf5c16ee7a11a4ebf959ad9ff83a62ef8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "707165fe_b5b6d6d8",
        "filename": "src/tests/gl_tests/VertexAttributeTest.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1925,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-09-02T18:45:11Z",
      "side": 1,
      "message": "nit: don\u0027t forget to clean up before submission.",
      "revId": "8d09625bf5c16ee7a11a4ebf959ad9ff83a62ef8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "81eca9c1_f8e7e83f",
        "filename": "src/tests/gl_tests/VertexAttributeTest.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1925,
      "author": {
        "id": 1359667
      },
      "writtenOn": "2021-09-02T21:40:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "707165fe_b5b6d6d8",
      "revId": "8d09625bf5c16ee7a11a4ebf959ad9ff83a62ef8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}