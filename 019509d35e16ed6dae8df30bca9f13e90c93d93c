{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "7e0eb397_215da488",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1115588
      },
      "writtenOn": "2021-09-22T23:49:30Z",
      "side": 1,
      "message": "I wasn\u0027t sure what to do about `getIndentPrefix`. The simplest but inefficient thing is to return `std::string(indentDepth * 2, \u0027 \u0027)` but that builds a prefix string every time. There\u0027s also the issue that I\u0027m returning TString so there\u0027s a copy on return. Can\u0027t return a reference because they might get moved based on TVector\u003cTString\u003e. Could change it to TVector\u003cTString*\u003e but then I need to manually free them. Or is there a shared_ptr or something to track them? Sorry, have not cross that part of the code yet.\n\nAnyway, happy the change anything. Just put up a CL so there\u0027s someone concrete to make changes to.\n\nBTW: I only tested a few shaders but it seems to work except for switch statements end up\n\n  switch(..) {\n    case ..:\n    code\n    code\n    case ..:\n    code\n    code\n    default:\n    code\n    code\n  }\n  \nI looked into fixing that but switch is not common in shaders and it didn\u0027t seem worth possibly breaking GLSL output or extra effort. Looked how EmitMetal does it but it uses TIntermRebuild not TIntermTraverser so not really applicable.",
      "revId": "019509d35e16ed6dae8df30bca9f13e90c93d93c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6ac2dcd9_7cd810f1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-09-22T23:52:56Z",
      "side": 1,
      "message": "Can you add before/after examples to the commit msg?",
      "revId": "019509d35e16ed6dae8df30bca9f13e90c93d93c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "31df863a_097ae524",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-09-23T15:26:22Z",
      "side": 1,
      "message": "Re: getIndentPrefix\n\nHow about something like this:\n\n    namespace {\n    constexpr char kIndent \u003d \"                    \"; // 10x2 spaces\n    }  // anonymous namespace\n\n    const char *getIndentPrefix(int extraLevel)\n    {\n        int level \u003d std::min(10, getCurrentBlockDepth() + extraLevel);\n        ASSERT(level \u003e\u003d 0);\n        return kIndent + (10 - level) * 2;\n    }\n\nThen you stop indenting after 10 levels, but that should be reasonable. You can always choose a larger max indent than 10.\n\nBenefits are no allocation, no string construction etc. There is a minimal storage of 21 bytes and getting the indent is only a few instructions.",
      "parentUuid": "7e0eb397_215da488",
      "revId": "019509d35e16ed6dae8df30bca9f13e90c93d93c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fe93af9c_9d436d02",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1115588
      },
      "writtenOn": "2021-09-23T18:14:14Z",
      "side": 1,
      "message": "Great! done",
      "parentUuid": "31df863a_097ae524",
      "revId": "019509d35e16ed6dae8df30bca9f13e90c93d93c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7c0dc7b2_5f7ab359",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1115588
      },
      "writtenOn": "2021-09-23T21:37:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fe93af9c_9d436d02",
      "revId": "019509d35e16ed6dae8df30bca9f13e90c93d93c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ee71e134_e0be4af3",
        "filename": "src/compiler/translator/OutputGLSLBase.cpp",
        "patchSetId": 1
      },
      "lineNbr": 382,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-09-22T23:53:29Z",
      "side": 1,
      "message": "nit: suggest you codify this as a constant with indent width",
      "range": {
        "startLine": 382,
        "startChar": 73,
        "endLine": 382,
        "endChar": 74
      },
      "revId": "019509d35e16ed6dae8df30bca9f13e90c93d93c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a204ce7e_e11f9f5f",
        "filename": "src/compiler/translator/OutputGLSLBase.cpp",
        "patchSetId": 1
      },
      "lineNbr": 382,
      "author": {
        "id": 1115588
      },
      "writtenOn": "2021-09-23T18:14:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ee71e134_e0be4af3",
      "range": {
        "startLine": 382,
        "startChar": 73,
        "endLine": 382,
        "endChar": 74
      },
      "revId": "019509d35e16ed6dae8df30bca9f13e90c93d93c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a00b7b70_56bffa9d",
        "filename": "src/compiler/translator/OutputGLSLBase.cpp",
        "patchSetId": 1
      },
      "lineNbr": 842,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-09-23T15:26:22Z",
      "side": 1,
      "message": "Needs getIndentPrefix(-1)",
      "revId": "019509d35e16ed6dae8df30bca9f13e90c93d93c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c435c1c3_463c61c0",
        "filename": "src/compiler/translator/OutputGLSLBase.cpp",
        "patchSetId": 1
      },
      "lineNbr": 842,
      "author": {
        "id": 1115588
      },
      "writtenOn": "2021-09-23T18:14:14Z",
      "side": 1,
      "message": "Is this needed? See example in commit msg.",
      "parentUuid": "a00b7b70_56bffa9d",
      "revId": "019509d35e16ed6dae8df30bca9f13e90c93d93c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ac8d7943_204ee3c4",
        "filename": "src/compiler/translator/OutputGLSLBase.cpp",
        "patchSetId": 1
      },
      "lineNbr": 842,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-09-23T18:23:28Z",
      "side": 1,
      "message": "I guess not. Weird.",
      "parentUuid": "c435c1c3_463c61c0",
      "revId": "019509d35e16ed6dae8df30bca9f13e90c93d93c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b73c3dfc_d09e7b5d",
        "filename": "src/compiler/translator/OutputGLSLBase.cpp",
        "patchSetId": 1
      },
      "lineNbr": 851,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-09-23T15:26:22Z",
      "side": 1,
      "message": "To fix the `case` indentation, you can do:\n\n    out \u003c\u003c getIndentPrefix(curNode-\u003egetAsCaseNode() ? -1 : 0);",
      "revId": "019509d35e16ed6dae8df30bca9f13e90c93d93c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f72ff724_3508d110",
        "filename": "src/compiler/translator/OutputGLSLBase.cpp",
        "patchSetId": 1
      },
      "lineNbr": 851,
      "author": {
        "id": 1115588
      },
      "writtenOn": "2021-09-23T18:14:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b73c3dfc_d09e7b5d",
      "revId": "019509d35e16ed6dae8df30bca9f13e90c93d93c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "36b22bcb_d37cea62",
        "filename": "src/compiler/translator/OutputGLSLBase.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1150,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-09-23T15:26:22Z",
      "side": 1,
      "message": "Needs getIndentPrefix()",
      "revId": "019509d35e16ed6dae8df30bca9f13e90c93d93c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e5be16ae_b7ccc9b6",
        "filename": "src/compiler/translator/OutputGLSLBase.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1150,
      "author": {
        "id": 1115588
      },
      "writtenOn": "2021-09-23T18:14:14Z",
      "side": 1,
      "message": "Is this needed? See example in commit msg.",
      "parentUuid": "36b22bcb_d37cea62",
      "revId": "019509d35e16ed6dae8df30bca9f13e90c93d93c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bac5e21f_b7ec4387",
        "filename": "src/compiler/translator/OutputGLSLBase.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1150,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-09-23T18:23:28Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "e5be16ae_b7ccc9b6",
      "revId": "019509d35e16ed6dae8df30bca9f13e90c93d93c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}