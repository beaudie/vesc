{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "1a9bb387_49e1b392",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2024-02-08T22:28:03Z",
      "side": 1,
      "message": "shabi, need some help here -\n```\n[2177/3783] dEQP-EGL.functional.buffer_age.no_preserve.no_resize.odd_clear_render_even_render_render (CRASH)\n\n[ RUN      ] dEQP-EGL.functional.buffer_age.no_preserve.no_resize.odd_clear_render_even_render_render\nWARN: Surface.cpp:421 (setSwapBehavior): \t! Unimplemented: setSwapBehavior(../../src/libANGLE/Surface.cpp:421)\n../../third_party/libc++/src/include/__string/constexpr_c_functions.h:212:33: runtime error: load of misaligned address 0x52900024e3ac for type \u0027const VkVertexInputBindingDescription2EXT *\u0027, which requires 8 byte alignment\n0x52900024e3ac: note: pointer points here\n  02 00 00 00 01 29 a0 3b  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  10 00 00 00 00 00 00 00\n              ^\n    #0 0x7fb8ba9e1220 in VkVertexInputBindingDescription2EXT* std::__Cr::__constexpr_memmove\u003cVkVertexInputBindingDescription2EXT, VkVertexInputBindingDescription2EXT const, 0\u003e(VkVertexInputBindingDescription2EXT*, VkVertexInputBindingDescription2EXT const*, std::__Cr::__element_count) third_party/libc++/src/include/__string/constexpr_c_functions.h:212:5\n    #1 0x7fb8ba9e0dd3 in __copy_trivial_impl\u003cconst VkVertexInputBindingDescription2EXT, VkVertexInputBindingDescription2EXT\u003e third_party/libc++/src/include/__algorithm/copy_move_common.h:66:3\n    #2 0x7fb8ba9e0dd3 in operator()\u003cconst VkVertexInputBindingDescription2EXT, VkVertexInputBindingDescription2EXT, 0\u003e third_party/libc++/src/include/__algorithm/copy.h:104:12\n    #3 0x7fb8ba9e0dd3 in __unwrap_and_dispatch\u003cstd::__Cr::__overload\u003cstd::__Cr::__copy_loop\u003cstd::__Cr::_ClassicAlgPolicy\u003e, std::__Cr::__copy_trivial\u003e, const VkVertexInputBindingDescription2EXT *, const VkVertexInputBindingDescription2EXT *, VkVertexInputBindingDescription2EXT *, 0\u003e third_party/libc++/src/include/__algorithm/copy_move_common.h:109:19\n    #4 0x7fb8ba9e0dd3 in __dispatch_copy_or_move\u003cstd::__Cr::_ClassicAlgPolicy, std::__Cr::__copy_loop\u003cstd::__Cr::_ClassicAlgPolicy\u003e, std::__Cr::__copy_trivial, const VkVertexInputBindingDescription2EXT *, const VkVertexInputBindingDescription2EXT *, VkVertexInputBindingDescription2EXT *\u003e third_party/libc++/src/include/__algorithm/copy_move_common.h:133:10\n    #5 0x7fb8ba9e0dd3 in __copy\u003cstd::__Cr::_ClassicAlgPolicy, const VkVertexInputBindingDescription2EXT *, const VkVertexInputBindingDescription2EXT *, VkVertexInputBindingDescription2EXT *\u003e third_party/libc++/src/include/__algorithm/copy.h:111:10\n    #6 0x7fb8ba9e0dd3 in copy\u003cconst VkVertexInputBindingDescription2EXT *, VkVertexInputBindingDescription2EXT *\u003e third_party/libc++/src/include/__algorithm/copy.h:118:10\n    #7 0x7fb8ba9e0dd3 in __uninitialized_allocator_copy_impl\u003cstd::__Cr::allocator\u003cVkVertexInputBindingDescription2EXT\u003e, const VkVertexInputBindingDescription2EXT, VkVertexInputBindingDescription2EXT, VkVertexInputBindingDescription2EXT, nullptr\u003e third_party/libc++/src/include/__memory/uninitialized_algorithms.h:584:12\n    #8 0x7fb8ba9e0dd3 in __uninitialized_allocator_copy\u003cstd::__Cr::allocator\u003cVkVertexInputBindingDescription2EXT\u003e, const VkVertexInputBindingDescription2EXT *, const VkVertexInputBindingDescription2EXT *, VkVertexInputBindingDescription2EXT *\u003e third_party/libc++/src/include/__memory/uninitialized_algorithms.h:592:28\n    #9 0x7fb8ba9e0dd3 in void std::__Cr::vector\u003cVkVertexInputBindingDescription2EXT, std::__Cr::allocator\u003cVkVertexInputBindingDescription2EXT\u003e\u003e::__construct_at_end\u003cVkVertexInputBindingDescription2EXT const*, VkVertexInputBindingDescription2EXT const*\u003e(VkVertexInputBindingDescription2EXT const*, VkVertexInputBindingDescription2EXT const*, unsigned long) third_party/libc++/src/include/vector:1082:17\n    #10 0x7fb8ba9d6dfb in vector\u003cconst VkVertexInputBindingDescription2EXT *, 0\u003e third_party/libc++/src/include/vector:1177:3\n    #11 0x7fb8ba9d6dfb in CmdSetVertexInput third_party/SwiftShader/src/Vulkan/VkCommandBuffer.cpp:928:6\n    #12 0x7fb8ba9d6dfb in make_unique\u003c(anonymous namespace)::CmdSetVertexInput, unsigned int \u0026, const VkVertexInputBindingDescription2EXT *\u0026, unsigned int \u0026, const VkVertexInputAttributeDescription2EXT *\u0026\u003e third_party/libc++/src/include/__memory/unique_ptr.h:597:30\n    #13 0x7fb8ba9d6dfb in addCommand\u003c(anonymous namespace)::CmdSetVertexInput, unsigned int \u0026, const VkVertexInputBindingDescription2EXT *\u0026, unsigned int \u0026, const VkVertexInputAttributeDescription2EXT *\u0026\u003e third_party/SwiftShader/src/Vulkan/VkCommandBuffer.cpp:1870:21\n    #14 0x7fb8ba9d6dfb in vk::CommandBuffer::setVertexInput(unsigned int, VkVertexInputBindingDescription2EXT const*, unsigned int, VkVertexInputAttributeDescription2EXT const*) third_party/SwiftShader/src/Vulkan/VkCommandBuffer.cpp:2137:2\n    #15 0x7fb8bd2d01a9 in rx::vk::priv::SecondaryCommandBuffer::executeCommands(rx::vk::priv::CommandBuffer*) src/libANGLE/renderer/vulkan/SecondaryCommandBuffer.cpp:758:21\n    #16 0x7fb8bd503b4c in rx::vk::RenderPassCommandBufferHelper::flushToPrimary(rx::vk::Context*, rx::vk::CommandsState*, rx::vk::RenderPass const*) src/libANGLE/renderer/vulkan/vk_helpers.cpp:2681:34\n    #17 0x7fb8bd0e1574 in rx::vk::CommandQueue::flushRenderPassCommands(rx::vk::Context*, rx::vk::ProtectionType, egl::ContextPriority, rx::vk::RenderPass const\u0026, rx::vk::RenderPassCommandBufferHelper**) src/libANGLE/renderer/vulkan/CommandProcessor.cpp:1352:35\n    #18 0x7fb8bd2a8664 in rx::RendererVk::flushRenderPassCommands(rx::vk::Context*, rx::vk::ProtectionType, egl::ContextPriority, rx::vk::RenderPass const\u0026, rx::vk::RenderPassCommandBufferHelper**) src/libANGLE/renderer/vulkan/RendererVk.cpp:5626:9\n    #19 0x7fb8bd178842 in rx::ContextVk::flushCommandsAndEndRenderPassWithoutSubmit(rx::RenderPassClosureReason) src/libANGLE/renderer/vulkan/ContextVk.cpp:8009:5\n    #20 0x7fb8bd12d78a in rx::ContextVk::flushImpl(rx::vk::Semaphore const*, std::__Cr::shared_ptr\u003crx::vk::ExternalFence\u003e const*, rx::RenderPassClosureReason) src/libANGLE/renderer/vulkan/ContextVk.cpp:7604:9\n    #21 0x7fb8bd31307d in rx::WindowSurfaceVk::prePresentSubmit(rx::ContextVk*, rx::vk::Semaphore const\u0026) src/libANGLE/renderer/vulkan/SurfaceVk.cpp:2192:5\n    #22 0x7fb8bd3146da in rx::WindowSurfaceVk::present(rx::ContextVk*, int const*, int, void const*, bool*) src/libANGLE/renderer/vulkan/SurfaceVk.cpp:2225:5\n    #23 0x7fb8bd31159e in rx::WindowSurfaceVk::swapImpl(gl::Context const*, int const*, int, void const*) src/libANGLE/renderer/vulkan/SurfaceVk.cpp:2483:5\n    #24 0x7fb8bd311cc4 in rx::WindowSurfaceVk::swap(gl::Context const*) src/libANGLE/renderer/vulkan/SurfaceVk.cpp:2067:34\n    #25 0x7fb8bd9b854c in egl::Surface::swap(gl::Context*) src/libANGLE/Surface.cpp:337:5\n    #26 0x7fb8bceef92c in egl::SwapBuffers(egl::Thread*, egl::Display*, egl::SurfaceID) src/libGLESv2/egl_stubs.cpp:741:5\n    #27 0x7fb8bcef9e0e in EGL_SwapBuffers src/libGLESv2/entry_points_egl_autogen.cpp:634:27\n    #28 0x7fb8c4792a60 in deqp::egl::(anonymous namespace)::BufferAgeTest::iterate() third_party/VK-GL-CTS/src/modules/egl/teglBufferAgeTests.cpp:563:4\n    #29 0x7fb8c4ab08a8 in tcu::RandomOrderExecutor::executeInner(tcu::TestCase*, std::__Cr::basic_string\u003cchar, std::__Cr::char_traits\u003cchar\u003e, std::__Cr::allocator\u003cchar\u003e\u003e const\u0026) src/tests/deqp_support/tcuRandomOrderExecutor.cpp:248:45\n    #30 0x7fb8c4ab041f in tcu::RandomOrderExecutor::execute(std::__Cr::basic_string\u003cchar, std::__Cr::char_traits\u003cchar\u003e, std::__Cr::allocator\u003cchar\u003e\u003e const\u0026) src/tests/deqp_support/tcuRandomOrderExecutor.cpp:190:35\n    #31 0x7fb8c4a8c499 in deqp_libtester_run(char const*) src/tests/deqp_support/angle_deqp_libtester_main.cpp:157:57\n    #32 0x55e951935292 in angle::(anonymous namespace)::dEQPTest::TestBody() src/tests/deqp_support/angle_deqp_gtest.cpp:744:29\n    #33 0x55e9519b62b2 in testing::Test::Run() third_party/googletest/src/googletest/src/gtest.cc:2706:5\n    #34 0x55e9519b804f in testing::TestInfo::Run() third_party/googletest/src/googletest/src/gtest.cc:2885:11\n    #35 0x55e9519ba4ca in testing::TestSuite::Run() third_party/googletest/src/googletest/src/gtest.cc:3039:28\n    #36 0x55e9519d9744 in testing::internal::UnitTestImpl::RunAllTests() third_party/googletest/src/googletest/src/gtest.cc:5897:44\n    #37 0x55e9519d87fa in testing::UnitTest::Run() third_party/googletest/src/googletest/src/gtest.cc:5464:10\n    #38 0x55e9519492e3 in RUN_ALL_TESTS third_party/googletest/src/googletest/include/gtest/gtest.h:2492:46\n    #39 0x55e9519492e3 in angle::TestSuite::run() src/tests/test_utils/runner/TestSuite.cpp:1660:22\n    #40 0x55e95192599f in angle::RunGLCTSTests(int*, char**) src/tests/deqp_support/angle_deqp_gtest.cpp:973:22\n    #41 0x55e951923289 in main src/tests/angle_deqp_tests_main.cpp:28:12\n    #42 0x7fb8c3029d8f in __libc_start_call_main csu/../sysdeps/nptl/libc_start_call_main.h:58:16\n\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior ../../third_party/libc++/src/include/__string/constexpr_c_functions.h:212:33\n```",
      "revId": "89907d596eab52c466483d79e095c420f20ecb21",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "27663903_1bb6eca8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-02-12T18:08:35Z",
      "side": 1,
      "message": "Ugh, that ASAN warning has been plaguing us forever. Jamie was looking into it, but we somehow never finished it. It can be easily fixed by aligning all of our commands to 8 bytes, but it would be wasteful in memory and might regress the secondary CB performance.\n\nFirst time it\u0027s showing up on CQ though, that\u0027s surprising.",
      "parentUuid": "1a9bb387_49e1b392",
      "revId": "89907d596eab52c466483d79e095c420f20ecb21",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb129f96_327a30a0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-02-12T18:23:36Z",
      "side": 1,
      "message": "Jamie\u0027s unmerged attempt: https://chromium-review.googlesource.com/c/angle/angle/+/4086281\n\nThe ubsan ignorelist file is the clue as to why this wasn\u0027t happening on the bots before. In this case, there are two arrays being concatenated, and the first one doesn\u0027t have a size that\u0027s aligned to 8, causing havoc. Our `storePointerParameter` should be made aware of alignment to fix that. That said, the command info before `storePointerParameter` are also not aligned to 8, so I don\u0027t recommend hacking that now.\n\nGive me a day, I\u0027ll see if I can fix the alignment thing, then you should be able to rebase over that and get no errors.",
      "parentUuid": "27663903_1bb6eca8",
      "revId": "89907d596eab52c466483d79e095c420f20ecb21",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "08cc2130_2717ab78",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2024-02-12T18:51:10Z",
      "side": 1,
      "message": "perfect, thanks shabi!",
      "parentUuid": "fb129f96_327a30a0",
      "revId": "89907d596eab52c466483d79e095c420f20ecb21",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b40d014e_f6ab58af",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-02-13T14:15:04Z",
      "side": 1,
      "message": "This is passing ASAN now, and I managed to keep the size of most commands unchanged: https://chromium-review.googlesource.com/c/angle/angle/+/5288636",
      "parentUuid": "08cc2130_2717ab78",
      "revId": "89907d596eab52c466483d79e095c420f20ecb21",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "37fd3fb5_807a9024",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2024-02-13T18:56:51Z",
      "side": 1,
      "message": "thanks shabi, once your change merges i will upload a rebased version and give the bots a try",
      "parentUuid": "b40d014e_f6ab58af",
      "revId": "89907d596eab52c466483d79e095c420f20ecb21",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ffc72c38_e9f08252",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-02-13T20:40:22Z",
      "side": 1,
      "message": "It\u0027s done",
      "parentUuid": "37fd3fb5_807a9024",
      "revId": "89907d596eab52c466483d79e095c420f20ecb21",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c5fb1410_e074e2f0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2024-02-13T21:14:15Z",
      "side": 1,
      "message": "thanks shabi, rebased and giving it a try again",
      "parentUuid": "ffc72c38_e9f08252",
      "revId": "89907d596eab52c466483d79e095c420f20ecb21",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cb2dce58_a8f3fe3b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-02-13T21:31:58Z",
      "side": 1,
      "message": "The internal API of SecondaryCommandBuffer has changed, please take a look at what\u0027s changed in my CL to know where to tweak in yours 😊",
      "parentUuid": "c5fb1410_e074e2f0",
      "revId": "89907d596eab52c466483d79e095c420f20ecb21",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}