{
  "comments": [
    {
      "key": {
        "uuid": "574dc58a_0dd03c1f",
        "filename": "doc/CaptureAndReplay.md",
        "patchSetId": 5
      },
      "lineNbr": 45,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2019-10-22T18:03:22Z",
      "side": 1,
      "message": "Tested this locally on Linux, it needs to include end slash:\n\n  samples/capture_replay/",
      "range": {
        "startLine": 45,
        "startChar": 50,
        "endLine": 45,
        "endChar": 72
      },
      "revId": "6b87d184cd1671b29d7ad3b1806e3ea7b013e7e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c7a6247f_59d60674",
        "filename": "doc/CaptureAndReplay.md",
        "patchSetId": 5
      },
      "lineNbr": 47,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2019-10-22T18:03:22Z",
      "side": 1,
      "message": "To complete the example, could add a section below here showing modifications to samples/BUILD.gn.  i.e. enabling this section:\n\ncapture_replay(\"my_sample\") {\n  sources \u003d [\n    \"capture_replay/angle_capture_context1_frame000.cpp\",\n    \"capture_replay/angle_capture_context1_frame001.cpp\",\n    \"capture_replay/angle_capture_context1_frame002.cpp\",\n    \"capture_replay/angle_capture_context1_frame003.cpp\",\n    \"capture_replay/angle_capture_context1_frame004.cpp\",\n  ]\n}\n\nAnd then disabling capture again with \n\n```\n$ gn args out/Debug\nangle_with_capture_by_default \u003d false\n```\n\nFollowed by build and run:\n```\n$ autoninja -C out/Debug\n$ ./out/Debug/my_sample\n```",
      "revId": "6b87d184cd1671b29d7ad3b1806e3ea7b013e7e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9866a6cd_aee40266",
        "filename": "doc/CaptureAndReplay.md",
        "patchSetId": 5
      },
      "lineNbr": 47,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2019-10-23T13:29:46Z",
      "side": 1,
      "message": "Actually, rather than rebuild to run the trace without capture, can use the new env var:\n\n  $ ANGLE_CAPTURE_ENABLED\u003d0 out/Debug/my_sample\n\nAnd the you\u0027ve got a complete recipe for testing out trace/replay.",
      "parentUuid": "c7a6247f_59d60674",
      "revId": "6b87d184cd1671b29d7ad3b1806e3ea7b013e7e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "262349e3_e9120c8c",
        "filename": "doc/CaptureAndReplay.md",
        "patchSetId": 5
      },
      "lineNbr": 47,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2019-10-23T17:23:01Z",
      "side": 1,
      "message": "I like the env var idea",
      "parentUuid": "9866a6cd_aee40266",
      "revId": "6b87d184cd1671b29d7ad3b1806e3ea7b013e7e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "78ed48fd_ab854154",
        "filename": "samples/BUILD.gn",
        "patchSetId": 5
      },
      "lineNbr": 237,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2019-10-22T19:56:37Z",
      "side": 1,
      "message": "if there are 2 contexts contributing to the same frame, how is it handled?",
      "revId": "6b87d184cd1671b29d7ad3b1806e3ea7b013e7e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ac5c1a87_947aa821",
        "filename": "src/libANGLE/FrameCapture.cpp",
        "patchSetId": 5
      },
      "lineNbr": 83,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2019-10-22T19:56:37Z",
      "side": 1,
      "message": "is this thread-safe? or are we limiting first implementation to single threaded usecases?",
      "revId": "6b87d184cd1671b29d7ad3b1806e3ea7b013e7e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e7b2d75b_f5ddce49",
        "filename": "src/libANGLE/FrameCapture.cpp",
        "patchSetId": 5
      },
      "lineNbr": 495,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2019-10-22T19:56:37Z",
      "side": 1,
      "message": "are shaders treated as binary blobs for capture/replay?",
      "revId": "6b87d184cd1671b29d7ad3b1806e3ea7b013e7e3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}