{
  "comments": [
    {
      "key": {
        "uuid": "4e233d8e_6581c68c",
        "filename": "src/compiler/translator/OutputHLSL.cpp",
        "patchSetId": 1
      },
      "lineNbr": 159,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-01-14T19:57:18Z",
      "side": 1,
      "message": "this is unfortunate that we have to reserve a uniform register. do you know off-hand how many this leaves for the application?\n\nthis also reminds me to ask, do you know if we prohibit loading shader binaries from 9_3 in 10_0+ contexts? or vice versa? we could make a test for this.\n\nit seems reasonable that the compiler could know what specific feature level we\u0027re targeting at compile time (even more specific that HLSL9/HLSL11, which are not actual versions of HLSL anyway :). From the version we could determine if we need to reserve a register based off of that, and wouldn\u0027t have to reserve a register in 10_0+ contexts. If we have tons of uniforms, it might not be a big deal, but I\u0027m not sure how many we have on D3D9.",
      "range": {
        "startLine": 159,
        "startChar": 50,
        "endLine": 159,
        "endChar": 51
      },
      "revId": "6a05bd374d9973604af65c839ab75f5ffe30b47a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee3231d2_b31f8a85",
        "filename": "src/libANGLE/renderer/d3d/DynamicHLSL.cpp",
        "patchSetId": 1
      },
      "lineNbr": 842,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-01-14T19:57:18Z",
      "side": 1,
      "message": "nit: our style for this file is to left-align the quotation marks",
      "range": {
        "startLine": 842,
        "startChar": 0,
        "endLine": 842,
        "endChar": 12
      },
      "revId": "6a05bd374d9973604af65c839ab75f5ffe30b47a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e44e539_b4a92672",
        "filename": "src/libANGLE/renderer/d3d/d3d11/RenderStateCache.cpp",
        "patchSetId": 1
      },
      "lineNbr": 424,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-01-14T19:57:18Z",
      "side": 1,
      "message": "nit: brackets",
      "range": {
        "startLine": 424,
        "startChar": 29,
        "endLine": 424,
        "endChar": 82
      },
      "revId": "6a05bd374d9973604af65c839ab75f5ffe30b47a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e44e539_f4b3aed9",
        "filename": "src/libANGLE/renderer/d3d/d3d11/Renderer11.cpp",
        "patchSetId": 1
      },
      "lineNbr": 954,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-01-14T19:57:18Z",
      "side": 1,
      "message": "what do you use usesPointSize for in this method? should it be mode \u003d\u003d GL_POINTS \u0026\u0026 usesPointSize below?",
      "range": {
        "startLine": 954,
        "startChar": 69,
        "endLine": 954,
        "endChar": 82
      },
      "revId": "6a05bd374d9973604af65c839ab75f5ffe30b47a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e233d8e_c5119ac1",
        "filename": "tests/angle_tests/PointSpritesTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 3,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-01-14T19:57:18Z",
      "side": 1,
      "message": "nit: trailing space",
      "range": {
        "startLine": 3,
        "startChar": 75,
        "endLine": 3,
        "endChar": 76
      },
      "revId": "6a05bd374d9973604af65c839ab75f5ffe30b47a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee3231d2_f32902af",
        "filename": "tests/angle_tests/PointSpritesTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 6,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-01-14T19:57:18Z",
      "side": 1,
      "message": "trailing space",
      "range": {
        "startLine": 6,
        "startChar": 69,
        "endLine": 6,
        "endChar": 70
      },
      "revId": "6a05bd374d9973604af65c839ab75f5ffe30b47a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e44e539_948b4a05",
        "filename": "tests/angle_tests/PointSpritesTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-01-14T19:57:18Z",
      "side": 1,
      "message": "nit: unintended comment?",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 13,
        "endChar": 80
      },
      "revId": "6a05bd374d9973604af65c839ab75f5ffe30b47a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e44e539_f48acefd",
        "filename": "tests/angle_tests/PointSpritesTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 191,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-01-14T19:57:18Z",
      "side": 1,
      "message": "nit: don\u0027t need void in the arguments (and below)",
      "range": {
        "startLine": 191,
        "startChar": 18,
        "endLine": 191,
        "endChar": 22
      },
      "revId": "6a05bd374d9973604af65c839ab75f5ffe30b47a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee3231d2_5319ee9b",
        "filename": "tests/angle_tests/PointSpritesTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 191,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-01-14T19:57:18Z",
      "side": 1,
      "message": "nit: trailing space",
      "range": {
        "startLine": 191,
        "startChar": 23,
        "endLine": 191,
        "endChar": 24
      },
      "revId": "6a05bd374d9973604af65c839ab75f5ffe30b47a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}