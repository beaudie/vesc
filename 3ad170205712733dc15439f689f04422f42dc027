{
  "comments": [
    {
      "key": {
        "uuid": "5b2a6595_26fa79d6",
        "filename": "src/compiler/translator/ParseContext.cpp",
        "patchSetId": 11
      },
      "lineNbr": 1180,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2017-06-01T09:51:14Z",
      "side": 1,
      "message": "I don\u0027t think that having these checks here is consistent with how we\u0027ve interpreted the spec with regards to empty declaration validity so far. In general we don\u0027t do checks that depend on the type for empty declarations. We might revisit this in the future if we come up with some reason to interpret the spec more strictly, but for now I would not add these checks here.",
      "revId": "3ad170205712733dc15439f689f04422f42dc027",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c90a236e_f9f4f3e2",
        "filename": "src/compiler/translator/ParseContext.cpp",
        "patchSetId": 11
      },
      "lineNbr": 1180,
      "author": {
        "id": 1109831
      },
      "writtenOn": "2017-06-01T13:16:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5b2a6595_26fa79d6",
      "revId": "3ad170205712733dc15439f689f04422f42dc027",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c8fae643_8ee204be",
        "filename": "src/compiler/translator/ParseContext.cpp",
        "patchSetId": 11
      },
      "lineNbr": 1315,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2017-06-01T09:51:14Z",
      "side": 1,
      "message": "It seems wrong to skip the checks in the else block below for atomic counters. What if there\u0027s an atomic counter declaration that specifies an internal format or a memory qualifier? It would seem most natural to me to have these checks behind an entirely separate if statement. Please add a test to cover this as well.",
      "revId": "3ad170205712733dc15439f689f04422f42dc027",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d559d0c7_ec981a73",
        "filename": "src/compiler/translator/ParseContext.cpp",
        "patchSetId": 11
      },
      "lineNbr": 1315,
      "author": {
        "id": 1109831
      },
      "writtenOn": "2017-06-01T13:16:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c8fae643_8ee204be",
      "revId": "3ad170205712733dc15439f689f04422f42dc027",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85190c16_945ff858",
        "filename": "src/compiler/translator/ParseContext.cpp",
        "patchSetId": 11
      },
      "lineNbr": 1315,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2017-06-01T14:57:24Z",
      "side": 1,
      "message": "Looks good now, thanks for fixing this!",
      "parentUuid": "d559d0c7_ec981a73",
      "revId": "3ad170205712733dc15439f689f04422f42dc027",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04c4425a_a9b023e9",
        "filename": "src/compiler/translator/ParseContext.cpp",
        "patchSetId": 11
      },
      "lineNbr": 1323,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2017-06-01T09:51:14Z",
      "side": 1,
      "message": "We need checks somewhere that offset is not specified for non-atomic counters. Probably this would be the best place to put them.",
      "revId": "3ad170205712733dc15439f689f04422f42dc027",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1b83f989_682e7b3b",
        "filename": "src/compiler/translator/ParseContext.cpp",
        "patchSetId": 11
      },
      "lineNbr": 1323,
      "author": {
        "id": 1109831
      },
      "writtenOn": "2017-06-01T13:16:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "04c4425a_a9b023e9",
      "revId": "3ad170205712733dc15439f689f04422f42dc027",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b53bef1f_cc28bb02",
        "filename": "src/compiler/translator/ParseContext.cpp",
        "patchSetId": 11
      },
      "lineNbr": 2022,
      "author": {
        "id": 1109831
      },
      "writtenOn": "2017-06-01T01:20:04Z",
      "side": 1,
      "message": "Change 2.",
      "range": {
        "startLine": 2020,
        "startChar": 1,
        "endLine": 2022,
        "endChar": 39
      },
      "revId": "3ad170205712733dc15439f689f04422f42dc027",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b8874ea2_e0ce9eab",
        "filename": "src/compiler/translator/ParseContext.cpp",
        "patchSetId": 11
      },
      "lineNbr": 2477,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2017-06-01T09:51:14Z",
      "side": 1,
      "message": "Also need to check that offset is not specified in a global layout qualifier. Need to have a test to cover this too.",
      "revId": "3ad170205712733dc15439f689f04422f42dc027",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "84d12758_f38f330b",
        "filename": "src/compiler/translator/ParseContext.cpp",
        "patchSetId": 11
      },
      "lineNbr": 2477,
      "author": {
        "id": 1109831
      },
      "writtenOn": "2017-06-01T13:16:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b8874ea2_e0ce9eab",
      "revId": "3ad170205712733dc15439f689f04422f42dc027",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "55d56c2e_ec2042cc",
        "filename": "src/compiler/translator/ParseContext.h",
        "patchSetId": 11
      },
      "lineNbr": 375,
      "author": {
        "id": 1109831
      },
      "writtenOn": "2017-06-01T01:20:04Z",
      "side": 1,
      "message": "Change 1.",
      "range": {
        "startLine": 368,
        "startChar": 0,
        "endLine": 375,
        "endChar": 54
      },
      "revId": "3ad170205712733dc15439f689f04422f42dc027",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "54461a68_2164a999",
        "filename": "src/compiler/translator/ShaderVars.cpp",
        "patchSetId": 11
      },
      "lineNbr": 221,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2017-06-01T09:51:14Z",
      "side": 1,
      "message": "Shouldn\u0027t this be simply offset !\u003d other.offset ?",
      "revId": "3ad170205712733dc15439f689f04422f42dc027",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8b515461_89a56ab6",
        "filename": "src/compiler/translator/ShaderVars.cpp",
        "patchSetId": 11
      },
      "lineNbr": 221,
      "author": {
        "id": 1109831
      },
      "writtenOn": "2017-06-01T13:16:42Z",
      "side": 1,
      "message": "You are right. Actually same should be done for \u0027binding\u0027 but not \u0027location\u0027 according to ESSL 3.10 section 9.2.1.",
      "parentUuid": "54461a68_2164a999",
      "revId": "3ad170205712733dc15439f689f04422f42dc027",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "20394cf4_f63d1131",
        "filename": "src/compiler/translator/ShaderVars.cpp",
        "patchSetId": 11
      },
      "lineNbr": 221,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2017-06-01T14:57:24Z",
      "side": 1,
      "message": "You\u0027re right, looks good.",
      "parentUuid": "8b515461_89a56ab6",
      "revId": "3ad170205712733dc15439f689f04422f42dc027",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "29e097bf_592171e7",
        "filename": "src/tests/compiler_tests/AtomicCounter_test.cpp",
        "patchSetId": 11
      },
      "lineNbr": 72,
      "author": {
        "id": 1109831
      },
      "writtenOn": "2017-06-01T01:20:04Z",
      "side": 1,
      "message": "Change 3.",
      "range": {
        "startLine": 52,
        "startChar": 1,
        "endLine": 72,
        "endChar": 37
      },
      "revId": "3ad170205712733dc15439f689f04422f42dc027",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "757a3706_caa51549",
        "filename": "src/tests/compiler_tests/AtomicCounter_test.cpp",
        "patchSetId": 11
      },
      "lineNbr": 120,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2017-06-01T09:51:14Z",
      "side": 1,
      "message": "Would be helpful to have a reference to the spec at least for this test, since the offset rules for arrays are a bit vague.",
      "revId": "3ad170205712733dc15439f689f04422f42dc027",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9a60b6d0_0aed956d",
        "filename": "src/tests/compiler_tests/AtomicCounter_test.cpp",
        "patchSetId": 11
      },
      "lineNbr": 120,
      "author": {
        "id": 1109831
      },
      "writtenOn": "2017-06-01T13:16:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "757a3706_caa51549",
      "revId": "3ad170205712733dc15439f689f04422f42dc027",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}