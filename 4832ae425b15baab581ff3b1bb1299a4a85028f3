{
  "comments": [
    {
      "key": {
        "uuid": "ba4b7745_75896c47",
        "filename": "/COMMIT_MSG",
        "patchSetId": 11
      },
      "lineNbr": 7,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2016-12-19T20:27:08Z",
      "side": 1,
      "message": "nit: \"D3D11: Add support to compile and link compute shaders.\"",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 53
      },
      "revId": "4832ae425b15baab581ff3b1bb1299a4a85028f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba4b7745_f5cc7c25",
        "filename": "src/compiler/translator/OutputHLSL.cpp",
        "patchSetId": 11
      },
      "lineNbr": 145,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2016-12-19T20:27:08Z",
      "side": 1,
      "message": "Please split this block like so:\n\n    if (mShaderType \u003d\u003d GL_COMPUTE_SHADER)\n    {\n        ...\n    }\n    else\n    {\n        if (mOutputType \u003d\u003d SH_HLSL_3_0_OUTPUT)\n        {\n            ...\n        }\n    }\n\nAs is, I feel it is bug prone.",
      "range": {
        "startLine": 141,
        "startChar": 3,
        "endLine": 145,
        "endChar": 5
      },
      "revId": "4832ae425b15baab581ff3b1bb1299a4a85028f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba4b7745_b56e7418",
        "filename": "src/compiler/translator/OutputHLSL.h",
        "patchSetId": 11
      },
      "lineNbr": 59,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2016-12-19T20:27:08Z",
      "side": 1,
      "message": "just pass a const WorkGroupSize\u0026",
      "range": {
        "startLine": 59,
        "startChar": 35,
        "endLine": 59,
        "endChar": 81
      },
      "revId": "4832ae425b15baab581ff3b1bb1299a4a85028f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba4b7745_f59e3cf1",
        "filename": "src/compiler/translator/OutputHLSL.h",
        "patchSetId": 11
      },
      "lineNbr": 247,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2016-12-19T20:27:08Z",
      "side": 1,
      "message": "Already in the sh namespace.",
      "range": {
        "startLine": 247,
        "startChar": 4,
        "endLine": 247,
        "endChar": 8
      },
      "revId": "4832ae425b15baab581ff3b1bb1299a4a85028f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba4b7745_154f40b0",
        "filename": "src/compiler/translator/TranslatorHLSL.cpp",
        "patchSetId": 11
      },
      "lineNbr": 128,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2016-12-19T20:27:08Z",
      "side": 1,
      "message": "I don\u0027t think this needs to be set separately.  Why not just pass the size to the constructor?  If it wasn\u0027t declared then it will just be -1\u0027s.",
      "range": {
        "startLine": 124,
        "startChar": 4,
        "endLine": 128,
        "endChar": 5
      },
      "revId": "4832ae425b15baab581ff3b1bb1299a4a85028f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba4b7745_753decec",
        "filename": "src/libANGLE/renderer/d3d/DynamicHLSL.cpp",
        "patchSetId": 11
      },
      "lineNbr": 787,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2016-12-19T20:27:08Z",
      "side": 1,
      "message": "I think for our vertex and fragment shaders we prefix these with dx_ instead of just _.",
      "range": {
        "startLine": 787,
        "startChar": 36,
        "endLine": 787,
        "endChar": 48
      },
      "revId": "4832ae425b15baab581ff3b1bb1299a4a85028f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba4b7745_15f82008",
        "filename": "src/libANGLE/renderer/d3d/DynamicHLSL.cpp",
        "patchSetId": 11
      },
      "lineNbr": 838,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2016-12-19T20:27:08Z",
      "side": 1,
      "message": "Don\u0027t need these lines.",
      "range": {
        "startLine": 837,
        "startChar": 0,
        "endLine": 838,
        "endChar": 36
      },
      "revId": "4832ae425b15baab581ff3b1bb1299a4a85028f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba4b7745_3528c499",
        "filename": "src/libANGLE/renderer/d3d/ProgramD3D.cpp",
        "patchSetId": 11
      },
      "lineNbr": 1374,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2016-12-19T20:27:08Z",
      "side": 1,
      "message": "nit: gl::NoError()",
      "range": {
        "startLine": 1374,
        "startChar": 15,
        "endLine": 1374,
        "endChar": 37
      },
      "revId": "4832ae425b15baab581ff3b1bb1299a4a85028f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba4b7745_954ed085",
        "filename": "src/libANGLE/renderer/d3d/ProgramD3D.cpp",
        "patchSetId": 11
      },
      "lineNbr": 1380,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2016-12-19T20:27:08Z",
      "side": 1,
      "message": "nit: You can use the ANGLE_TRY macro instead of checking the error manually.",
      "range": {
        "startLine": 1380,
        "startChar": 4,
        "endLine": 1380,
        "endChar": 22
      },
      "revId": "4832ae425b15baab581ff3b1bb1299a4a85028f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba4b7745_f5447c6c",
        "filename": "src/libANGLE/renderer/d3d/ProgramD3D.cpp",
        "patchSetId": 11
      },
      "lineNbr": 1382,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2016-12-19T20:27:08Z",
      "side": 1,
      "message": "Just pass an empty list and false, trasform feedback mode is irrelevant to compute shaders.",
      "range": {
        "startLine": 1381,
        "startChar": 55,
        "endLine": 1382,
        "endChar": 72
      },
      "revId": "4832ae425b15baab581ff3b1bb1299a4a85028f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba4b7745_4773db54",
        "filename": "src/libANGLE/renderer/d3d/ProgramD3D.cpp",
        "patchSetId": 11
      },
      "lineNbr": 1501,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2016-12-19T20:41:46Z",
      "side": 1,
      "message": "nit: the else clause can be removed and everything unindented.",
      "revId": "4832ae425b15baab581ff3b1bb1299a4a85028f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba4b7745_d5bcd810",
        "filename": "src/libANGLE/renderer/d3d/ProgramD3D.cpp",
        "patchSetId": 11
      },
      "lineNbr": 1703,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2016-12-19T20:27:08Z",
      "side": 1,
      "message": "Can you refactor this code? Maybe add a new function:\n\n   initUniformBlockInfo(const gl::Shader *shader)\n\nand call it here depending on which shaders are used.",
      "range": {
        "startLine": 1693,
        "startChar": 7,
        "endLine": 1703,
        "endChar": 9
      },
      "revId": "4832ae425b15baab581ff3b1bb1299a4a85028f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba4b7745_95ec104c",
        "filename": "src/libANGLE/renderer/d3d/ProgramD3D.h",
        "patchSetId": 11
      },
      "lineNbr": 387,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2016-12-19T20:27:08Z",
      "side": 1,
      "message": "Don\u0027t need the \u0027s\u0027.",
      "range": {
        "startLine": 387,
        "startChar": 43,
        "endLine": 387,
        "endChar": 44
      },
      "revId": "4832ae425b15baab581ff3b1bb1299a4a85028f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba4b7745_95e41023",
        "filename": "src/libANGLE/renderer/d3d/d3d11/renderer11_utils.cpp",
        "patchSetId": 11
      },
      "lineNbr": 841,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2016-12-19T20:27:08Z",
      "side": 1,
      "message": "nit:\n\n    return\n    {{\n        D3D11_CS_DISPATCH_MAX_THREAD_GROUPS_PER_DIMENSION,\n        D3D11_CS_DISPATCH_MAX_THREAD_GROUPS_PER_DIMENSION,\n        D3D11_CS_DISPATCH_MAX_THREAD_GROUPS_PER_DIMENSION,\n    }};\n\n(below too)",
      "range": {
        "startLine": 839,
        "startChar": 12,
        "endLine": 841,
        "endChar": 92
      },
      "revId": "4832ae425b15baab581ff3b1bb1299a4a85028f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba4b7745_558c6858",
        "filename": "src/tests/gl_tests/ComputeShaderTest.cpp",
        "patchSetId": 11
      },
      "lineNbr": 248,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2016-12-19T20:27:08Z",
      "side": 1,
      "message": "We have a helper for this.  You can replace this code with:\n\n   ANGLE_GL_COMPUTE_PROGRAM(program, csSource);\n\n(below too)",
      "range": {
        "startLine": 235,
        "startChar": 2,
        "endLine": 248,
        "endChar": 25
      },
      "revId": "4832ae425b15baab581ff3b1bb1299a4a85028f3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}