{
  "comments": [
    {
      "key": {
        "uuid": "8bda8731_02d30ce5",
        "filename": "extensions/ANGLE_robust_resource_initialization.txt",
        "patchSetId": 2
      },
      "lineNbr": 4,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2015-01-21T01:59:12Z",
      "side": 1,
      "message": "Several whitespace issues; please convert tabs to spaces throughout.",
      "range": {
        "startLine": 4,
        "startChar": 0,
        "endLine": 4,
        "endChar": 1
      },
      "revId": "dd5442c33623813f7b9eaf7e6c1c5fbbc47598c5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ee6a5ff_61c9328a",
        "filename": "extensions/ANGLE_robust_resource_initialization.txt",
        "patchSetId": 2
      },
      "lineNbr": 32,
      "author": {
        "id": 1106294
      },
      "writtenOn": "2015-01-08T19:39:10Z",
      "side": 1,
      "message": "Mention the need for EGL_ANGLE_create_context_robust_initialization? Or is there a current use case for a non-EGL windowing system? It seems to me that could be a separate extension if/when we need it. It would making this extension more clear about its interactions.",
      "range": {
        "startLine": 32,
        "startChar": 1,
        "endLine": 32,
        "endChar": 26
      },
      "revId": "dd5442c33623813f7b9eaf7e6c1c5fbbc47598c5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e764114_26475681",
        "filename": "extensions/ANGLE_robust_resource_initialization.txt",
        "patchSetId": 2
      },
      "lineNbr": 32,
      "author": {
        "id": 1105219
      },
      "writtenOn": "2015-01-08T20:00:15Z",
      "side": 1,
      "message": "The EGL_EXT_robust_initialization line was actually meant to mention EGL_ANGLE_create_context_robust_initialization. Victim of reading another extension and typing at the same time + the three times I changed the names of both of these extensions before putting them up.",
      "parentUuid": "0ee6a5ff_61c9328a",
      "range": {
        "startLine": 32,
        "startChar": 1,
        "endLine": 32,
        "endChar": 26
      },
      "revId": "dd5442c33623813f7b9eaf7e6c1c5fbbc47598c5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae7cb9f1_c825af17",
        "filename": "extensions/ANGLE_robust_resource_initialization.txt",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 1105219
      },
      "writtenOn": "2015-01-08T20:00:15Z",
      "side": 1,
      "message": "Should say EGL_ANGLE_create_context_robust_initialization (or whatever that extension is ultimately called).",
      "range": {
        "startLine": 37,
        "startChar": 1,
        "endLine": 37,
        "endChar": 30
      },
      "revId": "dd5442c33623813f7b9eaf7e6c1c5fbbc47598c5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8bda8731_02506c9e",
        "filename": "extensions/ANGLE_robust_resource_initialization.txt",
        "patchSetId": 2
      },
      "lineNbr": 83,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2015-01-21T01:59:12Z",
      "side": 1,
      "message": "I think it\u0027s worth specifying that the implementation-dependent value is zero. It would make this extension\u0027s specification stronger and more testable. Do you agree?\n\nAlso, is it worth eliding this paragraph, and instead modifying the BufferData documentation in section 6.2? Something like:\n\n\"If data is NULL, then if robust resource initialization is enabled, the contents of the buffer object\u0027s data store are set to zero. Otherwise, the contents of the buffer object\u0027s data store are undefined.\"",
      "range": {
        "startLine": 83,
        "startChar": 1,
        "endLine": 83,
        "endChar": 10
      },
      "revId": "dd5442c33623813f7b9eaf7e6c1c5fbbc47598c5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "abd58b01_e6b1da51",
        "filename": "extensions/ANGLE_robust_resource_initialization.txt",
        "patchSetId": 2
      },
      "lineNbr": 90,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2015-01-21T01:59:12Z",
      "side": 1,
      "message": "Should this text move to the last paragraph of section 8.5.3, \"Texture Image Structure\", which defines the behavior when the data argument to TexImage2D or TexImage3D is NULL?",
      "range": {
        "startLine": 90,
        "startChar": 1,
        "endLine": 90,
        "endChar": 6
      },
      "revId": "dd5442c33623813f7b9eaf7e6c1c5fbbc47598c5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6bdf1324_245c96c9",
        "filename": "extensions/ANGLE_robust_resource_initialization.txt",
        "patchSetId": 2
      },
      "lineNbr": 108,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2015-01-21T01:59:12Z",
      "side": 1,
      "message": "Great. This is not well explained in the current spec.",
      "range": {
        "startLine": 108,
        "startChar": 5,
        "endLine": 108,
        "endChar": 13
      },
      "revId": "dd5442c33623813f7b9eaf7e6c1c5fbbc47598c5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8bda8731_e2d8e8a9",
        "filename": "extensions/ANGLE_robust_resource_initialization.txt",
        "patchSetId": 2
      },
      "lineNbr": 109,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2015-01-21T01:59:12Z",
      "side": 1,
      "message": "Need to define the interactions with RenderbufferStorageMultisample (section 9.2.4).",
      "range": {
        "startLine": 109,
        "startChar": 0,
        "endLine": 109,
        "endChar": 1
      },
      "revId": "dd5442c33623813f7b9eaf7e6c1c5fbbc47598c5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ee6a5ff_e189c287",
        "filename": "extensions/ANGLE_robust_resource_initialization.txt",
        "patchSetId": 2
      },
      "lineNbr": 112,
      "author": {
        "id": 1106294
      },
      "writtenOn": "2015-01-08T19:39:10Z",
      "side": 1,
      "message": "Same  here, just say this is the way it needs to be done?",
      "range": {
        "startLine": 110,
        "startChar": 0,
        "endLine": 112,
        "endChar": 45
      },
      "revId": "dd5442c33623813f7b9eaf7e6c1c5fbbc47598c5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e764114_a67d06a0",
        "filename": "extensions/ANGLE_robust_resource_initialization.txt",
        "patchSetId": 2
      },
      "lineNbr": 112,
      "author": {
        "id": 1105219
      },
      "writtenOn": "2015-01-08T20:00:15Z",
      "side": 1,
      "message": "I suspect these extensions have some chance of uptake by desktop GL \u0026 its window system binding APIs-- I think it would be advantageous for WebGL to be able to rely on native GL implementations for initialization behavior, like they were able to get put in place for robust buffer access.",
      "parentUuid": "0ee6a5ff_e189c287",
      "range": {
        "startLine": 110,
        "startChar": 0,
        "endLine": 112,
        "endChar": 45
      },
      "revId": "dd5442c33623813f7b9eaf7e6c1c5fbbc47598c5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ee6a5ff_e164623c",
        "filename": "extensions/EGL_ANGLE_robust_resource_initialization.txt",
        "patchSetId": 2
      },
      "lineNbr": 36,
      "author": {
        "id": 1106294
      },
      "writtenOn": "2015-01-08T19:39:10Z",
      "side": 1,
      "message": "Same here, this seems vague and any equivalent functionality most likely needs an extension of its own.",
      "range": {
        "startLine": 36,
        "startChar": 1,
        "endLine": 36,
        "endChar": 69
      },
      "revId": "dd5442c33623813f7b9eaf7e6c1c5fbbc47598c5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae7cb9f1_e8d43375",
        "filename": "extensions/EGL_ANGLE_robust_resource_initialization.txt",
        "patchSetId": 2
      },
      "lineNbr": 36,
      "author": {
        "id": 1105219
      },
      "writtenOn": "2015-01-08T20:00:15Z",
      "side": 1,
      "message": "Picked up this wording from the other robustness extensions. It\u0027s basically a hedge against such functionality just being put into core implementations, and allowing this extension to be used to bootstrap the same behavior implemented in other extensions.",
      "parentUuid": "0ee6a5ff_e164623c",
      "range": {
        "startLine": 36,
        "startChar": 1,
        "endLine": 36,
        "endChar": 69
      },
      "revId": "dd5442c33623813f7b9eaf7e6c1c5fbbc47598c5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e81b519_473c4ee5",
        "filename": "extensions/EGL_ANGLE_robust_resource_initialization.txt",
        "patchSetId": 2
      },
      "lineNbr": 67,
      "author": {
        "id": 1106294
      },
      "writtenOn": "2015-01-08T19:39:10Z",
      "side": 1,
      "message": "same",
      "range": {
        "startLine": 66,
        "startChar": 53,
        "endLine": 67,
        "endChar": 20
      },
      "revId": "dd5442c33623813f7b9eaf7e6c1c5fbbc47598c5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce872d28_6cc85336",
        "filename": "extensions/EGL_ANGLE_robust_resource_initialization.txt",
        "patchSetId": 2
      },
      "lineNbr": 67,
      "author": {
        "id": 1105219
      },
      "writtenOn": "2015-01-08T20:00:15Z",
      "side": 1,
      "message": "ditto above",
      "parentUuid": "8e81b519_473c4ee5",
      "range": {
        "startLine": 66,
        "startChar": 53,
        "endLine": 67,
        "endChar": 20
      },
      "revId": "dd5442c33623813f7b9eaf7e6c1c5fbbc47598c5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}