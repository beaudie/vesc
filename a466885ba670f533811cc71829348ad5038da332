{
  "comments": [
    {
      "key": {
        "uuid": "26154699_547e27c5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 18,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-06-27T15:28:15Z",
      "side": 1,
      "message": "The translation code would be simpler if you did this instead:\n\n    vec3 s413 \u003d dFdy(_uv_coord);\n    (s413.y \u003d ANGLEUniforms.viewportYScale);\n    vec3 _ures \u003d ((s413 * _uu_scale) + _uu_bias);",
      "revId": "a466885ba670f533811cc71829348ad5038da332",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "52ed860a_f048adf2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 18,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2019-07-01T21:46:07Z",
      "side": 1,
      "message": "New shader output:\n\nvec2 s413 \u003d dFdy(_uv_coord);\n(s413.y *\u003d ANGLEUniforms.viewportYScale);\nvec2 _ures \u003d ((s413 * _uu_scale) + _uu_bias);\n\nThat is cleaner.",
      "parentUuid": "26154699_547e27c5",
      "revId": "a466885ba670f533811cc71829348ad5038da332",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fda26e7e_90b09ffa",
        "filename": "src/compiler/translator/tree_ops/RewriteDfdy.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-06-27T17:15:10Z",
      "side": 1,
      "message": "same nit",
      "range": {
        "startLine": 2,
        "startChar": 13,
        "endLine": 2,
        "endChar": 22
      },
      "revId": "a466885ba670f533811cc71829348ad5038da332",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d96f07c2_2526cc5c",
        "filename": "src/compiler/translator/tree_ops/RewriteDfdy.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2019-07-01T21:46:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fda26e7e_90b09ffa",
      "range": {
        "startLine": 2,
        "startChar": 13,
        "endLine": 2,
        "endChar": 22
      },
      "revId": "a466885ba670f533811cc71829348ad5038da332",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ded70d1c_dd190687",
        "filename": "src/compiler/translator/tree_ops/RewriteDfdy.cpp",
        "patchSetId": 2
      },
      "lineNbr": 61,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-06-27T15:28:15Z",
      "side": 1,
      "message": "Remove!",
      "range": {
        "startLine": 61,
        "startChar": 4,
        "endLine": 61,
        "endChar": 18
      },
      "revId": "a466885ba670f533811cc71829348ad5038da332",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "58d13159_05457d7d",
        "filename": "src/compiler/translator/tree_ops/RewriteDfdy.cpp",
        "patchSetId": 2
      },
      "lineNbr": 61,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2019-07-01T21:46:07Z",
      "side": 1,
      "message": "Good catch on the unlabeled debug code.",
      "parentUuid": "ded70d1c_dd190687",
      "range": {
        "startLine": 61,
        "startChar": 4,
        "endLine": 61,
        "endChar": 18
      },
      "revId": "a466885ba670f533811cc71829348ad5038da332",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "46a6f28d_4e1de47d",
        "filename": "src/compiler/translator/tree_ops/RewriteDfdy.cpp",
        "patchSetId": 2
      },
      "lineNbr": 94,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-06-27T17:15:10Z",
      "side": 1,
      "message": "could you clarify the naming of your variables? you\u0027re using scaleDfdy as the replacement node. and replacement as your temporary variable node inserted in the block.",
      "range": {
        "startLine": 94,
        "startChar": 35,
        "endLine": 94,
        "endChar": 46
      },
      "revId": "a466885ba670f533811cc71829348ad5038da332",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4592c545_990c70bb",
        "filename": "src/compiler/translator/tree_ops/RewriteDfdy.cpp",
        "patchSetId": 2
      },
      "lineNbr": 94,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2019-07-01T21:46:07Z",
      "side": 1,
      "message": "I think it\u0027s a bit clearer now with the renaming, simpler code, and added comments.   Let me know if you think there\u0027s some more that needs clarifying.",
      "parentUuid": "46a6f28d_4e1de47d",
      "range": {
        "startLine": 94,
        "startChar": 35,
        "endLine": 94,
        "endChar": 46
      },
      "revId": "a466885ba670f533811cc71829348ad5038da332",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1e2b0160_7ec8e8f9",
        "filename": "src/compiler/translator/tree_ops/RewriteDfdy.h",
        "patchSetId": 2
      },
      "lineNbr": 2,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-06-27T17:15:10Z",
      "side": 1,
      "message": "nit: just 2019 for new files and no (c)",
      "range": {
        "startLine": 2,
        "startChar": 13,
        "endLine": 2,
        "endChar": 22
      },
      "revId": "a466885ba670f533811cc71829348ad5038da332",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3218dc8c_5313fb53",
        "filename": "src/compiler/translator/tree_ops/RewriteDfdy.h",
        "patchSetId": 2
      },
      "lineNbr": 2,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2019-07-01T21:46:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1e2b0160_7ec8e8f9",
      "range": {
        "startLine": 2,
        "startChar": 13,
        "endLine": 2,
        "endChar": 22
      },
      "revId": "a466885ba670f533811cc71829348ad5038da332",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "06db2618_dc0a5f50",
        "filename": "src/compiler/translator/tree_ops/RewriteDfdy.h",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-06-27T17:15:10Z",
      "side": 1,
      "message": "probably needs an update?",
      "range": {
        "startLine": 11,
        "startChar": 3,
        "endLine": 11,
        "endChar": 31
      },
      "revId": "a466885ba670f533811cc71829348ad5038da332",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d2b4f27d_33af17a7",
        "filename": "src/compiler/translator/tree_ops/RewriteDfdy.h",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2019-07-01T21:46:07Z",
      "side": 1,
      "message": "Oops, yeah, missed in the copypasta.",
      "parentUuid": "06db2618_dc0a5f50",
      "range": {
        "startLine": 11,
        "startChar": 3,
        "endLine": 11,
        "endChar": 31
      },
      "revId": "a466885ba670f533811cc71829348ad5038da332",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a6932a10_23e4a473",
        "filename": "src/tests/deqp_support/deqp_gles3_test_expectations.txt",
        "patchSetId": 2
      },
      "lineNbr": 739,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-06-27T15:28:15Z",
      "side": 1,
      "message": "Rejoice as I recently committed a change where you can specify all these as:\n\n3487 VULKAN : dEQP-GLES3.functional.shaders.derivate.dfdy.*highp \u003d FAIL\n3487 VULKAN : dEQP-GLES3.functional.shaders.derivate.dfdy.*mediump \u003d FAIL\n\n---\n\nAlso, do you happen to know if the framebuffer height in these tests is odd or even? If it\u0027s odd, I know why they could fail.",
      "revId": "a466885ba670f533811cc71829348ad5038da332",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a7d0a5f5_056746eb",
        "filename": "src/tests/deqp_support/deqp_gles3_test_expectations.txt",
        "patchSetId": 2
      },
      "lineNbr": 739,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-06-27T17:15:10Z",
      "side": 1,
      "message": "Tim can you try to root cause this error? It makes me think we\u0027re doing something potentially wrong. Like we\u0027re off by some small error margin like one pixel. Especially if the test failures are cross platform. RenderDoc on Windows would probably be a good way to diagnose the bug. And potentially making a super simple reproduction as a GLSLTest in angle_end2end_tests.",
      "parentUuid": "a6932a10_23e4a473",
      "revId": "a466885ba670f533811cc71829348ad5038da332",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ead54821_2bd3cb15",
        "filename": "src/tests/deqp_support/deqp_gles3_test_expectations.txt",
        "patchSetId": 2
      },
      "lineNbr": 739,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-06-27T17:25:21Z",
      "side": 1,
      "message": "FYI, if the window size is odd, then dFdy would be calculated between different pixels when inverted. If that\u0027s the case, I don\u0027t know if there\u0027s much we could do about it short of not flipping the framebuffer and flip everything else.\n\nUsing dFdyFine *might* help at some performance cost.",
      "parentUuid": "a7d0a5f5_056746eb",
      "revId": "a466885ba670f533811cc71829348ad5038da332",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "170a4a2d_febcabdf",
        "filename": "src/tests/deqp_support/deqp_gles3_test_expectations.txt",
        "patchSetId": 2
      },
      "lineNbr": 739,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2019-07-01T21:46:07Z",
      "side": 1,
      "message": "I don\u0027t want to remove all highp/mediump tests, since there are a lot of them that pass.   It\u0027s just this batch of them that fail.\n\nThe window size is an odd value (167x103), but modifying it to be even (166x102) doesn\u0027t seem to help.   We always get a 0 or -0 from dFdy() for the tests that fail:\n\nVerifying result image.\n\tValid derivative is (0, -0.343137, 0.0686275) with threshold (0.25, 0.25, 0.03125)\nInitial verification failed, verifying image by calculating accurate error bounds for each result pixel.\n\tVerifying each result derivative is within its range of legal result values.\nError in pixel at 0, 0 with component 2 (channel b)\n\tGot pixel value (0, 127, 0, 255)\n\t\tdFdy ~\u003d 0         \u003c\u003c---- This is always \u00270\u0027 or \u0027-0\u0027 for each failing test\n\t\tdifference to a valid range: -0.0550369\n\tDerivative value range:\n\t\tMin: 0.0550369\n\t\tMax: 0.0830856\n\nI can\u0027t get a capture on linux with GAPID or RenderDoc.   GAPID segfaults and RenderDoc just doesn\u0027t grab anything.\n\nI\u0027ll keep poking around and see if there\u0027s a good way to recreate this with something that can be captured.",
      "parentUuid": "ead54821_2bd3cb15",
      "revId": "a466885ba670f533811cc71829348ad5038da332",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "de023891_8001d96a",
        "filename": "src/tests/deqp_support/deqp_gles3_test_expectations.txt",
        "patchSetId": 2
      },
      "lineNbr": 739,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-07-02T13:31:18Z",
      "side": 1,
      "message": "We should be able to get you a trace with RD on Linux or Windows. Were you trying to trace on desktop with GAPID? I think it can only capture on Android. If Android is segfaulting let\u0027s take it up in the GAPID chat.\n\nAlso I can try doing a capture with my WIP ANGLE capture patch. Moving it out of dEQP would probably make it easier to capture.",
      "parentUuid": "170a4a2d_febcabdf",
      "revId": "a466885ba670f533811cc71829348ad5038da332",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b50efd43_49974c8f",
        "filename": "src/tests/deqp_support/deqp_gles3_test_expectations.txt",
        "patchSetId": 2
      },
      "lineNbr": 739,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2019-07-02T23:45:07Z",
      "side": 1,
      "message": "Thanks to getting some help from Cody, I\u0027m able to capture the Vulkan trace with RenderDoc on Linux and Windows now.   The trick was to click \"Queue Capture\" so it actually captures a frame. \n  With that, we did some poking around by playing with the fragment shader to see what values were actually being seen.\n\nIt turns out that we also need to correct the Z value, if one is present.\n\nI don\u0027t know why that\u0027s necessary yet, but here is a quick patch to enable that.   The generated shader code looks like:\n\nvec3 s413 \u003d dFdy((-_uv_coord));\n(s413.y *\u003d ANGLEUniforms.viewportYScale);\n(s413.z *\u003d ANGLEUniforms.viewportYScale);\n(_ures \u003d ((s413 * _uu_scale) + _uu_bias));\n\nThis could be probably cleaned up to create a vec2 to correct both .yz at the same time.   I wanted some opinions on why the Z value correction appears to be necessary before I optimized it though.",
      "parentUuid": "de023891_8001d96a",
      "revId": "a466885ba670f533811cc71829348ad5038da332",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "484da68a_0ac3aad5",
        "filename": "src/tests/deqp_support/deqp_gles3_test_expectations.txt",
        "patchSetId": 2
      },
      "lineNbr": 739,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-07-03T01:29:02Z",
      "side": 1,
      "message": "Good find! In fact, I think you need to flip x too! The reason is this:\n\nSay pixel (0, 0) has value V0 and pixel (0, 1) has value V1. If not flipped, dFdy would give you V1-V0. If flipped, you still want to get V1-V0, but you end up with V0-V1. So you need to negate all channels to get back to the desired value.\n\nMaybe the tests generate their variants in such a way that dFdy(?).x is 0, which would hide this error.",
      "parentUuid": "b50efd43_49974c8f",
      "revId": "a466885ba670f533811cc71829348ad5038da332",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ccf5ee67_8967513c",
        "filename": "src/tests/deqp_support/deqp_gles3_test_expectations.txt",
        "patchSetId": 2
      },
      "lineNbr": 739,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-07-03T14:48:29Z",
      "side": 1,
      "message": "Good job all round. If there\u0027s missing test coverage for the x coordinate we could add an ANGLE test and loop Chris Forbes in with a dEQP bug.",
      "parentUuid": "484da68a_0ac3aad5",
      "revId": "a466885ba670f533811cc71829348ad5038da332",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}