{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c88b1b5d_ea68bcef",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1306173
      },
      "writtenOn": "2023-04-10T19:31:58Z",
      "side": 1,
      "message": "not sure why winuwp-compile is failing.\nLooks like most tryjobs are broken\nhttps://ci.chromium.org/p/angle/builders/try/winuwp-compile",
      "revId": "4254dd0d4fa720641d454820be94d4d668015c0e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a4780a64_efa27164",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2023-04-10T19:37:49Z",
      "side": 1,
      "message": "Slightly concerned that this change will sweep issues under the rug. These GL calls should only return nullptr if there\u0027s no valid context current. Should this not be happening?",
      "revId": "4254dd0d4fa720641d454820be94d4d668015c0e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f2c483ed_20783a66",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1306173
      },
      "writtenOn": "2023-04-10T19:46:30Z",
      "side": 1,
      "message": "hm - is there a place before eglInitialize where the absence of a context should be checked instead? \n\nwe\u0027re already checking eglGetDisplay / eglGetCurrentDisplay for EGL_NO_DISPLAY",
      "parentUuid": "a4780a64_efa27164",
      "revId": "4254dd0d4fa720641d454820be94d4d668015c0e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0002a52c_b9cbb3d2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2023-04-10T19:53:06Z",
      "side": 1,
      "message": "I\u0027m not sure off the top of my head. You\u0027ve found that the initialization of ANGLE\u0027s internal GL/GLES context is definitely succeeding? I haven\u0027t grepped through the sources recently but note that DisplayGL::initialize is a no-op which always returns true - seems problematic.",
      "parentUuid": "f2c483ed_20783a66",
      "revId": "4254dd0d4fa720641d454820be94d4d668015c0e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "638d8194_4a63b920",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-04-12T14:35:34Z",
      "side": 1,
      "message": "Driving by!",
      "revId": "4254dd0d4fa720641d454820be94d4d668015c0e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "189d3bb5_f368726a",
        "filename": "src/libANGLE/renderer/gl/renderergl_utils.cpp",
        "patchSetId": 3
      },
      "lineNbr": 44,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-04-12T14:35:34Z",
      "side": 1,
      "message": "nit: why turn to std::string when a lot of users below operate on `const char *` only?",
      "revId": "4254dd0d4fa720641d454820be94d4d668015c0e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}