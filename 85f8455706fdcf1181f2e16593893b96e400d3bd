{
  "comments": [
    {
      "key": {
        "uuid": "0455acf0_3387087a",
        "filename": "src/common/PoolAlloc.cpp",
        "patchSetId": 32
      },
      "lineNbr": 48,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-03-19T21:18:03Z",
      "side": 1,
      "message": "we have a method ceilPow2 you can use here.",
      "revId": "85f8455706fdcf1181f2e16593893b96e400d3bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0ec7f96b_ce9a7fc8",
        "filename": "src/common/PoolAlloc.cpp",
        "patchSetId": 32
      },
      "lineNbr": 48,
      "author": {
        "id": 1256245
      },
      "writtenOn": "2019-03-20T15:32:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0455acf0_3387087a",
      "revId": "85f8455706fdcf1181f2e16593893b96e400d3bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "41784c94_d238a726",
        "filename": "src/common/PoolAlloc.cpp",
        "patchSetId": 32
      },
      "lineNbr": 68,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-03-19T21:18:03Z",
      "side": 1,
      "message": "there\u0027s also a helper for this in mathutil.",
      "range": {
        "startLine": 68,
        "startChar": 12,
        "endLine": 68,
        "endChar": 78
      },
      "revId": "85f8455706fdcf1181f2e16593893b96e400d3bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "46556a80_c73053ba",
        "filename": "src/common/PoolAlloc.cpp",
        "patchSetId": 32
      },
      "lineNbr": 68,
      "author": {
        "id": 1256245
      },
      "writtenOn": "2019-03-20T15:32:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "41784c94_d238a726",
      "range": {
        "startLine": 68,
        "startChar": 12,
        "endLine": 68,
        "endChar": 78
      },
      "revId": "85f8455706fdcf1181f2e16593893b96e400d3bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "00975a21_5c435f30",
        "filename": "src/common/PoolAlloc.cpp",
        "patchSetId": 32
      },
      "lineNbr": 281,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-03-19T21:18:03Z",
      "side": 1,
      "message": "this too I believe.",
      "range": {
        "startLine": 281,
        "startChar": 24,
        "endLine": 281,
        "endChar": 69
      },
      "revId": "85f8455706fdcf1181f2e16593893b96e400d3bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0573d74b_4bc1ce57",
        "filename": "src/common/PoolAlloc.cpp",
        "patchSetId": 32
      },
      "lineNbr": 281,
      "author": {
        "id": 1256245
      },
      "writtenOn": "2019-03-20T15:32:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "00975a21_5c435f30",
      "range": {
        "startLine": 281,
        "startChar": 24,
        "endLine": 281,
        "endChar": 69
      },
      "revId": "85f8455706fdcf1181f2e16593893b96e400d3bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bc25a38e_007e940c",
        "filename": "src/libANGLE/renderer/vulkan/SecondaryCommandBuffer.h",
        "patchSetId": 32
      },
      "lineNbr": 354,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-03-19T21:18:03Z",
      "side": 1,
      "message": "minor request but could you define these out-of-class? makes the class definition a bit more easy to read",
      "range": {
        "startLine": 331,
        "startChar": 0,
        "endLine": 354,
        "endChar": 0
      },
      "revId": "85f8455706fdcf1181f2e16593893b96e400d3bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f24e2675_3ae06587",
        "filename": "src/libANGLE/renderer/vulkan/SecondaryCommandBuffer.h",
        "patchSetId": 32
      },
      "lineNbr": 354,
      "author": {
        "id": 1256245
      },
      "writtenOn": "2019-03-20T15:32:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bc25a38e_007e940c",
      "range": {
        "startLine": 331,
        "startChar": 0,
        "endLine": 354,
        "endChar": 0
      },
      "revId": "85f8455706fdcf1181f2e16593893b96e400d3bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "23e03d0e_f3aa71d7",
        "filename": "src/libANGLE/renderer/vulkan/SecondaryCommandBuffer.h",
        "patchSetId": 32
      },
      "lineNbr": 537,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-03-19T20:04:03Z",
      "side": 1,
      "message": "Aha! I knew using an alignment of 1 in the pool is going to be trouble. I\u0027m convinced that this works right now because `sizeof(*Params) % 4 \u003d\u003d 0` for all the params structs above. If you feel up to it, you can add such `static_assert`s for every param too.\n\nNow that I look closer, some of the params structs could be rearranged to avoid padding.\n\nJust to be clear, I\u0027m not blocking submission on this, just something for the future.",
      "revId": "85f8455706fdcf1181f2e16593893b96e400d3bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}