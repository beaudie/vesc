{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "62d1ae7e_6d5ca00b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2024-07-08T21:23:16Z",
      "side": 1,
      "message": "How is this tested on bots right now?",
      "revId": "ee195b953fed13e4e7823de6d5eadae5423bdbb5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "df1806bd_49814730",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-07-08T22:48:53Z",
      "side": 1,
      "message": "SwiftShader, I implemented that a few weeks ago for this purpose.",
      "parentUuid": "62d1ae7e_6d5ca00b",
      "revId": "ee195b953fed13e4e7823de6d5eadae5423bdbb5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "88fe4c1e_732014db",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2024-07-08T23:10:17Z",
      "side": 1,
      "message": "The change is big, I may not have catched everything, but the change looks reasonable to me overall.",
      "revId": "ee195b953fed13e4e7823de6d5eadae5423bdbb5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6c7bd460_d876b19e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-07-09T00:28:29Z",
      "side": 1,
      "message": "Thanks, and sorry about that. I couldn\u0027t really see a way to split this any further in any meaningful way.",
      "parentUuid": "88fe4c1e_732014db",
      "revId": "ee195b953fed13e4e7823de6d5eadae5423bdbb5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "67ab284e_344c0a15",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 14
      },
      "lineNbr": 3050,
      "author": {
        "id": 1525982
      },
      "writtenOn": "2024-07-08T18:54:59Z",
      "side": 1,
      "message": "Is `renderPass` null only for dynamic rendering? If so, should an assert be added?",
      "range": {
        "startLine": 3050,
        "startChar": 8,
        "endLine": 3050,
        "endChar": 29
      },
      "revId": "ee195b953fed13e4e7823de6d5eadae5423bdbb5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "26882329_805dea97",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 14
      },
      "lineNbr": 3050,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-07-08T19:02:16Z",
      "side": 1,
      "message": "Yes that is true. There is already an ASSERT in `DeriveRenderingInfo` called from `beginRendering`.",
      "parentUuid": "67ab284e_344c0a15",
      "range": {
        "startLine": 3050,
        "startChar": 8,
        "endLine": 3050,
        "endChar": 29
      },
      "revId": "ee195b953fed13e4e7823de6d5eadae5423bdbb5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}