{
  "comments": [
    {
      "key": {
        "uuid": "3e29ff9b_d2d75d28",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 281,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2017-11-30T17:39:40Z",
      "side": 1,
      "message": "Would it make sense to split this into the compatible and incompatible parts of the render pass desc? Right now we\u0027re hashing something bigger than we need to.",
      "revId": "ed9d1a02116391087f795e9a8f2c1e7c965059c2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd12ec47_1ccca830",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 281,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-11-30T18:01:15Z",
      "side": 1,
      "message": "Possibly. We will need correct load/store ops eventually, so we will need to care about them later. It might be better to make two structures, and use a two-stage lookup, as you suggest, but it\u0027s convenient to use VkAttachment structures directly. This makes me able to use the desc almost verbatim in the Vk calls, without a need for a custom type and remapping step.\n\nAnd there\u0027s the chance that even if we were to split them now, there\u0027d still be a refactor needed later.. so I\u0027d prefer to do it then.\n\nMaybe making the separate compatible/matching query functions was unnecessary at this point and just causes confusion.",
      "parentUuid": "3e29ff9b_d2d75d28",
      "revId": "ed9d1a02116391087f795e9a8f2c1e7c965059c2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d76d7852_4da4c7dd",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 372,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2017-11-30T17:39:40Z",
      "side": 1,
      "message": "Since we aren\u0027t doing Vulkan calls here, there\u0027s no reason this function should return an error.",
      "revId": "ed9d1a02116391087f795e9a8f2c1e7c965059c2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f061673_f5432ce4",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 372,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-11-30T18:01:15Z",
      "side": 1,
      "message": "The getRenderTarget calls can return an error if there was a situation where lazy initialization would trigger a resource to be initialized. But, we don\u0027t support this right now, so I replaced them with ANGLE_SWALLOW_ERR.",
      "parentUuid": "d76d7852_4da4c7dd",
      "revId": "ed9d1a02116391087f795e9a8f2c1e7c965059c2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c0ae0318_b1b8af43",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 390,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-11-30T18:01:15Z",
      "side": 1,
      "message": "ref",
      "range": {
        "startLine": 390,
        "startChar": 12,
        "endLine": 390,
        "endChar": 79
      },
      "revId": "ed9d1a02116391087f795e9a8f2c1e7c965059c2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "79466cb3_9459dc81",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.h",
        "patchSetId": 5
      },
      "lineNbr": 55,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2017-11-30T17:39:40Z",
      "side": 1,
      "message": "nit: this name feels weird to me. mStorage or mCache?",
      "range": {
        "startLine": 55,
        "startChar": 68,
        "endLine": 55,
        "endChar": 76
      },
      "revId": "ed9d1a02116391087f795e9a8f2c1e7c965059c2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f09b0372_033290d1",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.h",
        "patchSetId": 5
      },
      "lineNbr": 55,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-11-30T18:01:15Z",
      "side": 1,
      "message": "Payload is reasonable I think. See for example https://cs.chromium.org/chromium/src/base/containers/mru_cache.h. It\u0027s like a more technical form of saying storage, specifically for caches.",
      "parentUuid": "79466cb3_9459dc81",
      "range": {
        "startLine": 55,
        "startChar": 68,
        "endLine": 55,
        "endChar": 76
      },
      "revId": "ed9d1a02116391087f795e9a8f2c1e7c965059c2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "206d1d9c_26aabf4f",
        "filename": "src/libANGLE/renderer/vulkan/renderervk_utils.h",
        "patchSetId": 5
      },
      "lineNbr": 626,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2017-11-30T17:39:40Z",
      "side": 1,
      "message": "nit: Assert that the new serial is at least as big as the current one.",
      "revId": "ed9d1a02116391087f795e9a8f2c1e7c965059c2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "120cf830_89de005c",
        "filename": "src/libANGLE/renderer/vulkan/renderervk_utils.h",
        "patchSetId": 5
      },
      "lineNbr": 626,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-11-30T18:01:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "206d1d9c_26aabf4f",
      "revId": "ed9d1a02116391087f795e9a8f2c1e7c965059c2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}