{
  "comments": [
    {
      "key": {
        "uuid": "786727da_8e6563c0",
        "filename": "src/libANGLE/Framebuffer.cpp",
        "patchSetId": 5
      },
      "lineNbr": 1391,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2018-03-28T22:07:01Z",
      "side": 1,
      "message": "onPixelUnpack seemed more correct.",
      "range": {
        "startLine": 1391,
        "startChar": 22,
        "endLine": 1391,
        "endChar": 33
      },
      "revId": "23d250f7523b5671b915305e5e39948c54df7ff0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd5e54af_b8017e00",
        "filename": "src/libANGLE/Framebuffer.cpp",
        "patchSetId": 5
      },
      "lineNbr": 1391,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-03-28T23:44:02Z",
      "side": 1,
      "message": "You\u0027d think so wouldn\u0027t you.. but pack is the operation for readPixels and unpack is the operation for texSubImage. see https://www.khronos.org/registry/OpenGL/extensions/EXT/EXT_pixel_buffer_object.txt or the GL spec of your choice.\n\n(It\u0027s probably why the person who wrote this code made the same mistake)",
      "parentUuid": "786727da_8e6563c0",
      "range": {
        "startLine": 1391,
        "startChar": 22,
        "endLine": 1391,
        "endChar": 33
      },
      "revId": "23d250f7523b5671b915305e5e39948c54df7ff0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f7ceed3_69e6a2bd",
        "filename": "src/libANGLE/renderer/d3d/d3d11/VertexArray11.cpp",
        "patchSetId": 5
      },
      "lineNbr": 80,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2018-03-28T22:07:01Z",
      "side": 1,
      "message": "Are we losing an optimization by checking getActiveAttribLocationsMask() here?",
      "range": {
        "startLine": 80,
        "startChar": 20,
        "endLine": 80,
        "endChar": 45
      },
      "revId": "23d250f7523b5671b915305e5e39948c54df7ff0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c35a8180_d93776ba",
        "filename": "src/libANGLE/renderer/d3d/d3d11/VertexArray11.cpp",
        "patchSetId": 5
      },
      "lineNbr": 80,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-03-28T23:44:02Z",
      "side": 1,
      "message": "you\u0027re correct this is a behaviour change, but it\u0027s a good one I think. updateVertexAttribStorage might happen on attributes that aren\u0027t used by the program. For one thing this will only trigger when the user changes a vertex attribute (which seems okay) and for another thing updateVertexAttribStorage is a fairly cheap operation, since it only updates some internal variables and doesn\u0027t do any copying.\n\nIn general it\u0027s nice if we can do as much as possible at the site of the state change (which is the syncState call, rather than syncStateInternal).",
      "parentUuid": "9f7ceed3_69e6a2bd",
      "range": {
        "startLine": 80,
        "startChar": 20,
        "endLine": 80,
        "endChar": 45
      },
      "revId": "23d250f7523b5671b915305e5e39948c54df7ff0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "46dec881_c3a7a02c",
        "filename": "src/libANGLE/renderer/d3d/d3d11/VertexArray11.cpp",
        "patchSetId": 5
      },
      "lineNbr": 104,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2018-03-28T22:07:01Z",
      "side": 1,
      "message": "I think this name is inconsistent with other funcInternal() names, where func() calls funcInternal(). Maybe updateState() is better?",
      "range": {
        "startLine": 104,
        "startChar": 25,
        "endLine": 104,
        "endChar": 42
      },
      "revId": "23d250f7523b5671b915305e5e39948c54df7ff0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f8cd1d54_7a295c71",
        "filename": "src/libANGLE/renderer/d3d/d3d11/VertexArray11.cpp",
        "patchSetId": 5
      },
      "lineNbr": 104,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-03-28T23:44:02Z",
      "side": 1,
      "message": "how about syncStateOnDraw?",
      "parentUuid": "46dec881_c3a7a02c",
      "range": {
        "startLine": 104,
        "startChar": 25,
        "endLine": 104,
        "endChar": 42
      },
      "revId": "23d250f7523b5671b915305e5e39948c54df7ff0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "920678f2_8f323938",
        "filename": "src/libANGLE/renderer/d3d/d3d11/VertexArray11.cpp",
        "patchSetId": 5
      },
      "lineNbr": 104,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-03-29T14:43:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f8cd1d54_7a295c71",
      "range": {
        "startLine": 104,
        "startChar": 25,
        "endLine": 104,
        "endChar": 42
      },
      "revId": "23d250f7523b5671b915305e5e39948c54df7ff0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}