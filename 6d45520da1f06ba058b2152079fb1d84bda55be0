{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "20ed6039_7bd9aaff",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2021-03-18T00:26:31Z",
      "side": 1,
      "message": "Shabi, here\u0027s my first attempt.  It\u0027s a quick hack of the EGLContextSharingTest.DeleteReaderOfSharedTexture test.\n\nIt did NOT fail on Windows when I removed your fix.\n\nIt DID fail on Android/Pixel 4 XL when I removed your fix (on a 1+-week old version of ANGLE that had my instrumentation and your fix).\n\nIt did NOT fail on the same device when I removed my instrumentation and your fix.  Without my instrumentation, I\u0027m not sure why it didn\u0027t fail.",
      "revId": "6d45520da1f06ba058b2152079fb1d84bda55be0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6d46a182_a3259b26",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2021-03-18T00:37:20Z",
      "side": 1,
      "message": "Sorry, there is still a crash on Android, but if the test passes at least once out of 3 tries, the test is considered as passed.  Those go away with your fix.\n\nMy suggestion is that I clean-up this test if you think the direction, name, etc. are fine.",
      "parentUuid": "20ed6039_7bd9aaff",
      "revId": "6d45520da1f06ba058b2152079fb1d84bda55be0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bb400e69_5fd40aea",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-03-18T15:38:36Z",
      "side": 1,
      "message": "The test is generally the way I expected it. You could add some logs in the internals of Vulkan to make sure everything does happen the way we want it (i.e. a submission between the dispatch calls).",
      "revId": "6d45520da1f06ba058b2152079fb1d84bda55be0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d33b9924_e69f48bd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2021-03-18T18:59:44Z",
      "side": 1,
      "message": "I\u0027ve got it crashing 100% of the time now on Android.  It was a good idea to switch glFlush to glFinish.",
      "parentUuid": "bb400e69_5fd40aea",
      "revId": "6d45520da1f06ba058b2152079fb1d84bda55be0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9f8aec2c_b76a0562",
        "filename": "src/tests/egl_tests/EGLMultiContextComputeTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-03-18T15:38:36Z",
      "side": 1,
      "message": "I\u0027d just call the file EGLMultiContextTest.cpp and remove Compute from the names everywhere. Future tests could be put here too, and don\u0027t have to be about compute.",
      "revId": "6d45520da1f06ba058b2152079fb1d84bda55be0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "680631f1_0fbaa332",
        "filename": "src/tests/egl_tests/EGLMultiContextComputeTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2021-03-18T18:59:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9f8aec2c_b76a0562",
      "revId": "6d45520da1f06ba058b2152079fb1d84bda55be0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b8fd0e8_218d1221",
        "filename": "src/tests/egl_tests/EGLMultiContextComputeTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 197,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-03-18T15:38:36Z",
      "side": 1,
      "message": "Should find a way to deduplicate this code",
      "range": {
        "startLine": 147,
        "startChar": 0,
        "endLine": 197,
        "endChar": 6
      },
      "revId": "6d45520da1f06ba058b2152079fb1d84bda55be0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a7470eb4_373707c5",
        "filename": "src/tests/egl_tests/EGLMultiContextComputeTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 197,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2021-03-18T18:59:44Z",
      "side": 1,
      "message": "It would be good.  If we standardized on the values of \"enum class Step\", we could put these into a header that\u0027s shared by both files.  Should I do that?",
      "parentUuid": "9b8fd0e8_218d1221",
      "range": {
        "startLine": 147,
        "startChar": 0,
        "endLine": 197,
        "endChar": 6
      },
      "revId": "6d45520da1f06ba058b2152079fb1d84bda55be0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f7bf874f_7c1e61bf",
        "filename": "src/tests/egl_tests/EGLMultiContextComputeTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 197,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-03-18T19:09:36Z",
      "side": 1,
      "message": "Yes please. You should be able to use tricks like we do with packed enums, where the type is a template and EnumCount and InvalidEnum are expected to be there (here Finish and Abort).",
      "parentUuid": "a7470eb4_373707c5",
      "range": {
        "startLine": 147,
        "startChar": 0,
        "endLine": 197,
        "endChar": 6
      },
      "revId": "6d45520da1f06ba058b2152079fb1d84bda55be0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ea977679_c8d7b16c",
        "filename": "src/tests/egl_tests/EGLMultiContextComputeTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 197,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2021-03-18T20:00:24Z",
      "side": 1,
      "message": "I\u0027m not sure I follow.  I see EnumCount and InvalidEnum being used (e.g. in \"PackedGLEnums_autogen.h\", but I\u0027m not sure how to have:\n\n- A header with a generic enum being used by lamba functions and the AbortOnFailure class\n- Have both \"EGLMultiContextTest.cpp\" and \"EGLContextShared.cpp\" have different specific enum\u0027s that are used with the functs/class from the header.\n\nCan you point at an example to follow?\n\nOr, is the idea to simply have generic \"Step\" names and change both .cpp files to use those Step\u0027s instead of the specific/different Step\u0027s they have now?",
      "parentUuid": "f7bf874f_7c1e61bf",
      "range": {
        "startLine": 147,
        "startChar": 0,
        "endLine": 197,
        "endChar": 6
      },
      "revId": "6d45520da1f06ba058b2152079fb1d84bda55be0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd9a9bf0_c0b690cc",
        "filename": "src/tests/egl_tests/EGLMultiContextComputeTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 197,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-03-19T03:05:05Z",
      "side": 1,
      "message": "The idea is to take `Step` as a template type, assuming it has Finish and Abort. Examples where we do this with EnumCount and InvalidEnum:\n\ntemplate \u003ctypename E\u003e\nconstexpr size_t EnumSize()\n{\n    using UnderlyingType \u003d typename std::underlying_type\u003cE\u003e::type;\n    return static_cast\u003cUnderlyingType\u003e(E::EnumCount);\n}\n\ntemplate \u003ctypename E\u003e\nstruct AllEnums\n{\n    EnumIterator\u003cE\u003e begin() const { return {static_cast\u003cE\u003e(0)}; }\n    EnumIterator\u003cE\u003e end() const { return {E::InvalidEnum}; }\n};\n\nYou could do a refactoring here by making a class to handle all three jobs (abort on failure, wait for step and next step). It would take the enum as a template type, as well as the value for the initial step as constructor argument.",
      "parentUuid": "ea977679_c8d7b16c",
      "range": {
        "startLine": 147,
        "startChar": 0,
        "endLine": 197,
        "endChar": 6
      },
      "revId": "6d45520da1f06ba058b2152079fb1d84bda55be0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c30de22f_bbd1c15d",
        "filename": "src/tests/egl_tests/EGLMultiContextComputeTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 197,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2021-03-19T22:19:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fd9a9bf0_c0b690cc",
      "range": {
        "startLine": 147,
        "startChar": 0,
        "endLine": 197,
        "endChar": 6
      },
      "revId": "6d45520da1f06ba058b2152079fb1d84bda55be0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0eceaa58_bfdb8a1e",
        "filename": "src/tests/egl_tests/EGLMultiContextComputeTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 269,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-03-18T15:38:36Z",
      "side": 1,
      "message": "The test probably didn\u0027t fail because we defer this everywhere except the Android bots. Could you try something else, like glFinish()?",
      "revId": "6d45520da1f06ba058b2152079fb1d84bda55be0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "731e6383_77fa19e6",
        "filename": "src/tests/egl_tests/EGLMultiContextComputeTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 269,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2021-03-18T18:59:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0eceaa58_bfdb8a1e",
      "revId": "6d45520da1f06ba058b2152079fb1d84bda55be0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}