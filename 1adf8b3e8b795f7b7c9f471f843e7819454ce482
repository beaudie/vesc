{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "dbc2db88_cacb30b5",
        "filename": "src/libANGLE/renderer/wgpu/wgpu_command_buffer.h",
        "patchSetId": 5
      },
      "lineNbr": 193,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-07-23T14:29:30Z",
      "side": 1,
      "message": "What\u0027s stopping wgpu/ from using WebGPU secondaries? In vulkan/ we actually _can_ use Vulkan secondaries (with probably even more restrictions compared to WebGPU), we just found this to be faster in practice. Since Dawn already has something like this, it may just be faster to use that directly.",
      "revId": "1adf8b3e8b795f7b7c9f471f843e7819454ce482",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f5b3db9b_9cd4cb93",
        "filename": "src/libANGLE/renderer/wgpu/wgpu_command_buffer.h",
        "patchSetId": 5
      },
      "lineNbr": 193,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2024-07-23T17:03:56Z",
      "side": 1,
      "message": "Dawn\u0027s secondaries (RenderBundles) don\u0027t support enough commands yet. It\u0027s a follow-up to update the Dawn API to support them but this gets things drawing for now.",
      "parentUuid": "dbc2db88_cacb30b5",
      "revId": "1adf8b3e8b795f7b7c9f471f843e7819454ce482",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4162bc4b_5b71a3be",
        "filename": "src/libANGLE/renderer/wgpu/wgpu_command_buffer.h",
        "patchSetId": 5
      },
      "lineNbr": 193,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-07-23T17:10:22Z",
      "side": 1,
      "message": "Got it",
      "parentUuid": "f5b3db9b_9cd4cb93",
      "revId": "1adf8b3e8b795f7b7c9f471f843e7819454ce482",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "1adf8b3e8b795f7b7c9f471f843e7819454ce482",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "1adf8b3e8b795f7b7c9f471f843e7819454ce482",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "1adf8b3e8b795f7b7c9f471f843e7819454ce482",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}