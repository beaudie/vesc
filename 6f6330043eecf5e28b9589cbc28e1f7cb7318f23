{
  "comments": [
    {
      "key": {
        "uuid": "fd0bd1f5_c5b79e79",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 23
      },
      "lineNbr": 0,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2020-09-18T22:08:30Z",
      "side": 1,
      "message": "For review",
      "revId": "6f6330043eecf5e28b9589cbc28e1f7cb7318f23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "28363813_d0939546",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 23
      },
      "lineNbr": 0,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2020-09-18T22:10:51Z",
      "side": 1,
      "message": "Nexus 5X has issue with this in expectations file, but pixel 2 does not:\n\n2546 ANDROID : dEQP-EGL.functional.query_context.*_pixmap \u003d SKIP\n\n\nI   37.970s run_tests_on_device(01e5abf9c2d31739)  Failed to validate test expectations.\nI   37.970s run_tests_on_device(01e5abf9c2d31739)   Line 207: expectation was unused.",
      "revId": "6f6330043eecf5e28b9589cbc28e1f7cb7318f23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "98caac64_209540f1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 23
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-09-18T22:19:22Z",
      "side": 1,
      "message": "One process suggestion.",
      "revId": "6f6330043eecf5e28b9589cbc28e1f7cb7318f23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "72274d5a_e4c091ed",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 23
      },
      "lineNbr": 0,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2020-09-19T00:14:21Z",
      "side": 1,
      "message": "Response",
      "revId": "6f6330043eecf5e28b9589cbc28e1f7cb7318f23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cbf34837_e9ae8aa0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 23
      },
      "lineNbr": 0,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2020-09-19T00:14:21Z",
      "side": 1,
      "message": "Its possibly an overlap/collision with \n2546 NEXUS5X : dEQP-EGL.functional.query_context.query_context.* \u003d SKIP\n\n\nBetter:\n2546 ANDROID : dEQP-EGL.functional.query_context.get_current_context.rgb*_pixmap \u003d SKIP\n2546 ANDROID : dEQP-EGL.functional.query_context.get_current_surface.rgb*_pixmap \u003d SKIP\n2546 ANDROID : dEQP-EGL.functional.query_context.get_current_display.rgb*_pixmap \u003d SKIP\n2546 ANDROID : dEQP-EGL.functional.query_context.query_context.rgb*_pixmap \u003d SKIP\n2546 ANDROID : dEQP-EGL.functional.query_context.get_current_context.other \u003d SKIP\n2546 ANDROID : dEQP-EGL.functional.query_context.get_current_surface.other \u003d SKIP\n2546 ANDROID : dEQP-EGL.functional.query_context.get_current_display.other \u003d SKIP\n2546 ANDROID : dEQP-EGL.functional.query_context.query_context.other \u003d SKIP",
      "parentUuid": "28363813_d0939546",
      "revId": "6f6330043eecf5e28b9589cbc28e1f7cb7318f23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d0a60a5_12157a7c",
        "filename": "src/libANGLE/Caps.h",
        "patchSetId": 23
      },
      "lineNbr": 649,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-09-18T22:19:22Z",
      "side": 1,
      "message": "Jeff, can you split off the boilerplate of adding the new extension and updating generated files? (Defaulting to disabled). We can land that quickly then investigate the functional changes.",
      "range": {
        "startLine": 648,
        "startChar": 0,
        "endLine": 649,
        "endChar": 31
      },
      "revId": "6f6330043eecf5e28b9589cbc28e1f7cb7318f23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1891b375_0fb8f674",
        "filename": "src/libANGLE/Caps.h",
        "patchSetId": 23
      },
      "lineNbr": 649,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2020-09-19T00:14:21Z",
      "side": 1,
      "message": "I\u0027m trying to see what the point is, and the benefit. Not sure yet. What goes in first PR and what goes in second PR.\n\nCertainly there are a lot of comment lines with the autogen, but it also generates the LoadImageFunction and format checks all needed for the extension.\n\nThe non-autogen: Could limit change to extension vars/flags, validation, formatutils (optional), swizzle fix(optional), and EGL config by keeping extension string hidden in Caps.cpp. Then configs would work without enabling the extension.\n\nIs that the point? basic enable configs in one and the second PR for the extension autogen?\n\nThe expectations I tweaked mostly have to do with configs+stencil8. And SKIPPING the .other and _pixmap tests, since those never pass except in Xll pixmap case.\n\nNote we can\u0027t have extension without configs+stencil8 - texture_stencil tests require a stencil8 config and the extension.",
      "parentUuid": "9d0a60a5_12157a7c",
      "range": {
        "startLine": 648,
        "startChar": 0,
        "endLine": 649,
        "endChar": 31
      },
      "revId": "6f6330043eecf5e28b9589cbc28e1f7cb7318f23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "21970ef2_919dffaa",
        "filename": "src/libANGLE/Caps.h",
        "patchSetId": 23
      },
      "lineNbr": 649,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-09-19T02:56:09Z",
      "side": 1,
      "message": "This is purely a matter of making reviews easier. Jamie\u0027s suggestion is to compose a first CL that does all the no-op autogen code, which doesn\u0027t need much review (for example entry points, context functions, etc).\n\nThe auto-gen changes that only make sense with the extension (like format-related files) should remain in this CL.\n\nIf the change could be split up further, that would be even better. A good idea would be to implement the front-end + GL backend in one CL (because GL backend should be fairly simple), then implement the Vulkan backend in another.",
      "parentUuid": "1891b375_0fb8f674",
      "range": {
        "startLine": 648,
        "startChar": 0,
        "endLine": 649,
        "endChar": 31
      },
      "revId": "6f6330043eecf5e28b9589cbc28e1f7cb7318f23",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}