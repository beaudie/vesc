{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "df55ffba_8e920a18",
        "filename": "src/libANGLE/renderer/vulkan/CLContextVk.cpp",
        "patchSetId": 30
      },
      "lineNbr": 164,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2024-10-16T13:25:38Z",
      "side": 1,
      "message": "This is checking that flags has BOTH `CL_MEM_READ_ONLY` and `CL_MEM_WRITE_ONLY` set which should not be valid and doesn\u0027t align with adding `kMinSupportedFormatsReadOrWrite` below.\n\nFrom the docs, flags can be `CL_MEM_READ_WRITE`, `CL_MEM_READ_ONLY`, `CL_MEM_WRITE_ONLY`, or `CL_MEM_KERNEL_READ_AND_WRITE`.\n\nI suggest rewriting this function to be something like:\n\n```\nstatic constexpr cl_image_format kAllImageFormats \u003d {\n\t...\n}\n\nstd::vector\u003ccl_image_format\u003e supportedFormats;\nfor (cl_image_format format : kAllImageFormats)\n{\n\tif (format is supported and valid for flags)\n\t{\n\t\tsupportedFormats.push_back(format);\n\t}\n}\n```\n\nThis avoids defining the list of formats in the header and avoid copying them.",
      "range": {
        "startLine": 164,
        "startChar": 21,
        "endLine": 164,
        "endChar": 57
      },
      "revId": "d24ce5727464bb4e9c09d622ac1bc56e9fb8c8cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "183d0ab6_294a7825",
        "filename": "src/libANGLE/renderer/vulkan/CLContextVk.cpp",
        "patchSetId": 30
      },
      "lineNbr": 164,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2024-10-16T14:05:59Z",
      "side": 1,
      "message": "My mistake on the isSet checking if any flag is set. The name is very misleading and we should either change it or avoid using that function.",
      "parentUuid": "df55ffba_8e920a18",
      "range": {
        "startLine": 164,
        "startChar": 21,
        "endLine": 164,
        "endChar": 57
      },
      "revId": "d24ce5727464bb4e9c09d622ac1bc56e9fb8c8cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "55235626_b5cce3cd",
        "filename": "src/libANGLE/renderer/vulkan/CLContextVk.cpp",
        "patchSetId": 30
      },
      "lineNbr": 164,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-10-16T15:00:39Z",
      "side": 1,
      "message": "https://chromium-review.googlesource.com/c/angle/angle/+/5937411",
      "parentUuid": "183d0ab6_294a7825",
      "range": {
        "startLine": 164,
        "startChar": 21,
        "endLine": 164,
        "endChar": 57
      },
      "revId": "d24ce5727464bb4e9c09d622ac1bc56e9fb8c8cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8774fdfe_b23828db",
        "filename": "src/libANGLE/renderer/vulkan/CLContextVk.cpp",
        "patchSetId": 30
      },
      "lineNbr": 164,
      "author": {
        "id": 3319458
      },
      "writtenOn": "2024-10-16T20:37:39Z",
      "side": 1,
      "message": "I\u0027m assuming this is done. I\u0027m not aware of a method/help function for checking if the format is valid for the flags. As a result, will rely on intersects with read or write to determine which list to load.",
      "parentUuid": "55235626_b5cce3cd",
      "range": {
        "startLine": 164,
        "startChar": 21,
        "endLine": 164,
        "endChar": 57
      },
      "revId": "d24ce5727464bb4e9c09d622ac1bc56e9fb8c8cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9957e5c5_de602442",
        "filename": "src/libANGLE/renderer/vulkan/CLContextVk.cpp",
        "patchSetId": 30
      },
      "lineNbr": 194,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2024-10-16T13:25:38Z",
      "side": 1,
      "message": "this should be `std::min(supportedFormats.size(), numEntries)`",
      "range": {
        "startLine": 194,
        "startChar": 41,
        "endLine": 194,
        "endChar": 64
      },
      "revId": "d24ce5727464bb4e9c09d622ac1bc56e9fb8c8cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "11a099ca_30d31280",
        "filename": "src/libANGLE/renderer/vulkan/CLContextVk.cpp",
        "patchSetId": 30
      },
      "lineNbr": 194,
      "author": {
        "id": 3319458
      },
      "writtenOn": "2024-10-16T20:37:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9957e5c5_de602442",
      "range": {
        "startLine": 194,
        "startChar": 41,
        "endLine": 194,
        "endChar": 64
      },
      "revId": "d24ce5727464bb4e9c09d622ac1bc56e9fb8c8cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}