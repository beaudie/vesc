{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6b067c86_1c80cce0",
        "filename": "src/common/system_utils_win.cpp",
        "patchSetId": 3
      },
      "lineNbr": 177,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-03-05T03:28:51Z",
      "side": 1,
      "message": "Windows also understands `/`, so this is going to be a source of bugs. Like if the user provides the path as `a/b/c`, then the path that gets here is something like `path\\to\\temp\\a/b/c`, and it blows up.\n\nMy suggestion is to sanitize the path first by replacing `GetPathSeparator()` with `/`, then iterating with `/`.",
      "revId": "fe1c521e8a59fca63b7afe512081b9286c2b2076",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f2a21e5a_1ee0ee3e",
        "filename": "src/common/system_utils_win.cpp",
        "patchSetId": 3
      },
      "lineNbr": 177,
      "author": {
        "id": 1604617
      },
      "writtenOn": "2024-03-05T21:28:38Z",
      "side": 1,
      "message": "Nice catch! Hmm, I believe I could also do this as well?\n```\npos \u003d path.find_first_of(\"/\\\\\", pos);\n```",
      "parentUuid": "6b067c86_1c80cce0",
      "revId": "fe1c521e8a59fca63b7afe512081b9286c2b2076",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "62121815_226e821b",
        "filename": "src/common/system_utils_win.cpp",
        "patchSetId": 3
      },
      "lineNbr": 177,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-03-06T03:28:12Z",
      "side": 1,
      "message": "I guess that works because this is windows-only (see other comment). Still might be simpler to have a `MakeSlashThePathSeparator(path)` function that\u0027s no-op everywhere except windows, and use that both here and in the other file.",
      "parentUuid": "f2a21e5a_1ee0ee3e",
      "revId": "fe1c521e8a59fca63b7afe512081b9286c2b2076",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "257b8bb3_7554c9ff",
        "filename": "src/common/system_utils_win.cpp",
        "patchSetId": 3
      },
      "lineNbr": 177,
      "author": {
        "id": 1604617
      },
      "writtenOn": "2024-03-06T17:34:53Z",
      "side": 1,
      "message": "Sure, will push out an update soon.",
      "parentUuid": "62121815_226e821b",
      "revId": "fe1c521e8a59fca63b7afe512081b9286c2b2076",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e20cef6b_b5ebbc34",
        "filename": "src/libANGLE/renderer/vulkan/CLProgramVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 420,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-03-05T03:28:51Z",
      "side": 1,
      "message": "This is also going to blow up if the user provides the path with `/` on windows.",
      "revId": "fe1c521e8a59fca63b7afe512081b9286c2b2076",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "01daed86_0101a805",
        "filename": "src/libANGLE/renderer/vulkan/CLProgramVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 420,
      "author": {
        "id": 1604617
      },
      "writtenOn": "2024-03-05T21:28:38Z",
      "side": 1,
      "message": "Same as other comment, I believe this would work right?\n```\nfind_last_of(\"/\\\\\")\n```",
      "parentUuid": "e20cef6b_b5ebbc34",
      "revId": "fe1c521e8a59fca63b7afe512081b9286c2b2076",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "166d81d1_54db0bff",
        "filename": "src/libANGLE/renderer/vulkan/CLProgramVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 420,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-03-06T03:28:12Z",
      "side": 1,
      "message": "Not on Linux (including Android), `\\` is a valid character in file names. It\u0027ll be much simpler to replace `\\` with `/` (only on windows) and just work with `/` as the universal separator.",
      "parentUuid": "01daed86_0101a805",
      "revId": "fe1c521e8a59fca63b7afe512081b9286c2b2076",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "91241f8c_945855ac",
        "filename": "src/libANGLE/renderer/vulkan/CLProgramVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 420,
      "author": {
        "id": 1604617
      },
      "writtenOn": "2024-03-06T17:34:53Z",
      "side": 1,
      "message": "I see, understood. Will push out an update soon.",
      "parentUuid": "166d81d1_54db0bff",
      "revId": "fe1c521e8a59fca63b7afe512081b9286c2b2076",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ffd56425_c64a49e7",
        "filename": "src/libANGLE/renderer/vulkan/CLProgramVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 441,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-03-05T03:28:51Z",
      "side": 1,
      "message": "As a future task, I suggest working with clspv to support taking the header contents directly as strings so you don\u0027t have to go through the file system for it.",
      "range": {
        "startLine": 441,
        "startChar": 13,
        "endLine": 441,
        "endChar": 26
      },
      "revId": "fe1c521e8a59fca63b7afe512081b9286c2b2076",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc034b47_35d3a74d",
        "filename": "src/libANGLE/renderer/vulkan/CLProgramVk.h",
        "patchSetId": 3
      },
      "lineNbr": 234,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-03-05T03:28:51Z",
      "side": 1,
      "message": "nit: please keep the implementation in the source file. It\u0027s not going to be inlined anyway",
      "revId": "fe1c521e8a59fca63b7afe512081b9286c2b2076",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2f96483c_7e826354",
        "filename": "src/libANGLE/renderer/vulkan/CLProgramVk.h",
        "patchSetId": 3
      },
      "lineNbr": 234,
      "author": {
        "id": 1604617
      },
      "writtenOn": "2024-03-05T21:28:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fc034b47_35d3a74d",
      "revId": "fe1c521e8a59fca63b7afe512081b9286c2b2076",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}