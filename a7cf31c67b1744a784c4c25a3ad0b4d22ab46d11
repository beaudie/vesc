{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "d688aa61_3b4cf494",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1550632
      },
      "writtenOn": "2023-07-16T07:24:11Z",
      "side": 1,
      "message": "There doesn\u0027t seem to be any objections for merging this. Can somebody submit this to CQ?",
      "revId": "a7cf31c67b1744a784c4c25a3ad0b4d22ab46d11",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dac2c5f0_7b1b4b63",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-07-17T15:53:06Z",
      "side": 1,
      "message": "I tried, but some tests are failing.",
      "parentUuid": "d688aa61_3b4cf494",
      "revId": "a7cf31c67b1744a784c4c25a3ad0b4d22ab46d11",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "35875692_4aa0a520",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1550632
      },
      "writtenOn": "2023-07-17T16:02:25Z",
      "side": 1,
      "message": "Seems like this is caused by differing out of bounds texture access behavior when switching from `texelFetch` to `texture`. For `texelFetch` with robust buffer access enabled all out of bound texture access should always return black pixels but with `texture` it\u0027s using whatever default that came from hardware since I did not set the wrap mode explicitly. I\u0027ll try fixing this tomorrow (which is probably 8 hours from now).",
      "parentUuid": "dac2c5f0_7b1b4b63",
      "revId": "a7cf31c67b1744a784c4c25a3ad0b4d22ab46d11",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "96d6656e_63a4bb2c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-07-17T16:12:07Z",
      "side": 1,
      "message": "That\u0027s .. unexpected. The shader should not be accessing OOB, at least that was not the intention.\n\nAlso, take your time ðŸ˜Š",
      "parentUuid": "35875692_4aa0a520",
      "revId": "a7cf31c67b1744a784c4c25a3ad0b4d22ab46d11",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "48d1092c_bbf2b5b4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1550632
      },
      "writtenOn": "2023-07-18T03:56:47Z",
      "side": 1,
      "message": "Done. Can you retry submitting to CQ?",
      "parentUuid": "96d6656e_63a4bb2c",
      "revId": "a7cf31c67b1744a784c4c25a3ad0b4d22ab46d11",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "336a5e3f_f0b07dda",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-07-18T13:30:26Z",
      "side": 1,
      "message": "Ok let\u0027s see what the bots think. We only use `VK_BORDER_COLOR_FLOAT_CUSTOM_EXT` FYI, so without the `VK_EXT_custom_border_color` extension I don\u0027t think your change would work.\n\nYou could fiddle with `SamplerDesc::init` so it sets `createInfo.borderColor` to one of the predefined ones based on the border color. Alternatively, if sampling is really being done outside the texture bounds, it\u0027s probably better to clip the copy area to within the bounds, and issue `vkCmdClearAttachments` for the area outside the source bounds.\n\n---\n\nI didn\u0027t really debug the failures in PS#4, if the problems were not so much out of bounds access, but rather at-the-border access, then this change was probably enough to fix it:\n\n```\n    samplerState.setMinFilter(GL_NEAREST);\n    samplerState.setMagFilter(GL_NEAREST);\n```",
      "parentUuid": "48d1092c_bbf2b5b4",
      "revId": "a7cf31c67b1744a784c4c25a3ad0b4d22ab46d11",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9928a2b9_89cf328c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1550632
      },
      "writtenOn": "2023-07-18T13:41:26Z",
      "side": 1,
      "message": "From the test logs:\n```\nRendererVk.cpp:778 (DebugUtilsMessenger): [ VUID-VkDescriptorSetLayoutBinding-pImmutableSamplers-04009 ] Validation Error: [ VUID-VkDescriptorSetLayoutBinding-pImmutableSamplers-04009 ] Object 0: handle \u003d 0x7fc7f30, type \u003d VK_OBJECT_TYPE_DEVICE; | MessageID \u003d 0xf17061bd | vkCreateDescriptorSetLayout(): pBindings[0].pImmutableSamplers[0] has VkSampler VkNonDispatchableHandle 0xb2df680000000dbb[] presented as immutable has a custom border color The Vulkan spec states: The sampler objects indicated by pImmutableSamplers must not have a borderColor with one of the values VK_BORDER_COLOR_FLOAT_CUSTOM_EXT or VK_BORDER_COLOR_INT_CUSTOM_EXT (https://www.khronos.org/registry/vulkan/specs/1.3-extensions/html/vkspec.html#VUID-VkDescriptorSetLayoutBinding-pImmutableSamplers-04009)\n                            Object: 0x7fc7f30 (type \u003d Device(3))\n\nERR: RendererVk.cpp:778 (DebugUtilsMessenger): [ VUID-VkDescriptorSetLayoutBinding-pImmutableSamplers-04009 ] Validation Error: [ VUID-VkDescriptorSetLayoutBinding-pImmutableSamplers-04009 ] Object 0: handle \u003d 0x7fc7f30, type \u003d VK_OBJECT_TYPE_DEVICE; | MessageID \u003d 0xf17061bd | vkCreateDescriptorSetLayout(): pBindings[0].pImmutableSamplers[0] has VkSampler VkNonDispatchableHandle 0xb2df680000000dbb[] presented as immutable has a custom border color The Vulkan spec states: The sampler objects indicated by pImmutableSamplers must not have a borderColor with one of the values VK_BORDER_COLOR_FLOAT_CUSTOM_EXT or VK_BORDER_COLOR_INT_CUSTOM_EXT (https://www.khronos.org/registry/vulkan/specs/1.3-extensions/html/vkspec.html#VUID-VkDescriptorSetLayoutBinding-pImmutableSamplers-04009)\n                            Object: 0x7fc7f30 (type \u003d Device(3))\n```\n\nI guess making `SamplerDesc::init` special case opaque black is still going to be necessary in the end.",
      "parentUuid": "336a5e3f_f0b07dda",
      "revId": "a7cf31c67b1744a784c4c25a3ad0b4d22ab46d11",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2cd1d570_f0fe5edc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1550632
      },
      "writtenOn": "2023-07-18T13:45:05Z",
      "side": 1,
      "message": "\u003e I didn\u0027t really debug the failures in PS#4, if the problems were not so much out of bounds access, but rather at-the-border access, then this change was probably enough to fix it:\n\nActually [this](https://source.chromium.org/chromium/chromium/src/+/main:third_party/angle/src/tests/gl_tests/RobustResourceInitTest.cpp;l\u003d909-967;drc\u003d113f847be69f3e813e55e6c3678a79e7483052e2) seems to be testing robust image access behavior with out of bound access.",
      "parentUuid": "9928a2b9_89cf328c",
      "revId": "a7cf31c67b1744a784c4c25a3ad0b4d22ab46d11",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "655cf61e_7c3194ba",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-07-18T13:58:49Z",
      "side": 1,
      "message": "On the _GL_ side, it\u0027s fine if there\u0027s OOB access. We can choose how to translate it though, like I said for example with clipping it to in-bounds-copy + vkCmdClearAttachments for the areas outside.\n\nNow that I think about it, we can also just use LOAD_OP_CLEAR and do the copy to the region inside bounds.",
      "parentUuid": "2cd1d570_f0fe5edc",
      "revId": "a7cf31c67b1744a784c4c25a3ad0b4d22ab46d11",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f0c5bf20_18c67c03",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1550632
      },
      "writtenOn": "2023-07-18T15:11:59Z",
      "side": 1,
      "message": "This should work now. Can you retry submitting this to CQ?",
      "parentUuid": "655cf61e_7c3194ba",
      "revId": "a7cf31c67b1744a784c4c25a3ad0b4d22ab46d11",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bcd3c325_4708b2b0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-07-18T16:11:04Z",
      "side": 1,
      "message": "Still failing it seems",
      "parentUuid": "f0c5bf20_18c67c03",
      "revId": "a7cf31c67b1744a784c4c25a3ad0b4d22ab46d11",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "faebae0b_bc3c31b1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1550632
      },
      "writtenOn": "2023-07-19T02:00:59Z",
      "side": 1,
      "message": "Apparently this was caused by `AdjustBorderColor` setting alpha to 1 for opaque formats. Can you retry running the tests?",
      "parentUuid": "bcd3c325_4708b2b0",
      "revId": "a7cf31c67b1744a784c4c25a3ad0b4d22ab46d11",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "452a11df_0c1638e5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1550632
      },
      "writtenOn": "2023-07-19T04:25:08Z",
      "side": 1,
      "message": "I have now reverted to the old path for all non-YUV images. Can you retry CQ?",
      "parentUuid": "faebae0b_bc3c31b1",
      "revId": "a7cf31c67b1744a784c4c25a3ad0b4d22ab46d11",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dbf80fba_a1d506c7",
        "filename": "src/libANGLE/renderer/vulkan/UtilsVk.h",
        "patchSetId": 4
      },
      "lineNbr": 650,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-07-13T19:33:46Z",
      "side": 1,
      "message": "nit: please use `angle::HashMap` instead.",
      "range": {
        "startLine": 650,
        "startChar": 9,
        "endLine": 650,
        "endChar": 22
      },
      "revId": "a7cf31c67b1744a784c4c25a3ad0b4d22ab46d11",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "66525c71_db921fa0",
        "filename": "src/libANGLE/renderer/vulkan/UtilsVk.h",
        "patchSetId": 4
      },
      "lineNbr": 650,
      "author": {
        "id": 1550632
      },
      "writtenOn": "2023-07-14T01:23:46Z",
      "side": 1,
      "message": "Not possible, this results in a compiler error at `UtilsVk.cpp:3243`:\n\n```\nIn file included from ../../src/libANGLE/renderer/vulkan/UtilsVk.cpp:10:\nIn file included from ../../src/libANGLE/renderer/vulkan/UtilsVk.h:31:\nIn file included from ../../src/libANGLE/renderer/vulkan/vk_cache_utils.h:15:\nIn file included from ../../src/common/FixedVector.h:13:\nIn file included from ../../src/common/debug.h:16:\nIn file included from ../../buildtools/third_party/libc++/trunk/include/iomanip:47:\nIn file included from ../../buildtools/third_party/libc++/trunk/include/istream:170:\nIn file included from ../../buildtools/third_party/libc++/trunk/include/ostream:170:\nIn file included from ../../buildtools/third_party/libc++/trunk/include/__memory/shared_ptr.h:22:\nIn file included from ../../buildtools/third_party/libc++/trunk/include/__memory/allocation_guard.h:14:\n../../buildtools/third_party/libc++/trunk/include/__memory/allocator_traits.h:304:9: error: no matching function for call to \u0027construct_at\u0027\n  304 |         _VSTD::construct_at(__p, _VSTD::forward\u003c_Args\u003e(__args)...);\n      |         ^~~~~~~~~~~~~~~~~~~\n../../buildtools/third_party/libc++/trunk/include/__config:687:17: note: expanded from macro \u0027_VSTD\u0027\n  687 | #  define _VSTD std\n      |                 ^\n../../third_party/abseil-cpp/absl/container/internal/container_memory.h:440:42: note: in instantiation of function template specialization \u0027std::allocator_traits\u003cstd::allocator\u003cstd::pair\u003cconst rx::vk::SamplerDesc, rx::UtilsVk::GraphicsShaderProgramAndPipelines\u003e\u003e\u003e::construct\u003cstd::pair\u003crx::vk::SamplerDesc, rx::UtilsVk::GraphicsShaderProgramAndPipelines\u003e, std::pair\u003crx::vk::SamplerDesc, rx::UtilsVk::GraphicsShaderProgramAndPipelines\u003e, void, void\u003e\u0027 requested here\n  440 |       absl::allocator_traits\u003cAllocator\u003e::construct(\n      |                                          ^\n../../third_party/abseil-cpp/absl/container/flat_hash_map.h:580:18: note: in instantiation of function template specialization \u0027absl::container_internal::map_slot_policy\u003crx::vk::SamplerDesc, rx::UtilsVk::GraphicsShaderProgramAndPipelines\u003e::transfer\u003cstd::allocator\u003cstd::pair\u003cconst rx::vk::SamplerDesc, rx::UtilsVk::GraphicsShaderProgramAndPipelines\u003e\u003e\u003e\u0027 requested here\n  580 |     slot_policy::transfer(alloc, new_slot, old_slot);\n      |                  ^\n../../third_party/abseil-cpp/absl/container/internal/common_policy_traits.h:100:8: note: in instantiation of function template specialization \u0027absl::container_internal::FlatHashMapPolicy\u003crx::vk::SamplerDesc, rx::UtilsVk::GraphicsShaderProgramAndPipelines\u003e::transfer\u003cstd::allocator\u003cstd::pair\u003cconst rx::vk::SamplerDesc, rx::UtilsVk::GraphicsShaderProgramAndPipelines\u003e\u003e\u003e\u0027 requested here\n  100 |     P::transfer(alloc, new_slot, old_slot);\n      |        ^\n../../third_party/abseil-cpp/absl/container/internal/common_policy_traits.h:66:5: note: in instantiation of function template specialization \u0027absl::container_internal::common_policy_traits\u003cabsl::container_internal::FlatHashMapPolicy\u003crx::vk::SamplerDesc, rx::UtilsVk::GraphicsShaderProgramAndPipelines\u003e\u003e::transfer_impl\u003cstd::allocator\u003cstd::pair\u003cconst rx::vk::SamplerDesc, rx::UtilsVk::GraphicsShaderProgramAndPipelines\u003e\u003e, absl::container_internal::FlatHashMapPolicy\u003crx::vk::SamplerDesc, rx::UtilsVk::GraphicsShaderProgramAndPipelines\u003e\u003e\u0027 requested here\n   66 |     transfer_impl(alloc, new_slot, old_slot, Rank0{});\n      |     ^\n../../third_party/abseil-cpp/absl/container/internal/raw_hash_set.h:2466:23: note: in instantiation of function template specialization \u0027absl::container_internal::common_policy_traits\u003cabsl::container_internal::FlatHashMapPolicy\u003crx::vk::SamplerDesc, rx::UtilsVk::GraphicsShaderProgramAndPipelines\u003e\u003e::transfer\u003cstd::allocator\u003cstd::pair\u003cconst rx::vk::SamplerDesc, rx::UtilsVk::GraphicsShaderProgramAndPipelines\u003e\u003e\u003e\u0027 requested here\n 2466 |         PolicyTraits::transfer(\u0026alloc_ref(), new_slots + new_i, old_slots + i);\n      |                       ^\n../../third_party/abseil-cpp/absl/container/internal/raw_hash_set.h:2611:7: note: (skipping 1 context in backtrace; use -ftemplate-backtrace-limit\u003d0 to see all)\n 2611 |       resize(growth_left() \u003e 0 ? cap : NextCapacity(cap));\n      |       ^\n../../third_party/abseil-cpp/absl/container/internal/raw_hash_set.h:2598:13: note: in instantiation of member function \u0027absl::container_internal::raw_hash_set\u003cabsl::container_internal::FlatHashMapPolicy\u003crx::vk::SamplerDesc, rx::UtilsVk::GraphicsShaderProgramAndPipelines\u003e, absl::hash_internal::Hash\u003crx::vk::SamplerDesc\u003e, std::equal_to\u003crx::vk::SamplerDesc\u003e, std::allocator\u003cstd::pair\u003cconst rx::vk::SamplerDesc, rx::UtilsVk::GraphicsShaderProgramAndPipelines\u003e\u003e\u003e::prepare_insert\u0027 requested here\n 2598 |     return {prepare_insert(hash), true};\n      |             ^\n../../third_party/abseil-cpp/absl/container/internal/raw_hash_map.h:202:22: note: in instantiation of function template specialization \u0027absl::container_internal::raw_hash_set\u003cabsl::container_internal::FlatHashMapPolicy\u003crx::vk::SamplerDesc, rx::UtilsVk::GraphicsShaderProgramAndPipelines\u003e, absl::hash_internal::Hash\u003crx::vk::SamplerDesc\u003e, std::equal_to\u003crx::vk::SamplerDesc\u003e, std::allocator\u003cstd::pair\u003cconst rx::vk::SamplerDesc, rx::UtilsVk::GraphicsShaderProgramAndPipelines\u003e\u003e\u003e::find_or_prepare_insert\u003crx::vk::SamplerDesc\u003e\u0027 requested here\n  202 |     auto res \u003d this-\u003efind_or_prepare_insert(k);\n      |                      ^\n../../third_party/abseil-cpp/absl/container/internal/raw_hash_map.h:139:12: note: in instantiation of function template specialization \u0027absl::container_internal::raw_hash_map\u003cabsl::container_internal::FlatHashMapPolicy\u003crx::vk::SamplerDesc, rx::UtilsVk::GraphicsShaderProgramAndPipelines\u003e, absl::hash_internal::Hash\u003crx::vk::SamplerDesc\u003e, std::equal_to\u003crx::vk::SamplerDesc\u003e, std::allocator\u003cstd::pair\u003cconst rx::vk::SamplerDesc, rx::UtilsVk::GraphicsShaderProgramAndPipelines\u003e\u003e\u003e::try_emplace_impl\u003cconst rx::vk::SamplerDesc \u0026\u003e\u0027 requested here\n  139 |     return try_emplace_impl(k, std::forward\u003cArgs\u003e(args)...);\n      |            ^\n../../third_party/abseil-cpp/absl/container/internal/raw_hash_map.h:184:28: note: in instantiation of function template specialization \u0027absl::container_internal::raw_hash_map\u003cabsl::container_internal::FlatHashMapPolicy\u003crx::vk::SamplerDesc, rx::UtilsVk::GraphicsShaderProgramAndPipelines\u003e, absl::hash_internal::Hash\u003crx::vk::SamplerDesc\u003e, std::equal_to\u003crx::vk::SamplerDesc\u003e, std::allocator\u003cstd::pair\u003cconst rx::vk::SamplerDesc, rx::UtilsVk::GraphicsShaderProgramAndPipelines\u003e\u003e\u003e::try_emplace\u003crx::vk::SamplerDesc, 0\u003e\u0027 requested here\n  184 |     return Policy::value(\u0026*try_emplace(key).first);\n      |                            ^\n../../src/libANGLE/renderer/vulkan/UtilsVk.cpp:3245:27: note: in instantiation of function template specialization \u0027absl::container_internal::raw_hash_map\u003cabsl::container_internal::FlatHashMapPolicy\u003crx::vk::SamplerDesc, rx::UtilsVk::GraphicsShaderProgramAndPipelines\u003e, absl::hash_internal::Hash\u003crx::vk::SamplerDesc\u003e, std::equal_to\u003crx::vk::SamplerDesc\u003e, std::allocator\u003cstd::pair\u003cconst rx::vk::SamplerDesc, rx::UtilsVk::GraphicsShaderProgramAndPipelines\u003e\u003e\u003e::operator[]\u003crx::vk::SamplerDesc, absl::container_internal::FlatHashMapPolicy\u003crx::vk::SamplerDesc, rx::UtilsVk::GraphicsShaderProgramAndPipelines\u003e\u003e\u0027 requested here\n 3245 |         \u0026mImageCopy[flags][samplerDesc], \u0026pipelineDesc, descriptorSet, \u0026shaderParams,\n      |                           ^\n../../buildtools/third_party/libc++/trunk/include/__memory/construct_at.h:36:38: note: candidate template ignored: substitution failure [with _Tp \u003d std::pair\u003crx::vk::SamplerDesc, rx::UtilsVk::GraphicsShaderProgramAndPipelines\u003e, _Args \u003d \u003cstd::pair\u003crx::vk::SamplerDesc, rx::UtilsVk::GraphicsShaderProgramAndPipelines\u003e\u003e]: call to implicitly-deleted copy constructor of \u0027std::pair\u003crx::vk::SamplerDesc, rx::UtilsVk::GraphicsShaderProgramAndPipelines\u003e\u0027\n   35 | template \u003cclass _Tp, class... _Args, class \u003d decltype(::new(std::declval\u003cvoid*\u003e()) _Tp(std::declval\u003c_Args\u003e()...))\u003e\n      |                                                                                    ~~~\n   36 | _LIBCPP_HIDE_FROM_ABI constexpr _Tp* construct_at(_Tp* __location, _Args\u0026\u0026... __args) {\n      |                                      ^\n```",
      "parentUuid": "dbf80fba_a1d506c7",
      "range": {
        "startLine": 650,
        "startChar": 9,
        "endLine": 650,
        "endChar": 22
      },
      "revId": "a7cf31c67b1744a784c4c25a3ad0b4d22ab46d11",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}