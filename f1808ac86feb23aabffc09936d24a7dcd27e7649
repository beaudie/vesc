{
  "comments": [
    {
      "key": {
        "uuid": "0d0350d8_76e96f4a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 16,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-05-02T20:31:13Z",
      "side": 1,
      "message": "are",
      "range": {
        "startLine": 16,
        "startChar": 68,
        "endLine": 16,
        "endChar": 70
      },
      "revId": "f1808ac86feb23aabffc09936d24a7dcd27e7649",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0de94938_8a47284c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 16,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-05-03T16:41:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0d0350d8_76e96f4a",
      "range": {
        "startLine": 16,
        "startChar": 68,
        "endLine": 16,
        "endChar": 70
      },
      "revId": "f1808ac86feb23aabffc09936d24a7dcd27e7649",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ecde0bc1_1bc5e99a",
        "filename": "src/libANGLE/renderer/vulkan/GlslangWrapper.cpp",
        "patchSetId": 4
      },
      "lineNbr": 50,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-05-02T17:45:31Z",
      "side": 1,
      "message": "maybe ConstStrLen for clarity?",
      "range": {
        "startLine": 50,
        "startChar": 33,
        "endLine": 50,
        "endChar": 39
      },
      "revId": "f1808ac86feb23aabffc09936d24a7dcd27e7649",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "18e2752f_f435ac5d",
        "filename": "src/libANGLE/renderer/vulkan/GlslangWrapper.cpp",
        "patchSetId": 4
      },
      "lineNbr": 50,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-05-03T16:41:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ecde0bc1_1bc5e99a",
      "range": {
        "startLine": 50,
        "startChar": 33,
        "endLine": 50,
        "endChar": 39
      },
      "revId": "f1808ac86feb23aabffc09936d24a7dcd27e7649",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e1564e4_31cfccd1",
        "filename": "src/libANGLE/renderer/vulkan/GlslangWrapper.cpp",
        "patchSetId": 4
      },
      "lineNbr": 56,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-05-02T20:31:13Z",
      "side": 1,
      "message": "maybe also static_assert(N\u003e0)?",
      "range": {
        "startLine": 56,
        "startChar": 11,
        "endLine": 56,
        "endChar": 16
      },
      "revId": "f1808ac86feb23aabffc09936d24a7dcd27e7649",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "91f1549b_38b8bb7f",
        "filename": "src/libANGLE/renderer/vulkan/GlslangWrapper.cpp",
        "patchSetId": 4
      },
      "lineNbr": 56,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-05-03T16:41:47Z",
      "side": 1,
      "message": "`Type (\u0026)[0]` is an illegal declaration in C++. From C++11, section 8.3.4, regarding a declaration `D1 [expression]`:\n\n\u003e The expression is erroneous if:\n\u003e â€” its value before converting to std::size_t or, in the case of an expression of class type, before application of the second standard conversion (13.3.3.1.2) is less than or equal to zero;\n\nAdded the static_assert anyway though.",
      "parentUuid": "4e1564e4_31cfccd1",
      "range": {
        "startLine": 56,
        "startChar": 11,
        "endLine": 56,
        "endChar": 16
      },
      "revId": "f1808ac86feb23aabffc09936d24a7dcd27e7649",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f37b9b48_0805d654",
        "filename": "src/libANGLE/renderer/vulkan/GlslangWrapper.cpp",
        "patchSetId": 4
      },
      "lineNbr": 107,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-05-02T17:45:31Z",
      "side": 1,
      "message": "very minor observation, but Chromium recommends |varName|\n\nhttps://chromium.googlesource.com/chromium/src/+/master/styleguide/c++/c++-dos-and-donts.md#comment-style. Personally I would use \u0027 or \" over ` to be consistent.",
      "range": {
        "startLine": 107,
        "startChar": 53,
        "endLine": 107,
        "endChar": 64
      },
      "revId": "f1808ac86feb23aabffc09936d24a7dcd27e7649",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "29021e16_a2ce4252",
        "filename": "src/libANGLE/renderer/vulkan/GlslangWrapper.cpp",
        "patchSetId": 4
      },
      "lineNbr": 107,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-05-03T16:41:47Z",
      "side": 1,
      "message": "Done, and will do from now on.",
      "parentUuid": "f37b9b48_0805d654",
      "range": {
        "startLine": 107,
        "startChar": 53,
        "endLine": 107,
        "endChar": 64
      },
      "revId": "f1808ac86feb23aabffc09936d24a7dcd27e7649",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "57c2a739_0dc971ef",
        "filename": "src/libANGLE/renderer/vulkan/GlslangWrapper.cpp",
        "patchSetId": 4
      },
      "lineNbr": 113,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-05-02T17:45:31Z",
      "side": 1,
      "message": "is it possible to replace this with a layout substitution?",
      "range": {
        "startLine": 113,
        "startChar": 18,
        "endLine": 113,
        "endChar": 46
      },
      "revId": "f1808ac86feb23aabffc09936d24a7dcd27e7649",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "062cb36e_19a8ef1c",
        "filename": "src/libANGLE/renderer/vulkan/GlslangWrapper.cpp",
        "patchSetId": 4
      },
      "lineNbr": 113,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-05-03T16:41:47Z",
      "side": 1,
      "message": "Yes, I was contemplating doing the same. Done",
      "parentUuid": "57c2a739_0dc971ef",
      "range": {
        "startLine": 113,
        "startChar": 18,
        "endLine": 113,
        "endChar": 46
      },
      "revId": "f1808ac86feb23aabffc09936d24a7dcd27e7649",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3975e8a7_58b00c5f",
        "filename": "src/libANGLE/renderer/vulkan/GlslangWrapper.cpp",
        "patchSetId": 4
      },
      "lineNbr": 120,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-05-02T17:45:31Z",
      "side": 1,
      "message": "TokenType? Technically this is a tokenizer, similar to http://www.cplusplus.com/reference/cstring/strtok/",
      "range": {
        "startLine": 120,
        "startChar": 15,
        "endLine": 120,
        "endChar": 30
      },
      "revId": "f1808ac86feb23aabffc09936d24a7dcd27e7649",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1f94e2cb_35c8a9df",
        "filename": "src/libANGLE/renderer/vulkan/GlslangWrapper.cpp",
        "patchSetId": 4
      },
      "lineNbr": 120,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-05-03T16:41:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3975e8a7_58b00c5f",
      "range": {
        "startLine": 120,
        "startChar": 15,
        "endLine": 120,
        "endChar": 30
      },
      "revId": "f1808ac86feb23aabffc09936d24a7dcd27e7649",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aad65275_aa706b3b",
        "filename": "src/libANGLE/renderer/vulkan/GlslangWrapper.cpp",
        "patchSetId": 4
      },
      "lineNbr": 132,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-05-02T17:45:31Z",
      "side": 1,
      "message": "Token?",
      "range": {
        "startLine": 132,
        "startChar": 11,
        "endLine": 132,
        "endChar": 22
      },
      "revId": "f1808ac86feb23aabffc09936d24a7dcd27e7649",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eeb41896_f1118b5e",
        "filename": "src/libANGLE/renderer/vulkan/GlslangWrapper.cpp",
        "patchSetId": 4
      },
      "lineNbr": 132,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-05-03T16:41:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "aad65275_aa706b3b",
      "range": {
        "startLine": 132,
        "startChar": 11,
        "endLine": 132,
        "endChar": 22
      },
      "revId": "f1808ac86feb23aabffc09936d24a7dcd27e7649",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9807bf24_b163a6da",
        "filename": "src/libANGLE/renderer/vulkan/GlslangWrapper.cpp",
        "patchSetId": 4
      },
      "lineNbr": 158,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-05-02T17:45:31Z",
      "side": 1,
      "message": "GetCharCount? GetSubStringLen?",
      "range": {
        "startLine": 158,
        "startChar": 23,
        "endLine": 158,
        "endChar": 37
      },
      "revId": "f1808ac86feb23aabffc09936d24a7dcd27e7649",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5e0dfc59_69068fb8",
        "filename": "src/libANGLE/renderer/vulkan/GlslangWrapper.cpp",
        "patchSetId": 4
      },
      "lineNbr": 158,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-05-02T17:45:31Z",
      "side": 1,
      "message": "nit: probably can s/std::string::size_type/size_t/g to be a bit more concise. I believe the only possible issue is using a few extra bytes on some imaginary platform.",
      "range": {
        "startLine": 158,
        "startChar": 38,
        "endLine": 158,
        "endChar": 60
      },
      "revId": "f1808ac86feb23aabffc09936d24a7dcd27e7649",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a15568ec_cf87889b",
        "filename": "src/libANGLE/renderer/vulkan/GlslangWrapper.cpp",
        "patchSetId": 4
      },
      "lineNbr": 158,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-05-03T16:41:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5e0dfc59_69068fb8",
      "range": {
        "startLine": 158,
        "startChar": 38,
        "endLine": 158,
        "endChar": 60
      },
      "revId": "f1808ac86feb23aabffc09936d24a7dcd27e7649",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "32e24818_3a381b81",
        "filename": "src/libANGLE/renderer/vulkan/GlslangWrapper.cpp",
        "patchSetId": 4
      },
      "lineNbr": 158,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-05-03T16:41:47Z",
      "side": 1,
      "message": "Should have been `GetSomethingUsableAsTheCountArgumentToTheConstructorOfStdString`! Function removed in refactoring.",
      "parentUuid": "9807bf24_b163a6da",
      "range": {
        "startLine": 158,
        "startChar": 23,
        "endLine": 158,
        "endChar": 37
      },
      "revId": "f1808ac86feb23aabffc09936d24a7dcd27e7649",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "600165e1_3835eef4",
        "filename": "src/libANGLE/renderer/vulkan/GlslangWrapper.cpp",
        "patchSetId": 4
      },
      "lineNbr": 233,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-05-02T17:45:31Z",
      "side": 1,
      "message": "What about the idea of splitting the string along @@ with angle::SplitString? \"@@\" is not a symbol that\u0027s valid in the source file. And all comments are stripped. See string_utils.h. If there\u0027s any way to abstract the string functionality out of this file into simple string utils I would recommend keeping this file a bit simpler.",
      "range": {
        "startLine": 233,
        "startChar": 51,
        "endLine": 233,
        "endChar": 55
      },
      "revId": "f1808ac86feb23aabffc09936d24a7dcd27e7649",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fca8d967_22f76589",
        "filename": "src/libANGLE/renderer/vulkan/GlslangWrapper.cpp",
        "patchSetId": 4
      },
      "lineNbr": 233,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-05-02T20:31:13Z",
      "side": 1,
      "message": "+1\nI guess another option would be bison/flex?\nI also wonder if SPIRV-Tools can provide the functionality ANGLE uses here?",
      "parentUuid": "600165e1_3835eef4",
      "range": {
        "startLine": 233,
        "startChar": 51,
        "endLine": 233,
        "endChar": 55
      },
      "revId": "f1808ac86feb23aabffc09936d24a7dcd27e7649",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "90f3488c_d1111331",
        "filename": "src/libANGLE/renderer/vulkan/GlslangWrapper.cpp",
        "patchSetId": 4
      },
      "lineNbr": 233,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-05-03T16:41:47Z",
      "side": 1,
      "message": "@Yuly, a full fledged lexer would be overkill here (at least since it does regex matching).\n\n@Jamie, angle::SplitString can end up being awkward as I still need to tokenize what\u0027s inside () too (and change @@ to @ to be a single char, though that\u0027s no biggie). I opted instead to add a new utility to get the prefix of a string up to the first match of something, and have this code still process the string in a single pass.",
      "parentUuid": "fca8d967_22f76589",
      "range": {
        "startLine": 233,
        "startChar": 51,
        "endLine": 233,
        "endChar": 55
      },
      "revId": "f1808ac86feb23aabffc09936d24a7dcd27e7649",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04af9c6d_79db5da5",
        "filename": "src/libANGLE/renderer/vulkan/GlslangWrapper.cpp",
        "patchSetId": 4
      },
      "lineNbr": 233,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-05-03T17:01:07Z",
      "side": 1,
      "message": "How about...\n\n- We add a method similar to angle::SplitString that splits by a substring instead of a single char.\n- Instead of using () for the layout payload you use a single split delimiter. Everything after that delimiter is the substitution string (with whitespace trimmed)\n- You call the new SplitBySubString method twice - one at the top level to split by @@ and once in the inner scope to split by the payload delimiter.\n\nAll that to say it would be nice if the string handling logic was separated from GlslangWrapper and put in string_utils.h.",
      "parentUuid": "90f3488c_d1111331",
      "range": {
        "startLine": 233,
        "startChar": 51,
        "endLine": 233,
        "endChar": 55
      },
      "revId": "f1808ac86feb23aabffc09936d24a7dcd27e7649",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2337265b_36ab37e5",
        "filename": "src/libANGLE/renderer/vulkan/GlslangWrapper.cpp",
        "patchSetId": 4
      },
      "lineNbr": 233,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-05-03T19:20:08Z",
      "side": 1,
      "message": "Take a look at the current code of this function. Without comments and empty lines, it\u0027s about only 30 lines of code and it looks pretty straightforward to me.",
      "parentUuid": "04af9c6d_79db5da5",
      "range": {
        "startLine": 233,
        "startChar": 51,
        "endLine": 233,
        "endChar": 55
      },
      "revId": "f1808ac86feb23aabffc09936d24a7dcd27e7649",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "12c4f12f_944c0993",
        "filename": "src/libANGLE/renderer/vulkan/GlslangWrapper.cpp",
        "patchSetId": 4
      },
      "lineNbr": 590,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-05-02T17:45:31Z",
      "side": 1,
      "message": "this is nice, that it doesn\u0027t change the way the code works in these places!",
      "range": {
        "startLine": 590,
        "startChar": 4,
        "endLine": 590,
        "endChar": 16
      },
      "revId": "f1808ac86feb23aabffc09936d24a7dcd27e7649",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f4fd09ca_0ba4a183",
        "filename": "src/libANGLE/renderer/vulkan/GlslangWrapper.cpp",
        "patchSetId": 4
      },
      "lineNbr": 590,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-05-03T16:41:47Z",
      "side": 1,
      "message": "Yeap! That was intentional.",
      "parentUuid": "12c4f12f_944c0993",
      "range": {
        "startLine": 590,
        "startChar": 4,
        "endLine": 590,
        "endChar": 16
      },
      "revId": "f1808ac86feb23aabffc09936d24a7dcd27e7649",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}