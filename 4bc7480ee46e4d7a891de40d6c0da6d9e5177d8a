{
  "comments": [
    {
      "key": {
        "uuid": "ba4b7745_a6bc9e0f",
        "filename": "src/common/utilities.cpp",
        "patchSetId": 22
      },
      "lineNbr": 131,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-12-16T15:26:03Z",
      "side": 1,
      "message": "I think these need to go in PrintVariable in shader_translator.cpp as well.",
      "range": {
        "startLine": 131,
        "startChar": 11,
        "endLine": 131,
        "endChar": 36
      },
      "revId": "4bc7480ee46e4d7a891de40d6c0da6d9e5177d8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba4b7745_c6c1a294",
        "filename": "src/compiler/translator/glslang_tab.h",
        "patchSetId": 22
      },
      "lineNbr": 1,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-12-16T15:26:03Z",
      "side": 1,
      "message": "please update your bison to 3.0.4",
      "range": {
        "startLine": 1,
        "startChar": 26,
        "endLine": 1,
        "endChar": 40
      },
      "revId": "4bc7480ee46e4d7a891de40d6c0da6d9e5177d8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba4b7745_e69dc6a5",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 22
      },
      "lineNbr": 3710,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-12-16T15:26:03Z",
      "side": 1,
      "message": "geoff: Do you think the multisample position should be a part of the Caps structure? Not sure if there\u0027s another query that works similarly.",
      "range": {
        "startLine": 3710,
        "startChar": 33,
        "endLine": 3710,
        "endChar": 49
      },
      "revId": "4bc7480ee46e4d7a891de40d6c0da6d9e5177d8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba4b7745_c6f9a2a7",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 22
      },
      "lineNbr": 3710,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2016-12-16T16:01:12Z",
      "side": 1,
      "message": "Putting it in the Caps structure would seem good, encodes the fact that the sample positions are constants for a context.",
      "parentUuid": "ba4b7745_e69dc6a5",
      "revId": "4bc7480ee46e4d7a891de40d6c0da6d9e5177d8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba4b7745_e6a786a0",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 22
      },
      "lineNbr": 3710,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2016-12-16T17:31:43Z",
      "side": 1,
      "message": "I don\u0027t think caps, but this state is in \"Table 20.49: Framebuffer Dependent Values\" so it should be a property of the current draw framebuffer.  We should add method to gl::Framebuffer and rx::FramebufferImpl:\n\n  Error getSamplePosition(size_t index, GLfloat* xy) const\n\nYou can then have a switch here (only one case so far) and call the method on the current draw framebuffer.",
      "parentUuid": "ba4b7745_e69dc6a5",
      "range": {
        "startLine": 3710,
        "startChar": 33,
        "endLine": 3710,
        "endChar": 49
      },
      "revId": "4bc7480ee46e4d7a891de40d6c0da6d9e5177d8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba4b7745_c6a8c2c6",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 22
      },
      "lineNbr": 3712,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-12-16T15:26:03Z",
      "side": 1,
      "message": "don\u0027t return an error here.",
      "range": {
        "startLine": 3712,
        "startChar": 3,
        "endLine": 3712,
        "endChar": 25
      },
      "revId": "4bc7480ee46e4d7a891de40d6c0da6d9e5177d8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba4b7745_e6c6a6a9",
        "filename": "src/libANGLE/Context.h",
        "patchSetId": 22
      },
      "lineNbr": 585,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-12-16T15:26:03Z",
      "side": 1,
      "message": "never return errors from context api methods. handle them inside the context.",
      "range": {
        "startLine": 585,
        "startChar": 4,
        "endLine": 585,
        "endChar": 9
      },
      "revId": "4bc7480ee46e4d7a891de40d6c0da6d9e5177d8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba4b7745_06a3aae6",
        "filename": "src/libANGLE/ImageIndex.cpp",
        "patchSetId": 22
      },
      "lineNbr": 67,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-12-16T15:26:03Z",
      "side": 1,
      "message": "remove this ASSERT, and remove the level parameter.",
      "range": {
        "startLine": 67,
        "startChar": 4,
        "endLine": 67,
        "endChar": 10
      },
      "revId": "4bc7480ee46e4d7a891de40d6c0da6d9e5177d8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba4b7745_e1721050",
        "filename": "src/libANGLE/ImageIndex.cpp",
        "patchSetId": 22
      },
      "lineNbr": 67,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2016-12-16T17:31:43Z",
      "side": 1,
      "message": "+1, you can add the assert in Context::framebufferTexture2D.",
      "parentUuid": "ba4b7745_06a3aae6",
      "range": {
        "startLine": 67,
        "startChar": 4,
        "endLine": 67,
        "endChar": 10
      },
      "revId": "4bc7480ee46e4d7a891de40d6c0da6d9e5177d8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba4b7745_26b8ae0e",
        "filename": "src/libANGLE/Texture.cpp",
        "patchSetId": 22
      },
      "lineNbr": 1025,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-12-16T15:26:03Z",
      "side": 1,
      "message": "why would D3D11 have a null mTexture?",
      "range": {
        "startLine": 1021,
        "startChar": 4,
        "endLine": 1025,
        "endChar": 5
      },
      "revId": "4bc7480ee46e4d7a891de40d6c0da6d9e5177d8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba4b7745_21217814",
        "filename": "src/libANGLE/Texture.cpp",
        "patchSetId": 22
      },
      "lineNbr": 1025,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2016-12-16T17:31:43Z",
      "side": 1,
      "message": "My guess is that the zero or incomplete texture can\u0027t be created yet.  I don\u0027t think this is the right solution though, it breaks a lot of assumptions in this class.  Can you add a TextureD3D_2DMultisample that no-ops everything?",
      "parentUuid": "ba4b7745_26b8ae0e",
      "range": {
        "startLine": 1021,
        "startChar": 4,
        "endLine": 1025,
        "endChar": 5
      },
      "revId": "4bc7480ee46e4d7a891de40d6c0da6d9e5177d8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba4b7745_612b80f4",
        "filename": "src/libANGLE/Texture.cpp",
        "patchSetId": 22
      },
      "lineNbr": 1031,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2016-12-16T17:31:43Z",
      "side": 1,
      "message": "It has 1 level.",
      "range": {
        "startLine": 1031,
        "startChar": 30,
        "endLine": 1031,
        "endChar": 52
      },
      "revId": "4bc7480ee46e4d7a891de40d6c0da6d9e5177d8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba4b7745_a1f3a87d",
        "filename": "src/libANGLE/Texture.cpp",
        "patchSetId": 22
      },
      "lineNbr": 1033,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2016-12-16T17:31:43Z",
      "side": 1,
      "message": "Just 0 is fine (0u if the computer warns)",
      "range": {
        "startLine": 1033,
        "startChar": 32,
        "endLine": 1033,
        "endChar": 54
      },
      "revId": "4bc7480ee46e4d7a891de40d6c0da6d9e5177d8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba4b7745_016e343e",
        "filename": "src/libANGLE/Texture.h",
        "patchSetId": 22
      },
      "lineNbr": 143,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2016-12-16T17:31:43Z",
      "side": 1,
      "message": "Samples should be a property of the ImageDesc struct, it is queried with GetTexLevelParameter.  I realize that it\u0027s not currently possible to have levels with different numbers of samples but this is more in line with the spec.",
      "range": {
        "startLine": 143,
        "startChar": 4,
        "endLine": 143,
        "endChar": 20
      },
      "revId": "4bc7480ee46e4d7a891de40d6c0da6d9e5177d8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba4b7745_41e75c27",
        "filename": "src/libANGLE/Texture.h",
        "patchSetId": 22
      },
      "lineNbr": 245,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2016-12-16T17:31:43Z",
      "side": 1,
      "message": "Once this is part of the ImageDesc, add a level parameter and move it with the getWidth/Height/Depth functions below.",
      "range": {
        "startLine": 245,
        "startChar": 4,
        "endLine": 245,
        "endChar": 37
      },
      "revId": "4bc7480ee46e4d7a891de40d6c0da6d9e5177d8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba4b7745_41503c79",
        "filename": "src/libANGLE/Texture.h",
        "patchSetId": 22
      },
      "lineNbr": 320,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2016-12-16T17:31:43Z",
      "side": 1,
      "message": "nit:\n  \n   const Extents \u0026size\n\n(cpp and Impl too)",
      "range": {
        "startLine": 320,
        "startChar": 32,
        "endLine": 320,
        "endChar": 48
      },
      "revId": "4bc7480ee46e4d7a891de40d6c0da6d9e5177d8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba4b7745_e6d0660e",
        "filename": "src/libANGLE/renderer/TextureImpl.cpp",
        "patchSetId": 22
      },
      "lineNbr": 50,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2016-12-16T16:01:12Z",
      "side": 1,
      "message": "With the function \u003d 0, this would disappear.",
      "revId": "4bc7480ee46e4d7a891de40d6c0da6d9e5177d8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba4b7745_86e79af4",
        "filename": "src/libANGLE/renderer/TextureImpl.h",
        "patchSetId": 22
      },
      "lineNbr": 80,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2016-12-16T16:01:12Z",
      "side": 1,
      "message": "make this function \u003d 0, since this isn\u0027t an extension.",
      "revId": "4bc7480ee46e4d7a891de40d6c0da6d9e5177d8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba4b7745_816ce4b2",
        "filename": "src/libANGLE/renderer/gl/FramebufferGL.cpp",
        "patchSetId": 22
      },
      "lineNbr": 108,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2016-12-16T17:31:43Z",
      "side": 1,
      "message": "Merge this with the GL_TEXTURE_2D case and pass texture-\u003egetTarget() instead of GL_TEXTURE_2D.",
      "range": {
        "startLine": 103,
        "startChar": 12,
        "endLine": 108,
        "endChar": 13
      },
      "revId": "4bc7480ee46e4d7a891de40d6c0da6d9e5177d8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba4b7745_46b5b213",
        "filename": "src/libANGLE/renderer/gl/RendererGL.cpp",
        "patchSetId": 22
      },
      "lineNbr": 596,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-12-16T15:26:03Z",
      "side": 1,
      "message": "I don\u0027t think we call getError after calling the driver. We use the Debug layers. Remove this.",
      "range": {
        "startLine": 592,
        "startChar": 3,
        "endLine": 596,
        "endChar": 5
      },
      "revId": "4bc7480ee46e4d7a891de40d6c0da6d9e5177d8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba4b7745_c6e0c2e5",
        "filename": "src/libANGLE/renderer/gl/TextureGL.cpp",
        "patchSetId": 22
      },
      "lineNbr": 823,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2016-12-16T16:01:12Z",
      "side": 1,
      "message": "No need to check the function pointer here, ES3.1 won\u0027t be exposed if this is not present.",
      "revId": "4bc7480ee46e4d7a891de40d6c0da6d9e5177d8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba4b7745_66b2b62e",
        "filename": "src/libANGLE/validationES.cpp",
        "patchSetId": 22
      },
      "lineNbr": 1291,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-12-16T15:26:03Z",
      "side": 1,
      "message": "I think you have to validate the context version here, otherwise the query will work in ES 2 contexts. please add a test for this.",
      "range": {
        "startLine": 1291,
        "startChar": 13,
        "endLine": 1291,
        "endChar": 38
      },
      "revId": "4bc7480ee46e4d7a891de40d6c0da6d9e5177d8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba4b7745_86af9ac5",
        "filename": "src/libANGLE/validationES.cpp",
        "patchSetId": 22
      },
      "lineNbr": 3570,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-12-16T15:26:03Z",
      "side": 1,
      "message": "same comment, please also add a test trying to set this in ES2 or ES3.",
      "range": {
        "startLine": 3570,
        "startChar": 17,
        "endLine": 3570,
        "endChar": 42
      },
      "revId": "4bc7480ee46e4d7a891de40d6c0da6d9e5177d8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba4b7745_06f56ace",
        "filename": "src/libANGLE/validationES31.cpp",
        "patchSetId": 22
      },
      "lineNbr": 199,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-12-16T15:26:03Z",
      "side": 1,
      "message": "nit: must be",
      "range": {
        "startLine": 199,
        "startChar": 60,
        "endLine": 199,
        "endChar": 66
      },
      "revId": "4bc7480ee46e4d7a891de40d6c0da6d9e5177d8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba4b7745_46e77227",
        "filename": "src/libANGLE/validationES31.cpp",
        "patchSetId": 22
      },
      "lineNbr": 203,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-12-16T15:26:03Z",
      "side": 1,
      "message": "missing return false; can you add a test for this?",
      "range": {
        "startLine": 203,
        "startChar": 8,
        "endLine": 203,
        "endChar": 13
      },
      "revId": "4bc7480ee46e4d7a891de40d6c0da6d9e5177d8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba4b7745_c16d0c75",
        "filename": "src/libANGLE/validationES31.cpp",
        "patchSetId": 22
      },
      "lineNbr": 203,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2016-12-16T16:01:12Z",
      "side": 1,
      "message": "Happens three other times in this function.",
      "parentUuid": "ba4b7745_46e77227",
      "revId": "4bc7480ee46e4d7a891de40d6c0da6d9e5177d8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba4b7745_26ea6ef2",
        "filename": "src/libANGLE/validationES31.cpp",
        "patchSetId": 22
      },
      "lineNbr": 205,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-12-16T15:26:03Z",
      "side": 1,
      "message": "Width and height must be positive.",
      "range": {
        "startLine": 205,
        "startChar": 70,
        "endLine": 205,
        "endChar": 84
      },
      "revId": "4bc7480ee46e4d7a891de40d6c0da6d9e5177d8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba4b7745_66e47622",
        "filename": "src/libANGLE/validationES31.cpp",
        "patchSetId": 22
      },
      "lineNbr": 213,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-12-16T15:26:03Z",
      "side": 1,
      "message": "Width and height must be less than or equal to",
      "range": {
        "startLine": 213,
        "startChar": 53,
        "endLine": 213,
        "endChar": 68
      },
      "revId": "4bc7480ee46e4d7a891de40d6c0da6d9e5177d8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba4b7745_86e15a13",
        "filename": "src/libANGLE/validationES31.cpp",
        "patchSetId": 22
      },
      "lineNbr": 218,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-12-16T15:26:03Z",
      "side": 1,
      "message": "may not be",
      "range": {
        "startLine": 218,
        "startChar": 62,
        "endLine": 218,
        "endChar": 69
      },
      "revId": "4bc7480ee46e4d7a891de40d6c0da6d9e5177d8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba4b7745_a6501eef",
        "filename": "src/libANGLE/validationES31.cpp",
        "patchSetId": 22
      },
      "lineNbr": 225,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-12-16T15:26:03Z",
      "side": 1,
      "message": "Format must be",
      "range": {
        "startLine": 225,
        "startChar": 55,
        "endLine": 225,
        "endChar": 62
      },
      "revId": "4bc7480ee46e4d7a891de40d6c0da6d9e5177d8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba4b7745_0132b4b7",
        "filename": "src/libANGLE/validationES31.cpp",
        "patchSetId": 22
      },
      "lineNbr": 248,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2016-12-16T17:31:43Z",
      "side": 1,
      "message": "We have utilities that should cover this:\n\n   InternalFormat \u0026formatInfo \u003d GetInternalFormatInfo(internalformat);\n   if (formatInfo.pixelBytes \u003d\u003d 0)\n   {\n      error\n   }",
      "range": {
        "startLine": 232,
        "startChar": 3,
        "endLine": 248,
        "endChar": 5
      },
      "revId": "4bc7480ee46e4d7a891de40d6c0da6d9e5177d8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba4b7745_26650ec8",
        "filename": "src/libANGLE/validationES31.cpp",
        "patchSetId": 22
      },
      "lineNbr": 286,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-12-16T15:26:03Z",
      "side": 1,
      "message": "must be",
      "range": {
        "startLine": 286,
        "startChar": 59,
        "endLine": 286,
        "endChar": 65
      },
      "revId": "4bc7480ee46e4d7a891de40d6c0da6d9e5177d8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba4b7745_c1942c23",
        "filename": "src/libANGLE/validationES31.cpp",
        "patchSetId": 22
      },
      "lineNbr": 290,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2016-12-16T16:01:12Z",
      "side": 1,
      "message": "What the spec means is GL_INVALID_VALUE is generated if index is \u003e\u003d glGetInteger(GL_SAMPLES)",
      "revId": "4bc7480ee46e4d7a891de40d6c0da6d9e5177d8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba4b7745_466212c1",
        "filename": "src/libANGLE/validationES31.cpp",
        "patchSetId": 22
      },
      "lineNbr": 293,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-12-16T15:26:03Z",
      "side": 1,
      "message": "must be less than",
      "range": {
        "startLine": 293,
        "startChar": 42,
        "endLine": 293,
        "endChar": 69
      },
      "revId": "4bc7480ee46e4d7a891de40d6c0da6d9e5177d8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba4b7745_061e4a48",
        "filename": "src/libGLESv2/entry_points_gles_3_1.cpp",
        "patchSetId": 22
      },
      "lineNbr": 1022,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-12-16T15:26:03Z",
      "side": 1,
      "message": "this should just be named \"ValidateTexStorage2dMultisample\" to match the API",
      "range": {
        "startLine": 1022,
        "startChar": 13,
        "endLine": 1022,
        "endChar": 54
      },
      "revId": "4bc7480ee46e4d7a891de40d6c0da6d9e5177d8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba4b7745_660d561a",
        "filename": "src/libGLESv2/entry_points_gles_3_1.cpp",
        "patchSetId": 22
      },
      "lineNbr": 1035,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-12-16T15:26:03Z",
      "side": 1,
      "message": "put all this in a method Context::texStorage2DMultisample(target, samples, etc...)",
      "range": {
        "startLine": 1027,
        "startChar": 8,
        "endLine": 1035,
        "endChar": 9
      },
      "revId": "4bc7480ee46e4d7a891de40d6c0da6d9e5177d8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba4b7745_860a3a01",
        "filename": "src/libGLESv2/entry_points_gles_3_1.cpp",
        "patchSetId": 22
      },
      "lineNbr": 1046,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-12-16T15:26:03Z",
      "side": 1,
      "message": "name this ValidateGetMultisamplefv.",
      "range": {
        "startLine": 1046,
        "startChar": 43,
        "endLine": 1046,
        "endChar": 65
      },
      "revId": "4bc7480ee46e4d7a891de40d6c0da6d9e5177d8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba4b7745_a6f57ed3",
        "filename": "src/libGLESv2/entry_points_gles_3_1.cpp",
        "patchSetId": 22
      },
      "lineNbr": 1056,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-12-16T15:26:03Z",
      "side": 1,
      "message": "don\u0027t handle the error here.",
      "range": {
        "startLine": 1051,
        "startChar": 7,
        "endLine": 1056,
        "endChar": 9
      },
      "revId": "4bc7480ee46e4d7a891de40d6c0da6d9e5177d8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba4b7745_c6fa82c2",
        "filename": "src/tests/deqp_support/deqp_gles31_test_expectations.txt",
        "patchSetId": 22
      },
      "lineNbr": 55,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-12-16T15:26:03Z",
      "side": 1,
      "message": "shouldn\u0027t these be in a different issue? do some of the tests from multisample.* pass now?",
      "range": {
        "startLine": 55,
        "startChar": 0,
        "endLine": 55,
        "endChar": 4
      },
      "revId": "4bc7480ee46e4d7a891de40d6c0da6d9e5177d8a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}