{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "a59cddaf_947daf7c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1531247
      },
      "writtenOn": "2022-09-19T18:34:40Z",
      "side": 1,
      "message": "This seems error prone to me.. wdyt about alternatives?\na) ninja style `run_perf_tests.py out/Android ...`\nb) android style, generate a wrapper for it like `out/*/run_perf_tests`? (though not sure about platforms)",
      "revId": "630cab8e086aa5ebb41bbbc533403ff644042f8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f8c397d9_0d292a48",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1531247
      },
      "writtenOn": "2022-09-19T18:35:45Z",
      "side": 1,
      "message": "..platforms that don\u0027t like scripts very much, Windows. `run_perf_tests.cmd`?",
      "parentUuid": "a59cddaf_947daf7c",
      "revId": "630cab8e086aa5ebb41bbbc533403ff644042f8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ba6850ed_62df7340",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-09-19T18:43:20Z",
      "side": 1,
      "message": "Hey Roman, what are the advantages of the approaches you list there? I like to run it this way because I can easily run the script from any directory. I don\u0027t think there\u0027s much of a risk in causing harm as fragile as the script looks. I have coded a similar approach in other ANGLE scripts as well, see perf_test_runner.py in scripts/. Works well for me!",
      "parentUuid": "f8c397d9_0d292a48",
      "revId": "630cab8e086aa5ebb41bbbc533403ff644042f8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "93d5585d_523de6f0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1531247
      },
      "writtenOn": "2022-09-19T18:48:29Z",
      "side": 1,
      "message": "If I have `out/Android` and `out/Android2`, this will run one or the other based on whichever binary has the newest mtime, right? This allows for obscure mistakes like accidentally building the wrong binary then assuming it\u0027s running only to find later that it was running the wrong thing.\n\nApproaches that I listed avoid this by being explicit about what you want to run and result in an error instead of surprising behavior if the intended binary is missing.",
      "parentUuid": "ba6850ed_62df7340",
      "revId": "630cab8e086aa5ebb41bbbc533403ff644042f8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b5ef85a0_128cbb36",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-09-19T18:52:57Z",
      "side": 1,
      "message": "Right, that\u0027s the intent of the script. As I run this script a lot, it saves me time and effort to not have to specify a directory. If we run into a costly issue like you described, I\u0027d be happy to believe that situation might occur. As it stands I haven\u0027t had that problem locally. Especially as the script prints which directory it\u0027s using as it runs.",
      "parentUuid": "93d5585d_523de6f0",
      "revId": "630cab8e086aa5ebb41bbbc533403ff644042f8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7a2b1130_bc0cebfa",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-09-19T18:54:19Z",
      "side": 1,
      "message": "Oh, and you are right that updating the wrapper script would be a good direction to explore. As it stands though, this is a solution that\u0027s easy for me to implement and doesn\u0027t have the issue of needing a separate way to run perf tests vs gold tests.",
      "parentUuid": "b5ef85a0_128cbb36",
      "revId": "630cab8e086aa5ebb41bbbc533403ff644042f8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f992fb6a_3653fbed",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1531247
      },
      "writtenOn": "2022-09-19T19:04:05Z",
      "side": 1,
      "message": "Maybe this could be hidden behind `--find-newest-binary` defaulting to false, or like an env var, so that it allows for convenience without creating surprises?\n\nJust my 2c, leaving this to Cody.",
      "parentUuid": "7a2b1130_bc0cebfa",
      "revId": "630cab8e086aa5ebb41bbbc533403ff644042f8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "65e3cce1_9ec53079",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-09-19T19:21:13Z",
      "side": 1,
      "message": "Env var is an option, though not as convenient because it would mean I\u0027d need to maintain this between multiple development environments.\n\nWhat if I\u0027d agree to pursue the wrapper script idea if you\u0027ll approve this CL? Having one reviewer abstain from reviewing does not seem to be the process working as intended.",
      "parentUuid": "f992fb6a_3653fbed",
      "revId": "630cab8e086aa5ebb41bbbc533403ff644042f8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e4492dc1_02571152",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1531247
      },
      "writtenOn": "2022-09-19T19:35:13Z",
      "side": 1,
      "message": "I mean, if Cody also thinks we should enable this by default then so do I :)",
      "parentUuid": "65e3cce1_9ec53079",
      "revId": "630cab8e086aa5ebb41bbbc533403ff644042f8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cebcc6a2_6360f752",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2022-09-19T20:16:21Z",
      "side": 1,
      "message": "Roman, how do you specify the target directory now?  I agree navigating to the dir each time is not efficient.  Could we have a `-C` or similar argument, like we use with `gen args`?  I\u0027d be okay with scanning for the default when the argument isn\u0027t provided, I\u0027ve used that with the gfxbench scripts we have.  Also, I\u0027m accustomed to always specifying which dir contains my output files, i.e.:\n`out/AndroidDebug/angle_perftests --gtest_filter\u003dblah`",
      "parentUuid": "e4492dc1_02571152",
      "revId": "630cab8e086aa5ebb41bbbc533403ff644042f8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e381cf04_a0092808",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1531247
      },
      "writtenOn": "2022-09-19T20:29:34Z",
      "side": 1,
      "message": "I do this: `(cd out/Android; ../../src/tests/run_perf_tests.py {flags})`\n\nI\u0027d expect it to break if the binary doesn\u0027t exist rather than run some other `out/*` binary instead.\n\nSome variation of `src/tests/run_perf_tests.py -C out/Android` (I also suggested something like this above) would make it more convenient for me. I personally would always specify the flag rather than rely on mtime based discovery because I know it happened to me before that I built the wrong binary and I\u0027d rather have the run fail explicitly than run some unrelated build that I happen to have in `out/`.",
      "parentUuid": "cebcc6a2_6360f752",
      "revId": "630cab8e086aa5ebb41bbbc533403ff644042f8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "431c3cb0_d30f5e16",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2022-09-19T20:46:49Z",
      "side": 1,
      "message": "I would lean towards always requiring the output directory as a parameter, if that can be supported (can it, without a wrapper script?).  Jamie, can you be just as efficient that way?  Getting incorrect results by accidentally using the wrong build is pretty scary.\n\nAnother idea could be a prompt that requires confirmation to use the discovered binary, i.e.:\n```\nFound the latest binaries in `out/AndroidDebug`.\nUse this build? (Y/N):\n```",
      "parentUuid": "e381cf04_a0092808",
      "revId": "630cab8e086aa5ebb41bbbc533403ff644042f8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f0bd2d87_3334f08f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-09-20T15:22:50Z",
      "side": 1,
      "message": "There\u0027s no real alternative to wrapper script. Is there anything I can do to unblock this change so I don\u0027t have to carry it around in my local stack until I get a wrapper script?",
      "parentUuid": "431c3cb0_d30f5e16",
      "revId": "630cab8e086aa5ebb41bbbc533403ff644042f8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}