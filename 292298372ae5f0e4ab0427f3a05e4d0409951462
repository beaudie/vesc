{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "11242349_89ddb26f",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 393,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-11-20T17:56:47Z",
      "side": 1,
      "message": "Why is this necessary?",
      "revId": "292298372ae5f0e4ab0427f3a05e4d0409951462",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e77df803_e16fb298",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 393,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-11-20T23:58:39Z",
      "side": 1,
      "message": "No.  It is a left-over from an attempt to get comma\u0027s on large decimal values.  Removed now.",
      "parentUuid": "11242349_89ddb26f",
      "revId": "292298372ae5f0e4ab0427f3a05e4d0409951462",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9c5e1ea5_cfb10d80",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 401,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-11-20T17:56:47Z",
      "side": 1,
      "message": "Remove these leading spaces here and for \"Free\" and use \"%6s\" below to force padding.",
      "range": {
        "startLine": 401,
        "startChar": 26,
        "endLine": 401,
        "endChar": 27
      },
      "revId": "292298372ae5f0e4ab0427f3a05e4d0409951462",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "83e70e7e_b81824a8",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 401,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-11-20T23:58:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9c5e1ea5_cfb10d80",
      "range": {
        "startLine": 401,
        "startChar": 26,
        "endLine": 401,
        "endChar": 27
      },
      "revId": "292298372ae5f0e4ab0427f3a05e4d0409951462",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "07778738_982e637a",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 467,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-11-20T17:56:47Z",
      "side": 1,
      "message": "Why C-style char buffers and snprintf()?\n\nOutputting to VERBOSE() directly (via \u003c\u003c) would prevent any chances of buffer overflows.   Padding and hex output can be enabled with std::setw and std::hex.",
      "range": {
        "startLine": 461,
        "startChar": 0,
        "endLine": 467,
        "endChar": 81
      },
      "revId": "292298372ae5f0e4ab0427f3a05e4d0409951462",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5623b486_a8e61314",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 467,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-11-20T23:58:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "07778738_982e637a",
      "range": {
        "startLine": 461,
        "startChar": 0,
        "endLine": 467,
        "endChar": 81
      },
      "revId": "292298372ae5f0e4ab0427f3a05e4d0409951462",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "37223cac_7900da00",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 2776,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-11-20T17:56:47Z",
      "side": 1,
      "message": "Since this is going to dump a bunch of text to the log, I would suggest following what I did for the VMA stats in RendererVk::outputVmaStatString():\n\n    void RendererVk::outputVmaStatString()\n    {\n        // Output the VMA stats string\n        // This JSON string can be passed to VmaDumpVis.py to generate a visualization of the\n        // allocations the VMA has performed.\n        char *statsString;\n        mAllocator.buildStatsString(\u0026statsString, true);\n        INFO() \u003c\u003c std::endl \u003c\u003c statsString \u003c\u003c std::endl;  \u003c\u003c--- this line\n        mAllocator.freeStatsString(statsString);\n    }\n\nThis puts all of the text into its own block without any preceding timestamps, verbosity levels, etc., so it can be copy/pasted and read a lot more easily.   Building up a std::stringstream and surrounding that with std::endl would probably be a good approach for that.   It also helps with the concern of the lines being too long to fit on a monitor.",
      "revId": "292298372ae5f0e4ab0427f3a05e4d0409951462",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7f3592d6_c4d63bf0",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 2776,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-11-20T23:58:39Z",
      "side": 1,
      "message": "I see that you\u0027re using INFO(), which adds 37 characters to what logcat normally does (i.e. \"INFO: Debug.cpp:183 (insertMessage): \").  I originally bypassed ANGLE\u0027s mechanism and avoided that.  I settled on VERBOSE(), which only adds 7 characters (i.e. \"EVENT: \").  The downside is that I need to build with that turned on (which I could fix).  You might want to do the same.\n\nIt doesn\u0027t get rid of the timestamps and PID stuff, but there are logcat options for that.",
      "parentUuid": "37223cac_7900da00",
      "revId": "292298372ae5f0e4ab0427f3a05e4d0409951462",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "df68bc65_e4b2edae",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 2776,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-11-21T01:38:35Z",
      "side": 1,
      "message": "The point is to update this function to build up a single string to output and only do a single \u0027VERBOSE() \u003c\u003c\u0027 at the end.   Something like:\n\n    std::string statsString;\n    \u003cbuild up statsString\u003e\n    VERBOSE() \u003c\u003c std::endl \u003c\u003c statsString \u003c\u003c std::endl;\n\nThat will output:\n\n    11-20 17:30:02.507 12947 13000 I ANGLE   : \n    statsString line 1\n    statsString line 2\n    statsString line 3\n    ...\n    11-20 18:31:06.409   889 10849 D qc_adm  : ns 1667754 \u003e expected_ns 1000000 (skipped 80354)\n    11-20 18:31:06.882   917  1132 D VSC     : @ 4010.995: [WO] tilt angle 88\n\nSurrounding the \u0027statsString\u0027 with \u0027std::endl\u0027 puts all of the data onto lines without the preceding timestamp, module, verbosity, etc.   It also lets you use whatever verbosity you like, since all of that preceding stuff is more of a header than a prefix.\n\n\u003e It doesn\u0027t get rid of the timestamps and PID stuff, but there are logcat options for that.\nWhat I\u0027m describing here avoids it.",
      "parentUuid": "7f3592d6_c4d63bf0",
      "revId": "292298372ae5f0e4ab0427f3a05e4d0409951462",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "afb5549b_647fd932",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 2776,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-11-21T02:18:40Z",
      "side": 1,
      "message": "It didn\u0027t for me.  Sorry I wasn\u0027t clearer.  I did what you suggested Tim.  I deleted my results from my comment before I sent it.  I don\u0027t know why, but I still got the date, time, PID, etc.  Using your strings, I got:\n\n 11-20 17:30:02.507 12947 13000 I ANGLE   : \n 11-20 17:30:02.507 12947 13000 I ANGLE   :     statsString line 1\n 11-20 17:30:02.507 12947 13000 I ANGLE   :     statsString line 2\n 11-20 17:30:02.507 12947 13000 I ANGLE   :     statsString line 3\n 11-20 17:30:02.507 12947 13000 I ANGLE   :     ...\n 11-20 18:31:06.409   889 10849 D qc_adm  : ns 1667754 \u003e expected_ns 1000000 (skipped 80354)\n 11-20 18:31:06.882   917  1132 D VSC     : @ 4010.995: [WO] tilt angle 88",
      "parentUuid": "df68bc65_e4b2edae",
      "revId": "292298372ae5f0e4ab0427f3a05e4d0409951462",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "15a27dc2_114683d4",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 2776,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-11-21T03:08:32Z",
      "side": 1,
      "message": "Could this be a difference with Android S logcat?",
      "parentUuid": "afb5549b_647fd932",
      "revId": "292298372ae5f0e4ab0427f3a05e4d0409951462",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f091facd_26506ec3",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 2782,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-11-20T17:56:47Z",
      "side": 1,
      "message": "Why the extra \"; \"?   These are all being output on to separate lines, so I don\u0027t think this is necessary to delineate entries.",
      "range": {
        "startLine": 2782,
        "startChar": 15,
        "endLine": 2782,
        "endChar": 17
      },
      "revId": "292298372ae5f0e4ab0427f3a05e4d0409951462",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e9aa6a17_cd16cbb5",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 2782,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-11-20T23:58:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f091facd_26506ec3",
      "range": {
        "startLine": 2782,
        "startChar": 15,
        "endLine": 2782,
        "endChar": 17
      },
      "revId": "292298372ae5f0e4ab0427f3a05e4d0409951462",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb0991b4_a1e27f24",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 2787,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-11-20T17:56:47Z",
      "side": 1,
      "message": "Use explicit types in these loops.",
      "range": {
        "startLine": 2787,
        "startChar": 9,
        "endLine": 2787,
        "endChar": 13
      },
      "revId": "292298372ae5f0e4ab0427f3a05e4d0409951462",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a472a3a7_47ffd801",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 2787,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-11-20T23:58:39Z",
      "side": 1,
      "message": "I used to be very explicit, and IIRC Jamie asking me to use \"auto\".  I see this used elsewhere (e.g. \"formatutils.cpp\" and \"RewriteRowMajorMatrices.cpp\").",
      "parentUuid": "fb0991b4_a1e27f24",
      "range": {
        "startLine": 2787,
        "startChar": 9,
        "endLine": 2787,
        "endChar": 13
      },
      "revId": "292298372ae5f0e4ab0427f3a05e4d0409951462",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0e703fbd_fafbe1f7",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 2790,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-11-20T17:56:47Z",
      "side": 1,
      "message": "Similarly, break these out into local variables to make it clearer what they are and what\u0027s being logged.",
      "range": {
        "startLine": 2790,
        "startChar": 37,
        "endLine": 2790,
        "endChar": 57
      },
      "revId": "292298372ae5f0e4ab0427f3a05e4d0409951462",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "827ac5a8_d654a909",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 2790,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-11-20T23:58:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0e703fbd_fafbe1f7",
      "range": {
        "startLine": 2790,
        "startChar": 37,
        "endLine": 2790,
        "endChar": 57
      },
      "revId": "292298372ae5f0e4ab0427f3a05e4d0409951462",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1c3533c7_4bc9c197",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.h",
        "patchSetId": 7
      },
      "lineNbr": 342,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-11-20T17:56:47Z",
      "side": 1,
      "message": "Use angle::HashMap for all of these.",
      "range": {
        "startLine": 342,
        "startChar": 4,
        "endLine": 342,
        "endChar": 22
      },
      "revId": "292298372ae5f0e4ab0427f3a05e4d0409951462",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "585b9bea_e60e6c38",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.h",
        "patchSetId": 7
      },
      "lineNbr": 342,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-11-20T23:58:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1c3533c7_4bc9c197",
      "range": {
        "startLine": 342,
        "startChar": 4,
        "endLine": 342,
        "endChar": 22
      },
      "revId": "292298372ae5f0e4ab0427f3a05e4d0409951462",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}