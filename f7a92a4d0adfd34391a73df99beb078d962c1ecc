{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "30d93de3_e17fc989",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-05-03T18:53:18Z",
      "side": 1,
      "message": "With regards to the overall design, I think the CommandProcessor file should make less effort to segregate protected and unprotected contexts. We should really be handling multiple contexts similarly, the fact that protected ones have a few extra flags set shouldn\u0027t make big changes IMO. The duplicated lists can be consolidated, and submission could submit both command buffers with the protected flag set if !protectedCB.empty(). It\u0027s ok to submit an unprotected CB with a submission flagged as protected.",
      "revId": "f7a92a4d0adfd34391a73df99beb078d962c1ecc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f623042b_bea45f67",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2021-05-03T20:13:46Z",
      "side": 1,
      "message": "The spec was not clear to me as when PROTECTED_BIT was required for protected operation, or just mean protected handling was enabled for the structure. Not always clear.\nAnyway, I did have everything divided in CommandQueue, and then started un-duplicating the members.\n\nIt seems then, we just need 2 CommandPools? one protected, one not (if supported). Everything else the PROTECTED_BIT is just an enablement, not a requirement.\n\n\"It\u0027s ok to submit an unprotected CB with a submission flagged as protected.\" Why would this be ok? I may still be not clear what NEEDS PROTECTED_BIT and what does not.",
      "parentUuid": "30d93de3_e17fc989",
      "revId": "f7a92a4d0adfd34391a73df99beb078d962c1ecc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a45ffbae_0545591e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2021-05-03T20:13:46Z",
      "side": 1,
      "message": "Thanks for feedback Shahbaz. I have some questions so I am clear.\nThe recommended changes will get in ASAP.",
      "revId": "f7a92a4d0adfd34391a73df99beb078d962c1ecc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a47a9feb_19c1dd73",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-05-03T20:41:15Z",
      "side": 1,
      "message": "I was looking here: https://renderdoc.org/vkspec_chunked/chap12.html#memory-protected-memory\n\nBut it looks like I was mistaken, unprotected commands can be sent to a protected *queue*, but looks like not in the same submission. Weird to be honest, since the command buffer is already marked (so I don\u0027t really understand why the submission has to be marked as well).\n\nConfirmation (that I was wrong) from validation language:\n\n\u003e If the pNext chain of this structure includes a VkProtectedSubmitInfo structure with protectedSubmit set to VK_TRUE, then each element of the pCommandBuffers array must be a protected command buffer",
      "parentUuid": "f623042b_bea45f67",
      "revId": "f7a92a4d0adfd34391a73df99beb078d962c1ecc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "81513d77_f56d0ebf",
        "filename": "src/libANGLE/renderer/vulkan/CommandProcessor.cpp",
        "patchSetId": 8
      },
      "lineNbr": 650,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-05-03T18:53:18Z",
      "side": 1,
      "message": "Something doesn\u0027t seem right here. Say there are two contexts in different threads. If one triggers a submission, currently commands recorded for both contexts are submitted.\n\nWith this change however, if one context is protected and the other not, only the commands for one of the two is submitted. I don\u0027t know if this discrepancy can cause issues when shared resources are used in rendering.",
      "revId": "f7a92a4d0adfd34391a73df99beb078d962c1ecc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3d86e313_1a3fb3d9",
        "filename": "src/libANGLE/renderer/vulkan/CommandProcessor.cpp",
        "patchSetId": 8
      },
      "lineNbr": 650,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2021-05-03T20:13:46Z",
      "side": 1,
      "message": "OK, then I need some clarity.",
      "parentUuid": "81513d77_f56d0ebf",
      "revId": "f7a92a4d0adfd34391a73df99beb078d962c1ecc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "de6c8f2b_75e05628",
        "filename": "src/libANGLE/renderer/vulkan/CommandProcessor.cpp",
        "patchSetId": 8
      },
      "lineNbr": 650,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-05-03T20:41:15Z",
      "side": 1,
      "message": "I think the best course of action here is to simply make up to 2 submissions in this function; whichever command buffer is not empty would result in a submission to the respective queue.",
      "parentUuid": "3d86e313_1a3fb3d9",
      "revId": "f7a92a4d0adfd34391a73df99beb078d962c1ecc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "824ea575_fca4fcc4",
        "filename": "src/libANGLE/renderer/vulkan/CommandProcessor.cpp",
        "patchSetId": 8
      },
      "lineNbr": 650,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2021-05-06T14:35:33Z",
      "side": 1,
      "message": "Same garbagelist? different hasProtectedContent? What about submitQueueSerial?\n\nDo we need a separate queue per context? Not that that is possible.",
      "parentUuid": "de6c8f2b_75e05628",
      "revId": "f7a92a4d0adfd34391a73df99beb078d962c1ecc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "35322b1d_0029dc8f",
        "filename": "src/libANGLE/renderer/vulkan/CommandProcessor.cpp",
        "patchSetId": 8
      },
      "lineNbr": 929,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-05-03T18:53:18Z",
      "side": 1,
      "message": "Probably doesn\u0027t need to be a separate list.",
      "range": {
        "startLine": 929,
        "startChar": 41,
        "endLine": 929,
        "endChar": 63
      },
      "revId": "f7a92a4d0adfd34391a73df99beb078d962c1ecc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "25b26bfa_526e3813",
        "filename": "src/libANGLE/renderer/vulkan/CommandProcessor.cpp",
        "patchSetId": 8
      },
      "lineNbr": 929,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2021-05-06T14:35:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "35322b1d_0029dc8f",
      "range": {
        "startLine": 929,
        "startChar": 41,
        "endLine": 929,
        "endChar": 63
      },
      "revId": "f7a92a4d0adfd34391a73df99beb078d962c1ecc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fba76009_3ee99594",
        "filename": "src/libANGLE/renderer/vulkan/CommandProcessor.cpp",
        "patchSetId": 8
      },
      "lineNbr": 975,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-05-03T18:53:18Z",
      "side": 1,
      "message": "Refactor to avoid duplication with the above loop.\n\nAlternatively, remove mProtectedInFlightCommands and keep all in-flight commands in the same list. Why are they separate?",
      "range": {
        "startLine": 961,
        "startChar": 0,
        "endLine": 975,
        "endChar": 39
      },
      "revId": "f7a92a4d0adfd34391a73df99beb078d962c1ecc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "849c2a93_140c46d9",
        "filename": "src/libANGLE/renderer/vulkan/CommandProcessor.cpp",
        "patchSetId": 8
      },
      "lineNbr": 975,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2021-05-06T14:35:33Z",
      "side": 1,
      "message": "In CommandQueue::retireFinishedCommands() inFlightCommands are moved back to the CommandPool, but with protected and non-protected commands in the inFlightCommands, I think they are being moved into the wrong commandPool? I started seeing issue with mixed protected/nonprotected context/window surface. So I went back to 2 inflightCommands and issue resolved.",
      "parentUuid": "fba76009_3ee99594",
      "range": {
        "startLine": 961,
        "startChar": 0,
        "endLine": 975,
        "endChar": 39
      },
      "revId": "f7a92a4d0adfd34391a73df99beb078d962c1ecc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a3f2948c_35525f32",
        "filename": "src/libANGLE/renderer/vulkan/CommandProcessor.cpp",
        "patchSetId": 8
      },
      "lineNbr": 989,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-05-03T18:53:18Z",
      "side": 1,
      "message": "Very likely problematic with resources shared between protected and unprotected contexts. This will be fixed if all in-flight commands are kept in the same list.",
      "revId": "f7a92a4d0adfd34391a73df99beb078d962c1ecc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a2415bca_1de7d722",
        "filename": "src/libANGLE/renderer/vulkan/CommandProcessor.h",
        "patchSetId": 8
      },
      "lineNbr": 197,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-05-03T18:53:18Z",
      "side": 1,
      "message": "nit: F because it\u0027s static",
      "range": {
        "startLine": 197,
        "startChar": 20,
        "endLine": 197,
        "endChar": 21
      },
      "revId": "f7a92a4d0adfd34391a73df99beb078d962c1ecc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e64f0e8b_48a932ef",
        "filename": "src/libANGLE/renderer/vulkan/CommandProcessor.h",
        "patchSetId": 8
      },
      "lineNbr": 197,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2021-05-06T14:35:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a2415bca_1de7d722",
      "range": {
        "startLine": 197,
        "startChar": 20,
        "endLine": 197,
        "endChar": 21
      },
      "revId": "f7a92a4d0adfd34391a73df99beb078d962c1ecc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}