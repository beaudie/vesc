{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "9d7a05d2_37b40e7f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-11-06T22:26:29Z",
      "side": 1,
      "message": "This change basically separates the part that decides to close the CBs with the part that issues barriers.",
      "revId": "1329b1c1284ee2ce0797fa997f434621c3c5ba5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7bb4d2c7_c8a6ab14",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-11-09T15:00:29Z",
      "side": 1,
      "message": "Hey Shabi,\n\nThis is a cool feature and a necessary improvement. The current solution has the downside of making the APIs more complex as you now have two steps before you can get a command buffer. Now would be a good time to completely redesign the API to also pass in the access bits and pipeline flags for buffers and layout for images. You could have an API like this:\n\nvk::CommandBufferAccess access;\naccess.bufferTransferWrite(...);\naccess.imageTransferRead(...);\n\nvk::CommandBufferHelper *commandBuffer;\nANGLE_TRY(contextVk-\u003egetOutsideRPCommandBuffer(access, \u0026commandBuffer));\n",
      "revId": "1329b1c1284ee2ce0797fa997f434621c3c5ba5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}