{
  "comments": [
    {
      "key": {
        "uuid": "4c42ebac_ebacb0dc",
        "filename": "src/compiler/translator/IntermNode.h",
        "patchSetId": 4
      },
      "lineNbr": 560,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2017-03-28T17:43:57Z",
      "side": 1,
      "message": "Why is this stored as a pointer instead of by-value? (and passed around as a const ref instead of by value).",
      "revId": "c253363900ecdca8d93da11808ab99ed46ef4e8b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "110ca9ad_c6a3f76c",
        "filename": "src/compiler/translator/IntermNode.h",
        "patchSetId": 4
      },
      "lineNbr": 560,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2017-03-29T07:13:56Z",
      "side": 1,
      "message": "Allocating a TSymbolUniqueId object always consumes one id number, and it\u0027s better to avoid wasting them. Maybe we could reserve some value as an invalid id though, then this might not need to be a pointer. Do you think that would be better?",
      "parentUuid": "4c42ebac_ebacb0dc",
      "revId": "c253363900ecdca8d93da11808ab99ed46ef4e8b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b1cc7af9_9aeec315",
        "filename": "src/compiler/translator/IntermNode.h",
        "patchSetId": 4
      },
      "lineNbr": 560,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2017-03-29T15:40:19Z",
      "side": 1,
      "message": "As long as we control precisely when TSymbolUniqueIds are created (e.g. via a static member function) then there shouldn\u0027t be id space waste. ID 0 as an invalid ID seems ok, if that\u0027s not too much refactor, otherwise feel free to ignore :)",
      "parentUuid": "110ca9ad_c6a3f76c",
      "revId": "c253363900ecdca8d93da11808ab99ed46ef4e8b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}