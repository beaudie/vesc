{
  "comments": [
    {
      "key": {
        "uuid": "20404078_35ca8fcb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 12,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-06-23T17:23:18Z",
      "side": 1,
      "message": "nit: serialized GL state (here and following uses)\n\nin the future one serialized state can contain multiple contexts and other non-Context objects.",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 12,
        "endChar": 8
      },
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "07ec138f_cecc0224",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 12,
      "author": {
        "id": 1423953
      },
      "writtenOn": "2020-06-25T21:51:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "20404078_35ca8fcb",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 12,
        "endChar": 8
      },
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b2a625d9_26697be3",
        "filename": "src/libANGLE/Context.h",
        "patchSetId": 7
      },
      "lineNbr": 607,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-06-23T17:23:18Z",
      "side": 1,
      "message": "make this const. and remove onPostSwap",
      "range": {
        "startLine": 607,
        "startChar": 9,
        "endLine": 607,
        "endChar": 18
      },
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "51de53c1_5d132271",
        "filename": "src/libANGLE/Context.h",
        "patchSetId": 7
      },
      "lineNbr": 607,
      "author": {
        "id": 1423953
      },
      "writtenOn": "2020-06-23T18:11:36Z",
      "side": 1,
      "message": "It needs to not be const because I modify certain states. Such as setting read buffer to read content of attachment. I modify the states after I serialize the old states however, so that the result are still correct",
      "parentUuid": "b2a625d9_26697be3",
      "range": {
        "startLine": 607,
        "startChar": 9,
        "endLine": 607,
        "endChar": 18
      },
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5d7a55f2_30a13bef",
        "filename": "src/libANGLE/Context.h",
        "patchSetId": 7
      },
      "lineNbr": 607,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-06-23T18:17:42Z",
      "side": 1,
      "message": "C++ thing - because mFrameCapture is a pointer we can call mutable methods on mFrameCapture even if onPreSwap is const.",
      "parentUuid": "51de53c1_5d132271",
      "range": {
        "startLine": 607,
        "startChar": 9,
        "endLine": 607,
        "endChar": 18
      },
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a43fe62_37fd8b14",
        "filename": "src/libANGLE/Context.h",
        "patchSetId": 7
      },
      "lineNbr": 607,
      "author": {
        "id": 1423953
      },
      "writtenOn": "2020-06-25T21:51:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5d7a55f2_30a13bef",
      "range": {
        "startLine": 607,
        "startChar": 9,
        "endLine": 607,
        "endChar": 18
      },
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cabcafd8_2b416073",
        "filename": "src/libANGLE/FrameCapture.cpp",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-06-23T17:23:18Z",
      "side": 1,
      "message": "you\u0027re missing the API that gets the serialized data into a buffer.",
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "816b3cb7_b80a2fea",
        "filename": "src/libANGLE/FrameCapture.cpp",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1423953
      },
      "writtenOn": "2020-06-23T18:11:36Z",
      "side": 1,
      "message": "I don\u0027t think I need that. I serialize everything with a BinaryOutputStream, so the data is already stored in the member variable stream. Then afterward, I can just copy the data from the stream to the FrameCapture\u0027s member variable mBinaryData",
      "parentUuid": "cabcafd8_2b416073",
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e68f4ef5_dab28c76",
        "filename": "src/libANGLE/FrameCapture.cpp",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-06-23T18:17:42Z",
      "side": 1,
      "message": "As Cody pointed out we need the API to avoid other shenanigans.",
      "parentUuid": "816b3cb7_b80a2fea",
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "283f790d_0c17b1d9",
        "filename": "src/libANGLE/FrameCapture.cpp",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1423953
      },
      "writtenOn": "2020-06-25T21:51:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e68f4ef5_dab28c76",
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a1373319_20c033d6",
        "filename": "src/libANGLE/FrameCapture.cpp",
        "patchSetId": 7
      },
      "lineNbr": 54,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-06-23T17:23:18Z",
      "side": 1,
      "message": "nit: ANGLE_CAPTURE_SERIALIZE_STATE",
      "range": {
        "startLine": 54,
        "startChar": 52,
        "endLine": 54,
        "endChar": 83
      },
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "790f55ff_d83848cd",
        "filename": "src/libANGLE/FrameCapture.cpp",
        "patchSetId": 7
      },
      "lineNbr": 54,
      "author": {
        "id": 1423953
      },
      "writtenOn": "2020-06-25T21:51:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a1373319_20c033d6",
      "range": {
        "startLine": 54,
        "startChar": 52,
        "endLine": 54,
        "endChar": 83
      },
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0db25bd3_4aca62c4",
        "filename": "src/libANGLE/FrameCapture.cpp",
        "patchSetId": 7
      },
      "lineNbr": 936,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-06-23T17:23:18Z",
      "side": 1,
      "message": "what do you need from EGL?",
      "range": {
        "startLine": 936,
        "startChar": 35,
        "endLine": 936,
        "endChar": 53
      },
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "952e2030_dfaabbf4",
        "filename": "src/libANGLE/FrameCapture.cpp",
        "patchSetId": 7
      },
      "lineNbr": 936,
      "author": {
        "id": 1423953
      },
      "writtenOn": "2020-06-23T18:11:36Z",
      "side": 1,
      "message": "The new surface code added to FrameCapture will produce in the generated trace file something like this: \"constexpr EGLint kReplayDrawSurfaceWidth \u003d 1280\". Without the EGL header files, the CaptureReplaySample will not compile.",
      "parentUuid": "0db25bd3_4aca62c4",
      "range": {
        "startLine": 936,
        "startChar": 35,
        "endLine": 936,
        "endChar": 53
      },
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0eeef55d_58271f0d",
        "filename": "src/libANGLE/FrameCapture.cpp",
        "patchSetId": 7
      },
      "lineNbr": 936,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-06-23T18:17:42Z",
      "side": 1,
      "message": "I don\u0027t quite follow - how did it compile before?",
      "parentUuid": "952e2030_dfaabbf4",
      "range": {
        "startLine": 936,
        "startChar": 35,
        "endLine": 936,
        "endChar": 53
      },
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7c36c228_f0bd9ae8",
        "filename": "src/libANGLE/FrameCapture.cpp",
        "patchSetId": 7
      },
      "lineNbr": 936,
      "author": {
        "id": 1423953
      },
      "writtenOn": "2020-06-25T21:51:50Z",
      "side": 1,
      "message": "It doesn\u0027t have EGLint before I think.",
      "parentUuid": "0eeef55d_58271f0d",
      "range": {
        "startLine": 936,
        "startChar": 35,
        "endLine": 936,
        "endChar": 53
      },
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9fcdb1a9_649b7c6e",
        "filename": "src/libANGLE/FrameCapture.cpp",
        "patchSetId": 7
      },
      "lineNbr": 940,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-06-23T17:23:18Z",
      "side": 1,
      "message": "what do you need from util_gl?",
      "range": {
        "startLine": 940,
        "startChar": 35,
        "endLine": 940,
        "endChar": 42
      },
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ad921993_1687595d",
        "filename": "src/libANGLE/FrameCapture.cpp",
        "patchSetId": 7
      },
      "lineNbr": 940,
      "author": {
        "id": 1423953
      },
      "writtenOn": "2020-06-23T18:11:36Z",
      "side": 1,
      "message": "I need the egl includes and the different gles version includes that util_gl has. I\u0027m just following AngleTest example since it also static links the gles libraries",
      "parentUuid": "9fcdb1a9_649b7c6e",
      "range": {
        "startLine": 940,
        "startChar": 35,
        "endLine": 940,
        "endChar": 42
      },
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b6f1b5c_d867213e",
        "filename": "src/libANGLE/FrameCapture.cpp",
        "patchSetId": 7
      },
      "lineNbr": 940,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-06-23T18:17:42Z",
      "side": 1,
      "message": "Let\u0027s try to keep how it was before if we can manage that.",
      "parentUuid": "ad921993_1687595d",
      "range": {
        "startLine": 940,
        "startChar": 35,
        "endLine": 940,
        "endChar": 42
      },
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f21eb42_df8a3dfa",
        "filename": "src/libANGLE/FrameCapture.cpp",
        "patchSetId": 7
      },
      "lineNbr": 940,
      "author": {
        "id": 1423953
      },
      "writtenOn": "2020-06-25T21:51:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0b6f1b5c_d867213e",
      "range": {
        "startLine": 940,
        "startChar": 35,
        "endLine": 940,
        "endChar": 42
      },
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "580cc0d4_f5c423ad",
        "filename": "src/libANGLE/FrameCapture.cpp",
        "patchSetId": 7
      },
      "lineNbr": 3158,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-06-23T17:23:18Z",
      "side": 1,
      "message": "default to on. also don\u0027t forget to update the docs if you haven\u0027t already.",
      "range": {
        "startLine": 3158,
        "startChar": 31,
        "endLine": 3158,
        "endChar": 36
      },
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "550de691_bcf8f645",
        "filename": "src/libANGLE/FrameCapture.cpp",
        "patchSetId": 7
      },
      "lineNbr": 3158,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-06-23T18:07:21Z",
      "side": 1,
      "message": "on second thought, default to off makes sense. Still needs to docs update.",
      "parentUuid": "580cc0d4_f5c423ad",
      "range": {
        "startLine": 3158,
        "startChar": 31,
        "endLine": 3158,
        "endChar": 36
      },
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "24198211_d4dd9c0e",
        "filename": "src/libANGLE/FrameCapture.cpp",
        "patchSetId": 7
      },
      "lineNbr": 3222,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-06-23T17:23:18Z",
      "side": 1,
      "message": "default on.",
      "range": {
        "startLine": 3222,
        "startChar": 43,
        "endLine": 3222,
        "endChar": 44
      },
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c083f9bf_b8aa8b1f",
        "filename": "src/libANGLE/FrameCapture.cpp",
        "patchSetId": 7
      },
      "lineNbr": 3222,
      "author": {
        "id": 1423953
      },
      "writtenOn": "2020-06-25T21:51:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "24198211_d4dd9c0e",
      "range": {
        "startLine": 3222,
        "startChar": 43,
        "endLine": 3222,
        "endChar": 44
      },
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4124d811_b46661c3",
        "filename": "src/libANGLE/FrameCapture.cpp",
        "patchSetId": 7
      },
      "lineNbr": 3889,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-06-23T17:23:18Z",
      "side": 1,
      "message": "don\u0027t quite follow this change. what happened here?",
      "range": {
        "startLine": 3889,
        "startChar": 36,
        "endLine": 3889,
        "endChar": 73
      },
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c6cc3fbe_fb606c6a",
        "filename": "src/libANGLE/FrameCapture.cpp",
        "patchSetId": 7
      },
      "lineNbr": 3889,
      "author": {
        "id": 1423953
      },
      "writtenOn": "2020-06-23T18:11:36Z",
      "side": 1,
      "message": "So I dedicate a kBinaryAlignment size block at the front of mBinaryData to store the length and offset of serialized states. So we only write out to files if the mBinaryData block is larger than kBinaryAlignment bytes",
      "parentUuid": "4124d811_b46661c3",
      "range": {
        "startLine": 3889,
        "startChar": 36,
        "endLine": 3889,
        "endChar": 73
      },
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a8169582_2cde16ff",
        "filename": "src/libANGLE/FrameCapture.cpp",
        "patchSetId": 7
      },
      "lineNbr": 3889,
      "author": {
        "id": 1423953
      },
      "writtenOn": "2020-06-25T21:51:50Z",
      "side": 1,
      "message": "Done. Move to API approach so this is not needed anymore",
      "parentUuid": "c6cc3fbe_fb606c6a",
      "range": {
        "startLine": 3889,
        "startChar": 36,
        "endLine": 3889,
        "endChar": 73
      },
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5cc324fe_a11f5ce6",
        "filename": "src/libANGLE/FrameCapture.cpp",
        "patchSetId": 7
      },
      "lineNbr": 3926,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-06-23T17:23:18Z",
      "side": 1,
      "message": "if you put the state at the end instead you maybe don\u0027t have to deal with this alignment stuff.",
      "range": {
        "startLine": 3924,
        "startChar": 6,
        "endLine": 3926,
        "endChar": 90
      },
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "57c05414_09784b08",
        "filename": "src/libANGLE/FrameCapture.cpp",
        "patchSetId": 7
      },
      "lineNbr": 3926,
      "author": {
        "id": 1423953
      },
      "writtenOn": "2020-06-23T18:11:36Z",
      "side": 1,
      "message": "I think I still need to know the length and offset. I only have access to gBinaryData, which is a pointer. So I still need to know where the serialized context starts and ends.",
      "parentUuid": "5cc324fe_a11f5ce6",
      "range": {
        "startLine": 3924,
        "startChar": 6,
        "endLine": 3926,
        "endChar": 90
      },
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "70e11766_c979290d",
        "filename": "src/libANGLE/FrameCapture.cpp",
        "patchSetId": 7
      },
      "lineNbr": 3926,
      "author": {
        "id": 1423953
      },
      "writtenOn": "2020-06-25T21:51:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "57c05414_09784b08",
      "range": {
        "startLine": 3924,
        "startChar": 6,
        "endLine": 3926,
        "endChar": 90
      },
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "508859fa_9e901448",
        "filename": "src/libANGLE/Framebuffer.h",
        "patchSetId": 7
      },
      "lineNbr": 147,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-06-23T17:23:18Z",
      "side": 1,
      "message": "let\u0027s chat offline - wondering if you can do this without friend.",
      "range": {
        "startLine": 145,
        "startChar": 0,
        "endLine": 147,
        "endChar": 78
      },
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e1158e21_1e3d0d71",
        "filename": "src/libANGLE/Framebuffer.h",
        "patchSetId": 7
      },
      "lineNbr": 147,
      "author": {
        "id": 1423953
      },
      "writtenOn": "2020-06-25T21:51:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "508859fa_9e901448",
      "range": {
        "startLine": 145,
        "startChar": 0,
        "endLine": 147,
        "endChar": 78
      },
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f33fd31a_0623990a",
        "filename": "src/libANGLE/SerializeContext.cpp",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-06-23T17:23:18Z",
      "side": 1,
      "message": "tiny nit: missing //\n\nsame for the header.",
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "afb2e4af_acf38a4c",
        "filename": "src/libANGLE/SerializeContext.cpp",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1423953
      },
      "writtenOn": "2020-06-25T21:51:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f33fd31a_0623990a",
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e1c99b7c_357c35cb",
        "filename": "src/libANGLE/SerializeContext.cpp",
        "patchSetId": 7
      },
      "lineNbr": 11,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-06-23T17:23:18Z",
      "side": 1,
      "message": "nit: remove _MACRO_ from these",
      "range": {
        "startLine": 11,
        "startChar": 8,
        "endLine": 11,
        "endChar": 33
      },
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb119676_2cca8b3e",
        "filename": "src/libANGLE/SerializeContext.cpp",
        "patchSetId": 7
      },
      "lineNbr": 11,
      "author": {
        "id": 1423953
      },
      "writtenOn": "2020-06-25T21:51:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e1c99b7c_357c35cb",
      "range": {
        "startLine": 11,
        "startChar": 8,
        "endLine": 11,
        "endChar": 33
      },
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "432bcdd5_827b71eb",
        "filename": "src/libANGLE/SerializeContext.cpp",
        "patchSetId": 7
      },
      "lineNbr": 27,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-06-23T17:23:18Z",
      "side": 1,
      "message": "nit: const auto \u0026?",
      "range": {
        "startLine": 27,
        "startChar": 9,
        "endLine": 27,
        "endChar": 14
      },
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f0581cb_dc202ac3",
        "filename": "src/libANGLE/SerializeContext.cpp",
        "patchSetId": 7
      },
      "lineNbr": 27,
      "author": {
        "id": 1423953
      },
      "writtenOn": "2020-06-25T21:51:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "432bcdd5_827b71eb",
      "range": {
        "startLine": 27,
        "startChar": 9,
        "endLine": 27,
        "endChar": 14
      },
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e372b44_6c747c5b",
        "filename": "src/libANGLE/SerializeContext.cpp",
        "patchSetId": 7
      },
      "lineNbr": 29,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-06-23T17:23:18Z",
      "side": 1,
      "message": "nit: cache in a temporary so we can see the type.",
      "range": {
        "startLine": 29,
        "startChar": 42,
        "endLine": 29,
        "endChar": 61
      },
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "66c5c12e_cc537380",
        "filename": "src/libANGLE/SerializeContext.cpp",
        "patchSetId": 7
      },
      "lineNbr": 29,
      "author": {
        "id": 1423953
      },
      "writtenOn": "2020-06-25T21:51:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0e372b44_6c747c5b",
      "range": {
        "startLine": 29,
        "startChar": 42,
        "endLine": 29,
        "endChar": 61
      },
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9811558_42cd7da2",
        "filename": "src/libANGLE/SerializeContext.cpp",
        "patchSetId": 7
      },
      "lineNbr": 40,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-06-23T17:23:18Z",
      "side": 1,
      "message": "you don\u0027t need to write this. it is derived from the attachments.",
      "range": {
        "startLine": 37,
        "startChar": 0,
        "endLine": 40,
        "endChar": 5
      },
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "af0b2ee3_009279cb",
        "filename": "src/libANGLE/SerializeContext.cpp",
        "patchSetId": 7
      },
      "lineNbr": 40,
      "author": {
        "id": 1423953
      },
      "writtenOn": "2020-06-25T21:51:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b9811558_42cd7da2",
      "range": {
        "startLine": 37,
        "startChar": 0,
        "endLine": 40,
        "endChar": 5
      },
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d06006a7_527b492a",
        "filename": "src/libANGLE/SerializeContext.cpp",
        "patchSetId": 7
      },
      "lineNbr": 41,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-06-23T17:23:18Z",
      "side": 1,
      "message": "or this",
      "range": {
        "startLine": 41,
        "startChar": 46,
        "endLine": 41,
        "endChar": 73
      },
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "464ecb8e_be0952d4",
        "filename": "src/libANGLE/SerializeContext.cpp",
        "patchSetId": 7
      },
      "lineNbr": 41,
      "author": {
        "id": 1423953
      },
      "writtenOn": "2020-06-25T21:51:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d06006a7_527b492a",
      "range": {
        "startLine": 41,
        "startChar": 46,
        "endLine": 41,
        "endChar": 73
      },
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3064ea63_ed009a8e",
        "filename": "src/libANGLE/SerializeContext.cpp",
        "patchSetId": 7
      },
      "lineNbr": 49,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-06-23T17:23:18Z",
      "side": 1,
      "message": "remove all the explicit arguments.",
      "range": {
        "startLine": 49,
        "startChar": 17,
        "endLine": 49,
        "endChar": 25
      },
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c359d38e_534772ff",
        "filename": "src/libANGLE/SerializeContext.cpp",
        "patchSetId": 7
      },
      "lineNbr": 49,
      "author": {
        "id": 1423953
      },
      "writtenOn": "2020-06-25T21:51:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3064ea63_ed009a8e",
      "range": {
        "startLine": 49,
        "startChar": 17,
        "endLine": 49,
        "endChar": 25
      },
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b6254817_34089a61",
        "filename": "src/libANGLE/SerializeContext.cpp",
        "patchSetId": 7
      },
      "lineNbr": 69,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-06-23T17:23:18Z",
      "side": 1,
      "message": "nit: use isDefault. however I\u0027m not sure we really need to do this check. You can get attachments by index.",
      "range": {
        "startLine": 69,
        "startChar": 8,
        "endLine": 69,
        "endChar": 65
      },
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5fb5b77e_ae558837",
        "filename": "src/libANGLE/SerializeContext.cpp",
        "patchSetId": 7
      },
      "lineNbr": 69,
      "author": {
        "id": 1423953
      },
      "writtenOn": "2020-06-23T18:11:36Z",
      "side": 1,
      "message": "I am doing this check because for default framebuffer, we only want to query the back buffer. Whereas for other framebuffer we would want to query all the color attachments.",
      "parentUuid": "b6254817_34089a61",
      "range": {
        "startLine": 69,
        "startChar": 8,
        "endLine": 69,
        "endChar": 65
      },
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e86e8f0_4be71a12",
        "filename": "src/libANGLE/SerializeContext.cpp",
        "patchSetId": 7
      },
      "lineNbr": 69,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-06-23T18:17:42Z",
      "side": 1,
      "message": "You can simplify it just checking the set of valid attachments.",
      "parentUuid": "5fb5b77e_ae558837",
      "range": {
        "startLine": 69,
        "startChar": 8,
        "endLine": 69,
        "endChar": 65
      },
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a6e9af4_fb007b98",
        "filename": "src/libANGLE/SerializeContext.cpp",
        "patchSetId": 7
      },
      "lineNbr": 69,
      "author": {
        "id": 1423953
      },
      "writtenOn": "2020-06-25T21:51:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2e86e8f0_4be71a12",
      "range": {
        "startLine": 69,
        "startChar": 8,
        "endLine": 69,
        "endChar": 65
      },
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ecc882c_973f3779",
        "filename": "src/libANGLE/SerializeContext.cpp",
        "patchSetId": 7
      },
      "lineNbr": 73,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-06-23T17:23:18Z",
      "side": 1,
      "message": "can you use a temporary buffer so we don\u0027t reallocate as much?",
      "range": {
        "startLine": 73,
        "startChar": 8,
        "endLine": 73,
        "endChar": 28
      },
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ce4a041_1ab222c3",
        "filename": "src/libANGLE/SerializeContext.cpp",
        "patchSetId": 7
      },
      "lineNbr": 73,
      "author": {
        "id": 1423953
      },
      "writtenOn": "2020-06-23T18:11:36Z",
      "side": 1,
      "message": "Do you mean std::get_temporary_buffer?",
      "parentUuid": "3ecc882c_973f3779",
      "range": {
        "startLine": 73,
        "startChar": 8,
        "endLine": 73,
        "endChar": 28
      },
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a6173730_8c3d967d",
        "filename": "src/libANGLE/SerializeContext.cpp",
        "patchSetId": 7
      },
      "lineNbr": 73,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-06-23T18:17:42Z",
      "side": 1,
      "message": "No, just move the std::vector outside the loop so it doesn\u0027t make a new one every time. or use the Context scratch buffer is a better idea.",
      "parentUuid": "2ce4a041_1ab222c3",
      "range": {
        "startLine": 73,
        "startChar": 8,
        "endLine": 73,
        "endChar": 28
      },
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7089f798_768c0db4",
        "filename": "src/libANGLE/SerializeContext.cpp",
        "patchSetId": 7
      },
      "lineNbr": 133,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-06-23T17:23:18Z",
      "side": 1,
      "message": "nit: put the variable on the left. actually I\u0027m not sure what this if is supposed to fix. seems like color attachments and depth/stencil should check the color/depth/stencil bits instead of the attachment point.",
      "range": {
        "startLine": 133,
        "startChar": 9,
        "endLine": 133,
        "endChar": 39
      },
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "04ad616f_764c1454",
        "filename": "src/libANGLE/SerializeContext.cpp",
        "patchSetId": 7
      },
      "lineNbr": 133,
      "author": {
        "id": 1423953
      },
      "writtenOn": "2020-06-23T18:11:36Z",
      "side": 1,
      "message": "What do you mean by color/depth/stencil bits?",
      "parentUuid": "7089f798_768c0db4",
      "range": {
        "startLine": 133,
        "startChar": 9,
        "endLine": 133,
        "endChar": 39
      },
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef39a606_f3e9acc2",
        "filename": "src/libANGLE/SerializeContext.cpp",
        "patchSetId": 7
      },
      "lineNbr": 133,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-06-23T18:17:42Z",
      "side": 1,
      "message": "Will follow up in chat.",
      "parentUuid": "04ad616f_764c1454",
      "range": {
        "startLine": 133,
        "startChar": 9,
        "endLine": 133,
        "endChar": 39
      },
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "05937210_821976f1",
        "filename": "src/libANGLE/SerializeContext.cpp",
        "patchSetId": 7
      },
      "lineNbr": 153,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-06-23T17:23:18Z",
      "side": 1,
      "message": "this will be bugged for several cases: having an unpack buffer, non-default unpack parameters, or formats not listed. we can land something simple initially with a TODO to rework this.",
      "range": {
        "startLine": 147,
        "startChar": 0,
        "endLine": 153,
        "endChar": 43
      },
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "525bd413_2b5ea7eb",
        "filename": "src/libANGLE/SerializeContext.h",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-06-23T17:23:18Z",
      "side": 1,
      "message": "how about adding these to a new file frame_capture_utils.cpp ?",
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "56f4e9be_a501b4bc",
        "filename": "src/libANGLE/SerializeContext.h",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1423953
      },
      "writtenOn": "2020-06-25T21:51:50Z",
      "side": 1,
      "message": "I am assuming that frame_capture_utils.cpp will be the implementation of frame_capture_utils.h, which is part of a testonly target. I dont think it can be linked to non-testonly targets, and FrameCapture is in one.",
      "parentUuid": "525bd413_2b5ea7eb",
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7594ebcf_f1d2136b",
        "filename": "src/libANGLE/SerializeContext.h",
        "patchSetId": 7
      },
      "lineNbr": 11,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-06-23T17:23:18Z",
      "side": 1,
      "message": "nit: you don\u0027t need to include this here, you can predeclare Context/BinaryOutputStream/Framebuffer. can include in the cpp file.",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 11,
        "endChar": 34
      },
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "626ef79c_1d134e3c",
        "filename": "src/libANGLE/SerializeContext.h",
        "patchSetId": 7
      },
      "lineNbr": 11,
      "author": {
        "id": 1423953
      },
      "writtenOn": "2020-06-25T21:51:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7594ebcf_f1d2136b",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 11,
        "endChar": 34
      },
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "742cb324_e9527a99",
        "filename": "src/libANGLE/SerializeContext.h",
        "patchSetId": 7
      },
      "lineNbr": 15,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-06-23T17:23:18Z",
      "side": 1,
      "message": "nit: suggest using namespace angle to match FrameCapture",
      "range": {
        "startLine": 15,
        "startChar": 10,
        "endLine": 15,
        "endChar": 12
      },
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4742b2f1_990fc8a5",
        "filename": "src/libANGLE/SerializeContext.h",
        "patchSetId": 7
      },
      "lineNbr": 15,
      "author": {
        "id": 1423953
      },
      "writtenOn": "2020-06-25T21:51:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "742cb324_e9527a99",
      "range": {
        "startLine": 15,
        "startChar": 10,
        "endLine": 15,
        "endChar": 12
      },
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "345d6095_a0977a79",
        "filename": "src/libANGLE/SerializeContext.h",
        "patchSetId": 7
      },
      "lineNbr": 18,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-06-23T17:23:18Z",
      "side": 1,
      "message": "nit: SerializeContext.",
      "range": {
        "startLine": 18,
        "startChar": 5,
        "endLine": 18,
        "endChar": 14
      },
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c27b1bcd_786e4888",
        "filename": "src/libANGLE/SerializeContext.h",
        "patchSetId": 7
      },
      "lineNbr": 18,
      "author": {
        "id": 1423953
      },
      "writtenOn": "2020-06-25T21:51:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "345d6095_a0977a79",
      "range": {
        "startLine": 18,
        "startChar": 5,
        "endLine": 18,
        "endChar": 14
      },
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e4695fb_842a5d63",
        "filename": "src/libANGLE/SerializeContext.h",
        "patchSetId": 7
      },
      "lineNbr": 18,
      "author": {
        "id": 1423953
      },
      "writtenOn": "2020-06-25T21:51:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "345d6095_a0977a79",
      "range": {
        "startLine": 18,
        "startChar": 5,
        "endLine": 18,
        "endChar": 14
      },
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43834622_1c6340c7",
        "filename": "src/tests/capture_replay_tests/CaptureReplayTest.cpp",
        "patchSetId": 7
      },
      "lineNbr": 12,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2020-06-23T17:48:51Z",
      "side": 1,
      "message": "Rather than pull ANGLE bits into our tests, can we put this functionality into an extension that any app could use?",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 12,
        "endChar": 38
      },
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f2f65300_f01979be",
        "filename": "src/tests/capture_replay_tests/CaptureReplayTest.cpp",
        "patchSetId": 7
      },
      "lineNbr": 12,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-06-23T18:06:01Z",
      "side": 1,
      "message": "Not an extension, an API in the replay.",
      "parentUuid": "43834622_1c6340c7",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 12,
        "endChar": 38
      },
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d7536924_64de57c9",
        "filename": "src/tests/capture_replay_tests/CaptureReplayTest.cpp",
        "patchSetId": 7
      },
      "lineNbr": 150,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2020-06-23T17:48:51Z",
      "side": 1,
      "message": "We\u0027ll probably need some way to do fuzzy compares of framebuffer contents, since they may have slight variations per underlying Vulkan implementation/hardware.",
      "range": {
        "startLine": 150,
        "startChar": 0,
        "endLine": 150,
        "endChar": 66
      },
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a3da391f_7b213eb0",
        "filename": "src/tests/capture_replay_tests/CaptureReplayTest.cpp",
        "patchSetId": 7
      },
      "lineNbr": 150,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-06-23T18:06:46Z",
      "side": 1,
      "message": "Suggest leaving that as a TODO. For now the tests are run only on a single machine.",
      "parentUuid": "d7536924_64de57c9",
      "range": {
        "startLine": 150,
        "startChar": 0,
        "endLine": 150,
        "endChar": 66
      },
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b2478ba_8a9f764e",
        "filename": "util/util_gl.h",
        "patchSetId": 7
      },
      "lineNbr": 28,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-06-23T17:23:18Z",
      "side": 1,
      "message": "can you please revert this change.",
      "range": {
        "startLine": 28,
        "startChar": 0,
        "endLine": 28,
        "endChar": 21
      },
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a0296f4_a4c0bd5e",
        "filename": "util/util_gl.h",
        "patchSetId": 7
      },
      "lineNbr": 28,
      "author": {
        "id": 1423953
      },
      "writtenOn": "2020-06-25T21:51:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4b2478ba_8a9f764e",
      "range": {
        "startLine": 28,
        "startChar": 0,
        "endLine": 28,
        "endChar": 21
      },
      "revId": "4dc3a2aa28d17b5583a86b282fc6ad31c71f3233",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}