{
  "comments": [
    {
      "key": {
        "uuid": "4da20539_15495bcc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 16
      },
      "lineNbr": 0,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-09-08T15:49:37Z",
      "side": 1,
      "message": "I think this CL is ready to go now.  PTAL",
      "revId": "9bb3ad684f3984416fbfafb86de41b94621a8968",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "446d2133_05c8349e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 16
      },
      "lineNbr": 0,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-09-08T17:15:22Z",
      "side": 1,
      "message": "Overall looks good to me.",
      "revId": "9bb3ad684f3984416fbfafb86de41b94621a8968",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "22631bb5_6189dd9f",
        "filename": "src/libANGLE/renderer/vulkan/RenderTargetVk.h",
        "patchSetId": 16
      },
      "lineNbr": 101,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-09-08T18:22:40Z",
      "side": 1,
      "message": "These now only respond with whether *Color* content is defined or not, right? I would make that explicit in the name:\n\n     hasDefinedColorContent()\n    invalidateEntireColorContent()",
      "range": {
        "startLine": 101,
        "startChar": 9,
        "endLine": 101,
        "endChar": 26
      },
      "revId": "9bb3ad684f3984416fbfafb86de41b94621a8968",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "49935a3b_7e5b5e48",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 16
      },
      "lineNbr": 981,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-09-08T18:22:40Z",
      "side": 1,
      "message": "There may be an issue here. Take this scenario:\n\n- Create depth/stencil renderbuffer R and attach it to a framebuffer\n- Draw into framebuffer\n- Invalidate depth/stencil\n- Delete R\n- Cause render pass to break\n\nWhat happens when R is deleted? If the render pass is closed automatically before R is deleted, it\u0027s ok, but if it happens after, then mDepthStencilImage would be a dangling pointer.\n\nCould you write a test for it and verify (with printf?) that end RP is being done before the ImageHelper is deleted?",
      "revId": "9bb3ad684f3984416fbfafb86de41b94621a8968",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b7243f50_fed7c2f5",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 16
      },
      "lineNbr": 1298,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-09-08T17:15:22Z",
      "side": 1,
      "message": "This looks like not been used. Or if you do need it, maybe call it hasValidFormat or isValidFormat?",
      "range": {
        "startLine": 1298,
        "startChar": 9,
        "endLine": 1298,
        "endChar": 20
      },
      "revId": "9bb3ad684f3984416fbfafb86de41b94621a8968",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b93dcd08_52970902",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 16
      },
      "lineNbr": 1317,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-09-08T17:15:22Z",
      "side": 1,
      "message": "Is it possible to maintain mDepthContentDefined in ImageHelper::onWrite()? That will have better encapsulation than a \"set*\" and \"has*\" APIs. Maybe you need to change onWrite to onDepthWrite and onStencilWrite or take an argument to indicate it is depth or stencil.",
      "range": {
        "startLine": 1316,
        "startChar": 4,
        "endLine": 1317,
        "endChar": 99
      },
      "revId": "9bb3ad684f3984416fbfafb86de41b94621a8968",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}