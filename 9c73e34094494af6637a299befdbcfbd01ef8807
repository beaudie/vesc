{
  "comments": [
    {
      "key": {
        "uuid": "85c2c66f_5d00af0b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 9,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2016-08-26T18:38:28Z",
      "side": 1,
      "message": "typo: cominations",
      "revId": "9c73e34094494af6637a299befdbcfbd01ef8807",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85c2c66f_7d03731a",
        "filename": "src/tests/deqp_support/deqp_gles3_test_expectations.txt",
        "patchSetId": 6
      },
      "lineNbr": 41,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2016-08-26T18:37:06Z",
      "side": 1,
      "message": "Is this an undesirable consequence of these changes? Do you think it would be a better idea to update the calling code instead to do something different when it\u0027s using an ES 3.0 context?",
      "revId": "9c73e34094494af6637a299befdbcfbd01ef8807",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85c2c66f_dd5eff20",
        "filename": "src/tests/deqp_support/deqp_gles3_test_expectations.txt",
        "patchSetId": 6
      },
      "lineNbr": 41,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2016-08-26T18:38:28Z",
      "side": 1,
      "message": "What prevents us from supporting both?",
      "parentUuid": "85c2c66f_7d03731a",
      "revId": "9c73e34094494af6637a299befdbcfbd01ef8807",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85c2c66f_fd68a38d",
        "filename": "src/tests/deqp_support/deqp_gles3_test_expectations.txt",
        "patchSetId": 6
      },
      "lineNbr": 41,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2016-08-26T18:44:47Z",
      "side": 1,
      "message": "It was a legitimate validation bug to not allow these formats though but deqp is unaware of the ANGLE_depth_texture extension\u0027s existence so it believes these are invalid formats.  We would be able to support the OES_depth_texture extension in ANGLE but only for the GL backend due to the requirements that depth textures are sampled like luminance textures.\n\nThat said, we should probably update the checks that chrome does to make sure the webgl draw buffers extensions are available to not rely on this extension being present.",
      "parentUuid": "85c2c66f_dd5eff20",
      "revId": "9c73e34094494af6637a299befdbcfbd01ef8807",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85c2c66f_20c5ce39",
        "filename": "src/tests/deqp_support/deqp_gles3_test_expectations.txt",
        "patchSetId": 6
      },
      "lineNbr": 41,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2016-08-26T18:57:58Z",
      "side": 1,
      "message": "Could you take a look at https://cs.chromium.org/chromium/src/third_party/WebKit/Source/modules/webgl/WebGLDrawBuffers.cpp?l\u003d135 and advise if the call should change? As far as I can tell, passing DEPTH_COMPONENT for format/internalformat and UNSIGNED_INT for type is legal according to both ANGLE_depth_texture and OES_depth_texture.",
      "parentUuid": "85c2c66f_fd68a38d",
      "revId": "9c73e34094494af6637a299befdbcfbd01ef8807",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}