{
  "comments": [
    {
      "key": {
        "uuid": "4bc5ef5b_357130ce",
        "filename": "src/libANGLE/renderer/d3d/TextureD3D.cpp",
        "patchSetId": 4
      },
      "lineNbr": 217,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-01-21T15:48:42Z",
      "side": 1,
      "message": "I think I would still place the updateStorage here. That saves us from updating the TexStorage, then updating the images, when we aren\u0027t using setData. Also, you won\u0027t need the null check, since shouldUseSetData does that.",
      "revId": "92ae309be964d53f7d1f655ba111d2eddb0da0a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4bc5ef5b_d589dc4e",
        "filename": "src/libANGLE/renderer/d3d/TextureD3D.cpp",
        "patchSetId": 4
      },
      "lineNbr": 395,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-01-21T15:48:42Z",
      "side": 1,
      "message": "I don\u0027t quite understand this line. Shouldn\u0027t the code be the same, but update the storage after the mipmaps are finished?",
      "range": {
        "startLine": 395,
        "startChar": 15,
        "endLine": 395,
        "endChar": 38
      },
      "revId": "92ae309be964d53f7d1f655ba111d2eddb0da0a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8b0c4779_d249022e",
        "filename": "src/libANGLE/renderer/d3d/TextureD3D.cpp",
        "patchSetId": 4
      },
      "lineNbr": 395,
      "author": {
        "id": 1121969
      },
      "writtenOn": "2015-01-21T15:58:51Z",
      "side": 1,
      "message": "Well if it is allowed to have dirty images around and a storage at the same time, we need to avoid replacing the new content in the image with the old content contained in the storage.\n\nOf course, if we guarantee that images should never be dirty when the storage exists, then we don’t need this line.",
      "parentUuid": "4bc5ef5b_d589dc4e",
      "range": {
        "startLine": 395,
        "startChar": 15,
        "endLine": 395,
        "endChar": 38
      },
      "revId": "92ae309be964d53f7d1f655ba111d2eddb0da0a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0bbf77c3_33cdc8c7",
        "filename": "src/libANGLE/renderer/d3d/TextureD3D.cpp",
        "patchSetId": 4
      },
      "lineNbr": 395,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-01-21T16:47:46Z",
      "side": 1,
      "message": "I think I like the idea of giving ourselves the guarantee of \u0027if we\u0027re using the setData workaround, and mTexStorage is not null, the images should never be dirty\u0027. That was my original intention in any case. Maybe we could flush the images after we create the TexStorage and that would avoid all the other complications.",
      "parentUuid": "8b0c4779_d249022e",
      "range": {
        "startLine": 395,
        "startChar": 15,
        "endLine": 395,
        "endChar": 38
      },
      "revId": "92ae309be964d53f7d1f655ba111d2eddb0da0a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4bc24f1f_bc238d11",
        "filename": "src/libANGLE/renderer/d3d/TextureD3D.cpp",
        "patchSetId": 4
      },
      "lineNbr": 395,
      "author": {
        "id": 1121969
      },
      "writtenOn": "2015-01-21T17:11:53Z",
      "side": 1,
      "message": "I agree. I can evolve the patch to that direction if that’s okay? The only thing needed would be to updateStorage at the end of glGenerateMipmaps and at the end of setCompleteTexStorage.",
      "parentUuid": "0bbf77c3_33cdc8c7",
      "range": {
        "startLine": 395,
        "startChar": 15,
        "endLine": 395,
        "endChar": 38
      },
      "revId": "92ae309be964d53f7d1f655ba111d2eddb0da0a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0bbf77c3_d3e814b8",
        "filename": "src/libANGLE/renderer/d3d/TextureD3D.cpp",
        "patchSetId": 4
      },
      "lineNbr": 395,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-01-21T17:24:44Z",
      "side": 1,
      "message": "Sure, sounds good to me! Thanks for digging in to this.",
      "parentUuid": "4bc24f1f_bc238d11",
      "range": {
        "startLine": 395,
        "startChar": 15,
        "endLine": 395,
        "endChar": 38
      },
      "revId": "92ae309be964d53f7d1f655ba111d2eddb0da0a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4bc5ef5b_b57c60a2",
        "filename": "src/libANGLE/renderer/d3d/TextureD3D.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1233,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-01-21T15:48:42Z",
      "side": 1,
      "message": "nit: since we aren\u0027t changing this function, can leave the whitespace unchanged to simplify the diff",
      "revId": "92ae309be964d53f7d1f655ba111d2eddb0da0a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4b408f75_11953c49",
        "filename": "src/libANGLE/renderer/d3d/TextureD3D.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1233,
      "author": {
        "id": 1121969
      },
      "writtenOn": "2015-01-21T15:58:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4bc5ef5b_b57c60a2",
      "revId": "92ae309be964d53f7d1f655ba111d2eddb0da0a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}