{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "acdb7c38_02771f5a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 18
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-12-10T14:49:01Z",
      "side": 1,
      "message": "What exactly is the point of cleaning up memory on process exit? Is the OS not capable of that?",
      "revId": "3745f9f68a6f039b2a780e814850cd6d3eaf1c95",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f2e12553_3f6aaa0a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 18
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-12-10T17:01:57Z",
      "side": 1,
      "message": "\u003e Is the OS not capable of that?\n\nsome platforms are not as good as others and unfortunately we need to get certifications on platforms that are lacking ðŸ˜Š",
      "parentUuid": "acdb7c38_02771f5a",
      "revId": "3745f9f68a6f039b2a780e814850cd6d3eaf1c95",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f0ae9c30_e8789435",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 18
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-12-10T17:41:55Z",
      "side": 1,
      "message": "I don\u0027t believe Android is incapable of cleaning up after itself. What are the specifics that you believe this is necessary? It really sounds like the platform or the test needs a fix, not ANGLE.",
      "parentUuid": "f2e12553_3f6aaa0a",
      "revId": "3745f9f68a6f039b2a780e814850cd6d3eaf1c95",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4cfeaaf6_54ca32cb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 18
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-12-10T19:23:51Z",
      "side": 1,
      "message": "\u003e What are the specifics that you believe this is necessary? It really sounds like the platform or the test needs a fix, not ANGLE.\n\n1. changed name to \"PthreadKeyDestructorCallback\" to reflect expanded scope\n2. EGL spec is pretty explicit about the driver being responsible for cleaning up invalid objects which means ANGLE is on the hook to do that clean up\n3. Android CTS threadCleanup test will fail without this patch since it spawns a 1000 threads without explicitly destroying EGL objects (which is a valid thing to do per EGL spec)",
      "parentUuid": "f0ae9c30_e8789435",
      "revId": "3745f9f68a6f039b2a780e814850cd6d3eaf1c95",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "51b0ce14_38f45b3e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 18
      },
      "lineNbr": 0,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-12-11T00:56:29Z",
      "side": 1,
      "message": "These CLs fix android.opengl.cts.WrapperTest#testThreadCleanup running on CF.\n\nFor context, here\u0027s the test:\nhttps://source.corp.google.com/aosp-android10/cts/tests/tests/opengl/src/android/opengl/cts/WrapperTest.java;l\u003d163\n\nThe test creates and destroys 1000 threads, with each one creating a Display, Context, and Surface, and then eglTerminate() and eglReleaseThread() to free the resources.   Note that there is no process exit, it\u0027s just threads, so Android cannot free any memory - it\u0027s up to ANGLE to clean up while the process is still alive.\n\nWithout these CLs, the device runs out of memory about halfway through and crashes.   However, I think we can avoid this CL with an update to the previous one in the chain:\nhttps://chromium-review.googlesource.com/c/angle/angle/+/3329273/comment/add33123_c07f3fca/",
      "parentUuid": "4cfeaaf6_54ca32cb",
      "revId": "3745f9f68a6f039b2a780e814850cd6d3eaf1c95",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}