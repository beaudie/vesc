{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "a9b57f7a_6d775ea7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-10-08T17:08:25Z",
      "side": 1,
      "message": "Can you add a test for the chronically bad case where the content is defined in a texture level like 1000 ?",
      "revId": "d239dc55d0d2d9460a8aa785138391e2081dd8d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "409304d6_7a7061d4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-10-08T17:08:55Z",
      "side": 1,
      "message": "Or undefined maybe I should say.",
      "parentUuid": "a9b57f7a_6d775ea7",
      "revId": "d239dc55d0d2d9460a8aa785138391e2081dd8d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bf603069_f648c959",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-10-08T18:37:59Z",
      "side": 1,
      "message": "LGTM\n\nFor my education, I want to check what I\u0027m understanding.  It seems like this is an intermediate step towards handling content defined for all cases.  In addition to moving the old mContentDefined to ImageHelper and tracking for sub-resources, this CL seems to be trying to make sure that all clears and the start of render passes will set content defined for the appropriate sub-resource (which sets up future optimization you reference).\n\nThis CL is not trying to improve the handling of invalidate-draw cases.  Since we don\u0027t want invalidate of depth/stencil to end a render pass, we still need the existing code to set D/S content defined when depth or stencil is re-enabled, and to look for in-RP drawing that occurs after invalidate.  This CL does not help us distinguish between the two cases:\n\n1) draw-invalidate-endRP\n2) draw-invalidate-draw-endRP\n\nWhile this CL does not handle that, it does make it easier to handle.  It also makes it easier to separate the handling of load/store ops for depth vs. stencil (as in the follow-on CL I did a drive-by of).  Am I following this okay?",
      "revId": "d239dc55d0d2d9460a8aa785138391e2081dd8d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "958e9159_9ed9466c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-10-08T19:59:31Z",
      "side": 1,
      "message": "Yes to everything. I already did the change that restores content defined at endRP, and I\u0027ll put it up for review soon.",
      "parentUuid": "bf603069_f648c959",
      "revId": "d239dc55d0d2d9460a8aa785138391e2081dd8d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d67a409a_16046097",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-10-08T19:59:31Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "409304d6_7a7061d4",
      "revId": "d239dc55d0d2d9460a8aa785138391e2081dd8d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5d3144e7_a2d270b4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-10-08T21:02:48Z",
      "side": 1,
      "message": "Thanks!  Looking forward to seeing that other CL too.",
      "parentUuid": "958e9159_9ed9466c",
      "revId": "d239dc55d0d2d9460a8aa785138391e2081dd8d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cddc534b_be958fbb",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 4
      },
      "lineNbr": 1820,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-10-08T17:08:25Z",
      "side": 1,
      "message": "this is a bit fishy - array textures can have much more than 8 layers. In fact up to 2048. what\u0027s your game plan for that?\n\nI think you should probably use two data structures - one for non-array textures, which can be quite compact, and then an unordered_map type thing for array textures.",
      "range": {
        "startLine": 1819,
        "startChar": 0,
        "endLine": 1820,
        "endChar": 71
      },
      "revId": "d239dc55d0d2d9460a8aa785138391e2081dd8d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b20bbdd_474fd090",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 4
      },
      "lineNbr": 1820,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-10-08T18:37:59Z",
      "side": 1,
      "message": "In my initial review (before Jamie\u0027s comment), I wondered about subtle bugs that might creep up in the future if people don\u0027t follow how this is being used, including code that is setting the layer to this value (so that most code does its thing, but content defined isn\u0027t set).",
      "parentUuid": "cddc534b_be958fbb",
      "range": {
        "startLine": 1819,
        "startChar": 0,
        "endLine": 1820,
        "endChar": 71
      },
      "revId": "d239dc55d0d2d9460a8aa785138391e2081dd8d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f9b7eeeb_a41bfdb0",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 4
      },
      "lineNbr": 1820,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-10-08T19:59:31Z",
      "side": 1,
      "message": "@Jamie:\n\n\u003e what\u0027s your game plan for that?\n\nIgnore them until there is a user. This CL assumes layer \u003e\u003d 8 has content defined permanently, so unless we need to optimize an application that attaches to layer \u003e\u003d 8 and invalidates it, there\u0027s nothing to do.\n\nThis code does handle the more likely cases of cubemap faces used as attachments, or multi-view rendering (for VR).\n\n\u003e I think you should probably use two data structures\n\nIf you don\u0027t mind, I\u0027d rather keep it simpler and have a single path.\n\nUpdated the comment.\n\n---\n\n@Ian: I repurposed ImageHelper::onWrite() to hopefully avoid such bugs in the future. That function is also handling a clear optimization which if missing could lead to subtle bugs. At this point (and even better, together with the follow up optimization (whenever added)), I\u0027m hoping enough could go wrong if `onWrite` is missing for some test to fail.",
      "parentUuid": "2b20bbdd_474fd090",
      "range": {
        "startLine": 1819,
        "startChar": 0,
        "endLine": 1820,
        "endChar": 71
      },
      "revId": "d239dc55d0d2d9460a8aa785138391e2081dd8d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f23eab92_10aa163f",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 4
      },
      "lineNbr": 1820,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-10-08T21:02:48Z",
      "side": 1,
      "message": "\u003e If you don\u0027t mind ...\n\nSGTM, but I realize Jamie may see it differently.\n\n\u003e @Ian\n\nSGTM",
      "parentUuid": "f9b7eeeb_a41bfdb0",
      "range": {
        "startLine": 1819,
        "startChar": 0,
        "endLine": 1820,
        "endChar": 71
      },
      "revId": "d239dc55d0d2d9460a8aa785138391e2081dd8d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3da63662_4b694921",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 4
      },
      "lineNbr": 1820,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-10-08T21:08:39Z",
      "side": 1,
      "message": "Ah, you\u0027re right. This is just an optimization thing.\n\nMaybe print out a perf warning or something in these situations?",
      "parentUuid": "f23eab92_10aa163f",
      "range": {
        "startLine": 1819,
        "startChar": 0,
        "endLine": 1820,
        "endChar": 71
      },
      "revId": "d239dc55d0d2d9460a8aa785138391e2081dd8d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e917f32f_68c972fd",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 4
      },
      "lineNbr": 1820,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-10-09T02:09:19Z",
      "side": 1,
      "message": "üëç Done",
      "parentUuid": "3da63662_4b694921",
      "range": {
        "startLine": 1819,
        "startChar": 0,
        "endLine": 1820,
        "endChar": 71
      },
      "revId": "d239dc55d0d2d9460a8aa785138391e2081dd8d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}