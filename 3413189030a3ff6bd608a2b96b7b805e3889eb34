{
  "comments": [
    {
      "key": {
        "uuid": "1d96ad94_80dcf777",
        "filename": "include/GLSLANG/ShaderVars.h",
        "patchSetId": 1
      },
      "lineNbr": 72,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-10-13T13:11:52Z",
      "side": 1,
      "message": "what does outermost mean? maybe we should use the term \u0027major\u0027 or \u0027minor\u0027, like with matrices?",
      "range": {
        "startLine": 72,
        "startChar": 17,
        "endLine": 72,
        "endChar": 38
      },
      "revId": "3413189030a3ff6bd608a2b96b7b805e3889eb34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "113461b7_38ba1c95",
        "filename": "include/GLSLANG/ShaderVars.h",
        "patchSetId": 1
      },
      "lineNbr": 72,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2017-10-13T13:31:07Z",
      "side": 1,
      "message": "To me outermost is fairly self-explanatory - it\u0027s the array that\u0027s not nested within any other arrays. From \"GetMajorArraySize\" one might draw an incorrect assumption that there are two sizes, \"major\" and \"minor\", whereas in reality there can be an arbitrary number of arrays nested within each other.",
      "parentUuid": "1d96ad94_80dcf777",
      "range": {
        "startLine": 72,
        "startChar": 17,
        "endLine": 72,
        "endChar": 38
      },
      "revId": "3413189030a3ff6bd608a2b96b7b805e3889eb34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "064f9dd2_9d309c87",
        "filename": "include/GLSLANG/ShaderVars.h",
        "patchSetId": 1
      },
      "lineNbr": 72,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-10-13T13:47:35Z",
      "side": 1,
      "message": "But, is outermost the major or minor size of a 2D-array? In C++ this would be the minor size.",
      "parentUuid": "113461b7_38ba1c95",
      "range": {
        "startLine": 72,
        "startChar": 17,
        "endLine": 72,
        "endChar": 38
      },
      "revId": "3413189030a3ff6bd608a2b96b7b805e3889eb34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2337b488_17ed061b",
        "filename": "include/GLSLANG/ShaderVars.h",
        "patchSetId": 1
      },
      "lineNbr": 72,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2017-10-13T14:01:23Z",
      "side": 1,
      "message": "This will be the major size, going by https://en.wikipedia.org/wiki/Row-_and_column-major_order\nNot sure if there\u0027s some misunderstanding here.\n\nNote that GLSL spec doesn\u0027t use \"n-dimensional array\" style terminology. It speaks only of 1D arrays that may contain 1D arrays. I\u0027ve tried to write the code using terminology that\u0027s consistent with the spec. See GLSL ES 3.10 section 4.1.9:\n\n\"An array of arrays can be declared as vec4 a[3][2];  // size-3 array of size-2 array of vec4\n\nwhich declares a one-dimensional array of size 3 of one-dimensional arrays of size 2 of vec4s\"",
      "parentUuid": "064f9dd2_9d309c87",
      "range": {
        "startLine": 72,
        "startChar": 17,
        "endLine": 72,
        "endChar": 38
      },
      "revId": "3413189030a3ff6bd608a2b96b7b805e3889eb34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b5c12f5c_c0ab7d67",
        "filename": "include/GLSLANG/ShaderVars.h",
        "patchSetId": 1
      },
      "lineNbr": 72,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2017-10-13T14:04:07Z",
      "side": 1,
      "message": "I might be confused what\u0027s meant by major/minor size though. Is it the size of a row or number of rows in a row-major matrix?",
      "parentUuid": "2337b488_17ed061b",
      "range": {
        "startLine": 72,
        "startChar": 17,
        "endLine": 72,
        "endChar": 38
      },
      "revId": "3413189030a3ff6bd608a2b96b7b805e3889eb34",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}