{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "df961a7d_a02a80d1",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1573,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-05-27T15:08:54Z",
      "side": 1,
      "message": "How about this logic? It penalizes PPOs a little but removes instructions from the more common non-PPO path:\n\n```suggestion\n    if (executableVk-\u003ehasDirtyUniforms())\n    {\n        mGraphicsDirtyBits.set(DIRTY_BIT_UNIFORMS);\n    }\n    else\n    {\n        executableVk-\u003eupdateDirtyGraphicsUniformsFromPPO();\n        if (executableVk-\u003ehasDirtyUniforms())\n        {\n            mGraphicsDirtyBits.set(DIRTY_BIT_UNIFORMS);\n        }\n    }\n```\n\nPoint being that if uniforms are already dirty, it must not have been a PPO!\n\nNot suggesting exactly that repetitive pattern of course, but maybe something like\n\n```\n    if (executableVk-\u003eupdateAndCheckDirtyGraphicsUniforms())\n    {\n        mGraphicsDirtyBits.set(DIRTY_BIT_UNIFORMS);\n    }\n```\n\nAnd let that function early out if uniforms are already dirty and then do the PPO thing otherwise.",
      "range": {
        "startLine": 1569,
        "startChar": 0,
        "endLine": 1573,
        "endChar": 5
      },
      "revId": "cf67772bf0b4b07d51fab061e2ceaaad1bdaade7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8bfae676_b5620a04",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1573,
      "author": {
        "id": 1531247
      },
      "writtenOn": "2024-05-27T16:17:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "df961a7d_a02a80d1",
      "range": {
        "startLine": 1569,
        "startChar": 0,
        "endLine": 1573,
        "endChar": 5
      },
      "revId": "cf67772bf0b4b07d51fab061e2ceaaad1bdaade7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "21abdeaf_0cc98b17",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1825,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-05-27T15:08:54Z",
      "side": 1,
      "message": "For an easy follow up (unrelated change): Since you\u0027re working around this area, suggest making this similar to the graphics case, by removing the `DIRTY_BIT_DESCRIPTOR_SETS` set, and move the line that sets it from `handleDirtyGraphicsUniforms` to `handleDirtyUniformsImpl` to cover both graphics and compute.",
      "revId": "cf67772bf0b4b07d51fab061e2ceaaad1bdaade7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d4cdb008_15fa51d0",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1825,
      "author": {
        "id": 1531247
      },
      "writtenOn": "2024-05-27T16:17:50Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "21abdeaf_0cc98b17",
      "revId": "cf67772bf0b4b07d51fab061e2ceaaad1bdaade7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}