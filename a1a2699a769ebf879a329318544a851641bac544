{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "d47c4597_cb656de5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1491687
      },
      "writtenOn": "2021-05-06T16:20:06Z",
      "side": 1,
      "message": "This patch implements capturing GLES1 vertex pointer functions like glVertexPointer, glNormalPointer, etc as well as using glEnableClientState instead of the GLES2 glEnableVertexAttribArray equivalent.\n\nTo keep the diff short I am currently checking for the context version inside CaptureVertexArrayData function, as this behavior is not distinguishable by default state, but needs to check for GLES1 contexts.\n\nAny ideas about the structural improvement of this are appreciated.",
      "revId": "a1a2699a769ebf879a329318544a851641bac544",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2c66877e_8ae43167",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2021-05-07T03:36:22Z",
      "side": 1,
      "message": "LGTM with one fixup.",
      "revId": "a1a2699a769ebf879a329318544a851641bac544",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0d763b24_aa959a98",
        "filename": "src/libANGLE/GLES1Renderer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 470,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2021-05-07T03:36:22Z",
      "side": 1,
      "message": "Prefer default to be UNIMPLEMENTED or UNREACHABLE",
      "range": {
        "startLine": 470,
        "startChar": 8,
        "endLine": 470,
        "endChar": 15
      },
      "revId": "a1a2699a769ebf879a329318544a851641bac544",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4cc8bfef_b5b712c5",
        "filename": "src/libANGLE/GLES1Renderer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 470,
      "author": {
        "id": 1491687
      },
      "writtenOn": "2021-05-07T12:06:58Z",
      "side": 1,
      "message": "Since we need to cover all values up to kTextureCoordAttribIndexBase + kTexUnitCount in the texture case, I added a check for this range in the default case and emit an UNREACHABLE now if we are out of range.",
      "parentUuid": "0d763b24_aa959a98",
      "range": {
        "startLine": 470,
        "startChar": 8,
        "endLine": 470,
        "endChar": 15
      },
      "revId": "a1a2699a769ebf879a329318544a851641bac544",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fbf4b685_f34846bd",
        "filename": "src/libANGLE/GLES1Renderer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 470,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2021-05-07T14:41:33Z",
      "side": 1,
      "message": "Works for me, thanks!",
      "parentUuid": "4cc8bfef_b5b712c5",
      "range": {
        "startLine": 470,
        "startChar": 8,
        "endLine": 470,
        "endChar": 15
      },
      "revId": "a1a2699a769ebf879a329318544a851641bac544",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}