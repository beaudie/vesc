{
  "comments": [
    {
      "key": {
        "uuid": "ca05be12_17c66704",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 1720,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-06-23T05:56:36Z",
      "side": 1,
      "message": "How fancy can we get here?   Can we skip the staging buffer for an arbitrary number of levels that may already exist in the original image?",
      "revId": "25325cb6da773476c68913a96c41cf32e6c7d399",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3d078119_5b722bf3",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 1720,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-06-23T06:31:20Z",
      "side": 1,
      "message": "Hm, I suppose not at all, since there\u0027s no way to know if the other levels contain the appropriate data for their levels or are something else entirely, unless they are expanding a mip chain that ANGLE generated (and invalidated during writes to any levels).",
      "parentUuid": "ca05be12_17c66704",
      "revId": "25325cb6da773476c68913a96c41cf32e6c7d399",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a7cd46c4_42a35ca8",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 1720,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-06-23T13:16:49Z",
      "side": 1,
      "message": "See line 1676. Any update for levels Base+1 to Max are discarded, because we are about to generate mipmaps into them anyway. This function only stages the update for the base level.\n\nAlso note that this path is only taken when we need to redefine the image. If the image already has enough levels, we don\u0027t need to do this.",
      "parentUuid": "3d078119_5b722bf3",
      "revId": "25325cb6da773476c68913a96c41cf32e6c7d399",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2093d0e1_9226e561",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 5
      },
      "lineNbr": 3949,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-06-23T17:01:08Z",
      "side": 1,
      "message": "store by-value and use std::move, then re-initialize if necessary. update properties after the std::move if necessary.",
      "range": {
        "startLine": 3949,
        "startChar": 3,
        "endLine": 3949,
        "endChar": 85
      },
      "revId": "25325cb6da773476c68913a96c41cf32e6c7d399",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc6bc101_47d6bc09",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 5
      },
      "lineNbr": 3949,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-06-25T03:40:54Z",
      "side": 1,
      "message": "`new` is necessary to pass the image to stageSubresourceUpdateFromImage.\n\nThe move constructor is destructive to `this`. What I need here is to only partially move `this` and that\u0027s why this functionality couldn\u0027t have been done outside the class.",
      "parentUuid": "2093d0e1_9226e561",
      "range": {
        "startLine": 3949,
        "startChar": 3,
        "endLine": 3949,
        "endChar": 85
      },
      "revId": "25325cb6da773476c68913a96c41cf32e6c7d399",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e1c54cac_e36a9f3e",
        "filename": "src/tests/gl_tests/MipmapTest.cpp",
        "patchSetId": 5
      },
      "lineNbr": 860,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-06-23T17:01:08Z",
      "side": 1,
      "message": "I can\u0027t find this issue in my inbox. Is this a new failure?",
      "range": {
        "startLine": 859,
        "startChar": 47,
        "endLine": 860,
        "endChar": 4
      },
      "revId": "25325cb6da773476c68913a96c41cf32e6c7d399",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a4fcfebe_47ac560b",
        "filename": "src/tests/gl_tests/MipmapTest.cpp",
        "patchSetId": 5
      },
      "lineNbr": 860,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-06-25T03:40:54Z",
      "side": 1,
      "message": "Yes. The new code exposes a bug in SwiftShader. The issue is filed in buganizer (per their request)",
      "parentUuid": "e1c54cac_e36a9f3e",
      "range": {
        "startLine": 859,
        "startChar": 47,
        "endLine": 860,
        "endChar": 4
      },
      "revId": "25325cb6da773476c68913a96c41cf32e6c7d399",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}