{
  "comments": [
    {
      "key": {
        "uuid": "85767d54_32a30a14",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 66,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-03-16T18:30:06Z",
      "side": 1,
      "message": "small nit: can omit inline. It\u0027s only necessary for header files. this function likely doesn\u0027t need to be inlined. If it did you could use ANGLE_INLINE to force inlining.",
      "range": {
        "startLine": 66,
        "startChar": 0,
        "endLine": 66,
        "endChar": 7
      },
      "revId": "76ce738e4d072cadd25140d91458a844aade66d5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cf57d77f_40462db6",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 66,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-03-16T18:30:06Z",
      "side": 1,
      "message": "Can you scan the memory here and return a set of supported flags? That way you don\u0027t need the hack you put in vk_utils.",
      "range": {
        "startLine": 66,
        "startChar": 29,
        "endLine": 66,
        "endChar": 51
      },
      "revId": "76ce738e4d072cadd25140d91458a844aade66d5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "75223944_dfb7e948",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 66,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2020-03-16T18:39:58Z",
      "side": 1,
      "message": "so callers in possibly multiple places will do their own memory scanning logic?\n\nhow about i add a method to vk_utils \"GetSupportedMemoryType(...)\" that takes in desired memory type flags and returns the best possible flag combination for that usecase and underlying GPU. incase the desired flag cant be supported we return the spec guaranteed \"host_visible + host_coherent\" flag\n\nthen the caller can do whatever it wants with that info",
      "parentUuid": "cf57d77f_40462db6",
      "range": {
        "startLine": 66,
        "startChar": 29,
        "endLine": 66,
        "endChar": 51
      },
      "revId": "76ce738e4d072cadd25140d91458a844aade66d5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d8236790_6fc9cd79",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 66,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2020-03-16T19:25:19Z",
      "side": 1,
      "message": "thought this will be straight forward but it requires a surprisingly large amount of plumbing to get the memproperties, memrequirements and so on. Want to keep this change simple, looking for suggestions along those lines",
      "parentUuid": "75223944_dfb7e948",
      "range": {
        "startLine": 66,
        "startChar": 29,
        "endLine": 66,
        "endChar": 51
      },
      "revId": "76ce738e4d072cadd25140d91458a844aade66d5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4475e849_072a113e",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 66,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2020-03-16T19:27:04Z",
      "side": 1,
      "message": "\u003e Can you scan the memory here and return a set of supported flags?\n\nis there a util function i can call to do this? else a little more detail on what exactly you need to be done here",
      "parentUuid": "d8236790_6fc9cd79",
      "range": {
        "startLine": 66,
        "startChar": 29,
        "endLine": 66,
        "endChar": 51
      },
      "revId": "76ce738e4d072cadd25140d91458a844aade66d5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}