{
  "comments": [
    {
      "key": {
        "uuid": "f2d453e8_a6f5c5d9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-09-18T21:08:23Z",
      "side": 1,
      "message": "PTAL\n\nReverted some of the API changes based on Jamie\u0027s feedback.",
      "revId": "a49d9755e238b7323b717a269752f170f88ae3bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d7629e7e_1f9d6763",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-09-18T21:24:51Z",
      "side": 1,
      "message": "LGTM - I was hoping we could get the single-counting without merging the APIs.",
      "revId": "a49d9755e238b7323b717a269752f170f88ae3bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f78d88b4_76cbb01f",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 894,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-09-18T21:24:51Z",
      "side": 1,
      "message": "is this still doing double-counting?",
      "range": {
        "startLine": 872,
        "startChar": 0,
        "endLine": 894,
        "endChar": 9
      },
      "revId": "a49d9755e238b7323b717a269752f170f88ae3bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a26ca2fe_0a409bd1",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 894,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-09-18T21:43:09Z",
      "side": 1,
      "message": "I\u0027m not sure what you mean by \"double-counting\".\n\nThe DescriptorSetLayoutDesc is built up during each iteration of this loop (graphics, compute), and that is unpacked twice to get the binding counts:\n- once for the descriptor set layout in getDescriptorSetLayout()\n- once here for the descriptor pool",
      "parentUuid": "f78d88b4_76cbb01f",
      "range": {
        "startLine": 872,
        "startChar": 0,
        "endLine": 894,
        "endChar": 9
      },
      "revId": "a49d9755e238b7323b717a269752f170f88ae3bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "284c9d81_8054c015",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 894,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-09-18T22:00:13Z",
      "side": 1,
      "message": "Maybe I misspoke. Did your prior CL get rid of the unpacking?",
      "parentUuid": "a26ca2fe_0a409bd1",
      "range": {
        "startLine": 872,
        "startChar": 0,
        "endLine": 894,
        "endChar": 9
      },
      "revId": "a49d9755e238b7323b717a269752f170f88ae3bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7298b2bd_9800b526",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 894,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-09-18T22:20:53Z",
      "side": 1,
      "message": "The CL that landed already didn\u0027t affect these descriptor set layouts/pools here in ContextVk, since they weren\u0027t hitting issues in the first place and were able to hide.   Adding the descriptor set layout handle to the pools showed that the layouts here are different between graphics and compute, so they require separate pools.\n\nThe prior version of this CL only unpacked once, since a single unpacking was used in getDescriptorSetLayout() to create the descriptor set layout and corresponding pool.\n\nHopefully that answers the question.",
      "parentUuid": "284c9d81_8054c015",
      "range": {
        "startLine": 872,
        "startChar": 0,
        "endLine": 894,
        "endChar": 9
      },
      "revId": "a49d9755e238b7323b717a269752f170f88ae3bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "88dc7717_fed4760c",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 894,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-09-21T14:56:13Z",
      "side": 1,
      "message": "I see. Could you add a helper function to make the unpack code in one place? Really my concern was that my comments made you revert some of the nice parts of this CL.",
      "parentUuid": "7298b2bd_9800b526",
      "range": {
        "startLine": 872,
        "startChar": 0,
        "endLine": 894,
        "endChar": 9
      },
      "revId": "a49d9755e238b7323b717a269752f170f88ae3bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a0d9330f_e3dcb6bd",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.h",
        "patchSetId": 7
      },
      "lineNbr": 959,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-09-18T21:08:23Z",
      "side": 1,
      "message": "This needs to hold a pool for both graphics and compute driver uniforms, since those generate different descriptor set layout handles.   I haven\u0027t looked into what the differences between the DescriptorSetLayoutDesc are, but trying to special-case the driver uniforms sharing the same descriptor pool with different layout handles probably doesn\u0027t gain us much compared to the extra complexity of the code (assuming the descriptor types/counts match).   The CPU overhead of creating another pool should also be negligible, since it\u0027s only done once per context.\n\nInstead, the change to reduce the starting size of all of the pools will be a better answer to recover the memory.   That change should involve getting counts of descriptor sets allocated for each type for apps/benchmarks, and possibly allow the callers to specify the sizes of the pools (rather than a default value that has to compromise for everyone).",
      "revId": "a49d9755e238b7323b717a269752f170f88ae3bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ca42b70c_a7c7d8a2",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.h",
        "patchSetId": 7
      },
      "lineNbr": 959,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-09-18T21:24:51Z",
      "side": 1,
      "message": "Might not be an issue if we can deal with very small pools without overhead.",
      "parentUuid": "a0d9330f_e3dcb6bd",
      "revId": "a49d9755e238b7323b717a269752f170f88ae3bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f703b436_8fbec5a1",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.h",
        "patchSetId": 7
      },
      "lineNbr": 959,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-09-18T21:43:09Z",
      "side": 1,
      "message": "Agreed.   Shrinking the pools should be straightforward, and they should be able to grow in a way that more closely matches the actual requirements.\n\nThat change should be able to arrive relatively soon, and I don\u0027t think we\u0027ll see any drawbacks from this extra descriptor pool until then.  Tracked with: anglebug.com/5067: Vulkan: Improve descriptor pool creation size",
      "parentUuid": "ca42b70c_a7c7d8a2",
      "revId": "a49d9755e238b7323b717a269752f170f88ae3bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2043e382_ca3d6be1",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 7
      },
      "lineNbr": 328,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-09-18T21:24:51Z",
      "side": 1,
      "message": "nit: maybe comment that this isn\u0027t owned, is merely cached for testing. Might rename it too e.g. mCachedDescriptorSetLayout",
      "range": {
        "startLine": 328,
        "startChar": 26,
        "endLine": 328,
        "endChar": 46
      },
      "revId": "a49d9755e238b7323b717a269752f170f88ae3bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "388cf875_20100408",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 7
      },
      "lineNbr": 328,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-09-18T21:43:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2043e382_ca3d6be1",
      "range": {
        "startLine": 328,
        "startChar": 26,
        "endLine": 328,
        "endChar": 46
      },
      "revId": "a49d9755e238b7323b717a269752f170f88ae3bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}