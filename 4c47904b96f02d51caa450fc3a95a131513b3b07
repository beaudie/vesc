{
  "comments": [
    {
      "key": {
        "uuid": "cfe559f4_5b02639e",
        "filename": "extensions/EGL_ANGLE_window_fixed_size.txt",
        "patchSetId": 4
      },
      "lineNbr": 11,
      "author": {
        "id": 1105219
      },
      "writtenOn": "2014-02-13T17:33:04Z",
      "side": 1,
      "message": "Missed this before-- we need company affiliation.",
      "revId": "4c47904b96f02d51caa450fc3a95a131513b3b07",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0fdcd12e_5da6db5e",
        "filename": "extensions/EGL_ANGLE_window_fixed_size.txt",
        "patchSetId": 4
      },
      "lineNbr": 16,
      "author": {
        "id": 1105219
      },
      "writtenOn": "2014-02-13T17:33:04Z",
      "side": 1,
      "message": "Also missed this-- I think we\u0027ve usually used Google addresses. (Actually, I was TG last time I wrote an extension; had to check the registry to see what people have done before.)",
      "revId": "4c47904b96f02d51caa450fc3a95a131513b3b07",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cfe559f4_1b21bb2e",
        "filename": "extensions/EGL_ANGLE_window_fixed_size.txt",
        "patchSetId": 4
      },
      "lineNbr": 73,
      "author": {
        "id": 1105219
      },
      "writtenOn": "2014-02-13T17:33:04Z",
      "side": 1,
      "message": "Extra leading quote.",
      "revId": "4c47904b96f02d51caa450fc3a95a131513b3b07",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0fdcd12e_fdfc0723",
        "filename": "src/libEGL/Display.cpp",
        "patchSetId": 4
      },
      "lineNbr": 248,
      "author": {
        "id": 1105219
      },
      "writtenOn": "2014-02-13T17:33:04Z",
      "side": 1,
      "message": "This error is no longer called out in the extension text. We should either specify an error for zero values when fixed size is set, or silently allow creation of zero-sized surfaces if the application asks for them. The extension text would be cleaner with the latter, but it\u0027d be less friendly to careless users. I... could go either way on this one.",
      "revId": "4c47904b96f02d51caa450fc3a95a131513b3b07",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0fdcd12e_fd15e79a",
        "filename": "src/libEGL/Surface.cpp",
        "patchSetId": 4
      },
      "lineNbr": 42,
      "author": {
        "id": 1105219
      },
      "writtenOn": "2014-02-13T17:33:04Z",
      "side": 1,
      "message": "I doubt it\u0027s a functional issue, but should we continue to initialize these to -1 if fixedSize is false, so that it\u0027s easier to tell if something goes wrong in that case?",
      "revId": "4c47904b96f02d51caa450fc3a95a131513b3b07",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "afb4a5de_9a14edd2",
        "filename": "src/libEGL/Surface.cpp",
        "patchSetId": 4
      },
      "lineNbr": 65,
      "author": {
        "id": 1105219
      },
      "writtenOn": "2014-02-13T17:33:04Z",
      "side": 1,
      "message": "Is this defaulting to EGL_TRUE because this is the constructor called for offscreen surfaces? If so, please comment to that effect.",
      "revId": "4c47904b96f02d51caa450fc3a95a131513b3b07",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}