{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "0e2530db_44e78b1e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 10,
      "author": {
        "id": 1520902
      },
      "writtenOn": "2023-04-25T02:11:23Z",
      "side": 1,
      "message": "I can\u0027t find `mLastFlushQueueSerial` in class `ContextVk`, is that going to be introduced in another CL?",
      "revId": "588e31f346bb69f51ab1863d952e5c056061b40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7bc22465_cd3161f8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 10,
      "author": {
        "id": 1520902
      },
      "writtenOn": "2023-04-25T02:22:11Z",
      "side": 1,
      "message": "I think you meant `mLastFlushedQueueSerial`, so this is just a typo in the comment.\n\nI don\u0027t see there are changes being made on how `mLastFlushedQueueSerial` gets its\u0027 value assigned, shall we remove `ContextVk::mLastFlushedQueueSerial` from the commit message?",
      "parentUuid": "0e2530db_44e78b1e",
      "revId": "588e31f346bb69f51ab1863d952e5c056061b40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b55c9410_84028959",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 10,
      "author": {
        "id": 1564492
      },
      "writtenOn": "2023-04-25T12:55:31Z",
      "side": 1,
      "message": "It was previously assigned as an output argument:\n```\nANGLE_INLINE angle::Result ContextVk::allocateQueueSerialIndex()\n{\n    ASSERT(mCurrentQueueSerialIndex \u003d\u003d kInvalidQueueSerialIndex);\n    // Make everything appears to be flushed and submitted\n    ANGLE_TRY(mRenderer-\u003eallocateQueueSerialIndex(\u0026mLastFlushedQueueSerial));\n```",
      "parentUuid": "7bc22465_cd3161f8",
      "revId": "588e31f346bb69f51ab1863d952e5c056061b40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "117764fe_7cdc08e1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 10,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2023-04-25T18:12:56Z",
      "side": 1,
      "message": "Right, typo. Fixed.",
      "parentUuid": "b55c9410_84028959",
      "revId": "588e31f346bb69f51ab1863d952e5c056061b40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da662f8e_37206f66",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 3462,
      "author": {
        "id": 1564492
      },
      "writtenOn": "2023-04-25T12:55:31Z",
      "side": 1,
      "message": "Suggest adding `ASSERT(mLastFlushedQueueSerial.valid())` so it is clear that `mLastSubmittedQueueSerial` may be invalid but not `mLastFlushedQueueSerial`.",
      "revId": "588e31f346bb69f51ab1863d952e5c056061b40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "373f1b58_9ed97df3",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 3462,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2023-04-25T18:12:56Z",
      "side": 1,
      "message": "Good point. Added.",
      "parentUuid": "da662f8e_37206f66",
      "revId": "588e31f346bb69f51ab1863d952e5c056061b40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "94bcc250_a8062802",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 3464,
      "author": {
        "id": 1564492
      },
      "writtenOn": "2023-04-25T12:55:31Z",
      "side": 1,
      "message": "Should not happen in practice, but...\n\nCalling `flushAndSubmitOutsideRenderPassCommands()` as the first submission will have invalid `mLastFlushedQueueSerial` and then assert inside `QueueSerial::operator\u003e`.\n\nSuggest adding check `if (mLastFlushedQueueSerial.valid())` to the `flushAndSubmitOutsideRenderPassCommands()`.\n\nOr maybe initialize `mLastSubmittedQueueSerial` and `mLastFlushedQueueSerial` when Context is created as an exception?",
      "range": {
        "startLine": 3464,
        "startChar": 11,
        "endLine": 3464,
        "endChar": 62
      },
      "revId": "588e31f346bb69f51ab1863d952e5c056061b40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "54f74685_6ca3d339",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 3464,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2023-04-25T18:12:56Z",
      "side": 1,
      "message": "I have added ASSERT(mLastFlushedQueueSerial.valid()). When you come to submitCommands, mLastFlushedQueueSerial is guarantted to be valid. Even if first submisison is flushAndSubmitOutsideRenderPassCommands and outsideRPCOmmands is empty (which you did not actually flush), we will still regenerate queue serial for outsideRPCommands at COntextVk.cpp line 7064.",
      "parentUuid": "94bcc250_a8062802",
      "range": {
        "startLine": 3464,
        "startChar": 11,
        "endLine": 3464,
        "endChar": 62
      },
      "revId": "588e31f346bb69f51ab1863d952e5c056061b40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "28845084_a7aafe9d",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 3464,
      "author": {
        "id": 1564492
      },
      "writtenOn": "2023-04-25T18:43:57Z",
      "side": 1,
      "message": "line 7064 is from `ContextVk::flushImpl()`.\n\nThe `flushAndSubmitOutsideRenderPassCommands()` calls `submitCommands()` directly, so line 7064 will not be executed and we hit the added ASSERT().",
      "parentUuid": "54f74685_6ca3d339",
      "range": {
        "startLine": 3464,
        "startChar": 11,
        "endLine": 3464,
        "endChar": 62
      },
      "revId": "588e31f346bb69f51ab1863d952e5c056061b40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eb28988e_6eb71174",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 7010,
      "author": {
        "id": 1564492
      },
      "writtenOn": "2023-04-25T12:55:31Z",
      "side": 1,
      "message": "Suggest adding `ASSERT(mLastFlushedQueueSerial.valid())`.",
      "revId": "588e31f346bb69f51ab1863d952e5c056061b40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c2a29813_fed4f98f",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 7010,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2023-04-25T18:12:56Z",
      "side": 1,
      "message": "This can be invalid, as you suggested in the other comment (that this is the first flush and all command buffer are empty). It will hit line 7059 bellow.",
      "parentUuid": "eb28988e_6eb71174",
      "revId": "588e31f346bb69f51ab1863d952e5c056061b40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ac790732_3f555667",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 7010,
      "author": {
        "id": 1564492
      },
      "writtenOn": "2023-04-25T18:43:57Z",
      "side": 1,
      "message": "Yes, it can be invalid. But `mLastSubmittedQueueSerial` must be also invalid. We can not have invalid flush but valid submit. In that case, `(mLastFlushedQueueSerial !\u003d mLastSubmittedQueueSerial)` will be false.\n\nWe get inside this branch only when something was flushed - this is written in the comment. And if something is flushed `mLastFlushedQueueSerial` must be valid.",
      "parentUuid": "c2a29813_fed4f98f",
      "revId": "588e31f346bb69f51ab1863d952e5c056061b40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "07f589e3_b3ff8914",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 7508,
      "author": {
        "id": 1564492
      },
      "writtenOn": "2023-04-25T12:55:31Z",
      "side": 1,
      "message": "If I understand correctly, this may only fail if a Context never submitted any commands, and will always pass after first submission?\n\nSuggest adding comment for clarity.\n\nOr maybe initialize `mLastSubmittedQueueSerial` and `mLastFlushedQueueSerial` when Context is created as an exception?",
      "revId": "588e31f346bb69f51ab1863d952e5c056061b40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dfe49e3b_a3c7b9e9",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 7508,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2023-04-25T18:12:56Z",
      "side": 1,
      "message": "Right. Comment added.",
      "parentUuid": "07f589e3_b3ff8914",
      "revId": "588e31f346bb69f51ab1863d952e5c056061b40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "192ca994_1ecd3efe",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 7661,
      "author": {
        "id": 1564492
      },
      "writtenOn": "2023-04-25T12:55:31Z",
      "side": 1,
      "message": "`\u003c\u003d` operator was in existing code, however I just noticed the difference with `mLastFlushedQueueSerial \u003c mRenderPassCommands-\u003egetQueueSerial()`.\n\nI think operator should be the same in both cases.\n\nOnly case when we may need `\u003c\u003d` is if `flushOutsideRPCommands()` fails and we repeat same submission. Repeated flush/submission after failure is a low priority problem.",
      "range": {
        "startLine": 7661,
        "startChar": 11,
        "endLine": 7661,
        "endChar": 82
      },
      "revId": "588e31f346bb69f51ab1863d952e5c056061b40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "35ee3290_7441f514",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 7661,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2023-04-25T18:12:56Z",
      "side": 1,
      "message": "Removed `\u003d\u003d`.",
      "parentUuid": "192ca994_1ecd3efe",
      "range": {
        "startLine": 7661,
        "startChar": 11,
        "endLine": 7661,
        "endChar": 82
      },
      "revId": "588e31f346bb69f51ab1863d952e5c056061b40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b2defae3_ac3ce114",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.h",
        "patchSetId": 6
      },
      "lineNbr": 794,
      "author": {
        "id": 1564492
      },
      "writtenOn": "2023-04-25T12:55:31Z",
      "side": 1,
      "message": "Name does not match `mSubmittedResourceUse` member. Suggest remove/add `Last` to both.\n\nIMO, it should not have `Last` in the name, because `ResourceUse` represents all ever submitted `QueueSerials`.",
      "range": {
        "startLine": 794,
        "startChar": 27,
        "endLine": 794,
        "endChar": 54
      },
      "revId": "588e31f346bb69f51ab1863d952e5c056061b40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5c730c3e_4edd76c6",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.h",
        "patchSetId": 6
      },
      "lineNbr": 794,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-04-25T13:50:02Z",
      "side": 1,
      "message": "There is no actual \"resource use\" here, so it feels like this is leaking internals of ContextVk more than anything. How about a function that instead takes a resource use and merges it with `mSubmittedResourceUse` and keep `mSubmittedResourceUse` hidden?\n\nMaybe something like `mergeResourceUseWithLastSubmitted...` (QueueSerial?)",
      "revId": "588e31f346bb69f51ab1863d952e5c056061b40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "651e05f7_752aad36",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.h",
        "patchSetId": 6
      },
      "lineNbr": 794,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2023-04-25T18:12:56Z",
      "side": 1,
      "message": "Good point. Renamed to getSubmittedResourceUse;",
      "parentUuid": "b2defae3_ac3ce114",
      "range": {
        "startLine": 794,
        "startChar": 27,
        "endLine": 794,
        "endChar": 54
      },
      "revId": "588e31f346bb69f51ab1863d952e5c056061b40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "744ba2fd_de52ebcf",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.h",
        "patchSetId": 6
      },
      "lineNbr": 794,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2023-04-25T18:12:56Z",
      "side": 1,
      "message": "`contextVk-\u003emergeResourceUseWithLastSubmitted(mUse)` is a bit counter intuitive, that it modifies passed in argument instead of caller\u0027s mUse. You can think about context as a container resource, every time it submitted to command, it is been used. Per Igor\u0027s sussgestion, I have renamed to getSubmittedResourceUse().",
      "parentUuid": "5c730c3e_4edd76c6",
      "revId": "588e31f346bb69f51ab1863d952e5c056061b40f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}