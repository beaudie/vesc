{
  "comments": [
    {
      "key": {
        "uuid": "ab897461_279cfacc",
        "filename": "scripts/generate_entry_points.py",
        "patchSetId": 6
      },
      "lineNbr": 125,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-07-24T13:35:52Z",
      "side": 1,
      "message": "can you make this an inlined helper function in global_state.h that takes a gl::Context?\n\nANGLE_INLINE std::unique_lock\u003cstd::mutex\u003e GetShareGroupLock(const gl::Context *context)\n{\n   return context-\u003eisShared() ? ....\n}",
      "range": {
        "startLine": 125,
        "startChar": 8,
        "endLine": 125,
        "endChar": 139
      },
      "revId": "0459c575d29306829a7d924726d90c76c25a2df5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "58717f6b_41881d92",
        "filename": "scripts/generate_entry_points.py",
        "patchSetId": 6
      },
      "lineNbr": 125,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-07-24T22:50:35Z",
      "side": 1,
      "message": "Unfortunately the scope then finishes in the function and the lock is released.",
      "parentUuid": "ab897461_279cfacc",
      "range": {
        "startLine": 125,
        "startChar": 8,
        "endLine": 125,
        "endChar": 139
      },
      "revId": "0459c575d29306829a7d924726d90c76c25a2df5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b3c4e8da_4b342246",
        "filename": "scripts/generate_entry_points.py",
        "patchSetId": 6
      },
      "lineNbr": 125,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-07-25T12:55:16Z",
      "side": 1,
      "message": "Right. Return an rvalue reference.\n\nhttps://en.cppreference.com/w/cpp/thread/unique_lock/operator%3D",
      "parentUuid": "58717f6b_41881d92",
      "range": {
        "startLine": 125,
        "startChar": 8,
        "endLine": 125,
        "endChar": 139
      },
      "revId": "0459c575d29306829a7d924726d90c76c25a2df5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7a638a3e_e23d56fe",
        "filename": "scripts/generate_entry_points.py",
        "patchSetId": 6
      },
      "lineNbr": 125,
      "author": {
        "id": 1256245
      },
      "writtenOn": "2019-08-13T20:43:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b3c4e8da_4b342246",
      "range": {
        "startLine": 125,
        "startChar": 8,
        "endLine": 125,
        "endChar": 139
      },
      "revId": "0459c575d29306829a7d924726d90c76c25a2df5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4a3a6442_124385c8",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 6
      },
      "lineNbr": 318,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-07-24T13:35:52Z",
      "side": 1,
      "message": "nit: shareContext !\u003d nullptr",
      "range": {
        "startLine": 318,
        "startChar": 14,
        "endLine": 318,
        "endChar": 41
      },
      "revId": "0459c575d29306829a7d924726d90c76c25a2df5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b1b0a307_25b88b00",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 6
      },
      "lineNbr": 318,
      "author": {
        "id": 1256245
      },
      "writtenOn": "2019-08-13T20:43:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4a3a6442_124385c8",
      "range": {
        "startLine": 318,
        "startChar": 14,
        "endLine": 318,
        "endChar": 41
      },
      "revId": "0459c575d29306829a7d924726d90c76c25a2df5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "46348aff_4392a08e",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 6
      },
      "lineNbr": 364,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-07-24T13:35:52Z",
      "side": 1,
      "message": "can you move this to Display.cpp?",
      "range": {
        "startLine": 360,
        "startChar": 0,
        "endLine": 364,
        "endChar": 5
      },
      "revId": "0459c575d29306829a7d924726d90c76c25a2df5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b5a3efc1_d223eeb2",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 6
      },
      "lineNbr": 364,
      "author": {
        "id": 1256245
      },
      "writtenOn": "2019-08-13T20:43:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "46348aff_4392a08e",
      "range": {
        "startLine": 360,
        "startChar": 0,
        "endLine": 364,
        "endChar": 5
      },
      "revId": "0459c575d29306829a7d924726d90c76c25a2df5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "263b5f1a_a15ff0bb",
        "filename": "src/libANGLE/Context.h",
        "patchSetId": 6
      },
      "lineNbr": 321,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-07-24T13:35:52Z",
      "side": 1,
      "message": "instead of passing a non-Const context, can you call setShared in Display.cpp?",
      "range": {
        "startLine": 321,
        "startChar": 12,
        "endLine": 321,
        "endChar": 34
      },
      "revId": "0459c575d29306829a7d924726d90c76c25a2df5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b147c67_abbf0c3f",
        "filename": "src/libANGLE/Context.h",
        "patchSetId": 6
      },
      "lineNbr": 321,
      "author": {
        "id": 1256245
      },
      "writtenOn": "2019-08-13T20:43:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "263b5f1a_a15ff0bb",
      "range": {
        "startLine": 321,
        "startChar": 12,
        "endLine": 321,
        "endChar": 34
      },
      "revId": "0459c575d29306829a7d924726d90c76c25a2df5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d24ec620_e2bab105",
        "filename": "src/libGL/entry_points_gl_1_0_autogen.cpp",
        "patchSetId": 6
      },
      "lineNbr": 38,
      "author": {
        "id": 1263724
      },
      "writtenOn": "2019-07-23T23:32:24Z",
      "side": 1,
      "message": "What is std::unique_lock\u003cstd::mutex\u003e() locking?\nIs it the same thing as the same statement elsewhere?\nWhy isn\u0027t there a name inside the parenthesis, say a context specific mutex vs. the global mutex.",
      "revId": "0459c575d29306829a7d924726d90c76c25a2df5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cebb8bdb_a9d873a5",
        "filename": "src/libGL/entry_points_gl_1_0_autogen.cpp",
        "patchSetId": 6
      },
      "lineNbr": 38,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-07-24T22:50:35Z",
      "side": 1,
      "message": "It doesn\u0027t lock anything. The CL is trying to introduce locking only to shared contexts.",
      "parentUuid": "d24ec620_e2bab105",
      "revId": "0459c575d29306829a7d924726d90c76c25a2df5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "05609289_7d6e70bd",
        "filename": "src/libGL/entry_points_gl_1_0_autogen.cpp",
        "patchSetId": 6
      },
      "lineNbr": 38,
      "author": {
        "id": 1263724
      },
      "writtenOn": "2019-07-25T16:34:15Z",
      "side": 1,
      "message": "So, what\u0027s the point of having \"std::unique_lock\u003cstd::mutex\u003e()\" in the code if it does nothing?\nShould this just be: if (context-\u003eisShaded()) { std::unique_lock\u003cstd::mutex\u003e(egl::GetGlobalMutex()) }",
      "parentUuid": "cebb8bdb_a9d873a5",
      "revId": "0459c575d29306829a7d924726d90c76c25a2df5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d6bc791f_b473da02",
        "filename": "src/libGL/entry_points_gl_1_0_autogen.cpp",
        "patchSetId": 6
      },
      "lineNbr": 38,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-07-25T17:18:57Z",
      "side": 1,
      "message": "It\u0027s because `std::unique_lock` does the locking and unlocking in constructor and destructor, so if it\u0027s placed in an `if`, it doesn\u0027t protect anything.\n\nThis is really just a fancy way of doing:\n\nif (context-\u003eisShaded()) { egl::GetGlobalMutex().lock(); }\n...\u003ccode\u003e...\nif (context-\u003eisShaded()) { egl::GetGlobalMutex().unlock(); }\n\nExcept the `if` is hidden inside the `std::unique_lock` object.",
      "parentUuid": "05609289_7d6e70bd",
      "revId": "0459c575d29306829a7d924726d90c76c25a2df5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cf01d8bb_099efdbe",
        "filename": "src/libGL/entry_points_gl_1_0_autogen.cpp",
        "patchSetId": 6
      },
      "lineNbr": 38,
      "author": {
        "id": 1263724
      },
      "writtenOn": "2019-07-25T18:52:05Z",
      "side": 1,
      "message": "Okay, got it. And the no-op lock is there to make that work out.",
      "parentUuid": "d6bc791f_b473da02",
      "revId": "0459c575d29306829a7d924726d90c76c25a2df5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4be34555_10292598",
        "filename": "src/libGL/entry_points_gl_1_0_autogen.cpp",
        "patchSetId": 6
      },
      "lineNbr": 38,
      "author": {
        "id": 1256245
      },
      "writtenOn": "2019-08-13T20:43:14Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "cf01d8bb_099efdbe",
      "revId": "0459c575d29306829a7d924726d90c76c25a2df5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}