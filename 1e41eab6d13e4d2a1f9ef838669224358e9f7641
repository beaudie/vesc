{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "70354a1a_756502d1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1374244
      },
      "writtenOn": "2020-12-09T06:16:53Z",
      "side": 1,
      "message": "This CL makes \"gpu-fyi-try-mac-amd-dqp\" bot green again by denying access to shader caching database files (\".*com\\.apple\\.metal.*(libraries|functions).*\\.(maps|data)\").\n\nFurther testament is that the next CL https://chromium-review.googlesource.com/c/angle/angle/+/2580919 that reverts this CL has red \"gpu-fyi-try-mac-amd-dqp\" bot (timeout issues).\n\nThis also confirms Apple\u0027s underlying shader caching mechanism has intermittent deadlock issues when accessing files.",
      "revId": "1e41eab6d13e4d2a1f9ef838669224358e9f7641",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3a337583_c8324e6d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-12-09T15:13:13Z",
      "side": 1,
      "message": "Thanks for addressing this Quyen. This is also a problem with other test suites like angle_end2end_tests. Is there a way we can expose this as an ANGLE feature?",
      "revId": "1e41eab6d13e4d2a1f9ef838669224358e9f7641",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a118ea58_04cd724c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1374244
      },
      "writtenOn": "2020-12-09T18:11:21Z",
      "side": 1,
      "message": "The suspected root cause of 20 seconds+ timeout is the shader caching happening inside Metal framework (well, I think it is kinda confirmed at this point as this CL made the dEQP bot green compare the next CL where the changes are reverted. I did run the dEQP multiple times (3 times in latest patchset) and it all passed).\n\nUnfortunately, the shader caching mechanism inside Metal framework is completely black-box to outsider and there is no way to disable it. I have to bypass it by hooking the \"fopen\" function and deny access to the caching files. The hooking library must be preloaded first (via DYLD_INSERT_LIBRARIES) before any other libraries in order for the \"fopen\" symbol to be interposed.\n\nI don\u0027t think this hooking could be done by ANGLE as a library\u0027s feature alone (not that I\u0027m aware of). Since ANGLE as a library cannot control the environment variables before the process is loaded.",
      "parentUuid": "3a337583_c8324e6d",
      "revId": "1e41eab6d13e4d2a1f9ef838669224358e9f7641",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5cae5026_862cea8e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-12-09T19:28:40Z",
      "side": 1,
      "message": "OK, I understand better now. Could we set up this hooking for angle_end2end_tests as well? This is a pretty cool trick.",
      "parentUuid": "a118ea58_04cd724c",
      "revId": "1e41eab6d13e4d2a1f9ef838669224358e9f7641",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3267ef61_16d77a1a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2020-12-10T20:35:51Z",
      "side": 1,
      "message": "Looks great overall Quyen. Fantastic work tracking this down and working around it. I\u0027ve alerted the engineers who have run into hangs compiling Metal shaders in http://crbug.com/974219 (restricted view, sorry) to your workaround here.\n\nLGTM modulo Jamie\u0027s feedback. A couple of other small suggestions.\n",
      "revId": "1e41eab6d13e4d2a1f9ef838669224358e9f7641",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0fd4f774_522b8a27",
        "filename": "src/tests/BUILD.gn",
        "patchSetId": 5
      },
      "lineNbr": 1187,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-12-09T19:28:40Z",
      "side": 1,
      "message": "could you add a comment here as to what\u0027s going on?\n\nmaybe we should put this in the angle_test template in angle.gni and it would propagate.",
      "range": {
        "startLine": 1187,
        "startChar": 6,
        "endLine": 1187,
        "endChar": 9
      },
      "revId": "1e41eab6d13e4d2a1f9ef838669224358e9f7641",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c9b874cc_a9c64c2e",
        "filename": "src/tests/BUILD.gn",
        "patchSetId": 5
      },
      "lineNbr": 1187,
      "author": {
        "id": 1374244
      },
      "writtenOn": "2020-12-11T18:36:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0fd4f774_522b8a27",
      "range": {
        "startLine": 1187,
        "startChar": 6,
        "endLine": 1187,
        "endChar": 9
      },
      "revId": "1e41eab6d13e4d2a1f9ef838669224358e9f7641",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "53d57510_8d9bbaad",
        "filename": "src/tests/deqp_support/angle_deqp_gtest.cpp",
        "patchSetId": 5
      },
      "lineNbr": 124,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2020-12-10T20:35:51Z",
      "side": 1,
      "message": "Consider calling this --skip-file-hooking. Then the comment could say \"added automatically when needed\" or similar.",
      "range": {
        "startLine": 124,
        "startChar": 37,
        "endLine": 124,
        "endChar": 41
      },
      "revId": "1e41eab6d13e4d2a1f9ef838669224358e9f7641",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0c1f6b6d_50716d35",
        "filename": "src/tests/deqp_support/angle_deqp_gtest.cpp",
        "patchSetId": 5
      },
      "lineNbr": 124,
      "author": {
        "id": 1374244
      },
      "writtenOn": "2020-12-11T18:36:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "53d57510_8d9bbaad",
      "range": {
        "startLine": 124,
        "startChar": 37,
        "endLine": 124,
        "endChar": 41
      },
      "revId": "1e41eab6d13e4d2a1f9ef838669224358e9f7641",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e2991cab_36c551b6",
        "filename": "src/tests/deqp_support/angle_deqp_gtest.cpp",
        "patchSetId": 5
      },
      "lineNbr": 731,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-12-09T19:28:40Z",
      "side": 1,
      "message": "maybe we can put this in test_utils.h ?",
      "range": {
        "startLine": 731,
        "startChar": 5,
        "endLine": 731,
        "endChar": 25
      },
      "revId": "1e41eab6d13e4d2a1f9ef838669224358e9f7641",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c997df57_224493ef",
        "filename": "src/tests/deqp_support/angle_deqp_gtest.cpp",
        "patchSetId": 5
      },
      "lineNbr": 731,
      "author": {
        "id": 1374244
      },
      "writtenOn": "2020-12-11T18:36:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e2991cab_36c551b6",
      "range": {
        "startLine": 731,
        "startChar": 5,
        "endLine": 731,
        "endChar": 25
      },
      "revId": "1e41eab6d13e4d2a1f9ef838669224358e9f7641",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9e389bc1_51365e18",
        "filename": "src/tests/deqp_support/angle_deqp_gtest.cpp",
        "patchSetId": 5
      },
      "lineNbr": 769,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2020-12-10T20:35:51Z",
      "side": 1,
      "message": "Please handle execve\u0027s failure mode - by crashing if needed.",
      "revId": "1e41eab6d13e4d2a1f9ef838669224358e9f7641",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fba180f7_15488463",
        "filename": "src/tests/deqp_support/angle_deqp_gtest.cpp",
        "patchSetId": 5
      },
      "lineNbr": 769,
      "author": {
        "id": 1374244
      },
      "writtenOn": "2020-12-11T18:36:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9e389bc1_51365e18",
      "revId": "1e41eab6d13e4d2a1f9ef838669224358e9f7641",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}