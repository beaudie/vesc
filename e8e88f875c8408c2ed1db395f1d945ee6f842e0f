{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "bb4d7293_9690756f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-10-07T18:54:26Z",
      "side": 1,
      "message": "Ping",
      "revId": "e8e88f875c8408c2ed1db395f1d945ee6f842e0f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "73185a64_03be3c2c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-10-12T19:15:28Z",
      "side": 1,
      "message": "LGTM, but I have a feeling Charlie has stronger opinions here so swapping reviewers.",
      "revId": "e8e88f875c8408c2ed1db395f1d945ee6f842e0f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "76244a73_9da75880",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2021-10-12T21:48:28Z",
      "side": 1,
      "message": "Thanks, overall looks much cleaner.",
      "revId": "e8e88f875c8408c2ed1db395f1d945ee6f842e0f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c70f1f7d_b0931984",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 14
      },
      "lineNbr": 5816,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-10-12T19:15:28Z",
      "side": 1,
      "message": "These DS flushes are called right before the CB flush. Doesn\u0027t it make sense then to move them to CommandBufferHelper? Then they could be automatically flushed, including the DS flush being done on the worker thread for async submission.",
      "revId": "e8e88f875c8408c2ed1db395f1d945ee6f842e0f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a2f23328_634b3daf",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 14
      },
      "lineNbr": 5816,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-10-14T02:38:28Z",
      "side": 1,
      "message": "It\u0027s an interesting idea.   I do think it would help simplify things, and allowing the async thread to do the vkUpdateDescriptorSets() work would be nice.\n\nThe problem is know which CommandBufferHelper to call: inside or outside RP?   Here is where they are allocated:\n\n    allocDescriptorBufferInfos\n        ContextVk::updateDriverUniformsDescriptorSet (rx::ContextVk)\n        ProgramExecutableVk::updateAtomicCounterBuffersDescriptorSet (rx::ProgramExecutableVk)\n        ProgramExecutableVk::updateBuffersDescriptorSet (rx::ProgramExecutableVk)\n        ProgramExecutableVk::updateDefaultUniformsDescriptorSet (rx::ProgramExecutableVk)\n        ProgramExecutableVk::updateAtomicCounterBuffersDescriptorSet (rx::ProgramExecutableVk)\n        TransformFeedbackVk::initDescriptorSet (rx::TransformFeedbackVk)\n        TransformFeedbackVk::updateDescriptorSet (rx::TransformFeedbackVk)\n\n    allocDescriptorImageInfos\n        ProgramExecutableVk::updateImagesDescriptorSet (rx::ProgramExecutableVk)\n        ProgramExecutableVk::updateInputAttachmentDescriptorSet (rx::ProgramExecutableVk)\n        ProgramExecutableVk::updateTexturesDescriptorSet (rx::ProgramExecutableVk)\n\n    allocWriteDescriptorSets\n        ContextVk::updateDriverUniformsDescriptorSet (rx::ContextVk)\n        ProgramExecutableVk::updateAtomicCounterBuffersDescriptorSet (rx::ProgramExecutableVk)\n        ProgramExecutableVk::updateBuffersDescriptorSet (rx::ProgramExecutableVk)\n        ProgramExecutableVk::updateDefaultUniformsDescriptorSet (rx::ProgramExecutableVk)\n        TransformFeedbackVk::writeDescriptorSet (rx::TransformFeedbackVk)\n        ProgramExecutableVk::updateAtomicCounterBuffersDescriptorSet (rx::ProgramExecutableVk)\n        ProgramExecutableVk::updateImagesDescriptorSet (rx::ProgramExecutableVk)(2 usages)\n        ProgramExecutableVk::updateInputAttachmentDescriptorSet (rx::ProgramExecutableVk)\n        ProgramExecutableVk::updateTexturesDescriptorSet (rx::ProgramExecutableVk)\n\nIs there a consistent way to know which CBH to allocate from for all of those?\n\nAnother issue is the memory for the vectors:\n\n    // Storage for vkUpdateDescriptorSets\n    std::vector\u003cVkDescriptorBufferInfo\u003e mDescriptorBufferInfos;\n    std::vector\u003cVkDescriptorImageInfo\u003e mDescriptorImageInfos;\n    std::vector\u003cVkWriteDescriptorSet\u003e mWriteDescriptorSets;\n    \nWe will be reserving space in every CBH, rather than every ContextVk, which will consume more memory (though admittedly, likely not a lot since the structures are fairly small).\n\nI think it\u0027s better to keep them in ContextVk, but let me know what you think.",
      "parentUuid": "c70f1f7d_b0931984",
      "revId": "e8e88f875c8408c2ed1db395f1d945ee6f842e0f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "82244312_e0f31f24",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 14
      },
      "lineNbr": 5816,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2021-10-14T03:15:27Z",
      "side": 1,
      "message": "I also think this better do in context. The reason is that the DS flush are not commands, these are direct calls into driver, so there isn\u0027t good reason to do in command buffers and let async thread do it (which comes with other issues).",
      "parentUuid": "a2f23328_634b3daf",
      "revId": "e8e88f875c8408c2ed1db395f1d945ee6f842e0f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3bd24553_ccc313de",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 14
      },
      "lineNbr": 5816,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-10-14T14:21:23Z",
      "side": 1,
      "message": "\u003e Is there a consistent way to know which CBH to allocate from for all of those?\n\nYes, in all cases you (can) know if you are doing the work for a draw or a dispatch call, and you can choose based on that.\n\nAlso, we should probably just go ahead with your current code, and open a bug to look into moving it to CBH later. I suggested it because it seemed cleaner, but we need to measure its effect on CPU perf and memory, sure.",
      "parentUuid": "82244312_e0f31f24",
      "revId": "e8e88f875c8408c2ed1db395f1d945ee6f842e0f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "793fcb58_fb627d2e",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 14
      },
      "lineNbr": 7869,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2021-10-12T21:48:28Z",
      "side": 1,
      "message": "Do you still need this call here? My understanding is that previously you need this because you are patching the DS, which will need to de-reference the view pointer, which is troublesome if view gets released earlier. But with this latest patchset, there is no DS patch up, DS is using handle of the view which will not gets freed until mUse indicates it is GPU complete. So my understanding is that this BufferViewHelper related change is no longer needed?",
      "range": {
        "startLine": 7869,
        "startChar": 4,
        "endLine": 7869,
        "endChar": 43
      },
      "revId": "e8e88f875c8408c2ed1db395f1d945ee6f842e0f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "45f01b95_fad34c8e",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 14
      },
      "lineNbr": 7869,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-10-14T02:38:28Z",
      "side": 1,
      "message": "Yes, this is still required.   See this comment for the full details:\n\nhttps://bugs.chromium.org/p/angleproject/issues/detail?id\u003d5706#c7",
      "parentUuid": "793fcb58_fb627d2e",
      "range": {
        "startLine": 7869,
        "startChar": 4,
        "endLine": 7869,
        "endChar": 43
      },
      "revId": "e8e88f875c8408c2ed1db395f1d945ee6f842e0f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "77d28df8_63b0a66f",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 14
      },
      "lineNbr": 7869,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2021-10-14T03:10:49Z",
      "side": 1,
      "message": "I see. The thing I missed is that pTexelBufferView is actual pointer to the handle, not the handle itself.",
      "parentUuid": "45f01b95_fad34c8e",
      "range": {
        "startLine": 7869,
        "startChar": 4,
        "endLine": 7869,
        "endChar": 43
      },
      "revId": "e8e88f875c8408c2ed1db395f1d945ee6f842e0f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}