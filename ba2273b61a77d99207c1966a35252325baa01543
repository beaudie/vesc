{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "690e3c5a_f312071b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2022-04-29T23:05:27Z",
      "side": 1,
      "message": "PTAL",
      "revId": "ba2273b61a77d99207c1966a35252325baa01543",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2f87e121_c5abd209",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-04-30T02:09:18Z",
      "side": 1,
      "message": "Can\u0027t say I understand what makes -1 special (and why would -2 work for example but not -1, or maybe that\u0027s just not tested). It would help reason about what the problem really is if there were a standalone end2end test that reproduces the issue.\n\nFYI, I see that this also reproduces the issue (so the middle test can be dropped):\n\n```\n--gtest_filter\u003ddEQP.GLES3/functional_samplers_single_cubemap_diff_wrap_t:dEQP.GLES3/functional_negative_api_buffer_framebuffer_texture_layer\n```",
      "revId": "ba2273b61a77d99207c1966a35252325baa01543",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "591e8bc9_3965feb7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2022-04-30T21:29:57Z",
      "side": 1,
      "message": "\u003e and why would -2 work for example but not -1\n\ndeqp test suite assigns special meaning to \"-1\" handles and assumes it is an invalid texture handle throughout the test suite. deqp does not make such assumptions for texture handle -2.\n\n\u003e It would help reason about what the problem really is if there were a standalone end2end test that reproduces the issue\n\nDone\n\n\u003e I see that this also reproduces the issue (so the middle test can be dropped)\n\nindeed, reworded commit message",
      "parentUuid": "2f87e121_c5abd209",
      "revId": "ba2273b61a77d99207c1966a35252325baa01543",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "729a7252_e5f3182a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-05-02T11:17:08Z",
      "side": 1,
      "message": "I recommend filing this test bug upstream in dEQP. dEQP should not be using -1 for both a guaranteed invalid handle value and a valid one.\n\nCan you try an alternate workaround: walk mUnallocatedList in release() and if mUnallocatedList[index].end \u003d\u003d releaseHandle - 1 then increment mUnallocatedList[index].end instead of adding the handle to the released list. That fix could have some small benefit in coalescing handle ranges in other test cases.",
      "parentUuid": "591e8bc9_3965feb7",
      "revId": "ba2273b61a77d99207c1966a35252325baa01543",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}