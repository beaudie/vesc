{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "5e075106_42aa854c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2024-10-31T21:39:11Z",
      "side": 1,
      "message": "(note this is WIP) Roman, I\u0027ll probably tidy this up a bit more, but wanted to get your initial thoughts/concerns before heading out for candy.",
      "revId": "f3c1b957fac828d8d51d6d847bcbc5119d109690",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "70f24325_6efd3683",
        "filename": "src/tests/restricted_traces/restricted_trace_perf.py",
        "patchSetId": 1
      },
      "lineNbr": 737,
      "author": {
        "id": 1531247
      },
      "writtenOn": "2024-11-01T12:50:17Z",
      "side": 1,
      "message": "I\u0027ve considered this for other places but it adds some handling (like what you did with chdir here)\n\nThe way I\u0027ve been getting around it has been like this:\n```\n(cd out/Android; ../../src/tests/run_angle_android_test.py --suite\u003dangle_end2end_tests ...)\n```\n\nThis is what `out/Android/angle_trace_tests` wrapper effectively does.\n\nI think instead of adding chdir or otherwise supporting this as a flag, it would be better to add a wrapper, something like `out/Android/restricted_trace_perf` which would do this implicitly. This should be fairly easy to do, I can have a look if you like this idea.",
      "range": {
        "startLine": 737,
        "startChar": 26,
        "endLine": 737,
        "endChar": 70
      },
      "revId": "f3c1b957fac828d8d51d6d847bcbc5119d109690",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "623303bd_d804f52a",
        "filename": "src/tests/restricted_traces/restricted_trace_perf.py",
        "patchSetId": 1
      },
      "lineNbr": 737,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2024-11-01T15:32:09Z",
      "side": 1,
      "message": "Do you mean an automated wrapper, or something simple we maintain?  Open to the idea, prefer the latter if possible.  I was using `restricted_trace_gold_tests.py` as a reference for this - not clear to me how it invokes the right build.  Maybe it doesn\u0027t handle installation.",
      "parentUuid": "70f24325_6efd3683",
      "range": {
        "startLine": 737,
        "startChar": 26,
        "endLine": 737,
        "endChar": 70
      },
      "revId": "f3c1b957fac828d8d51d6d847bcbc5119d109690",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "38886965_3e8ff9e4",
        "filename": "src/tests/restricted_traces/restricted_trace_perf.py",
        "patchSetId": 1
      },
      "lineNbr": 737,
      "author": {
        "id": 1531247
      },
      "writtenOn": "2024-11-01T15:59:14Z",
      "side": 1,
      "message": "On bots, `restricted_trace_gold_tests.py` is invoked as the swarming script (configured here: https://source.chromium.org/chromium/chromium/src/+/main:third_party/angle/infra/specs/gn_isolate_map.pyl;drc\u003db16d105fc63a7365d6809d5033cb1b2172d8d311;l\u003d133)\n\nwhich effectively does this (and that\u0027s how I\u0027ve been testing this script locally):\n```\n(cd out/Android; ../../src/tests/restricted_traces/restricted_trace_gold_tests.py --args)\n```\n\nMy idea is to auto-generate a little wrapper from gn, similarly to how chromium wrappers do it (`cat out/Android/angle_end2end_tests`) but much simpler, to do what we want here it would be just a few lines.",
      "parentUuid": "623303bd_d804f52a",
      "range": {
        "startLine": 737,
        "startChar": 26,
        "endLine": 737,
        "endChar": 70
      },
      "revId": "f3c1b957fac828d8d51d6d847bcbc5119d109690",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "20f1b960_d196dad2",
        "filename": "src/tests/restricted_traces/restricted_trace_perf.py",
        "patchSetId": 1
      },
      "lineNbr": 947,
      "author": {
        "id": 1531247
      },
      "writtenOn": "2024-11-01T12:50:17Z",
      "side": 1,
      "message": "So this will run into the issue I mentioned previously, unconditionally pushing gzipped trace source:\nhttps://crsrc.org/c/third_party/angle/src/tests/py_utils/android_helper.py;drc\u003d3a265f143be43ce85ea0f777ce3245cc8620c051;l\u003d424\n\nI think we\u0027ll need to first make sure tracegz files are not added to the bundle and add some way to turn this push off (for now could be as simple as skipping the push if the file isn\u0027t there).",
      "range": {
        "startLine": 947,
        "startChar": 27,
        "endLine": 947,
        "endChar": 50
      },
      "revId": "f3c1b957fac828d8d51d6d847bcbc5119d109690",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}