{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f9acc0c2_16f9f9d0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2021-11-15T22:33:24Z",
      "side": 1,
      "message": "Fixes we have found. Once added the api_dump looks a lot better\n\nFYI:\nAlso dEQP-EGL.functional.mutable_render_buffer.basic is failing. it does a glClear and glReadPixels and not getting what is expected.",
      "revId": "e664cb7a424526a6ec8833f970fbf86d4c4f8a9b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "036423c4_16c7e297",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2021-11-15T23:29:30Z",
      "side": 1,
      "message": "added note",
      "revId": "e664cb7a424526a6ec8833f970fbf86d4c4f8a9b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eb0335f7_d372198c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2021-11-16T16:03:20Z",
      "side": 1,
      "message": "Question below about correct command for transitioning new image to SharedPresent. \n\nCurrent OneOffCommand isn\u0027t working and maybe isn\u0027t the right thing to use.",
      "revId": "e664cb7a424526a6ec8833f970fbf86d4c4f8a9b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c0e014df_5e39ac1b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2021-11-16T18:10:04Z",
      "side": 1,
      "message": "Shahbaz, should the acquireImageSemaphore/mAcquireImageSemaphore be used to block draws until signaled? I can not find that anywhere. Isn\u0027t that where we want to add the barrier to transition to SharedPresent?\nPlease correct me. I\u0027m suspecting the OneOffCommand is not the right thing to use.",
      "revId": "e664cb7a424526a6ec8833f970fbf86d4c4f8a9b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a3b82f66_f078e3a6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2021-11-16T21:46:07Z",
      "side": 1,
      "message": "Thanks. responses below.",
      "revId": "e664cb7a424526a6ec8833f970fbf86d4c4f8a9b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ba64d105_dc78fade",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2021-11-17T22:01:01Z",
      "side": 1,
      "message": "P.S. it looks like the BAD_SURFACE and failure in dEQP-EGL teglMutanleRenderBufferTest - is a loss in precision used with color to glClearColor and then expected with glReadPixels. We round up color value by 1/2 digit and it passes.\nWe are curious if any other platform fails dEQP-EGL.functional.mutable_render_buffer.basic",
      "revId": "e664cb7a424526a6ec8833f970fbf86d4c4f8a9b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d0df4646_13be0c84",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 14
      },
      "lineNbr": 1748,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2021-11-15T22:33:24Z",
      "side": 1,
      "message": "if ((mSwapchainPresentMode \u003d\u003d VK_PRESENT_MODE_SHARED_DEMAND_REFRESH_KHR) \u0026\u0026\n        (image.image.getCurrentLayout !\u003d vk::ImageLayout::SharedPresent))",
      "revId": "e664cb7a424526a6ec8833f970fbf86d4c4f8a9b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "beade09a_44521548",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 14
      },
      "lineNbr": 1752,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2021-11-16T16:03:20Z",
      "side": 1,
      "message": "Please comment:\nSince we are in context, we probably shouldn\u0027t use a OneOffCommandBuffer ?\nA barrier needs to be added, but after the semaphore is used to block draws until signaled. Right?\nneed a recordWriteBarrier(), but were buffer is accessible.?",
      "revId": "e664cb7a424526a6ec8833f970fbf86d4c4f8a9b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2029aaca_859b35cb",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 14
      },
      "lineNbr": 1752,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-11-16T21:32:12Z",
      "side": 1,
      "message": "We don\u0027t have a \"ContextVk\", but a vk::Context. vk::Context is really just a wrapper for RendererVk, so yes we do need OneOffCB.\n\nI didn\u0027t understand your second question. There\u0027s already a barrier added below (recordWriteBarrierOneOff). The barrier is recorded in the command buffer (CB), and the semaphore is used to block the running of that CB. So the ordering is ok here.",
      "parentUuid": "beade09a_44521548",
      "revId": "e664cb7a424526a6ec8833f970fbf86d4c4f8a9b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bdfd7091_f8997544",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 14
      },
      "lineNbr": 1752,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2021-11-16T21:46:07Z",
      "side": 1,
      "message": "I noticed, that when we don\u0027t have a current context, we need to use the OneOffCommandBuffers - this is a primary command buffer and we can begin, end and submit this. \n\nIf we have a current context, then a primary command buffer is started, and then other commands atr secondary and just made part of the primary. Question? MUST we use secondary command buffers when context is current? or is it valid to use OneOffCommandBuffers?\n\nProblem here is the semaphore gives us a TIMEOUT 120 sec. The default max.\nSo in the middle of the night I thought, maybe I can\u0027t use OnOffCommandBuffers because the context is current. If it is valid to use, then we have a different issue.",
      "parentUuid": "2029aaca_859b35cb",
      "revId": "e664cb7a424526a6ec8833f970fbf86d4c4f8a9b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "76e81898_7e72fe19",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 14
      },
      "lineNbr": 1752,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-11-17T21:24:10Z",
      "side": 1,
      "message": "\u003e If we have a current context ...\n\nbut you don\u0027t have access to it, right? Also, the context might not be current, what then? It feels like this problem should be solvable with one off CBs. It\u0027s still valid to do one off submissions when a context is current.\n\nWhat might be causing you trouble is if both the context\u0027s current CB and the one being submitted here both depend on the same semaphore. You\u0027d have to verify if that\u0027s the case.",
      "parentUuid": "bdfd7091_f8997544",
      "revId": "e664cb7a424526a6ec8833f970fbf86d4c4f8a9b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "321626a5_fdcff89a",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 14
      },
      "lineNbr": 1752,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2021-11-17T22:01:01Z",
      "side": 1,
      "message": "Makes sense. Right now working OK if we just use nullptr for semaphore. My reason that a new swapchain with one image, the vkAcquireNextImage probably returns immediately - no wait. But we will see if we can get this semaphore working.",
      "parentUuid": "76e81898_7e72fe19",
      "revId": "e664cb7a424526a6ec8833f970fbf86d4c4f8a9b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5cc9dd41_9b1b13b8",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 14
      },
      "lineNbr": 1765,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2021-11-15T22:33:24Z",
      "side": 1,
      "message": "It seems this acquireImageSemaphore is not being signaled. Getting 120 sec timeout.",
      "revId": "e664cb7a424526a6ec8833f970fbf86d4c4f8a9b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0ea21f88_0aebcd3f",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 14
      },
      "lineNbr": 1765,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2021-11-15T23:29:30Z",
      "side": 1,
      "message": "replacing acquireImageSeamphore with nullptr and the api_dump looks OK",
      "parentUuid": "5cc9dd41_9b1b13b8",
      "revId": "e664cb7a424526a6ec8833f970fbf86d4c4f8a9b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4140143d_dc6863ad",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 14
      },
      "lineNbr": 1765,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-11-16T21:32:12Z",
      "side": 1,
      "message": "Is vkAcquireNextImage (ANI) still necessary with this present mode? Could ANGLE acquire the image once, and keep it forever? I don\u0027t know the Vulkan extension well enough.",
      "parentUuid": "0ea21f88_0aebcd3f",
      "revId": "e664cb7a424526a6ec8833f970fbf86d4c4f8a9b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "137aecee_2f88568b",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 14
      },
      "lineNbr": 1765,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2021-11-16T21:46:07Z",
      "side": 1,
      "message": "I did change it so that we do the barrier/SharedPresent just the first time. That was an improvement. \nWe do need to vkQueuePresent with each eglSwapBuffers, but no, I think you might be right, that ANI is only needed once, but need to getStatus so we know when it becomes OUT_OF_DATE. I\u0027ll check the spec.",
      "parentUuid": "4140143d_dc6863ad",
      "revId": "e664cb7a424526a6ec8833f970fbf86d4c4f8a9b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "99a77737_85ebb595",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 14
      },
      "lineNbr": 1765,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-11-17T21:24:10Z",
      "side": 1,
      "message": "Thanks, clarfication here would help.",
      "parentUuid": "137aecee_2f88568b",
      "revId": "e664cb7a424526a6ec8833f970fbf86d4c4f8a9b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "29ac34b2_6ed72618",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 14
      },
      "lineNbr": 1772,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2021-11-15T22:33:24Z",
      "side": 1,
      "message": "remove.",
      "revId": "e664cb7a424526a6ec8833f970fbf86d4c4f8a9b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "88429539_87b82bc6",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 14
      },
      "lineNbr": 1773,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2021-11-15T22:33:24Z",
      "side": 1,
      "message": "This doesn\u0027t seem to matter, and seems like it needs to be removed?",
      "revId": "e664cb7a424526a6ec8833f970fbf86d4c4f8a9b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bcabfb22_197b19bb",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 14
      },
      "lineNbr": 1773,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-11-16T21:32:12Z",
      "side": 1,
      "message": "Should be done if you use it in queueSubmitOneOff above, otherwise another submission may also want to wait on the same semaphore and deadlock.",
      "parentUuid": "88429539_87b82bc6",
      "revId": "e664cb7a424526a6ec8833f970fbf86d4c4f8a9b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "661ae6d5_78c25b78",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 14
      },
      "lineNbr": 1773,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2021-11-16T21:46:07Z",
      "side": 1,
      "message": "That semaphore would not be valid for both?\n\nIsn\u0027t this acquireImageSemaphore used to block draws until signaled, indicating Image is acquired and can be drawn. Isn\u0027t it backed by a SurfaceFlinger syncpoint fd? I don\u0027t see the semaphore used anywhere. Different ones are created for flush.",
      "parentUuid": "bcabfb22_197b19bb",
      "revId": "e664cb7a424526a6ec8833f970fbf86d4c4f8a9b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6c82c8e9_ca2165f2",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 14
      },
      "lineNbr": 1773,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-11-17T21:24:10Z",
      "side": 1,
      "message": "It can\u0027t be used for both. I think once you wait on a signaled semaphore, it becomes unsignaled and the next wait would block.\n\n\u003e Isn\u0027t this acquireImageSemaphore used to block draws until signaled, indicating Image is acquired and can be drawn.\n\nYes it is, but you can\u0027t have two CBs blocked on it, only one would actually get unblocked.\n\n\u003e I don\u0027t see the semaphore used anywhere\n\nIt\u0027s used by the context through `getAndResetAcquireImageSemaphore()`.",
      "parentUuid": "661ae6d5_78c25b78",
      "revId": "e664cb7a424526a6ec8833f970fbf86d4c4f8a9b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}