{
  "comments": [
    {
      "key": {
        "uuid": "b66a85db_e55a9c19",
        "filename": "src/libANGLE/queryutils.cpp",
        "patchSetId": 3
      },
      "lineNbr": 556,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-09-01T16:23:49Z",
      "side": 1,
      "message": "nit: probably just return 0 in these unimplemented/unreachable cases.",
      "range": {
        "startLine": 556,
        "startChar": 19,
        "endLine": 556,
        "endChar": 35
      },
      "revId": "a47ffefcb512012bc03129837f583a953b23f203",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0292fe02_1cd248ce",
        "filename": "src/libANGLE/queryutils.cpp",
        "patchSetId": 3
      },
      "lineNbr": 556,
      "author": {
        "id": 1109831
      },
      "writtenOn": "2017-09-03T11:55:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b66a85db_e55a9c19",
      "range": {
        "startLine": 556,
        "startChar": 19,
        "endLine": 556,
        "endChar": 35
      },
      "revId": "a47ffefcb512012bc03129837f583a953b23f203",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ded6ec1_0447b33f",
        "filename": "src/libANGLE/queryutils.cpp",
        "patchSetId": 3
      },
      "lineNbr": 566,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-09-01T16:23:49Z",
      "side": 1,
      "message": "nit: maybe you should use clampCast instead of static_cast? The spec says that if a value is too large, it should be rounded down to the nearest representable value. This might be hard to reproduce but it can\u0027t hurt to be safe.",
      "range": {
        "startLine": 566,
        "startChar": 28,
        "endLine": 566,
        "endChar": 39
      },
      "revId": "a47ffefcb512012bc03129837f583a953b23f203",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ee456af4_634a88e9",
        "filename": "src/libANGLE/queryutils.cpp",
        "patchSetId": 3
      },
      "lineNbr": 566,
      "author": {
        "id": 1109831
      },
      "writtenOn": "2017-09-03T11:55:32Z",
      "side": 1,
      "message": "The current implementation of clampCast is not a sound one for all types. It assumes SrcT can properly represent DestT::min/max. That is to say it can only convert float to int, int to short, double to float, and etc. But not vice versa。 Neither unsigned to singed or singed to unsigned can work as their ranges intersect.",
      "parentUuid": "0ded6ec1_0447b33f",
      "range": {
        "startLine": 566,
        "startChar": 28,
        "endLine": 566,
        "endChar": 39
      },
      "revId": "a47ffefcb512012bc03129837f583a953b23f203",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d5ebcb63_7198ccb7",
        "filename": "src/libANGLE/queryutils.cpp",
        "patchSetId": 3
      },
      "lineNbr": 566,
      "author": {
        "id": 1109831
      },
      "writtenOn": "2017-09-06T07:35:17Z",
      "side": 1,
      "message": "Jamie,\n\u003e\u003e \"The spec says that if a value is too large, it should be rounded down to the nearest representable value.\"\n\nDid you mean the ES3.10 Spec? I can\u0027t find such statement.\nGenerally clamping an overflowed value still can\u0027t make things right. It just relieves the hurt presumably. For this purpose, we need to make the current clampCast full-fledged as Boost.NumericConversion does. Then we should use clampCast instead of static_cast as best as we can. If so, we\u0027d better do this with a new CL.",
      "parentUuid": "ee456af4_634a88e9",
      "range": {
        "startLine": 566,
        "startChar": 28,
        "endLine": 566,
        "endChar": 39
      },
      "revId": "a47ffefcb512012bc03129837f583a953b23f203",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b202345d_c9bd7af7",
        "filename": "src/libANGLE/queryutils.cpp",
        "patchSetId": 3
      },
      "lineNbr": 566,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-09-06T16:30:53Z",
      "side": 1,
      "message": "See ES 3 spec 6.1.2 Data Conversions\n\n\"If a value is so large in magnitude that it cannot be represented with the requested\ntype, then the nearest value representable using the requested type is returned\"\n\nclampCast is probably not perfect, I think you\u0027re right. But it\u0027s probably good enough for now.",
      "parentUuid": "d5ebcb63_7198ccb7",
      "range": {
        "startLine": 566,
        "startChar": 28,
        "endLine": 566,
        "endChar": 39
      },
      "revId": "a47ffefcb512012bc03129837f583a953b23f203",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fd6237b1_a088d095",
        "filename": "src/libANGLE/queryutils.cpp",
        "patchSetId": 3
      },
      "lineNbr": 566,
      "author": {
        "id": 1109831
      },
      "writtenOn": "2017-09-07T12:25:58Z",
      "side": 1,
      "message": "Thanks for pointing out the sentence. So we really should respect this exactly. I have fixed the program interface queries accordingly. Please have a look!\nThere are some other GL query conversions to be fixed as well. I added TODO here and will fix it with another CL.",
      "parentUuid": "b202345d_c9bd7af7",
      "range": {
        "startLine": 566,
        "startChar": 28,
        "endLine": 566,
        "endChar": 39
      },
      "revId": "a47ffefcb512012bc03129837f583a953b23f203",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9900ffb0_e804c37c",
        "filename": "src/libANGLE/queryutils.cpp",
        "patchSetId": 3
      },
      "lineNbr": 566,
      "author": {
        "id": 1109831
      },
      "writtenOn": "2017-09-08T11:49:18Z",
      "side": 1,
      "message": "Having examining the spec over for the sentence, I think a clarification is needed here.\nIn ES 3.10 section 20:\n\"The tables on the following pages indicate which state variables are obtained with what commands. State variables that can be obtained using any of GetBooleanv, GetIntegerv, \n GetInteger64v, or GetFloatv are listed with just one of these commands – the one that is most appropriate given the type of the data to be returned.These state variables cannot be obtained using IsEnabled. However, state variables for which IsEnabled is listed as the query command can also be obtained using GetBooleanv, GetIntegerv, GetInteger64v, and GetFloatv. State variables for which any other command is listed as the query command can be obtained by using that command or any of its typed variants, although information may be lost when not using the listed command. Unless otherwise specified, when floatingpoint state is returned as integer values or integer state is returned as floating-point values it is converted in the fashion described in section 2.2.2.\"\n\nTake MAX_DRAW_BUFFERS for example:\n\"MAX_DRAW_BUFFERS, Z+ ,GetIntegerv ,4,  Max. no. of active draw buffers 15.2.1\"\nThe internal storage for this state is integer, and you should use GetIntegerv to query its value. Besides you can use GetFloatv to access it too. And only in such cases data conversion actually takes place.\n\nSimilarly for \n\"TEXTURE_MAX_LOD, R, GetTexParameterfv, 1000, Max. level of detail 8 \"\nyou should use GetTexParameterfv, and there is no data conversion. But you can also use GetTexParameteriv, and there must be a float to integer conversion.\n\nFor program interface state queries, on which this CL is working, there are only integer query APIs such as GetProgramResourceiv, but no GetProgramResourcefv. So the conversion never happens for program interface state queries.",
      "parentUuid": "fd6237b1_a088d095",
      "range": {
        "startLine": 566,
        "startChar": 28,
        "endLine": 566,
        "endChar": 39
      },
      "revId": "a47ffefcb512012bc03129837f583a953b23f203",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c8261802_04fb5c96",
        "filename": "src/libANGLE/queryutils.cpp",
        "patchSetId": 3
      },
      "lineNbr": 573,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-09-01T16:23:49Z",
      "side": 1,
      "message": "nit: default init to zero.",
      "range": {
        "startLine": 573,
        "startChar": 10,
        "endLine": 573,
        "endChar": 23
      },
      "revId": "a47ffefcb512012bc03129837f583a953b23f203",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ea559683_f15dfed5",
        "filename": "src/libANGLE/queryutils.cpp",
        "patchSetId": 3
      },
      "lineNbr": 573,
      "author": {
        "id": 1109831
      },
      "writtenOn": "2017-09-03T11:55:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c8261802_04fb5c96",
      "range": {
        "startLine": 573,
        "startChar": 10,
        "endLine": 573,
        "endChar": 23
      },
      "revId": "a47ffefcb512012bc03129837f583a953b23f203",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}