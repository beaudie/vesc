{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "36c2c9ac_29aebb4b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 23
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-12-10T17:40:29Z",
      "side": 1,
      "message": "Question about Stop/Continue usage.",
      "revId": "1ceacf58e78d51a7b4097f45a02a8b49d217c360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "474602bd_673fd8d1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 23
      },
      "lineNbr": 0,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-12-10T19:06:24Z",
      "side": 1,
      "message": "+1 with Jamie\u0027s comments addressed too.\n\nThanks for updating the design doc.   It helps to clarify some of this.   It would be really good to move that to a .md in doc/ so others can reference it once this lands.",
      "revId": "1ceacf58e78d51a7b4097f45a02a8b49d217c360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "48ae594c_5cbdebb3",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 23
      },
      "lineNbr": 642,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-12-10T19:06:24Z",
      "side": 1,
      "message": "nit: need",
      "range": {
        "startLine": 642,
        "startChar": 84,
        "endLine": 642,
        "endChar": 89
      },
      "revId": "1ceacf58e78d51a7b4097f45a02a8b49d217c360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ab933bd3_4ef5f28e",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 23
      },
      "lineNbr": 1204,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-12-10T19:06:24Z",
      "side": 1,
      "message": "Can BufferVk::mBufferOffset be updated by here to avoid having to do \u0027mBufferOffset + mBuffer-\u003egetOffset()\u0027 everywhere else?",
      "revId": "1ceacf58e78d51a7b4097f45a02a8b49d217c360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "02bdd2a1_57037d20",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 23
      },
      "lineNbr": 1207,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-12-10T19:06:24Z",
      "side": 1,
      "message": "This can probably be removed now, since it\u0027s not really protecting us from anything anymore.",
      "revId": "1ceacf58e78d51a7b4097f45a02a8b49d217c360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "03604b54_dd93a6d7",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.h",
        "patchSetId": 23
      },
      "lineNbr": 117,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-12-10T19:06:24Z",
      "side": 1,
      "message": "nit, match the comment for getBuffer():\n\nAlways mark the BufferHelper as referenced by the GPU, whether or not there\u0027s a pending submission, since this function is only called when trying to get the underlying BufferHelper object so it can be used in a command.",
      "range": {
        "startLine": 114,
        "startChar": 0,
        "endLine": 117,
        "endChar": 0
      },
      "revId": "1ceacf58e78d51a7b4097f45a02a8b49d217c360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5a041e08_cb3d5a78",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 23
      },
      "lineNbr": 2770,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-12-10T17:40:29Z",
      "side": 1,
      "message": "Similar to the prior code, avoid Stop/Continue to indicate success or failure, and instead only using angle::Result to return control flow the to application layer in the case of an unexpected internal error. Just to confirm that I\u0027m reading this right - Stop/Continue here means we had success in finding a pool or not?",
      "range": {
        "startLine": 2769,
        "startChar": 0,
        "endLine": 2770,
        "endChar": 31
      },
      "revId": "1ceacf58e78d51a7b4097f45a02a8b49d217c360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "34f44cc3_ba3cac64",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 23
      },
      "lineNbr": 951,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-12-10T19:06:24Z",
      "side": 1,
      "message": "Not in this CL, but are there any ideas on how to clean this up a bit more somehow?\n\nBufferMemory can point to either VkDeviceMemory or VmaAllocation, so now BufferHelper can point to either VkDeviceMemory/VmaAllocation (via BufferMemory) or VmaBufferSubAllocation.   The VmaBufferSubAllocation contains a pointer to a BufferBlock, which itself contains \u0027Buffer mBuffer\u0027 and \u0027Allocation mAllocation\u0027, so it feels like there a bit of duplication.\n\nI think this can be summarized that BufferHelper can now handle 3 cases:\n1. External memory\n2. Direct allocation from VMA\n3. Suballocation of a VMA BufferBlock\n\nIt seems like the callers need to know a bit too much about the implementation details (which of the 3 the underlying buffer actually is), so they know whether to query the mBuffer/mMemory or mSubAllocation, even though (2) and (3) should essentially the be same under the covers to them.\n\nThe goal would be to be able to remove things like \u0027mBufferOffset + mBuffer-\u003egetOffset()\u0027, since that\u0027s something that\u0027s likely to be missed in the future and will cause pain for other developers when debugging.\n\nI don\u0027t have a good suggestion on what the answer is for this since I haven\u0027t dug into how mBuffer vs mSubAllocation are used by everyone, but I think it\u0027s worth looking into at some point.",
      "range": {
        "startLine": 946,
        "startChar": 0,
        "endLine": 951,
        "endChar": 39
      },
      "revId": "1ceacf58e78d51a7b4097f45a02a8b49d217c360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4def4a44_80e25d1c",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 23
      },
      "lineNbr": 951,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-12-10T19:21:04Z",
      "side": 1,
      "message": "Nevermind, it looks like this is what you\u0027re doing with the later CL:\n3322100: Vulkan: Consolidate BufferHelper\u0027s code paths into one | https://chromium-review.googlesource.com/c/angle/angle/+/3322100",
      "parentUuid": "34f44cc3_ba3cac64",
      "range": {
        "startLine": 946,
        "startChar": 0,
        "endLine": 951,
        "endChar": 39
      },
      "revId": "1ceacf58e78d51a7b4097f45a02a8b49d217c360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "41abe40f_8e34eb3a",
        "filename": "src/libANGLE/renderer/vulkan/vk_utils.cpp",
        "patchSetId": 23
      },
      "lineNbr": 1707,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-12-10T19:06:24Z",
      "side": 1,
      "message": "nit: Pull this out into a local variable.",
      "range": {
        "startLine": 1707,
        "startChar": 26,
        "endLine": 1707,
        "endChar": 47
      },
      "revId": "1ceacf58e78d51a7b4097f45a02a8b49d217c360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b1136c85_223a2614",
        "filename": "src/libANGLE/renderer/vulkan/vk_utils.h",
        "patchSetId": 23
      },
      "lineNbr": 1274,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-12-10T19:06:24Z",
      "side": 1,
      "message": "Can remove: unused.",
      "revId": "1ceacf58e78d51a7b4097f45a02a8b49d217c360",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}