{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "cc78a811_ef4fcfd9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2024-03-05T21:52:22Z",
      "side": 1,
      "message": "lgtm again\n\nEven better; thank you Shabi for your suggestion on using the internal ANGLE namespace.",
      "revId": "6ab85083156628388fcb8cef0d0c07d7f892f5a1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "578574f9_7197ad29",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1500872
      },
      "writtenOn": "2024-03-06T00:43:46Z",
      "side": 1,
      "message": "Looks great, great fix Kimmo!",
      "revId": "6ab85083156628388fcb8cef0d0c07d7f892f5a1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e0b62157_2cc03668",
        "filename": "src/libANGLE/renderer/metal/mtl_msl_utils.mm",
        "patchSetId": 9
      },
      "lineNbr": 116,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2024-03-05T21:52:22Z",
      "side": 1,
      "message": "What does this application of the arrow operator do? I haven\u0027t seen it before.",
      "revId": "6ab85083156628388fcb8cef0d0c07d7f892f5a1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "51a40ffc_9253a33f",
        "filename": "src/libANGLE/renderer/metal/mtl_msl_utils.mm",
        "patchSetId": 9
      },
      "lineNbr": 116,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2024-03-06T01:58:09Z",
      "side": 1,
      "message": "Resolving this - would like to know the answer, but it shouldn\u0027t block the CL.",
      "parentUuid": "e0b62157_2cc03668",
      "revId": "6ab85083156628388fcb8cef0d0c07d7f892f5a1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c5004a2c_d9a52d1f",
        "filename": "src/libANGLE/renderer/metal/mtl_msl_utils.mm",
        "patchSetId": 9
      },
      "lineNbr": 116,
      "author": {
        "id": 1449558
      },
      "writtenOn": "2024-03-06T12:35:40Z",
      "side": 1,
      "message": "template \u003cclass T\u003e\n    ApplyOStream(T) -\u003e ApplyOStream\u003cT\u003e;\n\nIt\u0027s a \"user defined deduction guide\" \nhttps://en.cppreference.com/w/cpp/language/class_template_argument_deduction\n\nIt says \"For constructor call ApplyOStream with parameter type T, construct type ApplyOStream\u003cT\u003e and use the constructor of that type\".\n\nIt\u0027s used when you have a class template and want to refer to a constructor but are lazy to not put the full type with `T\u003cA\u003e(somethingcomplex)`, rather you\u0027d want to let the arguments define the type `T(somethingcomplex)`.\n\nInterestingly this variant of the patch didn\u0027t actually need it, as function style cast construction has implicit guides or something. At least on clang17. `ApplyOStream(SomethingComplex())`\n\n\nHowever, the compile fix patch needs it, for `ApplyOStream{SomethingComplex()}`.",
      "parentUuid": "51a40ffc_9253a33f",
      "revId": "6ab85083156628388fcb8cef0d0c07d7f892f5a1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:approval_code-owners"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "6ab85083156628388fcb8cef0d0c07d7f892f5a1",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "6ab85083156628388fcb8cef0d0c07d7f892f5a1",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "6ab85083156628388fcb8cef0d0c07d7f892f5a1",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "6ab85083156628388fcb8cef0d0c07d7f892f5a1",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}