{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f4ab3681_6394b31b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2021-03-10T22:34:24Z",
      "side": 1,
      "message": "Probably should tag b/182213414 too.",
      "revId": "390b94d7e275d29c6d7d03d965f59b7beb2d5643",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6889b3e8_508bb63f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2021-03-10T23:11:51Z",
      "side": 1,
      "message": "That\u0027s an internal/private bug, which I closed because there is no Qualcomm/Pixel4-specific bug.  I did add the ANGLE bug though (per you other comment).",
      "parentUuid": "f4ab3681_6394b31b",
      "revId": "390b94d7e275d29c6d7d03d965f59b7beb2d5643",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "de88658d_cd6c74f3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2021-03-10T22:12:45Z",
      "side": 1,
      "message": "I found the actual cause of the problem.  The Android platform is also rotating the damage rectangles (for all HWC drivers that implement damage rectangles).  Therefore, we need to not rotate the damage rectangles, to avoid the double-rotation that\u0027s been happening.",
      "revId": "390b94d7e275d29c6d7d03d965f59b7beb2d5643",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e349c4cc_79644d5c",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1943,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2021-03-10T22:32:38Z",
      "side": 1,
      "message": "We should tie this back to a bug so you can re-enable it when Android is fixed (if it gets fixed).",
      "range": {
        "startLine": 1943,
        "startChar": 86,
        "endLine": 1943,
        "endChar": 95
      },
      "revId": "390b94d7e275d29c6d7d03d965f59b7beb2d5643",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b1666fa_ba6ee6e6",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1943,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2021-03-10T23:11:51Z",
      "side": 1,
      "message": "I don\u0027t think this can/will get changed in Android.  Here\u0027s my rationale.\n\n1) It would break compatibilty.  Any change would break any Vulkan application that is already using VK_KHR_incremental_present with pre-rotation.  Any change would create future compatibility problems for new apps that want to run on multiple Android releases (e.g. Android n rotates the rects, Android n+1 does not).\n\n2) The rotation is done in generic platform code (that doesn\u0027t know about Vulkan vs. GLES, but was written for GLES before we ever joined Google).  The only way I can see to \"fix\" this is to rotate the rectangles in the Vulkan loader (then there would be 3 rotations), but then we\u0027re back to the compatibility issue.\n\nThus, I\u0027m inclined to say we have to live with this.\n\nI should get the Vulkan spec clarified.",
      "parentUuid": "e349c4cc_79644d5c",
      "range": {
        "startLine": 1943,
        "startChar": 86,
        "endLine": 1943,
        "endChar": 95
      },
      "revId": "390b94d7e275d29c6d7d03d965f59b7beb2d5643",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e3282f22_db8c99ec",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1943,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-03-11T01:38:08Z",
      "side": 1,
      "message": "Based on the amount of time you spent on finding and fixing this (good job by the way), I agree with Cody that we should have an Android/Khronos bug to make a formal decision on what to do here.   If this doesn\u0027t end up being fixed in Android (whether due to a spec clarification or for legacy support), it should at least be used to document this unexpected behavior somewhere.   It would be nice to not bury this landmine for the next vulkan app developer to step on.\n\nIs there precedent for not fixing bugs like this in order to preserve backwards compatibility?   What happens if a CTS/dEQP test is created to expose the bad behavior (is there one already)?\n\nDoes eglSwapBuffersWithDamageKHR() have any visibility into what VkSwapchainCreateInfoKHR.preTransform is set to?   Would it be possible for it to at least detect the bad behavior and log things to try and save other developers\u0027 time?",
      "parentUuid": "2b1666fa_ba6ee6e6",
      "range": {
        "startLine": 1943,
        "startChar": 86,
        "endLine": 1943,
        "endChar": 95
      },
      "revId": "390b94d7e275d29c6d7d03d965f59b7beb2d5643",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "920a26e3_47712ef1",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1943,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2021-03-11T04:51:11Z",
      "side": 1,
      "message": "Thanks for your questions/suggestions Tim.\n\n\u003e ... we should have an Android/Khronos bug\n\nAgreed!  I mentioned a spec change somewhere (this CL and/or the bug).  I want to consult with Jesse Hall about this, since he has Android history and is still doing Vulkan standards.\n\n\u003e Is there precedent ...\n\nThere are things that aren\u0027t fixed, though I\u0027m not thinking of a good example.  This case is difficult because the extension was standardized 4 years ago, and we\u0027ve shipped it for a few Android releases already.  A few years ago, the Vulkan working group decided that extensions can\u0027t be changed, only clarified.  Only new extensions can be created to fix previous sins.  Perhaps that policy can change.  Without it, such an incompatible behavior change, would prevent an app from working across Android releases.\n\nBTW, I wrote the extension spec, the dEQP test (based on what the original dEQP folks wanted, which always passes unless the test crashes or times out), and the Vulkan loader changes.  Thus, I\u0027m guilty and don\u0027t want to \"bury this landmine\".  At the time, I was new to Android and I don\u0027t recall anybody thinking about rotation with this.\n\n\u003e Does eglSwapBuffersWithDamageKHR() have any visibility ...?\n\nSorry, I don\u0027t understand the question.",
      "parentUuid": "e3282f22_db8c99ec",
      "range": {
        "startLine": 1943,
        "startChar": 86,
        "endLine": 1943,
        "endChar": 95
      },
      "revId": "390b94d7e275d29c6d7d03d965f59b7beb2d5643",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d12206b4_74f08f3d",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1943,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-03-11T16:23:15Z",
      "side": 1,
      "message": "+1 to surfacing this issue to Android/Khronos",
      "parentUuid": "920a26e3_47712ef1",
      "range": {
        "startLine": 1943,
        "startChar": 86,
        "endLine": 1943,
        "endChar": 95
      },
      "revId": "390b94d7e275d29c6d7d03d965f59b7beb2d5643",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fa1db808_1a2b6ea9",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1423,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2021-03-10T22:32:38Z",
      "side": 1,
      "message": "This doesn\u0027t seem related to the other changes or your commit message. Is this is separate fix?  The code gets a bit messy with it. Maybe worth moving to a helper where you can explain all the conditions cleanly?  I\u0027m not super familiar with the pre-rotation logic, so will defer to Shabi if this is okay.",
      "range": {
        "startLine": 1422,
        "startChar": 16,
        "endLine": 1423,
        "endChar": 72
      },
      "revId": "390b94d7e275d29c6d7d03d965f59b7beb2d5643",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "07e57106_4159f9d9",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1423,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2021-03-10T23:11:51Z",
      "side": 1,
      "message": "I\u0027ll drop it.\n\nI was overly concerned with Shabi\u0027s emulated pre-rotation feature.  As I think about it, there\u0027s no way for his feature to come into play for this.",
      "parentUuid": "fa1db808_1a2b6ea9",
      "range": {
        "startLine": 1422,
        "startChar": 16,
        "endLine": 1423,
        "endChar": 72
      },
      "revId": "390b94d7e275d29c6d7d03d965f59b7beb2d5643",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9b237177_0e34d73c",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1423,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-03-11T16:22:25Z",
      "side": 1,
      "message": "There _is_ interaction; emulated pre-rotation doesn\u0027t rotate the rectangles like Android does.\n\nWhy not make the condition of disablePreRotateIncrementalPresentRectangles itself be: `contextVk-\u003egetFeatures().enablePreRotateSurfaces.enabled \u0026\u0026 !IsAndroid()`?",
      "parentUuid": "07e57106_4159f9d9",
      "range": {
        "startLine": 1422,
        "startChar": 16,
        "endLine": 1423,
        "endChar": 72
      },
      "revId": "390b94d7e275d29c6d7d03d965f59b7beb2d5643",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "00ab7d5e_9a819f78",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1423,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2021-03-11T17:12:21Z",
      "side": 1,
      "message": "I went back and looked at the interaction.  You\u0027re correct that emulated pre-rotation won\u0027t try to rotate the damage rectangles.",
      "parentUuid": "9b237177_0e34d73c",
      "range": {
        "startLine": 1422,
        "startChar": 16,
        "endLine": 1423,
        "endChar": 72
      },
      "revId": "390b94d7e275d29c6d7d03d965f59b7beb2d5643",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e125ba50_7ed42116",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1423,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-03-11T17:50:14Z",
      "side": 1,
      "message": "My point was that what you had here before was correct. My suggestion was to add contextVk-\u003egetFeatures().enablePreRotateSurfaces.enabled to the condition of disablePreRotateIncrementalPresentRectangles itself.",
      "parentUuid": "00ab7d5e_9a819f78",
      "range": {
        "startLine": 1422,
        "startChar": 16,
        "endLine": 1423,
        "endChar": 72
      },
      "revId": "390b94d7e275d29c6d7d03d965f59b7beb2d5643",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}