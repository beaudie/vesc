Name

    ANGLE_robust_resource_initialization.txt
	
Name Strings

    ANGLE_robust_resource_intialization

Contributors

    Geoff Lang, Google
	Ken Russell, Google

Contacts

    Shannon Woods, Google (shannonwoods 'at' google.com)

Status

    Draft

Version

    Version 1, January 7, 2015

Number

    OpenGL ES Extension TBD

Dependencies

	OpenGL ES 2.0 is required.

    This extension is written against the wording of the OpenGL ES
	3.1 specification.
	
	EGL_EXT_robust_initialization is used to request a context
	supporting this extension to perform resource initialization.
	
Overview

    This extension specifies the behavior for initialization of
	resources such as textures and buffers to default values. This
	initialization ensures that access will not be provided by the
	GL to previously allocated data not owned by the application.

New Types

    None

New Procedures and Functions

    None

New Tokens

	Accepted by the <value> parameter of GetBooleanv, GetIntegerv,
	GetFloatv, GetDoublev, and GetInteger54v:
	
		CONTEXT_ROBUST_RESOURCE_INITIALIZATION_ANGLE	0xXXXX

		
Additions to Chapter 2 of the OpenGL ES 3.1 Specification (OpenGL ES
Fundamentals)

	Add to section 2.6.1.1 "Name Spaces, Name Generation, and Object
	Creation."
	
	Certain types of objects may be initialized by the GL to an 
	implementation-dependent default value at object creation time.
	This robust resource initialization is enabled by creating a
	context with robust initialization enabled through the window
	system binding APIs. The object types which are initialized in
	this manner are noted below.
	
	Add to section 2.6.2 "Buffer Objects"
	
	When robust resource initialization is enabled, the contents of the
	data store within a buffer object are initialized to contain an
	implementation-dependent value at the time that the data store is
	allocated.
	
	Add to section 2.6.6 "Texture Objects"

	When robust resource initialization is enabled, the contents of each
	texture image within the texture object are initialized to contain
	an implementation-dependent texel value at the time that the texture
	image is created.
	
Additions to Chapter 8 of the OpenGL ES 3.1 Specification (Textures and
Samplers)

	Replace the first sentence of the fifth paragraph in section 8.8
	"Multisample Textures":
	
	Upon success, TexStorage2DMultisample deletes any existing image
	for target. If robust resource initialization is enabled, the
	contents of each texel is initialized to an implementation-
	dependent value; otherwise, the contents of texels are undefined.

	Add to the final paragraph of section 8.17 "Immutable-Format Texture
	Images":
	
	If robust resource initialization is enabled, the contents of each 
	texel is initialized to an implementation-dependent value; otherwise,\
	the contents of texels are undefined.
	
Interactions with EGL_ANGLE_create_context_robust_resource

	If the EGL window-system binding API is used to create a context,
	the EGL_ANGLE_create_context_robust_initialization extension is 
	supported, and the attribute
	EGL_CONTEXT_OPENGL_ROBUST_INITIALIZATION_ANGLE is set to
	EGL_TRUE when eglCreateContext is called, the resulting context
	will perform robust resource initialization as described above in
	section <section>, and the 
	CONTEXT_ROBUST_RESOURCE_INITIALIZATION_ANGLE
	query will return GL_TRUE as described above in section <section>.
	

Issues

	None

Revision History

    Version 1, 2015/01/07 - first draft.
