{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "5cba4712_6755f9c1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-04-28T01:42:15Z",
      "side": 1,
      "message": "Drive-by! Based on the linked bug, do you expect this to improve memory? Like, multi-context apps reusing memory more opportunistically?",
      "revId": "f31666c0b57d54aafb68a18567e8e9c1e443818b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "34565572_f640de60",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2022-04-28T18:07:19Z",
      "side": 1,
      "message": "Sorry, the bug number is wrong. Fixed now. This has nothing to do with memory.",
      "parentUuid": "5cba4712_6755f9c1",
      "revId": "f31666c0b57d54aafb68a18567e8e9c1e443818b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "142ba758_d1165f73",
        "filename": "src/libANGLE/renderer/vulkan/CommandProcessor.cpp",
        "patchSetId": 3
      },
      "lineNbr": 939,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-04-28T01:42:15Z",
      "side": 1,
      "message": "mLastCompletedQueueSerial is being set here before things have been cleaned up (and is set multiple times). This can be problematic, potentially in the future if another threads expects to reuse the stuff that are being recycled here.\n\nI suggest storing the last completed serial in a local variable (which means below you also don\u0027t need to reload it), then set it once at the end of the function.",
      "range": {
        "startLine": 939,
        "startChar": 8,
        "endLine": 939,
        "endChar": 33
      },
      "revId": "f31666c0b57d54aafb68a18567e8e9c1e443818b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ccd97657_9898110e",
        "filename": "src/libANGLE/renderer/vulkan/CommandProcessor.cpp",
        "patchSetId": 3
      },
      "lineNbr": 939,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-04-28T13:27:04Z",
      "side": 1,
      "message": "+1, worried about other cases like this, but the serial probably doesn\u0027t get updated in multiple places.",
      "parentUuid": "142ba758_d1165f73",
      "range": {
        "startLine": 939,
        "startChar": 8,
        "endLine": 939,
        "endChar": 33
      },
      "revId": "f31666c0b57d54aafb68a18567e8e9c1e443818b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6f06cd7c_4bd169bb",
        "filename": "src/libANGLE/renderer/vulkan/CommandProcessor.cpp",
        "patchSetId": 3
      },
      "lineNbr": 939,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2022-04-28T18:06:04Z",
      "side": 1,
      "message": "Done. Used a local variable here.\n\nThis is the only place we update mLastCompletedQueueSerial. And also the cost of update mLastCompletedQueueSerial is as cheap as writing one dword, so even if you end up doing multiple writes it should still cheap. Bellow is the assembly on x86:\n    movq    8(%r14,%r13), %rax\t// copy batch.serial into rax\n    movq    %rax, 184(%rdi)\t// copy rax to mLastCompletedQueueSerial\n\nThe benefit of using local variable is hopefully this can update register first and then do one write at the end, so use local variable still better, and I have updated it with latest patch.",
      "parentUuid": "ccd97657_9898110e",
      "range": {
        "startLine": 939,
        "startChar": 8,
        "endLine": 939,
        "endChar": 33
      },
      "revId": "f31666c0b57d54aafb68a18567e8e9c1e443818b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}