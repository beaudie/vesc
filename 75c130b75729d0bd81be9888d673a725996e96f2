{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5c7f07e1_b9f4a337",
        "filename": "src/tests/gl_tests/TiledRenderingTest.cpp",
        "patchSetId": 6
      },
      "lineNbr": 47,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-06-21T14:59:48Z",
      "side": 1,
      "message": "Just to stop trivial mistakes with x/y swapped:\n\n```suggestion\n    glStartTilingQCOM(10, 12, 15, 17, GL_COLOR_BUFFER_BIT0_QCOM);\n```",
      "range": {
        "startLine": 47,
        "startChar": 22,
        "endLine": 47,
        "endChar": 36
      },
      "revId": "75c130b75729d0bd81be9888d673a725996e96f2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "08ad4c56_69b6d1d9",
        "filename": "src/tests/gl_tests/TiledRenderingTest.cpp",
        "patchSetId": 6
      },
      "lineNbr": 55,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-06-21T14:59:48Z",
      "side": 1,
      "message": "Extra sure:\n\n```suggestion\n    const int w \u003d getWindowWidth();\n    const int h \u003d getWindowHeight();\n\n    EXPECT_PIXEL_RECT_EQ(10, 12, 15, 17, GLColor::blue);\n    EXPECT_PIXEL_RECT_EQ(0, 0, w, 12, GLColor::transparentBlack);\n    EXPECT_PIXEL_RECT_EQ(0, 12 + 17, w, h - 12 - 17, GLColor::transparentBlack);\n    EXPECT_PIXEL_RECT_EQ(0, 0, 10, h, GLColor::transparentBlack);\n    EXPECT_PIXEL_RECT_EQ(10 + 15, 0, w - 10 - 15, h, GLColor::transparentBlack);\n```",
      "range": {
        "startLine": 52,
        "startChar": 0,
        "endLine": 55,
        "endChar": 61
      },
      "revId": "75c130b75729d0bd81be9888d673a725996e96f2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dce6a745_c29b0bd9",
        "filename": "src/tests/gl_tests/TiledRenderingTest.cpp",
        "patchSetId": 6
      },
      "lineNbr": 107,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-06-21T14:59:48Z",
      "side": 1,
      "message": "Would be good to at least know what the driver does if the framebuffer attachment changes (if implicit end is needed). Could you add a variant that changes the framebuffer (instead of binding a different one) with `glFramebufferTexture2D`? And another test that doesn\u0027t change the framebuffer, but calls `glTexImage2D` to redefine the existing attachment.",
      "revId": "75c130b75729d0bd81be9888d673a725996e96f2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0c1d1727_b215b8f9",
        "filename": "src/tests/gl_tests/TiledRenderingTest.cpp",
        "patchSetId": 6
      },
      "lineNbr": 135,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-06-21T14:59:48Z",
      "side": 1,
      "message": "Could also use EXPECT_PIXEL_RECT_EQ here to be extra sure",
      "range": {
        "startLine": 129,
        "startChar": 0,
        "endLine": 135,
        "endChar": 1
      },
      "revId": "75c130b75729d0bd81be9888d673a725996e96f2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}