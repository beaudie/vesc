{
  "comments": [
    {
      "key": {
        "uuid": "c6c85903_1b33da44",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 9,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2018-10-02T14:03:43Z",
      "side": 1,
      "message": "Hint: If you use Bug: instead of Bug\u003d, you can avoid the empty line between this and Change-Id (which trips up some scripts, reissuing the Change-Id if you remove the empty line!)",
      "revId": "2c4a69d8561824243d381eeb8897055a9e1e6f8c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7a64fc77_831bbcb2",
        "filename": "src/libANGLE/Display.cpp",
        "patchSetId": 4
      },
      "lineNbr": 720,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2018-10-02T14:03:43Z",
      "side": 1,
      "message": "The other cases don\u0027t allocate the sibling if I\u0027m right, and I don\u0027t see where this is deleted. Can you verify that there is no leak here?",
      "revId": "2c4a69d8561824243d381eeb8897055a9e1e6f8c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c0347c43_01891776",
        "filename": "src/libANGLE/Image.cpp",
        "patchSetId": 4
      },
      "lineNbr": 316,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2018-10-01T22:36:29Z",
      "side": 1,
      "message": "I\u0027ve seen Jamie removing \"else\"s like this.\nI think they are not needed because of the \"return\"s?",
      "range": {
        "startLine": 316,
        "startChar": 4,
        "endLine": 316,
        "endChar": 8
      },
      "revId": "2c4a69d8561824243d381eeb8897055a9e1e6f8c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5e7a6ba8_b211ec4b",
        "filename": "src/libANGLE/renderer/gl/egl/ExternalImageSiblingEGL.h",
        "patchSetId": 4
      },
      "lineNbr": 2,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2018-10-01T22:36:29Z",
      "side": 1,
      "message": "no (c)",
      "range": {
        "startLine": 2,
        "startChar": 13,
        "endLine": 2,
        "endChar": 16
      },
      "revId": "2c4a69d8561824243d381eeb8897055a9e1e6f8c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f02318ff_6fb3fe1d",
        "filename": "src/libANGLE/renderer/gl/egl/android/NativeBufferImageSiblingAndroid.cpp",
        "patchSetId": 4
      },
      "lineNbr": 2,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2018-10-01T22:36:29Z",
      "side": 1,
      "message": "no (c)",
      "range": {
        "startLine": 2,
        "startChar": 13,
        "endLine": 2,
        "endChar": 16
      },
      "revId": "2c4a69d8561824243d381eeb8897055a9e1e6f8c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "de55ba86_9910f8e8",
        "filename": "src/libANGLE/renderer/gl/egl/android/NativeBufferImageSiblingAndroid.cpp",
        "patchSetId": 4
      },
      "lineNbr": 55,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2018-10-01T22:36:29Z",
      "side": 1,
      "message": "Eh, all this seems error-prone.\nIf it is indeed needed for implementing EGL_ANDROID_image_native_buffer, maybe we should consider other approaches. For example, have platform\u0027s libEGL implement it on ANGLE\u0027s behalf.\nOr, have some library on Android side of things which ANGLE calls into.\n\nOr, since you only use format, width and height from ANativeWindowBuffer, maybe ANativeWindow_Buffer from android/native_window.h is enough for your needs?",
      "range": {
        "startLine": 13,
        "startChar": 1,
        "endLine": 55,
        "endChar": 24
      },
      "revId": "2c4a69d8561824243d381eeb8897055a9e1e6f8c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "897119eb_b1cf24c5",
        "filename": "src/libANGLE/renderer/gl/egl/android/NativeBufferImageSiblingAndroid.cpp",
        "patchSetId": 4
      },
      "lineNbr": 55,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2018-10-02T14:03:43Z",
      "side": 1,
      "message": "+1. I\u0027m afraid this would result in no end of security bugs if android changes the struct and angle\u0027s is not matching, which can very easily happen for example if an application statically links to a single version of angle and releases on multiple android versions.",
      "parentUuid": "de55ba86_9910f8e8",
      "range": {
        "startLine": 13,
        "startChar": 1,
        "endLine": 55,
        "endChar": 24
      },
      "revId": "2c4a69d8561824243d381eeb8897055a9e1e6f8c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3a5c3310_6ee2069f",
        "filename": "src/libANGLE/renderer/gl/egl/android/NativeBufferImageSiblingAndroid.cpp",
        "patchSetId": 4
      },
      "lineNbr": 55,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-10-02T15:13:10Z",
      "side": 1,
      "message": "ANativeWindow_Buffer is unfortunately a different object then what gets passed in here and there is no way that I know of to convert between them.\n\nI\u0027ll ask the Android team about this.  Nicolas had to do the same thing in Swiftshader after asking them, these headers are not accessible to clients.  They said the class member layout and size was guaranteed to not change.",
      "parentUuid": "897119eb_b1cf24c5",
      "range": {
        "startLine": 13,
        "startChar": 1,
        "endLine": 55,
        "endChar": 24
      },
      "revId": "2c4a69d8561824243d381eeb8897055a9e1e6f8c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f4b890e3_679c394b",
        "filename": "src/libANGLE/renderer/gl/egl/android/NativeBufferImageSiblingAndroid.h",
        "patchSetId": 4
      },
      "lineNbr": 2,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2018-10-01T22:36:29Z",
      "side": 1,
      "message": "no (c)",
      "range": {
        "startLine": 2,
        "startChar": 13,
        "endLine": 2,
        "endChar": 16
      },
      "revId": "2c4a69d8561824243d381eeb8897055a9e1e6f8c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fca516f2_74f09afc",
        "filename": "src/libANGLE/renderer/gl/egl/android/android_util.cpp",
        "patchSetId": 4
      },
      "lineNbr": 2,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2018-10-01T22:36:29Z",
      "side": 1,
      "message": "no (c)",
      "range": {
        "startLine": 2,
        "startChar": 13,
        "endLine": 2,
        "endChar": 16
      },
      "revId": "2c4a69d8561824243d381eeb8897055a9e1e6f8c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "105fbb14_ac4ba859",
        "filename": "src/libANGLE/renderer/gl/egl/android/android_util.cpp",
        "patchSetId": 4
      },
      "lineNbr": 15,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2018-10-01T22:36:29Z",
      "side": 1,
      "message": "Have you considered including android/hardware_buffer.h (or media/NdkImage.h) from the NDK and using AHARDWAREBUFFER_FORMAT (or AIMAGE_FORMATS) from it instead? Some defines don\u0027t match between here and these two others, but I\u0027m not sure which ones are correct, and something looks fishy about us needing to use internal headers.",
      "range": {
        "startLine": 15,
        "startChar": 3,
        "endLine": 15,
        "endChar": 111
      },
      "revId": "2c4a69d8561824243d381eeb8897055a9e1e6f8c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fde0515a_5f9555ad",
        "filename": "src/libANGLE/renderer/gl/egl/android/android_util.cpp",
        "patchSetId": 4
      },
      "lineNbr": 15,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2018-10-02T14:03:43Z",
      "side": 1,
      "message": "If there is no way around it, it would be nice to have a way to at least fail if there is a potential problem. For example if this header is taken from v1.1, then check the current version and fail if it\u0027s not v1.1, in case in the future the enum values change and angle is outdated.\n\nAlternatively, android would have to guarantee the enum values won\u0027t change no matter what.",
      "parentUuid": "105fbb14_ac4ba859",
      "range": {
        "startLine": 15,
        "startChar": 3,
        "endLine": 15,
        "endChar": 111
      },
      "revId": "2c4a69d8561824243d381eeb8897055a9e1e6f8c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3cde8e10_c1f191bb",
        "filename": "src/libANGLE/renderer/gl/egl/android/android_util.cpp",
        "patchSetId": 4
      },
      "lineNbr": 15,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-10-02T15:13:10Z",
      "side": 1,
      "message": "I could pull in the enums or header from  from hardware_buffer.h but we may have to copy it into ANGLE, the enum values match but some are missing in hardware_buffer.h.\n\nAndroid does guarantee that the enums will never change, some are deprecated or added but values are not re-used.",
      "parentUuid": "fde0515a_5f9555ad",
      "range": {
        "startLine": 15,
        "startChar": 3,
        "endLine": 15,
        "endChar": 111
      },
      "revId": "2c4a69d8561824243d381eeb8897055a9e1e6f8c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1146af64_16fb6c13",
        "filename": "src/libANGLE/renderer/gl/egl/android/android_util.cpp",
        "patchSetId": 4
      },
      "lineNbr": 23,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2018-10-01T22:36:29Z",
      "side": 1,
      "message": "These two formats don\u0027t appear in https://android.googlesource.com/platform/system/core/+/master/libsystem/include/system/graphics-base-v1.0.h\nOne more reason not to rely on unstable internal APIs.",
      "range": {
        "startLine": 22,
        "startChar": 1,
        "endLine": 23,
        "endChar": 48
      },
      "revId": "2c4a69d8561824243d381eeb8897055a9e1e6f8c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5ff55a52_07127aad",
        "filename": "src/libANGLE/renderer/gl/egl/android/android_util.cpp",
        "patchSetId": 4
      },
      "lineNbr": 23,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-10-02T15:13:10Z",
      "side": 1,
      "message": "Yea, they arn\u0027t in the AHARDWAREBUFFER_FORMAT enum either (deprecated) but the dEQP tests still use them.",
      "parentUuid": "1146af64_16fb6c13",
      "range": {
        "startLine": 22,
        "startChar": 1,
        "endLine": 23,
        "endChar": 48
      },
      "revId": "2c4a69d8561824243d381eeb8897055a9e1e6f8c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f431d880_cc4cf0b3",
        "filename": "src/libANGLE/renderer/gl/egl/android/android_util.cpp",
        "patchSetId": 4
      },
      "lineNbr": 23,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2018-10-02T15:54:56Z",
      "side": 1,
      "message": "Maybe dEQP should stop testing these, then?\nBTW, where does dEQP take these defines from?\nThey\u0027ve also copied parts of Android internal API?",
      "parentUuid": "5ff55a52_07127aad",
      "range": {
        "startLine": 22,
        "startChar": 1,
        "endLine": 23,
        "endChar": 48
      },
      "revId": "2c4a69d8561824243d381eeb8897055a9e1e6f8c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0518be0b_3b4bf610",
        "filename": "src/libANGLE/renderer/gl/egl/android/android_util.cpp",
        "patchSetId": 4
      },
      "lineNbr": 23,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-10-02T16:50:46Z",
      "side": 1,
      "message": "dEQP doesn\u0027t test this extension at all by default, it has to be explicitly enabled. dEQP contains the only tests of this extension though I could at least verify that it works.\n\nYou can see here the code to create GraphicsBuffer: https://android.googlesource.com/platform/external/deqp/+/master/framework/platform/android/tcuAndroidInternals.cpp  It loads mangled symbol names from Android system libraries to construct the buffer.\n\nFormat enums are from https://android.googlesource.com/platform/external/deqp/+/master/framework/platform/android/tcuAndroidInternals.hpp#77",
      "parentUuid": "f431d880_cc4cf0b3",
      "range": {
        "startLine": 22,
        "startChar": 1,
        "endLine": 23,
        "endChar": 48
      },
      "revId": "2c4a69d8561824243d381eeb8897055a9e1e6f8c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d7cd9ade_3dbf3719",
        "filename": "src/libANGLE/renderer/gl/egl/android/android_util.cpp",
        "patchSetId": 4
      },
      "lineNbr": 23,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2018-10-02T16:56:48Z",
      "side": 1,
      "message": "dEQP is even more gross. bleh",
      "parentUuid": "0518be0b_3b4bf610",
      "range": {
        "startLine": 22,
        "startChar": 1,
        "endLine": 23,
        "endChar": 48
      },
      "revId": "2c4a69d8561824243d381eeb8897055a9e1e6f8c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "95008d89_eee9c64a",
        "filename": "src/libANGLE/renderer/gl/egl/android/android_util.h",
        "patchSetId": 4
      },
      "lineNbr": 2,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2018-10-01T22:36:29Z",
      "side": 1,
      "message": "I don\u0027t think we use \"(c)\".\nhttps://chromium.googlesource.com/angle/angle/+/master/doc/CodingStandard.md",
      "range": {
        "startLine": 2,
        "startChar": 13,
        "endLine": 2,
        "endChar": 16
      },
      "revId": "2c4a69d8561824243d381eeb8897055a9e1e6f8c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}