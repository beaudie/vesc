{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "9c949dcf_22d837fc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2024-09-10T21:00:21Z",
      "side": 1,
      "message": "This one really not seeing much of help on gangstar_vegas, but not hurting as well. \n\nBefore:\nMean result time: 3.9425 ms.\nMean result time: 3.5807 ms.\nMean result time: 3.5765 ms.\nMean result time: 3.5892 ms.\nMean result time: 3.8630 ms.\nAfter:\nMean result time: 3.7563 ms.\nMean result time: 3.4912 ms.\nMean result time: 3.7052 ms.\nMean result time: 3.6936 ms.\nMean result time: 3.8842 ms.",
      "revId": "7ec1ddd6bc954b21fdfb834987bcfbbd7549a2c3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "edf8d41b_e6cea2e9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2024-09-10T21:03:32Z",
      "side": 1,
      "message": "The reason is that only 80 bytes overlapped with a few overlapped ranges I looked. The biggest help is from the previous CL which almost get rid of most of overlaps.",
      "parentUuid": "9c949dcf_22d837fc",
      "revId": "7ec1ddd6bc954b21fdfb834987bcfbbd7549a2c3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c09290f7_8c54069c",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 305,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-09-10T21:12:55Z",
      "side": 1,
      "message": "If the ranges are: `[0, 10]`, `[30, 40]` and `[10, 30]`, this code doesn\u0027t coalesce it to `[0, 40]`, but rather produces `[0, 30]` and `[30, 40]`, right?\n\nThat\u0027s why I mentioned the need for sorting by begin offset first.\n\nAnother example is `[0, 10]`, [25, 40]` and `[10, 30]`, where this produces `[0, 30]` and `[25, 40]`, **which overlap**!",
      "range": {
        "startLine": 301,
        "startChar": 0,
        "endLine": 305,
        "endChar": 72
      },
      "revId": "7ec1ddd6bc954b21fdfb834987bcfbbd7549a2c3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6e78c69e_29e65815",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 305,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2024-09-10T21:25:56Z",
      "side": 1,
      "message": "Right, it will add extra overhead which based on my the actual data I am looking will not really help. There is no such kind of overlap I am seeing. The only overlap I am seeing is that there are occasionally two identical ranges that are 80 bytes length. This simple logic will catch that. This makes sense that app really will not overlap the updates anyway.",
      "parentUuid": "c09290f7_8c54069c",
      "range": {
        "startLine": 301,
        "startChar": 0,
        "endLine": 305,
        "endChar": 72
      },
      "revId": "7ec1ddd6bc954b21fdfb834987bcfbbd7549a2c3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "26ae4779_5266c2b5",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 305,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2024-09-10T22:41:04Z",
      "side": 1,
      "message": "Added sort.",
      "parentUuid": "6e78c69e_29e65815",
      "range": {
        "startLine": 301,
        "startChar": 0,
        "endLine": 305,
        "endChar": 72
      },
      "revId": "7ec1ddd6bc954b21fdfb834987bcfbbd7549a2c3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8395d9e9_94a824c3",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 305,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-09-10T22:41:41Z",
      "side": 1,
      "message": "Thanks for the update, LGTM. I can rest easier knowing the lack of barrier is _by spec_ correct",
      "parentUuid": "6e78c69e_29e65815",
      "range": {
        "startLine": 301,
        "startChar": 0,
        "endLine": 305,
        "endChar": 72
      },
      "revId": "7ec1ddd6bc954b21fdfb834987bcfbbd7549a2c3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}