{
  "comments": [
    {
      "key": {
        "uuid": "cd11fa65_a1d7a760",
        "filename": "src/tests/perf_tests/EGLMakeCurrentPerf.cpp",
        "patchSetId": 5
      },
      "lineNbr": 62,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-07-17T21:21:12Z",
      "side": 1,
      "message": "I think the device type applies to all backends.",
      "range": {
        "startLine": 57,
        "startChar": 4,
        "endLine": 62,
        "endChar": 5
      },
      "revId": "5bedd8599ece83fabd22513194181d752e970b0d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "526917c5_44f0df4a",
        "filename": "src/tests/perf_tests/EGLMakeCurrentPerf.cpp",
        "patchSetId": 5
      },
      "lineNbr": 62,
      "author": {
        "id": 1287062
      },
      "writtenOn": "2018-07-17T21:49:39Z",
      "side": 1,
      "message": "Hmm I got rid of the if statement and that seemed to break the openGL and Vulkan test, are there different deviceTypes that I need to pass in for those maybe?\n\nJust as a heads up I got this section from the EGLInitializePerf.cpp file",
      "parentUuid": "cd11fa65_a1d7a760",
      "range": {
        "startLine": 57,
        "startChar": 4,
        "endLine": 62,
        "endChar": 5
      },
      "revId": "5bedd8599ece83fabd22513194181d752e970b0d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6d594d09_9cee42d3",
        "filename": "src/tests/perf_tests/EGLMakeCurrentPerf.cpp",
        "patchSetId": 5
      },
      "lineNbr": 62,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-07-17T22:10:05Z",
      "side": 1,
      "message": "Maybe worth digging into. Geoff\u0027s right. It should work with the other back ends. That\u0027s how we select the NULL driver.",
      "parentUuid": "526917c5_44f0df4a",
      "range": {
        "startLine": 57,
        "startChar": 4,
        "endLine": 62,
        "endChar": 5
      },
      "revId": "5bedd8599ece83fabd22513194181d752e970b0d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb218a1d_58263b43",
        "filename": "src/tests/perf_tests/EGLMakeCurrentPerf.cpp",
        "patchSetId": 5
      },
      "lineNbr": 62,
      "author": {
        "id": 1287062
      },
      "writtenOn": "2018-07-18T00:07:31Z",
      "side": 1,
      "message": "Hmmm, seems like eglGetPlatformDisplayEXT doesn\u0027t seem to like the fact that we pass in EGL_DONT_CARE for the EGL_PLATFORM_ANGLE_DEVICE_TYPE_ANGLE option, I did notice that other EGL tests have a similar check in place for EGL_DONT_CARE, could that be the issue? I updated the test with that check and it seems to work then.",
      "parentUuid": "6d594d09_9cee42d3",
      "range": {
        "startLine": 57,
        "startChar": 4,
        "endLine": 62,
        "endChar": 5
      },
      "revId": "5bedd8599ece83fabd22513194181d752e970b0d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d6a2d04_6c48d776",
        "filename": "src/tests/perf_tests/EGLMakeCurrentPerf.cpp",
        "patchSetId": 5
      },
      "lineNbr": 62,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-07-18T00:43:22Z",
      "side": 1,
      "message": "Sounds like a bug in our validation. We should accept EGL_DONT_CARE I think.",
      "parentUuid": "fb218a1d_58263b43",
      "range": {
        "startLine": 57,
        "startChar": 4,
        "endLine": 62,
        "endChar": 5
      },
      "revId": "5bedd8599ece83fabd22513194181d752e970b0d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "90efbedc_2c912232",
        "filename": "src/tests/perf_tests/EGLMakeCurrentPerf.cpp",
        "patchSetId": 5
      },
      "lineNbr": 62,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-07-18T00:44:48Z",
      "side": 1,
      "message": "Actually, cancel that. We should make the default value for deviceType be HARDWARE in EGLWindow.cpp.",
      "parentUuid": "4d6a2d04_6c48d776",
      "range": {
        "startLine": 57,
        "startChar": 4,
        "endLine": 62,
        "endChar": 5
      },
      "revId": "5bedd8599ece83fabd22513194181d752e970b0d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d44ceaab_39e7f79b",
        "filename": "src/tests/perf_tests/EGLMakeCurrentPerf.cpp",
        "patchSetId": 5
      },
      "lineNbr": 62,
      "author": {
        "id": 1287062
      },
      "writtenOn": "2018-07-18T15:42:08Z",
      "side": 1,
      "message": "Is that something that should be addressed in this CL or should this CL wait until that issue is resolved elsewhere (and have this CL always pass in the deviceType rather than check if it equals EGL_DONT_CARE)?",
      "parentUuid": "90efbedc_2c912232",
      "range": {
        "startLine": 57,
        "startChar": 4,
        "endLine": 62,
        "endChar": 5
      },
      "revId": "5bedd8599ece83fabd22513194181d752e970b0d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d15207d2_ec282f06",
        "filename": "src/tests/perf_tests/EGLMakeCurrentPerf.cpp",
        "patchSetId": 5
      },
      "lineNbr": 93,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-07-17T21:21:12Z",
      "side": 1,
      "message": "nit: nullptr (and below)",
      "range": {
        "startLine": 93,
        "startChar": 71,
        "endLine": 93,
        "endChar": 75
      },
      "revId": "5bedd8599ece83fabd22513194181d752e970b0d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "564b5ec4_c925edda",
        "filename": "src/tests/perf_tests/EGLMakeCurrentPerf.cpp",
        "patchSetId": 5
      },
      "lineNbr": 93,
      "author": {
        "id": 1287062
      },
      "writtenOn": "2018-07-17T21:49:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d15207d2_ec282f06",
      "range": {
        "startLine": 93,
        "startChar": 71,
        "endLine": 93,
        "endChar": 75
      },
      "revId": "5bedd8599ece83fabd22513194181d752e970b0d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b01ddfc5_b86815f1",
        "filename": "src/tests/perf_tests/EGLMakeCurrentPerf.cpp",
        "patchSetId": 5
      },
      "lineNbr": 114,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-07-17T21:21:12Z",
      "side": 1,
      "message": "Maybe put this into a constant or config variable.",
      "range": {
        "startLine": 114,
        "startChar": 24,
        "endLine": 114,
        "endChar": 26
      },
      "revId": "5bedd8599ece83fabd22513194181d752e970b0d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "15465372_877060e6",
        "filename": "src/tests/perf_tests/EGLMakeCurrentPerf.cpp",
        "patchSetId": 5
      },
      "lineNbr": 114,
      "author": {
        "id": 1287062
      },
      "writtenOn": "2018-07-17T21:49:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b01ddfc5_b86815f1",
      "range": {
        "startLine": 114,
        "startChar": 24,
        "endLine": 114,
        "endChar": 26
      },
      "revId": "5bedd8599ece83fabd22513194181d752e970b0d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a58e9da6_5d8e5b59",
        "filename": "src/tests/perf_tests/EGLMakeCurrentPerf.cpp",
        "patchSetId": 5
      },
      "lineNbr": 116,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-07-17T21:21:12Z",
      "side": 1,
      "message": "nit: this can be a local variable instead of a member.",
      "range": {
        "startLine": 116,
        "startChar": 8,
        "endLine": 116,
        "endChar": 21
      },
      "revId": "5bedd8599ece83fabd22513194181d752e970b0d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f8d39cc_42d3ee8a",
        "filename": "src/tests/perf_tests/EGLMakeCurrentPerf.cpp",
        "patchSetId": 5
      },
      "lineNbr": 116,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-07-17T21:21:12Z",
      "side": 1,
      "message": "The code could support more than 2 contexts \u0027for free\u0027 by using\n\n    mCurrContext \u003d (mCurrContext + 1) % mContexts.size()",
      "range": {
        "startLine": 116,
        "startChar": 23,
        "endLine": 116,
        "endChar": 36
      },
      "revId": "5bedd8599ece83fabd22513194181d752e970b0d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d4c47012_7350d4a0",
        "filename": "src/tests/perf_tests/EGLMakeCurrentPerf.cpp",
        "patchSetId": 5
      },
      "lineNbr": 116,
      "author": {
        "id": 1287062
      },
      "writtenOn": "2018-07-17T21:49:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a58e9da6_5d8e5b59",
      "range": {
        "startLine": 116,
        "startChar": 8,
        "endLine": 116,
        "endChar": 21
      },
      "revId": "5bedd8599ece83fabd22513194181d752e970b0d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "51d723ac_fd64fb12",
        "filename": "src/tests/perf_tests/EGLMakeCurrentPerf.cpp",
        "patchSetId": 5
      },
      "lineNbr": 116,
      "author": {
        "id": 1287062
      },
      "writtenOn": "2018-07-17T21:49:39Z",
      "side": 1,
      "message": "That\u0027s a good idea! Yea I decided on the bit flip since there were only two contexts, but this makes it just a little easier to modify the test to arbitrary context counts in the future if needed.",
      "parentUuid": "3f8d39cc_42d3ee8a",
      "range": {
        "startLine": 116,
        "startChar": 23,
        "endLine": 116,
        "endChar": 36
      },
      "revId": "5bedd8599ece83fabd22513194181d752e970b0d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e6a310de_48a7970f",
        "filename": "src/tests/perf_tests/EGLMakeCurrentPerf.cpp",
        "patchSetId": 5
      },
      "lineNbr": 129,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-07-17T21:21:12Z",
      "side": 1,
      "message": "Let\u0027s run it against D3D9 and D3D11 too.",
      "range": {
        "startLine": 127,
        "startChar": 23,
        "endLine": 129,
        "endChar": 42
      },
      "revId": "5bedd8599ece83fabd22513194181d752e970b0d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f958a7d_c80b945c",
        "filename": "src/tests/perf_tests/EGLMakeCurrentPerf.cpp",
        "patchSetId": 5
      },
      "lineNbr": 129,
      "author": {
        "id": 1287062
      },
      "writtenOn": "2018-07-17T21:49:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e6a310de_48a7970f",
      "range": {
        "startLine": 127,
        "startChar": 23,
        "endLine": 129,
        "endChar": 42
      },
      "revId": "5bedd8599ece83fabd22513194181d752e970b0d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}