{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "3f2467c2_e1b4365a",
        "filename": "src/libANGLE/Program.cpp",
        "patchSetId": 10
      },
      "lineNbr": 3676,
      "author": {
        "id": 1185214
      },
      "writtenOn": "2022-04-28T15:33:23Z",
      "side": 1,
      "message": "FYI: This is VERY heavy-handed. It\u0027s currently blocked Skia rolls, and I\u0027m struggling to work around it. Our bots don\u0027t have .git directories for third party DEPS, so their angle_commit.h ends up with the \"unknown hash\".\n\nEven if Skia doesn\u0027t use the program binary API at all, this code gets his internally when we call LinkProgram, so the bots just crash instantly.",
      "revId": "1835e5d895f7f75435c2eddf3f87a88ef534c237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cc6ddb82_f84363e5",
        "filename": "src/libANGLE/Program.cpp",
        "patchSetId": 10
      },
      "lineNbr": 3676,
      "author": {
        "id": 1190898
      },
      "writtenOn": "2022-04-28T15:45:33Z",
      "side": 1,
      "message": "Thanks Brian -- what is precisely causing the bots to crash?",
      "parentUuid": "3f2467c2_e1b4365a",
      "revId": "1835e5d895f7f75435c2eddf3f87a88ef534c237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "495708a1_e6ef2ace",
        "filename": "src/libANGLE/Program.cpp",
        "patchSetId": 10
      },
      "lineNbr": 3676,
      "author": {
        "id": 1185214
      },
      "writtenOn": "2022-04-28T15:55:13Z",
      "side": 1,
      "message": "Ah, we consider shader compilation failure to be a fatal error when running our tests. As soon as we try to link a program, ANGLE hits this and produces this error. eg: https://logs.chromium.org/logs/skia/5a89864fb0267211/+/steps/dm/0/stdout\n\nI just tried fixing this more thoroughly by specifying (EGL_CONTEXT_PROGRAM_BINARY_CACHE_ENABLED_ANGLE, EGL_FALSE) when I create our ANGLE EGL context, but I think I\u0027ve figured out that the code for that is incorrect:\n\nhttps://source.chromium.org/chromium/chromium/src/+/main:third_party/angle/src/libANGLE/Display.cpp;l\u003d1457;drc\u003d95c1ff52b1109efeed99688ec26253f96e201073\n\nThat line is checking the Display attributes, *not* the Context attributes.",
      "parentUuid": "cc6ddb82_f84363e5",
      "revId": "1835e5d895f7f75435c2eddf3f87a88ef534c237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "27aa774b_1e5b8624",
        "filename": "src/libANGLE/Program.cpp",
        "patchSetId": 10
      },
      "lineNbr": 3676,
      "author": {
        "id": 1185214
      },
      "writtenOn": "2022-04-28T15:57:34Z",
      "side": 1,
      "message": "FWIW - If I set the cache_enabled attribute on the display, it does solve our issue, so I may do that for now whenever we\u0027re testing ANGLE.",
      "parentUuid": "495708a1_e6ef2ace",
      "revId": "1835e5d895f7f75435c2eddf3f87a88ef534c237",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}