{
  "comments": [
    {
      "key": {
        "uuid": "a65fde57_bcd9cd0c",
        "filename": "src/common/debug.h",
        "patchSetId": 3
      },
      "lineNbr": 68,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2016-10-28T18:47:02Z",
      "side": 1,
      "message": "nit: comments wrapping too early.",
      "range": {
        "startLine": 60,
        "startChar": 0,
        "endLine": 68,
        "endChar": 21
      },
      "revId": "53c8924f618aebf57336f683f839272b1081c080",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a65fde57_dcfac14f",
        "filename": "src/common/debug.h",
        "patchSetId": 3
      },
      "lineNbr": 68,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-10-28T18:58:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a65fde57_bcd9cd0c",
      "range": {
        "startLine": 60,
        "startChar": 0,
        "endLine": 68,
        "endChar": 21
      },
      "revId": "53c8924f618aebf57336f683f839272b1081c080",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a65fde57_9cdcc9cb",
        "filename": "src/common/debug.h",
        "patchSetId": 3
      },
      "lineNbr": 69,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2016-10-28T19:11:13Z",
      "side": 1,
      "message": "Can\u0027t figure out where this is used.",
      "range": {
        "startLine": 69,
        "startChar": 4,
        "endLine": 69,
        "endChar": 34
      },
      "revId": "53c8924f618aebf57336f683f839272b1081c080",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a65fde57_1cf719df",
        "filename": "src/common/debug.h",
        "patchSetId": 3
      },
      "lineNbr": 69,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2016-10-28T19:46:35Z",
      "side": 1,
      "message": "OK, figured out how this works in ANGLE_LAZY_STREAM",
      "parentUuid": "a65fde57_9cdcc9cb",
      "range": {
        "startLine": 69,
        "startChar": 4,
        "endLine": 69,
        "endChar": 34
      },
      "revId": "53c8924f618aebf57336f683f839272b1081c080",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a65fde57_fcd345e6",
        "filename": "src/common/debug.h",
        "patchSetId": 3
      },
      "lineNbr": 136,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2016-10-28T18:47:02Z",
      "side": 1,
      "message": "nit: comments wrapping too early.",
      "range": {
        "startLine": 135,
        "startChar": 0,
        "endLine": 136,
        "endChar": 73
      },
      "revId": "53c8924f618aebf57336f683f839272b1081c080",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a65fde57_1c60b94d",
        "filename": "src/common/debug.h",
        "patchSetId": 3
      },
      "lineNbr": 136,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-10-28T18:58:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a65fde57_fcd345e6",
      "range": {
        "startLine": 135,
        "startChar": 0,
        "endLine": 136,
        "endChar": 73
      },
      "revId": "53c8924f618aebf57336f683f839272b1081c080",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a65fde57_dcbf615f",
        "filename": "src/common/debug.h",
        "patchSetId": 3
      },
      "lineNbr": 138,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2016-10-28T19:11:13Z",
      "side": 1,
      "message": "Maybe enclose this in (), to be on the safe side?",
      "range": {
        "startLine": 138,
        "startChar": 4,
        "endLine": 138,
        "endChar": 65
      },
      "revId": "53c8924f618aebf57336f683f839272b1081c080",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a65fde57_5c507146",
        "filename": "src/common/debug.h",
        "patchSetId": 3
      },
      "lineNbr": 138,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-10-28T19:14:08Z",
      "side": 1,
      "message": "I believe it has to be this way.",
      "parentUuid": "a65fde57_dcbf615f",
      "range": {
        "startLine": 138,
        "startChar": 4,
        "endLine": 138,
        "endChar": 65
      },
      "revId": "53c8924f618aebf57336f683f839272b1081c080",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a65fde57_dc05a1ee",
        "filename": "src/common/debug.h",
        "patchSetId": 3
      },
      "lineNbr": 138,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2016-10-28T19:46:35Z",
      "side": 1,
      "message": "Yeah, you are right. I couldn\u0027t read this properly because of weird operator \u0026 overloading and the expression missing \u003c\u003c part.",
      "parentUuid": "a65fde57_5c507146",
      "range": {
        "startLine": 138,
        "startChar": 4,
        "endLine": 138,
        "endChar": 65
      },
      "revId": "53c8924f618aebf57336f683f839272b1081c080",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a65fde57_7ce0d5b5",
        "filename": "src/common/debug.h",
        "patchSetId": 3
      },
      "lineNbr": 141,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2016-10-28T18:47:02Z",
      "side": 1,
      "message": "nit: this probably doesn\u0027t need to be a function.",
      "range": {
        "startLine": 141,
        "startChar": 24,
        "endLine": 141,
        "endChar": 26
      },
      "revId": "53c8924f618aebf57336f683f839272b1081c080",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a65fde57_5c4191a3",
        "filename": "src/common/debug.h",
        "patchSetId": 3
      },
      "lineNbr": 141,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-10-28T18:58:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a65fde57_7ce0d5b5",
      "range": {
        "startLine": 141,
        "startChar": 24,
        "endLine": 141,
        "endChar": 26
      },
      "revId": "53c8924f618aebf57336f683f839272b1081c080",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a65fde57_fcc225ed",
        "filename": "src/common/debug.h",
        "patchSetId": 3
      },
      "lineNbr": 155,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2016-10-28T19:11:13Z",
      "side": 1,
      "message": "I don\u0027t understand this.\nI think this expands to\n!(0 ? !(condition) : false) ? (void)0 : ::gl::LogMessageVoidify() \u0026 (::gl::DummyStream()) \u003c\u003c \"Check failed: \" #condition \". \"\nWhich is essentially (void)0.\nWhy all the complexity is needed? Wouldn\u0027t ((void)condition) be enough? Where am I wrong?",
      "range": {
        "startLine": 154,
        "startChar": 0,
        "endLine": 155,
        "endChar": 43
      },
      "revId": "53c8924f618aebf57336f683f839272b1081c080",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a65fde57_7c4bb59f",
        "filename": "src/common/debug.h",
        "patchSetId": 3
      },
      "lineNbr": 155,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-10-28T19:14:08Z",
      "side": 1,
      "message": "Sorry I can\u0027t explain this. It needs to be this way to work, and I copied it from Chromium.",
      "parentUuid": "a65fde57_fcc225ed",
      "range": {
        "startLine": 154,
        "startChar": 0,
        "endLine": 155,
        "endChar": 43
      },
      "revId": "53c8924f618aebf57336f683f839272b1081c080",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a65fde57_bc68ada5",
        "filename": "src/common/debug.h",
        "patchSetId": 3
      },
      "lineNbr": 155,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2016-10-28T19:46:35Z",
      "side": 1,
      "message": "Thinking more about it and looking at Chromium code, I think this whole thing is needed only when ANGLE_ASSERTS_ON is 1.\nIn which case \u003c\u003c is invoked on the stream, which is then cast to void by \"::gl::LogMessageVoidify() \u0026\", so that \"?:\" types would match. I don\u0027t think this whole complexity is needed if ANGLE_ASSERTS_ON would always be 0 when ANGLE_LAZY_STREAM() is expanded.\nHave you tried this with just\n#define ASSERT(expression) ((void)(expression))",
      "parentUuid": "a65fde57_7c4bb59f",
      "range": {
        "startLine": 154,
        "startChar": 0,
        "endLine": 155,
        "endChar": 43
      },
      "revId": "53c8924f618aebf57336f683f839272b1081c080",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a65fde57_dc212166",
        "filename": "src/common/debug.h",
        "patchSetId": 3
      },
      "lineNbr": 155,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2016-10-28T19:55:22Z",
      "side": 1,
      "message": "Using ((void)(expression)) would still execute the expression when asserts are off which is not desired.",
      "parentUuid": "a65fde57_bc68ada5",
      "range": {
        "startLine": 154,
        "startChar": 0,
        "endLine": 155,
        "endChar": 43
      },
      "revId": "53c8924f618aebf57336f683f839272b1081c080",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}