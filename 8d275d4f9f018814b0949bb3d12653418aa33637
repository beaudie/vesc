{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f42f60c7_93141ff9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2024-11-01T01:09:18Z",
      "side": 1,
      "message": "AWESOME!",
      "revId": "8d275d4f9f018814b0949bb3d12653418aa33637",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "94d58430_07285668",
        "filename": "src/compiler/translator/wgsl/OutputUniformBlocks.cpp",
        "patchSetId": 4
      },
      "lineNbr": 9,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2024-11-01T01:09:18Z",
      "side": 1,
      "message": "nit: #include \"angle_gl.h\" handles this plus some extra defines.",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 22
      },
      "fixSuggestions": [
        {
          "fixId": "6352a066_063ddb35",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "src/compiler/translator/wgsl/OutputUniformBlocks.cpp",
              "range": {
                "startLine": 9,
                "startChar": 0,
                "endLine": 10,
                "endChar": 0
              },
              "replacement": "#include \"angle_gl.h\"\n"
            }
          ]
        }
      ],
      "revId": "8d275d4f9f018814b0949bb3d12653418aa33637",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "774cc94a_11896120",
        "filename": "src/compiler/translator/wgsl/OutputUniformBlocks.cpp",
        "patchSetId": 4
      },
      "lineNbr": 9,
      "author": {
        "id": 1297347
      },
      "writtenOn": "2024-11-04T17:52:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "94d58430_07285668",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 22
      },
      "revId": "8d275d4f9f018814b0949bb3d12653418aa33637",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4b6c58b8_2a9271d1",
        "filename": "src/libANGLE/renderer/wgpu/ContextWgpu.h",
        "patchSetId": 4
      },
      "lineNbr": 311,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2024-11-01T01:09:18Z",
      "side": 1,
      "message": "I\u0027d go ahead and call this DIRTY_BIT_BIND_GROUP because that\u0027s what needs to be rebuilt for WebGPU. Multiple things will end up marking it as dirty.",
      "range": {
        "startLine": 311,
        "startChar": 8,
        "endLine": 311,
        "endChar": 26
      },
      "fixSuggestions": [
        {
          "fixId": "201f5343_d76eb97d",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "src/libANGLE/renderer/wgpu/ContextWgpu.h",
              "range": {
                "startLine": 311,
                "startChar": 0,
                "endLine": 312,
                "endChar": 0
              },
              "replacement": "        DIRTY_BIT_BIND_GROUP,\n"
            },
            {
              "path": "src/libANGLE/renderer/wgpu/ContextWgpu.h",
              "range": {
                "startLine": 354,
                "startChar": 0,
                "endLine": 355,
                "endChar": 0
              },
              "replacement": "    angle::Result handleDirtyBindGroup(DirtyBits::Iterator *dirtyBitsIterator);\n"
            }
          ]
        }
      ],
      "revId": "8d275d4f9f018814b0949bb3d12653418aa33637",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ce8161dc_33f77409",
        "filename": "src/libANGLE/renderer/wgpu/ContextWgpu.h",
        "patchSetId": 4
      },
      "lineNbr": 311,
      "author": {
        "id": 1297347
      },
      "writtenOn": "2024-11-04T17:52:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4b6c58b8_2a9271d1",
      "range": {
        "startLine": 311,
        "startChar": 8,
        "endLine": 311,
        "endChar": 26
      },
      "revId": "8d275d4f9f018814b0949bb3d12653418aa33637",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "63fa1f02_a64060f8",
        "filename": "src/libANGLE/renderer/wgpu/ProgramExecutableWgpu.cpp",
        "patchSetId": 4
      },
      "lineNbr": 96,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2024-11-01T01:09:18Z",
      "side": 1,
      "message": "Could merge this into one loop over shader types by having a map of shader type -\u003e binding constant",
      "range": {
        "startLine": 76,
        "startChar": 8,
        "endLine": 96,
        "endChar": 9
      },
      "fixSuggestions": [
        {
          "fixId": "edc675e0_2ce3cb53",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "src/libANGLE/renderer/wgpu/ProgramExecutableWgpu.cpp",
              "range": {
                "startLine": 75,
                "startChar": 0,
                "endLine": 77,
                "endChar": 0
              },
              "replacement": "        for (gl::ShaderType shaderType : mExecutable-\u003egetLinkedShaderStages())\n"
            },
            {
              "path": "src/libANGLE/renderer/wgpu/ProgramExecutableWgpu.cpp",
              "range": {
                "startLine": 78,
                "startChar": 0,
                "endLine": 96,
                "endChar": 0
              },
              "replacement": "            if (mDefaultUniformBlocks[shaderType]-\u003euniformData.size() !\u003d 0)\n            {\n                wgpu::BindGroupEntry bindGroupEntry;\n                bindGroupEntry.binding \u003d sh::kDefaultUniformBlocks[shaderType].binding;\n                bindGroupEntry.buffer  \u003d defaultUniformBuffer.getBuffer();\n                bindGroupEntry.offset  \u003d offsets[shaderType];\n                bindGroupEntry.size \u003d mDefaultUniformBlocks[shaderType]-\u003euniformData.size();\n                bindings.push_back(bindGroupEntry);\n            }\n"
            }
          ]
        }
      ],
      "revId": "8d275d4f9f018814b0949bb3d12653418aa33637",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "22fd5a55_b009137e",
        "filename": "src/libANGLE/renderer/wgpu/ProgramExecutableWgpu.cpp",
        "patchSetId": 4
      },
      "lineNbr": 96,
      "author": {
        "id": 1297347
      },
      "writtenOn": "2024-11-04T17:52:38Z",
      "side": 1,
      "message": "Did a lambda since it was more or less the same thing.",
      "parentUuid": "63fa1f02_a64060f8",
      "range": {
        "startLine": 76,
        "startChar": 8,
        "endLine": 96,
        "endChar": 9
      },
      "revId": "8d275d4f9f018814b0949bb3d12653418aa33637",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "87730c5a_4b11f86f",
        "filename": "src/libANGLE/renderer/wgpu/ProgramExecutableWgpu.cpp",
        "patchSetId": 4
      },
      "lineNbr": 376,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2024-11-01T01:09:18Z",
      "side": 1,
      "message": "same for making this a loop if you can map shader type to visibility too.",
      "range": {
        "startLine": 376,
        "startChar": 42,
        "endLine": 376,
        "endChar": 69
      },
      "revId": "8d275d4f9f018814b0949bb3d12653418aa33637",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8912b450_25ca2a59",
        "filename": "src/libANGLE/renderer/wgpu/ProgramExecutableWgpu.cpp",
        "patchSetId": 4
      },
      "lineNbr": 376,
      "author": {
        "id": 1297347
      },
      "writtenOn": "2024-11-04T17:52:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "87730c5a_4b11f86f",
      "range": {
        "startLine": 376,
        "startChar": 42,
        "endLine": 376,
        "endChar": 69
      },
      "revId": "8d275d4f9f018814b0949bb3d12653418aa33637",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}