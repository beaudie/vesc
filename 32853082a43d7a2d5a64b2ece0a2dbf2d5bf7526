{
  "comments": [
    {
      "key": {
        "uuid": "549386d5_edd1824c",
        "filename": "src/libANGLE/renderer/vulkan/vk_format_map.json",
        "patchSetId": 9
      },
      "lineNbr": 433,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-07-24T04:58:48Z",
      "side": 1,
      "message": "Please add both R16_UNORM and R16_FLOAT as fallbacks. If R16_UNORM is supported, the decompression would be a little faster (and possibly more faithful). Same for the other four.",
      "range": {
        "startLine": 433,
        "startChar": 22,
        "endLine": 433,
        "endChar": 31
      },
      "revId": "32853082a43d7a2d5a64b2ece0a2dbf2d5bf7526",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "943ce092_3de25a83",
        "filename": "src/libANGLE/renderer/vulkan/vk_format_map.json",
        "patchSetId": 9
      },
      "lineNbr": 433,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2019-07-24T15:37:56Z",
      "side": 1,
      "message": "With the checks we are doing in HasNonRenderableTextureFormatSupport(), VK_FORMAT_R16_UNORM isn\u0027t required for Vulkan.   Are the bits we are checking in HasNonRenderableTextureFormatSupport() correct for what we\u0027re trying to do here?\n\nFor reference:\nhttps://vulkan.lunarg.com/doc/view/1.0.26.0/linux/vkspec.chunked/ch31s03.html",
      "parentUuid": "549386d5_edd1824c",
      "range": {
        "startLine": 433,
        "startChar": 22,
        "endLine": 433,
        "endChar": 31
      },
      "revId": "32853082a43d7a2d5a64b2ece0a2dbf2d5bf7526",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cd7280e4_4b651df7",
        "filename": "src/libANGLE/renderer/vulkan/vk_format_map.json",
        "patchSetId": 9
      },
      "lineNbr": 433,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-07-24T18:31:18Z",
      "side": 1,
      "message": "They should be correct (if not, that\u0027s a bug). We use that system to test for a (non-mandatory) format\u0027s features to see if it\u0027s usable, and if not fallback to another less ideal one.",
      "parentUuid": "943ce092_3de25a83",
      "range": {
        "startLine": 433,
        "startChar": 22,
        "endLine": 433,
        "endChar": 31
      },
      "revId": "32853082a43d7a2d5a64b2ece0a2dbf2d5bf7526",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4c18e452_6d4cabc3",
        "filename": "src/libANGLE/renderer/vulkan/vk_format_map.json",
        "patchSetId": 9
      },
      "lineNbr": 433,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2019-07-24T18:39:49Z",
      "side": 1,
      "message": "I\u0027m going to skip VK_FORMAT_R16_UNORM for now then, since nvidia doesn\u0027t support it so I don\u0027t have anywhere to test it.\n\nIf that\u0027s desirable from a performance standpoint, we can open a bug to implement it later.",
      "parentUuid": "cd7280e4_4b651df7",
      "range": {
        "startLine": 433,
        "startChar": 22,
        "endLine": 433,
        "endChar": 31
      },
      "revId": "32853082a43d7a2d5a64b2ece0a2dbf2d5bf7526",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bb44db2a_da0b2c72",
        "filename": "src/libANGLE/renderer/vulkan/vk_format_map.json",
        "patchSetId": 9
      },
      "lineNbr": 433,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-07-24T18:51:39Z",
      "side": 1,
      "message": "Is that really the case? GPU info shows that basically only some old Qualcomm devices don\u0027t support R16_UNORM:\n\n  https://vulkan.gpuinfo.org/listreports.php?optimalformat\u003dR16_UNORM\u0026option\u003dnot\n\nand the format is pretty much supported everywhere else:\n\n  https://vulkan.gpuinfo.org/listreports.php?optimalformat\u003dR16_UNORM\n\nMy vulkaninfo (nvidia 430.26, linux) shows the format supported too.\n\n---\n\nI\u0027m not blocking you from merging this, I\u0027m just curious to know what was really the issue with R16_UNORM",
      "parentUuid": "4c18e452_6d4cabc3",
      "range": {
        "startLine": 433,
        "startChar": 22,
        "endLine": 433,
        "endChar": 31
      },
      "revId": "32853082a43d7a2d5a64b2ece0a2dbf2d5bf7526",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2860ea4d_b35dbeaa",
        "filename": "src/libANGLE/renderer/vulkan/vk_format_map.json",
        "patchSetId": 9
      },
      "lineNbr": 433,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2019-07-24T19:08:58Z",
      "side": 1,
      "message": "My understanding is that there\u0027s a difference between a format being supported and a driver having the necessary bits enabled for those formats.   Unfortunately, gpuinfo just indicates that the format is supported (which we expect), but not any details about what those formats support.\n\nI tried using R16_UNORM/SNORM initially for these, since as you point out it should be the most straightforward to translate.   However, linux wasn\u0027t able to find a format that was supported, since VK_FORMAT_R16_UNORM/SNORM didn\u0027t have VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT enabled.   That\u0027s why I eventually moved to R16_FLOAT, since that format must be supported by vulkan drivers and have VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT enabled.   We are only able to translate to formats that have VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT | VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT enabled, because that\u0027s what HasNonRenderableTextureFormatSupport() is enforcing.",
      "parentUuid": "bb44db2a_da0b2c72",
      "range": {
        "startLine": 433,
        "startChar": 22,
        "endLine": 433,
        "endChar": 31
      },
      "revId": "32853082a43d7a2d5a64b2ece0a2dbf2d5bf7526",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f3a2e4e4_7706a7f5",
        "filename": "src/libANGLE/renderer/vulkan/vk_format_map.json",
        "patchSetId": 9
      },
      "lineNbr": 433,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-07-24T19:19:12Z",
      "side": 1,
      "message": "Ok, if it didn\u0027t have on older drivers, it looks like it has on the latest (or maybe Quadro has restrictions):\n\nFORMAT_R16_UNORM:\n        linearTiling   FormatFeatureFlags:\n                VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT\n                VK_FORMAT_FEATURE_BLIT_SRC_BIT\n                VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT\n                VK_FORMAT_FEATURE_TRANSFER_SRC_BIT_KHR\n                VK_FORMAT_FEATURE_TRANSFER_DST_BIT_KHR\n\n        optimalTiling  FormatFeatureFlags:\n                VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT\n                VK_FORMAT_FEATURE_STORAGE_IMAGE_BIT\n                VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT\n                VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT\n                VK_FORMAT_FEATURE_BLIT_SRC_BIT\n                VK_FORMAT_FEATURE_BLIT_DST_BIT\n                VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT\n                VK_FORMAT_FEATURE_TRANSFER_SRC_BIT_KHR\n                VK_FORMAT_FEATURE_TRANSFER_DST_BIT_KHR\n\n        bufferFeatures FormatFeatureFlags:\n                VK_FORMAT_FEATURE_UNIFORM_TEXEL_BUFFER_BIT\n                VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_BIT\n                VK_FORMAT_FEATURE_VERTEX_BUFFER_BIT\n\nAnyway, sure you can go ahead with merging this. Adding support is just a simple matter of replacing this line with `\"image\": [\"R16_UNORM\", \"R16_FLOAT\"]` though, since everything else is already in place.",
      "parentUuid": "2860ea4d_b35dbeaa",
      "range": {
        "startLine": 433,
        "startChar": 22,
        "endLine": 433,
        "endChar": 31
      },
      "revId": "32853082a43d7a2d5a64b2ece0a2dbf2d5bf7526",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c2cd78ec_18240202",
        "filename": "src/libANGLE/renderer/vulkan/vk_format_map.json",
        "patchSetId": 9
      },
      "lineNbr": 433,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2019-07-24T22:40:20Z",
      "side": 1,
      "message": "Ok, so looking through the patchset history I was able to see where I was getting stuck on this before.   It\u0027s actually Android that doesn\u0027t like R16_UNORM/SNORM.   I can see this when I remove R16_FLOAT and run DepthStencilTest.DepthOnlyEmulatedWithPacked/ES2_Vulkan which forces using the fallback format.   However, having the list of both R16_UNORM and R16_FLOAT works, I\u0027m giving this a shot on CQ.\n\nAdmittedly, even with as much playing around as I\u0027ve done with this, I don\u0027t know if there\u0027s a way to tell which format is being used or tested, beyond that at least one of the fallbacks is being used, so I don\u0027t know for sure if R16_UNORM is actually being used/tested or if we are always going to R16_FLOAT.   Maybe that doesn\u0027t matter too much as long as it works though.",
      "parentUuid": "f3a2e4e4_7706a7f5",
      "range": {
        "startLine": 433,
        "startChar": 22,
        "endLine": 433,
        "endChar": 31
      },
      "revId": "32853082a43d7a2d5a64b2ece0a2dbf2d5bf7526",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a7c66fdd_7749db70",
        "filename": "src/libANGLE/renderer/vulkan/vk_format_map.json",
        "patchSetId": 9
      },
      "lineNbr": 433,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-07-25T15:34:44Z",
      "side": 1,
      "message": "I thought Android had native support for ETC, so this change was only going to be for desktop?\n\nWith the list there, I wouldn\u0027t worry too much about which is selected. The fallback code should be doing its job correctly.\n\nIf you *really* want to be sure, you can think of a whitebox test that independently queries the format features and verifies that the selected fallback has the necessary features and the fallbacks that are rejected don\u0027t.",
      "parentUuid": "c2cd78ec_18240202",
      "range": {
        "startLine": 433,
        "startChar": 22,
        "endLine": 433,
        "endChar": 31
      },
      "revId": "32853082a43d7a2d5a64b2ece0a2dbf2d5bf7526",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef853e74_cd43c9a5",
        "filename": "src/libANGLE/renderer/vulkan/vk_format_map.json",
        "patchSetId": 9
      },
      "lineNbr": 433,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2019-07-25T16:28:05Z",
      "side": 1,
      "message": "I\u0027m cool with it if you are.\n\nI bring up Android, because there is are end2end tests that specifically force using a fallback format to make sure they work (e.g., DepthStencilTest setting \"force_fallback_format\" to true).   That was causing me issues on Android (I was mistaken when saying linux earlier) when trying to use R16_UNORM/SNORM, since there wasn\u0027t another fallback for Android to use until I added support for R16_FLOAT.\n\nIt sounds like the goal of the list is to allow each platform to find the format they like best and test with that, not to ensure that every format that could be supported by a platform is verified with deqp/end2end.   If we find some holes in the format support, we can add additional tests/formats in the future.\n\nThanks for bearing with me on this one.",
      "parentUuid": "a7c66fdd_7749db70",
      "range": {
        "startLine": 433,
        "startChar": 22,
        "endLine": 433,
        "endChar": 31
      },
      "revId": "32853082a43d7a2d5a64b2ece0a2dbf2d5bf7526",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c5ac85ae_b1b77e21",
        "filename": "src/libANGLE/renderer/vulkan/vk_format_map.json",
        "patchSetId": 9
      },
      "lineNbr": 433,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-07-25T17:12:16Z",
      "side": 1,
      "message": "Ok, it\u0027s all clear now :D\n\nMy +2 still stands, so submit at will!",
      "parentUuid": "ef853e74_cd43c9a5",
      "range": {
        "startLine": 433,
        "startChar": 22,
        "endLine": 433,
        "endChar": 31
      },
      "revId": "32853082a43d7a2d5a64b2ece0a2dbf2d5bf7526",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}