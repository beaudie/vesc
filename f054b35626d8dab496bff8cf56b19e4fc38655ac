{
  "comments": [
    {
      "key": {
        "uuid": "1e409d48_408f55b9",
        "filename": "util/OSWindow.h",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-03-11T20:35:54Z",
      "side": 1,
      "message": "instead of making this a virtual method, can you downcast to Win32Window in WGLWindow.cpp? It\u0027s fine to include the Win32Window header.",
      "range": {
        "startLine": 60,
        "startChar": 0,
        "endLine": 60,
        "endChar": 41
      },
      "revId": "f054b35626d8dab496bff8cf56b19e4fc38655ac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "34862f92_d717d653",
        "filename": "util/OSWindow.h",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-03-11T22:37:32Z",
      "side": 1,
      "message": "Done\nThough, I thought it would be beneficial to have this in OSWindow.\nCurrently, we are limited to testing with EGL configs which match the default window pixel format, at least on Android this is RGB8. If the tests were to control the pixel format of the window, this would allow testing with other EGL configs as well, like RGB565.",
      "parentUuid": "1e409d48_408f55b9",
      "range": {
        "startLine": 60,
        "startChar": 0,
        "endLine": 60,
        "endChar": 41
      },
      "revId": "f054b35626d8dab496bff8cf56b19e4fc38655ac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b5383b16_48b4f86d",
        "filename": "util/OSWindow.h",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-03-11T23:16:59Z",
      "side": 1,
      "message": "OK. Maybe you can keep it. I\u0027m just not sure if \"pixel format\" is a cross-platform term. i.e. it is probably called something different on Linux or MacOS.",
      "parentUuid": "34862f92_d717d653",
      "range": {
        "startLine": 60,
        "startChar": 0,
        "endLine": 60,
        "endChar": 41
      },
      "revId": "f054b35626d8dab496bff8cf56b19e4fc38655ac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "90052232_8c848671",
        "filename": "util/OSWindow.h",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-03-12T17:30:52Z",
      "side": 1,
      "message": "Looks like X11 is the only odd one.\nIt calls \"pixel format\" a \"Visual\" and allows to specify it only at window creation time.\nAndroid has\nint32_t ANativeWindow_setBuffersGeometry(\n  ANativeWindow *window,\n  int32_t width,\n  int32_t height,\n  int32_t format\n)\n\"format\" being AHARDWAREBUFFER_FORMAT_*\n\nI don\u0027t know Mac, but looks like this is NSOpenGLPixelFormat or AGLPixelFormat.",
      "parentUuid": "b5383b16_48b4f86d",
      "range": {
        "startLine": 60,
        "startChar": 0,
        "endLine": 60,
        "endChar": 41
      },
      "revId": "f054b35626d8dab496bff8cf56b19e4fc38655ac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}