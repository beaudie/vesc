{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "1e386ffc_c719d18b",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 12
      },
      "lineNbr": 66,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-07-25T18:12:31Z",
      "side": 1,
      "message": "GL_FRAMEBUFFER_BARRIER_BIT is not a write-after-access bit, it\u0027s strictly for fbo-access-after-write.\n\nOnly GL_SHADER_IMAGE_ACCESS_BARRIER_BIT and GL_SHADER_STORAGE_BARRIER_BIT are for write-after-access synchronization.",
      "range": {
        "startLine": 66,
        "startChar": 41,
        "endLine": 66,
        "endChar": 67
      },
      "revId": "ccda7694181279c1386ada5322d296af50e59c58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cffd8c85_402872d4",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 12
      },
      "lineNbr": 66,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2024-07-25T19:28:35Z",
      "side": 1,
      "message": "Maybe the kWriteAfterAccessImageMemoryBarriers is incorrect. But we need to call imageWrite in ContextVk.cpp line 7595 if you call glMemoryBarrier(GL_FRAMEBUFFER_BARRIER_BIT) between imageStore and FBO read.",
      "parentUuid": "1e386ffc_c719d18b",
      "range": {
        "startLine": 66,
        "startChar": 41,
        "endLine": 66,
        "endChar": 67
      },
      "revId": "ccda7694181279c1386ada5322d296af50e59c58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2c51e26e_df03acfe",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 12
      },
      "lineNbr": 66,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-07-25T19:37:41Z",
      "side": 1,
      "message": "That sounds strange, why `imageWrite` before FBO _read_? And what about other image usages like image store followed by texture upload? Also `ContextVk::updateActiveImages` doesn\u0027t get called after the barrier and before the FBO read.\n\nIt sounds like instead we should instead trigger some dirty bit on the image? Just so that the next FBO read, texture upload, etc, would all syncState and do whatever is necessary.",
      "parentUuid": "cffd8c85_402872d4",
      "range": {
        "startLine": 66,
        "startChar": 41,
        "endLine": 66,
        "endChar": 67
      },
      "revId": "ccda7694181279c1386ada5322d296af50e59c58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2928098d_85598ffd",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 12
      },
      "lineNbr": 66,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2024-07-25T22:24:35Z",
      "side": 1,
      "message": "See https://chromium-review.googlesource.com/c/angle/angle/+/5434967\nWhat happens is that the `glMemoryBarrier(GL_FRAMEBUFFER_BARRIER_BIT)` call gets skipped at ContextVk.cpp line 6747 without this.",
      "parentUuid": "2c51e26e_df03acfe",
      "range": {
        "startLine": 66,
        "startChar": 41,
        "endLine": 66,
        "endChar": 67
      },
      "revId": "ccda7694181279c1386ada5322d296af50e59c58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "53fb07be_45f08227",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 12
      },
      "lineNbr": 66,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-07-26T00:29:00Z",
      "side": 1,
      "message": "Ah ok, well that\u0027s a test bug. Between the glClear/glInvalidate and the second dispatch there\u0027s a missing `glMemoryBarrier(GL_SHADER_IMAGE_ACCESS_BARRIER_BIT)` (because it\u0027s write-after-access).",
      "parentUuid": "2928098d_85598ffd",
      "range": {
        "startLine": 66,
        "startChar": 41,
        "endLine": 66,
        "endChar": 67
      },
      "revId": "ccda7694181279c1386ada5322d296af50e59c58",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}