{
  "comments": [
    {
      "key": {
        "uuid": "efa99beb_8a2e2344",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 15,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-09-13T08:26:21Z",
      "side": 1,
      "message": "Is it possible to add a meaningful performance counter for this? Then we can add a test that both verifies this and prevents regressions.",
      "range": {
        "startLine": 13,
        "startChar": 13,
        "endLine": 15,
        "endChar": 15
      },
      "revId": "d2b47075962461252067c8ad68fd8262c80e94dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "51e0195f_7170be81",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-09-12T04:31:34Z",
      "side": 1,
      "message": "PTAL\n\nThis takes the previous CL a bit further by tying descriptor pool allocation to descriptor set layouts, to ensure there is always a 1:1 correlation.   This works fine today, since the descriptor set layout cache survives for the lifetime of the context.\n\nIt doesn\u0027t handle recycling of descriptor set layout handles if we ever end up freeing them in the future, though, since the pools currently don\u0027t know that the layout handle was freed and reallocated.   That\u0027s probably not something we\u0027ll need to handle, but it shouldn\u0027t be too terrible to build that in if we need to later.",
      "revId": "d2b47075962461252067c8ad68fd8262c80e94dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "600226b2_6d1b06be",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1263724
      },
      "writtenOn": "2020-09-14T15:06:39Z",
      "side": 1,
      "message": "This might be a good topic for a ANGLE tech talk.",
      "revId": "d2b47075962461252067c8ad68fd8262c80e94dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b6893e0c_abdae4fc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-09-14T16:11:37Z",
      "side": 1,
      "message": "Correct me if I am wrong. From reading VK spec is that the pool itself seems has nothing about layout/binding baked in. It only has type information in it. So this tightly coupled thing is our implementation choice? Also instead of doing accounting ourselves, why not rely on Alloc failure to detect we run out of pool space? I am also seeing there is vkFreeDescriptorSets API if pool is created with a flag and we are not using it as well. Is it because we are not tracking the descriptor set individually? I am wondering if the right direction should be have global pool and allocate from that instead. On top of  that if DS in the cache has not been used for very long time, we return them back to  pool.",
      "revId": "d2b47075962461252067c8ad68fd8262c80e94dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cf38d212_e0a7962e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-09-14T16:48:52Z",
      "side": 1,
      "message": "I think the design of immutable samplers as it stands had some issues that I brought up with Courtney. I don\u0027t fully recall my idea - can we treat immutable samplers separately somehow? We\u0027re doing a lot of special work to support them in a general case. I\u0027m concerned about over-generalization.",
      "revId": "d2b47075962461252067c8ad68fd8262c80e94dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ca52f948_2ef2756c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-09-14T16:50:34Z",
      "side": 1,
      "message": "Actually seem some of the prior comments (\"maybe this is a good tech talk subject\", \"the right direction should be a global pool\") I think we should move this design discussion to a Google doc, get a consensus, then do the review.",
      "parentUuid": "cf38d212_e0a7962e",
      "revId": "d2b47075962461252067c8ad68fd8262c80e94dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fbc6a8ed_3a991816",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.h",
        "patchSetId": 2
      },
      "lineNbr": 957,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-09-13T08:26:21Z",
      "side": 1,
      "message": "Do you happen to know if this affects CPU performance in any way?",
      "revId": "d2b47075962461252067c8ad68fd8262c80e94dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}