{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "a12d19da_dce0c0c3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2023-09-11T19:31:36Z",
      "side": 1,
      "message": "PTAL - bugfix change that was split from -\u003e https://chromium-review.googlesource.com/c/angle/angle/+/4851649",
      "revId": "d5ad29bc6e58f6c1ef9dc1f6b99e434f5baa579c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "45e9c21b_526fd34b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2023-09-11T21:25:47Z",
      "side": 1,
      "message": "LGTM. Thanks for the fix.",
      "revId": "d5ad29bc6e58f6c1ef9dc1f6b99e434f5baa579c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "616ae684_642485e7",
        "filename": "src/libANGLE/renderer/vulkan/CommandProcessor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1252,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-09-11T19:41:11Z",
      "side": 1,
      "message": "How about setting it to VK_NOT_READY here, and at the bottom of this scope do something like:\n\n```\nif (*result !\u003d VK_TIMEOUT)\n{\n    *result \u003d hasResourceUseFinished(use) ? VK_SUCCESS : VK_NOT_READY;\n}\n```\n\nSo that check is really done only once.\n\n---\n\nIt could maybe even be simpler? Just don\u0027t set it anywhere in this loop, then do something like this at the end:\n\n```\n*result \u003d hasResourceUseFinished(use) ? VK_SUCCESS : timeout \u003d\u003d 0 ? VK_NOT_READY : VK_TIMEOUT;\n```",
      "revId": "d5ad29bc6e58f6c1ef9dc1f6b99e434f5baa579c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e583aac7_66de13cf",
        "filename": "src/libANGLE/renderer/vulkan/CommandProcessor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1252,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2023-09-11T19:54:51Z",
      "side": 1,
      "message": "\u003e How about setting it to VK_NOT_READY here, and at the bottom of this scope do something like\n\u003e ...\n\u003e It could maybe even be simpler? Just don\u0027t set it anywhere in this loop\n\nwith all the `ANGLE_TRY` inside the scope im not sure i have thought of all code paths, thus went with conservative checks (the serial check should just be usually 1 `\u003c\u003d` comparison, right?)",
      "parentUuid": "616ae684_642485e7",
      "revId": "d5ad29bc6e58f6c1ef9dc1f6b99e434f5baa579c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e3264b7a_f807d879",
        "filename": "src/libANGLE/renderer/vulkan/CommandProcessor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1252,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-09-11T20:04:07Z",
      "side": 1,
      "message": "Ack, you could probably set it to VK_ERROR_DEVICE_LOST once at the top.\n\n\u003e the serial check should just be usually 1 \u003c\u003d comparison, right?\n\nProbably, it just reads more complicated this way (to me, at least)",
      "parentUuid": "e583aac7_66de13cf",
      "revId": "d5ad29bc6e58f6c1ef9dc1f6b99e434f5baa579c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "490e7736_4dbefbba",
        "filename": "src/libANGLE/renderer/vulkan/CommandProcessor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1252,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2023-09-11T20:14:41Z",
      "side": 1,
      "message": "1 usecase i can think of if we go with setting `result` at top and then checking `hasResourceUseFinished` at the end of the scope - what happens if `use` was done before entering while-loop but an error is generated during `checkCompletedCommandsLocked` on line 1276 for some unrelated command batch?\n\nThe client wait thread will get error status even though the command batch relevant to the client wait was completed successfully",
      "parentUuid": "e3264b7a_f807d879",
      "revId": "d5ad29bc6e58f6c1ef9dc1f6b99e434f5baa579c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cc3484e9_d6df7aec",
        "filename": "src/libANGLE/renderer/vulkan/CommandProcessor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1252,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2023-09-11T21:25:47Z",
      "side": 1,
      "message": "Or just move `bool finished` to here:\nbool finished \u003d hasResourceUseFinished(use);\nwhile(... \u0026\u0026 !finished)\n{\n    checkOneCommandBatch\n    if(finished) break;\n    else\n    {\n    ...\n    }\n}\nif(finished)\n{\n     *result \u003d VK_SUCCESS:\n}",
      "parentUuid": "490e7736_4dbefbba",
      "revId": "d5ad29bc6e58f6c1ef9dc1f6b99e434f5baa579c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d4fe5ea9_4cc1179d",
        "filename": "src/libANGLE/renderer/vulkan/CommandProcessor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1252,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2023-09-11T21:44:23Z",
      "side": 1,
      "message": "\u003e bool finished \u003d hasResourceUseFinished(use);\n\u003e checkOneCommandBatch\n\u003e if(finished) break;\n\nim confused, `checkOneCommandBatch` overwrites `finished` when a command batch is done, it has nothing to do with resouce use being done. why would we want to break out of the while loop here?",
      "parentUuid": "cc3484e9_d6df7aec",
      "revId": "d5ad29bc6e58f6c1ef9dc1f6b99e434f5baa579c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "72b4690a_881a34e9",
        "filename": "src/libANGLE/renderer/vulkan/CommandProcessor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1252,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2023-09-11T22:11:00Z",
      "side": 1,
      "message": "You are right, I misinterpret finished from checkOneCommandBatch(). Never mind then. Your diff looks good to me.",
      "parentUuid": "d4fe5ea9_4cc1179d",
      "revId": "d5ad29bc6e58f6c1ef9dc1f6b99e434f5baa579c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}