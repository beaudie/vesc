{
  "comments": [
    {
      "key": {
        "uuid": "f6a605f3_935a4a23",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 18,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-09-22T02:16:58Z",
      "side": 1,
      "message": "Not sure if we should care about it now, but there was some intention to disable GL validation for speed up, but it was blocked on the validation layer having side effects. This piles on that.\n\nWould it be easy to support such a use case? Like where it used to link before this change, see if link was already done or not, and attempt it if not done?",
      "range": {
        "startLine": 18,
        "startChar": 51,
        "endLine": 18,
        "endChar": 69
      },
      "revId": "32c5e9ad7598a1c4be96d73eeb00e1d901daaa5c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "35429baf_0c90d53e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-09-22T00:23:07Z",
      "side": 1,
      "message": "PTAL",
      "revId": "32c5e9ad7598a1c4be96d73eeb00e1d901daaa5c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "57d11909_26f1831d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-09-22T16:59:09Z",
      "side": 1,
      "message": "LGTM per answer to Shabi\u0027s question.  Looks good in testing too.  Thanks!",
      "revId": "32c5e9ad7598a1c4be96d73eeb00e1d901daaa5c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "25aab2ac_25a5238d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-09-22T17:04:43Z",
      "side": 1,
      "message": "Definitely moving in the right direction, thanks for following up with this Tim.",
      "revId": "32c5e9ad7598a1c4be96d73eeb00e1d901daaa5c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba56882f_a91ba191",
        "filename": "src/libANGLE/ProgramPipeline.cpp",
        "patchSetId": 3
      },
      "lineNbr": 706,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-09-22T17:04:29Z",
      "side": 1,
      "message": "nit: you can replace this with just bool mDirtyProgramStages .. dirty bits are intended to be passed to the back-end, so mDirtyBits is a bit of an overloaded term here.\n\nAlso you should rename this to just ::link.",
      "range": {
        "startLine": 706,
        "startChar": 39,
        "endLine": 706,
        "endChar": 49
      },
      "revId": "32c5e9ad7598a1c4be96d73eeb00e1d901daaa5c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "542ac467_931743ee",
        "filename": "src/libANGLE/ProgramPipeline.cpp",
        "patchSetId": 3
      },
      "lineNbr": 706,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-09-23T22:10:35Z",
      "side": 1,
      "message": "I removed the dirty bit handling in ProgramPipeline, since they were all related to linking the PPO.",
      "parentUuid": "ba56882f_a91ba191",
      "range": {
        "startLine": 706,
        "startChar": 39,
        "endLine": 706,
        "endChar": 49
      },
      "revId": "32c5e9ad7598a1c4be96d73eeb00e1d901daaa5c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c27cd51a_2fe88d6e",
        "filename": "src/libANGLE/validationES.cpp",
        "patchSetId": 3
      },
      "lineNbr": 2988,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-09-22T02:16:58Z",
      "side": 1,
      "message": "What happens in this scenario?\n\n- Create pipeline that should fail link\n- Bind program\n- Draw\n- Unbind program\n- Draw\n\nThe second draw should fail with PPO link eror, right? But the first draw was the one that processed it and didn\u0027t report it.",
      "revId": "32c5e9ad7598a1c4be96d73eeb00e1d901daaa5c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2cfe86a5_250518c0",
        "filename": "src/libANGLE/validationES.cpp",
        "patchSetId": 3
      },
      "lineNbr": 2988,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-09-22T17:04:29Z",
      "side": 1,
      "message": "I would move this all to a getLinkedProgramExeuctable() call and hide the dirty bit handling. That\u0027s light on details, ping me if you want a clarification.",
      "parentUuid": "c27cd51a_2fe88d6e",
      "revId": "32c5e9ad7598a1c4be96d73eeb00e1d901daaa5c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "da64ea26_d975f741",
        "filename": "src/libANGLE/validationES.cpp",
        "patchSetId": 3
      },
      "lineNbr": 2988,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-09-23T22:10:35Z",
      "side": 1,
      "message": "Unfortunately, the ProgramExecutable doesn\u0027t have any way to get back to the PPO that it\u0027s in, so it can\u0027t kick off a link operation.   There isn\u0027t anymore dirty bit handling either with the new version.",
      "parentUuid": "2cfe86a5_250518c0",
      "revId": "32c5e9ad7598a1c4be96d73eeb00e1d901daaa5c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}