{
  "comments": [
    {
      "key": {
        "uuid": "36c95dfe_c03c8888",
        "filename": "src/compiler/translator/tree_ops/RewriteAtomicCounters.cpp",
        "patchSetId": 7
      },
      "lineNbr": 332,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-08-12T13:01:21Z",
      "side": 1,
      "message": "nit: unsigned int or uint32_t",
      "range": {
        "startLine": 332,
        "startChar": 17,
        "endLine": 332,
        "endChar": 25
      },
      "revId": "edc84abd9b13dccb595e3486b95dcb15d2e1943d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c177826_bd98f5a7",
        "filename": "src/compiler/translator/tree_ops/RewriteAtomicCounters.cpp",
        "patchSetId": 7
      },
      "lineNbr": 332,
      "author": {
        "id": 1117350
      },
      "writtenOn": "2019-08-13T23:33:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "36c95dfe_c03c8888",
      "range": {
        "startLine": 332,
        "startChar": 17,
        "endLine": 332,
        "endChar": 25
      },
      "revId": "edc84abd9b13dccb595e3486b95dcb15d2e1943d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fb7873b1_dc48b6b8",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1365,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-08-12T13:01:21Z",
      "side": 1,
      "message": "maybe setup should return uint32_t?",
      "range": {
        "startLine": 1365,
        "startChar": 12,
        "endLine": 1365,
        "endChar": 29
      },
      "revId": "edc84abd9b13dccb595e3486b95dcb15d2e1943d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5ed0473b_f22c83a7",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1365,
      "author": {
        "id": 1117350
      },
      "writtenOn": "2019-08-13T23:33:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fb7873b1_dc48b6b8",
      "range": {
        "startLine": 1365,
        "startChar": 12,
        "endLine": 1365,
        "endChar": 29
      },
      "revId": "edc84abd9b13dccb595e3486b95dcb15d2e1943d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2fad84d8_2a94a071",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 581,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2019-08-12T17:32:28Z",
      "side": 1,
      "message": "Should RenderTargetVk.h store these as uint32_t? size_t seems like overkill. This would remove a lot of the static_casts in the Vulkan backend.",
      "range": {
        "startLine": 581,
        "startChar": 81,
        "endLine": 581,
        "endChar": 94
      },
      "revId": "edc84abd9b13dccb595e3486b95dcb15d2e1943d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c6e91b62_e7fb40e9",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 581,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-08-12T17:34:29Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "2fad84d8_2a94a071",
      "range": {
        "startLine": 581,
        "startChar": 81,
        "endLine": 581,
        "endChar": 94
      },
      "revId": "edc84abd9b13dccb595e3486b95dcb15d2e1943d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "22edb9ad_e82af414",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 581,
      "author": {
        "id": 1117350
      },
      "writtenOn": "2019-08-13T23:33:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c6e91b62_e7fb40e9",
      "range": {
        "startLine": 581,
        "startChar": 81,
        "endLine": 581,
        "endChar": 94
      },
      "revId": "edc84abd9b13dccb595e3486b95dcb15d2e1943d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3fc8702b_f5500b97",
        "filename": "src/libANGLE/renderer/vulkan/RenderTargetVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 190,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2019-08-12T17:32:28Z",
      "side": 1,
      "message": "Should any of these have been using SafeMath in case the application set the base levels close to the wraparound point? (Not sure whether base levels factor in to these indices)",
      "revId": "edc84abd9b13dccb595e3486b95dcb15d2e1943d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ca4a4c94_a2069af7",
        "filename": "src/libANGLE/renderer/vulkan/RenderTargetVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 190,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-08-12T17:34:29Z",
      "side": 1,
      "message": "We don\u0027t have the base level implementation yet. But pretty sure base level is hard limited in the spec to 1000:\n\nan implementation may allow a texture image\narray of level 1 or greater to be created only if a mipmap complete set of image\narrays consistent with the requested array can be supported where the values of\nTEXTURE_BASE_LEVEL and TEXTURE_MAX_LEVEL are 0 and 1000 respectively",
      "parentUuid": "3fc8702b_f5500b97",
      "revId": "edc84abd9b13dccb595e3486b95dcb15d2e1943d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "90cabf07_fd72544f",
        "filename": "src/libANGLE/renderer/vulkan/RenderTargetVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 190,
      "author": {
        "id": 1117350
      },
      "writtenOn": "2019-08-13T23:33:15Z",
      "side": 1,
      "message": "If the max level is 1000, I think it should be clamped before we get here.",
      "parentUuid": "ca4a4c94_a2069af7",
      "revId": "edc84abd9b13dccb595e3486b95dcb15d2e1943d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}