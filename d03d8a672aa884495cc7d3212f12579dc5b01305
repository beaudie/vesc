{
  "comments": [
    {
      "key": {
        "uuid": "dfe6d875_bfb6e389",
        "filename": "src/libANGLE/VertexArray.cpp",
        "patchSetId": 80
      },
      "lineNbr": 18,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-02-15T14:55:53Z",
      "side": 1,
      "message": "don\u0027t use std::max like this - set it to maxAttribBindings then ASSERT in the function body if you want to make an assumption.",
      "range": {
        "startLine": 18,
        "startChar": 16,
        "endLine": 18,
        "endChar": 72
      },
      "revId": "d03d8a672aa884495cc7d3212f12579dc5b01305",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "27de3c80_a27d2ec5",
        "filename": "src/libANGLE/VertexArray.cpp",
        "patchSetId": 80
      },
      "lineNbr": 100,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-02-15T14:55:53Z",
      "side": 1,
      "message": "can you make a unit test for this method? You can add VertexArray_unittests.cpp to angle_unittest, that just verifies calling this method on a few values of dirty bit makes sense.",
      "range": {
        "startLine": 95,
        "startChar": 0,
        "endLine": 100,
        "endChar": 1
      },
      "revId": "d03d8a672aa884495cc7d3212f12579dc5b01305",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6d392b80_b3ed28f7",
        "filename": "src/libANGLE/VertexAttribute.cpp",
        "patchSetId": 80
      },
      "lineNbr": 54,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-02-15T14:55:53Z",
      "side": 1,
      "message": "nit: although technically correct and good for sharing code, I think this function would be faster to use initialization list syntax.",
      "range": {
        "startLine": 54,
        "startChar": 4,
        "endLine": 54,
        "endChar": 30
      },
      "revId": "d03d8a672aa884495cc7d3212f12579dc5b01305",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5976c037_fab093f8",
        "filename": "src/libANGLE/VertexAttribute.h",
        "patchSetId": 80
      },
      "lineNbr": 24,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-02-15T14:55:53Z",
      "side": 1,
      "message": "nit: explicit",
      "range": {
        "startLine": 24,
        "startChar": 4,
        "endLine": 24,
        "endChar": 17
      },
      "revId": "d03d8a672aa884495cc7d3212f12579dc5b01305",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02a7217a_57c8f2b7",
        "filename": "src/libANGLE/VertexAttribute.h",
        "patchSetId": 80
      },
      "lineNbr": 40,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-02-15T14:55:53Z",
      "side": 1,
      "message": "nit: explicit",
      "range": {
        "startLine": 40,
        "startChar": 4,
        "endLine": 40,
        "endChar": 19
      },
      "revId": "d03d8a672aa884495cc7d3212f12579dc5b01305",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dcee471a_35b4a326",
        "filename": "src/libANGLE/angletypes.h",
        "patchSetId": 80
      },
      "lineNbr": 26,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-02-15T14:55:53Z",
      "side": 1,
      "message": "nit: can you remove this from this header - the struct isn\u0027t referenced in this file.\n\nI\u0027ve put up https://chromium-review.googlesource.com/c/442651/ to correct the other types.",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 26,
        "endChar": 21
      },
      "revId": "d03d8a672aa884495cc7d3212f12579dc5b01305",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "29191c2b_4cebd0c8",
        "filename": "src/libANGLE/renderer/d3d/VertexBuffer.h",
        "patchSetId": 80
      },
      "lineNbr": 171,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-02-15T14:55:53Z",
      "side": 1,
      "message": "nit: I liked this warning initially, but it seems redundant to place it seven times in the same header. maybe restrict yourself to one or two times per file.",
      "range": {
        "startLine": 170,
        "startChar": 8,
        "endLine": 171,
        "endChar": 20
      },
      "revId": "d03d8a672aa884495cc7d3212f12579dc5b01305",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "69116c6e_fa17407d",
        "filename": "src/libANGLE/renderer/gl/ContextGL.cpp",
        "patchSetId": 80
      },
      "lineNbr": 86,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-02-15T14:55:53Z",
      "side": 1,
      "message": "I don\u0027t think you need to pass mRenderer-\u003egetNativeCaps() to VertexArrayGL - the maxVertexAttribs and maxVertexBindings are available from VertexArrayState::mVertexAttributes::size() and VertexArrayState::mVertexBindings::size(). In any case, it is not good to use the renderer caps.",
      "range": {
        "startLine": 86,
        "startChar": 28,
        "endLine": 86,
        "endChar": 45
      },
      "revId": "d03d8a672aa884495cc7d3212f12579dc5b01305",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "32a7b664_98322a71",
        "filename": "src/libANGLE/renderer/gl/VertexArrayGL.cpp",
        "patchSetId": 80
      },
      "lineNbr": 62,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-02-15T14:55:53Z",
      "side": 1,
      "message": "I suggest you initialize maxVertexAttribBindings so it\u0027s never zero, and remove this conditional expression.",
      "range": {
        "startLine": 60,
        "startChar": 0,
        "endLine": 62,
        "endChar": 54
      },
      "revId": "d03d8a672aa884495cc7d3212f12579dc5b01305",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a9aaedb3_0cc5d45b",
        "filename": "src/libANGLE/renderer/gl/VertexArrayGL.cpp",
        "patchSetId": 80
      },
      "lineNbr": 512,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-02-15T14:55:53Z",
      "side": 1,
      "message": "nit: why not making a helper function in VertexAttribState that\u0027s like, const VertexBinding \u0026getBindingFromAttribIndex(attribIndex). Note: only use it when modifying a single vertex attrib. When modifying all the elements in the array, it will be faster to use the arrays directly as you do in this patch currently.",
      "range": {
        "startLine": 512,
        "startChar": 36,
        "endLine": 512,
        "endChar": 74
      },
      "revId": "d03d8a672aa884495cc7d3212f12579dc5b01305",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "725a2157_0bd70bbf",
        "filename": "src/libANGLE/renderer/gl/VertexArrayGL.cpp",
        "patchSetId": 80
      },
      "lineNbr": 531,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-02-15T14:55:53Z",
      "side": 1,
      "message": "nit: we don\u0027t need to compute this for the element array buffer. I suggest you put a continue; in the first \"if\" and then move this below that block.",
      "range": {
        "startLine": 531,
        "startChar": 8,
        "endLine": 531,
        "endChar": 61
      },
      "revId": "d03d8a672aa884495cc7d3212f12579dc5b01305",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}