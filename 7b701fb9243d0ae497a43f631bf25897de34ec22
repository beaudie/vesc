{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "562da71e_f074df01",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1491687
      },
      "writtenOn": "2021-09-09T14:07:31Z",
      "side": 1,
      "message": "In order to skip tests that use sRGB surfaces on platforms where EGL_KHR_gl_colorspace is not available, ANGLEPerfTest needs to check for EGL extensions before a surface is initialized.\n\nFor this I needed to split calling the full EGL init done in initializeGL into steps by exposing functions from EGLWindow to GLWindowBase. Also the EGLDisplay needed to be exposed in the same manner. I added a addExtensionPrerequisiteEGL function where EGL display and non display extensions can be added to the prerequisites in TracePerfTest.",
      "revId": "7b701fb9243d0ae497a43f631bf25897de34ec22",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f5524cbb_3e57389a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1491687
      },
      "writtenOn": "2021-09-09T14:11:50Z",
      "side": 1,
      "message": "This will need some rework to mind WGL.",
      "revId": "7b701fb9243d0ae497a43f631bf25897de34ec22",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aeab2445_1c1e24a6",
        "filename": "util/EGLWindow.h",
        "patchSetId": 1
      },
      "lineNbr": 97,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-09-09T14:12:29Z",
      "side": 1,
      "message": "looks like these changes made it in by accident - can you fix and retry?",
      "range": {
        "startLine": 97,
        "startChar": 12,
        "endLine": 97,
        "endChar": 17
      },
      "revId": "7b701fb9243d0ae497a43f631bf25897de34ec22",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0a81e188_be4c3b2e",
        "filename": "util/EGLWindow.h",
        "patchSetId": 1
      },
      "lineNbr": 97,
      "author": {
        "id": 1491687
      },
      "writtenOn": "2021-09-09T14:19:42Z",
      "side": 1,
      "message": "I actually indeed tried to expose initializeDisplay, initializeSurface and initializeContext without noticing that it won\u0027t work for the WGL backend.\n\nThis will need to be implemented differently, probably only for EGLWindow.",
      "parentUuid": "aeab2445_1c1e24a6",
      "range": {
        "startLine": 97,
        "startChar": 12,
        "endLine": 97,
        "endChar": 17
      },
      "revId": "7b701fb9243d0ae497a43f631bf25897de34ec22",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0cb6b2b9_823d7cda",
        "filename": "util/EGLWindow.h",
        "patchSetId": 1
      },
      "lineNbr": 97,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-09-09T14:22:24Z",
      "side": 1,
      "message": "WGL supports colorspace selection:\n\nhttps://www.khronos.org/registry/OpenGL/extensions/EXT/WGL_EXT_colorspace.txt\n\nWhen translating these calls to WGL we can use that. Then the question is how do we best check support at runtime? One way is to just add a new function like \u0027supportsSurfaceColorspaces\u0027 or something like that specific to this feature. Or we could add a general \u0027supportsEGLFunctionality\u0027 or something to verify ext lists.",
      "parentUuid": "0a81e188_be4c3b2e",
      "range": {
        "startLine": 97,
        "startChar": 12,
        "endLine": 97,
        "endChar": 17
      },
      "revId": "7b701fb9243d0ae497a43f631bf25897de34ec22",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}