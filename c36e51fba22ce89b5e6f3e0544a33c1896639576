{
  "comments": [
    {
      "key": {
        "uuid": "8752fce7_1a6a685b",
        "filename": "src/libANGLE/renderer/d3d/d3d11/Renderer11.cpp",
        "patchSetId": 8
      },
      "lineNbr": 2596,
      "author": {
        "id": 1130144
      },
      "writtenOn": "2018-02-11T01:06:52Z",
      "side": 1,
      "message": "In cases where the destination texture format is 16bit, a downsampling shader is unnecessary.",
      "range": {
        "startLine": 2593,
        "startChar": 0,
        "endLine": 2596,
        "endChar": 2
      },
      "revId": "c36e51fba22ce89b5e6f3e0544a33c1896639576",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fd10962f_ad6d036d",
        "filename": "src/libANGLE/renderer/d3d/d3d11/Renderer11.cpp",
        "patchSetId": 8
      },
      "lineNbr": 2596,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-02-12T19:06:00Z",
      "side": 1,
      "message": "I didn\u0027t want to over-complicate the fast-path logic.  The new shaders will have very similar cost to the old ones (memory bound) and are still only used for the CopyTextureCHROMIUM calls so I think it\u0027s fine to use them.",
      "parentUuid": "8752fce7_1a6a685b",
      "range": {
        "startLine": 2593,
        "startChar": 0,
        "endLine": 2596,
        "endChar": 2
      },
      "revId": "c36e51fba22ce89b5e6f3e0544a33c1896639576",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c2cdfb9_c1153120",
        "filename": "src/libANGLE/renderer/d3d/d3d11/Renderer11.cpp",
        "patchSetId": 8
      },
      "lineNbr": 2596,
      "author": {
        "id": 1130144
      },
      "writtenOn": "2018-02-13T02:39:24Z",
      "side": 1,
      "message": "Very well.",
      "parentUuid": "fd10962f_ad6d036d",
      "range": {
        "startLine": 2593,
        "startChar": 0,
        "endLine": 2596,
        "endChar": 2
      },
      "revId": "c36e51fba22ce89b5e6f3e0544a33c1896639576",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3b672c8a_6b191f51",
        "filename": "src/libANGLE/renderer/d3d/d3d11/shaders/Passthrough2D11.hlsl",
        "patchSetId": 8
      },
      "lineNbr": 132,
      "author": {
        "id": 1130144
      },
      "writtenOn": "2018-02-11T00:34:55Z",
      "side": 1,
      "message": "Even going back as far as FL 9_3 565 textures are required to support \"blendable render target\" and \"render target\" for all hardware. Hence, this shader should not be necessary.",
      "range": {
        "startLine": 129,
        "startChar": 0,
        "endLine": 132,
        "endChar": 1
      },
      "revId": "c36e51fba22ce89b5e6f3e0544a33c1896639576",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9993885d_406e114b",
        "filename": "src/libANGLE/renderer/d3d/d3d11/shaders/Passthrough2D11.hlsl",
        "patchSetId": 8
      },
      "lineNbr": 132,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-02-12T19:06:00Z",
      "side": 1,
      "message": "There are some workarounds we have that disable the rgb565 format and use rgba8 instead.",
      "parentUuid": "3b672c8a_6b191f51",
      "range": {
        "startLine": 129,
        "startChar": 0,
        "endLine": 132,
        "endChar": 1
      },
      "revId": "c36e51fba22ce89b5e6f3e0544a33c1896639576",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "60ac46bf_67a7e6e3",
        "filename": "src/libANGLE/renderer/d3d/d3d11/shaders/Passthrough2D11.hlsl",
        "patchSetId": 8
      },
      "lineNbr": 132,
      "author": {
        "id": 1130144
      },
      "writtenOn": "2018-02-13T02:39:24Z",
      "side": 1,
      "message": "OK, but I see that you removed the 565 shaders from your latest patch. Were the workarounds not necessary or am I missing something?",
      "parentUuid": "9993885d_406e114b",
      "range": {
        "startLine": 129,
        "startChar": 0,
        "endLine": 132,
        "endChar": 1
      },
      "revId": "c36e51fba22ce89b5e6f3e0544a33c1896639576",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5955a718_e9753835",
        "filename": "src/libANGLE/renderer/d3d/d3d11/shaders/Passthrough2D11.hlsl",
        "patchSetId": 8
      },
      "lineNbr": 136,
      "author": {
        "id": 1130144
      },
      "writtenOn": "2018-02-11T02:19:28Z",
      "side": 1,
      "message": "What is the rationale for putting a floor() on the Sample operation before the division?  On some internal tests, I am finding this is overly clamping alpha values to zero.",
      "range": {
        "startLine": 136,
        "startChar": 0,
        "endLine": 136,
        "endChar": 16
      },
      "revId": "c36e51fba22ce89b5e6f3e0544a33c1896639576",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "475b7a0b_e3c6a9b5",
        "filename": "src/libANGLE/renderer/d3d/d3d11/shaders/Passthrough2D11.hlsl",
        "patchSetId": 8
      },
      "lineNbr": 136,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-02-12T19:06:00Z",
      "side": 1,
      "message": "The division is floating point so the rounding has to be done explicitly.  I changed the floor() to a round() but I think both are valid.",
      "parentUuid": "5955a718_e9753835",
      "range": {
        "startLine": 136,
        "startChar": 0,
        "endLine": 136,
        "endChar": 16
      },
      "revId": "c36e51fba22ce89b5e6f3e0544a33c1896639576",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "71a1515a_2d38c5a3",
        "filename": "src/libANGLE/renderer/d3d/d3d11/shaders/Passthrough2D11.hlsl",
        "patchSetId": 8
      },
      "lineNbr": 136,
      "author": {
        "id": 1130144
      },
      "writtenOn": "2018-02-13T02:39:24Z",
      "side": 1,
      "message": "With your latest revision, our internal tests now appear to pass correctly. \n\nWith floor(), any pixel with an alpha channel \u003c 1.0 was ending up with an alpha value of 0 in the 5551 case. In baseline, the transition to 0 should happen when the alpha channel passes the 0.5 mark.",
      "parentUuid": "475b7a0b_e3c6a9b5",
      "range": {
        "startLine": 136,
        "startChar": 0,
        "endLine": 136,
        "endChar": 16
      },
      "revId": "c36e51fba22ce89b5e6f3e0544a33c1896639576",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}