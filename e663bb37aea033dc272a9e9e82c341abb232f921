{
  "comments": [
    {
      "key": {
        "uuid": "514d0263_ddfddfbd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 8,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-03-27T17:31:02Z",
      "side": 1,
      "message": "can you include some more details in the issue description? It\u0027s a cool change and would be good to inform other consumers of the code in the future.\n\nAlso it would be nice to include your micro-benchmark in angle_perftests. Maybe add a new test in src/tests/perf_tests/QueryPerfTest.cpp?",
      "revId": "e663bb37aea033dc272a9e9e82c341abb232f921",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9a68da7e_99918ad9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 8,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-03-27T18:32:14Z",
      "side": 1,
      "message": "My test is not really a perf test, its sample code. I am using AGI to look into what\u0027s happening inside GPU, which is very helpful.",
      "parentUuid": "514d0263_ddfddfbd",
      "revId": "e663bb37aea033dc272a9e9e82c341abb232f921",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fd6807ad_269ed99a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 8,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-03-27T18:59:38Z",
      "side": 1,
      "message": "If it improves performance it would be nice to have a microbenchmark that can verify the improvement. Not a blocking requirement, just nice-to-have.",
      "parentUuid": "9a68da7e_99918ad9",
      "revId": "e663bb37aea033dc272a9e9e82c341abb232f921",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5faa6a7b_31455575",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 2218,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-03-27T17:31:02Z",
      "side": 1,
      "message": "nit: can you make this into a helper function to reduce code duplication?",
      "range": {
        "startLine": 2212,
        "startChar": 0,
        "endLine": 2218,
        "endChar": 9
      },
      "revId": "e663bb37aea033dc272a9e9e82c341abb232f921",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b2cdad56_a84cadb5",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 2218,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-03-27T18:32:14Z",
      "side": 1,
      "message": "I concatenate into one line of code instead of making create another function.",
      "parentUuid": "5faa6a7b_31455575",
      "range": {
        "startLine": 2212,
        "startChar": 0,
        "endLine": 2218,
        "endChar": 9
      },
      "revId": "e663bb37aea033dc272a9e9e82c341abb232f921",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "99d70fa9_1698fb0c",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 4186,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-03-27T17:31:02Z",
      "side": 1,
      "message": "nit: this function can return void since it isn\u0027t possible to generate an unexpected termination.",
      "range": {
        "startLine": 4186,
        "startChar": 0,
        "endLine": 4186,
        "endChar": 13
      },
      "revId": "e663bb37aea033dc272a9e9e82c341abb232f921",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "56fec7d0_fa5ce084",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 4186,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-03-27T20:03:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "99d70fa9_1698fb0c",
      "range": {
        "startLine": 4186,
        "startChar": 0,
        "endLine": 4186,
        "endChar": 13
      },
      "revId": "e663bb37aea033dc272a9e9e82c341abb232f921",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0617f370_97326183",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 4189,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-03-27T17:31:02Z",
      "side": 1,
      "message": "nit: can you make this into a helper function in QueryImpl to save on code duplication?",
      "range": {
        "startLine": 4188,
        "startChar": 0,
        "endLine": 4189,
        "endChar": 72
      },
      "revId": "e663bb37aea033dc272a9e9e82c341abb232f921",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "213aafae_a5459597",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 4189,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-03-27T18:32:14Z",
      "side": 1,
      "message": "IMO, assertions are better done inside function so that when you got the assertion message you immediately know where it is asserting. And code is easier to read as well.",
      "parentUuid": "0617f370_97326183",
      "range": {
        "startLine": 4188,
        "startChar": 0,
        "endLine": 4189,
        "endChar": 72
      },
      "revId": "e663bb37aea033dc272a9e9e82c341abb232f921",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5564b10e_f248525f",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 4189,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-03-27T18:59:38Z",
      "side": 1,
      "message": "We have a misunderstanding. Let me clarify:\n\nPlease make a helper function \"isOcclusionQuery\" in QueryImpl to reduce duplication.",
      "parentUuid": "213aafae_a5459597",
      "range": {
        "startLine": 4188,
        "startChar": 0,
        "endLine": 4189,
        "endChar": 72
      },
      "revId": "e663bb37aea033dc272a9e9e82c341abb232f921",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ca5564a3_9bdeba83",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 4189,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-03-27T20:03:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5564b10e_f248525f",
      "range": {
        "startLine": 4188,
        "startChar": 0,
        "endLine": 4189,
        "endChar": 72
      },
      "revId": "e663bb37aea033dc272a9e9e82c341abb232f921",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9108d5e3_aff903f9",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 4197,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-03-27T17:31:02Z",
      "side": 1,
      "message": "Instead of adding accessors for the primary CB and RenderPassCommands, please pass them to the QueryHelper functions. This allows us to keep direct access to these buffers private.",
      "range": {
        "startLine": 4197,
        "startChar": 8,
        "endLine": 4197,
        "endChar": 41
      },
      "revId": "e663bb37aea033dc272a9e9e82c341abb232f921",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b944891_979df488",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 4197,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-03-27T18:32:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9108d5e3_aff903f9",
      "range": {
        "startLine": 4197,
        "startChar": 8,
        "endLine": 4197,
        "endChar": 41
      },
      "revId": "e663bb37aea033dc272a9e9e82c341abb232f921",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee91b25f_cce6922c",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 4203,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-03-27T17:31:02Z",
      "side": 1,
      "message": "nit: similarly this function can return void.",
      "range": {
        "startLine": 4203,
        "startChar": 0,
        "endLine": 4203,
        "endChar": 14
      },
      "revId": "e663bb37aea033dc272a9e9e82c341abb232f921",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "305a9de5_a51f87dc",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 4203,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-03-27T18:32:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ee91b25f_cce6922c",
      "range": {
        "startLine": 4203,
        "startChar": 0,
        "endLine": 4203,
        "endChar": 14
      },
      "revId": "e663bb37aea033dc272a9e9e82c341abb232f921",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43bbeb1e_56a11232",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 4212,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-03-27T17:31:02Z",
      "side": 1,
      "message": "similarly with the arguments here.",
      "range": {
        "startLine": 4212,
        "startChar": 15,
        "endLine": 4212,
        "endChar": 32
      },
      "revId": "e663bb37aea033dc272a9e9e82c341abb232f921",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "464fce1f_22382a3d",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 4212,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-03-27T18:32:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "43bbeb1e_56a11232",
      "range": {
        "startLine": 4212,
        "startChar": 15,
        "endLine": 4212,
        "endChar": 32
      },
      "revId": "e663bb37aea033dc272a9e9e82c341abb232f921",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9b9566b6_15b2a60f",
        "filename": "src/libANGLE/renderer/vulkan/QueryVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 31,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-03-27T17:31:02Z",
      "side": 1,
      "message": "can you make sure the active query gets reset to nullptr properly when we destroy the query? i.e. by calling ContextVk::beginOcclusionQuery(nullptr) or similar.",
      "range": {
        "startLine": 31,
        "startChar": 14,
        "endLine": 31,
        "endChar": 23
      },
      "revId": "e663bb37aea033dc272a9e9e82c341abb232f921",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "88f8feea_d8d639fc",
        "filename": "src/libANGLE/renderer/vulkan/QueryVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 31,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-03-27T18:32:14Z",
      "side": 1,
      "message": "The only way you get into such situation is that you hit this function while endQuery() not been called. This means you have a refcount bug in the query object itself.",
      "parentUuid": "9b9566b6_15b2a60f",
      "range": {
        "startLine": 31,
        "startChar": 14,
        "endLine": 31,
        "endChar": 23
      },
      "revId": "e663bb37aea033dc272a9e9e82c341abb232f921",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a84d8f06_6597664f",
        "filename": "src/libANGLE/renderer/vulkan/QueryVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 31,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-03-27T18:59:38Z",
      "side": 1,
      "message": "I looked and I didn\u0027t see where endQuery gets called if a Query is deleted before the application ends it. The spec makes it clear it\u0027s a valid call sequence. There could be a bug here.\n\n(See the spec under DeleteQueries)",
      "parentUuid": "88f8feea_d8d639fc",
      "range": {
        "startLine": 31,
        "startChar": 14,
        "endLine": 31,
        "endChar": 23
      },
      "revId": "e663bb37aea033dc272a9e9e82c341abb232f921",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "376fddb6_696e71b4",
        "filename": "src/libANGLE/renderer/vulkan/QueryVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 48,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-03-27T18:59:38Z",
      "side": 1,
      "message": "ref",
      "range": {
        "startLine": 47,
        "startChar": 0,
        "endLine": 48,
        "endChar": 91
      },
      "revId": "e663bb37aea033dc272a9e9e82c341abb232f921",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f5fa18d_4848d7fb",
        "filename": "src/libANGLE/renderer/vulkan/QueryVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 81,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-03-27T17:31:02Z",
      "side": 1,
      "message": "are you assuming that the RenderPass is empty in this situation? It\u0027s not clear to me why you can reset the stashed query helpers here. What if they have non-zero counts?",
      "range": {
        "startLine": 81,
        "startChar": 10,
        "endLine": 81,
        "endChar": 41
      },
      "revId": "e663bb37aea033dc272a9e9e82c341abb232f921",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b0f1dad3_7b0f68fb",
        "filename": "src/libANGLE/renderer/vulkan/QueryVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 81,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-03-27T18:32:14Z",
      "side": 1,
      "message": "You get to here because app calls this sequence: \"beginQ, draw, endQ, beginQ\", on the same query object. When the last beginQ is called, app will not able to get back the previous beginQ/endQ\u0027s result. That is why the previous stashed data all cleared here. Otherwise you will count them towards new query which is incorrect.",
      "parentUuid": "9f5fa18d_4848d7fb",
      "range": {
        "startLine": 81,
        "startChar": 10,
        "endLine": 81,
        "endChar": 41
      },
      "revId": "e663bb37aea033dc272a9e9e82c341abb232f921",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5cbe180e_0eb1d42f",
        "filename": "src/libANGLE/renderer/vulkan/QueryVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 81,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-03-27T18:59:38Z",
      "side": 1,
      "message": "Ah, can you maybe try to clear that up in the comment? I get it now.",
      "parentUuid": "b0f1dad3_7b0f68fb",
      "range": {
        "startLine": 81,
        "startChar": 10,
        "endLine": 81,
        "endChar": 41
      },
      "revId": "e663bb37aea033dc272a9e9e82c341abb232f921",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "71d82ba8_b64b0735",
        "filename": "src/libANGLE/renderer/vulkan/QueryVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 81,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-03-27T20:03:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5cbe180e_0eb1d42f",
      "range": {
        "startLine": 81,
        "startChar": 10,
        "endLine": 81,
        "endChar": 41
      },
      "revId": "e663bb37aea033dc272a9e9e82c341abb232f921",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "be28d899_353a3993",
        "filename": "src/libANGLE/renderer/vulkan/QueryVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 83,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-03-27T17:31:02Z",
      "side": 1,
      "message": "nit: maybe make a reinit helper function?",
      "range": {
        "startLine": 82,
        "startChar": 12,
        "endLine": 83,
        "endChar": 99
      },
      "revId": "e663bb37aea033dc272a9e9e82c341abb232f921",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b31bc0df_f83d2818",
        "filename": "src/libANGLE/renderer/vulkan/QueryVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 83,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-03-27T18:32:14Z",
      "side": 1,
      "message": "This just used in one place, not seeing much value to have another function to replace two lines of code.",
      "parentUuid": "be28d899_353a3993",
      "range": {
        "startLine": 82,
        "startChar": 12,
        "endLine": 83,
        "endChar": 99
      },
      "revId": "e663bb37aea033dc272a9e9e82c341abb232f921",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da9264c3_ffc643f2",
        "filename": "src/libANGLE/renderer/vulkan/QueryVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 83,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-03-27T18:59:38Z",
      "side": 1,
      "message": "It\u0027s used above as well. I\u0027ll leave a reference.",
      "parentUuid": "b31bc0df_f83d2818",
      "range": {
        "startLine": 82,
        "startChar": 12,
        "endLine": 83,
        "endChar": 99
      },
      "revId": "e663bb37aea033dc272a9e9e82c341abb232f921",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "36bf6139_747a0299",
        "filename": "src/libANGLE/renderer/vulkan/QueryVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 83,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-03-27T20:03:09Z",
      "side": 1,
      "message": "reinit doesn\u0027t sound like a right name, since this is really a reinit and allocQuery. I can not come out with a good name here to make it actually worth it. This is more explicit and easy to understand exactly what it is doing.",
      "parentUuid": "da9264c3_ffc643f2",
      "range": {
        "startLine": 82,
        "startChar": 12,
        "endLine": 83,
        "endChar": 99
      },
      "revId": "e663bb37aea033dc272a9e9e82c341abb232f921",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c8a8a35_187a6ca9",
        "filename": "src/libANGLE/renderer/vulkan/QueryVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 195,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-03-27T17:31:02Z",
      "side": 1,
      "message": "very nitty - it looks funny to me to put this in an outer scope. It would look a bit more consistent with ANGLE code to put it inside. Also I don\u0027t think it would change the generated assembly. We can double-check if you\u0027re hesitant.",
      "range": {
        "startLine": 195,
        "startChar": 8,
        "endLine": 195,
        "endChar": 19
      },
      "revId": "e663bb37aea033dc272a9e9e82c341abb232f921",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6ba11676_567f159b",
        "filename": "src/libANGLE/renderer/vulkan/QueryVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 195,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-03-27T18:32:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5c8a8a35_187a6ca9",
      "range": {
        "startLine": 195,
        "startChar": 8,
        "endLine": 195,
        "endChar": 19
      },
      "revId": "e663bb37aea033dc272a9e9e82c341abb232f921",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "67889293_9a834b95",
        "filename": "src/libANGLE/renderer/vulkan/QueryVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 197,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-03-27T17:31:02Z",
      "side": 1,
      "message": "nit: you can use a range-for loop here:\n\nfor (vk::QueryHelper \u0026stashedQuery : mStashedQueryHelpers)\n{\n}\n\nalso prefer not using auto for simple types. For a full discussion of when to use auto see:\n\nhttps://google.github.io/styleguide/cppguide.html#Type_deduction",
      "range": {
        "startLine": 196,
        "startChar": 0,
        "endLine": 197,
        "endChar": 21
      },
      "revId": "e663bb37aea033dc272a9e9e82c341abb232f921",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1cf701ae_430694e3",
        "filename": "src/libANGLE/renderer/vulkan/QueryVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 197,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-03-27T18:32:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "67889293_9a834b95",
      "range": {
        "startLine": 196,
        "startChar": 0,
        "endLine": 197,
        "endChar": 21
      },
      "revId": "e663bb37aea033dc272a9e9e82c341abb232f921",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "62604bc9_f667d18d",
        "filename": "src/libANGLE/renderer/vulkan/QueryVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 216,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-03-27T17:31:02Z",
      "side": 1,
      "message": "same comments",
      "range": {
        "startLine": 215,
        "startChar": 0,
        "endLine": 216,
        "endChar": 21
      },
      "revId": "e663bb37aea033dc272a9e9e82c341abb232f921",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a6ab9acb_4d72ed7b",
        "filename": "src/libANGLE/renderer/vulkan/QueryVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 216,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-03-27T18:32:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "62604bc9_f667d18d",
      "range": {
        "startLine": 215,
        "startChar": 0,
        "endLine": 216,
        "endChar": 21
      },
      "revId": "e663bb37aea033dc272a9e9e82c341abb232f921",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}