{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "31fcc4b6_ac5dbc18",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2022-03-30T17:47:18Z",
      "side": 1,
      "message": "PTAL",
      "revId": "f9307d199c420cda2b2c74dbca7ef07d792b229c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c7907eca_e7106b15",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-03-31T16:09:39Z",
      "side": 1,
      "message": "LGTM",
      "revId": "f9307d199c420cda2b2c74dbca7ef07d792b229c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "938708e7_b5db27a6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2022-03-31T17:57:14Z",
      "side": 1,
      "message": "thanks, landing this",
      "revId": "f9307d199c420cda2b2c74dbca7ef07d792b229c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9e2cf66f_2cc57955",
        "filename": "src/libANGLE/Surface.h",
        "patchSetId": 1
      },
      "lineNbr": 219,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-03-31T14:24:54Z",
      "side": 1,
      "message": "`release` usually has a different meaning in ANGLE. There\u0027s already a `releaseRef` in this class, why not use that? It also seems that this release is missing a check for `mRefCount \u003d\u003d 0`, like releaseRef does.",
      "range": {
        "startLine": 215,
        "startChar": 0,
        "endLine": 219,
        "endChar": 5
      },
      "revId": "f9307d199c420cda2b2c74dbca7ef07d792b229c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c480cd22_8f6337cf",
        "filename": "src/libANGLE/Surface.h",
        "patchSetId": 1
      },
      "lineNbr": 219,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2022-03-31T15:48:25Z",
      "side": 1,
      "message": "\u003e why not use that?\n\n1. mirroring what ScopedContextRef did\n2. the sopedref should not destroy a surface, it just needs to keep an already destroyed surface alive during our internal context juggling\n\n\u003e release is missing a check for  mRefCount \u003d\u003d 0\n\nwill add",
      "parentUuid": "9e2cf66f_2cc57955",
      "range": {
        "startLine": 215,
        "startChar": 0,
        "endLine": 219,
        "endChar": 5
      },
      "revId": "f9307d199c420cda2b2c74dbca7ef07d792b229c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c2827d01_0a090bcd",
        "filename": "src/libANGLE/Surface.h",
        "patchSetId": 1
      },
      "lineNbr": 219,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-03-31T15:56:12Z",
      "side": 1,
      "message": "\u003e 2. the sopedref should not destroy a surface, it just needs to keep an already destroyed surface alive during our internal context juggling\n\nOk got it, then using `releaseRef` would be wrong, because the surface is already destroyed (unless re-destroying it is safe)? If it\u0027s safe to re-destroy, you could just replace this with `releaseRef`. Or if this is expected to only be used for the keep-destroyed-alive situation, you could just `ASSERT(mRefCount \u003d\u003d 0 \u0026\u0026 mDestroyed);` with a comment.",
      "parentUuid": "c480cd22_8f6337cf",
      "range": {
        "startLine": 215,
        "startChar": 0,
        "endLine": 219,
        "endChar": 5
      },
      "revId": "f9307d199c420cda2b2c74dbca7ef07d792b229c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1848b1c5_6f9ca27a",
        "filename": "src/libANGLE/Surface.h",
        "patchSetId": 1
      },
      "lineNbr": 219,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2022-03-31T16:05:17Z",
      "side": 1,
      "message": "\u003e If it\u0027s safe to re-destroy\n\nit is not, the object would be garbage after 1st destroy\n\n\u003e because the surface is already destroyed ... Or if this is expected to only be used for the keep-destroyed-alive situation\n\nupdating this comment -\u003e \"it just needs to keep an already destroyed surface alive during our internal context juggling\" to \"it just needs to keep a potentially destroyed surface alive during our internal context juggling\".\n\nI wanted to use the \"acquire\" / \"release\" pattern and not talk about ref at all but saw ScopedContextRef and thought you guys might want to continue the pattern",
      "parentUuid": "c2827d01_0a090bcd",
      "range": {
        "startLine": 215,
        "startChar": 0,
        "endLine": 219,
        "endChar": 5
      },
      "revId": "f9307d199c420cda2b2c74dbca7ef07d792b229c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1774f805_46a5afbe",
        "filename": "src/libANGLE/Surface.h",
        "patchSetId": 1
      },
      "lineNbr": 219,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2022-03-31T16:17:51Z",
      "side": 1,
      "message": "\u003e release is missing a check for  mRefCount \u003d\u003d 0\n\nthinking about this again, an assert would crash and let developer know that a corresponding `addRef` is missing (instead of silently ignoring the call). WDYT?",
      "parentUuid": "1848b1c5_6f9ca27a",
      "range": {
        "startLine": 215,
        "startChar": 0,
        "endLine": 219,
        "endChar": 5
      },
      "revId": "f9307d199c420cda2b2c74dbca7ef07d792b229c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6cdf0340_1262d546",
        "filename": "src/libANGLE/Surface.h",
        "patchSetId": 1
      },
      "lineNbr": 219,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-03-31T17:25:23Z",
      "side": 1,
      "message": "More asserts \u003e fewer asserts :)",
      "parentUuid": "1774f805_46a5afbe",
      "range": {
        "startLine": 215,
        "startChar": 0,
        "endLine": 219,
        "endChar": 5
      },
      "revId": "f9307d199c420cda2b2c74dbca7ef07d792b229c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "061d7ec5_0ea52a35",
        "filename": "src/libANGLE/Surface.h",
        "patchSetId": 1
      },
      "lineNbr": 219,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2022-03-31T17:57:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6cdf0340_1262d546",
      "range": {
        "startLine": 215,
        "startChar": 0,
        "endLine": 219,
        "endChar": 5
      },
      "revId": "f9307d199c420cda2b2c74dbca7ef07d792b229c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0488d96a_70f950e6",
        "filename": "src/libANGLE/Surface.h",
        "patchSetId": 1
      },
      "lineNbr": 219,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-03-31T18:21:01Z",
      "side": 1,
      "message": "Missed an upload? There is no change.",
      "parentUuid": "061d7ec5_0ea52a35",
      "range": {
        "startLine": 215,
        "startChar": 0,
        "endLine": 219,
        "endChar": 5
      },
      "revId": "f9307d199c420cda2b2c74dbca7ef07d792b229c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0346c816_3a409eee",
        "filename": "src/libANGLE/Surface.h",
        "patchSetId": 1
      },
      "lineNbr": 219,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2022-03-31T18:24:25Z",
      "side": 1,
      "message": "i might have misunderstood, this is current code -\n void release()\n {\n     ASSERT(mRefCount \u003e 0);\n     mRefCount--;\n }\n \nyou want it to be this?\n void release()\n {\n     ASSERT(mRefCount \u003e 0);\n     if (mRefCount \u003e 0)\n     {\n         mRefCount--;\n     }\n }\n\nsince this statement -\u003e \"Or if this is expected to only be used for the keep-destroyed-alive situation\" is not true",
      "parentUuid": "0488d96a_70f950e6",
      "range": {
        "startLine": 215,
        "startChar": 0,
        "endLine": 219,
        "endChar": 5
      },
      "revId": "f9307d199c420cda2b2c74dbca7ef07d792b229c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a8accfb2_fe9f31d5",
        "filename": "src/libANGLE/Surface.h",
        "patchSetId": 1
      },
      "lineNbr": 219,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-03-31T18:26:55Z",
      "side": 1,
      "message": "No\n\n\u003e an assert would crash and let developer know that a corresponding  addRef  is missing (instead of silently ignoring the call). WDYT?\n\nI thought you wanted to add an `ASSERT(mRefCount \u003d\u003d 0);` to the end of this:\n\n```\n void release()\n {\n     ASSERT(mRefCount \u003e 0);\n     mRefCount--;\n     ASSERT(mRefCount \u003d\u003d 0);\n }\n```\n\nbut maybe _I_ misunderstood. Otherwise I don\u0027t know what that WDYT comment meant ðŸ˜„",
      "parentUuid": "0346c816_3a409eee",
      "range": {
        "startLine": 215,
        "startChar": 0,
        "endLine": 219,
        "endChar": 5
      },
      "revId": "f9307d199c420cda2b2c74dbca7ef07d792b229c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "edaef073_6937d39c",
        "filename": "src/libANGLE/Surface.h",
        "patchSetId": 1
      },
      "lineNbr": 219,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2022-03-31T18:32:14Z",
      "side": 1,
      "message": "ha ha, apologies. the \"WDYT\" comment was for having `ASSERT(mRefCount \u003e 0)` instead of `if (mRefCount \u003e 0)` and silently returning without doing anything to `refCount`\n\nadding this `ASSERT(mRefCount \u003d\u003d 0);` at the end would be incorrect because this context juggling can happen with surfaces that have not been destroyed as well. if you remove this call `eglDestroySurface(mDisplay, mPbufferSurface);` from my new test, it is still a valid test and `mRefCount` will not be `0` in `~ScopedSurfaceRef`",
      "parentUuid": "a8accfb2_fe9f31d5",
      "range": {
        "startLine": 215,
        "startChar": 0,
        "endLine": 219,
        "endChar": 5
      },
      "revId": "f9307d199c420cda2b2c74dbca7ef07d792b229c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}