{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "6353e92b_3a9fd11f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2023-04-15T00:04:42Z",
      "side": 1,
      "message": "lgtm+2",
      "revId": "b96e1476a3d05820c8d33741490c0287ef47b23f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9b62865f_1d5b5495",
        "filename": "src/compiler/translator/TranslatorMetalDirect.cpp",
        "patchSetId": 3
      },
      "lineNbr": 446,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2023-04-15T00:04:42Z",
      "side": 1,
      "message": "This emulation is fantastic - have to admit I mostly don\u0027t understand it. One question below.",
      "revId": "b96e1476a3d05820c8d33741490c0287ef47b23f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a9b97a76_41ced930",
        "filename": "src/compiler/translator/TranslatorMetalDirect.cpp",
        "patchSetId": 3
      },
      "lineNbr": 573,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2023-04-15T00:04:42Z",
      "side": 1,
      "message": "Since MSAA 2/4/8 are handled, do higher values (16x) need to be?",
      "revId": "b96e1476a3d05820c8d33741490c0287ef47b23f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3fb63136_a0ad74f3",
        "filename": "src/compiler/translator/TranslatorMetalDirect.cpp",
        "patchSetId": 3
      },
      "lineNbr": 573,
      "author": {
        "id": 1394635
      },
      "writtenOn": "2023-04-15T01:30:32Z",
      "side": 1,
      "message": "Metal is limited to 8 samples:\nhttps://developer.apple.com/documentation/metal/mtldevice/1433355-supportstexturesamplecount",
      "parentUuid": "a9b97a76_41ced930",
      "revId": "b96e1476a3d05820c8d33741490c0287ef47b23f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "63752b26_12bda4c9",
        "filename": "src/compiler/translator/TranslatorMetalDirect.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1376,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2023-04-15T00:04:42Z",
      "side": 1,
      "message": "Is it necessary to write this all the time? I see that AddSampleMaskDeclaration does some work even if usesSampleMask is false.",
      "revId": "b96e1476a3d05820c8d33741490c0287ef47b23f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5d0d0654_8ffb0089",
        "filename": "src/compiler/translator/TranslatorMetalDirect.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1376,
      "author": {
        "id": 1394635
      },
      "writtenOn": "2023-04-15T01:30:32Z",
      "side": 1,
      "message": "A sample mask fragment output is always added to MSL unless PLS uniforms are present (this line).\n\nIf the current rendering is single-sampled, all related code would be dropped during MSL compilation because of `ANGLESampleMaskEnabled` function constant.\n\nIf the current rendering is multisampled, sample mask fragment output is needed for A2C (optionally) and `GL_SAMPLE_COVERAGE` emulation regardless of `gl_SampleMask` usage.",
      "parentUuid": "63752b26_12bda4c9",
      "revId": "b96e1476a3d05820c8d33741490c0287ef47b23f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:approval_code-owners"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "b96e1476a3d05820c8d33741490c0287ef47b23f",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "b96e1476a3d05820c8d33741490c0287ef47b23f",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "b96e1476a3d05820c8d33741490c0287ef47b23f",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "b96e1476a3d05820c8d33741490c0287ef47b23f",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}