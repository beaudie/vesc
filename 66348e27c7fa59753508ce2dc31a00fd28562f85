{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "7b4cea5e_e90c43f2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 22,
      "author": {
        "id": 1128437
      },
      "writtenOn": "2023-09-21T18:43:19Z",
      "side": 1,
      "message": "nit: deduced here and below",
      "range": {
        "startLine": 22,
        "startChar": 2,
        "endLine": 22,
        "endChar": 9
      },
      "revId": "66348e27c7fa59753508ce2dc31a00fd28562f85",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b8f01371_6dcb6a2b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 26,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2023-09-21T20:21:00Z",
      "side": 1,
      "message": "Nit: GL_RGBX8_ANGLE",
      "revId": "66348e27c7fa59753508ce2dc31a00fd28562f85",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "04397c18_e8e5c767",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2023-09-21T20:21:00Z",
      "side": 1,
      "message": "lgtm once Sunny\u0027s questions are addressed. It\u0027s fine with me to have the special-case for RGB if there are good reasons for it.\n\nNo need for me to re-review, assuming this doesn\u0027t change the semantics from Chrome\u0027s point of view.",
      "revId": "66348e27c7fa59753508ce2dc31a00fd28562f85",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5164339c_09bb0fc5",
        "filename": "src/libANGLE/renderer/metal/IOSurfaceSurfaceMtl.mm",
        "patchSetId": 4
      },
      "lineNbr": 47,
      "author": {
        "id": 1128437
      },
      "writtenOn": "2023-09-21T18:43:19Z",
      "side": 1,
      "message": "Instead of special casing this, I\u0027d suggest the following:\n\n1) Extend IOSurfaceFormatInfo with a `uint32_t iosurfaceFormat`.\n\n2) In the IOSurfaceFormats table, we\u0027ll have entries like this:\n```\n{\u0027BGRA\u0027, GL_RGB, GL_UNSIGNED_BYTE, 4, angle::FormatID::B8G8R8A8_UNORM},\n{\u0027RGBA\u0027, GL_RGB, GL_UNSIGNED_BYTE, 4, angle::FormatID::R8G8B8A8_UNORM},\n{\u0027BGRA\u0027, GL_RGBA, GL_UNSIGNED_BYTE, 4, angle::FormatID::B8G8R8A8_UNORM},\n{\u0027RGBA\u0027, GL_RGBA, GL_UNSIGNED_BYTE, 4, angle::FormatID::R8G8B8A8_UNORM},\n{\u0027BGRA\u0027, GL_BGRA_EXT, GL_UNSIGNED_BYTE, 4, angle::FormatID::B8G8R8A8_UNORM},\n```\n\nThe table lists all allowed IOSurface pixel format + internal format + data type combinations and maps them to the correct angle::FormatID.\n\nThis allows BGRA IOSurfaces to be bound as either GL_RGB, GL_RGBA, or GL_BGRA_EXT, and RGBA IOSurfaces to be bound as either GL_RGB or GL_RGBA. This matches the behavior of the similar D3D client buffer extension: https://source.chromium.org/chromium/chromium/src/+/main:third_party/angle/extensions/EGL_ANGLE_d3d_texture_client_buffer.txt;l\u003d170\n\n3) FindIOSurfaceFormatIndex takes in the `uint32_t iosurfaceFormat` as an input to search in the table.",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 47,
        "endChar": 59
      },
      "revId": "66348e27c7fa59753508ce2dc31a00fd28562f85",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "873d7054_6a5977ce",
        "filename": "src/libANGLE/renderer/metal/IOSurfaceSurfaceMtl.mm",
        "patchSetId": 4
      },
      "lineNbr": 47,
      "author": {
        "id": 1543187
      },
      "writtenOn": "2023-09-21T19:44:13Z",
      "side": 1,
      "message": "This could work. However we always need special casing one way or another. Because RED/RG internal formatted texture is special, it would be imported from a plain RED/RG IOSurface or it would be imported from a plane of a YUV IOSurface. We would need to have a big table just to cover every case here. Not to mention there are many YUV formats that can be used with RED/RG internal formats. Even if we only cared about and included YUV420/P010 in the table, it would lock many external users from using YUV422, YUV444, etc.\n\nI chose to treat RGB as the only special case because it is a small behavior change. And hopefully it won\u0027t disrupt many existing usages in Chrome \u0026 tests.",
      "parentUuid": "5164339c_09bb0fc5",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 47,
        "endChar": 59
      },
      "revId": "66348e27c7fa59753508ce2dc31a00fd28562f85",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5d05d7f5_74e68746",
        "filename": "src/tests/egl_tests/EGLIOSurfaceClientBufferTest.cpp",
        "patchSetId": 4
      },
      "lineNbr": 529,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2023-09-21T20:21:00Z",
      "side": 1,
      "message": "This test should be renamed - RenderToRGBIOSurface?",
      "revId": "66348e27c7fa59753508ce2dc31a00fd28562f85",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9d5be2a5_6cb8d900",
        "filename": "src/tests/egl_tests/EGLIOSurfaceClientBufferTest.cpp",
        "patchSetId": 4
      },
      "lineNbr": 539,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2023-09-21T20:21:00Z",
      "side": 1,
      "message": "There\u0027s been a persistent problem over the years that in Apple\u0027s OpenGL driver, binding a GL_RGB texture to an RGBA IOSurface doesn\u0027t always cause the alpha channel to be set to 255 (or 1.0, depending on how you think about it). Can or should we add more tests that clear the RGB texture to a color like (1, 2, 3, 0) and then assert that the read-back color is (1, 2, 3, 255)?",
      "revId": "66348e27c7fa59753508ce2dc31a00fd28562f85",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9420e47a_c08523d6",
        "filename": "src/tests/egl_tests/EGLIOSurfaceClientBufferTest.cpp",
        "patchSetId": 4
      },
      "lineNbr": 543,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2023-09-21T20:21:00Z",
      "side": 1,
      "message": "Comment and test name should be updated from RGBX8888 to RGB or RGB888.",
      "revId": "66348e27c7fa59753508ce2dc31a00fd28562f85",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}