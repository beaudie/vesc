{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "6aeb1c0d_7323dfd7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-10-22T00:44:17Z",
      "side": 1,
      "message": "There appears to be a performance penalty on Android for a constructor having varargs.  I tried various changes.  I tested with perftest and its NBA 2K20 trace.  I run-time disable the debug-util markers by having the Vulkan back-end set the global g_debugAnnotator pointer to nullptr (causes DebugAnnotationsActive() to return false, just below EVENT()).\n\nFor perftest, this CL gives the same performance as when ANGLE is compiled without markers.  Same performance whether enabled or disabled.  However, running real NBA 2K20 with AGI seemmed sluggish.  I did system traces with AGI and see that there\u0027s still a 2X+ performance penalty with markers enabled, but this CL is still better than without this CL.\n\nperftest performance is as follows:\n\n- Native: ~9 msec\n- ANGLE compiled without markers: ~12 msec\n- ANGLE compiled with markers: ~25 msec\n- ANGLE compiled with markers, disabled: ~25 msec\n- ANGLE compiled with markers, with this CL, disabled: ~12 msec\n- ANGLE compiled with markers, with this CL, enabled: ~12 msec\n",
      "revId": "5a3ec8b2b9d453110c49d3bc863eb46b800277ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8d935e5f_d5555f86",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-10-22T17:48:33Z",
      "side": 1,
      "message": "\u003e ANGLE compiled with markers, with this CL, enabled: ~12 msec\n\nWas that supposed to say ~X msec where 12 \u003c X \u003c 25?",
      "parentUuid": "6aeb1c0d_7323dfd7",
      "revId": "5a3ec8b2b9d453110c49d3bc863eb46b800277ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9361b5bf_48dc397e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-10-22T17:50:59Z",
      "side": 1,
      "message": "Hey Ian, can you put the ",
      "revId": "5a3ec8b2b9d453110c49d3bc863eb46b800277ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d9558673_1c6c4b6b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-10-22T18:09:09Z",
      "side": 1,
      "message": "Quick question about Jamie\u0027s nit + other responses",
      "revId": "5a3ec8b2b9d453110c49d3bc863eb46b800277ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0a3f812d_891a7c3a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-10-22T18:09:09Z",
      "side": 1,
      "message": "Not sure what you\u0027re asking.  perftest results were about 12 msec/frame with this CL, whether markers were enabled or disabled.  Same when compiled so that markers will not enabled.  Perftest results were about 25 msec/frame without this CL, whether or not markers were enabled.\n\nI tried several times (e.g. git revert) to make sure I was seeing accurate results.\n\nAGI analysis of the real game showed that frame times were normal with this CL and markers disabled, and slower with this CL and markers enabled.  That suggests that there are cases where perftest varies from real application performance.",
      "parentUuid": "8d935e5f_d5555f86",
      "revId": "5a3ec8b2b9d453110c49d3bc863eb46b800277ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "90f73690_5beffdf8",
        "filename": "src/common/debug.h",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-10-22T17:50:59Z",
      "side": 1,
      "message": "nit: begin",
      "range": {
        "startLine": 41,
        "startChar": 9,
        "endLine": 41,
        "endChar": 22
      },
      "revId": "5a3ec8b2b9d453110c49d3bc863eb46b800277ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "00f49a5a_f927a61a",
        "filename": "src/common/debug.h",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-10-22T18:09:09Z",
      "side": 1,
      "message": "To clarify, did you mean: s/logEntryPoint/beginEntryPoint/ ?",
      "parentUuid": "90f73690_5beffdf8",
      "range": {
        "startLine": 41,
        "startChar": 9,
        "endLine": 41,
        "endChar": 22
      },
      "revId": "5a3ec8b2b9d453110c49d3bc863eb46b800277ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "338723b5_acc728d8",
        "filename": "src/common/debug.h",
        "patchSetId": 1
      },
      "lineNbr": 261,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-10-22T17:48:33Z",
      "side": 1,
      "message": "Please enclose in `do { } while (0)`. See `#define UNIMPLEMENTED` below for example.\n\nOtherwise something like `if (x) EVENT(...);` gets tripped up.",
      "range": {
        "startLine": 259,
        "startChar": 0,
        "endLine": 261,
        "endChar": 99
      },
      "revId": "5a3ec8b2b9d453110c49d3bc863eb46b800277ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bd23935c_aacc2cdf",
        "filename": "src/common/debug.h",
        "patchSetId": 1
      },
      "lineNbr": 261,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-10-22T17:50:59Z",
      "side": 1,
      "message": "+1, also recommend {} around the if, and ensuring the indentation looks good.",
      "parentUuid": "338723b5_acc728d8",
      "range": {
        "startLine": 259,
        "startChar": 0,
        "endLine": 261,
        "endChar": 99
      },
      "revId": "5a3ec8b2b9d453110c49d3bc863eb46b800277ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7229d599_b380399b",
        "filename": "src/common/debug.h",
        "patchSetId": 1
      },
      "lineNbr": 261,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-10-22T18:09:09Z",
      "side": 1,
      "message": "I couldn\u0027t compile for Android with {} around the if.  I don\u0027t remember the exact error, but the variable arguments got messed up, especially with FUNC_EVENT calling EVENT.\n\nI\u0027ll fix the indentation.",
      "parentUuid": "bd23935c_aacc2cdf",
      "range": {
        "startLine": 259,
        "startChar": 0,
        "endLine": 261,
        "endChar": 99
      },
      "revId": "5a3ec8b2b9d453110c49d3bc863eb46b800277ba",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}