{
  "comments": [
    {
      "key": {
        "uuid": "f26f6639_0487b68f",
        "filename": "src/libEGL/Display.cpp",
        "patchSetId": 1
      },
      "lineNbr": 235,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2014-01-29T21:57:14Z",
      "side": 1,
      "message": "Would this patch allow the user to specify width \u0026 height as both -1 through EGL, and not produce an EGL error? Not sure if this is something we care too much about, but worth noting if so.",
      "revId": "dce87e7f4742b5ef1575e4f9e220eba9141a4a7d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f2b4c6fd_b0080085",
        "filename": "src/libEGL/Display.cpp",
        "patchSetId": 1
      },
      "lineNbr": 235,
      "author": {
        "id": 1000608
      },
      "writtenOn": "2014-01-29T22:03:15Z",
      "side": 1,
      "message": "Good point. I guess we could check specifically if EGL_WIDTH or EGL_HEIGHT was set, and require them to be \u003e 0.",
      "parentUuid": "f26f6639_0487b68f",
      "revId": "dce87e7f4742b5ef1575e4f9e220eba9141a4a7d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "52811216_d6f54a9f",
        "filename": "src/libEGL/Surface.cpp",
        "patchSetId": 1
      },
      "lineNbr": 322,
      "author": {
        "id": 1105219
      },
      "writtenOn": "2014-01-29T22:48:14Z",
      "side": 1,
      "message": "Is there any point in doing the comparison if autodetection is not enabled? It might be better to define sizeDirty above the if (mAutodetectSize \u0026\u0026 ...) clause, and flag it as true inside that clause if the client width/height do not correspond to the surface\u0027s.\n\nWhat is the intended behavior for non-autodetecting surfaces on native window resize? The specification (in sec 2.2.2.2) discusses the possibility for definition of extensions to give surface resize control explicitly to the client, but I think the language of the spec is pretty clear that expects surfaces to be resizable *somehow*.",
      "revId": "dce87e7f4742b5ef1575e4f9e220eba9141a4a7d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f2b4c6fd_cbcbe138",
        "filename": "src/libEGL/Surface.cpp",
        "patchSetId": 1
      },
      "lineNbr": 322,
      "author": {
        "id": 1000608
      },
      "writtenOn": "2014-01-29T23:04:41Z",
      "side": 1,
      "message": "I\u0027m planning on making it impossible to resize a non-autodetecting surface. Chrome currently destroys and recreates the surface anyway on resize (both for pbuffer and window surfaces), so any additional code would be wasted from Chrome\u0027s perspective. And there\u0027s not much advantage to resizing an existing surface over creating a new one; the only difference is that part of the existing contents remain in the surface, but they\u0027re probably useless anyway now that the window\u0027s a different size.",
      "parentUuid": "52811216_d6f54a9f",
      "revId": "dce87e7f4742b5ef1575e4f9e220eba9141a4a7d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}