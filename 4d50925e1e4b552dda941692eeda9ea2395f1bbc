{
  "comments": [
    {
      "key": {
        "uuid": "48d3831d_ac7c017e",
        "filename": "src/libANGLE/Display.h",
        "patchSetId": 1
      },
      "lineNbr": 115,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2016-08-23T14:52:28Z",
      "side": 1,
      "message": "Instead of an isESVersionSupported method, how about getMaxSupportedESVersion like DisplayGL has?",
      "range": {
        "startLine": 115,
        "startChar": 4,
        "endLine": 115,
        "endChar": 66
      },
      "revId": "4d50925e1e4b552dda941692eeda9ea2395f1bbc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c8b21311_7cc5b90a",
        "filename": "src/libANGLE/Display.h",
        "patchSetId": 1
      },
      "lineNbr": 115,
      "author": {
        "id": 1160819
      },
      "writtenOn": "2016-08-23T15:13:50Z",
      "side": 1,
      "message": "I wasn\u0027t sure how I could retrieve the version from dx and vk. Previously this check didn\u0027t exist so I thought that it was a safe bet for vk and dx to always return true.\n\nDo you think I should change it? How does the DX-GLES version mapping go?",
      "parentUuid": "48d3831d_ac7c017e",
      "range": {
        "startLine": 115,
        "startChar": 4,
        "endLine": 115,
        "endChar": 66
      },
      "revId": "4d50925e1e4b552dda941692eeda9ea2395f1bbc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "48d3831d_a736da02",
        "filename": "src/libANGLE/Display.h",
        "patchSetId": 1
      },
      "lineNbr": 115,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2016-08-23T15:41:47Z",
      "side": 1,
      "message": "They set the appropriate bits in the configs (EGL_OPENGL_ES2_BIT, EGL_OPENGL_ES3_BIT_KHR) to signify which versions are supported.  It\u0027s unfortunate that there is no bit for ES 3.1.\n\nYou would have to do a little work to have the maximum version stored somewhere but it should all be available.  D3D9 only supports ES2 and D3D11 supports ES3 if the feature level is at least 10.0.",
      "parentUuid": "c8b21311_7cc5b90a",
      "range": {
        "startLine": 115,
        "startChar": 4,
        "endLine": 115,
        "endChar": 66
      },
      "revId": "4d50925e1e4b552dda941692eeda9ea2395f1bbc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "48d3831d_07186688",
        "filename": "src/libANGLE/Display.h",
        "patchSetId": 1
      },
      "lineNbr": 115,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-08-23T15:47:09Z",
      "side": 1,
      "message": "I just took a look at D3D and see a bit of inconsistency. What we should do is support 3.0 only on FL10.1+, as we have in GetMaximumClientVersion in renderer11_utils. We also have some custom checks in Renderer11::generateConfigs. We should consolidate these checks using the \"get maximum ES version\" methods you\u0027re adding. Like Geoff said, it sucks there\u0027s no standard \u0027bit\u0027 for this.",
      "parentUuid": "c8b21311_7cc5b90a",
      "range": {
        "startLine": 115,
        "startChar": 4,
        "endLine": 115,
        "endChar": 66
      },
      "revId": "4d50925e1e4b552dda941692eeda9ea2395f1bbc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "48d3831d_47226eb6",
        "filename": "src/libANGLE/Display.h",
        "patchSetId": 1
      },
      "lineNbr": 115,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-08-23T15:47:09Z",
      "side": 1,
      "message": "10.1+",
      "parentUuid": "48d3831d_a736da02",
      "range": {
        "startLine": 115,
        "startChar": 4,
        "endLine": 115,
        "endChar": 66
      },
      "revId": "4d50925e1e4b552dda941692eeda9ea2395f1bbc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "48d3831d_cc814562",
        "filename": "src/libANGLE/renderer/d3d/DisplayD3D.h",
        "patchSetId": 1
      },
      "lineNbr": 71,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2016-08-23T14:52:28Z",
      "side": 1,
      "message": "Please make sure this has a big TODO message (with the bug ID).",
      "range": {
        "startLine": 71,
        "startChar": 77,
        "endLine": 71,
        "endChar": 88
      },
      "revId": "4d50925e1e4b552dda941692eeda9ea2395f1bbc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "88e73b24_527434d8",
        "filename": "src/libANGLE/renderer/d3d/DisplayD3D.h",
        "patchSetId": 1
      },
      "lineNbr": 71,
      "author": {
        "id": 1160819
      },
      "writtenOn": "2016-08-23T15:13:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "48d3831d_cc814562",
      "range": {
        "startLine": 71,
        "startChar": 77,
        "endLine": 71,
        "endChar": 88
      },
      "revId": "4d50925e1e4b552dda941692eeda9ea2395f1bbc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "48d3831d_4c561505",
        "filename": "src/libANGLE/validationEGL.cpp",
        "patchSetId": 1
      },
      "lineNbr": 355,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2016-08-23T14:52:28Z",
      "side": 1,
      "message": "The check should be done in this block instead of below.",
      "range": {
        "startLine": 337,
        "startChar": 8,
        "endLine": 355,
        "endChar": 18
      },
      "revId": "4d50925e1e4b552dda941692eeda9ea2395f1bbc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "68ecc70a_b112405b",
        "filename": "src/libANGLE/validationEGL.cpp",
        "patchSetId": 1
      },
      "lineNbr": 355,
      "author": {
        "id": 1160819
      },
      "writtenOn": "2016-08-23T15:13:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "48d3831d_4c561505",
      "range": {
        "startLine": 337,
        "startChar": 8,
        "endLine": 355,
        "endChar": 18
      },
      "revId": "4d50925e1e4b552dda941692eeda9ea2395f1bbc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "48d3831d_8c873d77",
        "filename": "src/libANGLE/validationEGL.cpp",
        "patchSetId": 1
      },
      "lineNbr": 393,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2016-08-23T14:52:28Z",
      "side": 1,
      "message": "You should probably update this to check minor versions as well.",
      "range": {
        "startLine": 390,
        "startChar": 8,
        "endLine": 393,
        "endChar": 9
      },
      "revId": "4d50925e1e4b552dda941692eeda9ea2395f1bbc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "88e73b24_727738df",
        "filename": "src/libANGLE/validationEGL.cpp",
        "patchSetId": 1
      },
      "lineNbr": 393,
      "author": {
        "id": 1160819
      },
      "writtenOn": "2016-08-23T15:13:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "48d3831d_8c873d77",
      "range": {
        "startLine": 390,
        "startChar": 8,
        "endLine": 393,
        "endChar": 9
      },
      "revId": "4d50925e1e4b552dda941692eeda9ea2395f1bbc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}