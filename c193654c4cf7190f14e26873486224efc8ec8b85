{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "50ff5840_8acbc798",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-05-10T13:43:48Z",
      "side": 1,
      "message": "INFO:root:Comparison Failed tests:\nINFO:root:  SimpleOperationTest.ClearAndSwap/ES2_Vulkan_SwiftShader\n",
      "revId": "c193654c4cf7190f14e26873486224efc8ec8b85",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ef53a0de_60a10ec0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1491823
      },
      "writtenOn": "2021-05-11T08:08:39Z",
      "side": 1,
      "message": "I see. What backends are actually supposed to be passing when enabling a tests? So far I\u0027ve only tested with ES2_Vulkan ..",
      "parentUuid": "50ff5840_8acbc798",
      "revId": "c193654c4cf7190f14e26873486224efc8ec8b85",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e6ee37df_2cb0bef9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1491823
      },
      "writtenOn": "2021-05-11T09:02:00Z",
      "side": 1,
      "message": "There is actually a deeper problem with this failing tests: It clears the backbuffer and then swaps, so the first frame is okay, but after this the test finishes and triggers another frame capture that captures the uninitialized data of the former front buffer, resulting in random data being captured, and hence the failure. I\u0027m not sure how to quell this. The obvious solution to fix the capture would be to do another clear after the swap, but given the comments in the test I\u0027m not sure whether this is intend (and in any case, the test framework should be able to handle the case as is).",
      "parentUuid": "ef53a0de_60a10ec0",
      "revId": "c193654c4cf7190f14e26873486224efc8ec8b85",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a6bac851_345c3a49",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-05-11T13:00:25Z",
      "side": 1,
      "message": "Yeah I\u0027d leave this test skipped for now as the capture doesn\u0027t handle EGL properly.",
      "parentUuid": "e6ee37df_2cb0bef9",
      "revId": "c193654c4cf7190f14e26873486224efc8ec8b85",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ed2c890b_181033f8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1491823
      },
      "writtenOn": "2021-07-02T15:58:19Z",
      "side": 1,
      "message": "Abandoning this, because other patches handle these tests now.",
      "parentUuid": "a6bac851_345c3a49",
      "revId": "c193654c4cf7190f14e26873486224efc8ec8b85",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}