{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "5200c4fa_70240b5b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-10-07T14:40:45Z",
      "side": 1,
      "message": "Could you please make sure kHalfRenderAreaRotationMatrices can be removed? That\u0027s in src/compiler/translator/tree_util/SpecializationConstant.cpp (see the comment there)\n\nThat\u0027s what the bug is all about!",
      "revId": "217f12e54b6e87b75cf9898fbb25289e4979a2e6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fa884ed9_a0b1bce5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-10-07T15:13:30Z",
      "side": 1,
      "message": "Regression test or suppression lift would be welcome.",
      "revId": "217f12e54b6e87b75cf9898fbb25289e4979a2e6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dd51c36e_7701eba5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2021-10-07T17:29:01Z",
      "side": 1,
      "message": "See https://issuetracker.google.com/174066134.\n\nThe reason this fix makes all bots green without lift any test is because this code path is no longer been used except older QC driver.\n\n    // http://issuetracker.google.com/173636783 Qualcomm driver appears having issues with\n    // specialization constant\n    ANGLE_FEATURE_CONDITION(\u0026mFeatures, forceDriverUniformOverSpecConst,\n                            isQualcomm \u0026\u0026 mPhysicalDeviceProperties.driverVersion \u003c\n                                              kPixel4DriverWithWorkingSpecConstSupport);\n\nAll other drivers (which means all bots) are not using this code path any more, they are using specialization constant code path. The equivalent fix should be in this file\nhttps://chromium.googlesource.com/angle/angle/+/refs/heads/main/src/compiler/translator/tree_util/SpecializationConstant.cpp#65\n\nAnd line #100 as well.\n\nAnd if you fix this, you should see the deqp test that frank cited in the bug description fail.",
      "parentUuid": "fa884ed9_a0b1bce5",
      "revId": "217f12e54b6e87b75cf9898fbb25289e4979a2e6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "90255835_7a5d96cd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-10-07T18:56:43Z",
      "side": 1,
      "message": "Do we use newer QC drivers now? I thought our Pixel bots where still taking this path. Should we remove the workaround then?",
      "parentUuid": "dd51c36e_7701eba5",
      "revId": "217f12e54b6e87b75cf9898fbb25289e4979a2e6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6a8e1baf_93304905",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2021-10-07T20:34:57Z",
      "side": 1,
      "message": "Let me verify with public android build and if that is newer than the workaround version, we should remove the workaround.",
      "parentUuid": "90255835_7a5d96cd",
      "revId": "217f12e54b6e87b75cf9898fbb25289e4979a2e6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e96d4a71_c98701ae",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1175714
      },
      "writtenOn": "2021-10-07T20:35:39Z",
      "side": 1,
      "message": "Thanks for the tips---test fails after editing spec constants cpp. Passes again if I set the render target width and height to 4, fails if width 4 and height 2.",
      "parentUuid": "90255835_7a5d96cd",
      "revId": "217f12e54b6e87b75cf9898fbb25289e4979a2e6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "19e4be5e_74b3ad4f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1175714
      },
      "writtenOn": "2021-10-07T20:45:24Z",
      "side": 1,
      "message": "Getting very interesting results for 270 vs 90 in the 2x1 case:\n\n```\n90:\n\niterate: ref img colr at x y 0 0 would be 0.250000 0.500000 0.375000 1.000000\niterate: ref img colr at x y 1 0 would be 0.750000 0.500000 0.625000 1.000000\nintThresholdCompare: result at 0 0 is 0.250980 0.498039 0.376471 1.000000\nintThresholdCompare: result at 1 0 is 0.749020 0.498039 0.623529 1.000000\n\n270:\n\niterate: ref img colr at x y 0 0 would be 0.250000 0.500000 0.375000 1.000000\niterate: ref img colr at x y 1 0 would be 0.750000 0.500000 0.625000 1.000000\nintThresholdCompare: result at 0 0 is 0.000000 1.000000 0.376471 1.000000\nintThresholdCompare: pixel at 0 0 not ok\nintThresholdCompare: result at 1 0 is 0.250980 1.000000 0.623529 1.000000\nintThresholdCompare: pixel at 1 0 not ok\n```",
      "parentUuid": "e96d4a71_c98701ae",
      "revId": "217f12e54b6e87b75cf9898fbb25289e4979a2e6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3a4f48a0_a10f77b7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1175714
      },
      "writtenOn": "2021-10-07T22:30:04Z",
      "side": 1,
      "message": "Latest notes:\n\n1. drawableSize seems to be getting the correct values at runtime (w \u003d 2 h \u003d 1)\n2. If I change flipXY in the Flipped270 case from -1, -1 to 1, 1 I almost get the intended result after making half render area consistent; only the red channel is flipped. However, 1, -1 and -1, 1 seem to make it output garbage again.\n3. The key calculation is in TranslatorVulkan.cpp RotateAndFlipBuiltinVariable. (fragRotmatrix * origFragCoord - pivot) * flipXY + pivot.\n4. Ruled out pivot being wrong. flipXY might be wrong. Or fragRotMatrix is wrong.",
      "parentUuid": "19e4be5e_74b3ad4f",
      "revId": "217f12e54b6e87b75cf9898fbb25289e4979a2e6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}