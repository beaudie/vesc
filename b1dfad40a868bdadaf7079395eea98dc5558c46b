{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f3055a19_fe354f83",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1165541
      },
      "writtenOn": "2022-06-08T08:39:00Z",
      "side": 1,
      "message": "+Jamie/Geoff\nBefore we go deeper, I believe anglers ever tried this path or had some investigation. I\u0027d like to hear Jamie/Geoff\u0027s opinions (please see my below comment) that whether we are in the right way to support timestamps on d3d11 since there is clear annotation that d3d11 doesn\u0027t support timestamps in code. \n",
      "revId": "b1dfad40a868bdadaf7079395eea98dc5558c46b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "75cd3100_89d9c90e",
        "filename": "src/libANGLE/renderer/d3d/d3d11/Query11.cpp",
        "patchSetId": 2
      },
      "lineNbr": 111,
      "author": {
        "id": 1165541
      },
      "writtenOn": "2022-06-08T08:39:00Z",
      "side": 1,
      "message": "According to https://docs.microsoft.com/en-us/windows/win32/api/d3d11/ne-d3d11-d3d11_query, This kind of query (D3D11_QUERY_TIMESTAMP) is only useful if two timestamp queries are done in the middle of a D3D11_QUERY_TIMESTAMP_DISJOINT query. However, you are putting only one timestamp in the middle of a D3D11_QUERY_TIMESTAMP_DISJOINT query. So can two timestamps be compared?\n\nAlso see annotation in [1]. \u0027D3D11 doesn\u0027t support GL timestamp queries as D3D timestamps are not guaranteed to have any sort of continuity outside of a disjoint timestamp query block\u0027. So maybe we should firstly figure out whether we can use it like you did.",
      "revId": "b1dfad40a868bdadaf7079395eea98dc5558c46b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5e3111f0_85f389a7",
        "filename": "src/libANGLE/renderer/d3d/d3d11/Query11.cpp",
        "patchSetId": 2
      },
      "lineNbr": 111,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2022-06-13T20:43:01Z",
      "side": 1,
      "message": "Agreed, this was the reason we didn\u0027t support them in D3D. It would be good to know if that has changed.",
      "parentUuid": "75cd3100_89d9c90e",
      "revId": "b1dfad40a868bdadaf7079395eea98dc5558c46b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ae4c992_f9c29267",
        "filename": "src/libANGLE/renderer/d3d/d3d11/Query11.cpp",
        "patchSetId": 2
      },
      "lineNbr": 111,
      "author": {
        "id": 1139801
      },
      "writtenOn": "2022-07-07T08:27:04Z",
      "side": 1,
      "message": "Hi, Geoff, I wrote email to rafael.Cintron@microsoft.com, he helped to confirm that if all timestamps happen in the same disjoint query(with disjoint carefully checked), the data are comparable. The confirmed logic is as below:\n{\n  g_pContext-\u003eBegin(pQueryDisjoint);\n  // Multiple  timestamps inside one disjoint.\n  g_pContext-\u003eEnd(pQueryTimestamp1);\n  RunComputeShader();\n  g_pContext-\u003eEnd(pQueryTimestamp2);\n  RunComputeShader();\n  g_pContext-\u003eEnd(pQueryTimestamp3);\n  RunComputeShader();\n  g_pContext-\u003eEnd(pQueryTimestamp4);\n  RunComputeShader();\n   â€¦\n  g_pContext-\u003eEnd(pQueryTimestampEnd);\n  g_pContext-\u003eEnd(pQueryDisjoint);\n}\n\nSo could you please help to review the new change?",
      "parentUuid": "5e3111f0_85f389a7",
      "revId": "b1dfad40a868bdadaf7079395eea98dc5558c46b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b0cfe12a_c243a4f1",
        "filename": "src/libANGLE/renderer/d3d/d3d11/Query11.cpp",
        "patchSetId": 2
      },
      "lineNbr": 111,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2022-07-21T20:55:15Z",
      "side": 1,
      "message": "Unfortunately, I don\u0027t think this helps. In GL, the user can keep calling glQueryCounterEXT over many frames and expect that the timestamps are all comparable. For this to work in D3D11, we would need to have a D3D11_QUERY_TIMESTAMP_DISJOINT query that runs forever and that means that we also can\u0027t check for disjoint events.\n\nEvery time we start and stop a D3D11_QUERY_TIMESTAMP_DISJOINT query, we would have to insert a disjoint in between because we don\u0027t know if the timestamps before and after are comparable. I think this would be bad experience for users, disjoints are expected to happen very rarely and users are often not prepared to handle them.",
      "parentUuid": "4ae4c992_f9c29267",
      "revId": "b1dfad40a868bdadaf7079395eea98dc5558c46b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0efe5eba_7be42cf3",
        "filename": "src/tests/gl_tests/TimerQueriesTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 520,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-06-08T13:43:18Z",
      "side": 1,
      "message": "You don\u0027t need to create your own display and do any of this. Just create the test suite like `TimerQueriesTest` using the test fixture. Then instantiate it with something like this:\n\n```\nANGLE_INSTANTIATE_TEST_ES3_AND(TimerQueriesTest, ES3_D3D11().disable(Feature::EnableTimestampQueries));\n```\n\nThat will test with both ES3_D3D11 with default settings for timestamp queries, as well as ES3_D3D11 with this feature disabled.",
      "range": {
        "startLine": 513,
        "startChar": 0,
        "endLine": 520,
        "endChar": 9
      },
      "revId": "b1dfad40a868bdadaf7079395eea98dc5558c46b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0ca2a6c7_2e1cc81d",
        "filename": "src/tests/gl_tests/TimerQueriesTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 520,
      "author": {
        "id": 1139801
      },
      "writtenOn": "2022-06-10T06:57:45Z",
      "side": 1,
      "message": "Done, Thanks!",
      "parentUuid": "0efe5eba_7be42cf3",
      "range": {
        "startLine": 513,
        "startChar": 0,
        "endLine": 520,
        "endChar": 9
      },
      "revId": "b1dfad40a868bdadaf7079395eea98dc5558c46b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}