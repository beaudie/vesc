{
  "comments": [
    {
      "key": {
        "uuid": "99253cfd_9db33709",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2020-09-13T23:45:19Z",
      "side": 1,
      "message": "PTAL",
      "revId": "b26f961d91fb578dc6dc1cb44761a1f346d6414e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "92b94ed6_028a532e",
        "filename": "src/libANGLE/renderer/vulkan/DisplayVk.h",
        "patchSetId": 6
      },
      "lineNbr": 59,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-09-14T01:11:20Z",
      "side": 1,
      "message": "nit: no need to inline this",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 59,
        "endChar": 0
      },
      "revId": "b26f961d91fb578dc6dc1cb44761a1f346d6414e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bb4770c6_2fd2d2e7",
        "filename": "src/libANGLE/renderer/vulkan/DisplayVk.h",
        "patchSetId": 6
      },
      "lineNbr": 59,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2020-09-14T15:04:05Z",
      "side": 1,
      "message": "Done, but is there a cost if it were inlined?",
      "parentUuid": "92b94ed6_028a532e",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 59,
        "endChar": 0
      },
      "revId": "b26f961d91fb578dc6dc1cb44761a1f346d6414e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "beaf32f3_0c678434",
        "filename": "src/libANGLE/renderer/vulkan/DisplayVk.h",
        "patchSetId": 6
      },
      "lineNbr": 80,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-09-14T01:11:20Z",
      "side": 1,
      "message": "nit: no need to inline this either - the empty check should be the only item that consistently gets hit.",
      "range": {
        "startLine": 60,
        "startChar": 0,
        "endLine": 80,
        "endChar": 5
      },
      "revId": "b26f961d91fb578dc6dc1cb44761a1f346d6414e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f9bece77_b8470e58",
        "filename": "src/libANGLE/renderer/vulkan/DisplayVk.h",
        "patchSetId": 6
      },
      "lineNbr": 80,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2020-09-14T15:04:05Z",
      "side": 1,
      "message": "Done, but is there a cost if it were inlined?",
      "parentUuid": "beaf32f3_0c678434",
      "range": {
        "startLine": 60,
        "startChar": 0,
        "endLine": 80,
        "endChar": 5
      },
      "revId": "b26f961d91fb578dc6dc1cb44761a1f346d6414e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c2b98223_97750719",
        "filename": "src/libANGLE/renderer/vulkan/ResourceVk.h",
        "patchSetId": 6
      },
      "lineNbr": 148,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-09-14T01:11:20Z",
      "side": 1,
      "message": "avoiding storing this pointer will be important as it\u0027s on every object. what are the points of code that need access to the ContextVk?",
      "range": {
        "startLine": 148,
        "startChar": 4,
        "endLine": 148,
        "endChar": 30
      },
      "revId": "b26f961d91fb578dc6dc1cb44761a1f346d6414e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3d13fb67_75e517f6",
        "filename": "src/libANGLE/renderer/vulkan/ResourceVk.h",
        "patchSetId": 6
      },
      "lineNbr": 148,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2020-09-14T15:04:05Z",
      "side": 1,
      "message": "\u003e as it\u0027s on every object\n\n\"ResourceUseList\" is only stored in ContextVk AFAICT, what other objects did you have in mind?\n\n\u003e what are the points of code that need access to the ContextVk?\n\nwe need access to \"ShareGroupVk\" to call \"mShareGroup-\u003eacquireSharedResouceUse\" and \"mShareGroup-\u003ereleaseSharedResouceUse\" from \"ResourceUseList::add\" and \"ResourceUseList::releaseResourceUse*\" respectively",
      "parentUuid": "c2b98223_97750719",
      "range": {
        "startLine": 148,
        "startChar": 4,
        "endLine": 148,
        "endChar": 30
      },
      "revId": "b26f961d91fb578dc6dc1cb44761a1f346d6414e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a9f821ae_136bd332",
        "filename": "src/libANGLE/renderer/vulkan/ResourceVk.h",
        "patchSetId": 6
      },
      "lineNbr": 148,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-09-14T16:52:45Z",
      "side": 1,
      "message": "Right. My question is why can\u0027t you pass this to release/add? i.e. where is it hard to get a ContextVk (by extension, ShareGroupVk).\n\nIf you need access in something like SurfaceVk there are some tricks we can do. If you don\u0027t need access there it might be easy.",
      "parentUuid": "3d13fb67_75e517f6",
      "range": {
        "startLine": 148,
        "startChar": 4,
        "endLine": 148,
        "endChar": 30
      },
      "revId": "b26f961d91fb578dc6dc1cb44761a1f346d6414e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c7bc2b75_b7b63b26",
        "filename": "src/libANGLE/renderer/vulkan/ResourceVk.h",
        "patchSetId": 6
      },
      "lineNbr": 148,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2020-09-14T17:45:59Z",
      "side": 1,
      "message": "thats a lot of code change, esp. in things like \"CommandBufferHelper::[buffer, image][Read, Write]\" where resourcelist is passed in instead of context. Given that most apps are single context i am not sure the cost of storing a pointer outweighs changing all these function prototypes. what am i missing?",
      "parentUuid": "a9f821ae_136bd332",
      "range": {
        "startLine": 148,
        "startChar": 4,
        "endLine": 148,
        "endChar": 30
      },
      "revId": "b26f961d91fb578dc6dc1cb44761a1f346d6414e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "16febabc_07a6b481",
        "filename": "src/libANGLE/renderer/vulkan/ResourceVk.h",
        "patchSetId": 6
      },
      "lineNbr": 148,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-09-14T17:50:53Z",
      "side": 1,
      "message": "It\u0027s ANGLE\u0027s design goal to not cache redundant except for measurable performance gains. Are you concerned about just editing a lot of code or about regression CPU perf? We\u0027ve definitely gone to great lengths to avoid caching things before.",
      "parentUuid": "c7bc2b75_b7b63b26",
      "range": {
        "startLine": 148,
        "startChar": 4,
        "endLine": 148,
        "endChar": 30
      },
      "revId": "b26f961d91fb578dc6dc1cb44761a1f346d6414e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ab4ed1e7_5901c77c",
        "filename": "src/libANGLE/renderer/vulkan/ResourceVk.h",
        "patchSetId": 6
      },
      "lineNbr": 148,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2020-09-14T17:55:31Z",
      "side": 1,
      "message": "\u003e Are you concerned about just editing a lot of code or about regression CPU perf?\n\nyes, worried about large amount of code changes not necessarily perf.\n\nok will take a stab at it and upload another patchset",
      "parentUuid": "16febabc_07a6b481",
      "range": {
        "startLine": 148,
        "startChar": 4,
        "endLine": 148,
        "endChar": 30
      },
      "revId": "b26f961d91fb578dc6dc1cb44761a1f346d6414e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5afa344f_d5712c8a",
        "filename": "src/libANGLE/renderer/vulkan/ResourceVk.h",
        "patchSetId": 6
      },
      "lineNbr": 148,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-09-14T18:11:32Z",
      "side": 1,
      "message": "OK, sounds good. If you like to keep this change smaller - make a split change that starts piping the ContextVk pointers around first, then rebase this change on top of it.",
      "parentUuid": "ab4ed1e7_5901c77c",
      "range": {
        "startLine": 148,
        "startChar": 4,
        "endLine": 148,
        "endChar": 30
      },
      "revId": "b26f961d91fb578dc6dc1cb44761a1f346d6414e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}