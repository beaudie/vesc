{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "4c36ca6f_c0f5188b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-05-01T01:52:52Z",
      "side": 1,
      "message": "Thanks, re-LGTM",
      "revId": "a729aa01c4b0bbccc33f651b72fb2e39c28aa941",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cc865339_4fe2dd03",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-05-02T11:25:55Z",
      "side": 1,
      "message": "Hey Mohan, thanks for contributing the test. I have a recommendation for an alternate fix.\n\nWe have tracking for null arrays already in VertexArray.cpp. It looks like the bug is that we don\u0027t set cache variable up initially entirely flagged on for every vertex attribute. Can you initialize mNullPointerClientMemoryAttribsMask in VertexArrayState::VertexArrayState by calling .set() (near mClientMemoryAttribsMask.set()) and seeing if that also passes the test and CQ?",
      "revId": "a729aa01c4b0bbccc33f651b72fb2e39c28aa941",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f15d3b7b_27a7b37e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2022-05-02T18:26:21Z",
      "side": 1,
      "message": "but the point of this change was to NOT generate any error on draw, as the spec states, the data uploaded is undefined but doesnt say anything about draw generating an error. Could you elaborate on why we need to generate an error during drawarrays?",
      "parentUuid": "cc865339_4fe2dd03",
      "revId": "a729aa01c4b0bbccc33f651b72fb2e39c28aa941",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0297d257_e3239d51",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-05-02T19:14:17Z",
      "side": 1,
      "message": "it\u0027s more than undefined results if ANGLE tries to read from an invalid pointer. from a GLES driver\u0027s perspective, there\u0027s no different between nullptr and any other invalid pointer. this can lead to any result including program termination.",
      "parentUuid": "f15d3b7b_27a7b37e",
      "revId": "a729aa01c4b0bbccc33f651b72fb2e39c28aa941",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eec2715b_497c649e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-05-02T19:14:34Z",
      "side": 1,
      "message": "no difference**",
      "parentUuid": "0297d257_e3239d51",
      "revId": "a729aa01c4b0bbccc33f651b72fb2e39c28aa941",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc363e17_a98e23bf",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2022-05-02T21:07:24Z",
      "side": 1,
      "message": "\u003e it\u0027s more than undefined results if ANGLE tries to read from an invalid pointer\n\nthat is implementation issue and not spec related, right?\n\n\u003e this can lead to any result including program termination.\n\nIt is undefined behavior but spec **doesn\u0027t** explicitly call out \"up to and including program termination\". So i think it would be incorrect to terminate the program and it would be invalid, according to spec, to generate an error during drawarrays.",
      "parentUuid": "eec2715b_497c649e",
      "revId": "a729aa01c4b0bbccc33f651b72fb2e39c28aa941",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a2c1dac9_76763ad1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-05-03T12:53:17Z",
      "side": 1,
      "message": "Program termination here is totally a valid outcome. Imagine if I passed in a raw value of 0x1 to glVertexAttribPointer, enabled the array with no buffer bound, and call glDrawArrays. ANGLE tries to read from this address, and crashes. My suggestion to you is that there\u0027s no difference from the OpenGL ES spec\u0027s perspective between 0x0 and 0x1, or any other invalid pointer. Because 0x0 is a common programming error, ANGLE does a special case for 0x0 and we return an error. This is valid, because UB.\n\nI couldn\u0027t find a specific wording in the spec for invalid pointers. If you like a clarification I recommend you or I file a spec issue here:\n\nhttps://gitlab.khronos.org/opengl/API/-/issues\n\nHappy to bring it up for clarification at the WG if you file the issue, as I attend the meetings.",
      "parentUuid": "fc363e17_a98e23bf",
      "revId": "a729aa01c4b0bbccc33f651b72fb2e39c28aa941",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bec52ffc_00e5c269",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2022-05-03T18:36:52Z",
      "side": 1,
      "message": "\u003e My suggestion to you is that there\u0027s no difference from the OpenGL ES spec\u0027s perspective between 0x0 and 0x1, or any other invalid pointer\n\nok, do not have confirmation if the app we saw crash can handle error in draw arrays but will land this for now since it wont crash the app.\n\n\u003e Happy to bring it up for clarification at the WG if you file the issue, as I attend the meetings.\n\nyes please",
      "parentUuid": "a2c1dac9_76763ad1",
      "revId": "a729aa01c4b0bbccc33f651b72fb2e39c28aa941",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}