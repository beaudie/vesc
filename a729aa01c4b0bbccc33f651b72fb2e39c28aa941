{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "4c36ca6f_c0f5188b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-05-01T01:52:52Z",
      "side": 1,
      "message": "Thanks, re-LGTM",
      "revId": "a729aa01c4b0bbccc33f651b72fb2e39c28aa941",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cc865339_4fe2dd03",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-05-02T11:25:55Z",
      "side": 1,
      "message": "Hey Mohan, thanks for contributing the test. I have a recommendation for an alternate fix.\n\nWe have tracking for null arrays already in VertexArray.cpp. It looks like the bug is that we don\u0027t set cache variable up initially entirely flagged on for every vertex attribute. Can you initialize mNullPointerClientMemoryAttribsMask in VertexArrayState::VertexArrayState by calling .set() (near mClientMemoryAttribsMask.set()) and seeing if that also passes the test and CQ?",
      "revId": "a729aa01c4b0bbccc33f651b72fb2e39c28aa941",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f15d3b7b_27a7b37e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2022-05-02T18:26:21Z",
      "side": 1,
      "message": "but the point of this change was to NOT generate any error on draw, as the spec states, the data uploaded is undefined but doesnt say anything about draw generating an error. Could you elaborate on why we need to generate an error during drawarrays?",
      "parentUuid": "cc865339_4fe2dd03",
      "revId": "a729aa01c4b0bbccc33f651b72fb2e39c28aa941",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0297d257_e3239d51",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-05-02T19:14:17Z",
      "side": 1,
      "message": "it\u0027s more than undefined results if ANGLE tries to read from an invalid pointer. from a GLES driver\u0027s perspective, there\u0027s no different between nullptr and any other invalid pointer. this can lead to any result including program termination.",
      "parentUuid": "f15d3b7b_27a7b37e",
      "revId": "a729aa01c4b0bbccc33f651b72fb2e39c28aa941",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}