{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "db1a2cb7_821dd008",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 20
      },
      "lineNbr": 0,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2022-01-04T22:27:01Z",
      "side": 1,
      "message": "Also swap reviewer while Ian is out.",
      "revId": "e187488bfc99b9d5ce8558d89af9a3a40c9ebba2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d5c31003_1bb473ba",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 20
      },
      "lineNbr": 4667,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-01-03T16:59:06Z",
      "side": 1,
      "message": "This name is no longer representative (because mStagingBuffer is removed).\n\nActually what\u0027s the point of this function removing only staged buffer updates but not others? I think this should just be turned into `releaseStagedUpdates` and remove all updates.\n\nCurrent code is probably a relic from the time we only had buffer updates. In many places, this is called right after releasing the image, so a good clean up would also be to just make it called automatically from `releaseImage()` and `releaseImageFromShareContexts()`",
      "range": {
        "startLine": 4667,
        "startChar": 18,
        "endLine": 4667,
        "endChar": 38
      },
      "revId": "e187488bfc99b9d5ce8558d89af9a3a40c9ebba2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4d929b1b_768cdcb4",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 20
      },
      "lineNbr": 4667,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2022-01-04T22:27:01Z",
      "side": 1,
      "message": "Totally agree. But lets do that in a separate CL to contain risk, given that clean up is not directly related to this CL.",
      "parentUuid": "d5c31003_1bb473ba",
      "range": {
        "startLine": 4667,
        "startChar": 18,
        "endLine": 4667,
        "endChar": 38
      },
      "revId": "e187488bfc99b9d5ce8558d89af9a3a40c9ebba2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f1d08702_c992e1f7",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 20
      },
      "lineNbr": 4667,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2022-01-04T22:44:54Z",
      "side": 1,
      "message": "https://chromium-review.googlesource.com/c/angle/angle/+/3367078.\n\nThe thing I worried is some edge cases that when a texture gets redefined, is it okay to lose staged update? But lets deal with that in the separate CL (see the above link).",
      "parentUuid": "4d929b1b_768cdcb4",
      "range": {
        "startLine": 4667,
        "startChar": 18,
        "endLine": 4667,
        "endChar": 38
      },
      "revId": "e187488bfc99b9d5ce8558d89af9a3a40c9ebba2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7e5d053c_1db0a39c",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 20
      },
      "lineNbr": 4667,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-01-05T02:58:43Z",
      "side": 1,
      "message": "Ack (commented on that change). I don\u0027t know why I thought this is only removing buffer updates (it\u0027s removing everything), so the contents are good. Just the function itself that needs renaming (so, no big deal)",
      "parentUuid": "f1d08702_c992e1f7",
      "range": {
        "startLine": 4667,
        "startChar": 18,
        "endLine": 4667,
        "endChar": 38
      },
      "revId": "e187488bfc99b9d5ce8558d89af9a3a40c9ebba2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f09c801a_4df8a461",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 20
      },
      "lineNbr": 2092,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-01-03T16:59:06Z",
      "side": 1,
      "message": "nit: redundant with the type (removing this would also be consistent with the image variant of this).",
      "range": {
        "startLine": 2092,
        "startChar": 52,
        "endLine": 2092,
        "endChar": 62
      },
      "revId": "e187488bfc99b9d5ce8558d89af9a3a40c9ebba2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d972009f_57f18abf",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 20
      },
      "lineNbr": 2092,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2022-01-04T22:27:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f09c801a_4df8a461",
      "range": {
        "startLine": 2092,
        "startChar": 52,
        "endLine": 2092,
        "endChar": 62
      },
      "revId": "e187488bfc99b9d5ce8558d89af9a3a40c9ebba2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a5bf68d2_dbb5c48c",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 20
      },
      "lineNbr": 2128,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-01-03T16:59:06Z",
      "side": 1,
      "message": "nit: You could call this: `refCounted` which then reads like `update.refCounted.buffer`\n\nOr just drop it and use `update.image` and `update.buffer`.",
      "range": {
        "startLine": 2128,
        "startChar": 10,
        "endLine": 2128,
        "endChar": 26
      },
      "revId": "e187488bfc99b9d5ce8558d89af9a3a40c9ebba2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "68ea2038_b02413c5",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 20
      },
      "lineNbr": 2128,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2022-01-04T22:27:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a5bf68d2_dbb5c48c",
      "range": {
        "startLine": 2128,
        "startChar": 10,
        "endLine": 2128,
        "endChar": 26
      },
      "revId": "e187488bfc99b9d5ce8558d89af9a3a40c9ebba2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "11711a36_f2d68c43",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 20
      },
      "lineNbr": 2204,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-01-03T16:59:06Z",
      "side": 1,
      "message": "super nit: C",
      "range": {
        "startLine": 2204,
        "startChar": 37,
        "endLine": 2204,
        "endChar": 38
      },
      "revId": "e187488bfc99b9d5ce8558d89af9a3a40c9ebba2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "43fa0947_29b3f6ce",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 20
      },
      "lineNbr": 2204,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2022-01-04T22:27:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "11711a36_f2d68c43",
      "range": {
        "startLine": 2204,
        "startChar": 37,
        "endLine": 2204,
        "endChar": 38
      },
      "revId": "e187488bfc99b9d5ce8558d89af9a3a40c9ebba2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}