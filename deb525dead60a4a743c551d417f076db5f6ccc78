{
  "comments": [
    {
      "key": {
        "uuid": "7c21d2e1_f58cbb27",
        "filename": "src/libANGLE/Stream.cpp",
        "patchSetId": 5
      },
      "lineNbr": 27,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2016-03-22T17:20:10Z",
      "side": 1,
      "message": "nit: can be part of the initializer list.",
      "range": {
        "startLine": 27,
        "startChar": 4,
        "endLine": 27,
        "endChar": 69
      },
      "revId": "deb525dead60a4a743c551d417f076db5f6ccc78",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7c21d2e1_b5052337",
        "filename": "src/libANGLE/Stream.cpp",
        "patchSetId": 5
      },
      "lineNbr": 72,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2016-03-22T17:20:10Z",
      "side": 1,
      "message": "Instead of implementing these switches here, I would add getters and setters to the Stream class.  The switches then move to the entry point.  We\u0027ve slowly done this with the other classes (Queries, Textures, etc) and helps with the readability of the class.",
      "range": {
        "startLine": 36,
        "startChar": 0,
        "endLine": 72,
        "endChar": 5
      },
      "revId": "deb525dead60a4a743c551d417f076db5f6ccc78",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7c21d2e1_951e1fa4",
        "filename": "src/libANGLE/Stream.h",
        "patchSetId": 5
      },
      "lineNbr": 23,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2016-03-22T17:20:10Z",
      "side": 1,
      "message": "None of these are referenced except AttributeMap.",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 23,
        "endChar": 39
      },
      "revId": "deb525dead60a4a743c551d417f076db5f6ccc78",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7c21d2e1_75fd6b7f",
        "filename": "src/libANGLE/Stream.h",
        "patchSetId": 5
      },
      "lineNbr": 27,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2016-03-22T17:20:10Z",
      "side": 1,
      "message": "Not needed.",
      "range": {
        "startLine": 27,
        "startChar": 0,
        "endLine": 27,
        "endChar": 14
      },
      "revId": "deb525dead60a4a743c551d417f076db5f6ccc78",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7c21d2e1_d50ed784",
        "filename": "src/libANGLE/Stream.h",
        "patchSetId": 5
      },
      "lineNbr": 35,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2016-03-22T17:20:10Z",
      "side": 1,
      "message": "I don\u0027t think any of these are needed.",
      "range": {
        "startLine": 32,
        "startChar": 0,
        "endLine": 35,
        "endChar": 14
      },
      "revId": "deb525dead60a4a743c551d417f076db5f6ccc78",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7c21d2e1_75e44bf7",
        "filename": "src/libANGLE/Stream.h",
        "patchSetId": 5
      },
      "lineNbr": 40,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2016-03-22T17:20:10Z",
      "side": 1,
      "message": "We\u0027ll certainly need a StreamImpl class that the backends will implement.  I think this CL is a good place to add it, even if it is an empty class.  That way all the piping of the Display objects creating them is finished.",
      "range": {
        "startLine": 40,
        "startChar": 4,
        "endLine": 40,
        "endChar": 40
      },
      "revId": "deb525dead60a4a743c551d417f076db5f6ccc78",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7c21d2e1_f582fbc1",
        "filename": "src/libANGLE/validationEGL.cpp",
        "patchSetId": 5
      },
      "lineNbr": 1158,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2016-03-22T17:20:10Z",
      "side": 1,
      "message": "You have a comment explaining why this check is being done above but not here.",
      "range": {
        "startLine": 1155,
        "startChar": 12,
        "endLine": 1158,
        "endChar": 13
      },
      "revId": "deb525dead60a4a743c551d417f076db5f6ccc78",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7c21d2e1_3575b39b",
        "filename": "src/libANGLE/validationEGL.cpp",
        "patchSetId": 5
      },
      "lineNbr": 1221,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2016-03-22T17:20:10Z",
      "side": 1,
      "message": "This logic is repeated a lot.  How about adding a \n\n   ValidateStream(display, stream)\n\nthat does the same check.",
      "range": {
        "startLine": 1206,
        "startChar": 4,
        "endLine": 1221,
        "endChar": 5
      },
      "revId": "deb525dead60a4a743c551d417f076db5f6ccc78",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7c21d2e1_35f81329",
        "filename": "src/tests/egl_tests/EGLStreamTest.cpp",
        "patchSetId": 5
      },
      "lineNbr": 22,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2016-03-22T17:20:10Z",
      "side": 1,
      "message": "Echoing Jamie\u0027s comment about simply using the ANGLETest class\u0027s methods.  It does all of this SetUp and TearDown logic already, you can query the OSWindow and other EGL objects from it.  The ImageTest class uses them, as an example.",
      "range": {
        "startLine": 22,
        "startChar": 29,
        "endLine": 22,
        "endChar": 38
      },
      "revId": "deb525dead60a4a743c551d417f076db5f6ccc78",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}