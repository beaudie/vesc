{
  "comments": [
    {
      "key": {
        "uuid": "e5c66141_b2cf5fac",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-09-16T02:40:14Z",
      "side": 1,
      "message": "I think I did what Jamie asked for.  PTAL.",
      "revId": "352f3804c58f8387ab51e9ba21ffc984541a28c2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "79480834_0a15c1b4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-09-16T03:52:51Z",
      "side": 1,
      "message": "This improves Manhattan score from 4547 to 5112 on pixel4! One caveat is that somehow my on screen number is much higher than Tobine\u0027s number, and my native GLES score is only 3938. So there is a bit too good to be true here that I need to double check. But none the less it improves onscreen number 12%!",
      "revId": "352f3804c58f8387ab51e9ba21ffc984541a28c2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "affb12f7_afe903b9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-09-16T12:43:46Z",
      "side": 1,
      "message": "Thanks, that\u0027s great news Charlie!",
      "parentUuid": "79480834_0a15c1b4",
      "revId": "352f3804c58f8387ab51e9ba21ffc984541a28c2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "042851af_9de72644",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-09-16T13:59:29Z",
      "side": 1,
      "message": "It\u0027s a bit different because it forces the acquire in a few places when I only proposed adding it to the getAttachmentRenderTarget. Although honestly I\u0027m not even sure you need it there if getFramebuffer gets called every time. You could try removing the getAttachmentRenderTarget overload and see if it works.",
      "parentUuid": "e5c66141_b2cf5fac",
      "revId": "352f3804c58f8387ab51e9ba21ffc984541a28c2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "26621790_71841eb7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-09-16T16:58:34Z",
      "side": 1,
      "message": "\u003e It\u0027s a bit different because it forces the acquire in a few places when I only proposed adding it to the getAttachmentRenderTarget.\n\nTrue.  There are cases that weren\u0027t covered (e.g. neither getAttachmentRenderTarget nor getFramebuffer are called).  I\u0027ll list example test names for paths that are needed.\n\n\u003e Although honestly I\u0027m not even sure you need it there if getFramebuffer gets called every time. You could try removing the getAttachmentRenderTarget overload and see if it works.\n\nYes, tried that.  getFramebuffer() is too late with the dirty-bit approach.  ANI updates the RenderTargetVk with the correct ImageHelper and ImageViewHelper.  RenderTargetVk methods are accessed before getFramebuffer().  I\u0027ve removed the ASSERTs at this point, or it would be easy to show.",
      "parentUuid": "042851af_9de72644",
      "revId": "352f3804c58f8387ab51e9ba21ffc984541a28c2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a9b42f5c_6c98b471",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 11
      },
      "lineNbr": 1131,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-09-16T13:59:29Z",
      "side": 1,
      "message": "It isn\u0027t OK to ditch errors here. If you want to process the acquire here you\u0027ll need to switch this to return an error.",
      "range": {
        "startLine": 1131,
        "startChar": 9,
        "endLine": 1131,
        "endChar": 50
      },
      "revId": "352f3804c58f8387ab51e9ba21ffc984541a28c2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "439e16ca_3e7e6ea2",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 11
      },
      "lineNbr": 1131,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-09-16T16:58:34Z",
      "side": 1,
      "message": "This function is only called by an initializer in one the Framebuffer constructors (front-end object).  I\u0027m happy to be shown how to do this differently.  Is it possible to redo that constructor in order to handle an error?",
      "parentUuid": "a9b42f5c_6c98b471",
      "range": {
        "startLine": 1131,
        "startChar": 9,
        "endLine": 1131,
        "endChar": 50
      },
      "revId": "352f3804c58f8387ab51e9ba21ffc984541a28c2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f0a4064_301753bc",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 11
      },
      "lineNbr": 1612,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-09-16T16:47:49Z",
      "side": 1,
      "message": "Does it matter if mDeferredContext (which is the context that calls swap) is different from the context that calls WindowSurfaceVk::getCurrentFramebuffer (where it is been used)? From what I read, it only needs context to get some global object (display/renderer), and send error to if failed. But arguably the error should send to the context that who triggered the call at that time. So the easiest is just pass this contextVk into acquireNextImage so that you can get rid of mDeferedContext.",
      "range": {
        "startLine": 1609,
        "startChar": 4,
        "endLine": 1612,
        "endChar": 5
      },
      "revId": "352f3804c58f8387ab51e9ba21ffc984541a28c2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fe936456_1558da5c",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 11
      },
      "lineNbr": 1612,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-09-16T16:58:34Z",
      "side": 1,
      "message": "My new patchset will attempt to remove this call and the cached context (with ASSERT\u0027s in case there\u0027s a surprise)",
      "parentUuid": "6f0a4064_301753bc",
      "range": {
        "startLine": 1609,
        "startChar": 4,
        "endLine": 1612,
        "endChar": 5
      },
      "revId": "352f3804c58f8387ab51e9ba21ffc984541a28c2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "063ebc54_b43f2bf4",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.h",
        "patchSetId": 11
      },
      "lineNbr": 247,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-09-16T13:59:29Z",
      "side": 1,
      "message": "ideally we wouldn\u0027t need these overloads with removing the cache variable.",
      "range": {
        "startLine": 246,
        "startChar": 0,
        "endLine": 247,
        "endChar": 63
      },
      "revId": "352f3804c58f8387ab51e9ba21ffc984541a28c2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa562663_02ac6a30",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.h",
        "patchSetId": 11
      },
      "lineNbr": 247,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-09-16T16:58:34Z",
      "side": 1,
      "message": "I think the dirty-bit approach allows me to eliminate the first one (will try with ASSERTs to make sure there are no surprises).",
      "parentUuid": "063ebc54_b43f2bf4",
      "range": {
        "startLine": 246,
        "startChar": 0,
        "endLine": 247,
        "endChar": 63
      },
      "revId": "352f3804c58f8387ab51e9ba21ffc984541a28c2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a5214b4_1146787a",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.h",
        "patchSetId": 11
      },
      "lineNbr": 259,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-09-16T13:59:29Z",
      "side": 1,
      "message": "should be in the cpp file please.",
      "range": {
        "startLine": 248,
        "startChar": 0,
        "endLine": 259,
        "endChar": 5
      },
      "revId": "352f3804c58f8387ab51e9ba21ffc984541a28c2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fdec2a7f_4c0f8a59",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.h",
        "patchSetId": 11
      },
      "lineNbr": 259,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-09-16T16:58:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7a5214b4_1146787a",
      "range": {
        "startLine": 248,
        "startChar": 0,
        "endLine": 259,
        "endChar": 5
      },
      "revId": "352f3804c58f8387ab51e9ba21ffc984541a28c2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "03ca1757_e69f3936",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.h",
        "patchSetId": 11
      },
      "lineNbr": 353,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-09-16T16:47:49Z",
      "side": 1,
      "message": "Instead of adding a new boolean to track, could you just use mCurrentSwapchainImageIndex and set it to kSwapCHainImageIndexInvalid (defined to -1) to indicate that current swap chain image is is invalid and needs to be acquired? That way you have one less variable to maintain and code is easier to read as well.",
      "range": {
        "startLine": 353,
        "startChar": 9,
        "endLine": 353,
        "endChar": 25
      },
      "revId": "352f3804c58f8387ab51e9ba21ffc984541a28c2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "164f5093_3ded8d89",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.h",
        "patchSetId": 11
      },
      "lineNbr": 356,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-09-16T13:59:29Z",
      "side": 1,
      "message": "we definitely don\u0027t want to we caching a context or contextVk pointer. You seem to only need the gl Context to get access to the DisplayVk. You can move this egl::Display pointer from Context to gl::State to make it available via ContextVk. Then try passing the ContextVk around directly. Is there a place it\u0027s hard to access?",
      "range": {
        "startLine": 356,
        "startChar": 4,
        "endLine": 356,
        "endChar": 40
      },
      "revId": "352f3804c58f8387ab51e9ba21ffc984541a28c2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2c4abce9_73668ade",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.h",
        "patchSetId": 11
      },
      "lineNbr": 356,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-09-16T16:58:34Z",
      "side": 1,
      "message": "WindowSurfaceVk::getCurrentFramebuffer() is the only place, and I think the dirty-bit processing allows me to delete the call (will test with an ASSERT to ensure that\u0027s correct).",
      "parentUuid": "164f5093_3ded8d89",
      "range": {
        "startLine": 356,
        "startChar": 4,
        "endLine": 356,
        "endChar": 40
      },
      "revId": "352f3804c58f8387ab51e9ba21ffc984541a28c2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}