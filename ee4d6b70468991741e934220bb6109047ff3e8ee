{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5bb34caa_3e5ee5c6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-03-03T03:40:07Z",
      "side": 1,
      "message": "Why is this?   It doesn\u0027t look like you\u0027re adding any new release() calls, so why wasn\u0027t the size check good enough in the first place?\n\nI\u0027m mostly wondering if this is working around a bug or fixing one that was always there to begin with in the DynamicBuffer design.",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 5
      },
      "revId": "ee4d6b70468991741e934220bb6109047ff3e8ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f35734fe_fae84cd0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-03-03T03:40:07Z",
      "side": 1,
      "message": "nit: the life of the application",
      "range": {
        "startLine": 12,
        "startChar": 18,
        "endLine": 12,
        "endChar": 33
      },
      "revId": "ee4d6b70468991741e934220bb6109047ff3e8ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "821534a1_3096f661",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-03-02T21:12:24Z",
      "side": 1,
      "message": "I monitored T-Rex, Manhattan 3.0 and Manhattan 3.1 with this. There are no sources of continuous allocation with or without this change. If this change introduces a handful of sporadic allocations, it\u0027s not discernible.",
      "revId": "ee4d6b70468991741e934220bb6109047ff3e8ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f1d54568_fe1f8fe6",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 2
      },
      "lineNbr": 725,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-03-02T21:45:41Z",
      "side": 1,
      "message": "ShouldReleaseDynamicBuffer ?",
      "range": {
        "startLine": 725,
        "startChar": 5,
        "endLine": 725,
        "endChar": 28
      },
      "revId": "ee4d6b70468991741e934220bb6109047ff3e8ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff76a48f_3942e6b1",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 2
      },
      "lineNbr": 68,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-03-02T21:45:41Z",
      "side": 1,
      "message": "I\u0027d just call these ReleaseBuffers/ReuseBuffers/LimitedReuseBuffers",
      "range": {
        "startLine": 68,
        "startChar": 4,
        "endLine": 68,
        "endChar": 22
      },
      "revId": "ee4d6b70468991741e934220bb6109047ff3e8ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9fdbdc34_afbcf10b",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 2
      },
      "lineNbr": 74,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-03-02T21:45:41Z",
      "side": 1,
      "message": "I\u0027m curious what led you to this design, or if it\u0027s proactive? Would anything change in Manhattan if we took it out? I\u0027d lean to simplifying if so, although not a big deal.",
      "range": {
        "startLine": 72,
        "startChar": 0,
        "endLine": 74,
        "endChar": 28
      },
      "revId": "ee4d6b70468991741e934220bb6109047ff3e8ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "02913f0d_3cb70ee1",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 2
      },
      "lineNbr": 74,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-03-02T22:08:14Z",
      "side": 1,
      "message": "I originally didn\u0027t have this, but it did lead to noticeable allocations both in T-Rex and Manhattan. Noticeable as in one allocation every other frame during some periods.\n\nIt kinda makes sense for the only place it\u0027s used (ContextVk\u0027s texture upload staging buffer shared by all immutable textures), because you know it will be used again in the future (texture streaming), but you also don\u0027t want to have it hold on to too much memory.",
      "parentUuid": "9fdbdc34_afbcf10b",
      "range": {
        "startLine": 72,
        "startChar": 0,
        "endLine": 74,
        "endChar": 28
      },
      "revId": "ee4d6b70468991741e934220bb6109047ff3e8ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}