{
  "comments": [
    {
      "key": {
        "uuid": "d1cc697f_d8c90a98",
        "filename": "src/libANGLE/renderer/gl/egl/FunctionsEGL.cpp",
        "patchSetId": 16
      },
      "lineNbr": 23,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-03-28T20:25:31Z",
      "side": 1,
      "message": "make this a local static method by placing it in a namespace {} block",
      "range": {
        "startLine": 23,
        "startChar": 5,
        "endLine": 23,
        "endChar": 11
      },
      "revId": "ab92bab62094dad95a6e623993b523449f07b3b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d1cc697f_3352175a",
        "filename": "src/libANGLE/renderer/gl/egl/FunctionsEGL.cpp",
        "patchSetId": 16
      },
      "lineNbr": 67,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-03-28T20:25:31Z",
      "side": 1,
      "message": "do we not have PFNEGL types for these? I think Geoff actually wrote some manually for the GL functions, I think we should do that here if we already have a precedent.",
      "range": {
        "startLine": 67,
        "startChar": 4,
        "endLine": 67,
        "endChar": 14
      },
      "revId": "ab92bab62094dad95a6e623993b523449f07b3b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9c4da65c_14d11a1b",
        "filename": "src/libANGLE/renderer/gl/egl/FunctionsEGL.cpp",
        "patchSetId": 16
      },
      "lineNbr": 113,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2016-03-25T01:47:46Z",
      "side": 1,
      "message": "Usually we would use egl::Error, is it not used because it would cause include problems?",
      "revId": "ab92bab62094dad95a6e623993b523449f07b3b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d1cc697f_b8b52613",
        "filename": "src/libANGLE/renderer/gl/egl/FunctionsEGL.cpp",
        "patchSetId": 16
      },
      "lineNbr": 113,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-03-28T20:25:31Z",
      "side": 1,
      "message": "+1 for using egl::Error",
      "parentUuid": "9c4da65c_14d11a1b",
      "revId": "ab92bab62094dad95a6e623993b523449f07b3b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d1cc697f_931843c0",
        "filename": "src/libANGLE/renderer/gl/egl/FunctionsEGL.cpp",
        "patchSetId": 16
      },
      "lineNbr": 131,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-03-28T20:25:31Z",
      "side": 1,
      "message": "I like having patterns like this, but maybe call this ANGLE_GET_PROC_OR_ERROR just to be super safe.",
      "range": {
        "startLine": 131,
        "startChar": 8,
        "endLine": 131,
        "endChar": 25
      },
      "revId": "ab92bab62094dad95a6e623993b523449f07b3b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d1cc697f_38c1166b",
        "filename": "src/libANGLE/renderer/gl/egl/FunctionsEGL.h",
        "patchSetId": 16
      },
      "lineNbr": 77,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-03-28T20:25:31Z",
      "side": 1,
      "message": "nit: each namespace should have a closing comment: // namespace \u003cname\u003e",
      "range": {
        "startLine": 77,
        "startChar": 0,
        "endLine": 77,
        "endChar": 1
      },
      "revId": "ab92bab62094dad95a6e623993b523449f07b3b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d1cc697f_13b19309",
        "filename": "src/libANGLE/renderer/gl/egl/cros/DisplayDRM.cpp",
        "patchSetId": 16
      },
      "lineNbr": 32,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-03-28T20:25:31Z",
      "side": 1,
      "message": "I\u0027d be happier to see you just use string constants for making shaders if at all possible. You figured out a version workaround but that still ends up concatenating the shader into one big line unless you hard code \"\\n\"s, at which point I think it looks better as a string constant.",
      "range": {
        "startLine": 32,
        "startChar": 8,
        "endLine": 32,
        "endChar": 21
      },
      "revId": "ab92bab62094dad95a6e623993b523449f07b3b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d1cc697f_987ea2ee",
        "filename": "src/libANGLE/renderer/gl/egl/cros/DisplayDRM.cpp",
        "patchSetId": 16
      },
      "lineNbr": 34,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-03-28T20:25:31Z",
      "side": 1,
      "message": "can you comment as to what this is and why we define it, which header it might be found it otherwise?",
      "range": {
        "startLine": 34,
        "startChar": 1,
        "endLine": 34,
        "endChar": 7
      },
      "revId": "ab92bab62094dad95a6e623993b523449f07b3b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d1cc697f_53ba3be6",
        "filename": "src/libANGLE/renderer/gl/egl/cros/DisplayDRM.cpp",
        "patchSetId": 16
      },
      "lineNbr": 121,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-03-28T20:25:31Z",
      "side": 1,
      "message": "statics go at the top of the file, and should be \"C\"apitialized. I\u0027d also prefer using a namespace {} block",
      "range": {
        "startLine": 121,
        "startChar": 0,
        "endLine": 121,
        "endChar": 6
      },
      "revId": "ab92bab62094dad95a6e623993b523449f07b3b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9c4da65c_3450ded5",
        "filename": "src/libANGLE/renderer/gl/egl/cros/DisplayDRM.cpp",
        "patchSetId": 16
      },
      "lineNbr": 126,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2016-03-25T01:47:46Z",
      "side": 1,
      "message": "nit: could use egl::Error here.",
      "revId": "ab92bab62094dad95a6e623993b523449f07b3b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9c4da65c_749b46e8",
        "filename": "src/libANGLE/renderer/gl/egl/cros/DisplayDRM.cpp",
        "patchSetId": 16
      },
      "lineNbr": 204,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2016-03-25T01:47:46Z",
      "side": 1,
      "message": "Could you comment somewhere that the framebuffer isn\u0027t created on resize like the others because it is used as the default framebuffer for this surface?",
      "revId": "ab92bab62094dad95a6e623993b523449f07b3b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9c4da65c_d46232a7",
        "filename": "src/libANGLE/renderer/gl/egl/cros/DisplayDRM.cpp",
        "patchSetId": 16
      },
      "lineNbr": 263,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2016-03-25T01:47:46Z",
      "side": 1,
      "message": "unused",
      "range": {
        "startLine": 260,
        "startChar": 0,
        "endLine": 263,
        "endChar": 1
      },
      "revId": "ab92bab62094dad95a6e623993b523449f07b3b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d1cc697f_13c8b36f",
        "filename": "src/libANGLE/renderer/gl/egl/cros/DisplayDRM.cpp",
        "patchSetId": 16
      },
      "lineNbr": 270,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-03-28T20:25:31Z",
      "side": 1,
      "message": "should this also be override?",
      "range": {
        "startLine": 270,
        "startChar": 4,
        "endLine": 270,
        "endChar": 11
      },
      "revId": "ab92bab62094dad95a6e623993b523449f07b3b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d1cc697f_53e15be4",
        "filename": "src/libANGLE/renderer/gl/egl/cros/DisplayDRM.cpp",
        "patchSetId": 16
      },
      "lineNbr": 316,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-03-28T20:25:31Z",
      "side": 1,
      "message": "same comment about local statics",
      "range": {
        "startLine": 316,
        "startChar": 0,
        "endLine": 316,
        "endChar": 6
      },
      "revId": "ab92bab62094dad95a6e623993b523449f07b3b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ca2fa11_d4bcd498",
        "filename": "src/libANGLE/renderer/gl/egl/cros/DisplayDRM.cpp",
        "patchSetId": 16
      },
      "lineNbr": 321,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2016-03-24T21:37:45Z",
      "side": 1,
      "message": "I think the sort order is (usually) such that the first mode is the best, not the last",
      "range": {
        "startLine": 321,
        "startChar": 57,
        "endLine": 321,
        "endChar": 74
      },
      "revId": "ab92bab62094dad95a6e623993b523449f07b3b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d1cc697f_93ebe3c4",
        "filename": "src/libANGLE/renderer/gl/egl/cros/DisplayDRM.cpp",
        "patchSetId": 16
      },
      "lineNbr": 333,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-03-28T20:25:31Z",
      "side": 1,
      "message": "same comment",
      "range": {
        "startLine": 333,
        "startChar": 0,
        "endLine": 333,
        "endChar": 6
      },
      "revId": "ab92bab62094dad95a6e623993b523449f07b3b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d1cc697f_33dcd72d",
        "filename": "src/libANGLE/renderer/gl/egl/cros/DisplayDRM.cpp",
        "patchSetId": 16
      },
      "lineNbr": 435,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-03-28T20:25:31Z",
      "side": 1,
      "message": "nit: I feel like for a list like this, with no grouping or pairs, we should be okay using the default formatting. remove the clang-format",
      "range": {
        "startLine": 435,
        "startChar": 4,
        "endLine": 435,
        "endChar": 23
      },
      "revId": "ab92bab62094dad95a6e623993b523449f07b3b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ca2fa11_884d0b40",
        "filename": "src/libANGLE/renderer/gl/egl/cros/DisplayDRM.cpp",
        "patchSetId": 16
      },
      "lineNbr": 511,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2016-03-24T22:09:17Z",
      "side": 1,
      "message": "I think if you just have:\nmUnused \u003d mScanning;\nmScanning \u003d mPending;\nmPending \u003d mDrawing;\nmDrawing \u003d nullptr;\n\nin the end of presentScreen, it would be more clear, and you can get rid of pageFlipHandler.",
      "range": {
        "startLine": 511,
        "startChar": 0,
        "endLine": 511,
        "endChar": 68
      },
      "revId": "ab92bab62094dad95a6e623993b523449f07b3b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ca2fa11_08a47be1",
        "filename": "src/libANGLE/renderer/gl/egl/cros/DisplayDRM.cpp",
        "patchSetId": 16
      },
      "lineNbr": 511,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2016-03-24T22:46:32Z",
      "side": 1,
      "message": "Thought about this a bit more, and indeed, these changes happen simultaneously.\nIf !mPending, then pageFlipHandler is not called, but it\u0027s still the same, as mUnused and mScanning are null anyway.\nIf mPending, and the previous flip completed, then the whole queue shifts.\nIf mPendind and the the previous flip didn\u0027t complete, then no change.",
      "parentUuid": "3ca2fa11_884d0b40",
      "range": {
        "startLine": 511,
        "startChar": 0,
        "endLine": 511,
        "endChar": 68
      },
      "revId": "ab92bab62094dad95a6e623993b523449f07b3b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ca2fa11_e8312fe9",
        "filename": "src/libANGLE/renderer/gl/egl/cros/DisplayDRM.cpp",
        "patchSetId": 16
      },
      "lineNbr": 548,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2016-03-24T22:09:17Z",
      "side": 1,
      "message": "Change to assert, it\u0027s more clear this way.",
      "range": {
        "startLine": 548,
        "startChar": 4,
        "endLine": 548,
        "endChar": 6
      },
      "revId": "ab92bab62094dad95a6e623993b523449f07b3b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ca2fa11_084f5b0b",
        "filename": "src/libANGLE/renderer/gl/egl/cros/DisplayDRM.cpp",
        "patchSetId": 16
      },
      "lineNbr": 548,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2016-03-24T22:46:32Z",
      "side": 1,
      "message": "Sorry, I forgot that you do not poll indefinitely, but just check if the previous flip completed already.\nAt least assert(mDrawing), as this is only called from drawBuffer, which would set mDrawing.\nAnd if you decide to simplify pageFlipHandler, then you can just check for (pfd.revents \u0026 POLLIN) instead of !mPending.",
      "parentUuid": "3ca2fa11_e8312fe9",
      "range": {
        "startLine": 548,
        "startChar": 4,
        "endLine": 548,
        "endChar": 6
      },
      "revId": "ab92bab62094dad95a6e623993b523449f07b3b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ca2fa11_776fe2ca",
        "filename": "src/libANGLE/renderer/gl/egl/cros/DisplayDRM.cpp",
        "patchSetId": 16
      },
      "lineNbr": 570,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2016-03-24T21:37:45Z",
      "side": 1,
      "message": "Is it possible to refactor CompileProgram() from shader_utils so it can be used both here and from samples?",
      "range": {
        "startLine": 570,
        "startChar": 19,
        "endLine": 570,
        "endChar": 29
      },
      "revId": "ab92bab62094dad95a6e623993b523449f07b3b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ca2fa11_37539ae5",
        "filename": "src/libANGLE/renderer/gl/egl/cros/DisplayDRM.cpp",
        "patchSetId": 16
      },
      "lineNbr": 576,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2016-03-24T21:37:45Z",
      "side": 1,
      "message": "Is there some ANGLE coding standard for this?",
      "range": {
        "startLine": 576,
        "startChar": 1,
        "endLine": 576,
        "endChar": 10
      },
      "revId": "ab92bab62094dad95a6e623993b523449f07b3b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9c4da65c_94542aa0",
        "filename": "src/libANGLE/renderer/gl/egl/cros/DisplayDRM.cpp",
        "patchSetId": 16
      },
      "lineNbr": 576,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2016-03-25T01:47:46Z",
      "side": 1,
      "message": "I know of only one ifdefed out test code in OSWindow so I don\u0027t think we have a standard. I\u0027m slightly in favor of defines myself.",
      "parentUuid": "3ca2fa11_37539ae5",
      "range": {
        "startLine": 576,
        "startChar": 1,
        "endLine": 576,
        "endChar": 10
      },
      "revId": "ab92bab62094dad95a6e623993b523449f07b3b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d1cc697f_9302035b",
        "filename": "src/libANGLE/renderer/gl/egl/cros/DisplayDRM.cpp",
        "patchSetId": 16
      },
      "lineNbr": 595,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-03-28T20:25:31Z",
      "side": 1,
      "message": "again I\u0027d rather see these simply use string constants and do away with the clang format override",
      "range": {
        "startLine": 595,
        "startChar": 8,
        "endLine": 595,
        "endChar": 27
      },
      "revId": "ab92bab62094dad95a6e623993b523449f07b3b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ca2fa11_f753d20b",
        "filename": "src/libANGLE/renderer/gl/egl/cros/DisplayDRM.cpp",
        "patchSetId": 16
      },
      "lineNbr": 718,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2016-03-24T21:37:45Z",
      "side": 1,
      "message": "Unused?",
      "range": {
        "startLine": 718,
        "startChar": 17,
        "endLine": 718,
        "endChar": 29
      },
      "revId": "ab92bab62094dad95a6e623993b523449f07b3b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ca2fa11_a813a7ad",
        "filename": "src/libANGLE/renderer/gl/egl/cros/DisplayDRM.cpp",
        "patchSetId": 16
      },
      "lineNbr": 750,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2016-03-24T21:43:12Z",
      "side": 1,
      "message": "I think you never delete these?",
      "range": {
        "startLine": 750,
        "startChar": 23,
        "endLine": 750,
        "endChar": 26
      },
      "revId": "ab92bab62094dad95a6e623993b523449f07b3b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ca2fa11_88486b57",
        "filename": "src/libANGLE/renderer/gl/egl/cros/DisplayDRM.cpp",
        "patchSetId": 16
      },
      "lineNbr": 750,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2016-03-24T22:09:17Z",
      "side": 1,
      "message": "Never mind, I just got confused with all the pointer exchanges.",
      "parentUuid": "3ca2fa11_a813a7ad",
      "range": {
        "startLine": 750,
        "startChar": 23,
        "endLine": 750,
        "endChar": 26
      },
      "revId": "ab92bab62094dad95a6e623993b523449f07b3b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ca2fa11_62939e11",
        "filename": "src/libANGLE/renderer/gl/egl/cros/DisplayDRM.cpp",
        "patchSetId": 16
      },
      "lineNbr": 785,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2016-03-24T21:37:45Z",
      "side": 1,
      "message": "//TODO: find out why\neglClientWaitSyncKHR(display, fence, EGL_SYNC_FLUSH_COMMANDS_BIT_KHR, EGL_FOREVER_KHR)\nhangs here, but works in Chrome.",
      "range": {
        "startLine": 785,
        "startChar": 90,
        "endLine": 785,
        "endChar": 91
      },
      "revId": "ab92bab62094dad95a6e623993b523449f07b3b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d1cc697f_53379b34",
        "filename": "src/libANGLE/renderer/gl/egl/cros/DisplayDRM.cpp",
        "patchSetId": 16
      },
      "lineNbr": 785,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-03-28T20:25:31Z",
      "side": 1,
      "message": "This for loop, with the hard-coded 99 usleep is pretty mysterious, a comment would help.",
      "parentUuid": "3ca2fa11_62939e11",
      "range": {
        "startLine": 785,
        "startChar": 90,
        "endLine": 785,
        "endChar": 91
      },
      "revId": "ab92bab62094dad95a6e623993b523449f07b3b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ca2fa11_bd600be2",
        "filename": "src/libANGLE/renderer/gl/egl/cros/DisplayDRM.cpp",
        "patchSetId": 16
      },
      "lineNbr": 854,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2016-03-24T21:37:45Z",
      "side": 1,
      "message": "Since you don\u0027t support PBuffers, perhaps remove PbufferSurfaceCros class?",
      "range": {
        "startLine": 854,
        "startChar": 4,
        "endLine": 854,
        "endChar": 17
      },
      "revId": "ab92bab62094dad95a6e623993b523449f07b3b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ca2fa11_c226d254",
        "filename": "src/libANGLE/renderer/gl/egl/cros/DisplayDRM.cpp",
        "patchSetId": 16
      },
      "lineNbr": 882,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2016-03-24T21:37:45Z",
      "side": 1,
      "message": "EGL1.5 supports EGL_CONTEXT_MAJOR_VERSION and EGL_CONTEXT_MINOR_VERSION",
      "range": {
        "startLine": 882,
        "startChar": 9,
        "endLine": 882,
        "endChar": 53
      },
      "revId": "ab92bab62094dad95a6e623993b523449f07b3b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ca2fa11_22187604",
        "filename": "src/libANGLE/renderer/gl/egl/cros/DisplayDRM.cpp",
        "patchSetId": 16
      },
      "lineNbr": 897,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2016-03-24T21:37:45Z",
      "side": 1,
      "message": "I believe in this case you are supposed to try only the exact version, not the others.",
      "range": {
        "startLine": 897,
        "startChar": 17,
        "endLine": 897,
        "endChar": 23
      },
      "revId": "ab92bab62094dad95a6e623993b523449f07b3b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9c4da65c_7460a67a",
        "filename": "src/libANGLE/renderer/gl/egl/cros/DisplayDRM.cpp",
        "patchSetId": 16
      },
      "lineNbr": 897,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2016-03-25T01:47:46Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "3ca2fa11_22187604",
      "range": {
        "startLine": 897,
        "startChar": 17,
        "endLine": 897,
        "endChar": 23
      },
      "revId": "ab92bab62094dad95a6e623993b523449f07b3b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ca2fa11_e2af8ec3",
        "filename": "src/libANGLE/renderer/gl/egl/cros/DisplayDRM.cpp",
        "patchSetId": 16
      },
      "lineNbr": 927,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2016-03-24T21:37:45Z",
      "side": 1,
      "message": "Is it OK not to initialize the other members?",
      "revId": "ab92bab62094dad95a6e623993b523449f07b3b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ca2fa11_9d138fae",
        "filename": "src/libANGLE/renderer/gl/egl/cros/DisplayDRM.cpp",
        "patchSetId": 16
      },
      "lineNbr": 950,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2016-03-24T21:37:45Z",
      "side": 1,
      "message": "You had a comment about magic number before, I think it\u0027s a nice idea.",
      "range": {
        "startLine": 950,
        "startChar": 11,
        "endLine": 950,
        "endChar": 15
      },
      "revId": "ab92bab62094dad95a6e623993b523449f07b3b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ca2fa11_7d4ea3b3",
        "filename": "src/libANGLE/renderer/gl/egl/cros/DisplayDRM.cpp",
        "patchSetId": 16
      },
      "lineNbr": 955,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2016-03-24T21:37:45Z",
      "side": 1,
      "message": "fjhenigman@ :)\n\nIf seriously, then \"mEGL.queryString(EGL_VENDOR)\"",
      "revId": "ab92bab62094dad95a6e623993b523449f07b3b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ca2fa11_dd6997fa",
        "filename": "src/libANGLE/renderer/gl/egl/cros/DisplayDRM.cpp",
        "patchSetId": 16
      },
      "lineNbr": 962,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2016-03-24T21:37:45Z",
      "side": 1,
      "message": "Why not forward the waitXXX to native EGL?",
      "revId": "ab92bab62094dad95a6e623993b523449f07b3b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9c4da65c_f453b6b2",
        "filename": "src/libANGLE/renderer/gl/egl/cros/DisplayDRM.cpp",
        "patchSetId": 16
      },
      "lineNbr": 962,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2016-03-25T01:47:46Z",
      "side": 1,
      "message": "Also you might want to have a Buffer::resize call here.",
      "parentUuid": "3ca2fa11_dd6997fa",
      "revId": "ab92bab62094dad95a6e623993b523449f07b3b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ca2fa11_ddea3795",
        "filename": "src/libANGLE/renderer/gl/egl/cros/DisplayDRM.cpp",
        "patchSetId": 16
      },
      "lineNbr": 982,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2016-03-24T21:37:45Z",
      "side": 1,
      "message": "Shouldn\u0027t this check what native EGL supports?",
      "revId": "ab92bab62094dad95a6e623993b523449f07b3b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9c4da65c_34c8de1e",
        "filename": "src/libANGLE/renderer/gl/egl/cros/DisplayDRM.h",
        "patchSetId": 16
      },
      "lineNbr": 40,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2016-03-25T01:47:46Z",
      "side": 1,
      "message": "Unused?",
      "range": {
        "startLine": 28,
        "startChar": 0,
        "endLine": 40,
        "endChar": 2
      },
      "revId": "ab92bab62094dad95a6e623993b523449f07b3b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9c4da65c_b47cce91",
        "filename": "src/libANGLE/renderer/gl/egl/cros/DisplayDRM.h",
        "patchSetId": 16
      },
      "lineNbr": 47,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2016-03-25T01:47:46Z",
      "side": 1,
      "message": "Same as in CrOSWindow.h, can you make these use sized types?",
      "revId": "ab92bab62094dad95a6e623993b523449f07b3b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9c4da65c_f45f3615",
        "filename": "src/libANGLE/renderer/gl/egl/cros/DisplayDRM.h",
        "patchSetId": 16
      },
      "lineNbr": 135,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2016-03-25T01:47:46Z",
      "side": 1,
      "message": "Unused?",
      "range": {
        "startLine": 132,
        "startChar": 0,
        "endLine": 135,
        "endChar": 69
      },
      "revId": "ab92bab62094dad95a6e623993b523449f07b3b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9c4da65c_74c26600",
        "filename": "src/libANGLE/renderer/gl/egl/cros/DisplayDRM.h",
        "patchSetId": 16
      },
      "lineNbr": 176,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2016-03-25T01:47:46Z",
      "side": 1,
      "message": "Unused?",
      "range": {
        "startLine": 163,
        "startChar": 0,
        "endLine": 176,
        "endChar": 29
      },
      "revId": "ab92bab62094dad95a6e623993b523449f07b3b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9c4da65c_741ee650",
        "filename": "src/libANGLE/renderer/gl/egl/cros/PbufferSurfaceCros.cpp",
        "patchSetId": 16
      },
      "lineNbr": 7,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2016-03-25T01:47:46Z",
      "side": 1,
      "message": "Will this every be implemented on ChromeOS?",
      "revId": "ab92bab62094dad95a6e623993b523449f07b3b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ca2fa11_3d537be5",
        "filename": "src/libANGLE/renderer/gl/egl/cros/PbufferSurfaceCros.h",
        "patchSetId": 16
      },
      "lineNbr": 20,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-03-28T20:25:31Z",
      "side": 1,
      "message": "I\u0027d rather see the suffix as \"CrOS\", eg  PbufferSurfaceCrOS, etc. I keep seeing \u0027Cros\u0027 pronounced as \"kroz\" or \"krosse\", and I think now\u0027s the time to change it.",
      "range": {
        "startLine": 20,
        "startChar": 6,
        "endLine": 20,
        "endChar": 24
      },
      "revId": "ab92bab62094dad95a6e623993b523449f07b3b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9c4da65c_7418a653",
        "filename": "src/libANGLE/renderer/gl/egl/cros/WindowSurfaceCros.cpp",
        "patchSetId": 16
      },
      "lineNbr": 74,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2016-03-25T01:47:46Z",
      "side": 1,
      "message": "Unused?",
      "revId": "ab92bab62094dad95a6e623993b523449f07b3b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ca2fa11_9d2b8f1b",
        "filename": "src/libANGLE/renderer/gl/egl/cros/WindowSurfaceCros.h",
        "patchSetId": 16
      },
      "lineNbr": 20,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2016-03-24T21:37:45Z",
      "side": 1,
      "message": "Unused?",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 20,
        "endChar": 21
      },
      "revId": "ab92bab62094dad95a6e623993b523449f07b3b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9c4da65c_94d6eac5",
        "filename": "src/libANGLE/renderer/gl/egl/cros/WindowSurfaceCros.h",
        "patchSetId": 16
      },
      "lineNbr": 48,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2016-03-25T01:47:46Z",
      "side": 1,
      "message": "Unused?",
      "revId": "ab92bab62094dad95a6e623993b523449f07b3b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ca2fa11_5da6471f",
        "filename": "util/cros/CrosPixmap.cpp",
        "patchSetId": 16
      },
      "lineNbr": 7,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2016-03-24T21:37:45Z",
      "side": 1,
      "message": "There will be no pixmaps on ChromeOS, right?\nCan we remove this class?",
      "range": {
        "startLine": 7,
        "startChar": 19,
        "endLine": 7,
        "endChar": 59
      },
      "revId": "ab92bab62094dad95a6e623993b523449f07b3b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9c4da65c_744b46a2",
        "filename": "util/cros/CrosWindow.cpp",
        "patchSetId": 16
      },
      "lineNbr": 7,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2016-03-25T01:47:46Z",
      "side": 1,
      "message": "When you\u0027ll want to finish this class, you might find window_test useful. Also you can add a define to OSWindow to have debug printing of the events.",
      "revId": "ab92bab62094dad95a6e623993b523449f07b3b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9c4da65c_b434ce32",
        "filename": "util/cros/CrosWindow.cpp",
        "patchSetId": 16
      },
      "lineNbr": 40,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2016-03-25T01:47:46Z",
      "side": 1,
      "message": "Is this the regular ChromeOS native window type? I\u0027m not sure on ChromeOS (the only ANGLE user will be Chrome) but on other systems we want to have ANGLE\u0027s native window type match the OS\u0027s native window type.",
      "revId": "ab92bab62094dad95a6e623993b523449f07b3b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d1cc697f_93668323",
        "filename": "util/cros/CrosWindow.h",
        "patchSetId": 16
      },
      "lineNbr": 38,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-03-28T20:25:31Z",
      "side": 1,
      "message": "not sure why you use an anonymous struct but we don\u0027t really use them in ANGLE anywhere that I know - better to define the type and member separately to be style-consistent.",
      "range": {
        "startLine": 38,
        "startChar": 4,
        "endLine": 38,
        "endChar": 10
      },
      "revId": "ab92bab62094dad95a6e623993b523449f07b3b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9c4da65c_f43e560e",
        "filename": "util/cros/CrosWindow.h",
        "patchSetId": 16
      },
      "lineNbr": 40,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2016-03-25T01:47:46Z",
      "side": 1,
      "message": "Since this is read from WindowSurface, it would be nice to have sized int32_t types.",
      "revId": "ab92bab62094dad95a6e623993b523449f07b3b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ca2fa11_dde07748",
        "filename": "util/cros/CrosWindow.h",
        "patchSetId": 16
      },
      "lineNbr": 48,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2016-03-24T21:37:45Z",
      "side": 1,
      "message": "Is it a hack that this struct is the same as DisplayDRM::NativeWindow?",
      "range": {
        "startLine": 48,
        "startChar": 6,
        "endLine": 48,
        "endChar": 13
      },
      "revId": "ab92bab62094dad95a6e623993b523449f07b3b1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}