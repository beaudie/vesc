{
  "comments": [
    {
      "key": {
        "uuid": "950a6dd4_f0b7cbb9",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 5
      },
      "lineNbr": 303,
      "author": {
        "id": 1263724
      },
      "writtenOn": "2020-05-08T20:44:27Z",
      "side": 1,
      "message": "Curious, why does this get VertexShader but ExternalShadersReadOnly  uses PipelineStage::TopOfPipe?\nLooks like it\u0027s related to new data from CPU vs. this one where it\u0027s protecting against changes other shaders made.",
      "revId": "9197795d469118ce03d2f4108e0fc3a39f5360ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fd90fe16_c9d6070d",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 5
      },
      "lineNbr": 303,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-05-08T20:53:05Z",
      "side": 1,
      "message": "This is to tell which bin this barrier should put in. For barrier against single stage, it is single. But for barriers with multiple stages, the question is which bin should the barrier goes in. What I did here is I pick the bin that corresponds to the lowest pipeline stage. For this specific layout, we pick this whenever there are multiple shaders reading it, so the lowest stage is vertex. I can pick TopOfPipe, but I think it would be too strong.",
      "parentUuid": "950a6dd4_f0b7cbb9",
      "revId": "9197795d469118ce03d2f4108e0fc3a39f5360ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8e9ee121_cd2a4351",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 5
      },
      "lineNbr": 573,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-05-08T20:48:28Z",
      "side": 1,
      "message": "This looks like enough to put into a helper function that can be called here and in imageRead().",
      "range": {
        "startLine": 569,
        "startChar": 0,
        "endLine": 573,
        "endChar": 47
      },
      "revId": "9197795d469118ce03d2f4108e0fc3a39f5360ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fd1df940_36d5a037",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 5
      },
      "lineNbr": 573,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-05-08T21:00:37Z",
      "side": 1,
      "message": "You won\u0027t save much lines here though. IMO, this is easier to read rather than have to jump to another helper func to figure out what it is doing. But I will add a helper func if anyone has strong opinion on this.",
      "parentUuid": "8e9ee121_cd2a4351",
      "range": {
        "startLine": 569,
        "startChar": 0,
        "endLine": 573,
        "endChar": 47
      },
      "revId": "9197795d469118ce03d2f4108e0fc3a39f5360ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b02429b4_ba4f8c57",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 5
      },
      "lineNbr": 584,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-05-08T20:48:28Z",
      "side": 1,
      "message": "This should be able to be:\n\n    for (PipelineStage pipelineStage : mPipelineBarrierMask)",
      "range": {
        "startLine": 583,
        "startChar": 0,
        "endLine": 584,
        "endChar": 16
      },
      "revId": "9197795d469118ce03d2f4108e0fc3a39f5360ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ecf9d82b_f60106a9",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 5
      },
      "lineNbr": 584,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-05-08T21:00:37Z",
      "side": 1,
      "message": "The thing is I need \"iter\" to clear bit mask bellow at line 588.",
      "parentUuid": "b02429b4_ba4f8c57",
      "range": {
        "startLine": 583,
        "startChar": 0,
        "endLine": 584,
        "endChar": 16
      },
      "revId": "9197795d469118ce03d2f4108e0fc3a39f5360ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "30d25396_3101c271",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 5
      },
      "lineNbr": 584,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-05-08T23:49:49Z",
      "side": 1,
      "message": "Why doesn\u0027t mPipelineBarrierMask.reset(pipelineStage); work?   Isn\u0027t that what *iter is?",
      "parentUuid": "ecf9d82b_f60106a9",
      "range": {
        "startLine": 583,
        "startChar": 0,
        "endLine": 584,
        "endChar": 16
      },
      "revId": "9197795d469118ce03d2f4108e0fc3a39f5360ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c468352b_616631f5",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2329,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-05-08T20:48:28Z",
      "side": 1,
      "message": "I think this should be called something like \"barrierRequired\" or \"needsBarrier\".",
      "range": {
        "startLine": 2329,
        "startChar": 9,
        "endLine": 2329,
        "endChar": 15
      },
      "revId": "9197795d469118ce03d2f4108e0fc3a39f5360ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6381549b_237d21e8",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2855,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-05-08T20:48:28Z",
      "side": 1,
      "message": "Should this call ImageHelper::isLayoutChangeNecessary()?   Or is that too restrictive?",
      "revId": "9197795d469118ce03d2f4108e0fc3a39f5360ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "acb48c54_151c67e5",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2855,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-05-08T21:00:37Z",
      "side": 1,
      "message": "The caller already calls isLayoutChangeNecessary().",
      "parentUuid": "6381549b_237d21e8",
      "revId": "9197795d469118ce03d2f4108e0fc3a39f5360ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dcc49b8d_5306f060",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2855,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-05-08T23:49:49Z",
      "side": 1,
      "message": "Right.   Why isn\u0027t this checking layoutData.sameLayoutTransitionRequiresBarrier also?   Why is this always assuming a memory barrier is required, when there are ImageMemoryBarrierData entries where sameLayoutTransitionRequiresBarrier is false?",
      "parentUuid": "acb48c54_151c67e5",
      "revId": "9197795d469118ce03d2f4108e0fc3a39f5360ae",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}