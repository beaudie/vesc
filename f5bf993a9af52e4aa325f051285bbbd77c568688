{
  "comments": [
    {
      "key": {
        "uuid": "ce817963_fdc2646d",
        "filename": "include/GLSLANG/ShaderLang.h",
        "patchSetId": 3
      },
      "lineNbr": 230,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2017-06-27T09:12:58Z",
      "side": 1,
      "message": "I think a better name would be: \"SH_INITIALIZE_BUILTINS_FOR_INSTANCED_MULTIVIEW\"",
      "range": {
        "startLine": 230,
        "startChar": 23,
        "endLine": 230,
        "endChar": 72
      },
      "revId": "f5bf993a9af52e4aa325f051285bbbd77c568688",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d579ab32_ed34eaed",
        "filename": "include/GLSLANG/ShaderLang.h",
        "patchSetId": 3
      },
      "lineNbr": 230,
      "author": {
        "id": 1160819
      },
      "writtenOn": "2017-06-27T14:26:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ce817963_fdc2646d",
      "range": {
        "startLine": 230,
        "startChar": 23,
        "endLine": 230,
        "endChar": 72
      },
      "revId": "f5bf993a9af52e4aa325f051285bbbd77c568688",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cc1579ce_6581fbc3",
        "filename": "samples/shader_translator/shader_translator.cpp",
        "patchSetId": 3
      },
      "lineNbr": 217,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2017-06-27T09:12:58Z",
      "side": 1,
      "message": "I think you could just replace what the \"m\" switch does. Even if we\u0027ll keep the SH_TRANSLATE_VIEWID_OVR_TO_UNIFORM around for now, it\u0027s not of much interest at the moment.",
      "revId": "f5bf993a9af52e4aa325f051285bbbd77c568688",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "80fad1de_791e318c",
        "filename": "samples/shader_translator/shader_translator.cpp",
        "patchSetId": 3
      },
      "lineNbr": 217,
      "author": {
        "id": 1160819
      },
      "writtenOn": "2017-06-27T14:26:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cc1579ce_6581fbc3",
      "revId": "f5bf993a9af52e4aa325f051285bbbd77c568688",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf22ae7f_c27ed6e8",
        "filename": "src/compiler.gypi",
        "patchSetId": 3
      },
      "lineNbr": 42,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2017-06-27T09:12:58Z",
      "side": 1,
      "message": "I\u0027d suggest: \"DeclareAndInitBuiltInsForInstancedMultiview\" as a name for the file/AST transform.",
      "revId": "f5bf993a9af52e4aa325f051285bbbd77c568688",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "350b9ccb_356ad853",
        "filename": "src/compiler.gypi",
        "patchSetId": 3
      },
      "lineNbr": 42,
      "author": {
        "id": 1160819
      },
      "writtenOn": "2017-06-27T14:26:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bf22ae7f_c27ed6e8",
      "revId": "f5bf993a9af52e4aa325f051285bbbd77c568688",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8a18ca57_eb15ca71",
        "filename": "src/compiler/translator/Compiler.cpp",
        "patchSetId": 3
      },
      "lineNbr": 422,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2017-06-27T09:12:58Z",
      "side": 1,
      "message": "Why? The initialization of gl_Position and output variables shouldn\u0027t depend on initializing the built-ins for instanced multiview.\n\nJust run the traverser after DeferGlobalInitializers, and there should be no need for this extra complexity for the bookkeeping.",
      "revId": "f5bf993a9af52e4aa325f051285bbbd77c568688",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b4bd54d7_6f413d9f",
        "filename": "src/compiler/translator/Compiler.cpp",
        "patchSetId": 3
      },
      "lineNbr": 422,
      "author": {
        "id": 1160819
      },
      "writtenOn": "2017-06-27T14:26:31Z",
      "side": 1,
      "message": "Yes, keeping track of these should be unnecessary. The only restriction is for this pass to happen before variables are collected. Done.",
      "parentUuid": "8a18ca57_eb15ca71",
      "revId": "f5bf993a9af52e4aa325f051285bbbd77c568688",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e704410b_ede458b4",
        "filename": "src/compiler/translator/DeclareAndInitMultiviewVars.cpp",
        "patchSetId": 3
      },
      "lineNbr": 23,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2017-06-27T09:12:58Z",
      "side": 1,
      "message": "I\u0027d rather use just \"InstanceID\" as the variable name. It will be clear that it\u0027s standing in for gl_InstanceID, since it will have the prefix for internal variables.\n\nYou should also reserve a symbol id for this symbol. It\u0027s a future goal that all user-defined variables in the AST would be guaranteed to have a valid symbol id.",
      "revId": "f5bf993a9af52e4aa325f051285bbbd77c568688",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f64b21fe_aa74ef20",
        "filename": "src/compiler/translator/DeclareAndInitMultiviewVars.cpp",
        "patchSetId": 3
      },
      "lineNbr": 23,
      "author": {
        "id": 1160819
      },
      "writtenOn": "2017-06-27T14:26:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e704410b_ede458b4",
      "revId": "f5bf993a9af52e4aa325f051285bbbd77c568688",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5120c171_f50dc40c",
        "filename": "src/compiler/translator/DeclareAndInitMultiviewVars.cpp",
        "patchSetId": 3
      },
      "lineNbr": 39,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2017-06-27T09:12:58Z",
      "side": 1,
      "message": "These initializers are not \"deferred\" as such, I\u0027d just name this \"initializers\".\n\nShould also move this further down to where it\u0027s first needed.",
      "revId": "f5bf993a9af52e4aa325f051285bbbd77c568688",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7d20aa40_51c463fe",
        "filename": "src/compiler/translator/DeclareAndInitMultiviewVars.cpp",
        "patchSetId": 3
      },
      "lineNbr": 39,
      "author": {
        "id": 1160819
      },
      "writtenOn": "2017-06-27T14:26:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5120c171_f50dc40c",
      "revId": "f5bf993a9af52e4aa325f051285bbbd77c568688",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "23a3d15d_34a628f9",
        "filename": "src/compiler/translator/DeclareAndInitMultiviewVars.cpp",
        "patchSetId": 3
      },
      "lineNbr": 50,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2017-06-27T09:12:58Z",
      "side": 1,
      "message": "No need, symbols are non-internal by default.",
      "range": {
        "startLine": 50,
        "startChar": 4,
        "endLine": 50,
        "endChar": 41
      },
      "revId": "f5bf993a9af52e4aa325f051285bbbd77c568688",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e8e0c7e0_18a8ee3c",
        "filename": "src/compiler/translator/DeclareAndInitMultiviewVars.cpp",
        "patchSetId": 3
      },
      "lineNbr": 50,
      "author": {
        "id": 1160819
      },
      "writtenOn": "2017-06-27T14:26:31Z",
      "side": 1,
      "message": "Yes. I added it so that it\u0027s explicit and easy to discern the difference with the other symbols being created. I will remove it.",
      "parentUuid": "23a3d15d_34a628f9",
      "range": {
        "startLine": 50,
        "startChar": 4,
        "endLine": 50,
        "endChar": 41
      },
      "revId": "f5bf993a9af52e4aa325f051285bbbd77c568688",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bcf9ab02_9ec7420a",
        "filename": "src/compiler/translator/DeclareAndInitMultiviewVars.cpp",
        "patchSetId": 3
      },
      "lineNbr": 53,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2017-06-27T09:12:58Z",
      "side": 1,
      "message": "Would prefer \"instanceIDAsUint\" so it\u0027s clearer why the cast is needed.",
      "range": {
        "startLine": 53,
        "startChar": 22,
        "endLine": 53,
        "endChar": 42
      },
      "revId": "f5bf993a9af52e4aa325f051285bbbd77c568688",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5830f947_65d3e2f0",
        "filename": "src/compiler/translator/DeclareAndInitMultiviewVars.cpp",
        "patchSetId": 3
      },
      "lineNbr": 53,
      "author": {
        "id": 1160819
      },
      "writtenOn": "2017-06-27T14:26:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bcf9ab02_9ec7420a",
      "range": {
        "startLine": 53,
        "startChar": 22,
        "endLine": 53,
        "endChar": 42
      },
      "revId": "f5bf993a9af52e4aa325f051285bbbd77c568688",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e9c9081_fbd19f92",
        "filename": "src/compiler/translator/DeclareAndInitMultiviewVars.cpp",
        "patchSetId": 3
      },
      "lineNbr": 110,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2017-06-27T09:12:58Z",
      "side": 1,
      "message": "What about turning references to gl_ViewID_OVR to the impostor? I think the AST transformation should be self-contained wrt gl_ViewID_OVR as well.",
      "revId": "f5bf993a9af52e4aa325f051285bbbd77c568688",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3cf5d5b3_714e0f4d",
        "filename": "src/compiler/translator/DeclareAndInitMultiviewVars.cpp",
        "patchSetId": 3
      },
      "lineNbr": 110,
      "author": {
        "id": 1160819
      },
      "writtenOn": "2017-06-27T14:26:31Z",
      "side": 1,
      "message": "Yes, I did that before reading this comment. It\u0027s better this way.",
      "parentUuid": "6e9c9081_fbd19f92",
      "revId": "f5bf993a9af52e4aa325f051285bbbd77c568688",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fdea9258_92f4d98c",
        "filename": "src/compiler/translator/DeferGlobalInitializers.cpp",
        "patchSetId": 3
      },
      "lineNbr": 89,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2017-06-27T09:12:58Z",
      "side": 1,
      "message": "Instead check the internal flag of the symbol and skip initialization if it is internal.",
      "revId": "f5bf993a9af52e4aa325f051285bbbd77c568688",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0acb5104_cc6b75e4",
        "filename": "src/compiler/translator/DeferGlobalInitializers.cpp",
        "patchSetId": 3
      },
      "lineNbr": 89,
      "author": {
        "id": 1160819
      },
      "writtenOn": "2017-06-27T14:26:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fdea9258_92f4d98c",
      "revId": "f5bf993a9af52e4aa325f051285bbbd77c568688",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3821b9cb_7685cf12",
        "filename": "src/compiler/translator/IntermNode.h",
        "patchSetId": 3
      },
      "lineNbr": 159,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2017-06-27T09:12:58Z",
      "side": 1,
      "message": "Just use getTypePointer() instead, no need to add an entry point that\u0027s essentially a duplicate of that. Replacing all references getTypePointer() with getType() that returns a non-const reference might be cleaner, but that should be done separately.",
      "revId": "f5bf993a9af52e4aa325f051285bbbd77c568688",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5fac1640_bbdca9f2",
        "filename": "src/compiler/translator/IntermNode.h",
        "patchSetId": 3
      },
      "lineNbr": 159,
      "author": {
        "id": 1160819
      },
      "writtenOn": "2017-06-27T14:26:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3821b9cb_7685cf12",
      "revId": "f5bf993a9af52e4aa325f051285bbbd77c568688",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5f6f54a_b5b99c55",
        "filename": "src/compiler/translator/OutputGLSLBase.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1172,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2017-06-27T09:12:58Z",
      "side": 1,
      "message": "Any changes to here should not be needed. The AST transformation should be self-contained.",
      "revId": "f5bf993a9af52e4aa325f051285bbbd77c568688",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7e409073_a2d28e37",
        "filename": "src/compiler/translator/OutputGLSLBase.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1172,
      "author": {
        "id": 1160819
      },
      "writtenOn": "2017-06-27T14:26:31Z",
      "side": 1,
      "message": "It\u0027s not needed.",
      "parentUuid": "c5f6f54a_b5b99c55",
      "revId": "f5bf993a9af52e4aa325f051285bbbd77c568688",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "82e3048a_15c58f1f",
        "filename": "src/compiler/translator/VariableInfo.cpp",
        "patchSetId": 3
      },
      "lineNbr": 301,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2017-06-27T09:12:58Z",
      "side": 1,
      "message": "I don\u0027t think that this is needed by anything.",
      "revId": "f5bf993a9af52e4aa325f051285bbbd77c568688",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "758a0271_eee12ec5",
        "filename": "src/compiler/translator/VariableInfo.cpp",
        "patchSetId": 3
      },
      "lineNbr": 301,
      "author": {
        "id": 1160819
      },
      "writtenOn": "2017-06-27T14:26:31Z",
      "side": 1,
      "message": "Removed it.",
      "parentUuid": "82e3048a_15c58f1f",
      "revId": "f5bf993a9af52e4aa325f051285bbbd77c568688",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa7a5708_ed8c6dcd",
        "filename": "src/tests/compiler_tests/WEBGL_multiview_test.cpp",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2017-06-27T09:12:58Z",
      "side": 1,
      "message": "Would suggest \"SymbolOccurrenceCounter\" as the name of the class.",
      "revId": "f5bf993a9af52e4aa325f051285bbbd77c568688",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c38464b5_87d90e35",
        "filename": "src/tests/compiler_tests/WEBGL_multiview_test.cpp",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 1160819
      },
      "writtenOn": "2017-06-27T14:26:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fa7a5708_ed8c6dcd",
      "revId": "f5bf993a9af52e4aa325f051285bbbd77c568688",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "17b46539_d06d7be3",
        "filename": "src/tests/compiler_tests/WEBGL_multiview_test.cpp",
        "patchSetId": 3
      },
      "lineNbr": 30,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2017-06-27T09:12:58Z",
      "side": 1,
      "message": "\"shouldCountSymbol\" would be more concise.",
      "range": {
        "startLine": 30,
        "startChar": 17,
        "endLine": 30,
        "endChar": 38
      },
      "revId": "f5bf993a9af52e4aa325f051285bbbd77c568688",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "262749cd_540a9ed6",
        "filename": "src/tests/compiler_tests/WEBGL_multiview_test.cpp",
        "patchSetId": 3
      },
      "lineNbr": 30,
      "author": {
        "id": 1160819
      },
      "writtenOn": "2017-06-27T14:26:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "17b46539_d06d7be3",
      "range": {
        "startLine": 30,
        "startChar": 17,
        "endLine": 30,
        "endChar": 38
      },
      "revId": "f5bf993a9af52e4aa325f051285bbbd77c568688",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "90d9aaa4_d74729d9",
        "filename": "src/tests/compiler_tests/WEBGL_multiview_test.cpp",
        "patchSetId": 3
      },
      "lineNbr": 32,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2017-06-27T09:12:58Z",
      "side": 1,
      "message": "It doesn\u0027t look like this is used anywhere.",
      "revId": "f5bf993a9af52e4aa325f051285bbbd77c568688",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "95ed231f_484f5d53",
        "filename": "src/tests/compiler_tests/WEBGL_multiview_test.cpp",
        "patchSetId": 3
      },
      "lineNbr": 32,
      "author": {
        "id": 1160819
      },
      "writtenOn": "2017-06-27T14:26:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "90d9aaa4_d74729d9",
      "revId": "f5bf993a9af52e4aa325f051285bbbd77c568688",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "164f3d5e_a46b6179",
        "filename": "src/tests/compiler_tests/WEBGL_multiview_test.cpp",
        "patchSetId": 3
      },
      "lineNbr": 609,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2017-06-27T09:12:58Z",
      "side": 1,
      "message": "We should not be testing for a specific ordering of the children of main. That\u0027s fairly fragile. What we do want to guarantee is that gl_InstanceID is not used before it\u0027s initialized.\n\nThe only case I can imagine we could get this wrong would be when gl_InstanceID is being used in a global variable initializer. So you should add a test that initializes a global variable with gl_InstanceID, and then make sure that that initializer is in the output code after the gl_InstanceID impostor. (I should probably clarify the WebGL spec wrt. whether that is actually allowed).",
      "revId": "f5bf993a9af52e4aa325f051285bbbd77c568688",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6740380d_54f6c02f",
        "filename": "src/tests/compiler_tests/WEBGL_multiview_test.cpp",
        "patchSetId": 3
      },
      "lineNbr": 609,
      "author": {
        "id": 1160819
      },
      "writtenOn": "2017-06-27T14:26:31Z",
      "side": 1,
      "message": "Global variable initialization should be a constant expression. So, it should not be possible to assign gl_InstanceID to a global declaration.\nRemoved the test.",
      "parentUuid": "164f3d5e_a46b6179",
      "revId": "f5bf993a9af52e4aa325f051285bbbd77c568688",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e2850bc6_eff32985",
        "filename": "src/tests/compiler_tests/WEBGL_multiview_test.cpp",
        "patchSetId": 3
      },
      "lineNbr": 609,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2017-06-27T14:59:02Z",
      "side": 1,
      "message": "WebGL spec allows different global variable initializers compared to the native GLSL spec, though it isn\u0027t too clear about what built-ins are allowed in global variable initializers. Did you check the current behavior to make sure that assigning gl_InstanceID is not allowed?",
      "parentUuid": "6740380d_54f6c02f",
      "revId": "f5bf993a9af52e4aa325f051285bbbd77c568688",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "949d4b82_0aa9e81b",
        "filename": "src/tests/compiler_tests/WEBGL_multiview_test.cpp",
        "patchSetId": 3
      },
      "lineNbr": 609,
      "author": {
        "id": 1160819
      },
      "writtenOn": "2017-06-28T11:42:22Z",
      "side": 1,
      "message": "I used the shader translator with the options \"-s\u003dw2\" to compile a shader (300 es) with having a global variable being initialized with gl_InstanceID in global scope. It resulted in a compilation error stating that \"global variable initializers must be constant expressions\".\n\nIt shouldn\u0027t be a concern for 100 es shaders, because gl_InstanceID is not available there.\n\nAlso\nGLSL ES 3.0 Revision 6, 4.3 Storage qualifiers:\n\"Initializers may only be used in declarations of globals with no storage qualifier or with a const qualifier. Such initializers must be a constant expression (uniforms and globals are allowed in global initializers for legacy compatibility)\".",
      "parentUuid": "e2850bc6_eff32985",
      "revId": "f5bf993a9af52e4aa325f051285bbbd77c568688",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c61f1554_17bffb0b",
        "filename": "src/tests/compiler_tests/WEBGL_multiview_test.cpp",
        "patchSetId": 3
      },
      "lineNbr": 609,
      "author": {
        "id": 1160819
      },
      "writtenOn": "2017-06-28T11:56:57Z",
      "side": 1,
      "message": "Correction to the citation: remove the text in the brackets.",
      "parentUuid": "949d4b82_0aa9e81b",
      "revId": "f5bf993a9af52e4aa325f051285bbbd77c568688",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "06a18a49_1cdea142",
        "filename": "src/tests/compiler_tests/WEBGL_multiview_test.cpp",
        "patchSetId": 3
      },
      "lineNbr": 675,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2017-06-27T09:12:58Z",
      "side": 1,
      "message": "This test is a lot of code that\u0027s fairly hard to read. It should be replaced with a test that just checks the output code for the existence of the initialization of the InstanceID impostor and ViewID_OVR impostor. - it makes the test a lot more readable and maintainable while only losing a little bit of coverage.",
      "revId": "f5bf993a9af52e4aa325f051285bbbd77c568688",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b2a4984c_a8204a0b",
        "filename": "src/tests/compiler_tests/WEBGL_multiview_test.cpp",
        "patchSetId": 3
      },
      "lineNbr": 675,
      "author": {
        "id": 1160819
      },
      "writtenOn": "2017-06-27T14:26:31Z",
      "side": 1,
      "message": "Changed to a test which checks the translator\u0027s output.",
      "parentUuid": "06a18a49_1cdea142",
      "revId": "f5bf993a9af52e4aa325f051285bbbd77c568688",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}