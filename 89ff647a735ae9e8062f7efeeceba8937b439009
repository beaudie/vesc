{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "1ef9acf2_0c4fb323",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 18
      },
      "lineNbr": 6856,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2024-02-26T19:22:03Z",
      "side": 1,
      "message": "Suggest to change to \n```\nif(isWriteBarrierNecessary())\n{\n    VkSemaphore acquireNextImageSemaphore;\n    barrierImpl(context, aspectMask, newLayout, context-\u003egetRenderer()-\u003egetQueueFamilyIndex(),\n                \u0026commands-\u003egetCommandBuffer(), \u0026acquireNextImageSemaphore);\n\n    if (acquireNextImageSemaphore !\u003d VK_NULL_HANDLE)\n    {\n        commands-\u003esetAcquireNextImageSemaphore(acquireNextImageSemaphore);\n    }\n}\nsetSubresourcesWrittenSinceBarrier(levelStart, levelCount, layerStart, layerCount);\n```",
      "range": {
        "startLine": 6856,
        "startChar": 0,
        "endLine": 6856,
        "endChar": 92
      },
      "revId": "89ff647a735ae9e8062f7efeeceba8937b439009",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f86a3111_2ffefc67",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 18
      },
      "lineNbr": 2938,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2024-02-26T19:22:03Z",
      "side": 1,
      "message": "Why not just mirror mContentDefined bits and use LevelContentDefinedMask here? ( i.e. `gl::TexLevelArray\u003cLevelContentDefinedMask\u003e mSubresourcesWrittenSinceBarrier;`) The GetImageLayerWriteMask is quite complicated. \n\nIn longer term, I am thinking to change to level bitSet and then track layers in an array (i.e. something like angle::FastVector\u003cTexLevelMask\u003e for both mContentDefined and this), mainly to optimize for majority usage case where layerCount is 1. But for now, I am not seeing any reason we should track different than mContentDefined is tracked.",
      "range": {
        "startLine": 2938,
        "startChar": 22,
        "endLine": 2938,
        "endChar": 41
      },
      "revId": "89ff647a735ae9e8062f7efeeceba8937b439009",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6adc8a2c_0ed9286d",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 18
      },
      "lineNbr": 2938,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-02-26T19:39:41Z",
      "side": 1,
      "message": "One small but significant difference is `LevelContentDefinedMask` is 8 bits, because mContentDefined is usually used for rendering and we don\u0027t see that many layers in rendered textures (mostly cubemaps). This array is effectively the same thing, just tracks more layers (64) because we _do_ see large number of layers in sampled textures.\n\nAFAICT, that\u0027s really the only difference.",
      "parentUuid": "f86a3111_2ffefc67",
      "range": {
        "startLine": 2938,
        "startChar": 22,
        "endLine": 2938,
        "endChar": 41
      },
      "revId": "89ff647a735ae9e8062f7efeeceba8937b439009",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "985661bb_8523fb0f",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 18
      },
      "lineNbr": 2938,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2024-02-26T19:48:38Z",
      "side": 1,
      "message": "Right, I guess that \"need\" for tracking more layers maybe come from the test that hailin wrote. That is just a test try to illustrate (and magnify) the problem. (You can verify with him to see what type of texture he is seeing with the actual app). I don\u0027t think we have a real need to have to optimize for huge layerCount, and if yes, it is still better to track in a consistent way as mContentDefined.",
      "parentUuid": "6adc8a2c_0ed9286d",
      "range": {
        "startLine": 2938,
        "startChar": 22,
        "endLine": 2938,
        "endChar": 41
      },
      "revId": "89ff647a735ae9e8062f7efeeceba8937b439009",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "709f6291_9f5a4710",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 18
      },
      "lineNbr": 2938,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-02-26T21:01:12Z",
      "side": 1,
      "message": "Talking with Amirali, he hit an inefficiency in the existing tracking (based on 64 bits) with Manhattan which uses 96 layers in a texture. In a later CL, he is bumping this to 128 bits to optimize Manhattan.",
      "parentUuid": "985661bb_8523fb0f",
      "range": {
        "startLine": 2938,
        "startChar": 22,
        "endLine": 2938,
        "endChar": 41
      },
      "revId": "89ff647a735ae9e8062f7efeeceba8937b439009",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}