{
  "comments": [
    {
      "key": {
        "uuid": "78126b8a_8de7e8b1",
        "filename": "include/GLSLANG/ShaderLang.h",
        "patchSetId": 7
      },
      "lineNbr": 28,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-08-17T17:57:54Z",
      "side": 1,
      "message": "Increment the version, we use it when caching the builtin resources.",
      "range": {
        "startLine": 28,
        "startChar": 25,
        "endLine": 28,
        "endChar": 28
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "21ace44d_0f20c328",
        "filename": "include/GLSLANG/ShaderLang.h",
        "patchSetId": 7
      },
      "lineNbr": 28,
      "author": {
        "id": 1147451
      },
      "writtenOn": "2018-09-04T22:32:12Z",
      "side": 1,
      "message": "Fixed",
      "parentUuid": "78126b8a_8de7e8b1",
      "range": {
        "startLine": 28,
        "startChar": 25,
        "endLine": 28,
        "endChar": 28
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "372e5dde_342a3aad",
        "filename": "include/GLSLANG/ShaderLang.h",
        "patchSetId": 7
      },
      "lineNbr": 316,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-08-17T17:57:54Z",
      "side": 1,
      "message": "initialize in InitBuiltInResources.",
      "range": {
        "startLine": 316,
        "startChar": 4,
        "endLine": 316,
        "endChar": 35
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e9ac603e_e0c1518c",
        "filename": "include/GLSLANG/ShaderLang.h",
        "patchSetId": 7
      },
      "lineNbr": 316,
      "author": {
        "id": 1147451
      },
      "writtenOn": "2018-09-04T22:32:12Z",
      "side": 1,
      "message": "Fixed",
      "parentUuid": "372e5dde_342a3aad",
      "range": {
        "startLine": 316,
        "startChar": 4,
        "endLine": 316,
        "endChar": 35
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f173d09b_2528c830",
        "filename": "samples/sample_util/SampleApplication.h",
        "patchSetId": 7
      },
      "lineNbr": 33,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-08-17T17:57:54Z",
      "side": 1,
      "message": "Could be an integer: multiview count",
      "range": {
        "startLine": 33,
        "startChar": 22,
        "endLine": 33,
        "endChar": 53
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "58a0dccf_2a16182e",
        "filename": "samples/sample_util/SampleApplication.h",
        "patchSetId": 7
      },
      "lineNbr": 33,
      "author": {
        "id": 1147451
      },
      "writtenOn": "2018-09-04T22:32:12Z",
      "side": 1,
      "message": "I changed almost all stereo references to multiview counts throughout the whole patch.",
      "parentUuid": "f173d09b_2528c830",
      "range": {
        "startLine": 33,
        "startChar": 22,
        "endLine": 33,
        "endChar": 53
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "757384cb_729deba7",
        "filename": "samples/simple_stereo/SimpleStereo.cpp",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-08-17T17:57:54Z",
      "side": 1,
      "message": "This file needs formatting, run \u0027git cl format\u0027.  Maybe it wasn\u0027t added before you ran it last.",
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "38f1b74a_784f3ff4",
        "filename": "samples/simple_stereo/SimpleStereo.cpp",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1147451
      },
      "writtenOn": "2018-09-04T22:32:12Z",
      "side": 1,
      "message": "Fixed",
      "parentUuid": "757384cb_729deba7",
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e242613b_bfda0615",
        "filename": "samples/simple_stereo/SimpleStereo.cpp",
        "patchSetId": 7
      },
      "lineNbr": 17,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-08-17T17:57:54Z",
      "side": 1,
      "message": "use \u0027contexpr float\u0027 and variable names such as kCubeHalfSize.",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 17,
        "endChar": 54
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c4e38aad_10752035",
        "filename": "samples/simple_stereo/SimpleStereo.cpp",
        "patchSetId": 7
      },
      "lineNbr": 17,
      "author": {
        "id": 1147451
      },
      "writtenOn": "2018-09-04T22:32:12Z",
      "side": 1,
      "message": "Fixed",
      "parentUuid": "e242613b_bfda0615",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 17,
        "endChar": 54
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "22b95b1f_ad496753",
        "filename": "samples/simple_stereo/SimpleStereo.cpp",
        "patchSetId": 7
      },
      "lineNbr": 19,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-08-17T17:57:54Z",
      "side": 1,
      "message": "Add this function to the Matrix class, there are a bunch of similar ones already.",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 19,
        "endChar": 28
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c17615c4_bd624cc5",
        "filename": "samples/simple_stereo/SimpleStereo.cpp",
        "patchSetId": 7
      },
      "lineNbr": 19,
      "author": {
        "id": 1147451
      },
      "writtenOn": "2018-09-04T22:32:12Z",
      "side": 1,
      "message": "Fixed",
      "parentUuid": "22b95b1f_ad496753",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 19,
        "endChar": 28
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cddc1d58_50a08941",
        "filename": "samples/simple_stereo/SimpleStereo.cpp",
        "patchSetId": 7
      },
      "lineNbr": 28,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-08-17T17:57:54Z",
      "side": 1,
      "message": "nit: remove the virtual and mark the function as override (others too)",
      "range": {
        "startLine": 28,
        "startChar": 2,
        "endLine": 28,
        "endChar": 9
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d5cc26b_862a643f",
        "filename": "samples/simple_stereo/SimpleStereo.cpp",
        "patchSetId": 7
      },
      "lineNbr": 28,
      "author": {
        "id": 1147451
      },
      "writtenOn": "2018-09-04T22:32:12Z",
      "side": 1,
      "message": "Fixed",
      "parentUuid": "cddc1d58_50a08941",
      "range": {
        "startLine": 28,
        "startChar": 2,
        "endLine": 28,
        "endChar": 9
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "84be0189_35696c68",
        "filename": "src/libANGLE/Caps.cpp",
        "patchSetId": 7
      },
      "lineNbr": 855,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-08-17T17:57:54Z",
      "side": 1,
      "message": "This can be enableable.  Will make sure it\u0027s disabled by default for WebGL contexts.",
      "range": {
        "startLine": 855,
        "startChar": 47,
        "endLine": 855,
        "endChar": 62
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b54a6180_9f2f06e8",
        "filename": "src/libANGLE/Caps.cpp",
        "patchSetId": 7
      },
      "lineNbr": 855,
      "author": {
        "id": 1147451
      },
      "writtenOn": "2018-09-04T22:32:12Z",
      "side": 1,
      "message": "Fixed",
      "parentUuid": "84be0189_35696c68",
      "range": {
        "startLine": 855,
        "startChar": 47,
        "endLine": 855,
        "endChar": 62
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b7c5589_381d381b",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 7
      },
      "lineNbr": 7495,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-08-17T17:57:54Z",
      "side": 1,
      "message": "READ_BUFFER_EXT is not an indexed query, only GL_DRAW_BUFFER_EXT.",
      "range": {
        "startLine": 7495,
        "startChar": 8,
        "endLine": 7495,
        "endChar": 32
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c67e57c_eb2cd2ab",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 7
      },
      "lineNbr": 7495,
      "author": {
        "id": 1147451
      },
      "writtenOn": "2018-09-04T22:32:12Z",
      "side": 1,
      "message": "I have gone back and forth on this one.  The spec contradicts itself.  In one section is says that READ_BUFFER_EXT is a valid argument for GetIntegeri_vEXT, while the state table indicates that GetInteger should be used.  If GetInteger is used, you need to assume that the location is implied by whether or not the framebuffer is the default framebuffer.  If GetIntegeri_vEXT is used, both the location and index can be returned, but the index passed in is ignored.  \n\nWhat is your interpretation?",
      "parentUuid": "3b7c5589_381d381b",
      "range": {
        "startLine": 7495,
        "startChar": 8,
        "endLine": 7495,
        "endChar": 32
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "937177ab_122ee561",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 7
      },
      "lineNbr": 7495,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-09-17T20:37:14Z",
      "side": 1,
      "message": "Ah, yes, there does seem to be a contradiction here.  I think this query really only makes sense for GetInteger though, GetInteger can still return two values but the \u0027index\u0027 parameter of GetIntegeri_vEXT never makes sense for READ_BUFFER_EXT.",
      "parentUuid": "1c67e57c_eb2cd2ab",
      "range": {
        "startLine": 7495,
        "startChar": 8,
        "endLine": 7495,
        "endChar": 32
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "72bf4cd1_0b8aa46f",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 7
      },
      "lineNbr": 7495,
      "author": {
        "id": 1147451
      },
      "writtenOn": "2018-10-02T16:52:55Z",
      "side": 1,
      "message": "I ran into one more roadblock that makes this not implementable.  Unfortunately, GL_READ_BUFFER and GL_READ_BUFFER_EXT use the same values, so there is no way to differentiate them in GetInteger.  Therefore, we can\u0027t know if the call is expecting 1 or 2 return values.",
      "parentUuid": "937177ab_122ee561",
      "range": {
        "startLine": 7495,
        "startChar": 8,
        "endLine": 7495,
        "endChar": 32
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fe766d80_1fb202fb",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 7
      },
      "lineNbr": 7495,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-10-22T18:59:02Z",
      "side": 1,
      "message": "Right, this is unfortunate. Let\u0027s go with the original plan to only query these in the GetIntegeri_v case.  We can email the extension contact and ask for clarification here too.",
      "parentUuid": "72bf4cd1_0b8aa46f",
      "range": {
        "startLine": 7495,
        "startChar": 8,
        "endLine": 7495,
        "endChar": 32
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2cf4e2e9_49691de2",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 7
      },
      "lineNbr": 7495,
      "author": {
        "id": 1147451
      },
      "writtenOn": "2018-10-31T19:26:33Z",
      "side": 1,
      "message": "That is what is currently implemented.  I sent a note to the extension author, and it looks like their contact information is no longer correct.",
      "parentUuid": "fe766d80_1fb202fb",
      "range": {
        "startLine": 7495,
        "startChar": 8,
        "endLine": 7495,
        "endChar": 32
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "693331c7_cdad5b5f",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 7
      },
      "lineNbr": 7498,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-08-17T17:57:54Z",
      "side": 1,
      "message": "These are supposed to return two values, location and index.",
      "range": {
        "startLine": 7498,
        "startChar": 25,
        "endLine": 7498,
        "endChar": 26
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "87e54f2f_0ed8786b",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 7
      },
      "lineNbr": 7498,
      "author": {
        "id": 1147451
      },
      "writtenOn": "2018-09-04T22:32:12Z",
      "side": 1,
      "message": "Fixed",
      "parentUuid": "693331c7_cdad5b5f",
      "range": {
        "startLine": 7498,
        "startChar": 25,
        "endLine": 7498,
        "endChar": 26
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a9d3ee29_fc4087c7",
        "filename": "src/libANGLE/Display.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1097,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-08-17T17:57:54Z",
      "side": 1,
      "message": "This can be initialized by the backends in the  mImplementation-\u003egetExtensions(); call above.",
      "range": {
        "startLine": 1096,
        "startChar": 0,
        "endLine": 1097,
        "endChar": 60
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "080b9e3d_e4a7e251",
        "filename": "src/libANGLE/Display.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1097,
      "author": {
        "id": 1147451
      },
      "writtenOn": "2018-09-04T22:32:12Z",
      "side": 1,
      "message": "Fixed",
      "parentUuid": "a9d3ee29_fc4087c7",
      "range": {
        "startLine": 1096,
        "startChar": 0,
        "endLine": 1097,
        "endChar": 60
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f2ceb0b3_f498ac25",
        "filename": "src/libANGLE/Framebuffer.cpp",
        "patchSetId": 7
      },
      "lineNbr": 278,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-08-17T17:57:54Z",
      "side": 1,
      "message": "You\u0027re using -1 as a constant a lot in this CL.  Is it possible to just use 0 and not special-case anything?  If a constant is absolutely required, we should name it.",
      "range": {
        "startLine": 278,
        "startChar": 50,
        "endLine": 278,
        "endChar": 52
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a707fabd_f9f90383",
        "filename": "src/libANGLE/Framebuffer.cpp",
        "patchSetId": 7
      },
      "lineNbr": 278,
      "author": {
        "id": 1147451
      },
      "writtenOn": "2018-09-04T22:32:12Z",
      "side": 1,
      "message": "I switched to having everything default to 0, and that works fine.",
      "parentUuid": "f2ceb0b3_f498ac25",
      "range": {
        "startLine": 278,
        "startChar": 50,
        "endLine": 278,
        "endChar": 52
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e280db15_7deedd73",
        "filename": "src/libANGLE/State.cpp",
        "patchSetId": 7
      },
      "lineNbr": 2552,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-08-17T17:57:54Z",
      "side": 1,
      "message": "Can you just assert that index \u003c mDrawFramebuffer-\u003egetDrawBufferStateIndices().size()?",
      "range": {
        "startLine": 2545,
        "startChar": 0,
        "endLine": 2552,
        "endChar": 13
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "93349291_ae3499aa",
        "filename": "src/libANGLE/State.cpp",
        "patchSetId": 7
      },
      "lineNbr": 2552,
      "author": {
        "id": 1147451
      },
      "writtenOn": "2018-09-04T22:32:12Z",
      "side": 1,
      "message": "Fixed",
      "parentUuid": "e280db15_7deedd73",
      "range": {
        "startLine": 2545,
        "startChar": 0,
        "endLine": 2552,
        "endChar": 13
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "26ed7752_ab725cc8",
        "filename": "src/libANGLE/State.cpp",
        "patchSetId": 7
      },
      "lineNbr": 2553,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-08-17T17:57:54Z",
      "side": 1,
      "message": "The spec says this returns the location AND index.  Please make sure this is covered in a test.",
      "range": {
        "startLine": 2553,
        "startChar": 12,
        "endLine": 2553,
        "endChar": 73
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b91761c_54e1eea5",
        "filename": "src/libANGLE/State.cpp",
        "patchSetId": 7
      },
      "lineNbr": 2553,
      "author": {
        "id": 1147451
      },
      "writtenOn": "2018-09-04T22:32:12Z",
      "side": 1,
      "message": "Fixed",
      "parentUuid": "26ed7752_ab725cc8",
      "range": {
        "startLine": 2553,
        "startChar": 12,
        "endLine": 2553,
        "endChar": 73
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa7ff3cd_8a078348",
        "filename": "src/libANGLE/State.cpp",
        "patchSetId": 7
      },
      "lineNbr": 2563,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-08-17T17:57:54Z",
      "side": 1,
      "message": "Same for this.",
      "range": {
        "startLine": 2556,
        "startChar": 0,
        "endLine": 2563,
        "endChar": 13
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5bd88be0_2846c186",
        "filename": "src/libANGLE/State.cpp",
        "patchSetId": 7
      },
      "lineNbr": 2563,
      "author": {
        "id": 1147451
      },
      "writtenOn": "2018-09-04T22:32:12Z",
      "side": 1,
      "message": "Fixed",
      "parentUuid": "fa7ff3cd_8a078348",
      "range": {
        "startLine": 2556,
        "startChar": 0,
        "endLine": 2563,
        "endChar": 13
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0f822062_08ede954",
        "filename": "src/libANGLE/State.cpp",
        "patchSetId": 7
      },
      "lineNbr": 2564,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-08-17T17:57:54Z",
      "side": 1,
      "message": "Same for this, location and index.",
      "range": {
        "startLine": 2564,
        "startChar": 12,
        "endLine": 2564,
        "endChar": 64
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "88db653f_d5a445ea",
        "filename": "src/libANGLE/State.cpp",
        "patchSetId": 7
      },
      "lineNbr": 2564,
      "author": {
        "id": 1147451
      },
      "writtenOn": "2018-09-04T22:32:12Z",
      "side": 1,
      "message": "Fixed",
      "parentUuid": "0f822062_08ede954",
      "range": {
        "startLine": 2564,
        "startChar": 12,
        "endLine": 2564,
        "endChar": 64
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7e3feca1_1e38f203",
        "filename": "src/libANGLE/Surface.h",
        "patchSetId": 7
      },
      "lineNbr": 179,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-08-17T17:57:54Z",
      "side": 1,
      "message": "Can you put this in SurfaceState above?  It will allow the backends access to it.  Many of them can return that value when queried for getCreatedMultiviewViewCount.",
      "range": {
        "startLine": 179,
        "startChar": 4,
        "endLine": 179,
        "endChar": 31
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e16470cf_90ae6723",
        "filename": "src/libANGLE/Surface.h",
        "patchSetId": 7
      },
      "lineNbr": 179,
      "author": {
        "id": 1147451
      },
      "writtenOn": "2018-09-04T22:32:12Z",
      "side": 1,
      "message": "Fixed",
      "parentUuid": "7e3feca1_1e38f203",
      "range": {
        "startLine": 179,
        "startChar": 4,
        "endLine": 179,
        "endChar": 31
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "00ceca4f_c4a2792a",
        "filename": "src/libANGLE/renderer/DisplayImpl.h",
        "patchSetId": 7
      },
      "lineNbr": 79,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-08-17T17:57:54Z",
      "side": 1,
      "message": "Instead of adding another method here, just initialize the DisplayExtensions member in the backends that can support the extension.",
      "range": {
        "startLine": 79,
        "startChar": 4,
        "endLine": 79,
        "endChar": 47
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8f07d3a3_49f7aaae",
        "filename": "src/libANGLE/renderer/DisplayImpl.h",
        "patchSetId": 7
      },
      "lineNbr": 79,
      "author": {
        "id": 1147451
      },
      "writtenOn": "2018-09-04T22:32:12Z",
      "side": 1,
      "message": "Fixed",
      "parentUuid": "00ceca4f_c4a2792a",
      "range": {
        "startLine": 79,
        "startChar": 4,
        "endLine": 79,
        "endChar": 47
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "88a2fb1e_92fdaf22",
        "filename": "src/libANGLE/renderer/FramebufferImpl.h",
        "patchSetId": 7
      },
      "lineNbr": 95,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-08-17T17:57:54Z",
      "side": 1,
      "message": "These should be synchronized using dirty bits in the syncState functions of the framebuffer implementations.  You can see how we do it with setting the drawbuffer states already.",
      "range": {
        "startLine": 91,
        "startChar": 0,
        "endLine": 95,
        "endChar": 98
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "20e84cfc_40426007",
        "filename": "src/libANGLE/renderer/FramebufferImpl.h",
        "patchSetId": 7
      },
      "lineNbr": 95,
      "author": {
        "id": 1147451
      },
      "writtenOn": "2018-09-04T22:32:12Z",
      "side": 1,
      "message": "I did that to start with, but in syncState for FramebufferGL, there is the following check:\n\n    // Don\u0027t need to sync state for the default FBO.\n    if (mIsDefault)\n    {\n        return gl::NoError();\n    }\n\nI tried to find where the read/draw buffers were set for the default framebuffer, but couldn\u0027t follow it.  Where should that update occur?",
      "parentUuid": "88a2fb1e_92fdaf22",
      "range": {
        "startLine": 91,
        "startChar": 0,
        "endLine": 95,
        "endChar": 98
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "61254d2f_c3639ae7",
        "filename": "src/libANGLE/renderer/FramebufferImpl.h",
        "patchSetId": 7
      },
      "lineNbr": 95,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-09-17T20:37:14Z",
      "side": 1,
      "message": "They arn\u0027t set for the default framebuffer because they were immutable until now.  You can remove that check.",
      "parentUuid": "20e84cfc_40426007",
      "range": {
        "startLine": 91,
        "startChar": 0,
        "endLine": 95,
        "endChar": 98
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7cfc11d4_b6ffeaf5",
        "filename": "src/libANGLE/renderer/FramebufferImpl.h",
        "patchSetId": 7
      },
      "lineNbr": 95,
      "author": {
        "id": 1147451
      },
      "writtenOn": "2018-10-02T16:52:55Z",
      "side": 1,
      "message": "Fixed",
      "parentUuid": "61254d2f_c3639ae7",
      "range": {
        "startLine": 91,
        "startChar": 0,
        "endLine": 95,
        "endChar": 98
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b92a411b_be2ee3ca",
        "filename": "src/libANGLE/renderer/SurfaceImpl.h",
        "patchSetId": 7
      },
      "lineNbr": 84,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-08-17T17:57:54Z",
      "side": 1,
      "message": "This can be implemented with the UNREACHABLE like above.  We tend to do this for extension entry points that wont be implemented in all the backends.  You can then remove all implementations on backends that don\u0027t support the extension.",
      "range": {
        "startLine": 84,
        "startChar": 55,
        "endLine": 84,
        "endChar": 60
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "19590490_db9a908b",
        "filename": "src/libANGLE/renderer/SurfaceImpl.h",
        "patchSetId": 7
      },
      "lineNbr": 84,
      "author": {
        "id": 1147451
      },
      "writtenOn": "2018-09-04T22:32:12Z",
      "side": 1,
      "message": "Fixed",
      "parentUuid": "b92a411b_be2ee3ca",
      "range": {
        "startLine": 84,
        "startChar": 55,
        "endLine": 84,
        "endChar": 60
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5b5a920f_ca9b578c",
        "filename": "src/libANGLE/renderer/d3d/FramebufferD3D.cpp",
        "patchSetId": 7
      },
      "lineNbr": 374,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-08-17T17:57:54Z",
      "side": 1,
      "message": "Can this be an anonymous function returning a bool instead? It could use some comments.",
      "range": {
        "startLine": 367,
        "startChar": 19,
        "endLine": 374,
        "endChar": 40
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "12c02d58_956ab88c",
        "filename": "src/libANGLE/renderer/d3d/FramebufferD3D.cpp",
        "patchSetId": 7
      },
      "lineNbr": 374,
      "author": {
        "id": 1147451
      },
      "writtenOn": "2018-09-04T22:32:12Z",
      "side": 1,
      "message": "Fixed",
      "parentUuid": "5b5a920f_ca9b578c",
      "range": {
        "startLine": 367,
        "startChar": 19,
        "endLine": 374,
        "endChar": 40
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ac3c0b2b_02a09c08",
        "filename": "src/libANGLE/renderer/d3d/ProgramD3D.cpp",
        "patchSetId": 7
      },
      "lineNbr": 2591,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-08-17T17:57:54Z",
      "side": 1,
      "message": "No need for comparison with un-commented constants.",
      "range": {
        "startLine": 2590,
        "startChar": 0,
        "endLine": 2591,
        "endChar": 65
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "24be064e_eaee6ea2",
        "filename": "src/libANGLE/renderer/d3d/ProgramD3D.cpp",
        "patchSetId": 7
      },
      "lineNbr": 2591,
      "author": {
        "id": 1147451
      },
      "writtenOn": "2018-09-04T22:32:12Z",
      "side": 1,
      "message": "Fixed",
      "parentUuid": "ac3c0b2b_02a09c08",
      "range": {
        "startLine": 2590,
        "startChar": 0,
        "endLine": 2591,
        "endChar": 65
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43935b97_e01c0622",
        "filename": "src/libANGLE/renderer/d3d/RendererD3D.h",
        "patchSetId": 7
      },
      "lineNbr": 182,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-08-17T17:57:54Z",
      "side": 1,
      "message": "Should these takes an integer multiview count instead of bool?",
      "range": {
        "startLine": 182,
        "startChar": 42,
        "endLine": 182,
        "endChar": 55
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "682ea2f6_335d08a3",
        "filename": "src/libANGLE/renderer/d3d/RendererD3D.h",
        "patchSetId": 7
      },
      "lineNbr": 182,
      "author": {
        "id": 1147451
      },
      "writtenOn": "2018-09-04T22:32:12Z",
      "side": 1,
      "message": "Fixed",
      "parentUuid": "43935b97_e01c0622",
      "range": {
        "startLine": 182,
        "startChar": 42,
        "endLine": 182,
        "endChar": 55
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b505e34_4b47b1ca",
        "filename": "src/libANGLE/renderer/d3d/RendererD3D.h",
        "patchSetId": 7
      },
      "lineNbr": 379,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-08-17T17:57:54Z",
      "side": 1,
      "message": "Is stereo the best word?  Could it be isMultiviewWindowSupported?",
      "range": {
        "startLine": 379,
        "startChar": 17,
        "endLine": 379,
        "endChar": 34
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4cac047a_95849145",
        "filename": "src/libANGLE/renderer/d3d/RendererD3D.h",
        "patchSetId": 7
      },
      "lineNbr": 379,
      "author": {
        "id": 1147451
      },
      "writtenOn": "2018-09-04T22:32:12Z",
      "side": 1,
      "message": "I switched to multiviewCount.",
      "parentUuid": "3b505e34_4b47b1ca",
      "range": {
        "startLine": 379,
        "startChar": 17,
        "endLine": 379,
        "endChar": 34
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "773d55fe_3f2e07e3",
        "filename": "src/libANGLE/renderer/d3d/SurfaceD3D.cpp",
        "patchSetId": 7
      },
      "lineNbr": 55,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-08-17T17:57:54Z",
      "side": 1,
      "message": "I think we can pipe this all the way down to the d3d surface creation instead of special-casing the stereo here.  You can add the getCreatedMultiviewViewCount query to the D3D SwapChain classes.",
      "range": {
        "startLine": 54,
        "startChar": 6,
        "endLine": 55,
        "endChar": 75
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "67a6c5ed_8a0a16b4",
        "filename": "src/libANGLE/renderer/d3d/SurfaceD3D.cpp",
        "patchSetId": 7
      },
      "lineNbr": 55,
      "author": {
        "id": 1147451
      },
      "writtenOn": "2018-09-04T22:32:12Z",
      "side": 1,
      "message": "Fixed",
      "parentUuid": "773d55fe_3f2e07e3",
      "range": {
        "startLine": 54,
        "startChar": 6,
        "endLine": 55,
        "endChar": 75
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "784889d5_4ab3373e",
        "filename": "src/libANGLE/renderer/d3d/SwapChainD3D.h",
        "patchSetId": 7
      },
      "lineNbr": 74,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-08-17T17:57:54Z",
      "side": 1,
      "message": "Make this pure virtual, it\u0027s only implemented in two places.",
      "range": {
        "startLine": 74,
        "startChar": 4,
        "endLine": 74,
        "endChar": 34
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a6d63ac_d64d64cf",
        "filename": "src/libANGLE/renderer/d3d/SwapChainD3D.h",
        "patchSetId": 7
      },
      "lineNbr": 74,
      "author": {
        "id": 1147451
      },
      "writtenOn": "2018-09-04T22:32:12Z",
      "side": 1,
      "message": "Fixed",
      "parentUuid": "784889d5_4ab3373e",
      "range": {
        "startLine": 74,
        "startChar": 4,
        "endLine": 74,
        "endChar": 34
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ed232e6_b74899e1",
        "filename": "src/libANGLE/renderer/d3d/d3d11/StateManager11.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1798,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-08-17T17:57:54Z",
      "side": 1,
      "message": "Do you know what triggered this?  Seems like an error somewhere else if we got here.",
      "range": {
        "startLine": 1795,
        "startChar": 0,
        "endLine": 1798,
        "endChar": 9
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7d2a8747_b7ef156b",
        "filename": "src/libANGLE/renderer/d3d/d3d11/StateManager11.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1798,
      "author": {
        "id": 1147451
      },
      "writtenOn": "2018-09-04T22:32:12Z",
      "side": 1,
      "message": "This is in the original code.  As far as I can tell, colorRTs is a cache and not current state, so it can have null entries.",
      "parentUuid": "0ed232e6_b74899e1",
      "range": {
        "startLine": 1795,
        "startChar": 0,
        "endLine": 1798,
        "endChar": 9
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d97373f6_18c14e94",
        "filename": "src/libANGLE/renderer/d3d/d3d11/StateManager11.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1798,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-09-17T20:37:14Z",
      "side": 1,
      "message": "I think the initial loop needs to be changed then, this just keeps continuing at soon as rtIndex \u003e\u003d drawStateLocations.size() when it could just loop to drawStateLocations.size().  You could assert that colorRTs.size() is at least drawStateLocations.size().",
      "parentUuid": "7d2a8747_b7ef156b",
      "range": {
        "startLine": 1795,
        "startChar": 0,
        "endLine": 1798,
        "endChar": 9
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f2b65165_13cc8fac",
        "filename": "src/libANGLE/renderer/d3d/d3d11/StateManager11.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1798,
      "author": {
        "id": 1147451
      },
      "writtenOn": "2018-10-02T16:52:55Z",
      "side": 1,
      "message": "Fixed",
      "parentUuid": "d97373f6_18c14e94",
      "range": {
        "startLine": 1795,
        "startChar": 0,
        "endLine": 1798,
        "endChar": 9
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e27d1ae1_894bd821",
        "filename": "src/libANGLE/renderer/d3d/d3d11/StateManager11.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1801,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-08-17T17:57:54Z",
      "side": 1,
      "message": "nit: give these a type if they\u0027re simple.",
      "range": {
        "startLine": 1801,
        "startChar": 14,
        "endLine": 1801,
        "endChar": 18
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7e9fbe29_4abe92fd",
        "filename": "src/libANGLE/renderer/d3d/d3d11/StateManager11.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1801,
      "author": {
        "id": 1147451
      },
      "writtenOn": "2018-09-04T22:32:12Z",
      "side": 1,
      "message": "Fixed",
      "parentUuid": "e27d1ae1_894bd821",
      "range": {
        "startLine": 1801,
        "startChar": 14,
        "endLine": 1801,
        "endChar": 18
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5762e3e_879a20a6",
        "filename": "src/libANGLE/renderer/d3d/d3d11/StateManager11.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1805,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-08-17T17:57:54Z",
      "side": 1,
      "message": "Can this be a helper function somewhere?",
      "range": {
        "startLine": 1802,
        "startChar": 0,
        "endLine": 1805,
        "endChar": 26
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1bcfb16d_d433bd6e",
        "filename": "src/libANGLE/renderer/d3d/d3d11/StateManager11.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1805,
      "author": {
        "id": 1147451
      },
      "writtenOn": "2018-09-04T22:32:12Z",
      "side": 1,
      "message": "Fixed",
      "parentUuid": "a5762e3e_879a20a6",
      "range": {
        "startLine": 1802,
        "startChar": 0,
        "endLine": 1805,
        "endChar": 26
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2f5ae6af_26ff5b26",
        "filename": "src/libANGLE/renderer/d3d/d3d11/SwapChain11.cpp",
        "patchSetId": 7
      },
      "lineNbr": 97,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-08-17T17:57:54Z",
      "side": 1,
      "message": "Do we need two variables?",
      "range": {
        "startLine": 96,
        "startChar": 0,
        "endLine": 97,
        "endChar": 22
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ab527c84_accb92f4",
        "filename": "src/libANGLE/renderer/d3d/d3d11/SwapChain11.cpp",
        "patchSetId": 7
      },
      "lineNbr": 97,
      "author": {
        "id": 1147451
      },
      "writtenOn": "2018-09-04T22:32:12Z",
      "side": 1,
      "message": "Fixed",
      "parentUuid": "2f5ae6af_26ff5b26",
      "range": {
        "startLine": 96,
        "startChar": 0,
        "endLine": 97,
        "endChar": 22
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "55b5a3aa_57a78d70",
        "filename": "src/libANGLE/renderer/d3d/d3d11/SwapChain11.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1077,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-08-17T17:57:54Z",
      "side": 1,
      "message": "Doesn\u0027t look like this is ever assigned.",
      "range": {
        "startLine": 1077,
        "startChar": 11,
        "endLine": 1077,
        "endChar": 20
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b6df36b6_a4bfd2dc",
        "filename": "src/libANGLE/renderer/d3d/d3d11/SwapChain11.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1077,
      "author": {
        "id": 1147451
      },
      "writtenOn": "2018-09-04T22:32:12Z",
      "side": 1,
      "message": "I switched this to multiviewCount and added a comment after create swapchain to assign this once DX11 support is added.",
      "parentUuid": "55b5a3aa_57a78d70",
      "range": {
        "startLine": 1077,
        "startChar": 11,
        "endLine": 1077,
        "endChar": 20
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a05c0cff_abea0d0c",
        "filename": "src/libANGLE/renderer/gl/FramebufferGL.cpp",
        "patchSetId": 7
      },
      "lineNbr": 681,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-08-17T17:57:54Z",
      "side": 1,
      "message": "Can you call glDrawBuffersIndexedEXT and glDrawBuffersIndexedEXT here if the extension is present and glDrawBuffers and glReadBuffer if they are not?",
      "range": {
        "startLine": 671,
        "startChar": 11,
        "endLine": 681,
        "endChar": 22
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e9a9c742_fb712236",
        "filename": "src/libANGLE/renderer/gl/FramebufferGL.cpp",
        "patchSetId": 7
      },
      "lineNbr": 681,
      "author": {
        "id": 1147451
      },
      "writtenOn": "2018-09-04T22:32:12Z",
      "side": 1,
      "message": "Do I need to extend DispatchTableGL to support this?  Those entry points don\u0027t exist right now.",
      "parentUuid": "a05c0cff_abea0d0c",
      "range": {
        "startLine": 671,
        "startChar": 11,
        "endLine": 681,
        "endChar": 22
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1993ff3a_c1c17d9e",
        "filename": "src/libANGLE/renderer/gl/FramebufferGL.cpp",
        "patchSetId": 7
      },
      "lineNbr": 681,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-09-17T20:37:14Z",
      "side": 1,
      "message": "You can add them to gl_bindings_data.json and they will be auto-generated in the dispatch table.",
      "parentUuid": "e9a9c742_fb712236",
      "range": {
        "startLine": 671,
        "startChar": 11,
        "endLine": 681,
        "endChar": 22
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f8366e1a_871c6100",
        "filename": "src/libANGLE/renderer/gl/FramebufferGL.cpp",
        "patchSetId": 7
      },
      "lineNbr": 681,
      "author": {
        "id": 1147451
      },
      "writtenOn": "2018-10-02T16:52:55Z",
      "side": 1,
      "message": "Since there is no desktop support for these entry points, I am emulating them with drawBuffers.",
      "parentUuid": "1993ff3a_c1c17d9e",
      "range": {
        "startLine": 671,
        "startChar": 11,
        "endLine": 681,
        "endChar": 22
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a188b596_a456129c",
        "filename": "src/libANGLE/renderer/gl/FramebufferGL.cpp",
        "patchSetId": 7
      },
      "lineNbr": 681,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-10-22T18:59:02Z",
      "side": 1,
      "message": "It would be good to use native support (on GLES) when it exists.",
      "parentUuid": "f8366e1a_871c6100",
      "range": {
        "startLine": 671,
        "startChar": 11,
        "endLine": 681,
        "endChar": 22
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1b6391ed_c173cf53",
        "filename": "src/libANGLE/renderer/gl/FramebufferGL.cpp",
        "patchSetId": 7
      },
      "lineNbr": 681,
      "author": {
        "id": 1147451
      },
      "writtenOn": "2018-10-31T19:26:33Z",
      "side": 1,
      "message": "How do I do that?  It looks like gl_bindings_data.json only picks up desktop entry points.  Is there another place where I can check for the native GLES entry point?",
      "parentUuid": "a188b596_a456129c",
      "range": {
        "startLine": 671,
        "startChar": 11,
        "endLine": 681,
        "endChar": 22
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "01c9fcd1_42ca7dd5",
        "filename": "src/libANGLE/renderer/gl/SurfaceGL.h",
        "patchSetId": 7
      },
      "lineNbr": 33,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-08-17T17:57:54Z",
      "side": 1,
      "message": "Don\u0027t override it here, we don\u0027t need to override at every level.",
      "range": {
        "startLine": 31,
        "startChar": 39,
        "endLine": 33,
        "endChar": 57
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "12f561e8_5c0f5081",
        "filename": "src/libANGLE/renderer/gl/SurfaceGL.h",
        "patchSetId": 7
      },
      "lineNbr": 33,
      "author": {
        "id": 1147451
      },
      "writtenOn": "2018-09-04T22:32:12Z",
      "side": 1,
      "message": "Fixed",
      "parentUuid": "01c9fcd1_42ca7dd5",
      "range": {
        "startLine": 31,
        "startChar": 39,
        "endLine": 33,
        "endChar": 57
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5e8ab736_91ae9d20",
        "filename": "src/libANGLE/renderer/gl/wgl/DisplayWGL.cpp",
        "patchSetId": 7
      },
      "lineNbr": 161,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-08-17T17:57:54Z",
      "side": 1,
      "message": "This is not a display attribute, it looks like we will need to choose new pixel formats per surface created.  This might cause issues with sharing those surfaces between contexts.",
      "range": {
        "startLine": 161,
        "startChar": 53,
        "endLine": 161,
        "endChar": 81
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "758c5040_6e95cdc0",
        "filename": "src/libANGLE/renderer/gl/wgl/DisplayWGL.cpp",
        "patchSetId": 7
      },
      "lineNbr": 161,
      "author": {
        "id": 1147451
      },
      "writtenOn": "2018-09-04T22:32:12Z",
      "side": 1,
      "message": "I\u0027m not sure how to resolve this one.  At one point, I treated it like a display attribute and created a stereo pixel format no matter what if it was available.  Unfortunately, I ran into too many OpenGL driver issues that causes regressions for contexts that didn\u0027t need stereo.  So, I went with the current code which only tries to get a stereo context when asked.  This prevents regressions, but also can run into context sharing issues.  \n\nAny advise you can suggest would be helpful.",
      "parentUuid": "5e8ab736_91ae9d20",
      "range": {
        "startLine": 161,
        "startChar": 53,
        "endLine": 161,
        "endChar": 81
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "85db13a1_87548250",
        "filename": "src/libANGLE/renderer/gl/wgl/DisplayWGL.cpp",
        "patchSetId": 7
      },
      "lineNbr": 161,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-09-17T20:37:14Z",
      "side": 1,
      "message": "This is a tough issue, the intent with the EGL extension is definitely that the multiview count is per-surface so we need to be able to support that, especially if we plan on exposing this up through WebGL.\n\nSome WGL documentation says that wglMakeCurrent requires that the context and surface have the same pixel format but some other extensions merely say they need to be \"compatible\".  I wonder if some/all drivers allow contexts created on non-stereo pixel formats to be bound to stereo surfaces.  It may be worth trying to use different pixel formats per surface and check if the wglMakeCurrent calls still succeed.\n\nOtherwise, we can look into multiple contexts (in the same share group) to handle needing multiple pixel formats.",
      "parentUuid": "758c5040_6e95cdc0",
      "range": {
        "startLine": 161,
        "startChar": 53,
        "endLine": 161,
        "endChar": 81
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d0cdfc55_f934b8a6",
        "filename": "src/libANGLE/renderer/gl/wgl/DisplayWGL.cpp",
        "patchSetId": 7
      },
      "lineNbr": 161,
      "author": {
        "id": 1147451
      },
      "writtenOn": "2018-10-02T16:52:55Z",
      "side": 1,
      "message": "I ran into this issue when porting the Unreal engine, and I know that makeCurrent will fail if there is a pixel format mismatch.  When I look at the implementation here, I don\u0027t know if we would hit this problem.  As far as I can see, if the pixel format is stereo at device initialization, that pixel format is used for all device surfaces.  That would indicate that all contexts would be sharable.  The error would occur at surface initialization time if a surface being created does not share the same pixel format.  There already seems to be a check for that.",
      "parentUuid": "85db13a1_87548250",
      "range": {
        "startLine": 161,
        "startChar": 53,
        "endLine": 161,
        "endChar": 81
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "038e4be7_c051c1e0",
        "filename": "src/libANGLE/renderer/gl/wgl/DisplayWGL.cpp",
        "patchSetId": 7
      },
      "lineNbr": 161,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-10-22T18:59:02Z",
      "side": 1,
      "message": "ANGLE currently virtualizes all contexts using a single context and pixel format so this forces all contexts and surfaces to use stereo or not.  Theoretically we can work around this with architectural changes, we already support some devirtualization but still no support for multiple pixel formats.\n\nWhat did you intend to use this extension for?  If an application knows that it will only use stereo surfaces, we could add an extension on top of this one to request that behaviour but we couldn\u0027t use it for cases like Chrome because that would allocate extra memory for every surface.",
      "parentUuid": "d0cdfc55_f934b8a6",
      "range": {
        "startLine": 161,
        "startChar": 53,
        "endLine": 161,
        "endChar": 81
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e571c84_ac43b13e",
        "filename": "src/libANGLE/renderer/gl/wgl/DisplayWGL.cpp",
        "patchSetId": 7
      },
      "lineNbr": 161,
      "author": {
        "id": 1147451
      },
      "writtenOn": "2018-10-31T19:26:33Z",
      "side": 1,
      "message": "Our immediate use case is for this to be used by Chrome.  I don\u0027t see WebGL apps ever really needing this, since WebXR exposes this in a different way.  In addition, I think this only applies to the OpenGL back end case.  When the DirectX back end is implemented, each surface gets its own swapchain, and therefore can support this extension correctly.  It seems like a lot of work - which could potentially destabalize things - to take the devirtualization approach.\n\nOur preference would be to have a EGL_PLATFORM_ANGLE type extension for the OpenGL back end that would enable the stereo pixel format for all surfaces.  For Chrome, it would only enable this extension when the OpenGL back end was being used in conjunction with WebXR.  Even if it was only enabled with a command line option, that would still be fine with us.  When running in default DirectX mode, none of this would be needed.",
      "parentUuid": "038e4be7_c051c1e0",
      "range": {
        "startLine": 161,
        "startChar": 53,
        "endLine": 161,
        "endChar": 81
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "24009c1c_6dbfd7c6",
        "filename": "src/libANGLE/renderer/gl/wgl/DisplayWGL.cpp",
        "patchSetId": 7
      },
      "lineNbr": 250,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-08-17T17:57:54Z",
      "side": 1,
      "message": "typo?",
      "range": {
        "startLine": 250,
        "startChar": 63,
        "endLine": 250,
        "endChar": 64
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8e06c0be_69210be0",
        "filename": "src/libANGLE/renderer/gl/wgl/DisplayWGL.cpp",
        "patchSetId": 7
      },
      "lineNbr": 250,
      "author": {
        "id": 1147451
      },
      "writtenOn": "2018-09-04T22:32:12Z",
      "side": 1,
      "message": "Fixed",
      "parentUuid": "24009c1c_6dbfd7c6",
      "range": {
        "startLine": 250,
        "startChar": 63,
        "endLine": 250,
        "endChar": 64
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "23a9b95b_d6432bf2",
        "filename": "src/libANGLE/renderer/gl/wgl/WindowSurfaceWGL.cpp",
        "patchSetId": 7
      },
      "lineNbr": 92,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-08-17T17:57:54Z",
      "side": 1,
      "message": "This should read the surface attributes or the surface state to determine if it\u0027s multiview.",
      "range": {
        "startLine": 92,
        "startChar": 4,
        "endLine": 92,
        "endChar": 55
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bf069714_8ef8845f",
        "filename": "src/libANGLE/renderer/gl/wgl/WindowSurfaceWGL.cpp",
        "patchSetId": 7
      },
      "lineNbr": 92,
      "author": {
        "id": 1147451
      },
      "writtenOn": "2018-09-04T22:32:12Z",
      "side": 1,
      "message": "Fixed",
      "parentUuid": "23a9b95b_d6432bf2",
      "range": {
        "startLine": 92,
        "startChar": 4,
        "endLine": 92,
        "endChar": 55
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6d6cb97a_9c545e08",
        "filename": "src/libANGLE/renderer/gl/wgl/WindowSurfaceWGL.cpp",
        "patchSetId": 7
      },
      "lineNbr": 190,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-08-17T17:57:54Z",
      "side": 1,
      "message": "This should do a query on the surface or pixel format.",
      "range": {
        "startLine": 190,
        "startChar": 4,
        "endLine": 190,
        "endChar": 27
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "71c1f8f7_f4182b70",
        "filename": "src/libANGLE/renderer/gl/wgl/WindowSurfaceWGL.cpp",
        "patchSetId": 7
      },
      "lineNbr": 190,
      "author": {
        "id": 1147451
      },
      "writtenOn": "2018-09-04T22:32:12Z",
      "side": 1,
      "message": "Fixed",
      "parentUuid": "6d6cb97a_9c545e08",
      "range": {
        "startLine": 190,
        "startChar": 4,
        "endLine": 190,
        "endChar": 27
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "73f0cd74_91f969eb",
        "filename": "src/libANGLE/renderer/null/SurfaceNULL.cpp",
        "patchSetId": 7
      },
      "lineNbr": 106,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-08-17T17:57:54Z",
      "side": 1,
      "message": "This could be easily supported if you want, it\u0027s useful for testing.",
      "range": {
        "startLine": 104,
        "startChar": 0,
        "endLine": 106,
        "endChar": 13
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f600142_994be35a",
        "filename": "src/libANGLE/renderer/null/SurfaceNULL.cpp",
        "patchSetId": 7
      },
      "lineNbr": 106,
      "author": {
        "id": 1147451
      },
      "writtenOn": "2018-09-04T22:32:12Z",
      "side": 1,
      "message": "Fixed",
      "parentUuid": "73f0cd74_91f969eb",
      "range": {
        "startLine": 104,
        "startChar": 0,
        "endLine": 106,
        "endChar": 13
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e2ba23b1_ea3e7829",
        "filename": "src/libANGLE/validationEGL.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1172,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-08-17T17:57:54Z",
      "side": 1,
      "message": "I don\u0027t think we can do this validation here.  The spec isn\u0027t very clear.. it says:\n\n        If the value\n        specified for EGL_MULTIVIEW_VIEW_COUNT_EXT is greater than one\n        and the \u003cconfig\u003e does not support multiple multiview color\n        buffers, an EGL_BAD_MATCH error is generated.\n\nBut there is no other mention of what \u003cconfig\u003e is in the spec so I assume it means some implementation defined limit.  If that\u0027s the case, then we should fail surface creation in the backends if the requested view count is too large, not here.",
      "range": {
        "startLine": 1155,
        "startChar": 20,
        "endLine": 1172,
        "endChar": 21
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "716b9a79_e3fa700c",
        "filename": "src/libANGLE/validationEGL.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1172,
      "author": {
        "id": 1147451
      },
      "writtenOn": "2018-09-04T22:32:12Z",
      "side": 1,
      "message": "Fixed",
      "parentUuid": "e2ba23b1_ea3e7829",
      "range": {
        "startLine": 1155,
        "startChar": 20,
        "endLine": 1172,
        "endChar": 21
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0690e038_7d121c3d",
        "filename": "src/libANGLE/validationEGL.cpp",
        "patchSetId": 7
      },
      "lineNbr": 2840,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-08-17T17:57:54Z",
      "side": 1,
      "message": "This function needs to accept the EGL_MULTIVIEW_VIEW_COUNT_EXT query.",
      "range": {
        "startLine": 2840,
        "startChar": 6,
        "endLine": 2840,
        "endChar": 26
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a14b6b60_516d0769",
        "filename": "src/libANGLE/validationEGL.cpp",
        "patchSetId": 7
      },
      "lineNbr": 2840,
      "author": {
        "id": 1147451
      },
      "writtenOn": "2018-09-04T22:32:12Z",
      "side": 1,
      "message": "Fixed",
      "parentUuid": "0690e038_7d121c3d",
      "range": {
        "startLine": 2840,
        "startChar": 6,
        "endLine": 2840,
        "endChar": 26
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d379bbd2_ada5f13c",
        "filename": "src/libANGLE/validationEGL.cpp",
        "patchSetId": 7
      },
      "lineNbr": 2933,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-08-17T17:57:54Z",
      "side": 1,
      "message": "This function also needs to support the EGL_MULTIVIEW_VIEW_COUNT_EXT query. Please make sure this is covered by a test.",
      "range": {
        "startLine": 2933,
        "startChar": 6,
        "endLine": 2933,
        "endChar": 26
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a8fa21fc_a6d2a916",
        "filename": "src/libANGLE/validationEGL.cpp",
        "patchSetId": 7
      },
      "lineNbr": 2933,
      "author": {
        "id": 1147451
      },
      "writtenOn": "2018-09-04T22:32:12Z",
      "side": 1,
      "message": "Fixed",
      "parentUuid": "d379bbd2_ada5f13c",
      "range": {
        "startLine": 2933,
        "startChar": 6,
        "endLine": 2933,
        "endChar": 26
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "22a720f3_41f56b45",
        "filename": "src/libANGLE/validationES2.cpp",
        "patchSetId": 7
      },
      "lineNbr": 2627,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-08-17T17:57:54Z",
      "side": 1,
      "message": "Please put the error messages in ErrorStrings.h, we\u0027re trying to consolidate all the errors strings.",
      "range": {
        "startLine": 2627,
        "startChar": 47,
        "endLine": 2627,
        "endChar": 83
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aae10e72_ab21bf02",
        "filename": "src/libANGLE/validationES2.cpp",
        "patchSetId": 7
      },
      "lineNbr": 2627,
      "author": {
        "id": 1147451
      },
      "writtenOn": "2018-09-04T22:32:12Z",
      "side": 1,
      "message": "Fixed",
      "parentUuid": "22a720f3_41f56b45",
      "range": {
        "startLine": 2627,
        "startChar": 47,
        "endLine": 2627,
        "endChar": 83
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "13b580e9_7d659df2",
        "filename": "src/libANGLE/validationES2.cpp",
        "patchSetId": 7
      },
      "lineNbr": 2631,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-08-17T17:57:54Z",
      "side": 1,
      "message": "nit: not needed.",
      "range": {
        "startLine": 2631,
        "startChar": 4,
        "endLine": 2631,
        "endChar": 8
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "49fe0ded_3be5132d",
        "filename": "src/libANGLE/validationES2.cpp",
        "patchSetId": 7
      },
      "lineNbr": 2631,
      "author": {
        "id": 1147451
      },
      "writtenOn": "2018-09-04T22:32:12Z",
      "side": 1,
      "message": "Fixed",
      "parentUuid": "13b580e9_7d659df2",
      "range": {
        "startLine": 2631,
        "startChar": 4,
        "endLine": 2631,
        "endChar": 8
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ecaed046_9e8f2e49",
        "filename": "src/libANGLE/validationES2.cpp",
        "patchSetId": 7
      },
      "lineNbr": 2674,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-08-17T17:57:54Z",
      "side": 1,
      "message": "I think this can be simplified into a switch on location[i] instead.",
      "range": {
        "startLine": 2636,
        "startChar": 8,
        "endLine": 2674,
        "endChar": 9
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7bbe7a22_22533ad7",
        "filename": "src/libANGLE/validationES2.cpp",
        "patchSetId": 7
      },
      "lineNbr": 2674,
      "author": {
        "id": 1147451
      },
      "writtenOn": "2018-09-04T22:32:12Z",
      "side": 1,
      "message": "Fixed",
      "parentUuid": "ecaed046_9e8f2e49",
      "range": {
        "startLine": 2636,
        "startChar": 8,
        "endLine": 2674,
        "endChar": 9
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "20b4c76e_77106a03",
        "filename": "src/libANGLE/validationES2.cpp",
        "patchSetId": 7
      },
      "lineNbr": 2727,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-08-17T17:57:54Z",
      "side": 1,
      "message": "Same with this, you can switch on src.",
      "range": {
        "startLine": 2691,
        "startChar": 4,
        "endLine": 2727,
        "endChar": 5
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "037d4feb_bb92bb1f",
        "filename": "src/libANGLE/validationES2.cpp",
        "patchSetId": 7
      },
      "lineNbr": 2727,
      "author": {
        "id": 1147451
      },
      "writtenOn": "2018-09-04T22:32:12Z",
      "side": 1,
      "message": "Fixed",
      "parentUuid": "20b4c76e_77106a03",
      "range": {
        "startLine": 2691,
        "startChar": 4,
        "endLine": 2727,
        "endChar": 5
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e9805215_956a46c3",
        "filename": "src/libANGLE/validationES2.cpp",
        "patchSetId": 7
      },
      "lineNbr": 2731,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-08-17T17:57:54Z",
      "side": 1,
      "message": "This function should have the same behaviour as glGetIntegeri_v in ES 3+.  You can turn this function into:\n\n   \n    if (!context-\u003egetExtensions().multiviewDrawBuffers)\n    {\n        context-\u003ehandleError(InvalidOperation() \u003c\u003c \"Extension not supported.\");\n        return false;\n    }\n    return ValidateIndexedStateQuery(context, target, index, nullptr);\n\nAnd merge the new checks into ValidateIndexedStateQuery.",
      "range": {
        "startLine": 2731,
        "startChar": 5,
        "endLine": 2731,
        "endChar": 29
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a2eb6579_669ee28b",
        "filename": "src/libANGLE/validationES2.cpp",
        "patchSetId": 7
      },
      "lineNbr": 2731,
      "author": {
        "id": 1147451
      },
      "writtenOn": "2018-09-04T22:32:12Z",
      "side": 1,
      "message": "Fixed",
      "parentUuid": "e9805215_956a46c3",
      "range": {
        "startLine": 2731,
        "startChar": 5,
        "endLine": 2731,
        "endChar": 29
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "715302eb_1cbc228c",
        "filename": "src/libANGLE/validationES2.cpp",
        "patchSetId": 7
      },
      "lineNbr": 2746,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-08-17T17:57:54Z",
      "side": 1,
      "message": "index is a uint.",
      "range": {
        "startLine": 2746,
        "startChar": 8,
        "endLine": 2746,
        "endChar": 17
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0331f4fb_00715946",
        "filename": "src/libANGLE/validationES2.cpp",
        "patchSetId": 7
      },
      "lineNbr": 2746,
      "author": {
        "id": 1147451
      },
      "writtenOn": "2018-09-04T22:32:12Z",
      "side": 1,
      "message": "Fixed",
      "parentUuid": "715302eb_1cbc228c",
      "range": {
        "startLine": 2746,
        "startChar": 8,
        "endLine": 2746,
        "endChar": 17
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d2b109b7_ed16c76b",
        "filename": "src/libGLESv2/entry_points_gles_ext_autogen.cpp",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-08-17T17:57:54Z",
      "side": 1,
      "message": "This is an auto-gen file, you need to update generate_entry_points.py and run scripts/run_code_generation.py",
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bd3c13c0_62239057",
        "filename": "src/libGLESv2/entry_points_gles_ext_autogen.cpp",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1147451
      },
      "writtenOn": "2018-09-04T22:32:12Z",
      "side": 1,
      "message": "Fixed",
      "parentUuid": "d2b109b7_ed16c76b",
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30b4ff71_09431b02",
        "filename": "src/libGLESv2/libGLESv2_autogen.cpp",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-08-17T17:57:54Z",
      "side": 1,
      "message": "This is an auto-gen file too.",
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6dd204ad_c2dea97e",
        "filename": "src/libGLESv2/libGLESv2_autogen.cpp",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1147451
      },
      "writtenOn": "2018-09-04T22:32:12Z",
      "side": 1,
      "message": "Fixed",
      "parentUuid": "30b4ff71_09431b02",
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b70bbd1c_b1dd1e25",
        "filename": "src/libGLESv2/libGLESv2_autogen.def",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-08-17T17:57:54Z",
      "side": 1,
      "message": "This one too.",
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "afd9a0f5_2bb434c5",
        "filename": "src/libGLESv2/libGLESv2_autogen.def",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1147451
      },
      "writtenOn": "2018-09-04T22:32:12Z",
      "side": 1,
      "message": "Fixed",
      "parentUuid": "b70bbd1c_b1dd1e25",
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "838ca5fd_35a5e867",
        "filename": "src/tests/angle_end2end_tests.gypi",
        "patchSetId": 7
      },
      "lineNbr": 87,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-08-17T17:57:54Z",
      "side": 1,
      "message": "nit: spaces instead of tabs.",
      "range": {
        "startLine": 87,
        "startChar": 0,
        "endLine": 87,
        "endChar": 3
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c23e69c_188934d6",
        "filename": "src/tests/angle_end2end_tests.gypi",
        "patchSetId": 7
      },
      "lineNbr": 87,
      "author": {
        "id": 1147451
      },
      "writtenOn": "2018-09-04T22:32:12Z",
      "side": 1,
      "message": "Fixed",
      "parentUuid": "838ca5fd_35a5e867",
      "range": {
        "startLine": 87,
        "startChar": 0,
        "endLine": 87,
        "endChar": 3
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "92afd6dc_83422cac",
        "filename": "src/tests/gl_tests/MultiviewDrawBuffersTest.cpp",
        "patchSetId": 7
      },
      "lineNbr": 16,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-08-17T17:57:54Z",
      "side": 1,
      "message": "Can\u0027t you inherit from ANGLETest?",
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9da44b07_bc35013f",
        "filename": "src/tests/gl_tests/MultiviewDrawBuffersTest.cpp",
        "patchSetId": 7
      },
      "lineNbr": 16,
      "author": {
        "id": 1147451
      },
      "writtenOn": "2018-09-04T22:32:12Z",
      "side": 1,
      "message": "Fixed",
      "parentUuid": "92afd6dc_83422cac",
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8f44845e_a1a40e84",
        "filename": "src/tests/gl_tests/MultiviewDrawBuffersTest.cpp",
        "patchSetId": 7
      },
      "lineNbr": 74,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-08-17T17:57:54Z",
      "side": 1,
      "message": "I think this can go in the set up.",
      "range": {
        "startLine": 48,
        "startChar": 3,
        "endLine": 74,
        "endChar": 5
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ca46d06b_ed5e06a3",
        "filename": "src/tests/gl_tests/MultiviewDrawBuffersTest.cpp",
        "patchSetId": 7
      },
      "lineNbr": 74,
      "author": {
        "id": 1147451
      },
      "writtenOn": "2018-09-04T22:32:12Z",
      "side": 1,
      "message": "Fixed",
      "parentUuid": "8f44845e_a1a40e84",
      "range": {
        "startLine": 48,
        "startChar": 3,
        "endLine": 74,
        "endChar": 5
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "89f25c54_bb3fc919",
        "filename": "src/tests/gl_tests/MultiviewDrawBuffersTest.cpp",
        "patchSetId": 7
      },
      "lineNbr": 81,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-08-17T17:57:54Z",
      "side": 1,
      "message": "I don\u0027t think this variable is needed, you can use EXPECT_PIXEL_COLOR_EQ.",
      "range": {
        "startLine": 81,
        "startChar": 4,
        "endLine": 81,
        "endChar": 23
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2b6db8e0_07841d72",
        "filename": "src/tests/gl_tests/MultiviewDrawBuffersTest.cpp",
        "patchSetId": 7
      },
      "lineNbr": 81,
      "author": {
        "id": 1147451
      },
      "writtenOn": "2018-09-04T22:32:12Z",
      "side": 1,
      "message": "Fixed",
      "parentUuid": "89f25c54_bb3fc919",
      "range": {
        "startLine": 81,
        "startChar": 4,
        "endLine": 81,
        "endChar": 23
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "55815d8a_d62832b5",
        "filename": "src/tests/gl_tests/MultiviewDrawBuffersTest.cpp",
        "patchSetId": 7
      },
      "lineNbr": 101,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-08-17T17:57:54Z",
      "side": 1,
      "message": "You don\u0027t need all the extra fixtures.  Just the MultiviewDrawBuffersTest is fine.",
      "range": {
        "startLine": 83,
        "startChar": 0,
        "endLine": 101,
        "endChar": 0
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b68e2857_4ca072ed",
        "filename": "src/tests/gl_tests/MultiviewDrawBuffersTest.cpp",
        "patchSetId": 7
      },
      "lineNbr": 101,
      "author": {
        "id": 1147451
      },
      "writtenOn": "2018-09-04T22:32:12Z",
      "side": 1,
      "message": "Fixed",
      "parentUuid": "55815d8a_d62832b5",
      "range": {
        "startLine": 83,
        "startChar": 0,
        "endLine": 101,
        "endChar": 0
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8d70400e_f296761f",
        "filename": "src/tests/gl_tests/MultiviewDrawBuffersTest.cpp",
        "patchSetId": 7
      },
      "lineNbr": 119,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-08-17T17:57:54Z",
      "side": 1,
      "message": "nit: extra scope not needed.",
      "range": {
        "startLine": 119,
        "startChar": 8,
        "endLine": 119,
        "endChar": 9
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "17f5af59_9955ad8d",
        "filename": "src/tests/gl_tests/MultiviewDrawBuffersTest.cpp",
        "patchSetId": 7
      },
      "lineNbr": 119,
      "author": {
        "id": 1147451
      },
      "writtenOn": "2018-09-04T22:32:12Z",
      "side": 1,
      "message": "Fixed",
      "parentUuid": "8d70400e_f296761f",
      "range": {
        "startLine": 119,
        "startChar": 8,
        "endLine": 119,
        "endChar": 9
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "91f81bba_909551b6",
        "filename": "src/tests/gl_tests/MultiviewDrawBuffersTest.cpp",
        "patchSetId": 7
      },
      "lineNbr": 122,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-08-17T17:57:54Z",
      "side": 1,
      "message": "Can you elaborate on this?  What calls are generating invalid operations? We should strive to never generate errors in the backend.",
      "range": {
        "startLine": 120,
        "startChar": 0,
        "endLine": 122,
        "endChar": 54
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1dabc2b0_418f33cf",
        "filename": "src/tests/gl_tests/MultiviewDrawBuffersTest.cpp",
        "patchSetId": 7
      },
      "lineNbr": 122,
      "author": {
        "id": 1147451
      },
      "writtenOn": "2018-09-04T22:32:12Z",
      "side": 1,
      "message": "I ran into this problem on Geforce and possibly Intel GPU\u0027s.  Specifically, setting a stereo pixel format succeeds, but calling glDrawBuffer(GL_BACK_RIGHT) causes and INVALID_OPERATION error.  For Geforce, this is due to their 3D Vision technology which will always potentially allow stereo (ie: setting the pixel format works), but really only allows it if the display is a licensed display (ie: the draw buffer failure).\n\nIn release mode, the draw buffer error is silently ignored, but in debug mode I get the test failure.  I could have excluded nVidia and Intel GPU\u0027s from this test, but it is somewhat complicated by the fact that nVidia Quadro GPU\u0027s don\u0027t have the 3D Vision issue.  If I could just exclude Geforce, that would work.\n\nI could go either way (GPU exclusion or the current way), so just let me know which is preferred.",
      "parentUuid": "91f81bba_909551b6",
      "range": {
        "startLine": 120,
        "startChar": 0,
        "endLine": 122,
        "endChar": 54
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d8478d3d_33b57e2f",
        "filename": "src/tests/gl_tests/MultiviewDrawBuffersTest.cpp",
        "patchSetId": 7
      },
      "lineNbr": 122,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-09-17T20:37:14Z",
      "side": 1,
      "message": "Could it be that the driver supports the WGL stereo capability but not the GL multiview draw buffers extension?  In that case we should try to avoid exposing the EGL or GLES extensions.",
      "parentUuid": "1dabc2b0_418f33cf",
      "range": {
        "startLine": 120,
        "startChar": 0,
        "endLine": 122,
        "endChar": 54
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c8cb056_bc143560",
        "filename": "src/tests/gl_tests/MultiviewDrawBuffersTest.cpp",
        "patchSetId": 7
      },
      "lineNbr": 122,
      "author": {
        "id": 1147451
      },
      "writtenOn": "2018-10-02T16:52:55Z",
      "side": 1,
      "message": "I was able to add additional checks at initialization that fixes this issue, so it has been removed.",
      "parentUuid": "d8478d3d_33b57e2f",
      "range": {
        "startLine": 120,
        "startChar": 0,
        "endLine": 122,
        "endChar": 54
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c4e54b5c_4b9e5a4e",
        "filename": "util/EGLWindow.h",
        "patchSetId": 7
      },
      "lineNbr": 171,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-08-17T17:57:54Z",
      "side": 1,
      "message": "Use Optional.",
      "range": {
        "startLine": 171,
        "startChar": 4,
        "endLine": 171,
        "endChar": 11
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "73444de2_7d52263b",
        "filename": "util/EGLWindow.h",
        "patchSetId": 7
      },
      "lineNbr": 171,
      "author": {
        "id": 1147451
      },
      "writtenOn": "2018-09-04T22:32:12Z",
      "side": 1,
      "message": "Fixed",
      "parentUuid": "c4e54b5c_4b9e5a4e",
      "range": {
        "startLine": 171,
        "startChar": 4,
        "endLine": 171,
        "endChar": 11
      },
      "revId": "d199db282675d7867269e3dd89139bcf1b3dbc45",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}