{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "fbff385b_224ec14b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2021-12-20T19:10:53Z",
      "side": 1,
      "message": "LGTM, thanks!",
      "revId": "3c2c23050d3971216804b49476267315dccf7d88",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ad0cba0c_fddce031",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-12-20T19:10:55Z",
      "side": 1,
      "message": "LGTM",
      "revId": "3c2c23050d3971216804b49476267315dccf7d88",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "779bf338_2bf3c9c6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-12-20T19:24:08Z",
      "side": 1,
      "message": "Thanks Charlie for the quick fix",
      "revId": "3c2c23050d3971216804b49476267315dccf7d88",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "822e7996_875dff84",
        "filename": "src/libANGLE/renderer/vulkan/vk_utils.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1773,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-12-20T19:52:45Z",
      "side": 1,
      "message": "Locks are very expensive from a CPU execution standpoint.\n\nCan we make this conditional on the async feature being enabled?   Otherwise, we\u0027ll be taking a performance hit to handle the lock acquisition to handle a feature that may never be enabled.",
      "revId": "3c2c23050d3971216804b49476267315dccf7d88",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a513eebd_f71b99ed",
        "filename": "src/libANGLE/renderer/vulkan/vk_utils.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1773,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2021-12-20T20:14:59Z",
      "side": 1,
      "message": "Yea, that is a bit unfortunate. I think an uncontested lock should not be too expensive than an if statement.",
      "parentUuid": "822e7996_875dff84",
      "revId": "3c2c23050d3971216804b49476267315dccf7d88",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "19f3704f_d55b5969",
        "filename": "src/libANGLE/renderer/vulkan/vk_utils.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1773,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-12-20T20:27:59Z",
      "side": 1,
      "message": "Releasing a lock means issuing a `sync`, since all of the CPU writes need to have landed so other CPUs can see the fresh data.   That\u0027s going to be much slower than a branch that\u0027s always taken (so the branch predictor is always right).   The mechanism for taking the lock is also similarly slow.   These are the same reasons we don\u0027t take the global Context lock unless the context is shared and the overhead is absolutely necessary.\n\nWe should be better off with an \u0027if\u0027 than taking the lock.",
      "parentUuid": "a513eebd_f71b99ed",
      "revId": "3c2c23050d3971216804b49476267315dccf7d88",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d47ee151_93d0a611",
        "filename": "src/libANGLE/renderer/vulkan/vk_utils.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1773,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2021-12-20T21:13:19Z",
      "side": 1,
      "message": "Done. Added a new Mutex helper class for it.",
      "parentUuid": "19f3704f_d55b5969",
      "revId": "3c2c23050d3971216804b49476267315dccf7d88",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}