{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2a437cf4_f1e7b27f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1263724
      },
      "writtenOn": "2020-11-05T16:25:24Z",
      "side": 1,
      "message": "Add cached version of call to allow existing users to keep same functionality.",
      "revId": "83c1448e671ba7a90351cd0fa84db153734c4f42",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e62eded5_f456c6e7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-11-05T17:19:09Z",
      "side": 1,
      "message": "Why not merge these functions together?",
      "revId": "83c1448e671ba7a90351cd0fa84db153734c4f42",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "deb92481_7e4af5fc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-11-05T17:54:17Z",
      "side": 1,
      "message": "Courtney, my code can use the cached value.  The agreement is that AGI will set it before starting the game/ANGLE.  Thanks!",
      "revId": "83c1448e671ba7a90351cd0fa84db153734c4f42",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8fb6afc1_5c917f06",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-11-05T18:10:34Z",
      "side": 1,
      "message": "Courtney/cody: my suggestion here is to use this new \"cached\" path as the default, and use a different API for Capture/Replay.\n\nLong-term we should redo this anyway. Likely we can use sockets for real-time communication.",
      "revId": "83c1448e671ba7a90351cd0fa84db153734c4f42",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c3dc10e0_c3679f35",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2020-11-05T18:19:08Z",
      "side": 1,
      "message": "SGTM",
      "parentUuid": "8fb6afc1_5c917f06",
      "revId": "83c1448e671ba7a90351cd0fa84db153734c4f42",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "051a03c1_6ecc2511",
        "filename": "src/common/system_utils.cpp",
        "patchSetId": 4
      },
      "lineNbr": 29,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-11-05T16:29:29Z",
      "side": 1,
      "message": "Is the idea that non-FrameCapture code would call this?",
      "range": {
        "startLine": 29,
        "startChar": 12,
        "endLine": 29,
        "endChar": 52
      },
      "revId": "83c1448e671ba7a90351cd0fa84db153734c4f42",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d93de3e_d9532b99",
        "filename": "src/common/system_utils.cpp",
        "patchSetId": 4
      },
      "lineNbr": 29,
      "author": {
        "id": 1263724
      },
      "writtenOn": "2020-11-05T17:12:56Z",
      "side": 1,
      "message": "Yeah, anything that is okay with having a constant value for that query.\nYour AGI support probably does not want to call the Cached version since it\u0027s looking for the property to change during the run - or at least that\u0027s my understanding. If it\u0027s okay to require an app restart when the property changes then the cached version would be appropriate and much faster.",
      "parentUuid": "051a03c1_6ecc2511",
      "range": {
        "startLine": 29,
        "startChar": 12,
        "endLine": 29,
        "endChar": 52
      },
      "revId": "83c1448e671ba7a90351cd0fa84db153734c4f42",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "56a24add_760f829e",
        "filename": "src/common/system_utils.cpp",
        "patchSetId": 4
      },
      "lineNbr": 32,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2020-11-05T18:19:08Z",
      "side": 1,
      "message": "Is there any reason to make this Android only?  getenv works on all platforms.",
      "range": {
        "startLine": 32,
        "startChar": 0,
        "endLine": 32,
        "endChar": 60
      },
      "revId": "83c1448e671ba7a90351cd0fa84db153734c4f42",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "71a1a236_95f75a56",
        "filename": "src/common/system_utils.cpp",
        "patchSetId": 4
      },
      "lineNbr": 35,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2020-11-05T18:19:08Z",
      "side": 1,
      "message": "Might as well just assign this to a char* and return it in the block, rather than two calls to getenv.",
      "range": {
        "startLine": 35,
        "startChar": 8,
        "endLine": 35,
        "endChar": 28
      },
      "revId": "83c1448e671ba7a90351cd0fa84db153734c4f42",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}