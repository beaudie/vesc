{
  "comments": [
    {
      "key": {
        "uuid": "a76ea114_a1467980",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-09-15T18:50:30Z",
      "side": 1,
      "message": "Jamie, here\u0027s a first-pass attempt to use the message-passing approach that you favor.  I simplified it a bit by using a dirty bit that the Vulkan backend doesn\u0027t use (see comments in the code for more thoughts about that).  I also left/modified the RenderTargetVk code in place in order to have ASSERT\u0027s that can catch anything that isn\u0027t covered by the message passing.  Assuming no suprises, I\u0027ll pull that code out.\n\nTo test, I\u0027ll kick off bots that aren\u0027t broken.",
      "revId": "5b4e1c793794897c65bc84a1bee2d21b30a3883e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee9fd98b_09e644d6",
        "filename": "src/libANGLE/Framebuffer.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1888,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-09-15T18:50:30Z",
      "side": 1,
      "message": "This dirty bit is only used by the GL backend.\n\nBy using a dedicated dirty bit, I avoided problems (e.g. with RenderTargetVk methods being called before the next image was acquired), and could directly call ANI (and only call ANI).\n\nI have some thoughts about how to use different names for this bit for GL and Vulkan, but want to talk with Jamie (others?) about it.",
      "range": {
        "startLine": 1887,
        "startChar": 12,
        "endLine": 1888,
        "endChar": 53
      },
      "revId": "5b4e1c793794897c65bc84a1bee2d21b30a3883e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd18dc5a_b0ceed3b",
        "filename": "src/libANGLE/Framebuffer.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1888,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-09-16T19:37:01Z",
      "side": 1,
      "message": "Obsolete",
      "parentUuid": "ee9fd98b_09e644d6",
      "range": {
        "startLine": 1887,
        "startChar": 12,
        "endLine": 1888,
        "endChar": 53
      },
      "revId": "5b4e1c793794897c65bc84a1bee2d21b30a3883e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "02f33a79_35fc4a62",
        "filename": "src/libANGLE/renderer/vulkan/RenderTargetVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 100,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-09-15T18:50:30Z",
      "side": 1,
      "message": "I left the infrastructure in RenderTargetVk for this patchset, so that I could have ASSERT\u0027s to catch any cases that aren\u0027t handled by the message-passing approach.  Assuming that it works out, I\u0027ll remove all of the modified RenderTargetVk code.",
      "range": {
        "startLine": 90,
        "startChar": 0,
        "endLine": 100,
        "endChar": 0
      },
      "revId": "5b4e1c793794897c65bc84a1bee2d21b30a3883e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "71382845_9362abeb",
        "filename": "src/libANGLE/renderer/vulkan/RenderTargetVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 100,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-09-16T19:37:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "02f33a79_35fc4a62",
      "range": {
        "startLine": 90,
        "startChar": 0,
        "endLine": 100,
        "endChar": 0
      },
      "revId": "5b4e1c793794897c65bc84a1bee2d21b30a3883e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "71050278_04f9bf74",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 143,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-09-15T18:56:31Z",
      "side": 1,
      "message": "my thought was you could do the acquire in here. no extra dirty bit needed.",
      "range": {
        "startLine": 123,
        "startChar": 0,
        "endLine": 143,
        "endChar": 0
      },
      "revId": "5b4e1c793794897c65bc84a1bee2d21b30a3883e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cddf42b1_e0f59321",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 143,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-09-15T19:38:41Z",
      "side": 1,
      "message": "Yes. I understand.  There were a few reasons why I didn\u0027t use this.  What I have is getting ASSERT\u0027s.  I\u0027ll debug/see if I can plumb your approach to see if that helps.\n\nHere\u0027s some:\n\n1) This is a generic SurfaceVk method.  We need a WindowSurfaceVk method, which knows about the swapchain, whether ANI was deferred, etc.\n\n2) This method is called multiple times per call to FramebufferVk::syncState() (even multiple times for the same dirty bit).  I guess the waste of time isn\u0027t too bad, since it\u0027s once/frame.\n\n3) I ran into chicken-and-egg ... I tried both DIRTY_BIT_READ_BUFFER and DIRTY_BIT_DRAW_BUFFERS.  When I used the DIRTY_BIT_DRAW_BUFFERS, before this method was called (i.e. before ANI could happen), a RenderTargetVk method was called that depended on ANI having been done.",
      "parentUuid": "71050278_04f9bf74",
      "range": {
        "startLine": 123,
        "startChar": 0,
        "endLine": 143,
        "endChar": 0
      },
      "revId": "5b4e1c793794897c65bc84a1bee2d21b30a3883e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6172ff69_b68e73f9",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 143,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-09-15T19:52:09Z",
      "side": 1,
      "message": "Looking at an ASSERT, the dirtyBits are processed in order, and DIRTY_BIT_DRAW_BUFFERS is sometimes processed first, where the chicken-and-egg issue is.",
      "parentUuid": "cddf42b1_e0f59321",
      "range": {
        "startLine": 123,
        "startChar": 0,
        "endLine": 143,
        "endChar": 0
      },
      "revId": "5b4e1c793794897c65bc84a1bee2d21b30a3883e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b1d12d1c_5b482d0c",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 143,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-09-15T19:54:46Z",
      "side": 1,
      "message": "I don\u0027t quite understand why you\u0027re using DIRTY_BIT_DRAW_BUFFERS. The dirty bit via the surface change should correspond to DIRTY_BIT_*_ATTACHMENT or CONTENTS.",
      "parentUuid": "6172ff69_b68e73f9",
      "range": {
        "startLine": 123,
        "startChar": 0,
        "endLine": 143,
        "endChar": 0
      },
      "revId": "5b4e1c793794897c65bc84a1bee2d21b30a3883e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e2af3e4b_0e979ca8",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 143,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-09-15T19:57:29Z",
      "side": 1,
      "message": "In WindowSurfaceVk, I don\u0027t know which index to use.  Since it\u0027s the default framebuffer, I guess I could always use DIRTY_BIT_COLOR_ATTACHMENT_0.  Is that okay?",
      "parentUuid": "b1d12d1c_5b482d0c",
      "range": {
        "startLine": 123,
        "startChar": 0,
        "endLine": 143,
        "endChar": 0
      },
      "revId": "5b4e1c793794897c65bc84a1bee2d21b30a3883e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "35bf3e16_ba5602fe",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 143,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-09-15T20:00:14Z",
      "side": 1,
      "message": "Totally confused - you just call onStateChange in SurfaceVk. The dirty bit is decided in Framebuffer.cpp.",
      "parentUuid": "e2af3e4b_0e979ca8",
      "range": {
        "startLine": 123,
        "startChar": 0,
        "endLine": 143,
        "endChar": 0
      },
      "revId": "5b4e1c793794897c65bc84a1bee2d21b30a3883e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0586ef32_d5db8351",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 143,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-09-15T20:29:29Z",
      "side": 1,
      "message": "Ah, you\u0027ve not read the code in the CL.\n\nI had created a new message because the old message didn\u0027t seem correct.  I\u0027ve tried coding what I think you want.  It fixes tests on my laptop.  I\u0027ll try the bots.",
      "parentUuid": "35bf3e16_ba5602fe",
      "range": {
        "startLine": 123,
        "startChar": 0,
        "endLine": 143,
        "endChar": 0
      },
      "revId": "5b4e1c793794897c65bc84a1bee2d21b30a3883e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc652bfb_79160821",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 143,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-09-15T22:47:07Z",
      "side": 1,
      "message": "Triggering an \"ASSERT(!previousDeferredClears.test(colorIndexGL));\"\n\nComment says:\n\n    // If we are notified that any attachment is dirty, but we have deferred clears for them, a\n    // flushDeferredClears() call is missing somewhere.  ASSERT this to catch these bugs.",
      "parentUuid": "0586ef32_d5db8351",
      "range": {
        "startLine": 123,
        "startChar": 0,
        "endLine": 143,
        "endChar": 0
      },
      "revId": "5b4e1c793794897c65bc84a1bee2d21b30a3883e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6938df6d_0a2b531d",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 143,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-09-16T02:40:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cc652bfb_79160821",
      "range": {
        "startLine": 123,
        "startChar": 0,
        "endLine": 143,
        "endChar": 0
      },
      "revId": "5b4e1c793794897c65bc84a1bee2d21b30a3883e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6d9fe27b_c6539400",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.h",
        "patchSetId": 7
      },
      "lineNbr": 345,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-09-15T18:50:30Z",
      "side": 1,
      "message": "These values are still needed no matter which approach we use",
      "range": {
        "startLine": 339,
        "startChar": 0,
        "endLine": 345,
        "endChar": 0
      },
      "revId": "5b4e1c793794897c65bc84a1bee2d21b30a3883e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aeff0eb1_97f1e09c",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.h",
        "patchSetId": 7
      },
      "lineNbr": 345,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-09-16T19:37:01Z",
      "side": 1,
      "message": "Obsolete",
      "parentUuid": "6d9fe27b_c6539400",
      "range": {
        "startLine": 339,
        "startChar": 0,
        "endLine": 345,
        "endChar": 0
      },
      "revId": "5b4e1c793794897c65bc84a1bee2d21b30a3883e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}