{
  "comments": [
    {
      "key": {
        "uuid": "0f72fade_1949da84",
        "filename": "src/libANGLE/Error.h",
        "patchSetId": 2
      },
      "lineNbr": 91,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2017-05-17T09:12:14Z",
      "side": 1,
      "message": "I didn\u0027t go through the whole stack, but I didn\u0027t see this constructor used. If it isn\u0027t, then we could get rid of mId too.",
      "revId": "742b7ea8a1eb1b1d8176218197f8228d6a2c0d0a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e06f362_233d4d15",
        "filename": "src/libANGLE/Error.h",
        "patchSetId": 2
      },
      "lineNbr": 91,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2017-05-17T19:57:16Z",
      "side": 1,
      "message": "Indeed, I only use the one in egl::ErrorStream.\nDoes everyone else think this is not useful?",
      "parentUuid": "0f72fade_1949da84",
      "revId": "742b7ea8a1eb1b1d8176218197f8228d6a2c0d0a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f46dafc2_455c2c32",
        "filename": "src/libANGLE/Error.h",
        "patchSetId": 2
      },
      "lineNbr": 91,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-05-18T14:55:00Z",
      "side": 1,
      "message": "I think it is useful, since I don\u0027t know if we have a way to pipe error IDs otherwise and I think we will need them. Could also make some kind of weird helper struct that you could pipe to the ErrorStream",
      "parentUuid": "2e06f362_233d4d15",
      "revId": "742b7ea8a1eb1b1d8176218197f8228d6a2c0d0a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "344d8df9_50735105",
        "filename": "src/libANGLE/Error.h",
        "patchSetId": 2
      },
      "lineNbr": 91,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2017-06-02T22:31:12Z",
      "side": 1,
      "message": "Thanks! Keeping this as is, then.",
      "parentUuid": "f46dafc2_455c2c32",
      "revId": "742b7ea8a1eb1b1d8176218197f8228d6a2c0d0a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fbc2c461_78fe1522",
        "filename": "src/libANGLE/Error.h",
        "patchSetId": 2
      },
      "lineNbr": 193,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-05-18T14:55:00Z",
      "side": 1,
      "message": "make this a shared template like with ErrorOrResult.",
      "range": {
        "startLine": 170,
        "startChar": 0,
        "endLine": 193,
        "endChar": 2
      },
      "revId": "742b7ea8a1eb1b1d8176218197f8228d6a2c0d0a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b115fa23_4d8432a0",
        "filename": "src/libANGLE/Error.h",
        "patchSetId": 2
      },
      "lineNbr": 193,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2017-06-02T22:31:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fbc2c461_78fe1522",
      "range": {
        "startLine": 170,
        "startChar": 0,
        "endLine": 193,
        "endChar": 2
      },
      "revId": "742b7ea8a1eb1b1d8176218197f8228d6a2c0d0a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1b0650e5_0d2015aa",
        "filename": "src/libANGLE/Error.h",
        "patchSetId": 2
      },
      "lineNbr": 220,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-05-18T14:55:00Z",
      "side": 1,
      "message": "de-prefix all these.. just BadDevice, BadState, etc.",
      "range": {
        "startLine": 204,
        "startChar": 0,
        "endLine": 220,
        "endChar": 67
      },
      "revId": "742b7ea8a1eb1b1d8176218197f8228d6a2c0d0a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e7aa7729_5ebf1b53",
        "filename": "src/libANGLE/Error.h",
        "patchSetId": 2
      },
      "lineNbr": 220,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2017-06-02T22:31:12Z",
      "side": 1,
      "message": "That\u0027s what I originally wanted, unfortunately, this conflicts with defines in X11/X.h\nOther possible names: egl::Bad_Device, egl::_BadDevice, egl::BadDevice_t",
      "parentUuid": "1b0650e5_0d2015aa",
      "range": {
        "startLine": 204,
        "startChar": 0,
        "endLine": 220,
        "endChar": 67
      },
      "revId": "742b7ea8a1eb1b1d8176218197f8228d6a2c0d0a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b7795007_10b966ad",
        "filename": "src/libANGLE/Error.h",
        "patchSetId": 2
      },
      "lineNbr": 220,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-06-05T14:50:35Z",
      "side": 1,
      "message": "I like your names better.",
      "parentUuid": "e7aa7729_5ebf1b53",
      "range": {
        "startLine": 204,
        "startChar": 0,
        "endLine": 220,
        "endChar": 67
      },
      "revId": "742b7ea8a1eb1b1d8176218197f8228d6a2c0d0a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a044d48_298c83a6",
        "filename": "src/libANGLE/Error.h",
        "patchSetId": 2
      },
      "lineNbr": 222,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-05-18T14:55:00Z",
      "side": 1,
      "message": "call this NoError for consistency.",
      "range": {
        "startLine": 222,
        "startChar": 13,
        "endLine": 222,
        "endChar": 23
      },
      "revId": "742b7ea8a1eb1b1d8176218197f8228d6a2c0d0a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "35147ed6_fbdc5200",
        "filename": "src/libANGLE/Error.h",
        "patchSetId": 2
      },
      "lineNbr": 222,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2017-06-02T22:31:12Z",
      "side": 1,
      "message": "Can I get a third opinion on this?\nI think EglSuccess \u003c\u003d\u003e EGL_SUCCESS consistency is much more useful than having NoError in gl::, egl:: and vk::.\nIn fact, I would prefer if you\u0027ve renamed vk::NoError to vk::Success.\nMy rationale:\n1. When I search for \"NoError\" what I want to find is the occurrences of GL_NO_ERROR, and not egl and vk stuff.\n2. When I want to return EGL_SUCCESS it\u0027s much easier to remember that I need EglSuccess and not NoError.",
      "parentUuid": "6a044d48_298c83a6",
      "range": {
        "startLine": 222,
        "startChar": 13,
        "endLine": 222,
        "endChar": 23
      },
      "revId": "742b7ea8a1eb1b1d8176218197f8228d6a2c0d0a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "91377e6c_5c4c648b",
        "filename": "src/libANGLE/Error.h",
        "patchSetId": 2
      },
      "lineNbr": 222,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-06-05T14:50:35Z",
      "side": 1,
      "message": "The reason I named vk::NoError that way instead of vk::Success is because Success was causing compile errors, like your BadDevice stuff you mentioned above. So, a good way for us to be consistent is to call every success case NoError. \n\nBasically we can\u0027t have nice things because of system headers.",
      "parentUuid": "35147ed6_fbdc5200",
      "range": {
        "startLine": 222,
        "startChar": 13,
        "endLine": 222,
        "endChar": 23
      },
      "revId": "742b7ea8a1eb1b1d8176218197f8228d6a2c0d0a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b8323d44_5583a3d7",
        "filename": "src/libANGLE/Fence.cpp",
        "patchSetId": 2
      },
      "lineNbr": 46,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2017-05-16T20:57:54Z",
      "side": 1,
      "message": "Shouldn\u0027t need the gl:: prefix in all files at this level (src/libANGLE/*.cpp)",
      "range": {
        "startLine": 46,
        "startChar": 11,
        "endLine": 46,
        "endChar": 15
      },
      "revId": "742b7ea8a1eb1b1d8176218197f8228d6a2c0d0a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8164ffed_4857a353",
        "filename": "src/libANGLE/Fence.cpp",
        "patchSetId": 2
      },
      "lineNbr": 46,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2017-05-16T22:00:20Z",
      "side": 1,
      "message": "The reason I\u0027ve decided to add it is:\n1) Some files had it and some didn\u0027t, and I wanted a consistent style\n2) It is similar to GL_NO_ERROR, like gl::InvalidOperation is similar to GL_INVALID_OPERATION, thus it is easy to remember which name to use\n3) When the namespace is there, you can easily distinguish between gl::NoError and vk::NoError in search results. I.e., you can easily find all the references to gl::NoError if you want to refactor it to something else.",
      "parentUuid": "b8323d44_5583a3d7",
      "range": {
        "startLine": 46,
        "startChar": 11,
        "endLine": 46,
        "endChar": 15
      },
      "revId": "742b7ea8a1eb1b1d8176218197f8228d6a2c0d0a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5cc1d81d_b8aa891a",
        "filename": "src/libANGLE/Stream.cpp",
        "patchSetId": 2
      },
      "lineNbr": 160,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2017-05-16T20:57:54Z",
      "side": 1,
      "message": "Same comment about un-needed namespaces.",
      "range": {
        "startLine": 160,
        "startChar": 11,
        "endLine": 160,
        "endChar": 16
      },
      "revId": "742b7ea8a1eb1b1d8176218197f8228d6a2c0d0a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "75733672_2657c628",
        "filename": "src/libANGLE/Stream.cpp",
        "patchSetId": 2
      },
      "lineNbr": 160,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2017-05-16T22:29:09Z",
      "side": 1,
      "message": "I guess my reasoning for gl::NoError doesn\u0027t apply to egl::, since I already have Egl in the names (had to add it because of conflict with X11 defines). There is a minor issue (from my perspective) that in some places there will be egl::EglSuccess and in others just EglSuccess. I don\u0027t feel strongly about it. Do you want me to remove \"egl::\" where not needed, or maybe we can keep it as is?",
      "parentUuid": "5cc1d81d_b8aa891a",
      "range": {
        "startLine": 160,
        "startChar": 11,
        "endLine": 160,
        "endChar": 16
      },
      "revId": "742b7ea8a1eb1b1d8176218197f8228d6a2c0d0a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "28880ae1_74367be0",
        "filename": "src/libGLESv2/entry_points_egl_ext.cpp",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2017-05-16T20:57:54Z",
      "side": 1,
      "message": "Same comment (for all entry_points_* files)",
      "range": {
        "startLine": 44,
        "startChar": 25,
        "endLine": 44,
        "endChar": 30
      },
      "revId": "742b7ea8a1eb1b1d8176218197f8228d6a2c0d0a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}