{
  "comments": [
    {
      "key": {
        "uuid": "88751910_2973a6ab",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-08-14T03:02:49Z",
      "side": 1,
      "message": "Looking for early review.\n\nI have a large \"NOTE\" comment with a couple of ideas, one of which is that we might be able to store some info with the CommandBufferHelper::mAttachmentOps for this an other loadOp/storeOp optimizations.  I didn\u0027t do that with this patch set, wanting your feedback first.",
      "revId": "bd3b124521fa1f31127ab9d8e46e941bf663da79",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e2a0e356_b7da4573",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-08-14T05:55:45Z",
      "side": 1,
      "message": "A few drive-by comments.\n\nI don\u0027t quite understand the implications of \u0027restoring\u0027 an attachment, or how it got invalidated in the first place.\n\nShabi just did a bunch of work fixing invalidate bugs and added a bunch of new tests, so a green CQ run should give us a bit more confidence things are working correctly here though.",
      "revId": "bd3b124521fa1f31127ab9d8e46e941bf663da79",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "718c4aca_a886ff33",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-08-14T14:10:10Z",
      "side": 1,
      "message": "I was thinking there might be a simpler way.\n\nFirst, let\u0027s keep the behavior for color invalidates (in that they close the RP). We can optimize that if any application needs it.\n\nLook at CommandBufferHelper::mDepthTestEverEnabled and mStencilTestEverEnabled, we have code that tracks whether the RP had depth/stencil test. We can augment that to also know if depth/stencil write was ever enabled. On invalidate, we reset those bools set storeOp\u003dDONT_CARE and don\u0027t close RP. On next endRP, we check if those bools are set, we set storeOp\u003dSTORE because it means depth/stencil write was enabled since last invalidate. We may need to add another bool to distinguish storeOp\u003dDONT_CARE due to invalidate vs other reasons (multisampled render to texture, swapchain optimizations etc).\n\nOnly thing that needs some thought is how to make sure the render target\u0027s mContentDefined is recovered in that case too.",
      "revId": "bd3b124521fa1f31127ab9d8e46e941bf663da79",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2e92c401_a4417c68",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1364,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-08-14T03:09:09Z",
      "side": 1,
      "message": "Do you think I am correct, that we have a bug when isSubInvalidate?",
      "revId": "bd3b124521fa1f31127ab9d8e46e941bf663da79",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc865949_2f335533",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1364,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-08-14T05:55:45Z",
      "side": 1,
      "message": "I had the same concern, but Shabi pointed out that it should be fine:\n\nhttps://chromium-review.googlesource.com/c/angle/angle/+/2309111/7/src/libANGLE/renderer/vulkan/FramebufferVk.cpp#1268",
      "parentUuid": "2e92c401_a4417c68",
      "revId": "bd3b124521fa1f31127ab9d8e46e941bf663da79",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e72449d1_98732614",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1368,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-08-14T05:55:45Z",
      "side": 1,
      "message": "What\u0027s the difference between a new bool and storeOp\u003dDONT_CARE to indicate that the contents are invalid?   What would we do differently for each case?\n\nstoreOp\u003dDONT_CARE, bool\u003dtrue\nstoreOp\u003dDONT_CARE, bool\u003dfalse",
      "range": {
        "startLine": 1366,
        "startChar": 0,
        "endLine": 1368,
        "endChar": 30
      },
      "revId": "bd3b124521fa1f31127ab9d8e46e941bf663da79",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d0e28221_b6284cc1",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 2246,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-08-14T03:09:09Z",
      "side": 1,
      "message": "FYI ... The idea of this function is to turn back on the STORE storeOp when an attachment is being used again (since I didn\u0027t end the render pass in invalidateImpl().  I\u0027m assuming that if a color attachment has been invalidated, it should be \"restored\" (un-invalidated).  For depth/stencil, I only want to restore them if they are enabled (PUBG invalidates the depth/stencil buffers and then disables the depth/stencil functionality, and then keeps drawing to the color attachment).",
      "revId": "bd3b124521fa1f31127ab9d8e46e941bf663da79",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7c4bdd8f_4a7fa168",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 2246,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-08-14T05:55:45Z",
      "side": 1,
      "message": "I\u0027m confused why restoring an attachment is necessary.\n\nThe caller gives the list of attachments to be invalidated, so we should have only set storeOp\u003dDONT_CARE for those particular attachments (in this case, depth).   How did the color attachments have their storeOps set to DONT_CARE also, and why do we need to restore them?   Doesn\u0027t that mean we\u0027ll also do all of the work (and GMEM store) for rendering that the caller told us they don\u0027t care about anymore?",
      "parentUuid": "d0e28221_b6284cc1",
      "revId": "bd3b124521fa1f31127ab9d8e46e941bf663da79",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a1d7b3ee_ae6b2aab",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 2270,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-08-14T03:09:09Z",
      "side": 1,
      "message": "I should add a comment ... I call this if the storeOp was actually changed back to STORE, so that future render passes will use a loadOp of LOAD.",
      "revId": "bd3b124521fa1f31127ab9d8e46e941bf663da79",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5dcc20ad_f44233d0",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 4
      },
      "lineNbr": 946,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-08-14T05:55:45Z",
      "side": 1,
      "message": "Why is this loadOp check necessary (here and for depth/stencil below)?",
      "range": {
        "startLine": 946,
        "startChar": 13,
        "endLine": 946,
        "endChar": 86
      },
      "revId": "bd3b124521fa1f31127ab9d8e46e941bf663da79",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}