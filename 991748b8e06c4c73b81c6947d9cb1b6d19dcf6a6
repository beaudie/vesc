{
  "comments": [
    {
      "key": {
        "uuid": "639717c9_4a8e3565",
        "filename": "src/libANGLE/renderer/Format.h",
        "patchSetId": 7
      },
      "lineNbr": 128,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2018-12-13T21:07:51Z",
      "side": 1,
      "message": "Maybe isLUMA would be a better name. Since I find it confusing that \"has luminance or alpha bits and no RGB bits\" is shortened to hasLuminanceAlphaBits.",
      "range": {
        "startLine": 128,
        "startChar": 23,
        "endLine": 128,
        "endChar": 44
      },
      "revId": "991748b8e06c4c73b81c6947d9cb1b6d19dcf6a6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "21304d8f_26a70fc1",
        "filename": "src/libANGLE/renderer/Format.h",
        "patchSetId": 7
      },
      "lineNbr": 128,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2018-12-22T21:22:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "639717c9_4a8e3565",
      "range": {
        "startLine": 128,
        "startChar": 23,
        "endLine": 128,
        "endChar": 44
      },
      "revId": "991748b8e06c4c73b81c6947d9cb1b6d19dcf6a6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "834522a0_a18c0b83",
        "filename": "src/libANGLE/renderer/vulkan/DrawUtilsVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 33,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2018-12-13T21:07:51Z",
      "side": 1,
      "message": "I recall you also having these checks in another CL. Does it make sense to add functions like isInt() to angle::Format?",
      "range": {
        "startLine": 33,
        "startChar": 21,
        "endLine": 33,
        "endChar": 59
      },
      "revId": "991748b8e06c4c73b81c6947d9cb1b6d19dcf6a6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a2ef5095_69567ed2",
        "filename": "src/libANGLE/renderer/vulkan/DrawUtilsVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 33,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2018-12-22T21:22:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "834522a0_a18c0b83",
      "range": {
        "startLine": 33,
        "startChar": 21,
        "endLine": 33,
        "endChar": 59
      },
      "revId": "991748b8e06c4c73b81c6947d9cb1b6d19dcf6a6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ec4cc51d_4c5e427b",
        "filename": "src/libANGLE/renderer/vulkan/DrawUtilsVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 374,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-12-21T13:46:55Z",
      "side": 1,
      "message": "seems to be extra brackets here. Also I think I suggested in an earlier patch, but maybe you don\u0027t need template params here.",
      "range": {
        "startLine": 374,
        "startChar": 14,
        "endLine": 374,
        "endChar": 15
      },
      "revId": "991748b8e06c4c73b81c6947d9cb1b6d19dcf6a6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "31771419_d9ce4d64",
        "filename": "src/libANGLE/renderer/vulkan/DrawUtilsVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 374,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2018-12-22T21:22:44Z",
      "side": 1,
      "message": "Yes, with the refactor in the previous commit, this is subsequently changed.\n\nThe parentheses are not extra though. ANGLE_TRY is a macro, which means it\u0027s oblivious to \u003c\u003e (but not to ()). I.e., ANGLE_TRY(f(x,y)) sees only one parameter; f(x,y), but ANGLE_TRY(f\u003cx,y\u003e()) sees two parameters; f\u003cx and y\u003e().",
      "parentUuid": "ec4cc51d_4c5e427b",
      "range": {
        "startLine": 374,
        "startChar": 14,
        "endLine": 374,
        "endChar": 15
      },
      "revId": "991748b8e06c4c73b81c6947d9cb1b6d19dcf6a6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0c8487fe_e798bbdf",
        "filename": "src/libANGLE/renderer/vulkan/DrawUtilsVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 374,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2019-01-01T21:21:30Z",
      "side": 1,
      "message": "Interesting. Thanks for explaining.",
      "parentUuid": "31771419_d9ce4d64",
      "range": {
        "startLine": 374,
        "startChar": 14,
        "endLine": 374,
        "endChar": 15
      },
      "revId": "991748b8e06c4c73b81c6947d9cb1b6d19dcf6a6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dc286e3d_03754b42",
        "filename": "src/libANGLE/renderer/vulkan/DrawUtilsVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 374,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-01-02T19:10:33Z",
      "side": 1,
      "message": "Ack. If the issue ever pops up in the future, changing `ANGLE_TRY` to get `...` and use `__VA_ARGS__` would work around the problem.",
      "parentUuid": "0c8487fe_e798bbdf",
      "range": {
        "startLine": 374,
        "startChar": 14,
        "endLine": 374,
        "endChar": 15
      },
      "revId": "991748b8e06c4c73b81c6947d9cb1b6d19dcf6a6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "51b4ebdb_c9da6186",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 502,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-12-21T13:46:55Z",
      "side": 1,
      "message": "yes, it\u0027s totally legal. In the texture update logic for the D3D back-end we have a method \"TextureD3D::canCreateRenderTargetForImage\". This checks that the current configuration of the texture is mip-complete and is renderable, If so then we initialize the storage. Then we proceed with the fast copy if possible. We could end up doing something similar here.\n\nIn any case I suggest you don\u0027t initialize the storage right away here or in copySubImageImpl for now and just handle the \"easy\" case of the storage already being initialized. Can extend your implementation as a follow up.",
      "range": {
        "startLine": 497,
        "startChar": 8,
        "endLine": 502,
        "endChar": 40
      },
      "revId": "991748b8e06c4c73b81c6947d9cb1b6d19dcf6a6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e217916_0c0f7581",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 502,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2018-12-22T21:22:44Z",
      "side": 1,
      "message": "Done.\n\nDoes that mean on d3d we don\u0027t go through the fast path if `canCreateRenderTargetForImage` returns false? I\u0027m hoping to be able to get the fast path either way. I think by queuing the change and doing them in `flushUpdatesToImage()` this can be achieved. The unknowns at the moment are whether that function is definitely called before the next submission and what happens with interleaved cpu and gpu updates.\n\nWe\u0027ll see about that in a follow up change then, though I\u0027ll focus on getting the copy[Sub]Texture functions to use the fast path (when mImage.isValid() already) first.",
      "parentUuid": "51b4ebdb_c9da6186",
      "range": {
        "startLine": 497,
        "startChar": 8,
        "endLine": 502,
        "endChar": 40
      },
      "revId": "991748b8e06c4c73b81c6947d9cb1b6d19dcf6a6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "844924a1_0f7396b5",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 502,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2019-01-01T21:21:30Z",
      "side": 1,
      "message": "Yeah, on D3D some formats aren\u0027t renderable at all. So we can\u0027t create RenderTargetViews. For instance compressed Texture formats. flushUpatesToImage should always be called before a draw call that uses the texture and it\u0027s VkImage. Changes to a texture\u0027s data will trigger dirty bits to update the texture state in ContextVk::setupDraw.\n\nSounds good about doing this as a follow up. I expect there\u0027ll be some harder formats like compressed, etc, that we can handle later on.",
      "parentUuid": "9e217916_0c0f7581",
      "range": {
        "startLine": 497,
        "startChar": 8,
        "endLine": 502,
        "endChar": 40
      },
      "revId": "991748b8e06c4c73b81c6947d9cb1b6d19dcf6a6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7cfdb57c_fee8e8b4",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 502,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-01-02T19:10:33Z",
      "side": 1,
      "message": "Does copy of the compressed formats (as destination) even allowed? I mean, we don\u0027t actually have a CPU implementation of image compression, do we? So those cases are not possible now either.\n\nMy comment was mostly about this though:\n\n\u003e This checks that the current configuration of the texture is mip-complete and is renderable, If so then we initialize the storage.\n\nIf you can call glTexImage2D (with a different size) on a non-zero mip first, then you can\u0027t allocate storage yet, so the D3D backend would do a cpu readback if I understand correctly.\n\nWhat I plan to do instead is something similar to what we have now on the CPU readback side, but instead of:\n\n- finish\n- allocate buffer\n- copy image to buffer\n- convert on cpu\n- ...\n- copy buffer to image\n- delete buffer\n\nI would do:\n\n- allocate temp image (same size as mip being copied)\n- convert on gpu (destination being the temp image above)\n- ...\n- copy temp image to image\n- delete image\n\nThe cpu and gpu updates can also be nicely interleaved (if necessary) by making the update queue a mix of buffer-to-image and image-to-image updates.",
      "parentUuid": "844924a1_0f7396b5",
      "range": {
        "startLine": 497,
        "startChar": 8,
        "endLine": 502,
        "endChar": 40
      },
      "revId": "991748b8e06c4c73b81c6947d9cb1b6d19dcf6a6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7bf72797_ff2cde9e",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 502,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2019-01-02T21:43:19Z",
      "side": 1,
      "message": "OK yes. One note. I would investigate using a GPU pack buffer instead of a staging storage. copyImage shouldn\u0027t support stretching or scaling. And we\u0027ll need GPU pack/unpack buffers anyway for ES 3.0 and 2.0 extensions. It probably would tie in more nicely with the existing \"PixelBuffer\" logic in the TextureVk class as well. This would be a more compute-shadery-ey approach. And would avoid the resource allocation issues with using temporary images. But I think your current solution uses draw shaders so maybe you can tell me in person some time what the drawbacks were with compute shaders.\n\nRegarding compressed formats, you\u0027re probably right. copyImage would not support compressed. But copyTexture might. Not as familiar with what formats copyTexture supports.",
      "parentUuid": "7cfdb57c_fee8e8b4",
      "range": {
        "startLine": 497,
        "startChar": 8,
        "endLine": 502,
        "endChar": 40
      },
      "revId": "991748b8e06c4c73b81c6947d9cb1b6d19dcf6a6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f1a24129_dcc0ea91",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 507,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2018-12-13T21:07:51Z",
      "side": 1,
      "message": "nit: could you reverse the order of if and else here? mImage.valid() -\u003e mImage.getExtents() looks clearer to me.",
      "range": {
        "startLine": 495,
        "startChar": 0,
        "endLine": 507,
        "endChar": 5
      },
      "revId": "991748b8e06c4c73b81c6947d9cb1b6d19dcf6a6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b76a836c_2c3b544c",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 507,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2018-12-22T21:22:44Z",
      "side": 1,
      "message": "Removed.",
      "parentUuid": "f1a24129_dcc0ea91",
      "range": {
        "startLine": 495,
        "startChar": 0,
        "endLine": 507,
        "endChar": 5
      },
      "revId": "991748b8e06c4c73b81c6947d9cb1b6d19dcf6a6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "811abeb5_dbd7314b",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 608,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-12-21T13:46:55Z",
      "side": 1,
      "message": "Can you add a descriptions to this TODO?\n\nSee above, I think we should leave initializing the texture for a follow-up. We don\u0027t know if the Texture is fully initialized or mip-complete. I\u0027d saw we can trigger your fast path if the texture is already initialized and doesn\u0027t have any pending updates in the queue. This should also allow you to forego passing the base level extents.",
      "range": {
        "startLine": 608,
        "startChar": 11,
        "endLine": 608,
        "endChar": 35
      },
      "revId": "991748b8e06c4c73b81c6947d9cb1b6d19dcf6a6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "63af553e_123eb143",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 608,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2018-12-22T21:22:44Z",
      "side": 1,
      "message": "That comment was supposed to be removed, the TODO had moved up (which is now removed)",
      "parentUuid": "811abeb5_dbd7314b",
      "range": {
        "startLine": 608,
        "startChar": 11,
        "endLine": 608,
        "endChar": 35
      },
      "revId": "991748b8e06c4c73b81c6947d9cb1b6d19dcf6a6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8f7eee60_6de1bc03",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 629,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2018-12-13T21:07:51Z",
      "side": 1,
      "message": "You\u0027d probably want to remove this before landing :)",
      "range": {
        "startLine": 629,
        "startChar": 4,
        "endLine": 629,
        "endChar": 18
      },
      "revId": "991748b8e06c4c73b81c6947d9cb1b6d19dcf6a6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1949e37d_16d6e150",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 629,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-12-21T13:46:55Z",
      "side": 1,
      "message": "Yeah, I don\u0027t expect we can remove this path. At least not immediately.",
      "parentUuid": "8f7eee60_6de1bc03",
      "range": {
        "startLine": 629,
        "startChar": 4,
        "endLine": 629,
        "endChar": 18
      },
      "revId": "991748b8e06c4c73b81c6947d9cb1b6d19dcf6a6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "657fdb0a_5cc3dd10",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 629,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2018-12-22T21:22:44Z",
      "side": 1,
      "message": "Yuly meant the assert, and yes, I will remove it. I added it to see if the path is even reached on the bots (which it doesn\u0027t, so that\u0027s good ;)).",
      "parentUuid": "1949e37d_16d6e150",
      "range": {
        "startLine": 629,
        "startChar": 4,
        "endLine": 629,
        "endChar": 18
      },
      "revId": "991748b8e06c4c73b81c6947d9cb1b6d19dcf6a6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6444e35c_c16f20c2",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1115,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-12-21T13:46:55Z",
      "side": 1,
      "message": "nit: maybe omit \u0027Single\u0027 from these just for conciseness?",
      "range": {
        "startLine": 1115,
        "startChar": 25,
        "endLine": 1115,
        "endChar": 57
      },
      "revId": "991748b8e06c4c73b81c6947d9cb1b6d19dcf6a6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "39d507b0_1ea3a489",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1115,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2018-12-22T21:22:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6444e35c_c16f20c2",
      "range": {
        "startLine": 1115,
        "startChar": 25,
        "endLine": 1115,
        "endChar": 57
      },
      "revId": "991748b8e06c4c73b81c6947d9cb1b6d19dcf6a6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c9d2f26a_07879a5b",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1162,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-12-21T13:46:55Z",
      "side": 1,
      "message": "maybe you can remove this?",
      "range": {
        "startLine": 1162,
        "startChar": 4,
        "endLine": 1162,
        "endChar": 73
      },
      "revId": "991748b8e06c4c73b81c6947d9cb1b6d19dcf6a6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "704d7a3a_ab5a9723",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1162,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2018-12-22T21:22:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c9d2f26a_07879a5b",
      "range": {
        "startLine": 1162,
        "startChar": 4,
        "endLine": 1162,
        "endChar": 73
      },
      "revId": "991748b8e06c4c73b81c6947d9cb1b6d19dcf6a6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "269b4b07_1efe05cf",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1174,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-12-21T13:46:55Z",
      "side": 1,
      "message": "would prefer if we could allocate/resize the arrays lazily. Not every image will need them and it saves a bit of memory.",
      "range": {
        "startLine": 1169,
        "startChar": 0,
        "endLine": 1174,
        "endChar": 5
      },
      "revId": "991748b8e06c4c73b81c6947d9cb1b6d19dcf6a6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "035350e1_c37ae1a6",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1174,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2018-12-22T21:22:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "269b4b07_1efe05cf",
      "range": {
        "startLine": 1169,
        "startChar": 0,
        "endLine": 1174,
        "endChar": 5
      },
      "revId": "991748b8e06c4c73b81c6947d9cb1b6d19dcf6a6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "70f06e4b_b0bb0cf6",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.h",
        "patchSetId": 7
      },
      "lineNbr": 284,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-12-21T13:46:55Z",
      "side": 1,
      "message": "nit: pluralize",
      "range": {
        "startLine": 284,
        "startChar": 44,
        "endLine": 284,
        "endChar": 74
      },
      "revId": "991748b8e06c4c73b81c6947d9cb1b6d19dcf6a6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a3a86e7_83e686d1",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.h",
        "patchSetId": 7
      },
      "lineNbr": 284,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2018-12-22T21:22:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "70f06e4b_b0bb0cf6",
      "range": {
        "startLine": 284,
        "startChar": 44,
        "endLine": 284,
        "endChar": 74
      },
      "revId": "991748b8e06c4c73b81c6947d9cb1b6d19dcf6a6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}