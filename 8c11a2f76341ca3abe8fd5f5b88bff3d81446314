{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "992b41da_e2336cc8",
        "filename": "src/libANGLE/Texture.cpp",
        "patchSetId": 4
      },
      "lineNbr": 817,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2022-05-20T18:38:55Z",
      "side": 1,
      "message": "As we discussed on video, let\u0027s change this to handle the angle::Result here.  Once we have that working, we can expand support to non-texture objects\u0027 setLabel methods.\n\nHere\u0027s what I suggest changing this line to:\n\n    ANGLE_CONTEXT_TRY(mTexture-\u003eonLabelUpdate(context));",
      "revId": "8c11a2f76341ca3abe8fd5f5b88bff3d81446314",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "af78fa28_3a679350",
        "filename": "src/libANGLE/Texture.cpp",
        "patchSetId": 4
      },
      "lineNbr": 817,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-05-20T18:43:06Z",
      "side": 1,
      "message": "Kind of a hack, because `ANGLE_CONTEXT_TRY` is supposed to be only called from `Context`. But the implementation allows this hack I believe, so this could be done temporarily (but please, only temporarily!)",
      "parentUuid": "992b41da_e2336cc8",
      "revId": "8c11a2f76341ca3abe8fd5f5b88bff3d81446314",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6f91f8b2_26f9a9ab",
        "filename": "src/libANGLE/Texture.cpp",
        "patchSetId": 4
      },
      "lineNbr": 817,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2022-05-20T18:55:35Z",
      "side": 1,
      "message": "Yes, it\u0027s just temporary.  Since this CL started out just dealing with textures, I wanted it to work for textures, with the angle::Result flowing up to the front-end, and get it all working.  When I spoke with Mark Wednesday, he pointed out that this `Texture::setLabel` method is part of `LabeledObject`, and therefore the scope of this effort is much larger than what I thought Pascal\u0027s original request was for.\n\nThus, get things figured out with textures, and then expand to all of the classes that inherit from `LabeledObject`.\n\nQuestion for you Shabi.  Is it okay to land this CL that just does textures, and then (immediately) do another CL to handle `LabeledObject`?  Or, do you prefer that this CL expand (quite a bit) to handle all of the `LabeledObject` sub-classes?",
      "parentUuid": "af78fa28_3a679350",
      "revId": "8c11a2f76341ca3abe8fd5f5b88bff3d81446314",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d9dc4004_46f22cf6",
        "filename": "src/libANGLE/Texture.cpp",
        "patchSetId": 4
      },
      "lineNbr": 817,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-05-20T19:01:43Z",
      "side": 1,
      "message": "Limiting the scope + follow up SGTM",
      "parentUuid": "6f91f8b2_26f9a9ab",
      "revId": "8c11a2f76341ca3abe8fd5f5b88bff3d81446314",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "46e8fbb6_f7bfbb96",
        "filename": "src/libANGLE/Texture.cpp",
        "patchSetId": 4
      },
      "lineNbr": 817,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2022-05-20T19:43:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d9dc4004_46f22cf6",
      "revId": "8c11a2f76341ca3abe8fd5f5b88bff3d81446314",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b52ac25c_58ddac20",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 2681,
      "author": {
        "id": 1511618
      },
      "writtenOn": "2022-05-20T18:14:19Z",
      "side": 1,
      "message": "If the result is not returned or used a compilation error is generated. If ANGLE_VK_TRY didn\u0027t return angle::Result::Stop, this would not be an issue. Perhaps it is worth calling contextVk-\u003ehandleError directly and not returning a value?",
      "range": {
        "startLine": 2681,
        "startChar": 8,
        "endLine": 2681,
        "endChar": 21
      },
      "revId": "8c11a2f76341ca3abe8fd5f5b88bff3d81446314",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4fca58fa_92e5245f",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 2681,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-05-20T18:20:55Z",
      "side": 1,
      "message": "Our preferred method is to make the function return `angle::Result`, and then use `ANGLE_VK_TRY`.",
      "parentUuid": "b52ac25c_58ddac20",
      "range": {
        "startLine": 2681,
        "startChar": 8,
        "endLine": 2681,
        "endChar": 21
      },
      "revId": "8c11a2f76341ca3abe8fd5f5b88bff3d81446314",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7480f459_5bbc8103",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 2681,
      "author": {
        "id": 1511618
      },
      "writtenOn": "2022-05-20T18:27:16Z",
      "side": 1,
      "message": "That is done in `vk::SetDebugUtilsObjectName()` in `vk_utils.cpp`. I suppose it can go in either place but we end up in the same place eventually.",
      "parentUuid": "4fca58fa_92e5245f",
      "range": {
        "startLine": 2681,
        "startChar": 8,
        "endLine": 2681,
        "endChar": 21
      },
      "revId": "8c11a2f76341ca3abe8fd5f5b88bff3d81446314",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cd99b02d_0c5b23d5",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 2681,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-05-20T18:31:01Z",
      "side": 1,
      "message": "Right, you can `return vk::SetDebugUtilsObjectName` here.",
      "parentUuid": "7480f459_5bbc8103",
      "range": {
        "startLine": 2681,
        "startChar": 8,
        "endLine": 2681,
        "endChar": 21
      },
      "revId": "8c11a2f76341ca3abe8fd5f5b88bff3d81446314",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d9f349f3_5e2a82a5",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 2681,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2022-05-20T19:43:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cd99b02d_0c5b23d5",
      "range": {
        "startLine": 2681,
        "startChar": 8,
        "endLine": 2681,
        "endChar": 21
      },
      "revId": "8c11a2f76341ca3abe8fd5f5b88bff3d81446314",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}