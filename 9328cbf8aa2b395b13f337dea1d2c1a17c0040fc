{
  "comments": [
    {
      "key": {
        "uuid": "f9c29833_441bc01c",
        "filename": "src/libANGLE/renderer/vulkan/renderervk_utils.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1497,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2018-01-10T21:17:55Z",
      "side": 1,
      "message": "nit: \u003d default.",
      "revId": "9328cbf8aa2b395b13f337dea1d2c1a17c0040fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7bfe1a88_4cb8719d",
        "filename": "src/libANGLE/renderer/vulkan/renderervk_utils.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1502,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2018-01-10T21:17:55Z",
      "side": 1,
      "message": "ditto",
      "revId": "9328cbf8aa2b395b13f337dea1d2c1a17c0040fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e290b913_f741602f",
        "filename": "src/libANGLE/renderer/vulkan/renderervk_utils.h",
        "patchSetId": 7
      },
      "lineNbr": 740,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2018-01-10T21:17:55Z",
      "side": 1,
      "message": "I\u0027m not sure how important this is but it feels like there is a lot of wasted bits in RenderPassDesc and things could be made more efficient by packing enums in smaller types and using C bitfields.",
      "revId": "9328cbf8aa2b395b13f337dea1d2c1a17c0040fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1edc91f3_b172994c",
        "filename": "src/libANGLE/renderer/vulkan/renderervk_utils.h",
        "patchSetId": 7
      },
      "lineNbr": 740,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-01-10T21:29:59Z",
      "side": 1,
      "message": "C bitfields are not at all portable. I\u0027m using enough magic hackery to get things working here that I didn\u0027t want to push my luck.",
      "parentUuid": "e290b913_f741602f",
      "revId": "9328cbf8aa2b395b13f337dea1d2c1a17c0040fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "51c80f0c_62244d28",
        "filename": "src/libANGLE/renderer/vulkan/renderervk_utils.h",
        "patchSetId": 7
      },
      "lineNbr": 740,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2018-01-11T12:26:42Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "1edc91f3_b172994c",
      "revId": "9328cbf8aa2b395b13f337dea1d2c1a17c0040fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "edf97201_cc91a6ab",
        "filename": "src/libANGLE/renderer/vulkan/renderervk_utils.h",
        "patchSetId": 7
      },
      "lineNbr": 758,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2018-01-10T21:17:55Z",
      "side": 1,
      "message": "inputRate is essentially a boolean in Vulkan, we could gain space by packing it as a bitfield.",
      "revId": "9328cbf8aa2b395b13f337dea1d2c1a17c0040fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ce7097f0_04977caa",
        "filename": "src/libANGLE/renderer/vulkan/renderervk_utils.h",
        "patchSetId": 7
      },
      "lineNbr": 758,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-01-11T02:55:32Z",
      "side": 1,
      "message": "A lot of this stuff I made this way to be convenient and pretty easy to deal with code-wise. As a first pass it should be way, way faster than re-creating the pipeline every state change. It leaves the door open for optimizations, but also sets a baseline that we can test against. So, I left a general comment as to the intent but didn\u0027t make any bitfield or packing changes.",
      "parentUuid": "edf97201_cc91a6ab",
      "revId": "9328cbf8aa2b395b13f337dea1d2c1a17c0040fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2c938d10_4c39c3f3",
        "filename": "src/libANGLE/renderer/vulkan/renderervk_utils.h",
        "patchSetId": 7
      },
      "lineNbr": 758,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2018-01-11T12:26:42Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "ce7097f0_04977caa",
      "revId": "9328cbf8aa2b395b13f337dea1d2c1a17c0040fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "58b621d2_7db6930d",
        "filename": "src/libANGLE/renderer/vulkan/renderervk_utils.h",
        "patchSetId": 7
      },
      "lineNbr": 767,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2018-01-10T21:17:55Z",
      "side": 1,
      "message": "I think offset has to be less than stride which would allow to pack this structure to 4 bytes",
      "revId": "9328cbf8aa2b395b13f337dea1d2c1a17c0040fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ff3507e7_932b0d6e",
        "filename": "src/libANGLE/renderer/vulkan/renderervk_utils.h",
        "patchSetId": 7
      },
      "lineNbr": 774,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2018-01-10T21:17:55Z",
      "side": 1,
      "message": "Topology + primRestart can fit in a byte.",
      "revId": "9328cbf8aa2b395b13f337dea1d2c1a17c0040fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c6218b3_c353e126",
        "filename": "src/libANGLE/renderer/vulkan/renderervk_utils.h",
        "patchSetId": 7
      },
      "lineNbr": 780,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2018-01-10T21:17:55Z",
      "side": 1,
      "message": "Why alignas 32? You could make sure everything is packed by packing to 4 bytes. This would allow for packing things inside this structure more efficiently. Ditto in other structures below.",
      "revId": "9328cbf8aa2b395b13f337dea1d2c1a17c0040fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5ada9607_5d520135",
        "filename": "src/libANGLE/renderer/vulkan/renderervk_utils.h",
        "patchSetId": 7
      },
      "lineNbr": 780,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-01-11T02:55:32Z",
      "side": 1,
      "message": "Not sure what you mean exactly by \u0027you could make sure everything is packed by packing to 4 bytes\u0027. You mean alignas(4)? The 32 gives a stronger condition. I tried to give the strongest limitations possible so as to reduce the chance of this stuff breaking - my thought was that at this point we should focus on 100% correctness, and optimize in follow-up work. I\u0027ll make sure to make a design doc entry so we can have a better recorded discussion.",
      "parentUuid": "5c6218b3_c353e126",
      "revId": "9328cbf8aa2b395b13f337dea1d2c1a17c0040fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ecda047c_e926ce1e",
        "filename": "src/libANGLE/renderer/vulkan/renderervk_utils.h",
        "patchSetId": 7
      },
      "lineNbr": 780,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2018-01-11T12:26:42Z",
      "side": 1,
      "message": "The constraints here are:\n 1 - access to the members are well-aligned\n 2 - the static_assert at [1] holds\n\nThe largest alignment of types used for the PipelineDesc is 4 for uint32_t and float. There is no need to add additional constraints since with alignas(4) all accesses will be correctly aligned.",
      "parentUuid": "5ada9607_5d520135",
      "revId": "9328cbf8aa2b395b13f337dea1d2c1a17c0040fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f3de8a2e_b42ea145",
        "filename": "src/libANGLE/renderer/vulkan/renderervk_utils.h",
        "patchSetId": 7
      },
      "lineNbr": 938,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2018-01-11T12:26:42Z",
      "side": 1,
      "message": "[1]",
      "revId": "9328cbf8aa2b395b13f337dea1d2c1a17c0040fc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}