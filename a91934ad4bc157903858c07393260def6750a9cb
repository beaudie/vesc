{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "78735251_805a7e07",
        "filename": "src/libANGLE/renderer/vulkan/ProgramExecutableVk.h",
        "patchSetId": 9
      },
      "lineNbr": 105,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-07-05T11:54:24Z",
      "side": 1,
      "message": "if we have two instances of two immutable samplers, in swapped orders, e.g. red_8 + rg_16, and rg_16 + red_8, is this compatible? Seems to me like you should be also storing the index if no.\n\nAlso can you store the typed format instead of uint64_t?",
      "range": {
        "startLine": 105,
        "startChar": 0,
        "endLine": 105,
        "endChar": 53
      },
      "revId": "a91934ad4bc157903858c07393260def6750a9cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "41728626_1c068259",
        "filename": "src/libANGLE/renderer/vulkan/ProgramExecutableVk.h",
        "patchSetId": 9
      },
      "lineNbr": 105,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-07-05T14:51:55Z",
      "side": 1,
      "message": "+1. This should maybe be an angle::FastVector, (or std::FixedVector if there\u0027s a reasonable limit.) and then the index becomes implicit.\n\nA test based on Jamie\u0027s scenario would be appreciated.",
      "parentUuid": "78735251_805a7e07",
      "range": {
        "startLine": 105,
        "startChar": 0,
        "endLine": 105,
        "endChar": 53
      },
      "revId": "a91934ad4bc157903858c07393260def6750a9cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a0db8773_eb892dca",
        "filename": "src/libANGLE/renderer/vulkan/ProgramExecutableVk.h",
        "patchSetId": 9
      },
      "lineNbr": 105,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-07-05T16:31:14Z",
      "side": 1,
      "message": "Since the number of samplers is probably pretty small I was just thinking you store {index,format} in a small array. You could use FixedVector or std::vector depending on how they\u0027re used.",
      "parentUuid": "41728626_1c068259",
      "range": {
        "startLine": 105,
        "startChar": 0,
        "endLine": 105,
        "endChar": 53
      },
      "revId": "a91934ad4bc157903858c07393260def6750a9cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9d2d1ce1_b11279d4",
        "filename": "src/libANGLE/renderer/vulkan/ProgramExecutableVk.h",
        "patchSetId": 9
      },
      "lineNbr": 105,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-07-05T20:27:27Z",
      "side": 1,
      "message": "\u003e two immutable samplers, in swapped orders ... is this compatible?\n\u003e Also can you store the typed format instead of uint64_t?\n\nOn Android, external formats are opaque handles that are pretty much a blackbox for modules outside the Vulkan ICD (and gralloc). There is no mechanism to get information about swapped orders or descriptor counts in the API.\nTo be safe, we need to assume every external format may have a different layout.\n\n\n\u003e ... if there\u0027s a reasonable limit\n\u003e ... I was just thinking you store {index,format} in a small array ...\n\nall possible AHARDWAREBUFFER_FORMAT_... YUV formats, including private vendor defined formats, fall into the \"external format\" category. As such the number of such formats is unknowable in ANGLE",
      "parentUuid": "a0db8773_eb892dca",
      "range": {
        "startLine": 105,
        "startChar": 0,
        "endLine": 105,
        "endChar": 53
      },
      "revId": "a91934ad4bc157903858c07393260def6750a9cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c96dd846_5df7d76e",
        "filename": "src/libANGLE/renderer/vulkan/ProgramExecutableVk.h",
        "patchSetId": 9
      },
      "lineNbr": 105,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-07-06T02:34:25Z",
      "side": 1,
      "message": "Excuse my ignorance, but doesn\u0027t the order of samplers in VkDescriptorSetLayoutBinding::pImmutableSamplers matter? Is the index into that array what you are referring to Jamie?",
      "parentUuid": "9d2d1ce1_b11279d4",
      "range": {
        "startLine": 105,
        "startChar": 0,
        "endLine": 105,
        "endChar": 53
      },
      "revId": "a91934ad4bc157903858c07393260def6750a9cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2d41cb5a_10856360",
        "filename": "src/libANGLE/renderer/vulkan/ProgramExecutableVk.h",
        "patchSetId": 9
      },
      "lineNbr": 105,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-07-06T22:01:18Z",
      "side": 1,
      "message": "\u003e if we have two instances of two immutable samplers, in swapped orders, e.g. red_8 + rg_16, and rg_16 + red_8, is this compatible?\n\nfair point. This could be implementation dependent, some vendors have no issues with swizzled component order. External formats dont have this issue since YCbCr and YCrCb formats will have different values (on Android at least) but we will need to handle this when we support native YUV VkFormats.\n\n\u003e Seems to me like you should be also storing the index\n\ndid you mean component swizzel? if not, can you elaborate?\n\n\u003e but doesn\u0027t the order of samplers in VkDescriptorSetLayoutBinding::pImmutableSamplers matter?\n\nfrom my reading of the code, each binding index gets its own \"pImmutableSamplers\" array, which means only 1 entry in that array. Please let me know if this is not the case.\n\n\u003e Is the index into that array what you are referring to Jamie?\n\ni thought jamie\u0027s comment was talking about component swizzle, is that not the case?",
      "parentUuid": "c96dd846_5df7d76e",
      "range": {
        "startLine": 105,
        "startChar": 0,
        "endLine": 105,
        "endChar": 53
      },
      "revId": "a91934ad4bc157903858c07393260def6750a9cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f3a3ba92_c8b5372c",
        "filename": "src/libANGLE/renderer/vulkan/ProgramExecutableVk.h",
        "patchSetId": 9
      },
      "lineNbr": 105,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-07-07T00:35:36Z",
      "side": 1,
      "message": "I was referring to the descriptor index. Descriptors are usually associated with a particular slot. So if you have a different format at slot 0 \u0026 1 (slot 0\u003dformat A, slot 1 \u003d format B, vs slot 0 \u003d format B, slot 1 \u003d format A) you\u0027d have a mismatch. Is that making sense?",
      "parentUuid": "2d41cb5a_10856360",
      "range": {
        "startLine": 105,
        "startChar": 0,
        "endLine": 105,
        "endChar": 53
      },
      "revId": "a91934ad4bc157903858c07393260def6750a9cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4a9bdba9_a5a3f0a2",
        "filename": "src/libANGLE/renderer/vulkan/ProgramExecutableVk.h",
        "patchSetId": 9
      },
      "lineNbr": 105,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-07-08T15:21:06Z",
      "side": 1,
      "message": "good catch. did not account for texture index variability. Will update patch for that and add test later in the chain",
      "parentUuid": "f3a3ba92_c8b5372c",
      "range": {
        "startLine": 105,
        "startChar": 0,
        "endLine": 105,
        "endChar": 53
      },
      "revId": "a91934ad4bc157903858c07393260def6750a9cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5769e090_3a59cd21",
        "filename": "src/libANGLE/renderer/vulkan/ProgramExecutableVk.h",
        "patchSetId": 9
      },
      "lineNbr": 216,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-07-05T11:54:24Z",
      "side": 1,
      "message": "this whole function just looks like operator\u003d\u003d.",
      "range": {
        "startLine": 200,
        "startChar": 0,
        "endLine": 216,
        "endChar": 28
      },
      "revId": "a91934ad4bc157903858c07393260def6750a9cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "09a9812e_85bccf41",
        "filename": "src/libANGLE/renderer/vulkan/ProgramExecutableVk.h",
        "patchSetId": 9
      },
      "lineNbr": 216,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-07-05T20:27:27Z",
      "side": 1,
      "message": "indeed, will modify",
      "parentUuid": "5769e090_3a59cd21",
      "range": {
        "startLine": 200,
        "startChar": 0,
        "endLine": 216,
        "endChar": 28
      },
      "revId": "a91934ad4bc157903858c07393260def6750a9cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f6ddb8c4_f6559176",
        "filename": "src/libANGLE/renderer/vulkan/ProgramExecutableVk.h",
        "patchSetId": 9
      },
      "lineNbr": 216,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-07-06T00:47:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "09a9812e_85bccf41",
      "range": {
        "startLine": 200,
        "startChar": 0,
        "endLine": 216,
        "endChar": 28
      },
      "revId": "a91934ad4bc157903858c07393260def6750a9cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9c351ac2_4f901a6b",
        "filename": "src/libANGLE/renderer/vulkan/ProgramExecutableVk.h",
        "patchSetId": 9
      },
      "lineNbr": 303,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-07-05T11:54:24Z",
      "side": 1,
      "message": "this is no longer necessary, you can just check the format list !empty.",
      "range": {
        "startLine": 303,
        "startChar": 9,
        "endLine": 303,
        "endChar": 31
      },
      "revId": "a91934ad4bc157903858c07393260def6750a9cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c810e210_100dc003",
        "filename": "src/libANGLE/renderer/vulkan/ProgramExecutableVk.h",
        "patchSetId": 9
      },
      "lineNbr": 303,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-07-05T20:27:27Z",
      "side": 1,
      "message": "fair point, will remove",
      "parentUuid": "9c351ac2_4f901a6b",
      "range": {
        "startLine": 303,
        "startChar": 9,
        "endLine": 303,
        "endChar": 31
      },
      "revId": "a91934ad4bc157903858c07393260def6750a9cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5034e21b_55060367",
        "filename": "src/libANGLE/renderer/vulkan/ProgramExecutableVk.h",
        "patchSetId": 9
      },
      "lineNbr": 303,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-07-06T00:47:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c810e210_100dc003",
      "range": {
        "startLine": 303,
        "startChar": 9,
        "endLine": 303,
        "endChar": 31
      },
      "revId": "a91934ad4bc157903858c07393260def6750a9cb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}