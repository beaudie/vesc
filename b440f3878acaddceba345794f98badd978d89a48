{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "43152d49_99f7b9b2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2021-09-30T22:19:31Z",
      "side": 1,
      "message": "@shahbaz, observation:\n\nI stepped through all the code and I find one odd thing, in the RendererVk there is mPendingOneOffCommands which collects the OneOff ComamndBuffers - and it is collecting the 2 I create, but they should be flushed?, one after LockSurface and one after UnlockSurface.  I see no code releasing/flushing/poping them off except when RendererVk destroys. So that doesn\u0027t seem right. Is there something to call to cause them to be executed? ",
      "revId": "b440f3878acaddceba345794f98badd978d89a48",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e226e809_b8930732",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-10-01T20:02:56Z",
      "side": 1,
      "message": "`mPendingOneOffCommands` looks like a recycler. `queueSubmitOneOff` should take care of the submission.\n\nDo you see anything failing, or was this just a thought?",
      "parentUuid": "43152d49_99f7b9b2",
      "revId": "b440f3878acaddceba345794f98badd978d89a48",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "963bebbd_870d98d9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-10-01T20:26:04Z",
      "side": 1,
      "message": "Needs a rebase!",
      "revId": "b440f3878acaddceba345794f98badd978d89a48",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2364a3ac_ce6ce093",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2021-10-01T20:27:32Z",
      "side": 1,
      "message": "Next patch coming.",
      "revId": "b440f3878acaddceba345794f98badd978d89a48",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "33de9a18_a7bd3888",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2021-10-01T20:27:32Z",
      "side": 1,
      "message": "Yes, coming. We just sync\u0027d",
      "parentUuid": "963bebbd_870d98d9",
      "revId": "b440f3878acaddceba345794f98badd978d89a48",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cfa0451d_affe8950",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2021-10-01T20:27:32Z",
      "side": 1,
      "message": "Just a thought. I figured by the calls to finish or vkDeviceWaitIdle () {which is just a debug tool to be sure flushed} would be finished and the commands in the recycler recycled.\n\nWait for next upload, we are sync\u0027n now. I cleaned up duplicates and other code.\n\nLook at commit #3: https://chromium-review.googlesource.com/c/angle/angle/+/3174323\nAnd specifically look at SurfaceVk and vk_helpers where I do a OneOffCommand to copy Image-Buffer. Anything missing? I checked every other use of OneOffCommands and included the same elements - getCommandBufferOneOff, add Image Barrier for layout, call copy, queueSubmitOneOff, finishToSerial. Looks like it should work.\n\nMy test dies:\nglClear to Green\nlockSurface\nget bitmap pointer (the buffer is always black)\nfill buffer with red\nunlockSurface (which should write red back.)\nglReadPixels (says surface is still green instead of red)",
      "parentUuid": "e226e809_b8930732",
      "revId": "b440f3878acaddceba345794f98badd978d89a48",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c64f1fbc_e7069abc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2021-10-01T23:27:24Z",
      "side": 1,
      "message": "Local fast forward delayed, can\u0027t upload until conflicts resolved.\n\nI think glClear() is doing something weird. I use it to pre-fill a surface with color. But I think, even with glFinish() after glClear(), it doesn\u0027t change the Image immediately. Then later after unlockSurface, glReadPixels causes a finish and the glColor happens maybe after my copyBufferToImage?\nIf I remove glClear, then the test writes to buffer, then buffer to Image happens, and glReadPixels gets the written color.\n\n",
      "revId": "b440f3878acaddceba345794f98badd978d89a48",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2fd394c8_42b41ea4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-10-02T02:29:57Z",
      "side": 1,
      "message": "Another victim of deferred clears!\n\nClears get deferred, so that they would be done potentially as a loadOp when the render pass starts. You need to call `ImageHelper::flushStagedUpdates` before reading/writing to the image.",
      "parentUuid": "c64f1fbc_e7069abc",
      "revId": "b440f3878acaddceba345794f98badd978d89a48",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "559cd5d9_ef033336",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2021-10-04T15:29:48Z",
      "side": 1,
      "message": "Thank you.",
      "parentUuid": "2fd394c8_42b41ea4",
      "revId": "b440f3878acaddceba345794f98badd978d89a48",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "320c646e_f0b969a7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2021-10-04T15:29:48Z",
      "side": 1,
      "message": "thanks",
      "revId": "b440f3878acaddceba345794f98badd978d89a48",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}