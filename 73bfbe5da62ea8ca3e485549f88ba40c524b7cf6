{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a21d5d17_fb4c4769",
        "filename": "src/libANGLE/renderer/vulkan/CommandProcessor.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1013,
      "author": {
        "id": 1564492
      },
      "writtenOn": "2023-02-16T14:31:25Z",
      "side": 1,
      "message": "I concerned regarding this approach - processing tasks in the caller thread.\nWhat if caller will not get a chance to take a `mTaskDequeueMutex` until all commands are processed (mutex starvation)?\n\nIn this concrete case we may block on mutex, waiting currently executing unrelated command, just to check status. It is better to check atomic, then lock and check again.",
      "revId": "73bfbe5da62ea8ca3e485549f88ba40c524b7cf6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}