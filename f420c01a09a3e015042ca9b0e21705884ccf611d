{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "aa2e5b34_539739c4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2022-03-29T16:19:37Z",
      "side": 1,
      "message": "PTAL",
      "revId": "f420c01a09a3e015042ca9b0e21705884ccf611d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b9e27f08_21254502",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2022-03-29T16:20:42Z",
      "side": 1,
      "message": "FYI, the WIP change downstream is https://chromium-review.googlesource.com/c/chromium/src/+/3553595, which should be able to move forward once this rolls.",
      "revId": "f420c01a09a3e015042ca9b0e21705884ccf611d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a753b9a4_a3e41bd8",
        "filename": "BUILD.gn",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-03-29T16:36:42Z",
      "side": 1,
      "message": "Drive by: So now do we always want libpci built with ChromeCast? It makes me wonder why we didn\u0027t unconditionally want that previously.",
      "revId": "f420c01a09a3e015042ca9b0e21705884ccf611d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "45661e16_9e10ba42",
        "filename": "BUILD.gn",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1001982
      },
      "writtenOn": "2022-03-29T17:45:02Z",
      "side": 1,
      "message": "Chromecast builds on platforms that don\u0027t need libpci can override use_libpci \u003d false on a platform-by-platform basis. The downstream builders can work either way, but I can check with their maintainers what they would like to do with use_libpci on their linux builders.",
      "parentUuid": "a753b9a4_a3e41bd8",
      "revId": "f420c01a09a3e015042ca9b0e21705884ccf611d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8830c122_39a540bc",
        "filename": "BUILD.gn",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-03-29T18:01:52Z",
      "side": 1,
      "message": "Ack. In that case, we should probably rename this to say `angle_use_libpci`.",
      "parentUuid": "45661e16_9e10ba42",
      "revId": "f420c01a09a3e015042ca9b0e21705884ccf611d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:approval_code-owners"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "f420c01a09a3e015042ca9b0e21705884ccf611d",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "f420c01a09a3e015042ca9b0e21705884ccf611d",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two googlers using a trusted device must approve the change, see http://go/change-management-policy"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {},
      "overrideExpressionResult": {},
      "patchSetCommitId": "f420c01a09a3e015042ca9b0e21705884ccf611d",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {},
      "overrideExpressionResult": {},
      "patchSetCommitId": "f420c01a09a3e015042ca9b0e21705884ccf611d",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}