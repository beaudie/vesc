{
  "comments": [
    {
      "key": {
        "uuid": "7735cd0f_6b0b133e",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.h",
        "patchSetId": 10
      },
      "lineNbr": 32,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-08-06T19:19:48Z",
      "side": 1,
      "message": "This name feels misleading, since they *are* rendering to a texture, just not a multisampled render to texture.   Using _1 seems more appropriate.\n\nAs a nit: Does using \u00272x\u0027, \u00274x\u0027, etc. look better than the leading underscore, so it matches with the normal 2xMSAA, 4xMSAA usages?",
      "range": {
        "startLine": 32,
        "startChar": 4,
        "endLine": 32,
        "endChar": 22
      },
      "revId": "6a191c4377d0b2989143b139ee824483d10bc5a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a09943fd_4ff207b3",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.h",
        "patchSetId": 10
      },
      "lineNbr": 32,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-08-06T19:22:45Z",
      "side": 1,
      "message": "Yes, just _1 is better. identifiers cannot begin with numbers.\n\nAlso this enum should be just SampleCount and you can put it somewhere in the gl namespace like angletypes.h.",
      "parentUuid": "7735cd0f_6b0b133e",
      "range": {
        "startLine": 32,
        "startChar": 4,
        "endLine": 32,
        "endChar": 22
      },
      "revId": "6a191c4377d0b2989143b139ee824483d10bc5a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fbd656b3_6196a2e1",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.h",
        "patchSetId": 10
      },
      "lineNbr": 32,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-08-06T20:19:08Z",
      "side": 1,
      "message": "_1 is wrong. If the texture is truly multisampled, then index 0 will actually be a multisampled image.\n\nI don\u0027t mind putting it in angletypes.h, but I\u0027d like to again emphasize that this is a special MSRTT thing.\n\nHow about these enum values?\n\n    enum class TextureImageIndex // or maybe some better name\n    {\n        // The default image of the texture, where data is expected to be.\n        Default \u003d 0,\n        // Intermediate multisampled images for EXT_multisampled_render_to_texture.\n        MultisampledRenderToTextureIntermediateImage2xMSAA \u003d 1,\n        MultisampledRenderToTextureIntermediateImage4xMSAA \u003d 2,\n        MultisampledRenderToTextureIntermediateImage8xMSAA \u003d 3,\n        MultisampledRenderToTextureIntermediateImage16xMSAA \u003d 4,\n\n        // We currently only support up to 16xMSAA.\n        InvalidEnum \u003d 5,\n        EnumCount   \u003d 5,\n    };",
      "parentUuid": "a09943fd_4ff207b3",
      "range": {
        "startLine": 32,
        "startChar": 4,
        "endLine": 32,
        "endChar": 22
      },
      "revId": "6a191c4377d0b2989143b139ee824483d10bc5a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "70fd82eb_291093c0",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.h",
        "patchSetId": 10
      },
      "lineNbr": 32,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-08-06T21:06:46Z",
      "side": 1,
      "message": "I see. How about MSRTTIndex { Texture, _2, _4, _8, _16 } I\u0027m fine if you want to leave this in Vk. Maybe it could apply to other back-ends? We want to keep these enums very compact for readability.",
      "parentUuid": "fbd656b3_6196a2e1",
      "range": {
        "startLine": 32,
        "startChar": 4,
        "endLine": 32,
        "endChar": 22
      },
      "revId": "6a191c4377d0b2989143b139ee824483d10bc5a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "43fb8a45_37bdd2cb",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.h",
        "patchSetId": 10
      },
      "lineNbr": 32,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-08-06T22:35:25Z",
      "side": 1,
      "message": "The names for values \u003e 0 are not used (there\u0027s a static_cast from PackSampleCount() (which returns log(sampleCount)), so it\u0027s probably no big deal if the names are long. I did keep the first one (Default) short though for readability :)\n\nA final note is that value 0 is used regardless of MSRTT (which is why I\u0027m hesitant about calling the enum MSRTTIndex).\n\nBut we\u0027re bikeshedding. With enough comments, the names shouldn\u0027t really matter much. There\u0027s like two places they are even spelled out.",
      "parentUuid": "70fd82eb_291093c0",
      "range": {
        "startLine": 32,
        "startChar": 4,
        "endLine": 32,
        "endChar": 22
      },
      "revId": "6a191c4377d0b2989143b139ee824483d10bc5a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "60bcf805_e523c0d4",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.h",
        "patchSetId": 10
      },
      "lineNbr": 254,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-08-06T19:19:48Z",
      "side": 1,
      "message": "My concern with this is that we are hurting the common case to help the (much less common) MSAA case.\n\nCan you restore the old mImageViews instead?   Indexing into mMultisampledImageViews is controlled by the enum, so it can start at any value we want with `_2 \u003d 0`.\n\nThis would also require some special handling in places like TextureVk::getAttachmentRenderTarget() and TextureVk::initRenderTargets(), but it should be simple enough to set a pointer/reference at the start of those functions (which also removes a lot of redundant indexing anyway).",
      "range": {
        "startLine": 251,
        "startChar": 0,
        "endLine": 254,
        "endChar": 5
      },
      "revId": "6a191c4377d0b2989143b139ee824483d10bc5a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "264e8f02_7ebcf541",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.h",
        "patchSetId": 10
      },
      "lineNbr": 254,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-08-06T19:22:45Z",
      "side": 1,
      "message": "One indirection to read the enum isn\u0027t going to kill us here.",
      "parentUuid": "60bcf805_e523c0d4",
      "range": {
        "startLine": 251,
        "startChar": 0,
        "endLine": 254,
        "endChar": 5
      },
      "revId": "6a191c4377d0b2989143b139ee824483d10bc5a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "34c994a4_21d950a9",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.h",
        "patchSetId": 10
      },
      "lineNbr": 254,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-08-06T20:19:08Z",
      "side": 1,
      "message": "You could check in assembly Tim, but I bet there are 0 instructions added due to this indexing. The index expression is a constant 0, so `\u0026mMultisampledImageViews` and `\u0026mMultisampledImageViews[0]` are identical. In turn, `\u0026mMultisampledImageViews` is `this + some_constant`. `\u0026mImageViews` is also `this + some_constant`. If `mImageViews` was a separate variable, the assembly generated to access it should be identical (short of `some_constant` being another constant). (Mind you, if the index expression was another constant, the compiler would still generate `this + some_constant` to directly get to it. I.e. the constant index being 0 is not relevant).\n\nNote that this array is indexed directly by log(samples), so having default\u003d0 works out nicely elsewhere.",
      "parentUuid": "264e8f02_7ebcf541",
      "range": {
        "startLine": 251,
        "startChar": 0,
        "endLine": 254,
        "endChar": 5
      },
      "revId": "6a191c4377d0b2989143b139ee824483d10bc5a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "49616d16_f910d788",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.h",
        "patchSetId": 10
      },
      "lineNbr": 444,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-08-06T19:19:48Z",
      "side": 1,
      "message": "Remove this comment, since the enum RenderToTextureSampleCount owns the restriction and can be updated at any time without this comment being updated as well.",
      "revId": "6a191c4377d0b2989143b139ee824483d10bc5a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "485568a1_820cf0d6",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.h",
        "patchSetId": 10
      },
      "lineNbr": 471,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-08-06T19:19:48Z",
      "side": 1,
      "message": "nit: typo?",
      "range": {
        "startLine": 471,
        "startChar": 32,
        "endLine": 471,
        "endChar": 34
      },
      "revId": "6a191c4377d0b2989143b139ee824483d10bc5a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b4973b6_4e334974",
        "filename": "src/libANGLE/renderer/vulkan/vk_utils.h",
        "patchSetId": 10
      },
      "lineNbr": 789,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-08-06T19:22:45Z",
      "side": 1,
      "message": "nit: have this return your enum",
      "range": {
        "startLine": 789,
        "startChar": 0,
        "endLine": 789,
        "endChar": 42
      },
      "revId": "6a191c4377d0b2989143b139ee824483d10bc5a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f0c4a25a_8efa4558",
        "filename": "src/libANGLE/renderer/vulkan/vk_utils.h",
        "patchSetId": 10
      },
      "lineNbr": 789,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-08-06T20:19:08Z",
      "side": 1,
      "message": "This is used by RenderPassDesc too, where that enum doesn\u0027t make sense.",
      "parentUuid": "6b4973b6_4e334974",
      "range": {
        "startLine": 789,
        "startChar": 0,
        "endLine": 789,
        "endChar": 42
      },
      "revId": "6a191c4377d0b2989143b139ee824483d10bc5a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}