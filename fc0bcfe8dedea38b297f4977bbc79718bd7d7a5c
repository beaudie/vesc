{
  "comments": [
    {
      "key": {
        "uuid": "163e950a_0aa35072",
        "filename": "src/libANGLE/Framebuffer.cpp",
        "patchSetId": 3
      },
      "lineNbr": 2025,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-06-10T02:34:40Z",
      "side": 1,
      "message": "Update comment. s/GL/Vk/",
      "range": {
        "startLine": 2025,
        "startChar": 40,
        "endLine": 2025,
        "endChar": 68
      },
      "revId": "fc0bcfe8dedea38b297f4977bbc79718bd7d7a5c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7919c68a_61745d4e",
        "filename": "src/libANGLE/Framebuffer.cpp",
        "patchSetId": 3
      },
      "lineNbr": 2025,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2020-06-10T17:10:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "163e950a_0aa35072",
      "range": {
        "startLine": 2025,
        "startChar": 40,
        "endLine": 2025,
        "endChar": 68
      },
      "revId": "fc0bcfe8dedea38b297f4977bbc79718bd7d7a5c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "081923fe_da493cf2",
        "filename": "src/libANGLE/Framebuffer.cpp",
        "patchSetId": 3
      },
      "lineNbr": 2032,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-06-10T02:34:40Z",
      "side": 1,
      "message": "Then make it UNREACHABLE(). Not sure why you are saying this though, presumably TextureGL can still send this as you haven\u0027t touched that class.",
      "range": {
        "startLine": 2032,
        "startChar": 8,
        "endLine": 2032,
        "endChar": 43
      },
      "revId": "fc0bcfe8dedea38b297f4977bbc79718bd7d7a5c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "af8f6b0a_f67fbeeb",
        "filename": "src/libANGLE/Framebuffer.cpp",
        "patchSetId": 3
      },
      "lineNbr": 2032,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2020-06-10T17:10:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "081923fe_da493cf2",
      "range": {
        "startLine": 2032,
        "startChar": 8,
        "endLine": 2032,
        "endChar": 43
      },
      "revId": "fc0bcfe8dedea38b297f4977bbc79718bd7d7a5c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3e41ded5_5280b6ad",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1171,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-06-10T16:23:20Z",
      "side": 1,
      "message": "you should be able to repurpose one of the existing dirty bits. no need for a new one. they\u0027re made to handle these kind of changes.",
      "range": {
        "startLine": 1171,
        "startChar": 34,
        "endLine": 1171,
        "endChar": 67
      },
      "revId": "fc0bcfe8dedea38b297f4977bbc79718bd7d7a5c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c20cdfa0_bc18916b",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1171,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-06-10T21:01:50Z",
      "side": 1,
      "message": "re-comment here.",
      "parentUuid": "3e41ded5_5280b6ad",
      "range": {
        "startLine": 1171,
        "startChar": 34,
        "endLine": 1171,
        "endChar": 67
      },
      "revId": "fc0bcfe8dedea38b297f4977bbc79718bd7d7a5c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7e93d1f5_5010b300",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1265,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-06-10T02:34:40Z",
      "side": 1,
      "message": "Can `iter` be erased, so it doesn\u0027t `find` again?",
      "range": {
        "startLine": 1265,
        "startChar": 36,
        "endLine": 1265,
        "endChar": 56
      },
      "revId": "fc0bcfe8dedea38b297f4977bbc79718bd7d7a5c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d6e566e0_98b28ae5",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1265,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2020-06-10T17:10:07Z",
      "side": 1,
      "message": "not sure i understand shabi. \"mFramebufferCache.erase(...)\" will invalidate all iter references going forward right? or are you talking about a race condition?",
      "parentUuid": "7e93d1f5_5010b300",
      "range": {
        "startLine": 1265,
        "startChar": 36,
        "endLine": 1265,
        "endChar": 56
      },
      "revId": "fc0bcfe8dedea38b297f4977bbc79718bd7d7a5c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bd4aaf2f_673c683f",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1265,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-06-10T17:38:29Z",
      "side": 1,
      "message": "No it was just about the fact that you already have the iterator to the item to be deleted, so if the erase took that, it wouldn\u0027t have to recalculate the hash and find the element again.",
      "parentUuid": "d6e566e0_98b28ae5",
      "range": {
        "startLine": 1265,
        "startChar": 36,
        "endLine": 1265,
        "endChar": 56
      },
      "revId": "fc0bcfe8dedea38b297f4977bbc79718bd7d7a5c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "296318cb_fb364d7a",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1265,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2020-06-10T21:01:49Z",
      "side": 1,
      "message": "got it, will upload patch shortly",
      "parentUuid": "bd4aaf2f_673c683f",
      "range": {
        "startLine": 1265,
        "startChar": 36,
        "endLine": 1265,
        "endChar": 56
      },
      "revId": "fc0bcfe8dedea38b297f4977bbc79718bd7d7a5c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "78848515_ade733c3",
        "filename": "src/tests/gl_tests/VulkanImageViewTest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 202,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-06-10T02:34:40Z",
      "side": 1,
      "message": "Command before test definition is customary.",
      "revId": "fc0bcfe8dedea38b297f4977bbc79718bd7d7a5c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "af663275_cbfcf487",
        "filename": "src/tests/gl_tests/VulkanImageViewTest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 202,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2020-06-10T17:10:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "78848515_ade733c3",
      "revId": "fc0bcfe8dedea38b297f4977bbc79718bd7d7a5c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f4be3c3_a06e513a",
        "filename": "src/tests/gl_tests/VulkanImageViewTest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 204,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-06-10T02:34:40Z",
      "side": 1,
      "message": "\"The specific problem\" is not defined here. A small description of the bug and what the test does before the TEST_P line should clear this up.",
      "range": {
        "startLine": 204,
        "startChar": 15,
        "endLine": 204,
        "endChar": 35
      },
      "revId": "fc0bcfe8dedea38b297f4977bbc79718bd7d7a5c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a3fb021b_ce5e382e",
        "filename": "src/tests/gl_tests/VulkanImageViewTest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 204,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2020-06-10T17:10:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1f4be3c3_a06e513a",
      "range": {
        "startLine": 204,
        "startChar": 15,
        "endLine": 204,
        "endChar": 35
      },
      "revId": "fc0bcfe8dedea38b297f4977bbc79718bd7d7a5c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "284331b0_430530ba",
        "filename": "src/tests/gl_tests/VulkanImageViewTest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 216,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-06-10T02:34:40Z",
      "side": 1,
      "message": "You can use GLtexture from gl_raii.h to avoid gen/destroy for all the textures here.",
      "range": {
        "startLine": 216,
        "startChar": 4,
        "endLine": 216,
        "endChar": 10
      },
      "revId": "fc0bcfe8dedea38b297f4977bbc79718bd7d7a5c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c91a5530_3a68a8b7",
        "filename": "src/tests/gl_tests/VulkanImageViewTest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 216,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2020-06-10T17:10:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "284331b0_430530ba",
      "range": {
        "startLine": 216,
        "startChar": 4,
        "endLine": 216,
        "endChar": 10
      },
      "revId": "fc0bcfe8dedea38b297f4977bbc79718bd7d7a5c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}