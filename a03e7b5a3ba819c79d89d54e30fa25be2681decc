{
  "comments": [
    {
      "key": {
        "uuid": "9b794741_f4b8cedc",
        "filename": "src/compiler/translator/SymbolTable.h",
        "patchSetId": 1
      },
      "lineNbr": 365,
      "author": {
        "id": 1144534
      },
      "writtenOn": "2016-08-18T09:20:30Z",
      "side": 1,
      "message": "Is this implementation correct? If currentLevel() \u003d\u003d ESSL1_BUILTINS, it will still return true.",
      "revId": "a03e7b5a3ba819c79d89d54e30fa25be2681decc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3bd3fb1e_bb19a082",
        "filename": "src/compiler/translator/SymbolTable.h",
        "patchSetId": 1
      },
      "lineNbr": 494,
      "author": {
        "id": 1003154
      },
      "writtenOn": "2016-08-17T00:40:18Z",
      "side": 1,
      "message": "Let\u0027s do ASSERT instead. I think this has to be atGlobalLevel().",
      "range": {
        "startLine": 494,
        "startChar": 13,
        "endLine": 494,
        "endChar": 27
      },
      "revId": "a03e7b5a3ba819c79d89d54e30fa25be2681decc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3bd3fb1e_ac80885c",
        "filename": "src/compiler/translator/SymbolTable.h",
        "patchSetId": 1
      },
      "lineNbr": 494,
      "author": {
        "id": 1144534
      },
      "writtenOn": "2016-08-17T08:03:55Z",
      "side": 1,
      "message": "Should be currentLevel() \u003d\u003d GLOBAL_LEVEL other than currentLevel() \u003c\u003d GLOBAL_LEVEL in atGlobalLevel()?",
      "parentUuid": "3bd3fb1e_bb19a082",
      "range": {
        "startLine": 494,
        "startChar": 13,
        "endLine": 494,
        "endChar": 27
      },
      "revId": "a03e7b5a3ba819c79d89d54e30fa25be2681decc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "db749f0d_c56e7ac0",
        "filename": "src/compiler/translator/SymbolTable.h",
        "patchSetId": 1
      },
      "lineNbr": 494,
      "author": {
        "id": 1003154
      },
      "writtenOn": "2016-08-17T17:15:04Z",
      "side": 1,
      "message": "Only user defined variables can be invariant, so yeah, we don\u0027t need to worry about built-in levels.",
      "parentUuid": "3bd3fb1e_ac80885c",
      "range": {
        "startLine": 494,
        "startChar": 13,
        "endLine": 494,
        "endChar": 27
      },
      "revId": "a03e7b5a3ba819c79d89d54e30fa25be2681decc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "db749f0d_6bbd9518",
        "filename": "src/compiler/translator/SymbolTable.h",
        "patchSetId": 1
      },
      "lineNbr": 494,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2016-08-17T18:14:36Z",
      "side": 1,
      "message": "What happens if a built-in variable is marked invariant, like the following:\n  invariant gl_Position;\nI assume this will work because a user-level scope has already been pushed on to the symbol table. But can you confirm? This passes all tests, right?",
      "parentUuid": "db749f0d_c56e7ac0",
      "range": {
        "startLine": 494,
        "startChar": 13,
        "endLine": 494,
        "endChar": 27
      },
      "revId": "a03e7b5a3ba819c79d89d54e30fa25be2681decc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9b794741_d4b35200",
        "filename": "src/compiler/translator/SymbolTable.h",
        "patchSetId": 1
      },
      "lineNbr": 494,
      "author": {
        "id": 1144534
      },
      "writtenOn": "2016-08-18T09:20:30Z",
      "side": 1,
      "message": "built-in variable works well. This CL passed all tests locally.",
      "parentUuid": "db749f0d_6bbd9518",
      "range": {
        "startLine": 494,
        "startChar": 13,
        "endLine": 494,
        "endChar": 27
      },
      "revId": "a03e7b5a3ba819c79d89d54e30fa25be2681decc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3bd3fb1e_fb43284c",
        "filename": "src/compiler/translator/SymbolTable.h",
        "patchSetId": 1
      },
      "lineNbr": 503,
      "author": {
        "id": 1003154
      },
      "writtenOn": "2016-08-17T00:40:18Z",
      "side": 1,
      "message": "Same here, ASSERT(atGlobalLevel()).",
      "range": {
        "startLine": 503,
        "startChar": 13,
        "endLine": 503,
        "endChar": 27
      },
      "revId": "a03e7b5a3ba819c79d89d54e30fa25be2681decc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3bd3fb1e_1b41ac44",
        "filename": "src/compiler/translator/SymbolTable.h",
        "patchSetId": 1
      },
      "lineNbr": 510,
      "author": {
        "id": 1003154
      },
      "writtenOn": "2016-08-17T00:40:18Z",
      "side": 1,
      "message": "Same here, ASSERT(atGlobalLevel()).",
      "range": {
        "startLine": 510,
        "startChar": 11,
        "endLine": 510,
        "endChar": 13
      },
      "revId": "a03e7b5a3ba819c79d89d54e30fa25be2681decc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3bd3fb1e_db4bc45c",
        "filename": "src/tests/compiler_tests/ShaderVariable_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 257,
      "author": {
        "id": 1003154
      },
      "writtenOn": "2016-08-17T00:40:18Z",
      "side": 1,
      "message": "nit: nullptr",
      "range": {
        "startLine": 257,
        "startChar": 15,
        "endLine": 257,
        "endChar": 19
      },
      "revId": "a03e7b5a3ba819c79d89d54e30fa25be2681decc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3bd3fb1e_ec71b0a4",
        "filename": "src/tests/compiler_tests/ShaderVariable_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 257,
      "author": {
        "id": 1144534
      },
      "writtenOn": "2016-08-17T08:03:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3bd3fb1e_db4bc45c",
      "range": {
        "startLine": 257,
        "startChar": 15,
        "endLine": 257,
        "endChar": 19
      },
      "revId": "a03e7b5a3ba819c79d89d54e30fa25be2681decc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}