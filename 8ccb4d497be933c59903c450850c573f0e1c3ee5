{
  "comments": [
    {
      "key": {
        "uuid": "3454ea34_6c2ca98d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2020-09-08T20:20:39Z",
      "side": 1,
      "message": "all bots green, comments have been addressed - PTAL",
      "revId": "8ccb4d497be933c59903c450850c573f0e1c3ee5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a2fb77a_cfda5cc1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-09-09T23:07:32Z",
      "side": 1,
      "message": "LGTM",
      "revId": "8ccb4d497be933c59903c450850c573f0e1c3ee5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8babac96_6176e7ed",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-09-10T01:20:22Z",
      "side": 1,
      "message": "The change is quite big, please give me another day or two to go over it again. Sorry for the delays.",
      "revId": "8ccb4d497be933c59903c450850c573f0e1c3ee5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f10d823_3bbaa1e3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2020-09-14T17:48:21Z",
      "side": 1,
      "message": "shabi, did you get a chance to review this?",
      "revId": "8ccb4d497be933c59903c450850c573f0e1c3ee5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9c1e8672_733dc467",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-09-15T10:01:38Z",
      "side": 1,
      "message": "Sorry this took so long",
      "revId": "8ccb4d497be933c59903c450850c573f0e1c3ee5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a6cce32f_d4ee10c5",
        "filename": "src/compiler/translator/tree_ops/FlagSamplersWithTexelFetch.cpp",
        "patchSetId": 6
      },
      "lineNbr": 114,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-09-15T10:01:38Z",
      "side": 1,
      "message": "ASSERT(IsSampler(GLVariableType(uniform.type)));",
      "range": {
        "startLine": 69,
        "startChar": 0,
        "endLine": 114,
        "endChar": 34
      },
      "revId": "8ccb4d497be933c59903c450850c573f0e1c3ee5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fd7b6a60_eebd74f4",
        "filename": "src/compiler/translator/tree_ops/FlagSamplersWithTexelFetch.cpp",
        "patchSetId": 6
      },
      "lineNbr": 114,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2020-10-01T23:17:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a6cce32f_d4ee10c5",
      "range": {
        "startLine": 69,
        "startChar": 0,
        "endLine": 114,
        "endChar": 34
      },
      "revId": "8ccb4d497be933c59903c450850c573f0e1c3ee5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6c024ebd_49c3d302",
        "filename": "src/libANGLE/State.h",
        "patchSetId": 6
      },
      "lineNbr": 665,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-09-15T10:01:38Z",
      "side": 1,
      "message": "I still don\u0027t like how syncing texture units results in TextureVk::syncState being called twice (potentially). I understand we are already doing this with images, but I think that should be fixed too instead of piling on the problem. What\u0027s wrong with the following?\n\n- Move DIRTY_OBJECT_TEXTURE_UNITS up before DIRTY_OBJECT_TEXTURES.\n- Every time DIRTY_OBJECT_TEXTURE_UNITS is set, also set DIRTY_OBJECT_TEXTURES\n- Inside handler for DIRTY_OBJECT_TEXTURE_UNITS, take the Texture object and set DIRTY_BIT_SRGB_DECODE. In the future, if there are other use cases, we could add dirty bits for texture units and have the handler set those dirty bits in the texture.\n\nThen this is contained entirely in the front end, and the double syncState is also avoided.",
      "revId": "8ccb4d497be933c59903c450850c573f0e1c3ee5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ccce4081_f7e71938",
        "filename": "src/libANGLE/State.h",
        "patchSetId": 6
      },
      "lineNbr": 665,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2020-09-16T21:10:55Z",
      "side": 1,
      "message": "One of the reasons we pursued this path was because the mutable-bit requirement we need is vulkan-specific, and we didn\u0027t want to add frontend code that\u0027s only applicable to one backend.\n\nIf we\u0027re ok with moving more of this logic into the frontend we could look into an alternative solution.\n\nComplicating this matter (and the reason for this existing in the first place) is the fact that samplers can trigger this state as well as textures.\nA change in texture state can cause a change in the samplers that access that texture, but a change in the sampler state can (via srgb_decode) force a change in the texture as well. There is a circular dependency here, and the function of the double-syncstate is to break that cycle by resolving different parts of the texture state at different times. (resolve texture state -\u003e resolve sampler state, some of which depends on that -\u003e resolve texture mutable bit state, which depends on the previous)\n\nNote that the dependency is only circular so long as we try to resolve all state for a particular dirty object at once.",
      "parentUuid": "6c024ebd_49c3d302",
      "revId": "8ccb4d497be933c59903c450850c573f0e1c3ee5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "774804e5_4a1d174c",
        "filename": "src/libANGLE/State.h",
        "patchSetId": 6
      },
      "lineNbr": 665,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-09-16T21:13:13Z",
      "side": 1,
      "message": "See my notes. We should try to get rid of the special units behaviour and use updateActiveTextures. And deal with issues in that design as they come up.",
      "parentUuid": "ccce4081_f7e71938",
      "revId": "8ccb4d497be933c59903c450850c573f0e1c3ee5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9436fc43_33270a58",
        "filename": "src/libANGLE/State.h",
        "patchSetId": 6
      },
      "lineNbr": 665,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2020-10-01T23:17:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "774804e5_4a1d174c",
      "revId": "8ccb4d497be933c59903c450850c573f0e1c3ee5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "86305594_7b5909cb",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 2364,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-09-15T10:01:38Z",
      "side": 1,
      "message": "There are many ifs here. Can you make sure there are tests covering every path? No need to write end2end tests for paths that are already well tested by dEQP.",
      "range": {
        "startLine": 2277,
        "startChar": 0,
        "endLine": 2364,
        "endChar": 5
      },
      "revId": "8ccb4d497be933c59903c450850c573f0e1c3ee5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1f6df07e_c5bfbb11",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 2364,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2020-10-01T23:17:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "86305594_7b5909cb",
      "range": {
        "startLine": 2277,
        "startChar": 0,
        "endLine": 2364,
        "endChar": 5
      },
      "revId": "8ccb4d497be933c59903c450850c573f0e1c3ee5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d8055823_faa0f570",
        "filename": "src/tests/gl_tests/SRGBTextureTest.cpp",
        "patchSetId": 6
      },
      "lineNbr": 339,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-09-15T10:01:38Z",
      "side": 1,
      "message": "Please expand the test such that it goes back to not using sRGB override and verify that it\u0027s done correctly.",
      "revId": "8ccb4d497be933c59903c450850c573f0e1c3ee5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a67cf2ba_bb350588",
        "filename": "src/tests/gl_tests/SRGBTextureTest.cpp",
        "patchSetId": 6
      },
      "lineNbr": 339,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2020-10-01T23:17:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d8055823_faa0f570",
      "revId": "8ccb4d497be933c59903c450850c573f0e1c3ee5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}