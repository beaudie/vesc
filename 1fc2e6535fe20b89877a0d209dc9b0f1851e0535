{
  "comments": [
    {
      "key": {
        "uuid": "ff72e49e_15ead6f4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-11-02T14:28:09Z",
      "side": 1,
      "message": "nit: New bug tag syntax should be\n\n\"Bug:\u003cspace\u003eangleproject:2948\"\n\nOld syntax was\n\n\"BUG\u003dangleproject:2948\"",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 22,
        "endChar": 21
      },
      "revId": "1fc2e6535fe20b89877a0d209dc9b0f1851e0535",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "895ce064_aad36b89",
        "filename": "src/libANGLE/validationEGL.cpp",
        "patchSetId": 1
      },
      "lineNbr": 220,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-11-02T14:24:51Z",
      "side": 1,
      "message": "Could you merge this into ValidateConfigAttribute above?  Might as well only switch on the attribute once.",
      "range": {
        "startLine": 220,
        "startChar": 6,
        "endLine": 220,
        "endChar": 34
      },
      "revId": "1fc2e6535fe20b89877a0d209dc9b0f1851e0535",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9637f9c5_8bc81470",
        "filename": "src/libANGLE/validationEGL.cpp",
        "patchSetId": 1
      },
      "lineNbr": 220,
      "author": {
        "id": 1263724
      },
      "writtenOn": "2018-11-02T14:29:58Z",
      "side": 1,
      "message": "That\u0027s where we started but GetConfigAttribute wants to validate just the attributes so we either had to add a flag to check values if appropriate or split to separate function which seemed cleaner.",
      "parentUuid": "895ce064_aad36b89",
      "range": {
        "startLine": 220,
        "startChar": 6,
        "endLine": 220,
        "endChar": 34
      },
      "revId": "1fc2e6535fe20b89877a0d209dc9b0f1851e0535",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5bb10c4b_8cd15fd0",
        "filename": "src/libANGLE/validationEGL.cpp",
        "patchSetId": 1
      },
      "lineNbr": 220,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-11-02T15:15:43Z",
      "side": 1,
      "message": "Checking it all together is simpler in my opinion, otherwise when adding new config parameters they need to get added in two functions.  No flag is needed I think, we just need to merge these two switch statements and pass the value to ValidateConfigAttribute.",
      "parentUuid": "9637f9c5_8bc81470",
      "range": {
        "startLine": 220,
        "startChar": 6,
        "endLine": 220,
        "endChar": 34
      },
      "revId": "1fc2e6535fe20b89877a0d209dc9b0f1851e0535",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "62056216_8555178b",
        "filename": "src/libANGLE/validationEGL.cpp",
        "patchSetId": 1
      },
      "lineNbr": 220,
      "author": {
        "id": 1263724
      },
      "writtenOn": "2018-11-02T15:32:32Z",
      "side": 1,
      "message": "I\u0027m sorry, that doesn\u0027t make sense to me. In the case of GetConfigAttribute, there is no value to pass in.",
      "parentUuid": "5bb10c4b_8cd15fd0",
      "range": {
        "startLine": 220,
        "startChar": 6,
        "endLine": 220,
        "endChar": 34
      },
      "revId": "1fc2e6535fe20b89877a0d209dc9b0f1851e0535",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "70f3e68d_a18da5db",
        "filename": "src/libANGLE/validationEGL.cpp",
        "patchSetId": 1
      },
      "lineNbr": 220,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2018-11-02T15:39:13Z",
      "side": 1,
      "message": "To add to this, the problem is here:\n\nError ValidateGetConfigAttrib(const Display *display, const Config *config, EGLint attribute)\n{\n    ANGLE_TRY(ValidateConfig(display, config));\n    ANGLE_TRY(ValidateConfigAttribute(display, static_cast\u003cEGLAttrib\u003e(attribute)));\n    return NoError();\n}\n\nWith this call to ValidateConfigAttribute(), we don\u0027t have a corresponding attribute value to check.   Going up another level in the call to GetConfigAttrib(), there is a \u0027value\u0027 parameter that\u0027s available, so presumably that could be passed along so ValidateConfigAttribute() could be updated to check both attributes and values.   This touches a few more lines of code, but would remove the duplicate checking.\n\nFor reference, here is entry_points_egl.cpp::GetConfigAttrib() where ValidateConfigAttribute() is called:\n\nEGLBoolean EGLAPIENTRY GetConfigAttrib(EGLDisplay dpy,\n                                       EGLConfig config,\n                                       EGLint attribute,\n                                       EGLint *value)\n{\n    ANGLE_SCOPED_GLOBAL_LOCK();\n    EVENT(\"(EGLDisplay dpy \u003d 0x%016\" PRIxPTR \", EGLConfig config \u003d 0x%016\" PRIxPTR\n          \", EGLint attribute \u003d %d, EGLint \"\n          \"*value \u003d 0x%016\" PRIxPTR \")\",\n          (uintptr_t)dpy, (uintptr_t)config, attribute, (uintptr_t)value);\n    Thread *thread \u003d GetCurrentThread();\n\n    Display *display      \u003d static_cast\u003cDisplay *\u003e(dpy);\n    Config *configuration \u003d static_cast\u003cConfig *\u003e(config);\n\n    ANGLE_EGL_TRY_RETURN(thread, ValidateGetConfigAttrib(display, configuration, attribute),\n                         \"eglGetConfigAttrib\", GetDisplayIfValid(display), EGL_FALSE);\n\n    QueryConfigAttrib(configuration, attribute, value);\n\n    thread-\u003esetSuccess();\n    return EGL_TRUE;\n}",
      "parentUuid": "62056216_8555178b",
      "range": {
        "startLine": 220,
        "startChar": 6,
        "endLine": 220,
        "endChar": 34
      },
      "revId": "1fc2e6535fe20b89877a0d209dc9b0f1851e0535",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a025c3a_3915c44d",
        "filename": "src/libANGLE/validationEGL.cpp",
        "patchSetId": 1
      },
      "lineNbr": 220,
      "author": {
        "id": 1263724
      },
      "writtenOn": "2018-11-02T15:46:39Z",
      "side": 1,
      "message": "GetConfigAttrib\u0027s value is a return parameter, it\u0027s value is undefined at the point where we call ValidateGetConfigAttrib so that\u0027s not going to help us.",
      "parentUuid": "70f3e68d_a18da5db",
      "range": {
        "startLine": 220,
        "startChar": 6,
        "endLine": 220,
        "endChar": 34
      },
      "revId": "1fc2e6535fe20b89877a0d209dc9b0f1851e0535",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7189fed9_c4d03eb6",
        "filename": "src/libANGLE/validationEGL.cpp",
        "patchSetId": 1
      },
      "lineNbr": 220,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-11-02T15:52:00Z",
      "side": 1,
      "message": "Ahh, I see.  I missed that this is called from multiple places and some do not have values.",
      "parentUuid": "70f3e68d_a18da5db",
      "range": {
        "startLine": 220,
        "startChar": 6,
        "endLine": 220,
        "endChar": 34
      },
      "revId": "1fc2e6535fe20b89877a0d209dc9b0f1851e0535",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c76b2c61_87616619",
        "filename": "src/libANGLE/validationEGL.cpp",
        "patchSetId": 1
      },
      "lineNbr": 226,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-11-02T14:24:51Z",
      "side": 1,
      "message": "nit: can you turn these into swiches?  It\u0027s easier to read and minimizes diffs when adding new values.",
      "range": {
        "startLine": 226,
        "startChar": 12,
        "endLine": 226,
        "endChar": 88
      },
      "revId": "1fc2e6535fe20b89877a0d209dc9b0f1851e0535",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e6146192_f104c631",
        "filename": "src/libANGLE/validationEGL.cpp",
        "patchSetId": 1
      },
      "lineNbr": 226,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2018-11-07T22:11:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c76b2c61_87616619",
      "range": {
        "startLine": 226,
        "startChar": 12,
        "endLine": 226,
        "endChar": 88
      },
      "revId": "1fc2e6535fe20b89877a0d209dc9b0f1851e0535",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "08ec95f4_59afcacf",
        "filename": "src/libANGLE/validationEGL.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2737,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-11-02T14:24:51Z",
      "side": 1,
      "message": "nit: you can remove this, ValidateContext will validate the display.",
      "range": {
        "startLine": 2737,
        "startChar": 4,
        "endLine": 2737,
        "endChar": 40
      },
      "revId": "1fc2e6535fe20b89877a0d209dc9b0f1851e0535",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4c1bf706_669bbd14",
        "filename": "src/libANGLE/validationEGL.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2737,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2018-11-07T22:11:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "08ec95f4_59afcacf",
      "range": {
        "startLine": 2737,
        "startChar": 4,
        "endLine": 2737,
        "endChar": 40
      },
      "revId": "1fc2e6535fe20b89877a0d209dc9b0f1851e0535",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}