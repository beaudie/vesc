{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "211ddf5e_51ed9069",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2022-12-16T19:24:07Z",
      "side": 1,
      "message": "shabi, jamie - this is the refactor being proposed before we add support for `glShaderBinary` - PTAL",
      "revId": "af134f6721cc6743a67d4ec0e0829c623b1ba33c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d5794fa6_52c862a8",
        "filename": "include/GLSLANG/ShaderVars.h",
        "patchSetId": 6
      },
      "lineNbr": 351,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-12-17T03:14:08Z",
      "side": 1,
      "message": "High-level comment:\n\nShaderLang.h and ShaderVar.h are the interface to the compiler; they are versioned and it\u0027s best to make it as minimal as possible. These helpers belong in `common/`, and they can retrieve all the information they need from the compiler.\n\nIOW, these don\u0027t belong in the public interface of the compiler.",
      "revId": "af134f6721cc6743a67d4ec0e0829c623b1ba33c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ec972b36_34ce75d5",
        "filename": "include/GLSLANG/ShaderVars.h",
        "patchSetId": 6
      },
      "lineNbr": 351,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2022-12-19T18:50:13Z",
      "side": 1,
      "message": "\u003e These helpers belong in common\n\nthat was the intent and gave it a try in PS1 -\u003e https://chromium-review.googlesource.com/c/angle/angle/+/4080998/1\n\ni believe it triggered a bunch of compiler errors and the consensus was there were a bunch of other includes that needed to be brought in along with this header (like TCompiler types and such) and the latest patchset is the minimal change that we got working.\n\ncould you take a look at PS1 and provide some suggestions on fixing compiler errors?",
      "parentUuid": "d5794fa6_52c862a8",
      "revId": "af134f6721cc6743a67d4ec0e0829c623b1ba33c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "22a527aa_36d2eb30",
        "filename": "include/GLSLANG/ShaderVars.h",
        "patchSetId": 6
      },
      "lineNbr": 351,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-12-19T19:17:38Z",
      "side": 1,
      "message": "I\u0027ll have to try it to see. src/common/utilities.h includes GLSLANG/ShaderLang.h, so there shouldn\u0027t be a problem with the _public interface_ of the translator.\n\nYou shouldn\u0027t need TCompiler and such types though; the function sin ShaderLang.h should give you all the information that you need. That was actually the main point of my comment; that this code shouldn\u0027t need to look at the internals of the translator, but use the public API instead.\n\nI\u0027ll give PS1 a try today and let you know.",
      "parentUuid": "ec972b36_34ce75d5",
      "revId": "af134f6721cc6743a67d4ec0e0829c623b1ba33c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bce43868_ac446666",
        "filename": "include/GLSLANG/ShaderVars.h",
        "patchSetId": 6
      },
      "lineNbr": 351,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2022-12-19T19:21:12Z",
      "side": 1,
      "message": "thanks shabi, got more specific info -\n```\nSo PS2 was the patch where we added the new CompiledShaderState object to the\ncommon/ folder, which didn\u0027t work...\n\nWe can move all the helpers + the new struct to common if we can include \nShaderLang.h + ShaderVars.h in a common header. This is currently not allowed.\n```",
      "parentUuid": "22a527aa_36d2eb30",
      "revId": "af134f6721cc6743a67d4ec0e0829c623b1ba33c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "966ac8bd_0ccab8a2",
        "filename": "include/GLSLANG/ShaderVars.h",
        "patchSetId": 6
      },
      "lineNbr": 351,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2022-12-19T19:23:56Z",
      "side": 1,
      "message": "oops, looks like i did not upload the patchset where we actually moved things to common folder, will try to do that shortly",
      "parentUuid": "bce43868_ac446666",
      "revId": "af134f6721cc6743a67d4ec0e0829c623b1ba33c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3049b06d_310da712",
        "filename": "include/GLSLANG/ShaderVars.h",
        "patchSetId": 6
      },
      "lineNbr": 351,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-12-19T20:03:02Z",
      "side": 1,
      "message": "I\u0027ll wait for that then.",
      "parentUuid": "966ac8bd_0ccab8a2",
      "revId": "af134f6721cc6743a67d4ec0e0829c623b1ba33c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "51ba35fd_1fd2c620",
        "filename": "include/GLSLANG/ShaderVars.h",
        "patchSetId": 6
      },
      "lineNbr": 351,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2022-12-19T22:05:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3049b06d_310da712",
      "revId": "af134f6721cc6743a67d4ec0e0829c623b1ba33c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "78b68574_9e974b79",
        "filename": "include/GLSLANG/ShaderVars.h",
        "patchSetId": 6
      },
      "lineNbr": 351,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2022-12-19T22:35:31Z",
      "side": 1,
      "message": "this was one such error -\n```\n[237/1503] SOLINK ./libfeature_support_angle.cr.so\nFAILED: libfeature_support_angle.cr.so libfeature_support_angle.cr.so.TOC lib.unstripped/libfeature_support_angle.cr.so\npython3 \"../../build/toolchain/gcc_solink_wrapper.py\" --readelf\u003d\"../../third_party/llvm-build/Releas...(too long)\nld.lld: error: undefined symbol: sh::ShaderVariable::getArraySizeProduct() const\n\u003e\u003e\u003e referenced by CompiledShaderState.cpp:49 (../../src/common/CompiledShaderState.cpp:49)\n\u003e\u003e\u003e               angle_common/CompiledShaderState.o:(gl::CompareShaderVar(sh::ShaderVariable const\u0026, sh::ShaderVariable const\u0026)) in archive obj/libangle_common.a\n```",
      "parentUuid": "51ba35fd_1fd2c620",
      "revId": "af134f6721cc6743a67d4ec0e0829c623b1ba33c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}