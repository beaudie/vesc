{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "fd482fb9_c96d95a0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-07-12T20:01:57Z",
      "side": 1,
      "message": "LGTM",
      "revId": "4da67d00f0263b0e81f6aee3f3d2c61c694f9f7f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8d8b9345_dc600d05",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-07-12T20:02:22Z",
      "side": 1,
      "message": "Gert what does it mean when this function returns nullptr?",
      "revId": "4da67d00f0263b0e81f6aee3f3d2c61c694f9f7f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "be295014_71d559fc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1491823
      },
      "writtenOn": "2021-07-13T07:36:21Z",
      "side": 1,
      "message": "glGetString may return a nullptr (on error according to spec), mTraceLibrary-\u003egetSerializedContextState(...) was returning an empty string, so I changed it to return a nullptr to be consistent and be able to compare.",
      "parentUuid": "8d8b9345_dc600d05",
      "revId": "4da67d00f0263b0e81f6aee3f3d2c61c694f9f7f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d0ac1183_4155f82b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-07-13T13:37:00Z",
      "side": 1,
      "message": "OK, that\u0027s reasonable. I was asking why getSerializedContextState was failing to produce a serialized result? Seems like this might be hiding some underlying other failure.",
      "parentUuid": "be295014_71d559fc",
      "revId": "4da67d00f0263b0e81f6aee3f3d2c61c694f9f7f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "294e5265_5238565b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1491823
      },
      "writtenOn": "2021-07-13T14:48:12Z",
      "side": 1,
      "message": "The test triggerin this was something \"ContextLostTest.*\", and there we seem to get into trouble getting a consistent context serialization (i.e. the test doesn\u0027t pass after this, it just doesn\u0027t crash anymore).",
      "parentUuid": "d0ac1183_4155f82b",
      "revId": "4da67d00f0263b0e81f6aee3f3d2c61c694f9f7f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0d361cb3_f49412ec",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-07-14T12:31:47Z",
      "side": 1,
      "message": "Ack, maybe mention that in the CL description or comment so we just have more of a record of the context.",
      "parentUuid": "294e5265_5238565b",
      "revId": "4da67d00f0263b0e81f6aee3f3d2c61c694f9f7f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5178dc21_9ed38bb9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1491823
      },
      "writtenOn": "2021-07-16T07:14:12Z",
      "side": 1,
      "message": "I\u0027ve made the comment in the commit message a bit more exhaustive.",
      "parentUuid": "0d361cb3_f49412ec",
      "revId": "4da67d00f0263b0e81f6aee3f3d2c61c694f9f7f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a589f66c_79fd7c4e",
        "filename": "src/tests/capture_replay_tests/CaptureReplayTests.cpp",
        "patchSetId": 3
      },
      "lineNbr": 152,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-07-12T20:01:57Z",
      "side": 1,
      "message": "nit: typo, captureSerializedState is my naming suggestion.",
      "range": {
        "startLine": 152,
        "startChar": 24,
        "endLine": 152,
        "endChar": 46
      },
      "revId": "4da67d00f0263b0e81f6aee3f3d2c61c694f9f7f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e0a6bad7_849af2fc",
        "filename": "src/tests/capture_replay_tests/CaptureReplayTests.cpp",
        "patchSetId": 3
      },
      "lineNbr": 152,
      "author": {
        "id": 1491823
      },
      "writtenOn": "2021-07-13T07:36:21Z",
      "side": 1,
      "message": "My nit: capture sounds line active, but what I get is the captured state, so I\u0027d go with capturedSerializedState",
      "parentUuid": "a589f66c_79fd7c4e",
      "range": {
        "startLine": 152,
        "startChar": 24,
        "endLine": 152,
        "endChar": 46
      },
      "revId": "4da67d00f0263b0e81f6aee3f3d2c61c694f9f7f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "194722f3_57192358",
        "filename": "src/tests/capture_replay_tests/CaptureReplayTests.cpp",
        "patchSetId": 3
      },
      "lineNbr": 152,
      "author": {
        "id": 1491823
      },
      "writtenOn": "2021-07-16T07:14:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e0a6bad7_849af2fc",
      "range": {
        "startLine": 152,
        "startChar": 24,
        "endLine": 152,
        "endChar": 46
      },
      "revId": "4da67d00f0263b0e81f6aee3f3d2c61c694f9f7f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d43ae0d1_f40fd9da",
        "filename": "src/tests/capture_replay_tests/CaptureReplayTests.cpp",
        "patchSetId": 3
      },
      "lineNbr": 154,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-07-12T20:01:57Z",
      "side": 1,
      "message": "nit: replaySerializedState",
      "range": {
        "startLine": 154,
        "startChar": 24,
        "endLine": 154,
        "endChar": 45
      },
      "revId": "4da67d00f0263b0e81f6aee3f3d2c61c694f9f7f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7c20ceda_57870f49",
        "filename": "src/tests/capture_replay_tests/CaptureReplayTests.cpp",
        "patchSetId": 3
      },
      "lineNbr": 154,
      "author": {
        "id": 1491823
      },
      "writtenOn": "2021-07-16T07:14:12Z",
      "side": 1,
      "message": "Done like proposed above.",
      "parentUuid": "d43ae0d1_f40fd9da",
      "range": {
        "startLine": 154,
        "startChar": 24,
        "endLine": 154,
        "endChar": 45
      },
      "revId": "4da67d00f0263b0e81f6aee3f3d2c61c694f9f7f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}