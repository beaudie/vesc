{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e934a4ec_1ba2efbd",
        "filename": "src/libANGLE/formatutils.cpp",
        "patchSetId": 6
      },
      "lineNbr": 774,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-08-19T18:19:59Z",
      "side": 0,
      "message": "The issue is that this value must be divisible by 8, otherwise it\u0027s off by 1 byte.\n\nThis can all be reverted, and instead this line can be updated to the following:\n\n    formatInfo.pixelBytes \u003d UnsignedCeilDivide(red + green + blue + alpha + shared, 8);",
      "range": {
        "startLine": 774,
        "startChar": 28,
        "endLine": 774,
        "endChar": 65
      },
      "revId": "714698762c4444d1a8b49fadf39f446087a2327e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "31a9d378_e86549f1",
        "filename": "src/libANGLE/formatutils.cpp",
        "patchSetId": 6
      },
      "lineNbr": 774,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-08-19T18:22:33Z",
      "side": 0,
      "message": "I don\u0027t think putting in a silent ceil is a good idea, in the interests of not auto-correcting programming errors. I can make a change to trap any non-rounded numbers, but I don\u0027t want to dig into unrelated work too deeply. WDYT of landing this now as-is?",
      "parentUuid": "e934a4ec_1ba2efbd",
      "range": {
        "startLine": 774,
        "startChar": 28,
        "endLine": 774,
        "endChar": 65
      },
      "revId": "714698762c4444d1a8b49fadf39f446087a2327e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e4c761dd_f44d3701",
        "filename": "src/libANGLE/formatutils.cpp",
        "patchSetId": 6
      },
      "lineNbr": 774,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-08-19T19:05:20Z",
      "side": 0,
      "message": "-1 to landing as-is, since it still contains the potential for incorrectly calculating how many bytes are required to hold the specified bits.\n\n\u003e I don\u0027t think putting in a silent ceil is a good idea, in the interests of not auto-correcting programming errors. \n\nThe ceiling isn\u0027t fixing errors from the caller, it\u0027s fixing the bug here.   The caller is correctly indicating how many bits they require, this call is incorrectly calculating how many bytes are required to hold those bits.   Using UnsignedCeilDivide() ensures we get the correct value.",
      "parentUuid": "31a9d378_e86549f1",
      "range": {
        "startLine": 774,
        "startChar": 28,
        "endLine": 774,
        "endChar": 65
      },
      "revId": "714698762c4444d1a8b49fadf39f446087a2327e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f547776d_779e9f1a",
        "filename": "src/libANGLE/formatutils.cpp",
        "patchSetId": 6
      },
      "lineNbr": 774,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-08-19T19:42:41Z",
      "side": 0,
      "message": "I\u0027d like to ensure that the caller specifies unused bits as well. I\u0027m against putting in stuff that automatically fixes potential errors. See other instances where we specify the unused bits. Can you think of an alternative? My suggestion is we add an ASSERT to specify the bits are correctly multiples of 8, but I\u0027d like to avoid doing that in this CL to minimize the work I\u0027m taking on.\n\nLMKWYT",
      "parentUuid": "e4c761dd_f44d3701",
      "range": {
        "startLine": 774,
        "startChar": 28,
        "endLine": 774,
        "endChar": 65
      },
      "revId": "714698762c4444d1a8b49fadf39f446087a2327e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "75459086_ec7f9dec",
        "filename": "src/libANGLE/formatutils.cpp",
        "patchSetId": 6
      },
      "lineNbr": 774,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-08-19T20:05:16Z",
      "side": 0,
      "message": "spoke offline - will add the ASSERT and file a bug/TODO if it catches anything",
      "parentUuid": "f547776d_779e9f1a",
      "range": {
        "startLine": 774,
        "startChar": 28,
        "endLine": 774,
        "endChar": 65
      },
      "revId": "714698762c4444d1a8b49fadf39f446087a2327e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1d7bcc40_9909cade",
        "filename": "src/libANGLE/formatutils.cpp",
        "patchSetId": 6
      },
      "lineNbr": 774,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-08-20T13:36:32Z",
      "side": 0,
      "message": "Added ASSERTions, PTAL.",
      "parentUuid": "75459086_ec7f9dec",
      "range": {
        "startLine": 774,
        "startChar": 28,
        "endLine": 774,
        "endChar": 65
      },
      "revId": "714698762c4444d1a8b49fadf39f446087a2327e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}