{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "49c6810d_656f5973",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 1798,
      "author": {
        "id": 1533513
      },
      "writtenOn": "2022-05-02T20:18:04Z",
      "side": 1,
      "message": "One thing that feels wrong to me is that it\u0027s not immediately clear what bits of WindowSurfaceVk SurfaceGbmVk implements and what others it depends on, I think it would be better if the VkSurface and VkSwapchain -specific bits were moved into their own class, to sort of be on same level as GbmSurfaceVk.",
      "revId": "0258e53bf346adb47163b9c8d0ebe0f0bc3f905f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8721b2b2_86f0b619",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 1798,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-05-10T02:29:39Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "49c6810d_656f5973",
      "revId": "0258e53bf346adb47163b9c8d0ebe0f0bc3f905f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b896a220_44177c47",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 1798,
      "author": {
        "id": 1528827
      },
      "writtenOn": "2022-05-11T10:22:35Z",
      "side": 1,
      "message": "Should I reintroduce the `FramebufferSurfaceVk` class from previous revisions?",
      "parentUuid": "8721b2b2_86f0b619",
      "revId": "0258e53bf346adb47163b9c8d0ebe0f0bc3f905f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4cf579a8_1f211188",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 1798,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-05-11T14:25:29Z",
      "side": 1,
      "message": "In line with `SurfaceVkGbm`, I\u0027d call it `SurfaceVkSwapchain`",
      "parentUuid": "b896a220_44177c47",
      "revId": "0258e53bf346adb47163b9c8d0ebe0f0bc3f905f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2aa1eb17_f49ee58d",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 1798,
      "author": {
        "id": 1528827
      },
      "writtenOn": "2022-05-11T15:40:56Z",
      "side": 1,
      "message": "Mmh, do you mean to actually making `WindowSurfaceVk` more abstract and use it as a superclass for `WindowSurfaceVkGbm` and `WindowSurfaceVkSwapchain`?\n\nIs then OK to continue using `struct SwapchainImage` in this new `WindowSurfaceVk`, or would it be confusing to use it both in `WindowSurfaceVkGbm` and `WindowSurfaceVkSwapchain`?",
      "parentUuid": "4cf579a8_1f211188",
      "revId": "0258e53bf346adb47163b9c8d0ebe0f0bc3f905f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a75056ea_b1e5085f",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 1798,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-05-11T15:44:04Z",
      "side": 1,
      "message": "You already have some virtual functions default-implemented in `WindowSurfaceVk`, and overriden in `SurfaceVkGbm`. Just making those virtual functions `\u003d 0` and pulling the implementation out in a different class would do. Anything that\u0027s currently used by both classes can stay in `WindowSurfaceVk`.\n\nI\u0027m not too worried about `SwapchainImage` causing a confusion; the gbm surface is sort of pretending to be a swapchain, and besides, hardly anyone is going to be looking at it ;)",
      "parentUuid": "2aa1eb17_f49ee58d",
      "revId": "0258e53bf346adb47163b9c8d0ebe0f0bc3f905f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "edafe32c_5c2f8990",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 1798,
      "author": {
        "id": 1528827
      },
      "writtenOn": "2022-05-17T11:08:11Z",
      "side": 1,
      "message": "Please, have a look at the latest 2 revisions of this CL.",
      "parentUuid": "a75056ea_b1e5085f",
      "revId": "0258e53bf346adb47163b9c8d0ebe0f0bc3f905f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b5f9cb52_dfb2be18",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 1798,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-05-17T15:49:39Z",
      "side": 1,
      "message": "LGTM, I didn\u0027t notice much more than code shuffling around (which is good)",
      "parentUuid": "edafe32c_5c2f8990",
      "revId": "0258e53bf346adb47163b9c8d0ebe0f0bc3f905f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "93d8d3ca_f8383568",
        "filename": "src/libANGLE/renderer/vulkan/linux/gbm/DisplayVkGbm.cpp",
        "patchSetId": 5
      },
      "lineNbr": 72,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-05-02T12:23:32Z",
      "side": 1,
      "message": "nit: don\u0027t use auto unless it\u0027s a very long and templated type name. please check through the CL and update auto to explicit types where you can.",
      "range": {
        "startLine": 72,
        "startChar": 9,
        "endLine": 72,
        "endChar": 14
      },
      "revId": "0258e53bf346adb47163b9c8d0ebe0f0bc3f905f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e12d2cc1_09248f8e",
        "filename": "src/libANGLE/renderer/vulkan/linux/gbm/DisplayVkGbm.cpp",
        "patchSetId": 5
      },
      "lineNbr": 72,
      "author": {
        "id": 1528827
      },
      "writtenOn": "2022-05-03T15:47:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "93d8d3ca_f8383568",
      "range": {
        "startLine": 72,
        "startChar": 9,
        "endLine": 72,
        "endChar": 14
      },
      "revId": "0258e53bf346adb47163b9c8d0ebe0f0bc3f905f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "caa5d1a6_6b69d40c",
        "filename": "src/libANGLE/renderer/vulkan/linux/gbm/SurfaceVkGbm.cpp",
        "patchSetId": 5
      },
      "lineNbr": 48,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-05-02T12:23:32Z",
      "side": 1,
      "message": "nit: omit\n\nwe have ANGLE_UNUSED_VARIABLE but we don\u0027t enforce any warnings for unused parameters, so can remove it.",
      "range": {
        "startLine": 48,
        "startChar": 3,
        "endLine": 48,
        "endChar": 21
      },
      "revId": "0258e53bf346adb47163b9c8d0ebe0f0bc3f905f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3de14a22_e79f7f5a",
        "filename": "src/libANGLE/renderer/vulkan/linux/gbm/SurfaceVkGbm.cpp",
        "patchSetId": 5
      },
      "lineNbr": 48,
      "author": {
        "id": 1528827
      },
      "writtenOn": "2022-05-03T15:47:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "caa5d1a6_6b69d40c",
      "range": {
        "startLine": 48,
        "startChar": 3,
        "endLine": 48,
        "endChar": 21
      },
      "revId": "0258e53bf346adb47163b9c8d0ebe0f0bc3f905f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9fe7751f_4ce95710",
        "filename": "src/libANGLE/renderer/vulkan/linux/gbm/SurfaceVkGbm.cpp",
        "patchSetId": 5
      },
      "lineNbr": 257,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-05-02T12:23:32Z",
      "side": 1,
      "message": "nit: use c++ cast style when possible\n\nsame for all other code points in cpp files",
      "range": {
        "startLine": 257,
        "startChar": 38,
        "endLine": 257,
        "endChar": 46
      },
      "revId": "0258e53bf346adb47163b9c8d0ebe0f0bc3f905f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "16228d20_73d19f0f",
        "filename": "src/libANGLE/renderer/vulkan/linux/gbm/SurfaceVkGbm.cpp",
        "patchSetId": 5
      },
      "lineNbr": 257,
      "author": {
        "id": 1528827
      },
      "writtenOn": "2022-05-03T15:47:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9fe7751f_4ce95710",
      "range": {
        "startLine": 257,
        "startChar": 38,
        "endLine": 257,
        "endChar": 46
      },
      "revId": "0258e53bf346adb47163b9c8d0ebe0f0bc3f905f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}