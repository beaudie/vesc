{
  "comments": [
    {
      "key": {
        "uuid": "59e477cb_2873cab0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-09-28T22:25:11Z",
      "side": 1,
      "message": "Re-LGTM!",
      "revId": "dd62d8af817c094fadd35e7146c44e8e1d2cb90a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c1542111_cf5ec7d4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-09-28T22:29:22Z",
      "side": 1,
      "message": "Shabi, if this looks good to you, could I get a +2 on this?",
      "revId": "dd62d8af817c094fadd35e7146c44e8e1d2cb90a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "485b7ba5_32b5f247",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-09-29T03:08:01Z",
      "side": 1,
      "message": "While you\u0027re at it, it would be nice to have the same test but for color. Currently, we close the RP on color invalidate, but it would be nice to have the test ready if/when that gets optimized.",
      "revId": "dd62d8af817c094fadd35e7146c44e8e1d2cb90a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b858f02c_39da03f1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-10-02T01:30:06Z",
      "side": 1,
      "message": "Again, nice to have the equivalent test for color invalidate.",
      "parentUuid": "485b7ba5_32b5f247",
      "revId": "dd62d8af817c094fadd35e7146c44e8e1d2cb90a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "552f1522_7558a221",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2195,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-09-29T03:08:01Z",
      "side": 1,
      "message": "If this is not going to set contents defined, can you ASSERT that it\u0027s already defined?",
      "revId": "dd62d8af817c094fadd35e7146c44e8e1d2cb90a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "293099e1_d14b671d",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2195,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-09-30T00:16:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "552f1522_7558a221",
      "revId": "dd62d8af817c094fadd35e7146c44e8e1d2cb90a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7ab280e9_4e58e73c",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2206,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-09-29T03:08:01Z",
      "side": 1,
      "message": "How about marking this function as nodiscard, so that we won\u0027t miss it in the future? That\u0027s assuming the return value always needs a reaction.",
      "range": {
        "startLine": 2206,
        "startChar": 32,
        "endLine": 2206,
        "endChar": 45
      },
      "revId": "dd62d8af817c094fadd35e7146c44e8e1d2cb90a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ae9018c_05b12c37",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2206,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-09-29T03:25:38Z",
      "side": 1,
      "message": "Instead of keep tweaking this, I strongly suggest we fix http://b/169618408 and then move mContentDefined logic (and depth stencil buffer readOnly handling) entirely to enRenderPass(). It will be much cleaner implementation, IMO. Feel free comment in the bug (or assign to yourself if you are intersted).",
      "parentUuid": "7ab280e9_4e58e73c",
      "range": {
        "startLine": 2206,
        "startChar": 32,
        "endLine": 2206,
        "endChar": 45
      },
      "revId": "dd62d8af817c094fadd35e7146c44e8e1d2cb90a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9a56d7b5_421f2ada",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2206,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-09-30T00:16:01Z",
      "side": 1,
      "message": "ContextVk::startRenderPass() calls this as well, and does not need to do the check.",
      "parentUuid": "3ae9018c_05b12c37",
      "range": {
        "startLine": 2206,
        "startChar": 32,
        "endLine": 2206,
        "endChar": 45
      },
      "revId": "dd62d8af817c094fadd35e7146c44e8e1d2cb90a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bf887277_5f3a7466",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2206,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-10-02T01:30:06Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "9a56d7b5_421f2ada",
      "range": {
        "startLine": 2206,
        "startChar": 32,
        "endLine": 2206,
        "endChar": 45
      },
      "revId": "dd62d8af817c094fadd35e7146c44e8e1d2cb90a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}