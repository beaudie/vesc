{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d38a16cf_85def0e5",
        "filename": "src/compiler/translator/OutputSPIRV.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1149,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-10-14T23:55:07Z",
      "side": 1,
      "message": "Why only do this if we\u0027re inside a function body?",
      "revId": "c613a1cdb2b87b112f8b6f5006b504ab17460053",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1ca2a50d_7795a87f",
        "filename": "src/compiler/translator/OutputSPIRV.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1149,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-10-15T01:51:15Z",
      "side": 1,
      "message": "Statements outside functions are generally not \"values\", like `uniform sampler2D foo;`. On the other hand, statements inside functions are generally values, like `a \u003d b;` has a value (which is b).\n\nSo `visitBlock` for the root block doesn\u0027t expect to see an entry on the node stack for each statement, while for other blocks it does (and it will pop it). It\u0027s a bit of an oversimplification, because of course `int a \u003d b;` is not a value, inside or outside a function. But that oversimplification leads to code simplification :D",
      "parentUuid": "d38a16cf_85def0e5",
      "revId": "c613a1cdb2b87b112f8b6f5006b504ab17460053",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}