{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "77034c1b_8a2e106b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-12-14T15:23:40Z",
      "side": 1,
      "message": "Could you please split the change so the autogen stuff can land quicker and gets out of the way of review?",
      "revId": "ea36c8181e5290ccf5db838cd38b9e4ee74ca3e6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c97abf58_7805e641",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1326275
      },
      "writtenOn": "2021-12-14T16:33:32Z",
      "side": 1,
      "message": "Looks great, thanks!\nLet me know if you need help refactoring the validation functions.",
      "revId": "ea36c8181e5290ccf5db838cd38b9e4ee74ca3e6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "30e697d3_92f52524",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1228974
      },
      "writtenOn": "2021-12-16T15:16:09Z",
      "side": 1,
      "message": "Thanks. I refactored the functions. I\u0027d appreciate if you can take a look.",
      "parentUuid": "c97abf58_7805e641",
      "revId": "ea36c8181e5290ccf5db838cd38b9e4ee74ca3e6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "02dd5139_cdf0a138",
        "filename": "src/libANGLE/Framebuffer.cpp",
        "patchSetId": 4
      },
      "lineNbr": 366,
      "author": {
        "id": 1326275
      },
      "writtenOn": "2021-12-14T16:33:32Z",
      "side": 1,
      "message": "nit: GL_FALSE for clarity",
      "range": {
        "startLine": 366,
        "startChar": 13,
        "endLine": 366,
        "endChar": 14
      },
      "revId": "ea36c8181e5290ccf5db838cd38b9e4ee74ca3e6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cad2a5d0_90a03729",
        "filename": "src/libANGLE/Framebuffer.cpp",
        "patchSetId": 4
      },
      "lineNbr": 366,
      "author": {
        "id": 1228974
      },
      "writtenOn": "2021-12-16T15:16:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "02dd5139_cdf0a138",
      "range": {
        "startLine": 366,
        "startChar": 13,
        "endLine": 366,
        "endChar": 14
      },
      "revId": "ea36c8181e5290ccf5db838cd38b9e4ee74ca3e6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3cecf823_dbbeb076",
        "filename": "src/libANGLE/Framebuffer.cpp",
        "patchSetId": 4
      },
      "lineNbr": 389,
      "author": {
        "id": 1326275
      },
      "writtenOn": "2021-12-14T16:33:32Z",
      "side": 1,
      "message": "nit: GL_FALSE for clarity",
      "range": {
        "startLine": 389,
        "startChar": 13,
        "endLine": 389,
        "endChar": 14
      },
      "revId": "ea36c8181e5290ccf5db838cd38b9e4ee74ca3e6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a7239db9_339183d6",
        "filename": "src/libANGLE/Framebuffer.cpp",
        "patchSetId": 4
      },
      "lineNbr": 389,
      "author": {
        "id": 1228974
      },
      "writtenOn": "2021-12-16T15:16:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3cecf823_dbbeb076",
      "range": {
        "startLine": 389,
        "startChar": 13,
        "endLine": 389,
        "endChar": 14
      },
      "revId": "ea36c8181e5290ccf5db838cd38b9e4ee74ca3e6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "20cec5a1_6ecc1cef",
        "filename": "src/libANGLE/validationES31.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1109,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-12-14T15:36:03Z",
      "side": 1,
      "message": "The way we implement these is to refactor the relevant parts of this function in a `Base` function, like `ValidateFramebufferParameteriBase`, then have the ES3.1 version and the ext version call that, each checking for their version/ext beforehand. See for example how `ValidateGetTexParameterBase` is used.",
      "range": {
        "startLine": 1108,
        "startChar": 0,
        "endLine": 1109,
        "endChar": 45
      },
      "revId": "ea36c8181e5290ccf5db838cd38b9e4ee74ca3e6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e986314f_a5bbc0af",
        "filename": "src/libANGLE/validationES31.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1109,
      "author": {
        "id": 1228974
      },
      "writtenOn": "2021-12-16T15:16:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "20cec5a1_6ecc1cef",
      "range": {
        "startLine": 1108,
        "startChar": 0,
        "endLine": 1109,
        "endChar": 45
      },
      "revId": "ea36c8181e5290ccf5db838cd38b9e4ee74ca3e6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "112a844b_a73af949",
        "filename": "src/libANGLE/validationES31.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1207,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-12-14T15:36:03Z",
      "side": 1,
      "message": "ditto",
      "revId": "ea36c8181e5290ccf5db838cd38b9e4ee74ca3e6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aabc580e_aab06011",
        "filename": "src/libANGLE/validationES31.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1207,
      "author": {
        "id": 1228974
      },
      "writtenOn": "2021-12-16T15:16:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "112a844b_a73af949",
      "revId": "ea36c8181e5290ccf5db838cd38b9e4ee74ca3e6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d816b944_74217e49",
        "filename": "src/tests/gl_tests/FramebufferTest.cpp",
        "patchSetId": 4
      },
      "lineNbr": 3691,
      "author": {
        "id": 1228974
      },
      "writtenOn": "2021-12-14T11:12:33Z",
      "side": 1,
      "message": "I wonder if this kind of test is correct.",
      "revId": "ea36c8181e5290ccf5db838cd38b9e4ee74ca3e6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "55b2c1c8_ebc43d4a",
        "filename": "src/tests/gl_tests/FramebufferTest.cpp",
        "patchSetId": 4
      },
      "lineNbr": 3691,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-12-14T15:36:03Z",
      "side": 1,
      "message": "The test seems ok, but we definitely need way more tests:\n\n- Negative test that checks validation (issues incorrect calls and expects the appropriate failures)\n- Test drawing to y-flipped framebuffer\n  * Test both color and depth/stencil\n- Test blit with glBlitFramebuffer from and/or to y-flipped framebuffers\n  * Test float color\n  * Test integer color\n  * Test depth/stencil\n- Test *resolve* with glBlitFramebuffer similarly\n- Test glCopyTexImage from a y-flipped framebuffer\n  * Test float color\n  * Test integer color\n\nAny other GL call that deals with framebuffers?",
      "parentUuid": "d816b944_74217e49",
      "revId": "ea36c8181e5290ccf5db838cd38b9e4ee74ca3e6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5b5f2d60_d20cc543",
        "filename": "src/tests/gl_tests/FramebufferTest.cpp",
        "patchSetId": 4
      },
      "lineNbr": 3691,
      "author": {
        "id": 1326275
      },
      "writtenOn": "2021-12-14T16:33:32Z",
      "side": 1,
      "message": "I believe this extension isn\u0027t available on any of ours bots. Maybe we can get some subset of these tests landed here and follow up ASAP with the rest? And instead Maksim can verify locally that all these WebGL use cases render right side up. Just to unblock ozone/SwANGLE/passthrough.",
      "parentUuid": "55b2c1c8_ebc43d4a",
      "revId": "ea36c8181e5290ccf5db838cd38b9e4ee74ca3e6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3004427b_70470a1a",
        "filename": "src/tests/gl_tests/FramebufferTest.cpp",
        "patchSetId": 4
      },
      "lineNbr": 3691,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-12-14T16:43:53Z",
      "side": 1,
      "message": "Probably there on Intel/Linux? Maksim could also run the tests locally at least, that\u0027d be fine.\n\nHonestly the tests would be just copy pastes of existing tests with the flip added.\n\n- The drawing tests are all over the place, any would do. Can use the essl1_shaders::fs::Checkered() shader to make sure flip is working.\n- The blit/resolve stuff can be found in BlitFramebufferANGLETest.cpp\n- The copy tex image stuff can be found in CopyTexImageTest.cpp\n\nMy concern in particular is that there is definitely something missing in this CL, for example in the implementation of glCopyTextureCHROMIUM which uses a shader or even the CPU to do the copy. I suspect there are similar issues with blit/resolve, for example in the calculation of region to copy or when stencil is involved. A visual check is not going to find all the issues.\n\nAnd speaking of glCopyTextureCHROMIUM, we\u0027d need tests for that too!\n\n- glCopyTextureCHROMIUM and glCopySubTextureCHROMIUM (see tests in CopyTextureTest.cpp)\n- Also to make sure sub-copy offsets are adjusted correctly, need to test glCopyTexSubImage too.",
      "parentUuid": "5b5f2d60_d20cc543",
      "revId": "ea36c8181e5290ccf5db838cd38b9e4ee74ca3e6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "778d500b_333883f6",
        "filename": "src/tests/gl_tests/FramebufferTest.cpp",
        "patchSetId": 4
      },
      "lineNbr": 3691,
      "author": {
        "id": 1228974
      },
      "writtenOn": "2021-12-16T15:16:09Z",
      "side": 1,
      "message": "Thanks. I extended the test to do validation and check the flip y can be set.\n\nI will work on other tests today/tomorrow. If you think this can be landed as is with other other tests added as in a follow up, please tell me :)",
      "parentUuid": "3004427b_70470a1a",
      "revId": "ea36c8181e5290ccf5db838cd38b9e4ee74ca3e6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "09a13514_a4d2a887",
        "filename": "src/tests/gl_tests/FramebufferTest.cpp",
        "patchSetId": 4
      },
      "lineNbr": 3691,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-12-16T15:32:06Z",
      "side": 1,
      "message": "As long as it\u0027s followed up right away, that\u0027s ok with me!",
      "parentUuid": "778d500b_333883f6",
      "revId": "ea36c8181e5290ccf5db838cd38b9e4ee74ca3e6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ecf3b33_5b9a0ada",
        "filename": "src/tests/gl_tests/FramebufferTest.cpp",
        "patchSetId": 4
      },
      "lineNbr": 3691,
      "author": {
        "id": 1228974
      },
      "writtenOn": "2021-12-16T15:43:38Z",
      "side": 1,
      "message": "I\u0027m not sure how fast that is going to be. I\u0027ll still be working tomorrow (doing last year reports and many other things), but then will go to holidays for the next 2 weeks and will be back on 3rd of Jan. I hope I\u0027m able to complete that.",
      "parentUuid": "09a13514_a4d2a887",
      "revId": "ea36c8181e5290ccf5db838cd38b9e4ee74ca3e6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "af196366_14f259d8",
        "filename": "src/tests/gl_tests/FramebufferTest.cpp",
        "patchSetId": 4
      },
      "lineNbr": 3691,
      "author": {
        "id": 1326275
      },
      "writtenOn": "2021-12-16T21:09:07Z",
      "side": 1,
      "message": "In that case might be better if we wait until the new year to land this so we\u0027re not breaking things under lower capacity",
      "parentUuid": "3ecf3b33_5b9a0ada",
      "revId": "ea36c8181e5290ccf5db838cd38b9e4ee74ca3e6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "218e8a89_63c98e42",
        "filename": "src/tests/gl_tests/FramebufferTest.cpp",
        "patchSetId": 4
      },
      "lineNbr": 3691,
      "author": {
        "id": 1228974
      },
      "writtenOn": "2021-12-17T08:43:33Z",
      "side": 1,
      "message": "Let\u0027s wait then. Have a nice Christmas and the New Year :)",
      "parentUuid": "af196366_14f259d8",
      "revId": "ea36c8181e5290ccf5db838cd38b9e4ee74ca3e6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e6937cff_43d430eb",
        "filename": "src/tests/gl_tests/FramebufferTest.cpp",
        "patchSetId": 4
      },
      "lineNbr": 3691,
      "author": {
        "id": 1228974
      },
      "writtenOn": "2022-01-03T12:50:41Z",
      "side": 1,
      "message": "I started to add tests in https://chromium-review.googlesource.com/c/angle/angle/+/3365195/1 .\n\nAre still you OK with landing the current patch?",
      "parentUuid": "218e8a89_63c98e42",
      "revId": "ea36c8181e5290ccf5db838cd38b9e4ee74ca3e6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}