{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "106c44fa_fe627ff0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-09-28T14:45:29Z",
      "side": 1,
      "message": "One more after this (for map/unmap).",
      "revId": "368032a25ad8b151740390cead056e175efe0357",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "00d425c3_f85c8ded",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-09-29T02:37:26Z",
      "side": 1,
      "message": "Oops, +2\u0027ed before Shabi +1\u0027ed.",
      "revId": "368032a25ad8b151740390cead056e175efe0357",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "84975418_611212af",
        "filename": "src/libANGLE/Buffer.cpp",
        "patchSetId": 7
      },
      "lineNbr": 401,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-09-29T01:02:37Z",
      "side": 1,
      "message": "nit: getContentsObserverIndex(), since this isn\u0027t returning the ContentsObserver itself.",
      "range": {
        "startLine": 401,
        "startChar": 15,
        "endLine": 401,
        "endChar": 35
      },
      "revId": "368032a25ad8b151740390cead056e175efe0357",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "81f37cc0_440132d9",
        "filename": "src/libANGLE/Buffer.cpp",
        "patchSetId": 7
      },
      "lineNbr": 418,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-09-28T14:58:31Z",
      "side": 1,
      "message": "It looks like this is guarding against the VAO getting bound to the buffer multiple times. In that case, shouldn\u0027t ContentObserver be reference counted?\n\nIn other words,  if `addContentsObserver` is called twice, would `removeContentsObserver` also be called twice? If so, what happens in the following case?\n\n- addContentsObserver(vao1, k)\n- addContentsObserver(vao1, k)\n- removeContentsObserver(vao1, k)\n- Update buffer, vao1 is no longer observing it\n- Draw call, vao1 is stale?\n- removeContentsObserver(vao1, k)\n\nOr is that impossible?",
      "revId": "368032a25ad8b151740390cead056e175efe0357",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8bbf0152_df90e5a0",
        "filename": "src/libANGLE/Buffer.cpp",
        "patchSetId": 7
      },
      "lineNbr": 418,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-09-28T15:37:46Z",
      "side": 1,
      "message": "The code would behave correctly in that scenario. The invariant is: after an \"add\", there\u0027s exactly one contents observer {vertexArray, bufferIndex}, and after \"remove\" there\u0027s exactly zero.",
      "parentUuid": "81f37cc0_440132d9",
      "revId": "368032a25ad8b151740390cead056e175efe0357",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "084f8675_b25c81d4",
        "filename": "src/libANGLE/Buffer.cpp",
        "patchSetId": 7
      },
      "lineNbr": 418,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-09-28T16:00:51Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "8bbf0152_df90e5a0",
      "revId": "368032a25ad8b151740390cead056e175efe0357",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "76973601_180ec725",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 451,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-09-28T14:58:31Z",
      "side": 1,
      "message": "Should the policy decision be moved down to BufferVk::setDataImpl? There are different paths there, and feels like the `mBuffer-\u003eisCurrentlyInUse()` case and the else case would need a separate policy?\n\nI\u0027m afraid I\u0027m losing my grip over what these notifications mean...",
      "revId": "368032a25ad8b151740390cead056e175efe0357",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a7102491_ac91af7d",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 451,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-09-28T15:37:46Z",
      "side": 1,
      "message": "I could rename it. The notification basically indicates if the buffer update is a respecification or if it\u0027s a contents update. So it might be easier to process if it was a \"BufferCommand::Respecification\" or \"BufferCommand::SubData\" or something like that. To answer your first question: I\u0027m pretty sure it\u0027s correct like this. I do agree it\u0027s getting harder to track.",
      "parentUuid": "76973601_180ec725",
      "revId": "368032a25ad8b151740390cead056e175efe0357",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ea93227b_9e60313d",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 451,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-09-28T16:00:51Z",
      "side": 1,
      "message": "Ack.\n\nWould be nice to look back once all your work is done to see if there\u0027s some refactor opportunity.",
      "parentUuid": "a7102491_ac91af7d",
      "revId": "368032a25ad8b151740390cead056e175efe0357",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}