{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "113310be_fc960ab7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-05-27T16:51:06Z",
      "side": 1,
      "message": "+1 assuming this passes CQ.\n\nAlso, since this is possibly making ANGLE less \"correct\" (if the caller doesn\u0027t use the generated mipmaps with a shader read next), it would be good to justify this change with some performance numbers in the commit message.",
      "revId": "d4c5ca154898639d8c9c05b6f9eefc6c6a472d88",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "adeba573_d260da80",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2021-05-27T17:00:36Z",
      "side": 1,
      "message": "It\u0027s not less correct though -- At the end of blit, you have to put all mip levels into same layout, but mip levels are in different layout right now (a mix of transfer_src and transfer_dst), so no matter which layout you pick, it is not going to be \"exact correct\". I think previously transfer_src was picked since that is the simplest. Now we picked other more likely layout, which likely reduced tiny bit of CPU overhead here if you end up use it in FS.",
      "parentUuid": "113310be_fc960ab7",
      "revId": "d4c5ca154898639d8c9c05b6f9eefc6c6a472d88",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e5258179_f517fa91",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 3
      },
      "lineNbr": 5140,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-05-27T16:26:02Z",
      "side": 1,
      "message": "I\u0027d add a note here that FragmentShaderReadOnly is a \"bet\" we made on what the future usage of the image would be.",
      "revId": "d4c5ca154898639d8c9c05b6f9eefc6c6a472d88",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "76958394_f1458305",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 3
      },
      "lineNbr": 5140,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-05-27T16:51:06Z",
      "side": 1,
      "message": "Is there a good way to check if this is adding any tech debt to enabling the sync validation layer as part of CQ?",
      "parentUuid": "e5258179_f517fa91",
      "revId": "d4c5ca154898639d8c9c05b6f9eefc6c6a472d88",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6c58e5de_d9d85750",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 3
      },
      "lineNbr": 5140,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2021-05-27T16:54:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e5258179_f517fa91",
      "revId": "d4c5ca154898639d8c9c05b6f9eefc6c6a472d88",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f7d06e5a_01a6cce9",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 3
      },
      "lineNbr": 5152,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-05-27T16:26:02Z",
      "side": 1,
      "message": "Should similarly have an if to avoid issuing a barrier if levelCount will end up 0. Actually, maybe that should just turn into ASSERT. glGenerateMipmap generates a full mipmap, so maxLevel should always be mLevelCount.",
      "revId": "d4c5ca154898639d8c9c05b6f9eefc6c6a472d88",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ecc4f1d6_f77702cb",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 3
      },
      "lineNbr": 5152,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2021-05-27T16:54:45Z",
      "side": 1,
      "message": "You will always need this barrier, since the very last mipmap level is in transfer_dst layout due to the blit.",
      "parentUuid": "f7d06e5a_01a6cce9",
      "revId": "d4c5ca154898639d8c9c05b6f9eefc6c6a472d88",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3a672d12_b27258b9",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 3
      },
      "lineNbr": 5166,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-05-27T16:26:02Z",
      "side": 1,
      "message": "Do mLastNonShaderReadOnlyLayout and mCurrentShaderReadStageMask need to be updated as well?",
      "revId": "d4c5ca154898639d8c9c05b6f9eefc6c6a472d88",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ecb003d_08c41a91",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 3
      },
      "lineNbr": 5166,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2021-05-27T16:54:45Z",
      "side": 1,
      "message": "The access.onImageTransferWrite() call above at line 5075 should already handle all these (barrierImpl clear mCurrentShaderReadStageMask).",
      "parentUuid": "3a672d12_b27258b9",
      "revId": "d4c5ca154898639d8c9c05b6f9eefc6c6a472d88",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}