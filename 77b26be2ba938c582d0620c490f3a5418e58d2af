{
  "comments": [
    {
      "key": {
        "uuid": "0a0b1a79_3f17a1b5",
        "filename": "src/libANGLE/renderer/vulkan/LiteCommandBufferVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 25,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-02-28T22:13:01Z",
      "side": 1,
      "message": "`header-\u003enext \u003d nullptr;` is missing",
      "revId": "77b26be2ba938c582d0620c490f3a5418e58d2af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "821c0f32_ee521ab3",
        "filename": "src/libANGLE/renderer/vulkan/LiteCommandBufferVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 71,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-02-28T22:13:01Z",
      "side": 1,
      "message": "I would like to second Jamie\u0027s suggestion to name this `storePointerParameter()`. `updatePtrCmdData` is not descriptive enough (doesn\u0027t tell there\u0027s a copy involved), at the same time it\u0027s too implementation-based (sounds like it says this function \"updates mPtrCmdData\", which is an implementation detail)",
      "revId": "77b26be2ba938c582d0620c490f3a5418e58d2af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f0d94fca_fd0abe06",
        "filename": "src/libANGLE/renderer/vulkan/LiteCommandBufferVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 71,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2019-02-28T22:46:09Z",
      "side": 1,
      "message": "Yeah. Also you shouldn\u0027t have to specify the template argument. It should be inferred by the compiler.",
      "parentUuid": "821c0f32_ee521ab3",
      "revId": "77b26be2ba938c582d0620c490f3a5418e58d2af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b295133_6afeb0aa",
        "filename": "src/libANGLE/renderer/vulkan/LiteCommandBufferVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 139,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-02-28T22:13:01Z",
      "side": 1,
      "message": "It might be worthwhile to match vk::CommandBuffer\u0027s functions and vk::LiteCommandBuffer\u0027s (w.r.t to VkBuffer vs vk::Buffer usage and such). That would let us quickly substitute one for the other for performance comparison. It would be a nice clean up as well, given that vk::CommandBuffer\u0027s functions are kind of a mix and match.\n\nI personally prefer passing Vk* parameters as done here, as that\u0027s more flexible (if there\u0027s necessity to avoid using vk::* somewhere), but I would be fine with either.\n\nWe could even keep both classes alive and include a perf test that performs performance comparisons between the two.",
      "revId": "77b26be2ba938c582d0620c490f3a5418e58d2af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "09eae579_18c1ab21",
        "filename": "src/libANGLE/renderer/vulkan/LiteCommandBufferVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 139,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2019-02-28T22:46:09Z",
      "side": 1,
      "message": "This is a decent idea. Maybe we can keep both around for testing.",
      "parentUuid": "0b295133_6afeb0aa",
      "revId": "77b26be2ba938c582d0620c490f3a5418e58d2af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "86756b5c_b5edd498",
        "filename": "src/libANGLE/renderer/vulkan/LiteCommandBufferVk.h",
        "patchSetId": 6
      },
      "lineNbr": 6,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2019-02-28T22:46:09Z",
      "side": 1,
      "message": "how about SecondaryBuffer?",
      "range": {
        "startLine": 6,
        "startChar": 3,
        "endLine": 6,
        "endChar": 20
      },
      "revId": "77b26be2ba938c582d0620c490f3a5418e58d2af",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}