{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "517b7019_b51f0f70",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2021-10-05T00:35:30Z",
      "side": 1,
      "message": "Tackled this as part of ANGLE Fix-It week.",
      "revId": "90da9be17e6612232a31691f558c1b62161cf15c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "59966784_37d04b55",
        "filename": "src/libANGLE/capture/FrameCapture.cpp",
        "patchSetId": 1
      },
      "lineNbr": 6055,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-10-05T03:02:06Z",
      "side": 1,
      "message": "I think these are normally decimal, especially when looking at formats like GL_RGBA32F (decimal 32, rather than 0x20), so they should remain addScalar().",
      "range": {
        "startLine": 6050,
        "startChar": 0,
        "endLine": 6055,
        "endChar": 67
      },
      "revId": "90da9be17e6612232a31691f558c1b62161cf15c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3df40e88_d9506c77",
        "filename": "src/libANGLE/capture/FrameCapture.cpp",
        "patchSetId": 1
      },
      "lineNbr": 6055,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2021-10-05T03:12:31Z",
      "side": 1,
      "message": "That\u0027s a good point.  I was a little hyperfocused on the -1, which still an unfortunate value compared to EGL_DONT_CARE, even if they are equivalent.  The primary targets for this CL are the other enum values.  I\u0027ll drop the Config*Bits changes.",
      "parentUuid": "59966784_37d04b55",
      "range": {
        "startLine": 6050,
        "startChar": 0,
        "endLine": 6055,
        "endChar": 67
      },
      "revId": "90da9be17e6612232a31691f558c1b62161cf15c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1746701e_4671ba7c",
        "filename": "src/libANGLE/capture/FrameCapture.cpp",
        "patchSetId": 1
      },
      "lineNbr": 6055,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2021-10-05T03:37:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3df40e88_d9506c77",
      "range": {
        "startLine": 6050,
        "startChar": 0,
        "endLine": 6055,
        "endChar": 67
      },
      "revId": "90da9be17e6612232a31691f558c1b62161cf15c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a1ee646a_4999862e",
        "filename": "src/libANGLE/capture/FrameCapture.cpp",
        "patchSetId": 1
      },
      "lineNbr": 6064,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-10-05T03:02:06Z",
      "side": 1,
      "message": "EGL_DONT_CARE is defined as \u0027-1\u0027, so these can remain addScalar():\n\n  #define EGL_DONT_CARE                     EGL_CAST(EGLint,-1)",
      "range": {
        "startLine": 6059,
        "startChar": 0,
        "endLine": 6064,
        "endChar": 61
      },
      "revId": "90da9be17e6612232a31691f558c1b62161cf15c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "03367a84_372afd5d",
        "filename": "src/libANGLE/capture/FrameCapture.cpp",
        "patchSetId": 1
      },
      "lineNbr": 6064,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2021-10-05T03:37:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a1ee646a_4999862e",
      "range": {
        "startLine": 6059,
        "startChar": 0,
        "endLine": 6064,
        "endChar": 61
      },
      "revId": "90da9be17e6612232a31691f558c1b62161cf15c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8058de3b_e07fef6e",
        "filename": "util/capture/frame_capture_test_utils.cpp",
        "patchSetId": 1
      },
      "lineNbr": 96,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-10-05T03:02:06Z",
      "side": 1,
      "message": "Based on my other comments, I think you can drop the HexStringToInt() now.",
      "revId": "90da9be17e6612232a31691f558c1b62161cf15c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7b13c213_9b49c007",
        "filename": "util/capture/frame_capture_test_utils.cpp",
        "patchSetId": 1
      },
      "lineNbr": 96,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2021-10-05T03:37:47Z",
      "side": 1,
      "message": "Done, although to clarify, this comment is regarding the the dual support here.  Once this lands and the traces are all updated, the GetInt versions can go away.  I updated the comment to clarify.",
      "parentUuid": "8058de3b_e07fef6e",
      "revId": "90da9be17e6612232a31691f558c1b62161cf15c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "af76bde6_5c115471",
        "filename": "util/capture/frame_capture_test_utils.cpp",
        "patchSetId": 1
      },
      "lineNbr": 96,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2021-10-05T03:37:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8058de3b_e07fef6e",
      "revId": "90da9be17e6612232a31691f558c1b62161cf15c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}