{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "90903d74_5f179cd0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2022-01-22T01:10:47Z",
      "side": 1,
      "message": "I\u0027m not sure I agree with all of the extra copies sticking around for the life of the Program/App.   fillProgramStateMap() was only filling in a map of pointers, while now the data is being permanently copied into the ProgramExecutable.   For monolithic programs (the vast majority of programs), this means we are doubling the memory consumption for the life of the program (which seems to essentially be the life of the app).\n\nHow do we clean up the memory and remove the duplication?   Does it need to be in the ProgramState in the first place, or can we fill it into the ProgramExecutable directly?",
      "revId": "739d05152ba0811b512c483d0153d79a5beddfd0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ab3eef0d_b30c236a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-01-24T14:59:03Z",
      "side": 1,
      "message": "Hey Tim, there\u0027s no additional duplication with non-PPO programs. The duplication is entirely with PPOs. Since these are pretty rare I think it\u0027s okay for now. There will be duplication of uniforms, shader buffers, and some Vulkan-specific stuff like the original SPIR-V. Cleaning this up might be something we tackle in the future by organizing the data differently.\n\nI updated the commit message to help clarify this and prevent misunderstanding.",
      "parentUuid": "90903d74_5f179cd0",
      "revId": "739d05152ba0811b512c483d0153d79a5beddfd0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fc95e3be_be7039f8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2022-01-24T17:36:29Z",
      "side": 1,
      "message": "Ah, yup, I thought I saw something new there for monolithic programs, but everything was already in the ProgramExecutable for them already anyway.",
      "parentUuid": "ab3eef0d_b30c236a",
      "revId": "739d05152ba0811b512c483d0153d79a5beddfd0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "277e8729_5f6003c8",
        "filename": "src/libANGLE/ProgramExecutable.cpp",
        "patchSetId": 12
      },
      "lineNbr": 154,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2022-01-22T01:10:47Z",
      "side": 1,
      "message": "\u0027activeShaders\u0027 should be unnecessary, since the ShaderMap should only contain valid Program pointers for the active shaders.",
      "revId": "739d05152ba0811b512c483d0153d79a5beddfd0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c0e36ac0_ff0629ca",
        "filename": "src/libANGLE/ProgramExecutable.cpp",
        "patchSetId": 12
      },
      "lineNbr": 154,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-01-24T14:59:03Z",
      "side": 1,
      "message": "It\u0027s a nice convenience. In exchange for passing an extra argument I can use a range-for and omit the checks for nullptr Program.",
      "parentUuid": "277e8729_5f6003c8",
      "revId": "739d05152ba0811b512c483d0153d79a5beddfd0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a719ee2a_902393d0",
        "filename": "src/libANGLE/ProgramExecutable.cpp",
        "patchSetId": 12
      },
      "lineNbr": 154,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2022-01-24T17:36:29Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "c0e36ac0_ff0629ca",
      "revId": "739d05152ba0811b512c483d0153d79a5beddfd0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bd9c6755_0363e20b",
        "filename": "src/libANGLE/ProgramExecutable.cpp",
        "patchSetId": 12
      },
      "lineNbr": 280,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-01-24T14:59:03Z",
      "side": 1,
      "message": "reference.",
      "range": {
        "startLine": 280,
        "startChar": 2,
        "endLine": 280,
        "endChar": 27
      },
      "revId": "739d05152ba0811b512c483d0153d79a5beddfd0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b8178455_977f05d7",
        "filename": "src/libANGLE/ProgramExecutable.cpp",
        "patchSetId": 12
      },
      "lineNbr": 1576,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2022-01-22T01:10:47Z",
      "side": 1,
      "message": "What prevents mImageBindings from growing indefinitely whenever the Program is linked with new shaders?",
      "range": {
        "startLine": 1575,
        "startChar": 0,
        "endLine": 1576,
        "endChar": 84
      },
      "revId": "739d05152ba0811b512c483d0153d79a5beddfd0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da7d3811_f972848d",
        "filename": "src/libANGLE/ProgramExecutable.cpp",
        "patchSetId": 12
      },
      "lineNbr": 1576,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-01-24T14:59:03Z",
      "side": 1,
      "message": "They\u0027re reset above. Note this is not new code, just copied.",
      "parentUuid": "b8178455_977f05d7",
      "range": {
        "startLine": 1575,
        "startChar": 0,
        "endLine": 1576,
        "endChar": 84
      },
      "revId": "739d05152ba0811b512c483d0153d79a5beddfd0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eca1af31_3d3411ef",
        "filename": "src/libANGLE/ProgramExecutable.cpp",
        "patchSetId": 12
      },
      "lineNbr": 1576,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2022-01-24T17:36:29Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "da7d3811_f972848d",
      "range": {
        "startLine": 1575,
        "startChar": 0,
        "endLine": 1576,
        "endChar": 84
      },
      "revId": "739d05152ba0811b512c483d0153d79a5beddfd0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}