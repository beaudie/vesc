{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b9810c03_105223ad",
        "filename": "extensions/EGL_ANGLE_d3d_texture_client_buffer.txt",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2020-08-07T13:37:41Z",
      "side": 1,
      "message": "Drive by: What if we added a new parameter to specify array index or subresource index instead of using the format to determine the plane?",
      "range": {
        "startLine": 82,
        "startChar": 5,
        "endLine": 85,
        "endChar": 79
      },
      "revId": "63d07d34ec22bc8bc964b68f5a79c013522c047b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "56a175de_afc8dff3",
        "filename": "extensions/EGL_ANGLE_d3d_texture_client_buffer.txt",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 1128437
      },
      "writtenOn": "2020-08-12T00:23:12Z",
      "side": 1,
      "message": "Any suggestions for names we could use?  Note that array index would not be accurate since we could have an array of NV12 textures where each texture has an array index.  Subresource index might be ok, but technically accessing YUV planes as subresources is only supported in D3D12, not D3D11.",
      "parentUuid": "b9810c03_105223ad",
      "range": {
        "startLine": 82,
        "startChar": 5,
        "endLine": 85,
        "endChar": 79
      },
      "revId": "63d07d34ec22bc8bc964b68f5a79c013522c047b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0db8ea06_b13e3461",
        "filename": "extensions/EGL_ANGLE_d3d_texture_client_buffer.txt",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2020-08-17T15:22:17Z",
      "side": 1,
      "message": "I believe NV12 textures accessed as a 2D array textures to with the array index determining which YUV plane is sampled/rendered to.  Are there arrays of NV12 textures?\n\nThere are a few options for specifying the index I think:\n - EGL_EXT_image_dma_buf_import uses EGL_DMA_BUF_PLANE0_FD_EXT, EGL_DMA_BUF_PLANE1_FD_EXT, etc\n - EGL_KHR_gl_texture_3D_image uses EGL_GL_TEXTURE_ZOFFSET_KHR\n - EGL_IMG_image_plane_attribs uses EGL_NATIVE_BUFFER_PLANE_OFFSET_IMG\n\nI would suggest EGL_D3D_TEXTURE_ZOFFSET_ANGLE.",
      "parentUuid": "56a175de_afc8dff3",
      "range": {
        "startLine": 82,
        "startChar": 5,
        "endLine": 85,
        "endChar": 79
      },
      "revId": "63d07d34ec22bc8bc964b68f5a79c013522c047b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4f78c2a3_606d227b",
        "filename": "extensions/EGL_ANGLE_d3d_texture_client_buffer.txt",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 1128437
      },
      "writtenOn": "2020-08-17T17:47:54Z",
      "side": 1,
      "message": "\u003e I believe NV12 textures accessed as a 2D array textures to with the array index determining which YUV plane is sampled/rendered to.  Are there arrays of NV12 textures?\n\nYes, we have arrays of NV12 textures: https://source.chromium.org/chromium/chromium/src/+/master:media/gpu/windows/d3d11_video_decoder.cc;drc\u003d1f7e8b67b050415aa2756623901b99a10dd9c83a;l\u003d712\n\nIn D3D12 you can access the Y and UV planes explicitly as subresources, but in D3D11 you can only do that implicitly by creating SRVs with the correct format.  So calling it subresource index would be more appropriate than calling it array index.\n\nI was looking at the IO surface extension and thought EGL_D3D_TEXTURE_PLANE_ANGLE might be ok or EGL_D3D_TEXTURE_SUBRESOURCE_ANGLE (or SUBRESOURCE_INDEX) etc.\n\nAlso, how much validation do we want for this extension.  I think having the client specify the internal format, type, width and height in addition to the plane might be good, but it needs a lot of boilerplate code especially since you can bind regular R8G8B8A8 textures to R8 or R8G8 SRVs.  Not sure if we want to allow or disallow that much generality.",
      "parentUuid": "0db8ea06_b13e3461",
      "range": {
        "startLine": 82,
        "startChar": 5,
        "endLine": 85,
        "endChar": 79
      },
      "revId": "63d07d34ec22bc8bc964b68f5a79c013522c047b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "306482aa_ecdb8796",
        "filename": "extensions/EGL_ANGLE_d3d_texture_client_buffer.txt",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 1128437
      },
      "writtenOn": "2021-01-12T07:04:20Z",
      "side": 1,
      "message": "I chose EGL_D3D11_TEXTURE_PLANE_ANGLE for this.",
      "parentUuid": "4f78c2a3_606d227b",
      "range": {
        "startLine": 82,
        "startChar": 5,
        "endLine": 85,
        "endChar": 79
      },
      "revId": "63d07d34ec22bc8bc964b68f5a79c013522c047b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}