{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a08b4d59_277a0f0a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-03-31T14:23:57Z",
      "side": 1,
      "message": "Not clear how this conclusion was made. Why does having imageGLColorspace mean that glColorspace wouldn\u0027t need the Vulkan extension for format override?",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 2
      },
      "revId": "2861666641da730b4f4637feef9a569e76a1f1b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "36beca1d_60550295",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1382541
      },
      "writtenOn": "2021-04-02T02:28:26Z",
      "side": 1,
      "message": "Based on assumption that imageGlColorspace depends on glColorspace and supportsImageFormatList:\n\n```\noutExtensions-\u003eimageGlColorspace \u003d\n        outExtensions-\u003eglColorspace \u0026\u0026 getRenderer()-\u003egetFeatures().supportsImageFormatList.enabled;\n```\n\nMight be misunderstanding...",
      "parentUuid": "a08b4d59_277a0f0a",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 2
      },
      "revId": "2861666641da730b4f4637feef9a569e76a1f1b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "46bdb2a1_9f5921a5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-04-06T15:39:53Z",
      "side": 1,
      "message": "i think the commit message needs rewording. the commit message says -\n the enable of glColorspace should not depend on the check of image colorspace.\n\nif you look at the code, enabling \"glColorspace\" only depends on 2 things -\n 1. VK swapchain colorspace\n 2. VK_KHR_image_format_list\n\nSo, im not sure where/how \"glColorspace\" depends on \"image colorspace\"\n\nAn aside - the idea was to enable all colorspace related extensions on platforms that have the fast path and discourage relying on the fallback/emulation path, since we want to remove it from ANGLE.",
      "parentUuid": "36beca1d_60550295",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 2
      },
      "revId": "2861666641da730b4f4637feef9a569e76a1f1b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "26f009ea_bc65c1a7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1382541
      },
      "writtenOn": "2021-03-31T09:31:45Z",
      "side": 1,
      "message": "Hi all,\n\nWe found this during replaying our trace files, please help to review if this is valid, thanks in advance!",
      "revId": "2861666641da730b4f4637feef9a569e76a1f1b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f32490b1_6db0024b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-03-31T14:22:38Z",
      "side": 1,
      "message": "+Mohan. Dependency on VK_KHR_image_format_list was added here [1]. Mohan, is that mandatory? Why isn\u0027t the test added in [1] failing with this change?\n\n[1]: https://chromium-review.googlesource.com/c/angle/angle/+/2530535",
      "revId": "2861666641da730b4f4637feef9a569e76a1f1b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "16e1d70b_99f31191",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-03-31T14:54:13Z",
      "side": 1,
      "message": "both \"EGL_KHR_gl_colorspace\" and \"EGL_EXT_image_gl_colorspace\" allows for reinterpretation of colorspace. VK_KHR_image_format_list provides the efficient path for that. I believe we had a discussion about removing the inefficient emulation path but i think the consensus was bots will take about a year to have \"VK_KHR_image_format_list\" enabled and so we keep the emulation path around for a bit.\n\n\u003e Why isn\u0027t the test added in [1] failing with this change?\n\nneed confirmation but their platform may have default support for \"VK_KHR_image_format_list\" so removing that requirement ends up being a noop for them?",
      "parentUuid": "f32490b1_6db0024b",
      "revId": "2861666641da730b4f4637feef9a569e76a1f1b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6e59fea7_8be94746",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-03-31T15:04:25Z",
      "side": 1,
      "message": "@Xiaoxuan, do you support VK_KHR_image_format_list? Is this change a fix for something that\u0027s \"failing\" on your platform?",
      "parentUuid": "16e1d70b_99f31191",
      "revId": "2861666641da730b4f4637feef9a569e76a1f1b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6be8fa0c_803838c0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1382541
      },
      "writtenOn": "2021-04-02T02:24:59Z",
      "side": 1,
      "message": "Hi,\n\nWe\u0027re on a platform with:\nsupportsSwapchainColorspace.enabled \u003d true (VK_EXT_swapchain_colorspace)\nsupportsImageFormatList.enabled \u003d false (VK_KHR_image_format_list)\n\nWhen replaying trace file with EGL_GL_COLORSPACE_KHR specified, such as EGL_GL_COLORSPACE_LINEAR, it failed(EGL_BAD_ATTRIBUTE) to create the windowsurface at AOSP framework:\nhttps://cs.android.com/android/platform/superproject/+/master:frameworks/native/opengl/libs/EGL/egl_platform_entries.cpp;l\u003d539?q\u003dprocessAttributes\n\nWith this patch we can proceed on the trace replaying, then we proposed this. If this is inappropriate then we can discard this, and keep this a WA for internal usage.",
      "parentUuid": "6e59fea7_8be94746",
      "revId": "2861666641da730b4f4637feef9a569e76a1f1b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "661fb82f_beaae07c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-04-06T06:07:57Z",
      "side": 1,
      "message": "Ack. According to Mohan there\u0027s a fallback path, so this change should be ok.\n\nIt would be nice if you could implement VK_KHR_image_format_list in your driver nevertheless so we can eventually remove the fallback path.",
      "parentUuid": "6be8fa0c_803838c0",
      "revId": "2861666641da730b4f4637feef9a569e76a1f1b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e84923b3_fc8b584b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1382541
      },
      "writtenOn": "2021-04-06T07:08:29Z",
      "side": 1,
      "message": "Just checked again on VK_KHR_image_format_list, Mali do support it, currently ANGLE only enable supportsImageFormatList on AMD platform.\n\n```\nANGLE_FEATURE_CONDITION(\n        \u0026mFeatures, supportsImageFormatList,\n        (ExtensionFound(VK_KHR_IMAGE_FORMAT_LIST_EXTENSION_NAME, deviceExtensionNames)) \u0026\u0026 isAMD);\n```\n\nI\u0027m testing on our boards to check if it can pass CTS/end2end on Mali GPU, and will enable this on Mali once we got the test result.",
      "parentUuid": "661fb82f_beaae07c",
      "revId": "2861666641da730b4f4637feef9a569e76a1f1b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "acc8bbc9_23c57281",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-04-06T13:38:53Z",
      "side": 1,
      "message": "LGTM - would prefer if you enable image_format_list on Mali in this CL instead.",
      "revId": "2861666641da730b4f4637feef9a569e76a1f1b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}