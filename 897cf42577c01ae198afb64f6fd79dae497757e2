{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "0bd2e557_2da63b05",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2023-01-21T00:37:05Z",
      "side": 1,
      "message": "Gregg and Quyen: could you please review this change? I\u0027ve verified on an M1 Mac that MTLPixelFormatDepth16Unorm is used and that the test passes, and on an Intel Mac that MTLPixelFormatDepth32Float is used and that the test still passes. Also verified that on the Intel Mac (even using the AMD GPU) that forcing D16_UNORM makes the test fail.\n\nI can\u0027t test on iOS and don\u0027t know how to do so with the simulator. The Metal Feature Set table indicates that MTLPixelFormatDepth16Unorm should work everywhere. The iOS Simulator docs\u0027 only relevant restriction is that only combined depth+stencil attachments are supported. Since MTLPixelFormatDepth16Unorm is not being used with a stencil buffer I assume it should work.\n\nAlexey, thanks for the hint that this approach might work.\n\nApple folks: heads up. This might change the behavior of WebGL\u0027s default back buffer on iOS.\n\nAny feedback welcome. Thanks.",
      "revId": "897cf42577c01ae198afb64f6fd79dae497757e2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9a24720b_75191de5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2023-01-21T01:03:59Z",
      "side": 1,
      "message": "Those flakes are definitely unrelated. Trying again.",
      "revId": "897cf42577c01ae198afb64f6fd79dae497757e2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "279269a2_5dbc2800",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1543187
      },
      "writtenOn": "2023-01-21T07:17:23Z",
      "side": 1,
      "message": "I don\u0027t remember the exact reason why we overrode `D16_UNORM` to `D32_FLOAT` on Mac. Based on the features set table https://developer.apple.com/metal/Metal-Feature-Set-Tables.pdf, `Depth16Unorm` is actually supported on all GPU family. So we should be fine removing the override entirely?\n\nIf I remember correctly, probably the override was added by Apple to work-around some dEQP test failures?",
      "revId": "897cf42577c01ae198afb64f6fd79dae497757e2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}