{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "21580f6b_ca92b331",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1631,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-02-19T03:11:28Z",
      "side": 0,
      "message": "The reason this works for FBOs is that when the format is emulated, we issue a one-time clear and make sure we never touch alpha afterwards. See ImageHelper::stageClearIfEmulatedFormat.\n\nWe should do something similar for the swapchain images.",
      "revId": "fd132e4e7a9c84333b4fb4730f79367fe75f53e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f37ed8dd_0d6bac90",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1631,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2021-02-19T16:10:25Z",
      "side": 0,
      "message": "Thank you Shabi!",
      "parentUuid": "21580f6b_ca92b331",
      "revId": "fd132e4e7a9c84333b4fb4730f79367fe75f53e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fff07a53_e067df98",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1631,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2021-02-19T23:24:42Z",
      "side": 0,
      "message": "ImageHelper::stageClearIfEmulatedFormat() is being called for the MSAA and for each swapchain image, but only when the swapchain is created.  The game is rendering to the MSAA buffer early, and to the swapchain images later.  The render passes are clearing those buffers, with the colorWriteMask set to RGB (not alpha).  I\u0027m guessing that this is causing the alpha channel to be cleared to 0.  Hard to tell since debugging on Android is so poor.\n\nI found that by calling ImageHelper::stageClearIfEmulatedFormat() with each ANI eliminates the problem except for one brief moment when the game transitions from MSAA to non-MSAA.  It looks like there\u0027s a clear of the swapchain image to alpha\u003d0 just before the swapchain recreation.  This appears to leave the swapchain image in place for a brief moment.",
      "parentUuid": "f37ed8dd_0d6bac90",
      "revId": "fd132e4e7a9c84333b4fb4730f79367fe75f53e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d235971_50314ee5",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1631,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-02-20T02:46:53Z",
      "side": 0,
      "message": "First off, we shouldn\u0027t need to clear the image on every ANI. It should be enough to stage it once per SwapchainImage::image. There may be some FramebufferVk dirty bit trickery necessary to make sure the clears are staged (I\u0027m not sure, but I\u0027m guessing after the first FramebufferVk::syncState, the next ANI doesn\u0027t trigger any dirty bits that would allow deferred clears to be extracted from the new swapchain image).\n\nAlso, there should be one stageClearIfEmulatedFormat called for the the MSAA image (but maybe that\u0027s automatically done? Please check).\n\n\u003e The render passes are clearing those buffers, with the colorWriteMask set to RGB (not alpha)\n\nI don\u0027t quite understand. The clear should end up as loadOp\u003dCLEAR, what\u0027s the colorWriteMask about?",
      "parentUuid": "fff07a53_e067df98",
      "revId": "fd132e4e7a9c84333b4fb4730f79367fe75f53e7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}