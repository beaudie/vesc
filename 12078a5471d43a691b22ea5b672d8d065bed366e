{
  "comments": [
    {
      "key": {
        "uuid": "5503dc5d_40863e50",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 143,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-06-07T03:32:38Z",
      "side": 1,
      "message": "This is 48 bytes, right? It may be best to set the dynamic buffer size to 4096, i.e. one page. That wastes 16 bytes per page, which is tiny, but avoids sub-page allocations. This DynamicBuffer won\u0027t be holding on to many pages anyway.",
      "range": {
        "startLine": 143,
        "startChar": 28,
        "endLine": 143,
        "endChar": 50
      },
      "revId": "12078a5471d43a691b22ea5b672d8d065bed366e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "19802bd8_40112fb1",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 143,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-06-21T15:14:52Z",
      "side": 1,
      "message": "I think it worked out to 64 bytes on Android. So 16x is about 1k, 32x is about 2k, 64x is about 4k. When you say one page is 4096 bytes, is that something that is guaranteed to be true across platforms?",
      "parentUuid": "5503dc5d_40863e50",
      "range": {
        "startLine": 143,
        "startChar": 28,
        "endLine": 143,
        "endChar": 50
      },
      "revId": "12078a5471d43a691b22ea5b672d8d065bed366e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "986469bb_14fd3120",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 143,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-06-21T16:28:34Z",
      "side": 1,
      "message": "4k is the default on Linux, Android and Windows. See this in PoolAlloc.cpp too:\n\n    //\n    // Don\u0027t allow page sizes we know are smaller than all common\n    // OS page sizes.\n    //\n    if (mPageSize \u003c 4 * 1024)\n        mPageSize \u003d 4 * 1024;",
      "parentUuid": "19802bd8_40112fb1",
      "range": {
        "startLine": 143,
        "startChar": 28,
        "endLine": 143,
        "endChar": 50
      },
      "revId": "12078a5471d43a691b22ea5b672d8d065bed366e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "81666090_68b48210",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 143,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-06-25T15:40:56Z",
      "side": 1,
      "message": "Ah, I see. In this case it could be different. The buffer size is a driver resource rather than the ANGLE PoolAlloc page size. Technically it could be specifying a GPU memory size.",
      "parentUuid": "986469bb_14fd3120",
      "range": {
        "startLine": 143,
        "startChar": 28,
        "endLine": 143,
        "endChar": 50
      },
      "revId": "12078a5471d43a691b22ea5b672d8d065bed366e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "38614f2b_eca985c4",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 143,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-06-25T17:37:16Z",
      "side": 1,
      "message": "I\u0027m fairly certain 4k is still a better minimum. I didn\u0027t find much specific about the GPU memory page size. On windows it seems that the page size is either 4KB or 64KB: https://docs.microsoft.com/en-us/windows-hardware/drivers/display/gpu-virtual-address",
      "parentUuid": "81666090_68b48210",
      "range": {
        "startLine": 143,
        "startChar": 28,
        "endLine": 143,
        "endChar": 50
      },
      "revId": "12078a5471d43a691b22ea5b672d8d065bed366e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "54431cfd_deba6ba0",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 143,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-06-26T20:03:35Z",
      "side": 1,
      "message": "Sure, done. We can always revisit this when we look at performance more closely.\n\nFYI with GPU memory we likely wont\u0027 allocate full pages for each object. But we\u0027ll share sub-allocations from larger allocations. But that\u0027s in the future.",
      "parentUuid": "38614f2b_eca985c4",
      "range": {
        "startLine": 143,
        "startChar": 28,
        "endLine": 143,
        "endChar": 50
      },
      "revId": "12078a5471d43a691b22ea5b672d8d065bed366e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}