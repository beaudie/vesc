{
  "comments": [
    {
      "key": {
        "uuid": "1734f244_f0798634",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-08-21T16:56:25Z",
      "side": 1,
      "message": "Is there maybe a mutex missing instead? You say it\u0027s racy that mCurrentSurface is nullptr or not, is it racy in a valid way (contexts could be doing things in different orders, but otherwise thread-safe) or it\u0027s a threading bug? If the latter, this change doesn\u0027t seem right.",
      "revId": "bad3758fc6588b78833c3870fd26e896e0f271b9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "06f72901_b69430ff",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-08-21T19:09:03Z",
      "side": 1,
      "message": "I\u0027m not sure. This fixes the bug. Would you like to take ownership? I won\u0027t be able to investigate this any time soon. But I do need this to land. And it seems safe to me.\n\nAnyway please let me know what you\u0027d like to do.",
      "parentUuid": "1734f244_f0798634",
      "revId": "bad3758fc6588b78833c3870fd26e896e0f271b9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "26ed04f6_a54e2841",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-08-21T19:36:45Z",
      "side": 1,
      "message": "No, I think you know this area better than mine (I don\u0027t have any time left anyway). LGTM if LGTGeoff too.",
      "parentUuid": "06f72901_b69430ff",
      "revId": "bad3758fc6588b78833c3870fd26e896e0f271b9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "377afdc3_695b4a69",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2019-08-21T20:15:06Z",
      "side": 1,
      "message": "The assert indicates that there is a bug somewhere and makeCurrent was called twice on the context without a unMakeCurrent in between.\n  \nDoing this will call unMakeCurrent on the surface when it may already be current with a new context.\n\nWhat\u0027s needed to repro this?",
      "parentUuid": "26ed04f6_a54e2841",
      "revId": "bad3758fc6588b78833c3870fd26e896e0f271b9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7225673e_39ffd4b9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-08-21T20:42:09Z",
      "side": 1,
      "message": "Just run the multithreading tests a bunch.\n\nThe makecurrent that\u0027s being called without an unmakecurrent is the one that\u0027s called in Display::destroyContext. Because this stuff is all a complete hack anyway I think this fix is probably fine. If you want to take ownership Geoff go ahead. But I think this fix is safe.",
      "parentUuid": "377afdc3_695b4a69",
      "revId": "bad3758fc6588b78833c3870fd26e896e0f271b9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "168a7f81_b15bd4e0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2019-08-22T14:31:38Z",
      "side": 1,
      "message": "I tried running them for about 30 mins and didn\u0027t end up hitting the assert, do you remember any specific test or patch stack?\n\nThe need to set the context current is a hack but it\u0027s still expected to be correct and not hit the assert and hitting it indicates that a surface could be current on multiple contexts.  I don\u0027t mind trying to debug it but no luck yet.",
      "parentUuid": "7225673e_39ffd4b9",
      "revId": "bad3758fc6588b78833c3870fd26e896e0f271b9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ccf1ff36_d7c1a80c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-08-22T15:52:23Z",
      "side": 1,
      "message": "I was running a test that related to the EGL sync fix. I tried looking around and I couldn\u0027t find it. I expect it\u0027ll be a persistent flake that shows up if we try to enable the multithreaded tests.\n\nCan you explain how the current surface should be unset before a destroy context call? Looking at the code I couldn\u0027t figure out why the ASSERT this removes is valid.",
      "parentUuid": "168a7f81_b15bd4e0",
      "revId": "bad3758fc6588b78833c3870fd26e896e0f271b9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}