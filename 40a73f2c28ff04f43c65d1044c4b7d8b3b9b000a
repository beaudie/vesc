{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b08d5669_e8517826",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-12-09T21:00:20Z",
      "side": 1,
      "message": "PTAL",
      "revId": "40a73f2c28ff04f43c65d1044c4b7d8b3b9b000a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7e4b5ac2_05e769c0",
        "filename": "src/libANGLE/renderer/vulkan/SyncVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 66,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-12-09T21:11:07Z",
      "side": 1,
      "message": "This should go above the `getOutsideRenderPassCommandBuffer()` call. Otherwise the event is set before the current render pass.",
      "revId": "40a73f2c28ff04f43c65d1044c4b7d8b3b9b000a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b0e18572_ee75c8c2",
        "filename": "src/libANGLE/renderer/vulkan/SyncVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 66,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-12-10T00:43:15Z",
      "side": 1,
      "message": "I am not convinced why you to flush to primary commands in order to insert a fence. The spec says \"insert it into GL command stream\", and we did insert it into command stream here by calling commandBuffer-\u003esetEvent() at line 62. We must break RP to insert a fence object, in order to ensure the GL commands are properly ordered. I am wondering the real bug here is that we are not breaking the renderpass here, maybe?",
      "range": {
        "startLine": 66,
        "startChar": 25,
        "endLine": 66,
        "endChar": 54
      },
      "revId": "40a73f2c28ff04f43c65d1044c4b7d8b3b9b000a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cff581b9_67932f1a",
        "filename": "src/libANGLE/renderer/vulkan/SyncVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 66,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-12-10T03:39:08Z",
      "side": 1,
      "message": "Charlie is right that flush to primary is unnecessary, and that the application should issue a glFlush. We were wrong to assume glFlush is not necessary. GLES3.2 spec says:\n\n\u003e If the sync object being blocked upon will not be signaled in finite time (for\nexample, by an associated fence command issued previously, but not yet flushed\nto the graphics pipeline), then ClientWaitSync may hang forever.\n\nSo there is such a thing as a fence that is issued but not flushed.\n\n---\n\nThere is one exception; this follows the previous quote immediately in the spec:\n\n\u003e  To help prevent this behavior3, if ClientWaitSync is called and all of the following are true:\n\u003e \n\u003e â€¢ the SYNC_FLUSH_COMMANDS_BIT bit is set in flags,\n\u003e â€¢ sync is unsignaled when ClientWaitSync is called,\n\u003e â€¢ and the calls to ClientWaitSync and FenceSync were issued from the same context,\n\u003e \n\u003e then the GL will behave as if the equivalent of Flush were inserted immediately after the creation of sync.\n\nHowever, I think this is automatically taken care of because the flush is on the same context that recorded the setEvent(), so it should all work.",
      "parentUuid": "b0e18572_ee75c8c2",
      "range": {
        "startLine": 66,
        "startChar": 25,
        "endLine": 66,
        "endChar": 54
      },
      "revId": "40a73f2c28ff04f43c65d1044c4b7d8b3b9b000a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "37aed7e5_bafb71ea",
        "filename": "src/libANGLE/renderer/vulkan/SyncVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 66,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-12-10T23:43:00Z",
      "side": 1,
      "message": "So it sounds like I should abandon this CL and continue calling glFlush in the tests?",
      "parentUuid": "cff581b9_67932f1a",
      "range": {
        "startLine": 66,
        "startChar": 25,
        "endLine": 66,
        "endChar": 54
      },
      "revId": "40a73f2c28ff04f43c65d1044c4b7d8b3b9b000a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f4414ae9_51232cee",
        "filename": "src/libANGLE/renderer/vulkan/SyncVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 66,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-12-11T04:31:02Z",
      "side": 1,
      "message": "We still need to call ANGLE_TRY(contextVk-\u003eflushCommandsAndEndRenderPass()); before getOutsideRenderPassCommandBuffer",
      "parentUuid": "37aed7e5_bafb71ea",
      "range": {
        "startLine": 66,
        "startChar": 25,
        "endLine": 66,
        "endChar": 54
      },
      "revId": "40a73f2c28ff04f43c65d1044c4b7d8b3b9b000a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "58088a90_5a0d1a77",
        "filename": "src/libANGLE/renderer/vulkan/SyncVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 66,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-12-11T16:58:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f4414ae9_51232cee",
      "range": {
        "startLine": 66,
        "startChar": 25,
        "endLine": 66,
        "endChar": 54
      },
      "revId": "40a73f2c28ff04f43c65d1044c4b7d8b3b9b000a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "901d3d41_286d65c6",
        "filename": "src/libANGLE/renderer/vulkan/SyncVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 66,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-12-11T17:48:08Z",
      "side": 1,
      "message": "@Shabi, why you think still need flushCommandsAndEndRenderPass()? I think based on the above discussion, all you need here is endRenderPass\" part, not flush part?",
      "parentUuid": "58088a90_5a0d1a77",
      "range": {
        "startLine": 66,
        "startChar": 25,
        "endLine": 66,
        "endChar": 54
      },
      "revId": "40a73f2c28ff04f43c65d1044c4b7d8b3b9b000a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "43487430_38fd4cde",
        "filename": "src/libANGLE/renderer/vulkan/SyncVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 66,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-12-11T18:41:48Z",
      "side": 1,
      "message": "There\u0027s no such thing as endRenderPass, only flushCommandsAndEndRenderPass() ðŸ˜Š",
      "parentUuid": "901d3d41_286d65c6",
      "range": {
        "startLine": 66,
        "startChar": 25,
        "endLine": 66,
        "endChar": 54
      },
      "revId": "40a73f2c28ff04f43c65d1044c4b7d8b3b9b000a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4e5b1d08_4d2e91f2",
        "filename": "src/libANGLE/renderer/vulkan/SyncVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 66,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-12-11T18:52:50Z",
      "side": 1,
      "message": "Right, I was confused with all the APIs that has \"flush\" in it. This flushCommandsAndEndRenderPass is only flushing to primrary command buffer, not submitting to GPU. So the latest patchset looks correct to me.",
      "parentUuid": "43487430_38fd4cde",
      "range": {
        "startLine": 66,
        "startChar": 25,
        "endLine": 66,
        "endChar": 54
      },
      "revId": "40a73f2c28ff04f43c65d1044c4b7d8b3b9b000a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}