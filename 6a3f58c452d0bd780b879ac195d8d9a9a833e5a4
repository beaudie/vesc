{
  "comments": [
    {
      "key": {
        "uuid": "1bee6580_22067bb0",
        "filename": "DEPS",
        "patchSetId": 11
      },
      "lineNbr": 414,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-01-16T02:09:19Z",
      "side": 1,
      "message": "Is Mac unsupported or does it not need these binaries?\n\nIf so, it may be worth mentioning in InternalCaptureTests.md.",
      "revId": "6a3f58c452d0bd780b879ac195d8d9a9a833e5a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c651d36d_8157f11e",
        "filename": "DEPS",
        "patchSetId": 11
      },
      "lineNbr": 414,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2020-01-16T22:15:53Z",
      "side": 1,
      "message": "In theory, it should work on all platforms.  Could probably gate it to the ones we care about (Windows/Linux/Android).  I\u0027ve never actually run ANGLE on a Mac.",
      "parentUuid": "1bee6580_22067bb0",
      "revId": "6a3f58c452d0bd780b879ac195d8d9a9a833e5a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a8e6e44d_5a55f17c",
        "filename": "DEPS",
        "patchSetId": 11
      },
      "lineNbr": 414,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2020-01-17T22:05:46Z",
      "side": 1,
      "message": "For the moment, we\u0027re going to allow the tests to run everywhere, as all perf tests do.  We\u0027ll fine tune if there are problems.",
      "parentUuid": "c651d36d_8157f11e",
      "revId": "6a3f58c452d0bd780b879ac195d8d9a9a833e5a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1226b76d_6b06d3ba",
        "filename": "DEPS",
        "patchSetId": 11
      },
      "lineNbr": 417,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-01-17T18:15:50Z",
      "side": 1,
      "message": "nit: maybe restricted_captures? since we\u0027ll likely be sharing with partners. (note that the only other \"internal\" repo, the GLES 1 CTS, is also something we could share)",
      "range": {
        "startLine": 417,
        "startChar": 13,
        "endLine": 417,
        "endChar": 30
      },
      "revId": "6a3f58c452d0bd780b879ac195d8d9a9a833e5a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "97c56c09_ddbadb9a",
        "filename": "DEPS",
        "patchSetId": 11
      },
      "lineNbr": 417,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2020-01-17T22:05:46Z",
      "side": 1,
      "message": "Sure, although I don\u0027t have any evidence that we\u0027ll be able to add non-googlers to these buckets.  I can\u0027t even access them from home when logged in.  I\u0027ll rename in the hopes we can get it to work.",
      "parentUuid": "1226b76d_6b06d3ba",
      "range": {
        "startLine": 417,
        "startChar": 13,
        "endLine": 417,
        "endChar": 30
      },
      "revId": "6a3f58c452d0bd780b879ac195d8d9a9a833e5a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "03646cd2_4c82216d",
        "filename": "DEPS",
        "patchSetId": 11
      },
      "lineNbr": 417,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-01-20T14:25:48Z",
      "side": 1,
      "message": "I was able to run the download hook from home. We will for sure need different ACLs for read and write. Do you know how that\u0027s set up right now? Do we need to make another ACL for write or read permissions?",
      "parentUuid": "97c56c09_ddbadb9a",
      "range": {
        "startLine": 417,
        "startChar": 13,
        "endLine": 417,
        "endChar": 30
      },
      "revId": "6a3f58c452d0bd780b879ac195d8d9a9a833e5a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a7169890_52f10093",
        "filename": "src/tests/BUILD.gn",
        "patchSetId": 11
      },
      "lineNbr": 237,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-01-17T18:15:50Z",
      "side": 1,
      "message": "this copy shouldn\u0027t be necessary. we should be able to add internal_captures directly to data_deps. some paths might be different on Android. they will be consistent.",
      "range": {
        "startLine": 229,
        "startChar": 0,
        "endLine": 237,
        "endChar": 5
      },
      "revId": "6a3f58c452d0bd780b879ac195d8d9a9a833e5a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "91c4d30f_988de8eb",
        "filename": "src/tests/BUILD.gn",
        "patchSetId": 11
      },
      "lineNbr": 237,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2020-01-17T22:05:46Z",
      "side": 1,
      "message": "I wasn\u0027t able to add sources or a directory as a data_dep, it had to be an entity like this copy().  It would be different if there was an independent GN unit for building internal_captures, but this solution makes it a direct part of perf_tests.  That being said, I\u0027m not a GN expert, and I\u0027ll gladly take a more elegant solution.",
      "parentUuid": "a7169890_52f10093",
      "range": {
        "startLine": 229,
        "startChar": 0,
        "endLine": 237,
        "endChar": 5
      },
      "revId": "6a3f58c452d0bd780b879ac195d8d9a9a833e5a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e5cb3ad5_c7f44dd1",
        "filename": "src/tests/BUILD.gn",
        "patchSetId": 11
      },
      "lineNbr": 237,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-01-20T14:25:48Z",
      "side": 1,
      "message": "we can do\n\n data \u003d [\"${angle_root}/src/tests/perf_tests/internal_captures\"]\n\nor\n\n data \u003d [\"${angle_root}/src/tests/perf_tests/internal_captures/blah.angledata\"]\n\nAlthough it would be better if we have a subdirectory for trace data like\n\n data \u003d [\"${angle_root}/src/tests/perf_tests/internal_captures/data\"]",
      "parentUuid": "91c4d30f_988de8eb",
      "range": {
        "startLine": 229,
        "startChar": 0,
        "endLine": 237,
        "endChar": 5
      },
      "revId": "6a3f58c452d0bd780b879ac195d8d9a9a833e5a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "49f2d18d_5c06c747",
        "filename": "src/tests/perf_tests/CaptureReplayPerf.cpp",
        "patchSetId": 11
      },
      "lineNbr": 37,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-01-16T02:09:19Z",
      "side": 1,
      "message": "Is this the resolution that the replay is being rendered with?   Assuming so, why is it so small as compared to something like 1920x1080?",
      "revId": "6a3f58c452d0bd780b879ac195d8d9a9a833e5a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5fdf7da3_e1f97eb1",
        "filename": "src/tests/perf_tests/CaptureReplayPerf.cpp",
        "patchSetId": 11
      },
      "lineNbr": 37,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2020-01-16T22:15:53Z",
      "side": 1,
      "message": "That\u0027s the resolution the benchmark was running when the capture was taken, which I think we\u0027ve all been defaulting to.  Interesting question though:  What resolution do we want to run at, and does it need to be the same on all platforms?  It is tempting to try recording at the native resolution of Android, but it differs between devices.  I\u0027m going to try recording at 1080p, see how that looks.  I also need to figure out a way to set the rotation for Android in the perf test harness.",
      "parentUuid": "49f2d18d_5c06c747",
      "revId": "6a3f58c452d0bd780b879ac195d8d9a9a833e5a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e1bef264_f804843a",
        "filename": "src/tests/perf_tests/CaptureReplayPerf.cpp",
        "patchSetId": 11
      },
      "lineNbr": 37,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-01-17T03:23:30Z",
      "side": 1,
      "message": "My vote would be for 1080p everywhere, since that\u0027s likely at least the base resolution for the majority of devices nowadays and should give more realistic comparisons between code changes in terms of CPU, GPU, memory, etc.",
      "parentUuid": "5fdf7da3_e1f97eb1",
      "revId": "6a3f58c452d0bd780b879ac195d8d9a9a833e5a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f46d2228_0c0cff58",
        "filename": "src/tests/perf_tests/CaptureReplayPerf.cpp",
        "patchSetId": 11
      },
      "lineNbr": 37,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-01-17T18:15:50Z",
      "side": 1,
      "message": "Probably should be something that\u0027s captured in the replay. I\u0027m fine with specializing it here to start.",
      "parentUuid": "e1bef264_f804843a",
      "revId": "6a3f58c452d0bd780b879ac195d8d9a9a833e5a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "31e325fc_2134efa7",
        "filename": "src/tests/perf_tests/CaptureReplayPerf.cpp",
        "patchSetId": 11
      },
      "lineNbr": 37,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2020-01-17T22:05:46Z",
      "side": 1,
      "message": "I figure it would be handled by EGL capture at some point.",
      "parentUuid": "f46d2228_0c0cff58",
      "revId": "6a3f58c452d0bd780b879ac195d8d9a9a833e5a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0cc39c04_79a14939",
        "filename": "src/tests/perf_tests/CaptureReplayPerf.cpp",
        "patchSetId": 11
      },
      "lineNbr": 65,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-01-16T02:09:19Z",
      "side": 1,
      "message": "This CL is all very specific to T-Rex.   I suggest removing this member for now, and this can be refactored a bit when the next benchmark is added/enabled and we know the best way to support multiple benchmarks (e.g., a single class that supports everything vs sub-classing).",
      "revId": "6a3f58c452d0bd780b879ac195d8d9a9a833e5a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e8b33d4_4b54b099",
        "filename": "src/tests/perf_tests/CaptureReplayPerf.cpp",
        "patchSetId": 11
      },
      "lineNbr": 65,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2020-01-16T22:15:53Z",
      "side": 1,
      "message": "Yep, wrote it up to support adding them easily, following patterns from other perf tests.  The work is already done to have it enabled, so I\u0027d rather not undo the work, I don\u0027t think it is too confusing.  Ideally we\u0027d follow these frames up with Manhattan as soon as the Capture/Replay can handle it.",
      "parentUuid": "0cc39c04_79a14939",
      "revId": "6a3f58c452d0bd780b879ac195d8d9a9a833e5a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0111e616_67d762ef",
        "filename": "src/tests/perf_tests/CaptureReplayPerf.cpp",
        "patchSetId": 11
      },
      "lineNbr": 65,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-01-17T18:15:50Z",
      "side": 1,
      "message": "+1 to flattening out the TRex understanding as proposed below.",
      "parentUuid": "9e8b33d4_4b54b099",
      "revId": "6a3f58c452d0bd780b879ac195d8d9a9a833e5a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "afddd811_af7bb70c",
        "filename": "src/tests/perf_tests/CaptureReplayPerf.cpp",
        "patchSetId": 11
      },
      "lineNbr": 133,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-01-16T02:09:19Z",
      "side": 1,
      "message": "Since \u0027frame\u0027 is unsigned, it\u0027s probably worth adding an assert that endFrame \u003e startFrame to catch typos in the future and prevent staring at a screen waiting for an (effectively) infinite test to end.",
      "revId": "6a3f58c452d0bd780b879ac195d8d9a9a833e5a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "863598f2_b2394acb",
        "filename": "src/tests/perf_tests/CaptureReplayPerf.cpp",
        "patchSetId": 11
      },
      "lineNbr": 133,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2020-01-16T22:15:53Z",
      "side": 1,
      "message": "Good call, I\u0027ll add the assert to initializeBenchmark.",
      "parentUuid": "afddd811_af7bb70c",
      "revId": "6a3f58c452d0bd780b879ac195d8d9a9a833e5a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "299b5ad1_f41aa9b6",
        "filename": "src/tests/perf_tests/CaptureReplayPerf.cpp",
        "patchSetId": 11
      },
      "lineNbr": 152,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-01-17T18:15:50Z",
      "side": 1,
      "message": "instead of using the start frame, can we use an enum? e.g.\n\nenum class CapturePerfTestID {\n  TRex200,\n  TRex800,\n  TRex900,\n  TRex1300,\n};\n\nin initializeBenchmark:\n\nswitch (testID)\n{\n    case CapturePerfTestID::TRex200:\n       mStartFrame \u003d trex_200_210::kReplayFrameStart;\n       mEndFrame \u003d trex_200_210::kReplayFrameStart;\n       mReplayFunc \u003d trex_200_210::ReplayContext1Frame;\n\n   ... and so on ...\n};\n\nin drawBenchmark:\n\nfor (uint32_t frame \u003d mStartFrame; frame \u003c mEndFrame; ++frame) {\n   mReplayFunc(frame);\n   swap();\n}\n\nIt\u0027s good to run the whole benchmark in \"drawBenchmark\" as that will be the way to calibrate and run the benchmark with the lowest variance and highest consistency. I\u0027d be curious as to how long an iteration takes.\n\nAlso why it\u0027s good to capture small ranges of frames (say 4-5. 10 might be okay.)",
      "range": {
        "startLine": 136,
        "startChar": 0,
        "endLine": 152,
        "endChar": 20
      },
      "revId": "6a3f58c452d0bd780b879ac195d8d9a9a833e5a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ee49e3da_2c9256fe",
        "filename": "src/tests/perf_tests/CaptureReplayPerf.cpp",
        "patchSetId": 11
      },
      "lineNbr": 152,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2020-01-17T22:05:46Z",
      "side": 1,
      "message": "Yeah, an enum sounds good.  When you say \"run the whole benchmark\", what do you mean?  Just add SetupContext1Replay to the loop?  I think that\u0027s the only thing left out.",
      "parentUuid": "299b5ad1_f41aa9b6",
      "range": {
        "startLine": 136,
        "startChar": 0,
        "endLine": 152,
        "endChar": 20
      },
      "revId": "6a3f58c452d0bd780b879ac195d8d9a9a833e5a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "faf2c2d8_8862e209",
        "filename": "src/tests/perf_tests/CaptureReplayPerf.cpp",
        "patchSetId": 11
      },
      "lineNbr": 152,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-01-20T14:25:48Z",
      "side": 1,
      "message": "I meant run all the frames of the capture. So 1 \"iteration\" is one run of the whole capture.",
      "parentUuid": "ee49e3da_2c9256fe",
      "range": {
        "startLine": 136,
        "startChar": 0,
        "endLine": 152,
        "endChar": 20
      },
      "revId": "6a3f58c452d0bd780b879ac195d8d9a9a833e5a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "44e441ba_fbfae6b7",
        "filename": "src/tests/perf_tests/CaptureReplayPerf.cpp",
        "patchSetId": 11
      },
      "lineNbr": 169,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-01-17T18:15:50Z",
      "side": 1,
      "message": "We can omit these given above comments.",
      "range": {
        "startLine": 167,
        "startChar": 0,
        "endLine": 169,
        "endChar": 28
      },
      "revId": "6a3f58c452d0bd780b879ac195d8d9a9a833e5a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f034129d_756c1803",
        "filename": "src/tests/perf_tests/internal_captures/InternalCaptureTests.md",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-01-17T18:15:50Z",
      "side": 1,
      "message": "Can you please also document how to add new trace tests and include an upload wrapper script if necessary?",
      "revId": "6a3f58c452d0bd780b879ac195d8d9a9a833e5a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "acc7f4b1_b19dd86f",
        "filename": "src/tests/perf_tests/internal_captures/InternalCaptureTests.md",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2020-01-17T22:05:46Z",
      "side": 1,
      "message": "I\u0027ve added documentation for how the current traces were generated and uploaded.  I\u0027ll expand that to include what needs to happen for new captures.",
      "parentUuid": "f034129d_756c1803",
      "revId": "6a3f58c452d0bd780b879ac195d8d9a9a833e5a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e925fa15_3de8fd64",
        "filename": "src/tests/perf_tests/internal_captures/InternalCaptureTests.md",
        "patchSetId": 11
      },
      "lineNbr": 20,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-01-17T18:15:50Z",
      "side": 1,
      "message": "nit: runhooks",
      "range": {
        "startLine": 20,
        "startChar": 8,
        "endLine": 20,
        "endChar": 12
      },
      "revId": "6a3f58c452d0bd780b879ac195d8d9a9a833e5a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "179c7ae0_5b7cba4d",
        "filename": "src/tests/perf_tests/internal_captures/InternalCaptureTests.md",
        "patchSetId": 11
      },
      "lineNbr": 20,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2020-01-17T22:05:46Z",
      "side": 1,
      "message": "TIL",
      "parentUuid": "e925fa15_3de8fd64",
      "range": {
        "startLine": 20,
        "startChar": 8,
        "endLine": 20,
        "endChar": 12
      },
      "revId": "6a3f58c452d0bd780b879ac195d8d9a9a833e5a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9cbcc1c3_5eb07c9a",
        "filename": "src/tests/perf_tests/internal_captures/InternalCaptureTests.md",
        "patchSetId": 11
      },
      "lineNbr": 32,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-01-17T18:15:50Z",
      "side": 1,
      "message": "nit: can we simply call these CapturePerfTest or CaptureBenchmark? Alternately we could use the term trace: TracePerfTest or TraceBenchmark.",
      "range": {
        "startLine": 32,
        "startChar": 43,
        "endLine": 32,
        "endChar": 69
      },
      "revId": "6a3f58c452d0bd780b879ac195d8d9a9a833e5a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7a7eab61_0ff75bc2",
        "filename": "src/tests/perf_tests/internal_captures/InternalCaptureTests.md",
        "patchSetId": 11
      },
      "lineNbr": 32,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2020-01-17T22:05:46Z",
      "side": 1,
      "message": "Sure, I\u0027ll downsize the name a bit.  \"trace\" is the more traditional term for this, I\u0027ve been using Capture/Replay as that seemed your preference.",
      "parentUuid": "9cbcc1c3_5eb07c9a",
      "range": {
        "startLine": 32,
        "startChar": 43,
        "endLine": 32,
        "endChar": 69
      },
      "revId": "6a3f58c452d0bd780b879ac195d8d9a9a833e5a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6d48eafc_5dfc7bca",
        "filename": "src/tests/perf_tests/internal_captures/InternalCaptureTests.md",
        "patchSetId": 11
      },
      "lineNbr": 32,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-01-20T14:25:48Z",
      "side": 1,
      "message": "I should have used tracing. Maybe it\u0027s not too late to switch.",
      "parentUuid": "7a7eab61_0ff75bc2",
      "range": {
        "startLine": 32,
        "startChar": 43,
        "endLine": 32,
        "endChar": 69
      },
      "revId": "6a3f58c452d0bd780b879ac195d8d9a9a833e5a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "53d1ad8b_e0700b6d",
        "filename": "src/tests/perf_tests/internal_captures/angle_capture_replay_tests.gni",
        "patchSetId": 11
      },
      "lineNbr": 3,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-01-17T18:15:50Z",
      "side": 1,
      "message": "can you add a top-level comment?",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 3,
        "endChar": 28
      },
      "revId": "6a3f58c452d0bd780b879ac195d8d9a9a833e5a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ee1e4667_54bcbe3c",
        "filename": "src/tests/perf_tests/internal_captures/angle_capture_replay_tests.gni",
        "patchSetId": 11
      },
      "lineNbr": 3,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2020-01-17T22:05:46Z",
      "side": 1,
      "message": "Will do.",
      "parentUuid": "53d1ad8b_e0700b6d",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 3,
        "endChar": 28
      },
      "revId": "6a3f58c452d0bd780b879ac195d8d9a9a833e5a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "67e0008d_b119ef7e",
        "filename": "src/tests/perf_tests/internal_captures/angle_capture_replay_tests.gni",
        "patchSetId": 11
      },
      "lineNbr": 13,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-01-17T18:15:50Z",
      "side": 1,
      "message": "can you instead keep a list of perf tests here?",
      "range": {
        "startLine": 6,
        "startChar": 0,
        "endLine": 13,
        "endChar": 0
      },
      "revId": "6a3f58c452d0bd780b879ac195d8d9a9a833e5a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "70f687da_b20dce58",
        "filename": "src/tests/perf_tests/internal_captures/angle_capture_replay_tests.gni",
        "patchSetId": 11
      },
      "lineNbr": 13,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2020-01-17T22:05:46Z",
      "side": 1,
      "message": "We do have to iterate through the frame ranges.  I figured we would just have a block of ranges per test.  Maybe this can be a multi-dimensional, listing out the test name and frame ranges.",
      "parentUuid": "67e0008d_b119ef7e",
      "range": {
        "startLine": 6,
        "startChar": 0,
        "endLine": 13,
        "endChar": 0
      },
      "revId": "6a3f58c452d0bd780b879ac195d8d9a9a833e5a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cca56faf_0f9d66c0",
        "filename": "src/tests/perf_tests/internal_captures/angle_capture_replay_tests.gni",
        "patchSetId": 11
      },
      "lineNbr": 13,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-01-20T14:25:48Z",
      "side": 1,
      "message": "Sorry, to clarify: each capture is a separate perf test. So instead of keeping \n\ntrex \u003d [200, 800, 900] you keep _tests \u003d [ trex_200, trex_800, trex_900 ]\n\nI don\u0027t see anywhere where you need to know it\u0027s specifically trex. The places you explicitly spell trex I\u0027m sure we can fix.",
      "parentUuid": "70f687da_b20dce58",
      "range": {
        "startLine": 6,
        "startChar": 0,
        "endLine": 13,
        "endChar": 0
      },
      "revId": "6a3f58c452d0bd780b879ac195d8d9a9a833e5a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2323be70_b9ece3e9",
        "filename": "src/tests/perf_tests/internal_captures/angle_capture_replay_tests.gni",
        "patchSetId": 11
      },
      "lineNbr": 40,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-01-17T18:15:50Z",
      "side": 1,
      "message": "could you separate out the TRex logic from this? and make it handle perf tests specifically instead of \"trex tests\".\n\nalso one thing we should consider prioritizing is merging the .angledata files into one file that may be internally gzipped. that will make the setup for this simpler.\n\nanother thing I can possibly help with is making this an angle_source_set template instead of a weird variable definition.",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 40,
        "endChar": 1
      },
      "revId": "6a3f58c452d0bd780b879ac195d8d9a9a833e5a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a1b1e11_d23a624d",
        "filename": "src/tests/perf_tests/internal_captures/angle_capture_replay_tests.gni",
        "patchSetId": 11
      },
      "lineNbr": 40,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2020-01-17T22:05:46Z",
      "side": 1,
      "message": "I can take a pass at making this more generic, although I figured we would just duplicate this loop to keep it simple.  The GN stuff takes more time than anything else with this project.",
      "parentUuid": "2323be70_b9ece3e9",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 40,
        "endChar": 1
      },
      "revId": "6a3f58c452d0bd780b879ac195d8d9a9a833e5a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "13d90e9f_75e6cc9a",
        "filename": "src/tests/perf_tests/internal_captures/angle_capture_replay_tests.gni",
        "patchSetId": 11
      },
      "lineNbr": 40,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-01-20T14:25:48Z",
      "side": 1,
      "message": "Understood. If you need help ping me. I\u0027m pretty good with GN.",
      "parentUuid": "4a1b1e11_d23a624d",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 40,
        "endChar": 1
      },
      "revId": "6a3f58c452d0bd780b879ac195d8d9a9a833e5a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}