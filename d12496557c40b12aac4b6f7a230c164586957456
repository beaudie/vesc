{
  "comments": [
    {
      "key": {
        "uuid": "ee0cb6ce_9259d8f2",
        "filename": "src/compiler/translator/OutputHLSL.cpp",
        "patchSetId": 4
      },
      "lineNbr": 170,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2017-08-31T13:42:40Z",
      "side": 1,
      "message": "Constant buffer slots are a limited resource, it\u0027s not that great if we\u0027ll have to leave less of them for the uniform buffers of the application. Did you look into using the existing driver constant block as an alternative?",
      "revId": "d12496557c40b12aac4b6f7a230c164586957456",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8fc8e67f_6ec5eaca",
        "filename": "src/compiler/translator/OutputHLSL.cpp",
        "patchSetId": 4
      },
      "lineNbr": 170,
      "author": {
        "id": 1160819
      },
      "writtenOn": "2017-08-31T15:43:42Z",
      "side": 1,
      "message": "Yes, I agree that there is a limited number of cbuffers available. Maybe I can try putting into the already available driver constant buffer. My concern was that the updates would be with different frequency requiring the multi-view state change less frequent.\nCan the Google team give an advice?",
      "parentUuid": "ee0cb6ce_9259d8f2",
      "revId": "d12496557c40b12aac4b6f7a230c164586957456",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "374f11fd_2b08fd91",
        "filename": "src/compiler/translator/OutputHLSL.cpp",
        "patchSetId": 4
      },
      "lineNbr": 170,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-08-31T19:54:35Z",
      "side": 1,
      "message": "Yes, put them into a driver block. How often do you expect to be updating these constants? In any case I don\u0027t think it\u0027ll be a big deal - you\u0027ll end up updating one 100 byte block instead of a 16-byte block or something in the worst case.",
      "parentUuid": "8fc8e67f_6ec5eaca",
      "revId": "d12496557c40b12aac4b6f7a230c164586957456",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a259291_182a6dc0",
        "filename": "src/compiler/translator/OutputHLSL.cpp",
        "patchSetId": 4
      },
      "lineNbr": 170,
      "author": {
        "id": 1160819
      },
      "writtenOn": "2017-09-01T11:50:16Z",
      "side": 1,
      "message": "There was some available space to store the information for the path to take, so it ends up being the same size. Thinking about the updates now, the ones based on the layout will be very infrequent.",
      "parentUuid": "374f11fd_2b08fd91",
      "revId": "d12496557c40b12aac4b6f7a230c164586957456",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1d9ee5b7_c61a1c39",
        "filename": "src/libANGLE/renderer/d3d/d3d11/Renderer11.h",
        "patchSetId": 4
      },
      "lineNbr": 619,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-08-31T19:54:35Z",
      "side": 1,
      "message": "this should likely just be in StateManager11... seems pretty stateful.",
      "range": {
        "startLine": 617,
        "startChar": 0,
        "endLine": 619,
        "endChar": 30
      },
      "revId": "d12496557c40b12aac4b6f7a230c164586957456",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "effb5220_a309ccba",
        "filename": "src/libANGLE/renderer/d3d/d3d11/Renderer11.h",
        "patchSetId": 4
      },
      "lineNbr": 619,
      "author": {
        "id": 1160819
      },
      "writtenOn": "2017-09-01T11:50:16Z",
      "side": 1,
      "message": "After refactoring these naturally disappeared.",
      "parentUuid": "1d9ee5b7_c61a1c39",
      "range": {
        "startLine": 617,
        "startChar": 0,
        "endLine": 619,
        "endChar": 30
      },
      "revId": "d12496557c40b12aac4b6f7a230c164586957456",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ab561540_6e5bc85d",
        "filename": "src/libANGLE/renderer/d3d/d3d11/StateManager11.cpp",
        "patchSetId": 4
      },
      "lineNbr": 2124,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2017-08-31T13:42:40Z",
      "side": 1,
      "message": "Shouldn\u0027t this set the base layer index, instead of always using zero? We should also make sure that there are tests for base layer index !\u003d 0.",
      "revId": "d12496557c40b12aac4b6f7a230c164586957456",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6df5008c_bb46fab8",
        "filename": "src/libANGLE/renderer/d3d/d3d11/StateManager11.cpp",
        "patchSetId": 4
      },
      "lineNbr": 2124,
      "author": {
        "id": 1160819
      },
      "writtenOn": "2017-08-31T15:43:42Z",
      "side": 1,
      "message": "The base view index is applied whenever the RTV is created. I refactored the code so that a boolean is passed.",
      "parentUuid": "ab561540_6e5bc85d",
      "revId": "d12496557c40b12aac4b6f7a230c164586957456",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}