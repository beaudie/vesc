{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b6fb27d8_fcc6e81c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2021-05-18T18:05:59Z",
      "side": 1,
      "message": "+2-ing so that you can land the dependent change, but I think the overlap condition should be enhanced in a follow up.",
      "revId": "ba2b178d385e95e449e198b94143ec8c9a0de9c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ccf92133_20c738c0",
        "filename": "src/tests/test_expectations/GPUTestExpectationsParser.cpp",
        "patchSetId": 2
      },
      "lineNbr": 264,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2021-05-18T18:05:59Z",
      "side": 1,
      "message": "This is not entirely correct.\nWIN NVIDIA\noverlaps with\nNVIDIA VULKAN\n\nSwiftShader is also a special case, since VULKAN expectations apply to SwiftShader, but not the opposite.",
      "range": {
        "startLine": 264,
        "startChar": 0,
        "endLine": 264,
        "endChar": 93
      },
      "revId": "ba2b178d385e95e449e198b94143ec8c9a0de9c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ce5c17c_ed50a619",
        "filename": "src/tests/test_expectations/GPUTestExpectationsParser.cpp",
        "patchSetId": 2
      },
      "lineNbr": 264,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-05-18T18:07:42Z",
      "side": 1,
      "message": "These do not overlap IIUC - overlap should be completely contained in one or the other. like WIN INTEL does not overlap with WIN NVIDIA.",
      "parentUuid": "ccf92133_20c738c0",
      "range": {
        "startLine": 264,
        "startChar": 0,
        "endLine": 264,
        "endChar": 93
      },
      "revId": "ba2b178d385e95e449e198b94143ec8c9a0de9c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e4353725_8566acb6",
        "filename": "src/tests/test_expectations/GPUTestExpectationsParser.cpp",
        "patchSetId": 2
      },
      "lineNbr": 264,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2021-05-18T18:10:54Z",
      "side": 1,
      "message": "I guess if the only expectation type is SKIP, you are right.\nIf you can have different expectations, like FAIL or FLAKY, then it would matter.\nE.g. SKIP for WIN NVIDIA and FLAKY for NVIDIA VULKAN.\nDo you run the test on WIN NVIDIA VULKAN or not?",
      "parentUuid": "8ce5c17c_ed50a619",
      "range": {
        "startLine": 264,
        "startChar": 0,
        "endLine": 264,
        "endChar": 93
      },
      "revId": "ba2b178d385e95e449e198b94143ec8c9a0de9c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "73e253cb_84d5074e",
        "filename": "src/tests/test_expectations/GPUTestExpectationsParser.cpp",
        "patchSetId": 2
      },
      "lineNbr": 264,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-05-18T18:12:36Z",
      "side": 1,
      "message": "Yeah I don\u0027t recall the specifics, Jonah might remember. I think there were number of edge cases and we ended up using a simple policy and just doing a best effort thing. Like the first one in the list takes priority.\n\nJust to confirm - you\u0027re OK with landing as-is?",
      "parentUuid": "e4353725_8566acb6",
      "range": {
        "startLine": 264,
        "startChar": 0,
        "endLine": 264,
        "endChar": 93
      },
      "revId": "ba2b178d385e95e449e198b94143ec8c9a0de9c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1e72fae3_ef96e4fc",
        "filename": "src/tests/test_expectations/GPUTestExpectationsParser.cpp",
        "patchSetId": 2
      },
      "lineNbr": 264,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2021-05-18T18:13:44Z",
      "side": 1,
      "message": "Actually, if the only expectation type is SKIP, there is no need to check for overlaps.\nIf the test matches any condition, it is skipped, that\u0027s all.\n\nYeah, I\u0027m OK landing. We can enhance in the future.",
      "parentUuid": "e4353725_8566acb6",
      "range": {
        "startLine": 264,
        "startChar": 0,
        "endLine": 264,
        "endChar": 93
      },
      "revId": "ba2b178d385e95e449e198b94143ec8c9a0de9c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cc4b91e2_0fd1ed40",
        "filename": "src/tests/test_expectations/GPUTestExpectationsParser.cpp",
        "patchSetId": 2
      },
      "lineNbr": 264,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-05-18T18:24:08Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "1e72fae3_ef96e4fc",
      "range": {
        "startLine": 264,
        "startChar": 0,
        "endLine": 264,
        "endChar": 93
      },
      "revId": "ba2b178d385e95e449e198b94143ec8c9a0de9c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}