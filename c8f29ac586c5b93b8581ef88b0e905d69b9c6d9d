{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2f6ac53d_4c0b29b9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2023-11-22T19:55:47Z",
      "side": 1,
      "message": "Alright, I iterated on this further.\n\nThe EGL syncs can now be backed by regular events or shared events based on the creation parameters. I also have a Chrome patch to always use EGL syncs so it takes advantage of this.\n\nAlso removed the sleep loop. Uses a condition variable to block and wait for the queue serials to be updated.",
      "revId": "c8f29ac586c5b93b8581ef88b0e905d69b9c6d9d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1b15f6ac_9e69dd64",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 3094258
      },
      "writtenOn": "2023-11-25T01:06:45Z",
      "side": 1,
      "message": "ynovikov@chromium.org",
      "revId": "c8f29ac586c5b93b8581ef88b0e905d69b9c6d9d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9341e9e2_bc726106",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 3094258
      },
      "writtenOn": "2023-11-25T01:08:42Z",
      "side": 1,
      "message": "1503951",
      "revId": "c8f29ac586c5b93b8581ef88b0e905d69b9c6d9d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f54997a4_b169ad58",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1543187
      },
      "writtenOn": "2023-11-30T17:42:31Z",
      "side": 1,
      "message": "lgtm with few nits.",
      "revId": "c8f29ac586c5b93b8581ef88b0e905d69b9c6d9d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1b2d4c1c_29afa5bc",
        "filename": "src/libANGLE/renderer/metal/ContextMtl.h",
        "patchSetId": 10
      },
      "lineNbr": 322,
      "author": {
        "id": 1543187
      },
      "writtenOn": "2023-11-30T17:42:31Z",
      "side": 1,
      "message": "maybe return the current command buffer\u0027s queue serial directly from this method. So that EventSyncImpl doesn\u0027t need to call `getCurrentEncoderSerial` separately.",
      "range": {
        "startLine": 322,
        "startChar": 9,
        "endLine": 322,
        "endChar": 25
      },
      "revId": "c8f29ac586c5b93b8581ef88b0e905d69b9c6d9d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e640ea6a_d3b16d1d",
        "filename": "src/libANGLE/renderer/metal/mtl_command_buffer.h",
        "patchSetId": 10
      },
      "lineNbr": 222,
      "author": {
        "id": 1543187
      },
      "writtenOn": "2023-11-30T17:42:31Z",
      "side": 1,
      "message": "nit: Uppercase `PendingEvent`?",
      "range": {
        "startLine": 222,
        "startChar": 11,
        "endLine": 222,
        "endChar": 23
      },
      "revId": "c8f29ac586c5b93b8581ef88b0e905d69b9c6d9d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}