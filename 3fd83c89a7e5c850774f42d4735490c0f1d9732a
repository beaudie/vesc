{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "177090e4_355393a2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-01-09T14:30:34Z",
      "side": 1,
      "message": "Please also remove the test suppression with this CL",
      "revId": "3fd83c89a7e5c850774f42d4735490c0f1d9732a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "23788c3b_91e99998",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2021-01-09T19:33:56Z",
      "side": 1,
      "message": "Thanks for taking care of this, Ian!\nWould you be able to take care of upstreaming this fix as well?",
      "revId": "3fd83c89a7e5c850774f42d4735490c0f1d9732a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5fd2f358_9a13c5cf",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-01-09T19:36:01Z",
      "side": 1,
      "message": "Also I could help offload this to other folks who deal with CTS if you like.",
      "parentUuid": "23788c3b_91e99998",
      "revId": "3fd83c89a7e5c850774f42d4735490c0f1d9732a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9b8243ad_5eea3d99",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2021-01-11T18:01:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "177090e4_355393a2",
      "revId": "3fd83c89a7e5c850774f42d4735490c0f1d9732a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "709ed7c0_4ced4363",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2021-01-11T18:01:02Z",
      "side": 1,
      "message": "Jamie, if you\u0027re still willing, I\u0027ll take you up on the offer to offload this.  Otherwise, I\u0027ll get to this, but probably not quickly, as I\u0027d like to make some good progress on ANGLE-AGI testing this week.",
      "parentUuid": "5fd2f358_9a13c5cf",
      "revId": "3fd83c89a7e5c850774f42d4735490c0f1d9732a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5481c672_0c62ab32",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-01-11T18:34:24Z",
      "side": 1,
      "message": "Sure, can you please send me the patch diff or a description of what you changed?",
      "parentUuid": "709ed7c0_4ced4363",
      "revId": "3fd83c89a7e5c850774f42d4735490c0f1d9732a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fc827714_8462946c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2021-01-11T19:37:54Z",
      "side": 1,
      "message": "Sure.\n\nHere\u0027s an attempt at a high-level description of the problem: the size of the exponent and mantissa in a GLhalf is smaller than a GLfloat.  This means that small numbers (that approach 0.0) will become 0.0.  This can result in doing a right-shift by 32 or more bits, which is undefined behavior.  It works with some older compilers/CPUs, but not with newer clang.\n\nHere\u0027s a diff ...\n\nIn the FloatToHalf(float f) function, I changed the following else-if case (leaving a number of unchanged lines for more context) from the following:\n\n\u003c     /* check if exponent is \u003c\u003d -15 */\n\u003c     else if (exp \u003c\u003d HALF_FLOAT_MIN_BIASED_EXP_AS_SINGLE_FP_EXP)\n\u003c     {\n\u003c         /* store a denorm half-float value or zero */\n\u003c         exp \u003d (HALF_FLOAT_MIN_BIASED_EXP_AS_SINGLE_FP_EXP - exp) \u003e\u003e 23;\n\u003c         mantissa |\u003d (1 \u003c\u003c 23);\n\u003c         mantissa \u003e\u003e\u003d (14 + exp);\n\u003c         hf \u003d (GLhalf)((((GLhalf)sign) \u003c\u003c 15) | (GLhalf)(mantissa));\n\u003c     }\n\nto the following:\n\n\u003e     /* check if exponent is \u003c\u003d -15 */\n\u003e     else if (exp \u003c\u003d HALF_FLOAT_MIN_BIASED_EXP_AS_SINGLE_FP_EXP)\n\u003e     {\n\u003e         /* store a denorm half-float value or zero */\n\u003e         exp \u003d ((HALF_FLOAT_MIN_BIASED_EXP_AS_SINGLE_FP_EXP - exp) \u003e\u003e 23) + 14;\n\u003e         // handle 0.0 specially to avoid a right-shift by too many bits\n\u003e         if (exp \u003e\u003d 32)\n\u003e         {\n\u003e             return 0;\n\u003e         }\n\u003e         mantissa |\u003d (1 \u003c\u003c 23);\n\u003e         mantissa \u003e\u003e\u003d exp;\n\u003e         hf \u003d (GLhalf)((((GLhalf)sign) \u003c\u003c 15) | (GLhalf)(mantissa));\n\u003e     }\n\n\nNarrowing that diff to a smaller number of lines, it changes from:\n\n\u003c         exp \u003d (HALF_FLOAT_MIN_BIASED_EXP_AS_SINGLE_FP_EXP - exp) \u003e\u003e 23;\n\u003c         mantissa |\u003d (1 \u003c\u003c 23);\n\u003c         mantissa \u003e\u003e\u003d (14 + exp);\n\nto the following:\n\n\u003e         exp \u003d ((HALF_FLOAT_MIN_BIASED_EXP_AS_SINGLE_FP_EXP - exp) \u003e\u003e 23) + 14;\n\u003e         // handle 0.0 specially to avoid a right-shift by too many bits\n\u003e         if (exp \u003e\u003d 32)\n\u003e         {\n\u003e             return 0;\n\u003e         }\n\u003e         mantissa |\u003d (1 \u003c\u003c 23);\n\u003e         mantissa \u003e\u003e\u003d exp;\n\nNotice that I moved the \"+ 14\" in order to make the new \"if\" statement clearer.",
      "parentUuid": "5481c672_0c62ab32",
      "revId": "3fd83c89a7e5c850774f42d4735490c0f1d9732a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b4cbd912_23e3c26f",
        "filename": "src/tests/deqp_support/deqp.gni",
        "patchSetId": 3
      },
      "lineNbr": 1199,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-01-09T14:30:34Z",
      "side": 1,
      "message": "nit: to prevent this weird formatting put this on a prior line instead of RHS",
      "range": {
        "startLine": 1195,
        "startChar": 62,
        "endLine": 1199,
        "endChar": 69
      },
      "revId": "3fd83c89a7e5c850774f42d4735490c0f1d9732a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2934c3eb_f605af11",
        "filename": "src/tests/deqp_support/deqp.gni",
        "patchSetId": 3
      },
      "lineNbr": 1199,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2021-01-11T18:01:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b4cbd912_23e3c26f",
      "range": {
        "startLine": 1195,
        "startChar": 62,
        "endLine": 1199,
        "endChar": 69
      },
      "revId": "3fd83c89a7e5c850774f42d4735490c0f1d9732a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "63ae6da6_ae350b28",
        "filename": "src/tests/deqp_support/es31cVertexAttribBindingTests_override.cpp",
        "patchSetId": 3
      },
      "lineNbr": 267,
      "author": {
        "id": 1001629
      },
      "writtenOn": "2021-01-11T03:01:40Z",
      "side": 1,
      "message": "exp must be \u003c\u003d 28 for this to be an allowed shift. HALF_FLOAT_MIN_BIASED_EXP_AS_SINGLE_FP_EXP \u003e\u003e 23 is 112, so this goes wrong if exp \u003c\u003d 83, or, unbiased, \u003c\u003d -44. Your change only checks for 0, but I think it should just check for the paren here being \u003e 32 and then returning 0 (or do the thing nicolascapens suggested on the bug)\n\n(i.e. this fixes all issues with arguments actually used in this file, but it\u0027s still not \"correct\" in the general sense.)",
      "revId": "3fd83c89a7e5c850774f42d4735490c0f1d9732a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5df6b2d8_fd16f9aa",
        "filename": "src/tests/deqp_support/es31cVertexAttribBindingTests_override.cpp",
        "patchSetId": 3
      },
      "lineNbr": 267,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2021-01-11T18:01:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "63ae6da6_ae350b28",
      "revId": "3fd83c89a7e5c850774f42d4735490c0f1d9732a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}