{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "df17ae90_9022a5a0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1263724
      },
      "writtenOn": "2020-11-17T21:21:16Z",
      "side": 1,
      "message": "LGTM, but if I enable Vulkan backend we crash.\n\nsignal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0x0\n\nStack Trace:\n  RELADDR   FUNCTION                                                                          FILE:LINE\n  v------\u003e  rx::vk::GraphicsPipelineTransitionMatch(angle::BitSetT\u003c64ul, unsigned long, unsigned long\u003e, angle::BitSetT\u003c64ul, unsigned long, unsigned long\u003e, rx::vk::GraphicsPipelineDesc const\u0026, rx::vk::GraphicsPipelineDesc const\u0026)  ../../third_party/angle/src/libANGLE/renderer/vulkan/vk_cache_utils.h:960:13\n  v------\u003e  rx::vk::PipelineHelper::findTransition(angle::BitSetT\u003c64ul, unsigned long, unsigned long\u003e, rx::vk::GraphicsPipelineDesc \nconst\u0026, rx::vk::PipelineHelper**) const  ../../third_party/angle/src/libANGLE/renderer/vulkan/vk_cache_utils.h:988:17\n  00000000002f40ac  rx::ContextVk::handleDirtyGraphicsPipeline(gl::Context const*, rx::vk::priv::SecondaryCommandBuffer*)  ../../third_party/angle/src/libANGLE/renderer/vulkan/ContextVk.cpp:1093:40\n",
      "revId": "19fb67eeeed2afca25dfc71bed0d639a758cbcdc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "80a51dc3_1acfa2b9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1263724
      },
      "writtenOn": "2020-11-17T21:24:58Z",
      "side": 1,
      "message": "Tried:\nout/Release64/bin/run_angle_end2end_tests -v -d 94KBA008TN --gtest_filter\u003dImageTest.SourceYUVAHBTargetExternalRGBSampleNoData/*\n\nIt crashes with all backends on my Pixel 4XL.",
      "revId": "19fb67eeeed2afca25dfc71bed0d639a758cbcdc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "63a29ea0_1772a695",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2020-11-25T17:09:19Z",
      "side": 1,
      "message": "Got a chance to re-run this and it passes for me on our GLES backend and hits asserts and validation failures in our Vulkan backend which we should fix.\n\nThere is lots of good debug output when I ran it with:\n\nangle_end2end_tests --fast-local-dev --local-output --gtest_filter\u003d*SourceYUVAHBTargetExternalRGBSampleNoData*",
      "parentUuid": "80a51dc3_1acfa2b9",
      "revId": "19fb67eeeed2afca25dfc71bed0d639a758cbcdc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3e121b58_e5330876",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2020-11-25T17:09:19Z",
      "side": 1,
      "message": "Let\u0027s land this so we can enable the VK test when it is fixed.\n\nSimultaneously working on updating our bots to API 29.",
      "revId": "19fb67eeeed2afca25dfc71bed0d639a758cbcdc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "98f8b494_804635e0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-11-25T17:14:57Z",
      "side": 1,
      "message": "LGTM. We should consider upgrading to API 29 when we get the P4s.",
      "revId": "19fb67eeeed2afca25dfc71bed0d639a758cbcdc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}