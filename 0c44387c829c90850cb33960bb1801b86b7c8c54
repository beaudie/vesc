{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5d905f51_790ae3ae",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.h",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2024-09-27T20:53:54Z",
      "side": 1,
      "message": "Is there ways to not aliasing? It kind of looks odd to me. \nWhen CL is enabled, is CL and GL in the same library or two library (compile once for GL and another time for CL)?",
      "range": {
        "startLine": 52,
        "startChar": 4,
        "endLine": 56,
        "endChar": 23
      },
      "revId": "0c44387c829c90850cb33960bb1801b86b7c8c54",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1f9f0806_552727e6",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.h",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1603052
      },
      "writtenOn": "2024-09-27T21:12:31Z",
      "side": 1,
      "message": "\u003e Is there ways to not aliasing? It kind of looks odd to me.\n\nI wrestled with this, and settled on this as I could loop through and also refer the entries through enum ids. The other option I had was fixed array, and refer through individual entries.\n\n\u003e When CL is enabled, is CL and GL in the same library or two library\n\nThey are in the same library (compiled at the same time).",
      "parentUuid": "5d905f51_790ae3ae",
      "range": {
        "startLine": 52,
        "startChar": 4,
        "endLine": 56,
        "endChar": 23
      },
      "revId": "0c44387c829c90850cb33960bb1801b86b7c8c54",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a981df9c_2723b537",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.h",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2024-09-27T21:26:09Z",
      "side": 1,
      "message": "If compiled into same library, and if CL and GL used at same time, would it create conflict with aliased index? If impossible to conflict, then sounds like you could just create another type `enum class CLDescriptorSetIndex`?",
      "parentUuid": "1f9f0806_552727e6",
      "range": {
        "startLine": 52,
        "startChar": 4,
        "endLine": 56,
        "endChar": 23
      },
      "revId": "0c44387c829c90850cb33960bb1801b86b7c8c54",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e835a932_ba698e74",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.h",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1603052
      },
      "writtenOn": "2024-09-27T21:50:59Z",
      "side": 1,
      "message": "\u003e would it create conflict with aliased index?\n\nI wouldn\u0027t think so. There is no state that is currently shared between GL and CL. Renderer instance is created from scratch for CL.\n\n\u003e could just create another type enum class CLDescriptorSetIndex?\n\nThere were types defined with enum types -- `PipelineLayoutDesc` that we were leveraging on -- https://chromium.googlesource.com/angle/angle/+/refs/heads/main/src/libANGLE/renderer/vulkan/vk_cache_utils.h#1111 -- which probably have to _templatized_. As GL and CL were independent went this route.",
      "parentUuid": "a981df9c_2723b537",
      "range": {
        "startLine": 52,
        "startChar": 4,
        "endLine": 56,
        "endChar": 23
      },
      "revId": "0c44387c829c90850cb33960bb1801b86b7c8c54",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8847451a_7d2d1148",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.h",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2024-09-27T22:21:32Z",
      "side": 1,
      "message": "template them also not nice either. Anyway LGTM. Just wondering if there is better way to do it.",
      "parentUuid": "e835a932_ba698e74",
      "range": {
        "startLine": 52,
        "startChar": 4,
        "endLine": 56,
        "endChar": 23
      },
      "revId": "0c44387c829c90850cb33960bb1801b86b7c8c54",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "677aa453_e3c4f8ce",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.h",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1603052
      },
      "writtenOn": "2024-09-27T22:51:54Z",
      "side": 1,
      "message": "Understood. Thanks.",
      "parentUuid": "8847451a_7d2d1148",
      "range": {
        "startLine": 52,
        "startChar": 4,
        "endLine": 56,
        "endChar": 23
      },
      "revId": "0c44387c829c90850cb33960bb1801b86b7c8c54",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fc647637_d39bf38e",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.h",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-09-30T20:17:09Z",
      "side": 1,
      "message": "This makes the GL side arrays increase in size by one unused entry. It probably has a minor impact on `PipelineLayoutDesc` (as a cache key). But it should be fine, I\u0027d like the GL side to use this free entry too at some point, so the cost should be paid at some point either way.\n\nI just hope the unused entry doesn\u0027t cause trouble otherwise.",
      "revId": "0c44387c829c90850cb33960bb1801b86b7c8c54",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}