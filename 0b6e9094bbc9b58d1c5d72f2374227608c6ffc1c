{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "7eae76d1_8e97a39e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2020-11-15T23:33:50Z",
      "side": 1,
      "message": "PTAL",
      "revId": "0b6e9094bbc9b58d1c5d72f2374227608c6ffc1c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d2f22ef3_4b73b4b9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-11-16T17:44:01Z",
      "side": 1,
      "message": "Are there any new tests that come in via the extension entry points or is the assumption those are passing since there aren\u0027t any new failures/skips?",
      "revId": "0b6e9094bbc9b58d1c5d72f2374227608c6ffc1c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "439ee181_8a2cabe0",
        "filename": "src/libANGLE/ErrorStrings.h",
        "patchSetId": 4
      },
      "lineNbr": 107,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-11-16T04:57:53Z",
      "side": 1,
      "message": "nit: name the extension, otherwise the message is cryptic. You can accordingly change the variable name to be less generic.",
      "range": {
        "startLine": 107,
        "startChar": 43,
        "endLine": 107,
        "endChar": 52
      },
      "revId": "0b6e9094bbc9b58d1c5d72f2374227608c6ffc1c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "58c4dfe5_da9bde6a",
        "filename": "src/libANGLE/validationESEXT.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1196,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-11-16T13:48:33Z",
      "side": 1,
      "message": "for all these guys, you want to add the extension checks in here explicitly.\n\nWhat we ideally like to do in this case is split the original entry point into\n\nValidateActiveShaderProgramBase -\u003e the non-ES-version validation code\nValidateActiveShaderProgram -\u003e checks for ES 3.0 and calls ValidateActiveShaderProgramBase\nValidateActiveShaderProgramEXT -\u003e checks for the EXT and calls ValidateActiveShaderProgramBase \n\nAnd so on for the other EPs.",
      "range": {
        "startLine": 1196,
        "startChar": 11,
        "endLine": 1196,
        "endChar": 38
      },
      "revId": "0b6e9094bbc9b58d1c5d72f2374227608c6ffc1c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}