{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d4ededdf_b64cc4a9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-12-03T19:11:08Z",
      "side": 1,
      "message": "cast/cast/cast?",
      "range": {
        "startLine": 9,
        "startChar": 3,
        "endLine": 9,
        "endChar": 9
      },
      "revId": "2e58e64eda2e15b3aeeac2cd968f3d7bc857b77a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "68aa884f_37d13873",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-12-03T18:27:58Z",
      "side": 1,
      "message": "LGTM",
      "revId": "2e58e64eda2e15b3aeeac2cd968f3d7bc857b77a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "363cf9f8_24b22765",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 482,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-12-03T19:11:08Z",
      "side": 1,
      "message": "I suggest we fix this differently and avoid clearing stencil with a 0 write mask. Context::clear does a few checks, one of which is `mState.getDepthStencilState().stencilWritemask \u003d\u003d 0` to determine if it should skip clearing stencil. I suggest we also cast the write mask there to uint8_t so the clear is no-oped instead of reaching here.",
      "revId": "2e58e64eda2e15b3aeeac2cd968f3d7bc857b77a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c5aa3c5a_dd943c3b",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 482,
      "author": {
        "id": 1175714
      },
      "writtenOn": "2021-12-03T19:23:48Z",
      "side": 1,
      "message": "I thought of that too, but I think we should leave it to a future CL because it basically means all stencil is really assumed to be 8 bits",
      "parentUuid": "363cf9f8_24b22765",
      "revId": "2e58e64eda2e15b3aeeac2cd968f3d7bc857b77a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6f5cd517_b04eda02",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 482,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-12-03T19:38:35Z",
      "side": 1,
      "message": "Still is and has been 8 bits since forever, and doesn\u0027t seem to want to change. It will most definitely not change in *OpenGL*. You could always add an ASSERT in the front-end where you do the cast that `depthStencilFormat.stencilBits \u003c\u003d 8`.",
      "parentUuid": "c5aa3c5a_dd943c3b",
      "revId": "2e58e64eda2e15b3aeeac2cd968f3d7bc857b77a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "142923cd_6573540b",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 482,
      "author": {
        "id": 1175714
      },
      "writtenOn": "2021-12-06T18:21:14Z",
      "side": 1,
      "message": "Looks like that way, it\u0027s going to end up being an LSC across all the renderers and everything since there are a lot of baked in uint32_t assumptions everywhere for stencil.\n\nI also don\u0027t get why we don\u0027t need to assert for stencil in backend renderer formats too.\n\nI\u0027d prefer the Vk-only fix approach at this point to unblock the bug and leave the redefinition of stencil mask as uint8_t to a future CL.",
      "parentUuid": "6f5cd517_b04eda02",
      "revId": "2e58e64eda2e15b3aeeac2cd968f3d7bc857b77a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0522a1ea_b2dd4c3c",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 482,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-12-06T19:14:10Z",
      "side": 1,
      "message": "Ok I agree that this is not a common scenario to optimize for, but FYI the simple fact of reaching here has a high cost, including breaking a render pass, which is why we no-op these calls early in the front-end.\n\nYou can always mask the clear in the front-end based on `angle::BitMask(depthStencilFormat.stencilBits)` so it will bullet-proof. WDYT?",
      "parentUuid": "142923cd_6573540b",
      "revId": "2e58e64eda2e15b3aeeac2cd968f3d7bc857b77a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae0d6e73_6694e84d",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 482,
      "author": {
        "id": 1175714
      },
      "writtenOn": "2021-12-06T20:13:11Z",
      "side": 1,
      "message": "Ok, I\u0027m up for only casting to uint8_t in the frontend and not redefining. Next: there\u0027s a bunch of places where we name some depth stencil format, mostly in the backend renderer, not the frontend, and we only seem to care about the frontend depth stencil for EGL config / surface properties. Do you know what `depthStencilFormat.stencilBits` should be masked?",
      "parentUuid": "0522a1ea_b2dd4c3c",
      "revId": "2e58e64eda2e15b3aeeac2cd968f3d7bc857b77a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6e90ae7b_032cda0e",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 482,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-12-06T21:05:48Z",
      "side": 1,
      "message": "If you mask based on stencilBits, you wouldn\u0027t need to cast to uint8_t (of course). The number of stencil bits you should be able to get with:\n\n    mState.getDrawFramebuffer()-\u003egetStencilAttachment()-\u003egetStencilSize()\n\nangle::BitMask turns that into a mask.",
      "parentUuid": "ae0d6e73_6694e84d",
      "revId": "2e58e64eda2e15b3aeeac2cd968f3d7bc857b77a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "68a706ef_15a45826",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 482,
      "author": {
        "id": 1175714
      },
      "writtenOn": "2021-12-06T21:36:34Z",
      "side": 1,
      "message": "got it, thanks for the further explanations, that makes a lot of sense and I should have seen it earlier :)",
      "parentUuid": "6e90ae7b_032cda0e",
      "revId": "2e58e64eda2e15b3aeeac2cd968f3d7bc857b77a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}