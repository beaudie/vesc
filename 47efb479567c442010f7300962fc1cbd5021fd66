{
  "comments": [
    {
      "key": {
        "uuid": "2b6a9c44_664d7e1f",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1289,
      "author": {
        "id": 1333595
      },
      "writtenOn": "2019-07-03T02:55:01Z",
      "side": 1,
      "message": "Only do the merge if we have set the blob cache callbacks.",
      "revId": "47efb479567c442010f7300962fc1cbd5021fd66",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ce51f3cb_7b0473e7",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1289,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-07-03T13:05:32Z",
      "side": 1,
      "message": "This doesn\u0027t look like how I would have done it. Why can\u0027t you ensure the pipeline cache is created before this call?",
      "parentUuid": "2b6a9c44_664d7e1f",
      "revId": "47efb479567c442010f7300962fc1cbd5021fd66",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "510b9d7b_6ecdfcc9",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1289,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-07-03T13:06:13Z",
      "side": 1,
      "message": "Sorry, I mean, return an error here, and ensure the cache is created before calling getPipelineCache?",
      "parentUuid": "ce51f3cb_7b0473e7",
      "revId": "47efb479567c442010f7300962fc1cbd5021fd66",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2c235255_d30ebc15",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1289,
      "author": {
        "id": 1333595
      },
      "writtenOn": "2019-07-04T00:56:23Z",
      "side": 1,
      "message": "Sorry, not quite understand what you mean.\nThe cache is indeed created before calling getPipelineCache, we have called initPipelineCache in initializeDevice.\nBut the problem is the cache created at that time maybe empty, as the callback functions are not set yet.\nonGetPipelineCache wants to recreate cache if we have set callback functions, but it can\u0027t be an error if we fail to create a non-empty cache, right? We can still use the previous created empty cache to create pipeline.",
      "parentUuid": "510b9d7b_6ecdfcc9",
      "revId": "47efb479567c442010f7300962fc1cbd5021fd66",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b76ae888_a994317f",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1289,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-07-04T13:13:05Z",
      "side": 1,
      "message": "Why can\u0027t it be an error if the blob cache function set fails?",
      "parentUuid": "2c235255_d30ebc15",
      "revId": "47efb479567c442010f7300962fc1cbd5021fd66",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f4f7528d_292f95cc",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1289,
      "author": {
        "id": 1333595
      },
      "writtenOn": "2019-07-05T01:27:42Z",
      "side": 1,
      "message": "initPipelineCache is also called in initializeDevice, an error will result in device init fail.\nAnd, I think it is okay for application not to use blob cache, right?",
      "parentUuid": "b76ae888_a994317f",
      "revId": "47efb479567c442010f7300962fc1cbd5021fd66",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "888ecfd7_7a9af958",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1289,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-07-16T19:28:39Z",
      "side": 1,
      "message": "An error should be popped up to the application layer if a Vk error ever occurs.",
      "parentUuid": "f4f7528d_292f95cc",
      "revId": "47efb479567c442010f7300962fc1cbd5021fd66",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "13544be9_8af2be70",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1289,
      "author": {
        "id": 1333595
      },
      "writtenOn": "2019-07-17T00:57:12Z",
      "side": 1,
      "message": "It\u0027s not an error, ss I said previously, application can decide to not use blob cache, we can\u0027t return an error in this scenario.",
      "parentUuid": "888ecfd7_7a9af958",
      "revId": "47efb479567c442010f7300962fc1cbd5021fd66",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "96927fc5_29aa2a38",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1289,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-07-17T13:27:41Z",
      "side": 1,
      "message": "I had this discussion with Jamie in the past, and I kind of agree with him now. If this function fails, yes the application could do without the cache, but the failure would generally mean something more serious is wrong, and we\u0027d want to find out what that is and fix it, instead of silently disabling the pipeline cache.",
      "parentUuid": "13544be9_8af2be70",
      "revId": "47efb479567c442010f7300962fc1cbd5021fd66",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "44e165f5_50df985a",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1289,
      "author": {
        "id": 1333595
      },
      "writtenOn": "2019-08-02T08:33:23Z",
      "side": 1,
      "message": "If I return an error from getPipelineCache(), which will result in application abortion, is this what you want?\n\nOn Android, yes, the framework has implemented a blob cache, so I agree we should return an error.\nBut if we are running on Linux, where it does not set blob cache callback functions, I don\u0027t think we can return an error.",
      "parentUuid": "96927fc5_29aa2a38",
      "revId": "47efb479567c442010f7300962fc1cbd5021fd66",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9b727374_f0e9c8ca",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1289,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-08-02T14:00:24Z",
      "side": 1,
      "message": "If the blob cache funcs aren\u0027t set, we won\u0027t return an error. We do want an abort if there\u0027s an unexpected error.",
      "parentUuid": "44e165f5_50df985a",
      "revId": "47efb479567c442010f7300962fc1cbd5021fd66",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "50a6dfdd_53708f75",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1289,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-08-02T15:18:03Z",
      "side": 1,
      "message": "\u003e If I return an error from getPipelineCache(), which will result in application abortion, is this what you want?\n\nYes exactly, because if you call into the platform and you get an error, the application is likely to abort shortly afterwards anyway because something must be seriously wrong.\n\n\u003e But if we are running on Linux, where it does not set blob cache callback functions, I don\u0027t think we can return an error.\n\nLike Jamie said, blob cache not existing is not an error.",
      "parentUuid": "9b727374_f0e9c8ca",
      "revId": "47efb479567c442010f7300962fc1cbd5021fd66",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e87ae0e3_8c8f8373",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1289,
      "author": {
        "id": 1333595
      },
      "writtenOn": "2019-08-05T00:49:29Z",
      "side": 1,
      "message": "So, we have 3 scenarios which may fail to get a cache from getPipelineCache:\n1. the blob cache callback functions are not set.\n2. callback functions are set, but It\u0027s first time run on the device, where it does not have cached data.\n3. functions are set, and it\u0027s not first the time run, but still failed to get the cached data.\n\nYes, I think we can distinguish the scenarios 1 from the others, but how to distinguish 2 and 3?",
      "parentUuid": "50a6dfdd_53708f75",
      "revId": "47efb479567c442010f7300962fc1cbd5021fd66",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b246c58e_c294176a",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1289,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-08-05T14:19:33Z",
      "side": 1,
      "message": "1 and 2 should both succeed (if you try to get data out of the callbacks and there are none, it\u0027s still a success).\n\n3 is the same as 2 from the point of view of ANGLE. We don\u0027t know if the blob cache callbacks failed and returned no data, or succeeded and there were actually no data. We just see that there were no data.\n\nThe 3 scenarios we are talking about are:\n\n- The blob cache returns something: angle::Result::Continue is returned\n  * In this case, merge\n- The blob cache doesn\u0027t contain data (or pointers not set): angle::Result::Incomplete is returned.\n  * In this case, do nothing\n- `pipelineCache-\u003einit()` aka vkCreatePipelineCache fails: angle::Result::Stop is returned.\n  * In this case, fail this function too.\n\nWhich means this function becomes:\n\nangle::Result RendererVk::onGetPipelineCache(DisplayVk *display)\n{\n    // We should now recreate the pipeline cache with the blob cache pipeline data.\n    vk::PipelineCache pipelineCache;\n    angle::Result result \u003d initPipelineCache(display, \u0026pipelineCache);\n    ANGLE_TRY(result);\n\n    if (result \u003d\u003d angle::Result::Continue)\n    {\n        // Merge the newly created pipeline cache into the existing one.\n        mPipelineCache.merge(mDevice, mPipelineCache.getHandle(), 1, pipelineCache.ptr());\n    }\n\n    pipelineCache.destroy(mDevice);\n    return angle::Result::Continue;\n}",
      "parentUuid": "e87ae0e3_8c8f8373",
      "revId": "47efb479567c442010f7300962fc1cbd5021fd66",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "864dc6bb_20772dc2",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1302,
      "author": {
        "id": 1333595
      },
      "writtenOn": "2019-07-03T02:55:01Z",
      "side": 1,
      "message": "I can add a return value check here if we have done a merge inside onGetPipelineCache, and then leave mPipelineCacheInitialized still false.\nIn this way, we will try to init the pipeline cache every time when creating a pipeline, if it is not initialized.\nBut I think maybe it is unnecessary, as the blob cache callbacks setting should suppose to happen at EGL init stage, so we don\u0027t expect app will do this setting when it has start to build pipeline.\nHow do you think?",
      "revId": "47efb479567c442010f7300962fc1cbd5021fd66",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}