{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "fbebc625_4f475bdc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-04-12T18:43:43Z",
      "side": 1,
      "message": "No problem with exposing the extension - since this is a new extension it would be a good idea to add some tests.",
      "revId": "8ef751d892137bd02b9b53f3207857ea53549c06",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "70808e51_3793ee43",
        "filename": "extensions/ANGLE_texture_external_yuv_sampling.txt",
        "patchSetId": 3
      },
      "lineNbr": 48,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-04-12T18:43:43Z",
      "side": 1,
      "message": "nit: try wrapping to 80 or 90 chars",
      "range": {
        "startLine": 48,
        "startChar": 4,
        "endLine": 48,
        "endChar": 11
      },
      "revId": "8ef751d892137bd02b9b53f3207857ea53549c06",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4fde34a2_817504b2",
        "filename": "extensions/ANGLE_texture_external_yuv_sampling.txt",
        "patchSetId": 3
      },
      "lineNbr": 101,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-04-12T04:46:56Z",
      "side": 1,
      "message": "nit: added value?",
      "range": {
        "startLine": 101,
        "startChar": 19,
        "endLine": 101,
        "endChar": 28
      },
      "revId": "8ef751d892137bd02b9b53f3207857ea53549c06",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "311f9dc8_95201959",
        "filename": "extensions/ANGLE_texture_external_yuv_sampling.txt",
        "patchSetId": 3
      },
      "lineNbr": 103,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-04-12T04:46:56Z",
      "side": 1,
      "message": "How speculative is the usage of this extension? As far as I know, no application is coding against ANGLE (which would be the only driver exposing this extension).",
      "range": {
        "startLine": 103,
        "startChar": 8,
        "endLine": 103,
        "endChar": 20
      },
      "revId": "8ef751d892137bd02b9b53f3207857ea53549c06",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "332cb04a_44331ea8",
        "filename": "extensions/ANGLE_texture_external_yuv_sampling.txt",
        "patchSetId": 3
      },
      "lineNbr": 103,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-04-12T17:51:25Z",
      "side": 1,
      "message": "this extension is to primarily enable us to add YUV formats here -\u003e https://chromium.googlesource.com/angle/angle/+/refs/heads/master/src/libANGLE/formatutils.cpp#764\n\nsince it ties into -\u003e\n1. https://chromium.googlesource.com/angle/angle/+/refs/heads/master/src/libANGLE/renderer/vulkan/android/HardwareBufferImageSiblingVkAndroid.cpp#128\n2. https://chromium.googlesource.com/angle/angle/+/refs/heads/master/src/libANGLE/renderer/vulkan/android/HardwareBufferImageSiblingVkAndroid.cpp#195\n\nso ANGLE can support YUV formats natively instead of interpretting them as RGB, which is what we do before my gerrit chain\n\nLooking out a few years, when ANGLE is adopted more widely, also has the added advantage mentioned in this issue",
      "parentUuid": "311f9dc8_95201959",
      "range": {
        "startLine": 103,
        "startChar": 8,
        "endLine": 103,
        "endChar": 20
      },
      "revId": "8ef751d892137bd02b9b53f3207857ea53549c06",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3e8880ec_b85757df",
        "filename": "extensions/ANGLE_texture_external_yuv_sampling.txt",
        "patchSetId": 3
      },
      "lineNbr": 103,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-04-12T18:14:10Z",
      "side": 1,
      "message": "How about we split the change that adds the formats from the change that exposes it as an extension? You should be able to merge the former much faster.\n\nThe change that adds an extension may need some back and forth. If it _is_ an extension we would want applications to use, we should make sure the wording is right for one thing. I\u0027m not entirely convinced it would be useful TBH either (the applications lived so far without needing these formats after all, and GL is on life support)",
      "parentUuid": "332cb04a_44331ea8",
      "range": {
        "startLine": 103,
        "startChar": 8,
        "endLine": 103,
        "endChar": 20
      },
      "revId": "8ef751d892137bd02b9b53f3207857ea53549c06",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e03951c7_5934c8a6",
        "filename": "extensions/ANGLE_texture_external_yuv_sampling.txt",
        "patchSetId": 3
      },
      "lineNbr": 103,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-04-12T18:19:06Z",
      "side": 1,
      "message": "\u003e change that adds the formats from the change that exposes it as an extension?\n\nnot possible since the 2 go together. See next point for more details\n\n\u003e If it _is_ an extension we would want applications to use\n\nthe primary target of the extension is not apps but ANGLE itself. ANGLE follows a pattern of adding internalformats to the map based on GLES version or extension support. The addition of extension was to address that flow. I did not see another way of adding new non-standard internalformats to the table",
      "parentUuid": "3e8880ec_b85757df",
      "range": {
        "startLine": 103,
        "startChar": 8,
        "endLine": 103,
        "endChar": 20
      },
      "revId": "8ef751d892137bd02b9b53f3207857ea53549c06",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c1e0ede6_de055dd4",
        "filename": "extensions/ANGLE_texture_external_yuv_sampling.txt",
        "patchSetId": 3
      },
      "lineNbr": 103,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-04-12T18:44:44Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "e03951c7_5934c8a6",
      "range": {
        "startLine": 103,
        "startChar": 8,
        "endLine": 103,
        "endChar": 20
      },
      "revId": "8ef751d892137bd02b9b53f3207857ea53549c06",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "05d66773_0cf57c4a",
        "filename": "extensions/ANGLE_texture_external_yuv_sampling.txt",
        "patchSetId": 3
      },
      "lineNbr": 112,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-04-12T04:46:56Z",
      "side": 1,
      "message": "super nit: see message below this. It\u0027s a common convention that text files end in new line (so readers don\u0027t encounter a line that terminates with EOF). A good editor should have already been doing this, a half-good editor should at least be configurable.",
      "revId": "8ef751d892137bd02b9b53f3207857ea53549c06",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}