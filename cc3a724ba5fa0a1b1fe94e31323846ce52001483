{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "9d551e54_da455e86",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1359667
      },
      "writtenOn": "2022-03-02T19:25:12Z",
      "side": 1,
      "message": "PTAL",
      "revId": "cc3a724ba5fa0a1b1fe94e31323846ce52001483",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "79387fdf_664a780c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-03-02T19:27:33Z",
      "side": 1,
      "message": "Brandon, it would be welcome to instead fix this properly using the GLES requirements and Vulkan capabilities. See also similar work here:\n\nhttps://chromium-review.googlesource.com/c/angle/angle/+/3497683\n\nWhat are your thoughts on using a more general method?",
      "revId": "cc3a724ba5fa0a1b1fe94e31323846ce52001483",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8f13f582_56ad4cf1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2022-03-02T20:56:07Z",
      "side": 1,
      "message": "jamie, checking extension list and others will be a run time thing (when creating contexts). `kExposeNonConformantExtensionsAndVersions` is a build time flag\n\nthese 2 changes are tangential, Brandon\u0027s CL is so that we dont have to maintain a private patch enabling 3.2 version when we build upstream angle",
      "parentUuid": "79387fdf_664a780c",
      "revId": "cc3a724ba5fa0a1b1fe94e31323846ce52001483",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b10385c6_1c86233d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-03-02T21:02:02Z",
      "side": 1,
      "message": "Yeah, I\u0027d like you of course to upstream all your patches so you can work on ToT. Instead of this patch what about implementing some kind of more general solution where we can expose 3.2 widely instead of needing to use a build flag? What\u0027s missing from ANGLE for 3.2 at the moment?",
      "parentUuid": "8f13f582_56ad4cf1",
      "revId": "cc3a724ba5fa0a1b1fe94e31323846ce52001483",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c2944626_45de5a03",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2022-03-02T21:08:03Z",
      "side": 1,
      "message": "\u003e what about implementing some kind of more general solution where we can expose 3.2 widely instead\n\nDont you need a conformance package submission to do that?\n\n\u003e What\u0027s missing from ANGLE for 3.2 at the moment?\n\nAEP support i think",
      "parentUuid": "b10385c6_1c86233d",
      "revId": "cc3a724ba5fa0a1b1fe94e31323846ce52001483",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "de32e17e_88008108",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-03-04T00:22:28Z",
      "side": 1,
      "message": "I think what Jamie meant was \"why doesn\u0027t ANGLE already pick Samsung to be ES3.2 conformant based on its own extension-availability checks?\"\n\nIf I got that right Jamie, I believe the answer is that Samsung is conformant due to unwritten agreements with their driver that make officially-seeming non-conformant extensions to actually be unofficially conformant.\n\nSo based on (public) Vulkan rules alone, Samsung\u0027s driver is not able to do ES3.2.",
      "parentUuid": "c2944626_45de5a03",
      "revId": "cc3a724ba5fa0a1b1fe94e31323846ce52001483",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "40803671_ed61f60b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2022-03-04T00:31:31Z",
      "side": 1,
      "message": "not sure about this, AFAIK with the chunk of patches we have already upstreamed (and a few that are WIP), we pass 3.2 khronos cts following public vulkan rules.",
      "parentUuid": "de32e17e_88008108",
      "revId": "cc3a724ba5fa0a1b1fe94e31323846ce52001483",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6f55d9bd_4bd5e378",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-03-04T01:00:01Z",
      "side": 1,
      "message": "Not without this for example: https://gitlab.khronos.org/vulkan/vulkan/-/merge_requests/4474\n\nMaybe there are other minor stuff like that?",
      "parentUuid": "40803671_ed61f60b",
      "revId": "cc3a724ba5fa0a1b1fe94e31323846ce52001483",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9fadc976_0cfebc71",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2022-03-04T21:27:08Z",
      "side": 1,
      "message": "thats mainly for `EGL_KHR_gl_texture_3D_image` nevertheless, we would prefer a feature flag versus the run-time check (since it is going to take a lot longer for the spec to be finalized)",
      "parentUuid": "6f55d9bd_4bd5e378",
      "revId": "cc3a724ba5fa0a1b1fe94e31323846ce52001483",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}