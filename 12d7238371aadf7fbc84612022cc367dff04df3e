{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "271e4548_e6472fd4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2022-06-30T15:39:07Z",
      "side": 1,
      "message": "Constantine, it looks like the `win-trace` failure is real.  I was able to repro with the following:\n\n```\nvpython3 src/tests/capture_replay_tests.py --gtest_filter\u003dMultisampleTest.AlphaToSampleCoverage/ES2_Vulkan_SwiftShader\n```\n\nand got the following output:\n\n```\n! Assert failed in readPixelsImpl (../../../src/libANGLE/renderer/vulkan/vk_helpers.cpp:8862): copyAspectFlags \u003d\u003d VK_IMAGE_ASPECT_COLOR_BIT\n```\n\nCan you take a look at that?  I would guess something needs to change in `SerializeFramebufferAttachment`.\n\n+Gert for any more insight.",
      "revId": "12d7238371aadf7fbc84612022cc367dff04df3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7820f166_b5fc3d08",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1533513
      },
      "writtenOn": "2022-07-01T16:40:50Z",
      "side": 1,
      "message": "The issue boils down to the fact that in this test we\u0027re trying to serialize a multisampled depth/stencil attachment. Vulkan readpixels currently can only read multisampled color attachments, but not depth or stencil, so that\u0027s the reason it fails. I guess we should add a fail expectation for MultisampleTest*Vulkan* and create a tracking issue for multisampled depth/stencil vulkan readpixels?",
      "parentUuid": "271e4548_e6472fd4",
      "revId": "12d7238371aadf7fbc84612022cc367dff04df3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9d109619_340666ee",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2022-07-01T20:41:11Z",
      "side": 1,
      "message": "The extension states:\n```\n    3. Should this extension add reading of coverage samples?\n\n      No.  That should be left to the EGL_NV_coverage_sample\n       specification.\n```\nSo adding a skip and a tracking issue SGTM.",
      "parentUuid": "7820f166_b5fc3d08",
      "revId": "12d7238371aadf7fbc84612022cc367dff04df3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e09e3b6f_7bc8ffc7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2022-07-12T15:06:44Z",
      "side": 1,
      "message": "Looks like we\u0027re still getting failures with win-trace.\n\nIf you can add the following to expectations, maybe this will pass:\n\n```\n7483 : MultisampleTestES3.ResolveToFBO/* \u003d SKIP_FOR_CAPTURE\n```\n\nI tested locally with the failing block and it is good with that addition.",
      "parentUuid": "9d109619_340666ee",
      "revId": "12d7238371aadf7fbc84612022cc367dff04df3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d300442f_57187d3d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1533513
      },
      "writtenOn": "2022-07-12T19:44:00Z",
      "side": 1,
      "message": "I have added an expectation, although this is not a capture-replay but rather an end2end test, that moreover doesn\u0027t seem like it should call any readPixels on depth-stencil, so it\u0027s strange it\u0027s hitting the assert.",
      "parentUuid": "e09e3b6f_7bc8ffc7",
      "revId": "12d7238371aadf7fbc84612022cc367dff04df3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "383d772e_1b664d03",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2022-07-12T20:42:21Z",
      "side": 1,
      "message": "The capture_replay_test script actually iterates through all the end2end tests.  The end2end test by itself passes locally with your CL, so I think it probably has to do with serialization again?  Adding it to capture_replay_expectations.txt should be the right place.",
      "parentUuid": "d300442f_57187d3d",
      "revId": "12d7238371aadf7fbc84612022cc367dff04df3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1fd1e3f7_f3b10309",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1533513
      },
      "writtenOn": "2022-07-13T09:00:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "383d772e_1b664d03",
      "revId": "12d7238371aadf7fbc84612022cc367dff04df3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}