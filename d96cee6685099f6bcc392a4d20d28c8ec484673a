{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5dd089fb_8b575d98",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 9
      },
      "lineNbr": 400,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-06-01T13:45:45Z",
      "side": 0,
      "message": "Is there anything more to do to support this other than simply doing\n\n```\nif (executable-\u003eusesFramebufferFetch())\n    mRenderer-\u003eonFramebufferFetchUsed();\n```\n\nin `ContextVk::invalidateProgramExecutableHelper`? Basically what this flag was doing was to keep this syncval error if framebuffer fetch is never used by the test / app.",
      "revId": "d96cee6685099f6bcc392a4d20d28c8ec484673a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9ede81db_8c51afc1",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 9
      },
      "lineNbr": 400,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-06-02T15:41:50Z",
      "side": 0,
      "message": "We could keep the syncval error in some cases with a bit more work. Can you clarify if you think it\u0027s worth the extra complexity and maintenance? Note that just calling mRenderer-\u003eonXXX is technically a data race, and it\u0027s not clear where best we should be doing this.",
      "parentUuid": "5dd089fb_8b575d98",
      "revId": "d96cee6685099f6bcc392a4d20d28c8ec484673a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a3f51f5b_967d2683",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 9
      },
      "lineNbr": 400,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-06-02T17:42:08Z",
      "side": 0,
      "message": "If it\u0027s cheap, yes I think it\u0027d be worth it. The message being suppressed is too broad.\n\nI realize the data race, but perhaps it\u0027s _practically_ fine? Maybe just slap std::atomic on it if you\u0027re too worried. Setting it in `ContextVk::invalidateProgramExecutableHelper` should be fine IMO, just need to set the bit when a new program is encountered.",
      "parentUuid": "9ede81db_8c51afc1",
      "revId": "d96cee6685099f6bcc392a4d20d28c8ec484673a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "74922534_1f775a53",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 9
      },
      "lineNbr": 400,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-06-02T17:45:27Z",
      "side": 0,
      "message": "Given the complexity of the data race and the fact we can\u0027t really act on any of these sync hazards, there seems to be more advantages to keeping this conditional warning off to keep our code simple. I don\u0027t see that producing the warning would necessarily lead to us fixing our code as we tend to just disable sync hazards anyway. YMMV",
      "parentUuid": "a3f51f5b_967d2683",
      "revId": "d96cee6685099f6bcc392a4d20d28c8ec484673a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}