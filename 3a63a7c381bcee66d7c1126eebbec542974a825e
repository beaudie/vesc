{
  "comments": [
    {
      "key": {
        "uuid": "8c83af19_3ccb29bc",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 12,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2017-11-08T08:32:04Z",
      "side": 1,
      "message": "The commit message should include \"TEST\u003dangle_unittests\"",
      "revId": "3a63a7c381bcee66d7c1126eebbec542974a825e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "85bc2461_3d3c918d",
        "filename": "src/common/utilities.cpp",
        "patchSetId": 5
      },
      "lineNbr": 773,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2017-11-08T08:32:04Z",
      "side": 1,
      "message": "I\u0027d rather just keep the function signature the same as before and just change the implementation to use strtoul and errno checking. If the index is out of range it could be treated as not a valid index. I\u0027m sure we won\u0027t need to support shader arrays with more than 2^31 entries.",
      "revId": "3a63a7c381bcee66d7c1126eebbec542974a825e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c8ec8700_2765d31c",
        "filename": "src/common/utilities.cpp",
        "patchSetId": 5
      },
      "lineNbr": 773,
      "author": {
        "id": 1166724
      },
      "writtenOn": "2017-11-08T17:16:01Z",
      "side": 1,
      "message": "The signature was modified to handle two separate output states: error or invalid index. Returning a valid index could still produce a valid location but an error cannot.",
      "parentUuid": "85bc2461_3d3c918d",
      "revId": "3a63a7c381bcee66d7c1126eebbec542974a825e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bfdbfc57_41e8b29c",
        "filename": "src/common/utilities.cpp",
        "patchSetId": 5
      },
      "lineNbr": 773,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-11-08T17:24:42Z",
      "side": 1,
      "message": "Did you mean to say \u0027returning an invalid index could still produce a valid location\u0027? Sorry having trouble parsing your intent.\n\nI think Olli was suggesting that the error case also return INVALID_INDEX, which hopefully would then cause the calling code to abort/return invalid index to the calling application. This seems reasonable to me.",
      "parentUuid": "c8ec8700_2765d31c",
      "revId": "3a63a7c381bcee66d7c1126eebbec542974a825e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a61347b_d784cf07",
        "filename": "src/common/utilities.cpp",
        "patchSetId": 5
      },
      "lineNbr": 773,
      "author": {
        "id": 1166724
      },
      "writtenOn": "2017-11-08T18:07:04Z",
      "side": 1,
      "message": "Close - \"returning an invalid index _without error_ could still produce a valid location\". \n\nI added the bool return to distinguish the return status of INVALID_INDEX upon (error vs no error). Originally, I had it the way you both described (it\u0027s far more intuitive) but I discovered cases that expected a returned INVALID_INDEX to produce a valid location so simply returning the same value upon error was insufficient.",
      "parentUuid": "bfdbfc57_41e8b29c",
      "revId": "3a63a7c381bcee66d7c1126eebbec542974a825e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}