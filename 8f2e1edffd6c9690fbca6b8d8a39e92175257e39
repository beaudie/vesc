{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "cbe7821c_bc453bd5",
        "filename": "src/libANGLE/renderer/vulkan/vk_utils.h",
        "patchSetId": 5
      },
      "lineNbr": 934,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-10-18T20:50:09Z",
      "side": 1,
      "message": "Doesn\u0027t this undo the benefits of `SharedPtr`? `SharedPtr` is managing the lifetime of the refcounted thing (so that `releaseRef` can automatically destroy the resource). I see this pointer is now taken out and cached in `mDescriptorSetCache`, that removes the ability for SharedPtr to manage the lifetime.\n\nMaybe there\u0027s a way to make this safer. One usage is just checking if the pointers are the same, you could add an `operator\u003d\u003d` for that instead. For `mDescriptorSetCache`, I haven\u0027t read too carefully yet to know what can be done.",
      "revId": "8f2e1edffd6c9690fbca6b8d8a39e92175257e39",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "648052e1_bea69959",
        "filename": "src/libANGLE/renderer/vulkan/vk_utils.h",
        "patchSetId": 5
      },
      "lineNbr": 934,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2024-10-18T20:56:37Z",
      "side": 1,
      "message": "Basically this is std::weak_ptr equivalent, essentially a weak pointer. It is used by DescriptorSetHelper which needs to have a back pointer to the pool that allocated from. One way I can make it safer is created another type WeakPtr which only allows pass in/out SharedPtr and does not allow any ref count modification.",
      "parentUuid": "cbe7821c_bc453bd5",
      "revId": "8f2e1edffd6c9690fbca6b8d8a39e92175257e39",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d5229aa5_71becfb2",
        "filename": "src/libANGLE/renderer/vulkan/vk_utils.h",
        "patchSetId": 5
      },
      "lineNbr": 934,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2024-10-19T01:03:08Z",
      "side": 1,
      "message": "https://chromium-review.googlesource.com/c/angle/angle/+/5944061\nOr, I can merge here if you prefer.",
      "parentUuid": "648052e1_bea69959",
      "revId": "8f2e1edffd6c9690fbca6b8d8a39e92175257e39",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ce80cf0_6169eb52",
        "filename": "src/libANGLE/renderer/vulkan/vk_utils.h",
        "patchSetId": 5
      },
      "lineNbr": 934,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-10-19T02:56:37Z",
      "side": 1,
      "message": "Eh no, I don\u0027t really think that makes things any safer. I was just wondering why not use the `SharedPtr` directly in `DescriptorSetHelper` instead of taking the ref counted object?",
      "parentUuid": "d5229aa5_71becfb2",
      "revId": "8f2e1edffd6c9690fbca6b8d8a39e92175257e39",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "342b1628_80e360f4",
        "filename": "src/libANGLE/renderer/vulkan/vk_utils.h",
        "patchSetId": 5
      },
      "lineNbr": 934,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2024-10-21T17:12:15Z",
      "side": 1,
      "message": "The problem is that right now the pool\u0027s refcount is being used by eviction code to decide whether a pool can be evicted or not. There are ways to workaround this, for example, add another refcount for this eviction purpose, then we could potentially make DesctriptorSetHelper owns a refcount to pool. But WeakPtr does make it safer though- it does not allow change of underline refcount. It basically limit the risk to DescriptorSethelper object\u0027s use of the pool pointer.\nI personally dont like the way eviction is implemented and I want to explore other evictions: instead of evict a pool, we should should keep a LRU list of DescriptorSetHelper and then evict the oldest set that has not been used for a while. Once we get to that point, I think we can change to a string pointer here. But before we get to that, My suggestion is we should keep this as is (this is basically implemented this way before my CL).",
      "parentUuid": "8ce80cf0_6169eb52",
      "revId": "8f2e1edffd6c9690fbca6b8d8a39e92175257e39",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6f93bee9_fb7cb443",
        "filename": "src/libANGLE/renderer/vulkan/vk_utils.h",
        "patchSetId": 5
      },
      "lineNbr": 934,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-10-21T17:37:22Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "342b1628_80e360f4",
      "revId": "8f2e1edffd6c9690fbca6b8d8a39e92175257e39",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}