{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6302038d_3b2db8f6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-11-16T13:45:04Z",
      "side": 1,
      "message": "cmd container confused me for a second - maybe \"extension entry points\"",
      "range": {
        "startLine": 7,
        "startChar": 12,
        "endLine": 7,
        "endChar": 25
      },
      "revId": "130db3360fed1a89def4fa9ec3b24f6b6b7da0cc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "88d66bef_f8f07ca4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-11-16T13:45:04Z",
      "side": 1,
      "message": "You\u0027re working around a bug in gl.xml here. Please just remove the duplicate glProgramUniformMatrix4fvEXT from GL_EXT_separate_shader_objects in gl.xml. I filed:\n\nhttps://github.com/KhronosGroup/OpenGL-Registry/issues/443\n\nTo fix this upstream. Also it would be welcome if you could add assert checks for duplicate entries so we can detect this quickly in any future instance.\n",
      "revId": "130db3360fed1a89def4fa9ec3b24f6b6b7da0cc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "422714c5_4e1af863",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-11-16T13:45:30Z",
      "side": 1,
      "message": "Unresolving.",
      "parentUuid": "88d66bef_f8f07ca4",
      "revId": "130db3360fed1a89def4fa9ec3b24f6b6b7da0cc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4586bec9_7f6adb7d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2020-11-16T15:49:12Z",
      "side": 1,
      "message": "\u003e Unresolving\n\nim not sure i understand what \"unresolving\" means, should i wait until upstream fixes the issue?\n\n\u003e Also it would be welcome if you could add assert checks for duplicate entries\n\nyou mean in python code?",
      "parentUuid": "422714c5_4e1af863",
      "revId": "130db3360fed1a89def4fa9ec3b24f6b6b7da0cc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8352a3f7_05632e37",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2020-11-16T15:58:41Z",
      "side": 1,
      "message": "\u003e You\u0027re working around a bug in gl.xml here\n\nindeed i am\n\n\u003e Please just remove the duplicate glProgramUniformMatrix4fvEXT from GL_EXT_separate_shader_objects in gl.xml\n\noh, i see. ok, will make local change for now and we can roll upstream when they fix it",
      "parentUuid": "4586bec9_7f6adb7d",
      "revId": "130db3360fed1a89def4fa9ec3b24f6b6b7da0cc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6bf3ebd2_a5515479",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-11-16T16:19:15Z",
      "side": 1,
      "message": "Unresolving -\u003e was just replying to my own comment to remove the \"resolved\" checkmark.\n\n\u003e you mean in python code?\n\nyeah, if we can assert that somewhere to catch future errors earlier in the stack. not a necessary thing if it\u0027s hard to do, just nice to have to help diagnose this in the future.",
      "parentUuid": "8352a3f7_05632e37",
      "revId": "130db3360fed1a89def4fa9ec3b24f6b6b7da0cc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}