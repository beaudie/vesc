{
  "comments": [
    {
      "key": {
        "uuid": "ff17c5c1_0e384282",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 10,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-04-30T01:01:25Z",
      "side": 1,
      "message": "nit:\nmGlobalMemoryBarrierStages, which is used for",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 71
      },
      "revId": "8bce9adf6a3f8b6c785dce2f7b1ff4c9c58105ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "452003bd_4fe622da",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 10,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-04-30T04:06:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ff17c5c1_0e384282",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 71
      },
      "revId": "8bce9adf6a3f8b6c785dce2f7b1ff4c9c58105ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0bb9b876_a00295a0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 12,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-04-30T01:01:25Z",
      "side": 1,
      "message": "nit:\nlet the caller",
      "range": {
        "startLine": 12,
        "startChar": 49,
        "endLine": 12,
        "endChar": 59
      },
      "revId": "8bce9adf6a3f8b6c785dce2f7b1ff4c9c58105ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "45428383_1e26f3de",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 12,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-04-30T04:06:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0bb9b876_a00295a0",
      "range": {
        "startLine": 12,
        "startChar": 49,
        "endLine": 12,
        "endChar": 59
      },
      "revId": "8bce9adf6a3f8b6c785dce2f7b1ff4c9c58105ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "20be7a09_f6aec8a8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 15,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-04-30T01:01:25Z",
      "side": 1,
      "message": "nit:\n\nthe specific stage it will be used for, allowing us to track write and read stage dependencies separately and request the corresponding barriers.",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 15,
        "endChar": 16
      },
      "revId": "8bce9adf6a3f8b6c785dce2f7b1ff4c9c58105ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c28c24b7_0ad73325",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 15,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-04-30T04:06:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "20be7a09_f6aec8a8",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 15,
        "endChar": 16
      },
      "revId": "8bce9adf6a3f8b6c785dce2f7b1ff4c9c58105ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4f5ec758_3077c266",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 1438,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-04-30T01:01:25Z",
      "side": 1,
      "message": "Not entirely related to this change since VK_ACCESS_TRANSFORM_FEEDBACK_WRITE_BIT_EXT was being used before, but for my own understanding:\n\nJamie/Shabi - How does the XFB emulation use bits defined by VK_EXT_transform_feedback?   If the vulkan driver understands those bits, doesn\u0027t that imply it supports VK_EXT_transform_feedback and we don\u0027t need to do the emulation in the first place?",
      "range": {
        "startLine": 1437,
        "startChar": 0,
        "endLine": 1438,
        "endChar": 77
      },
      "revId": "8bce9adf6a3f8b6c785dce2f7b1ff4c9c58105ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4c73353b_4984426b",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 1438,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-04-30T02:45:39Z",
      "side": 1,
      "message": "You\u0027re right Tim, this is a bug introduced by the command graph linearization: https://chromium-review.googlesource.com/c/angle/angle/+/2040197/14/src/libANGLE/renderer/vulkan/ContextVk.cpp#1276\n\nThe original code used VK_ACCESS_SHADER_WRITE_BIT in emulation: https://chromium-review.googlesource.com/c/angle/angle/+/2057804/9/src/libANGLE/renderer/vulkan/TransformFeedbackVk.cpp#b194\n\n@Charlie, do you mind fixing this in another CL?",
      "parentUuid": "4f5ec758_3077c266",
      "range": {
        "startLine": 1437,
        "startChar": 0,
        "endLine": 1438,
        "endChar": 77
      },
      "revId": "8bce9adf6a3f8b6c785dce2f7b1ff4c9c58105ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "013650cb_49fd7917",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 1438,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-04-30T02:49:12Z",
      "side": 1,
      "message": "Sure, will do.",
      "parentUuid": "4c73353b_4984426b",
      "range": {
        "startLine": 1437,
        "startChar": 0,
        "endLine": 1438,
        "endChar": 77
      },
      "revId": "8bce9adf6a3f8b6c785dce2f7b1ff4c9c58105ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c26d5461_28e584ec",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 4140,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-04-30T01:01:25Z",
      "side": 1,
      "message": "Even with this change, are these still biting us here when trying to overlap work with more fine-grained barriers?\n\n    bool BufferHelper::canAccumulateRead(ContextVk *contextVk, VkAccessFlags readAccessType)\n    {\n        // We only need to start a new command buffer when we need a new barrier.\n        // For simplicity\u0027s sake for now we always start a new command buffer.\n        // TODO(jmadill): Re-use the command buffer. http://anglebug.com/4429\n        return false;\n    }\n\n    bool BufferHelper::canAccumulateWrite(ContextVk *contextVk, VkAccessFlags writeAccessType)\n    {\n        // We only need to start a new command buffer when we need a new barrier.\n        // For simplicity\u0027s sake for now we always start a new command buffer.\n        // TODO(jmadill): Re-use the command buffer. http://anglebug.com/4429\n        return false;\n    }",
      "range": {
        "startLine": 4137,
        "startChar": 0,
        "endLine": 4140,
        "endChar": 5
      },
      "revId": "8bce9adf6a3f8b6c785dce2f7b1ff4c9c58105ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0eaf659d_194457a5",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 4140,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-04-30T04:06:44Z",
      "side": 1,
      "message": "I believe so. I will let Jamie comment on this.",
      "parentUuid": "c26d5461_28e584ec",
      "range": {
        "startLine": 4137,
        "startChar": 0,
        "endLine": 4140,
        "endChar": 5
      },
      "revId": "8bce9adf6a3f8b6c785dce2f7b1ff4c9c58105ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "888cefe2_24f3979c",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 4140,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-04-30T14:23:18Z",
      "side": 1,
      "message": "Yeah, ideally we could combine multiple barriers into one barrier command. There\u0027s some additional complexity needed to solve this because of the special way we handle buffer barriers at the top of the command buffer.",
      "parentUuid": "0eaf659d_194457a5",
      "range": {
        "startLine": 4137,
        "startChar": 0,
        "endLine": 4140,
        "endChar": 5
      },
      "revId": "8bce9adf6a3f8b6c785dce2f7b1ff4c9c58105ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "94eb6f69_f15c2b27",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 10
      },
      "lineNbr": 1953,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-04-30T01:01:25Z",
      "side": 1,
      "message": "Can you add an assert for this?   It sounds like you\u0027re describing this:\n\n    ASSERT((!mCurrentReadStages \u0026\u0026 !mCurrentReadAccess) ||\n           (mCurrentReadStages \u0026\u0026 mCurrentReadAccess));",
      "revId": "8bce9adf6a3f8b6c785dce2f7b1ff4c9c58105ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ca150fab_c5969b17",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 10
      },
      "lineNbr": 1953,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-04-30T04:06:44Z",
      "side": 1,
      "message": "I will add this in next CL so that I can close this CL without introduce any run time behavior change at this moment.",
      "parentUuid": "94eb6f69_f15c2b27",
      "revId": "8bce9adf6a3f8b6c785dce2f7b1ff4c9c58105ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "078c0fe0_a608ecb8",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 10
      },
      "lineNbr": 1954,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-04-30T01:01:25Z",
      "side": 1,
      "message": "nit:\nnot be zero",
      "range": {
        "startLine": 1954,
        "startChar": 12,
        "endLine": 1954,
        "endChar": 20
      },
      "revId": "8bce9adf6a3f8b6c785dce2f7b1ff4c9c58105ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0ae2511a_bdee3ad5",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 10
      },
      "lineNbr": 1954,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-04-30T04:06:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "078c0fe0_a608ecb8",
      "range": {
        "startLine": 1954,
        "startChar": 12,
        "endLine": 1954,
        "endChar": 20
      },
      "revId": "8bce9adf6a3f8b6c785dce2f7b1ff4c9c58105ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}