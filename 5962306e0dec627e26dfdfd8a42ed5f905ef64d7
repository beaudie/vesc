{
  "comments": [
    {
      "key": {
        "uuid": "ca916a3d_7ef630bc",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 7,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-06-12T12:51:00Z",
      "side": 1,
      "message": "nit: spelling",
      "range": {
        "startLine": 7,
        "startChar": 14,
        "endLine": 7,
        "endChar": 25
      },
      "revId": "5962306e0dec627e26dfdfd8a42ed5f905ef64d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7030b292_fa416574",
        "filename": "src/libANGLE/renderer/vulkan/CommandGraph.cpp",
        "patchSetId": 7
      },
      "lineNbr": 711,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-06-12T12:51:00Z",
      "side": 1,
      "message": "I\u0027d suggest we just pass a vk::CommandBuffer * here instead and call alloc in ContextVk.",
      "range": {
        "startLine": 711,
        "startChar": 43,
        "endLine": 711,
        "endChar": 84
      },
      "revId": "5962306e0dec627e26dfdfd8a42ed5f905ef64d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aad95ce6_ea8a0e9f",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.h",
        "patchSetId": 7
      },
      "lineNbr": 493,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-06-12T12:51:00Z",
      "side": 1,
      "message": "nit: primaryCommandBuffer or primaryCommands",
      "range": {
        "startLine": 493,
        "startChar": 33,
        "endLine": 493,
        "endChar": 47
      },
      "revId": "5962306e0dec627e26dfdfd8a42ed5f905ef64d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eb832ed0_1e4cf9c3",
        "filename": "src/libANGLE/renderer/vulkan/PersistentCommandPool.h",
        "patchSetId": 7
      },
      "lineNbr": 10,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-06-12T12:51:00Z",
      "side": 1,
      "message": "nit: all caps",
      "range": {
        "startLine": 10,
        "startChar": 8,
        "endLine": 10,
        "endChar": 57
      },
      "revId": "5962306e0dec627e26dfdfd8a42ed5f905ef64d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "edb9165c_47d54689",
        "filename": "src/libANGLE/renderer/vulkan/PersistentCommandPool.h",
        "patchSetId": 7
      },
      "lineNbr": 71,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-06-12T12:51:00Z",
      "side": 1,
      "message": "It\u0027s a bit cleaner to use composition instead of inheritance here. You can store a vk::CommandPool instead of using the WrappedObject class.",
      "range": {
        "startLine": 71,
        "startChar": 36,
        "endLine": 71,
        "endChar": 94
      },
      "revId": "5962306e0dec627e26dfdfd8a42ed5f905ef64d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "af357a70_25df04b3",
        "filename": "src/libANGLE/renderer/vulkan/PersistentCommandPool.h",
        "patchSetId": 7
      },
      "lineNbr": 100,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-06-12T12:51:00Z",
      "side": 1,
      "message": "these can probably be static constexpr in the header.",
      "range": {
        "startLine": 98,
        "startChar": 0,
        "endLine": 100,
        "endChar": 2
      },
      "revId": "5962306e0dec627e26dfdfd8a42ed5f905ef64d7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}