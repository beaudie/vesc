{
  "comments": [
    {
      "key": {
        "uuid": "098c4d06_e12fed8f",
        "filename": "src/libANGLE/renderer/d3d/VertexDataManager.cpp",
        "patchSetId": 5
      },
      "lineNbr": 471,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-08-17T14:09:56Z",
      "side": 1,
      "message": "Jiajia, this probably will work, but I would like it if we don\u0027t generate validation errors within normal program execution. To address this, we can look at the WebGL spec:\n\n Out-of-range vertex fetches may return any of the following values:\n * Values from anywhere within the buffer object.\n * Zero values, or (0,0,0,x) vectors for vector reads where x is a valid value represented in the type of the vector components and may be any of:\n   * 0, 1, or the maximum representable positive integer value, for signed or unsigned integer components\n   * 0.0 or 1.0, for floating-point components\n\nCan we do the following:\n\n * clamp the vertex count in this code block\n * when we are streaming an out of range vertex, stream either a zero vertex or the first available vertex in the vertex buffer.\n\nThis would solve the validation error problem. Usually we assume that once we reach the Context, the call should be successful except for internal errors.",
      "range": {
        "startLine": 468,
        "startChar": 0,
        "endLine": 471,
        "endChar": 9
      },
      "revId": "c01614cc0606964705d554ece0b474a0435de998",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0e9e5e6f_3fcf1b42",
        "filename": "src/tests/gl_tests/VertexAttributeTest.cpp",
        "patchSetId": 5
      },
      "lineNbr": 719,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-08-17T14:09:56Z",
      "side": 1,
      "message": "why did you have to make this change?",
      "range": {
        "startLine": 719,
        "startChar": 24,
        "endLine": 719,
        "endChar": 42
      },
      "revId": "c01614cc0606964705d554ece0b474a0435de998",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}