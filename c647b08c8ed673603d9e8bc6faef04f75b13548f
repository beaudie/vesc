{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "3df646c2_d4c37ece",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-10-07T17:10:03Z",
      "side": 1,
      "message": "nit: remove empty line. Also, it\u0027s `b/NNNNNNN`",
      "revId": "c647b08c8ed673603d9e8bc6faef04f75b13548f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6a7ca8f1_0ebaeb95",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1557704
      },
      "writtenOn": "2022-10-07T18:15:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3df646c2_d4c37ece",
      "revId": "c647b08c8ed673603d9e8bc6faef04f75b13548f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "86bed2bd_a9bd795d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-10-07T17:09:09Z",
      "side": 1,
      "message": "Makes sense, and thanks for the contributation.\n\nNow here comes the hard part ðŸ˜Š; please add a test in GLSLTest.cpp to avoid future regressions. Just need to add a small shader and compile it, make sure it doesn\u0027t fail compilation (or in this case crash).",
      "revId": "c647b08c8ed673603d9e8bc6faef04f75b13548f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a0dc5e88_da3c7b0b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-10-07T18:19:14Z",
      "side": 1,
      "message": "This was accidentally marked as resolved. Do you think you would be able to contribute a regression test?",
      "parentUuid": "86bed2bd_a9bd795d",
      "revId": "c647b08c8ed673603d9e8bc6faef04f75b13548f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "27570fa1_4066a7e5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1557704
      },
      "writtenOn": "2022-10-07T23:22:49Z",
      "side": 1,
      "message": "Hmm I\u0027m not sure we can actually trigger this bug with the current code, it seems more of a theoretical case.\n\nThe current shader I have is:\n\n```\nvoid main()\n{\n    int i \u003d 0;\n    do {\n        i++;\n    } while (XXXX);  // \u003c--- figure out a condition to reproduce\n    color \u003d vec4(0, 1, 0, 1);\n}\n\n```\n\nThe issue is that:\n\n- to reproduce the bug I need to have `cond` non-null and `typedCond` null\n- if `cond` is non-null, `typedCond` will be set to `cond-\u003egetAsTyped()`, and that is non-null if and only if the condition is of a `TIntermTyped` instance.\n- So I need to put a condition in the while loop that is non-null and not an instance of `TIntermTyped`, and I don\u0027t think that\u0027s possible because it will generate a syntax error and the shader won\u0027t compile.\n\nPlease let me know if you can think of a way to reproduce it.",
      "parentUuid": "a0dc5e88_da3c7b0b",
      "revId": "c647b08c8ed673603d9e8bc6faef04f75b13548f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6757a5ac_57acd0f3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-10-08T02:03:02Z",
      "side": 1,
      "message": "Ack, agreed it\u0027s an impossible situation. We usually turn that into an `ASSERT`, but the analyzer is probably not smart enough to notice that.\n\nI\u0027ll take this as-is then, just to satisfy the analyzer.",
      "parentUuid": "27570fa1_4066a7e5",
      "revId": "c647b08c8ed673603d9e8bc6faef04f75b13548f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}