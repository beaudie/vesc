{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5b6f43e3_2a4cd9d6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1228344
      },
      "writtenOn": "2023-06-13T15:19:00Z",
      "side": 1,
      "message": "I think you might want to add a link to the doc and what steps is implemented here?\n\n```suggestion\nAdd PartitionAlloc as an ANGLE third_party.\n\nThis patch implements step 1 from:\nhttps://docs.google.com/document/d/1nkpcI4uIdwubO6iE8zj1jeJDXvm2gq4-NUc2bwjOOgk/edit#bookmark\u003did.x03wheclwcis\n\nThis patch:\n1. Fetches PartitionAlloc in Angle when not built within Chrome.\n2. Fetches lss when needed. This is a dependency of PartitionAlloc.\n3. Set the default `partition_alloc.gni` flag. Every features are disabled\n   by default.\n\nIn step 1, PartitionAlloc is not used yet. It will be in follow-ups.\n```",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 11,
        "endChar": 0
      },
      "revId": "4c1369f21999b07f6021a877a05e3e86e2d132ad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ff88306d_67657f8c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1228344
      },
      "writtenOn": "2023-06-13T15:19:00Z",
      "side": 1,
      "message": "Thanks Ali!\n\n@syoussefi@chromium.org: You gave some comment on the doc. Thank! Would you like to do a review or redirect toward someone who might?\n\n+R @tsepez@chromium.org. You did a similar patch for pdfium. I have a question for you below.\n+CC @bartekn@chromium.org FYI",
      "revId": "4c1369f21999b07f6021a877a05e3e86e2d132ad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "56ce5ab4_bb0cbd5c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1360234
      },
      "writtenOn": "2023-06-13T15:59:42Z",
      "side": 1,
      "message": "CC\u0027ing folks on my team who may help answer some questions in the comments",
      "revId": "4c1369f21999b07f6021a877a05e3e86e2d132ad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ffa3422e_49dcfb6a",
        "filename": "DEPS",
        "patchSetId": 2
      },
      "lineNbr": 88,
      "author": {
        "id": 1116053
      },
      "writtenOn": "2023-06-13T17:33:39Z",
      "side": 1,
      "message": "nit: cut\u0027n paste the Three Lines of non-changing comments ...",
      "range": {
        "startLine": 88,
        "startChar": 1,
        "endLine": 88,
        "endChar": 36
      },
      "revId": "4c1369f21999b07f6021a877a05e3e86e2d132ad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5550b334_7c87f463",
        "filename": "DEPS",
        "patchSetId": 2
      },
      "lineNbr": 105,
      "author": {
        "id": 1116053
      },
      "writtenOn": "2023-06-13T17:33:39Z",
      "side": 1,
      "message": "nit: ditto.",
      "range": {
        "startLine": 105,
        "startChar": 0,
        "endLine": 105,
        "endChar": 29
      },
      "revId": "4c1369f21999b07f6021a877a05e3e86e2d132ad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "62f358af_e1f233aa",
        "filename": "DEPS",
        "patchSetId": 2
      },
      "lineNbr": 148,
      "author": {
        "id": 1228344
      },
      "writtenOn": "2023-06-13T15:19:00Z",
      "side": 1,
      "message": "Should this be:\n```\nthird_party/partition_allocator\n```\ninstead?\n\n@tsepez@chromium.org . I guess `base/allocator/partition_allocator` was borrowed from the patch for pdfium. I wonder why we made this in pdfium. Do you happen to know?\n\n\nI guess we will have to create in Angle some headers similar to:\n```\nbase/memory/raw_ptr.h\nbase/memory/raw_ref.h\n```\nredirecting toward the `raw_ptr.h` files in @angle third_party/ or @chrome /base depending whether angle is built with Chrome or not.",
      "range": {
        "startLine": 148,
        "startChar": 3,
        "endLine": 148,
        "endChar": 37
      },
      "revId": "4c1369f21999b07f6021a877a05e3e86e2d132ad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c6ef63f8_00db28ed",
        "filename": "DEPS",
        "patchSetId": 2
      },
      "lineNbr": 148,
      "author": {
        "id": 1116053
      },
      "writtenOn": "2023-06-13T17:32:21Z",
      "side": 1,
      "message": "Nah, we want PA code to get pulled into base/allocator/partition_allocator, so whether ANGLE is built standalone or as part of chromium, the path to base/allocator/partition_allocator as used to include PA headers in angle is correct either way.\n\nI think for ANGLE\u0027s sake, skip the base/memory/headers, and just use the ones under partition_allocator/ when re-writing to raw_ptr. But ...\n\nThe question we have to answer is whether it will be possible to build ANGLE without PA, for some other embedders of ANGLE, who just want ordinary malloc.  PDFium has this constraint (as it builds in, say, G3 where PA is not yet supported), so it has its own pointer types that either wrap the partition_alloc/ ones or provide a fallback implementation.",
      "parentUuid": "62f358af_e1f233aa",
      "range": {
        "startLine": 148,
        "startChar": 3,
        "endLine": 148,
        "endChar": 37
      },
      "revId": "4c1369f21999b07f6021a877a05e3e86e2d132ad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "baf5f53e_2945aa35",
        "filename": "DEPS",
        "patchSetId": 2
      },
      "lineNbr": 148,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-06-13T18:04:22Z",
      "side": 1,
      "message": "\u003e The question we have to answer is whether it will be possible to build ANGLE without PA, for some other embedders of ANGLE, who just want ordinary malloc.\n\nANGLE most definitely needs to be able to build with ordinary malloc.",
      "parentUuid": "c6ef63f8_00db28ed",
      "range": {
        "startLine": 148,
        "startChar": 3,
        "endLine": 148,
        "endChar": 37
      },
      "revId": "4c1369f21999b07f6021a877a05e3e86e2d132ad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a7d4fe4a_7f4f9dfe",
        "filename": "DEPS",
        "patchSetId": 2
      },
      "lineNbr": 148,
      "author": {
        "id": 1116053
      },
      "writtenOn": "2023-06-13T18:15:54Z",
      "side": 1,
      "message": "Ok, the subtler question becomes whether ANGLE must be able to build without running glcient sync to pull in the DEPS -- do other emebedders just pull in the angle repository itself and then rely on another builder, say, blaze in g3, to build it againt some other environment?\n \nThis determines whether you\u0027ll be able to rely on the raw_ptr fallback in base/allocator/partition_allocator/pointers/raw_ptr.h, or, if like pdfium, it has to be wrapped again at another level as in pdfium\u0027s core/fxcrt/unowned_ptr.h.",
      "parentUuid": "baf5f53e_2945aa35",
      "range": {
        "startLine": 148,
        "startChar": 3,
        "endLine": 148,
        "endChar": 37
      },
      "revId": "4c1369f21999b07f6021a877a05e3e86e2d132ad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "744f2a65_40c3db55",
        "filename": "DEPS",
        "patchSetId": 2
      },
      "lineNbr": 488,
      "author": {
        "id": 1228344
      },
      "writtenOn": "2023-06-13T15:19:00Z",
      "side": 1,
      "message": "Should this also include `not build_with_chromium` ?\n\nIf you don\u0027t, then it might be fetched twice when built with Chrome.",
      "range": {
        "startLine": 488,
        "startChar": 20,
        "endLine": 488,
        "endChar": 54
      },
      "revId": "4c1369f21999b07f6021a877a05e3e86e2d132ad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e955e8c8_308e3c36",
        "filename": "DEPS",
        "patchSetId": 2
      },
      "lineNbr": 488,
      "author": {
        "id": 1116053
      },
      "writtenOn": "2023-06-13T17:32:21Z",
      "side": 1,
      "message": "If this is going to be the same model as PDFium, then my understanding is that this DEPS file is used *only* by standalone builds. Chromium\u0027s DEPS file itself will control the lss version pulled in for a non-standalone build.",
      "parentUuid": "744f2a65_40c3db55",
      "range": {
        "startLine": 488,
        "startChar": 20,
        "endLine": 488,
        "endChar": 54
      },
      "revId": "4c1369f21999b07f6021a877a05e3e86e2d132ad",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}