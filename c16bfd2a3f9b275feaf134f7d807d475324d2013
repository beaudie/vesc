{
  "comments": [
    {
      "key": {
        "uuid": "8d425d17_c4889464",
        "filename": "src/libANGLE/renderer/d3d/d3d11/VertexArray11.cpp",
        "patchSetId": 8
      },
      "lineNbr": 96,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-07-10T18:55:08Z",
      "side": 1,
      "message": "Why not:\n\n* set attribsToUpdate for any dirty attribs\n* for any dirty bindings, set all the dirty bound attribs using your inverse mapping.\n\nWhere is the situation where you need to store the prior values? Can you show me the lines of code in a small pseudocode example?",
      "range": {
        "startLine": 63,
        "startChar": 0,
        "endLine": 96,
        "endChar": 0
      },
      "revId": "c16bfd2a3f9b275feaf134f7d807d475324d2013",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "68330702_a1223565",
        "filename": "src/libANGLE/renderer/d3d/d3d11/VertexArray11.cpp",
        "patchSetId": 8
      },
      "lineNbr": 96,
      "author": {
        "id": 1161747
      },
      "writtenOn": "2018-07-11T07:56:22Z",
      "side": 1,
      "message": "This patch does not use the callback function to update the binding-attribute map, so here we also need to update the binding-attribute map so that we can set attribsToUpdate correctly.\n\nI need the prior values of attrib binding to update the binding-attribute map. If an attribute changes its binding in this sync, we need:\n1. Set the attribute is using the current binding\n2. Remove the attribute from the old binding\nSo we need the prior value of attrib binding to do the step 2, or we may need another iteration.",
      "parentUuid": "8d425d17_c4889464",
      "range": {
        "startLine": 63,
        "startChar": 0,
        "endLine": 96,
        "endChar": 0
      },
      "revId": "c16bfd2a3f9b275feaf134f7d807d475324d2013",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0cb54d2f_88ddb7a0",
        "filename": "src/libANGLE/renderer/d3d/d3d11/VertexArray11.cpp",
        "patchSetId": 8
      },
      "lineNbr": 96,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-07-11T12:29:22Z",
      "side": 1,
      "message": "What specific dirty bit? DIRTY_BIT_ATTRIB or DIRTY_BIT_BINDING?",
      "parentUuid": "68330702_a1223565",
      "range": {
        "startLine": 63,
        "startChar": 0,
        "endLine": 96,
        "endChar": 0
      },
      "revId": "c16bfd2a3f9b275feaf134f7d807d475324d2013",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c54f1518_1ddebfb9",
        "filename": "src/libANGLE/renderer/d3d/d3d11/VertexArray11.cpp",
        "patchSetId": 8
      },
      "lineNbr": 96,
      "author": {
        "id": 1161747
      },
      "writtenOn": "2018-07-12T06:39:32Z",
      "side": 1,
      "message": "I believe we need to check DirtyAttribBitType::DIRTY_ATTRIB_BINDING to find out all the attributes that have changed their bindings in the current sync.",
      "parentUuid": "0cb54d2f_88ddb7a0",
      "range": {
        "startLine": 63,
        "startChar": 0,
        "endLine": 96,
        "endChar": 0
      },
      "revId": "c16bfd2a3f9b275feaf134f7d807d475324d2013",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "50d8a331_4a1bde74",
        "filename": "src/libANGLE/renderer/d3d/d3d11/VertexArray11.cpp",
        "patchSetId": 8
      },
      "lineNbr": 96,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-07-12T20:29:27Z",
      "side": 1,
      "message": "Ok. Well, let\u0027s think about two cases.\n\na) all attributes have the same binding index.\n  - in this case, you can use the inverse binding-\u003eattribute mapping to flag dirty attribs.\nb) some attributes have different binding indexes.\n  - in this case, the attributes are marked dirty: DIRTY_ATTRIB_BINDING\n\nIn either case I don\u0027t think you need the prior values. Does this make sense?",
      "parentUuid": "c54f1518_1ddebfb9",
      "range": {
        "startLine": 63,
        "startChar": 0,
        "endLine": 96,
        "endChar": 0
      },
      "revId": "c16bfd2a3f9b275feaf134f7d807d475324d2013",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b95e635f_a9bc230a",
        "filename": "src/libANGLE/renderer/d3d/d3d11/VertexArray11.cpp",
        "patchSetId": 8
      },
      "lineNbr": 96,
      "author": {
        "id": 1161747
      },
      "writtenOn": "2018-07-13T06:11:34Z",
      "side": 1,
      "message": "The prior values are used to update the binding-attribute map. The binding-attribute map should also be updated in each sync, or we cannot sync attributes correctly or sync some attributes that are not needed to be sync.\n\nIn either a) or b), when the DIRTY_ATTRIB_BINDING is dirty, this means the attribute is using a different binding from last sync, so we need to update all the related items in the binding-attribute map:\n1. Label the new binding being used by this attribute.\n2. Label the old binding not being used by this attribute.\nStep 1 is easy to do as we know which binding should be used for this attribute, but Step 2 is harder to do as we cannot directly get the binding this attribute used in the last sync. Without the prior value we have to get the old binding by another iteration on the binding-attribute map before step 1, which costs more time.\n\nNote that the prior values are not needed if the binding-attribute map is updated in a callback function, where we can get both the old and the new bindingIndex easily.",
      "parentUuid": "50d8a331_4a1bde74",
      "range": {
        "startLine": 63,
        "startChar": 0,
        "endLine": 96,
        "endChar": 0
      },
      "revId": "c16bfd2a3f9b275feaf134f7d807d475324d2013",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "501793fe_7b3c739b",
        "filename": "src/libANGLE/renderer/d3d/d3d11/VertexArray11.cpp",
        "patchSetId": 8
      },
      "lineNbr": 96,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-07-16T02:10:30Z",
      "side": 1,
      "message": "Why don\u0027t you take my suggestion about moving the binding-attribute map to the front end? I think you wouldn\u0027t need the prior values to update it in this case.",
      "parentUuid": "b95e635f_a9bc230a",
      "range": {
        "startLine": 63,
        "startChar": 0,
        "endLine": 96,
        "endChar": 0
      },
      "revId": "c16bfd2a3f9b275feaf134f7d807d475324d2013",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3aa2ed78_a9b8a776",
        "filename": "src/libANGLE/renderer/d3d/d3d11/VertexArray11.cpp",
        "patchSetId": 8
      },
      "lineNbr": 96,
      "author": {
        "id": 1161747
      },
      "writtenOn": "2018-07-16T04:53:07Z",
      "side": 1,
      "message": "I have moved the map to VertexArray.cpp. PTAL, thanks!",
      "parentUuid": "501793fe_7b3c739b",
      "range": {
        "startLine": 63,
        "startChar": 0,
        "endLine": 96,
        "endChar": 0
      },
      "revId": "c16bfd2a3f9b275feaf134f7d807d475324d2013",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5d722a80_e227ffcb",
        "filename": "src/libANGLE/renderer/d3d/d3d11/VertexArray11.h",
        "patchSetId": 8
      },
      "lineNbr": 61,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-07-09T15:01:52Z",
      "side": 1,
      "message": "nit:private",
      "range": {
        "startLine": 61,
        "startChar": 4,
        "endLine": 61,
        "endChar": 52
      },
      "revId": "c16bfd2a3f9b275feaf134f7d807d475324d2013",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1b1b7c78_95664354",
        "filename": "src/libANGLE/renderer/d3d/d3d11/VertexArray11.h",
        "patchSetId": 8
      },
      "lineNbr": 98,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-07-10T18:55:08Z",
      "side": 1,
      "message": "I think we should move this inverse mapping to the front-end. It\u0027s possible we can make use of this. Also we can probably store it in each gl::AttributeBinding.",
      "range": {
        "startLine": 95,
        "startChar": 4,
        "endLine": 98,
        "endChar": 98
      },
      "revId": "c16bfd2a3f9b275feaf134f7d807d475324d2013",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "92d14c6c_6fb9125b",
        "filename": "src/libANGLE/renderer/d3d/d3d11/VertexArray11.h",
        "patchSetId": 8
      },
      "lineNbr": 98,
      "author": {
        "id": 1161747
      },
      "writtenOn": "2018-07-11T07:56:22Z",
      "side": 1,
      "message": "I only use it on D3D11 back-ends because I find it only useful on D3D11. The binding-attribute map is unnecessary on either OpenGL and Vulkan back-ends since both of them can support separate setting of attribute and binding.",
      "parentUuid": "1b1b7c78_95664354",
      "range": {
        "startLine": 95,
        "startChar": 4,
        "endLine": 98,
        "endChar": 98
      },
      "revId": "c16bfd2a3f9b275feaf134f7d807d475324d2013",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "685b6e5e_fdbd8250",
        "filename": "src/libANGLE/renderer/d3d/d3d11/VertexArray11.h",
        "patchSetId": 8
      },
      "lineNbr": 98,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-07-11T12:29:22Z",
      "side": 1,
      "message": "It will be useful for me for optimization if we can move it to the front end. Maybe that is better as a split patch.",
      "parentUuid": "92d14c6c_6fb9125b",
      "range": {
        "startLine": 95,
        "startChar": 4,
        "endLine": 98,
        "endChar": 98
      },
      "revId": "c16bfd2a3f9b275feaf134f7d807d475324d2013",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ed00084e_0aa7ded3",
        "filename": "src/libANGLE/renderer/d3d/d3d11/VertexArray11.h",
        "patchSetId": 8
      },
      "lineNbr": 101,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-07-09T15:01:52Z",
      "side": 1,
      "message": "I think mSyncedAttributeBindings would fit better to indicate that this represents the current internal state that may not be up to date yet.",
      "range": {
        "startLine": 101,
        "startChar": 47,
        "endLine": 101,
        "endChar": 69
      },
      "revId": "c16bfd2a3f9b275feaf134f7d807d475324d2013",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}