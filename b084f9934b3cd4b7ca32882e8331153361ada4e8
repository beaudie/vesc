{
  "comments": [
    {
      "key": {
        "uuid": "d81c6a21_99fbbf71",
        "filename": ".clang-format",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2015-07-17T21:25:51Z",
      "side": 1,
      "message": "I\u0027d personally keep it on as it is helps keep the code vertical size down when using a switch as a lookup table. (we can enforce the all or none manually)",
      "revId": "b084f9934b3cd4b7ca32882e8331153361ada4e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "78f8defa_6f44196a",
        "filename": ".clang-format",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-07-20T14:23:53Z",
      "side": 1,
      "message": "I did try this and it sometimes sucks. For instance:\n\n switch (a)\n {\n   case GL_RED: return ENUM_RED;\n   case GL_DOESNT_FIT:\n     if (thing)\n     {\n       do();\n     }\n     break;\n   case GL_RED_INTEGER: return ENUM_RED_INTEGER;\n   case GL_EVEN_LONGER_ENUM_NAME_RED_INTEGER: return ENUM_EVEN_LONGER_ENUM_NAME_RED_INTEGER;\n }\n\nThe ugly part is that libFormat doesn\u0027t currently have an option for lining up the return statements or break statements. It looks nice for some switch statements and inconsistently bad in others.\n\nManually doesn\u0027t work so well with git cl format.. anything not marked as \"don\u0027t format anything in here\" is automatic. (Generally you would want as much as possible to be automatic)",
      "parentUuid": "d81c6a21_99fbbf71",
      "revId": "b084f9934b3cd4b7ca32882e8331153361ada4e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "78f8defa_4f8f9db0",
        "filename": ".clang-format",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 1105219
      },
      "writtenOn": "2015-07-20T16:59:48Z",
      "side": 1,
      "message": "FWIW I generally consider consistency/readability \u003e compactness. I\u0027d keep it off, and maybe feature request all-or-none mode?",
      "parentUuid": "78f8defa_6f44196a",
      "revId": "b084f9934b3cd4b7ca32882e8331153361ada4e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "387f464e_24c89c97",
        "filename": ".clang-format",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2015-07-20T17:03:36Z",
      "side": 1,
      "message": "Ok makes sense, this case would be ugly. Can we wait for a feature request to be merged / accepted before turning this switch on?",
      "parentUuid": "78f8defa_4f8f9db0",
      "revId": "b084f9934b3cd4b7ca32882e8331153361ada4e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d81c6a21_bfb13b85",
        "filename": ".clang-format",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-07-20T18:35:09Z",
      "side": 1,
      "message": "Not sure. We need to decide on setting it to false or true presently. I think there\u0027s some consensus for keeping it false at the moment, is that ok?",
      "parentUuid": "387f464e_24c89c97",
      "revId": "b084f9934b3cd4b7ca32882e8331153361ada4e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f805aec3_97954494",
        "filename": "src/libANGLE/renderer/d3d/d3d11/Buffer11.cpp",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2015-07-17T17:57:15Z",
      "side": 1,
      "message": "Possible to force these to be on separate lines?",
      "range": {
        "startLine": 33,
        "startChar": 6,
        "endLine": 33,
        "endChar": 84
      },
      "revId": "b084f9934b3cd4b7ca32882e8331153361ada4e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "18ea8220_c3dc2858",
        "filename": "src/libANGLE/renderer/d3d/d3d11/Buffer11.cpp",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-07-17T19:04:27Z",
      "side": 1,
      "message": "The option in this case specifies \u0027all in one line, or all on their own lines\u0027. I don\u0027t see an option to force \u0027all on their own line\u0027",
      "parentUuid": "f805aec3_97954494",
      "range": {
        "startLine": 33,
        "startChar": 6,
        "endLine": 33,
        "endChar": 84
      },
      "revId": "b084f9934b3cd4b7ca32882e8331153361ada4e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "38e3c64b_a1391e63",
        "filename": "src/libANGLE/renderer/d3d/d3d11/Buffer11.cpp",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2015-07-17T19:12:24Z",
      "side": 1,
      "message": "ok, sgtm",
      "parentUuid": "18ea8220_c3dc2858",
      "range": {
        "startLine": 33,
        "startChar": 6,
        "endLine": 33,
        "endChar": 84
      },
      "revId": "b084f9934b3cd4b7ca32882e8331153361ada4e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "98fd92eb_7c57b99d",
        "filename": "src/libANGLE/renderer/d3d/d3d11/Buffer11.cpp",
        "patchSetId": 3
      },
      "lineNbr": 42,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2015-07-17T17:57:15Z",
      "side": 1,
      "message": "I wouldn\u0027t mind it putting multiple args on each line. Either is fine.",
      "range": {
        "startLine": 37,
        "startChar": 35,
        "endLine": 42,
        "endChar": 53
      },
      "revId": "b084f9934b3cd4b7ca32882e8331153361ada4e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b8eed634_40965054",
        "filename": "src/libANGLE/renderer/d3d/d3d11/Buffer11.cpp",
        "patchSetId": 3
      },
      "lineNbr": 42,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-07-17T19:04:27Z",
      "side": 1,
      "message": "OK, I would vote to mirror Chromium here, to reduce deviations count and I kind of like the clarity. Either is fine though so others agree let\u0027s change. Option is BinPackParameters. (For reference, I\u0027ve put up https://chromium-review.googlesource.com/#/c/286590/)",
      "parentUuid": "98fd92eb_7c57b99d",
      "range": {
        "startLine": 37,
        "startChar": 35,
        "endLine": 42,
        "endChar": 53
      },
      "revId": "b084f9934b3cd4b7ca32882e8331153361ada4e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "98fd92eb_dcc08dc4",
        "filename": "src/libANGLE/renderer/d3d/d3d11/Buffer11.cpp",
        "patchSetId": 3
      },
      "lineNbr": 614,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2015-07-17T17:57:15Z",
      "side": 1,
      "message": "Talked in person about this but to document:\nThis is a bit awkward because the format script can\u0027t really determine if these were meant to be together without some deep analysis. I think it\u0027s better than the alternative (not aligning anything) and we can always add newlines if it is too much.",
      "range": {
        "startLine": 613,
        "startChar": 4,
        "endLine": 614,
        "endChar": 50
      },
      "revId": "b084f9934b3cd4b7ca32882e8331153361ada4e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "180362c0_78dce187",
        "filename": "src/libANGLE/renderer/d3d/d3d11/Buffer11.cpp",
        "patchSetId": 3
      },
      "lineNbr": 614,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-07-17T19:04:27Z",
      "side": 1,
      "message": "SGTM",
      "parentUuid": "98fd92eb_dcc08dc4",
      "range": {
        "startLine": 613,
        "startChar": 4,
        "endLine": 614,
        "endChar": 50
      },
      "revId": "b084f9934b3cd4b7ca32882e8331153361ada4e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "58e07a3c_65cf209e",
        "filename": "src/libANGLE/renderer/d3d/d3d11/Buffer11.cpp",
        "patchSetId": 3
      },
      "lineNbr": 740,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2015-07-17T17:57:15Z",
      "side": 1,
      "message": "To work around this ugliness, we\u0027ll have to declare the lambdas on a previous line.",
      "range": {
        "startLine": 736,
        "startChar": 41,
        "endLine": 740,
        "endChar": 42
      },
      "revId": "b084f9934b3cd4b7ca32882e8331153361ada4e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "98fd92eb_9c39e563",
        "filename": "src/libANGLE/renderer/d3d/d3d11/Buffer11.cpp",
        "patchSetId": 3
      },
      "lineNbr": 740,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-07-17T19:04:27Z",
      "side": 1,
      "message": "SGTM",
      "parentUuid": "58e07a3c_65cf209e",
      "range": {
        "startLine": 736,
        "startChar": 41,
        "endLine": 740,
        "endChar": 42
      },
      "revId": "b084f9934b3cd4b7ca32882e8331153361ada4e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "38e3c64b_e1c046c4",
        "filename": "src/libANGLE/renderer/d3d/d3d11/Buffer11.cpp",
        "patchSetId": 3
      },
      "lineNbr": 759,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2015-07-17T17:57:15Z",
      "side": 1,
      "message": "We\u0027re going to have to watch out for this.  It\u0027s smart enough to continue the comment to the next line but not smart enough to merge it with the next comment.",
      "range": {
        "startLine": 759,
        "startChar": 8,
        "endLine": 759,
        "endChar": 22
      },
      "revId": "b084f9934b3cd4b7ca32882e8331153361ada4e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f805aec3_fa0f4568",
        "filename": "src/libANGLE/renderer/d3d/d3d11/Buffer11.cpp",
        "patchSetId": 3
      },
      "lineNbr": 759,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-07-17T19:04:27Z",
      "side": 1,
      "message": "Yep, agree.",
      "parentUuid": "38e3c64b_e1c046c4",
      "range": {
        "startLine": 759,
        "startChar": 8,
        "endLine": 759,
        "endChar": 22
      },
      "revId": "b084f9934b3cd4b7ca32882e8331153361ada4e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "180362c0_f82e3119",
        "filename": "src/libANGLE/renderer/d3d/d3d11/Buffer11.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1065,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2015-07-17T17:57:15Z",
      "side": 1,
      "message": "Looks like a bug in the formatter that this is not on multiple lines.  It probably does the assignment alignment after the line length limit checks.",
      "range": {
        "startLine": 1065,
        "startChar": 4,
        "endLine": 1065,
        "endChar": 112
      },
      "revId": "b084f9934b3cd4b7ca32882e8331153361ada4e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d8f38a19_7e2a110c",
        "filename": "src/libANGLE/renderer/d3d/d3d11/Buffer11.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1065,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-07-17T19:04:27Z",
      "side": 1,
      "message": "Good catch. Mentioned this to Daniel Jasper, and filed issue https://llvm.org/bugs/show_bug.cgi?id\u003d24169.",
      "parentUuid": "180362c0_f82e3119",
      "range": {
        "startLine": 1065,
        "startChar": 4,
        "endLine": 1065,
        "endChar": 112
      },
      "revId": "b084f9934b3cd4b7ca32882e8331153361ada4e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f805aec3_f783e055",
        "filename": "src/libANGLE/renderer/d3d/d3d11/TextureStorage11.cpp",
        "patchSetId": 3
      },
      "lineNbr": 266,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2015-07-17T17:57:15Z",
      "side": 1,
      "message": "Another example of the line limit issue.",
      "range": {
        "startLine": 266,
        "startChar": 4,
        "endLine": 266,
        "endChar": 109
      },
      "revId": "b084f9934b3cd4b7ca32882e8331153361ada4e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "18ea8220_40576e4f",
        "filename": "src/libANGLE/renderer/d3d/d3d11/TextureStorage11.cpp",
        "patchSetId": 3
      },
      "lineNbr": 477,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2015-07-17T17:57:15Z",
      "side": 1,
      "message": "It seems that when the original line is too long, the assignment alignment falls apart.",
      "range": {
        "startLine": 474,
        "startChar": 8,
        "endLine": 477,
        "endChar": 97
      },
      "revId": "b084f9934b3cd4b7ca32882e8331153361ada4e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "58e07a3c_254a3878",
        "filename": "src/libANGLE/renderer/d3d/d3d11/TextureStorage11.cpp",
        "patchSetId": 3
      },
      "lineNbr": 477,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-07-17T19:04:27Z",
      "side": 1,
      "message": "This seems to be the \"correct\" behaviour that the overflowing lines aren\u0027t respecting.",
      "parentUuid": "18ea8220_40576e4f",
      "range": {
        "startLine": 474,
        "startChar": 8,
        "endLine": 477,
        "endChar": 97
      },
      "revId": "b084f9934b3cd4b7ca32882e8331153361ada4e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "18ea8220_8051765b",
        "filename": "src/libANGLE/renderer/d3d/d3d11/TextureStorage11.cpp",
        "patchSetId": 3
      },
      "lineNbr": 582,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2015-07-17T17:57:15Z",
      "side": 1,
      "message": "Does clang-format add any ability to check for certain patterns and issue warnings? Would be cool to get a warning about using NULL instead of nullptr.",
      "range": {
        "startLine": 582,
        "startChar": 32,
        "endLine": 582,
        "endChar": 36
      },
      "revId": "b084f9934b3cd4b7ca32882e8331153361ada4e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d8f38a19_be34996b",
        "filename": "src/libANGLE/renderer/d3d/d3d11/TextureStorage11.cpp",
        "patchSetId": 3
      },
      "lineNbr": 582,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-07-17T19:04:27Z",
      "side": 1,
      "message": "Unfortunately this would be more a linter warning. I know g3 has these kinds of presubmit warnings but I don\u0027t know if there\u0027s a client side lib for this kind of thing. We might ask someone about Skia or Blink\u0027s presubmit warnings.",
      "parentUuid": "18ea8220_8051765b",
      "range": {
        "startLine": 582,
        "startChar": 32,
        "endLine": 582,
        "endChar": 36
      },
      "revId": "b084f9934b3cd4b7ca32882e8331153361ada4e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "98fd92eb_5cd91d96",
        "filename": "src/libANGLE/renderer/d3d/d3d11/TextureStorage11.cpp",
        "patchSetId": 3
      },
      "lineNbr": 582,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2015-07-17T19:12:24Z",
      "side": 1,
      "message": "Alright.  Might be as simple as a python script to search for strings in a git diff.",
      "parentUuid": "d8f38a19_be34996b",
      "range": {
        "startLine": 582,
        "startChar": 32,
        "endLine": 582,
        "endChar": 36
      },
      "revId": "b084f9934b3cd4b7ca32882e8331153361ada4e8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}