{
  "comments": [
    {
      "key": {
        "uuid": "31d060e4_55ea7ecd",
        "filename": "src/libANGLE/renderer/d3d/d3d11/InputLayoutCache.cpp",
        "patchSetId": 9
      },
      "lineNbr": 236,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-02-03T15:34:18Z",
      "side": 1,
      "message": "git cl format",
      "range": {
        "startLine": 236,
        "startChar": 98,
        "endLine": 236,
        "endChar": 110
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "11a43c86_973794b5",
        "filename": "src/libANGLE/renderer/d3d/d3d11/InputLayoutCache.cpp",
        "patchSetId": 9
      },
      "lineNbr": 247,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-02-03T15:34:18Z",
      "side": 1,
      "message": "make this into a local static helper function taking a bool, and use it instead of the hard-coded 1 below, just for readability",
      "range": {
        "startLine": 247,
        "startChar": 4,
        "endLine": 247,
        "endChar": 26
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b1a450bb_b04c58c8",
        "filename": "src/libANGLE/renderer/d3d/d3d11/InputLayoutCache.cpp",
        "patchSetId": 9
      },
      "lineNbr": 421,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-02-03T15:34:18Z",
      "side": 1,
      "message": "why are you calling updateInputLayout here? I feel like this is unnecessary, and removing it can allow you to not cache mSortedSemanticIndices.",
      "range": {
        "startLine": 421,
        "startChar": 8,
        "endLine": 421,
        "endChar": 25
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "31a94060_ea35c316",
        "filename": "src/libANGLE/renderer/d3d/d3d11/InputLayoutCache.cpp",
        "patchSetId": 9
      },
      "lineNbr": 428,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-02-03T15:34:18Z",
      "side": 1,
      "message": "hard coded 1",
      "range": {
        "startLine": 428,
        "startChar": 73,
        "endLine": 428,
        "endChar": 74
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d1be2490_0f4389f4",
        "filename": "src/libANGLE/renderer/d3d/d3d11/InputLayoutCache.cpp",
        "patchSetId": 9
      },
      "lineNbr": 431,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-02-03T15:34:18Z",
      "side": 1,
      "message": "hard coded 1",
      "range": {
        "startLine": 431,
        "startChar": 29,
        "endLine": 431,
        "endChar": 30
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "91b82ca8_9b6c9b4b",
        "filename": "src/libANGLE/renderer/d3d/d3d11/InputLayoutCache.cpp",
        "patchSetId": 9
      },
      "lineNbr": 442,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-02-03T15:34:18Z",
      "side": 1,
      "message": "hey Cooper, as I mentioned in our chat yesterday, this would be require much less caching if you simply reset the full buffer set. In this case it would be\n\n IASetVertexBuffers(0, gl::MAX_VERTEX_ATTRBIS, mCurrentBuffers, mCurrentVertexStrides, mCurrentVertexOffsets)\n\nThis would allow you to not cache mStartSlot and mNumBuffers.",
      "range": {
        "startLine": 440,
        "startChar": 0,
        "endLine": 442,
        "endChar": 75
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f1308814_48a2736e",
        "filename": "src/libANGLE/renderer/d3d/d3d11/InputLayoutCache.cpp",
        "patchSetId": 9
      },
      "lineNbr": 453,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-02-03T15:34:18Z",
      "side": 1,
      "message": "you can probably just pass 0 for numIndicesPerInstance to disable this workaround, and avoid using both parameters",
      "range": {
        "startLine": 453,
        "startChar": 12,
        "endLine": 453,
        "endChar": 30
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f1308814_0807cb34",
        "filename": "src/libANGLE/renderer/d3d/d3d11/InputLayoutCache.cpp",
        "patchSetId": 9
      },
      "lineNbr": 612,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-02-03T15:34:18Z",
      "side": 1,
      "message": "can\u0027t this check be numIndicesPerInstance !\u003d 0, allow you to skip caching the bool?",
      "range": {
        "startLine": 612,
        "startChar": 24,
        "endLine": 612,
        "endChar": 49
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b1b530ae_ee1f1b48",
        "filename": "src/libANGLE/renderer/d3d/d3d11/Renderer11.cpp",
        "patchSetId": 9
      },
      "lineNbr": 1713,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-02-03T15:34:18Z",
      "side": 1,
      "message": "you can compute the correct value for an indexed or non-indexed call here, no? See comment below.",
      "range": {
        "startLine": 1713,
        "startChar": 63,
        "endLine": 1713,
        "endChar": 68
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "91b82ca8_16a2c2bb",
        "filename": "src/libANGLE/renderer/d3d/d3d11/Renderer11.cpp",
        "patchSetId": 9
      },
      "lineNbr": 1982,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-02-03T15:34:18Z",
      "side": 1,
      "message": "This is a bit confusing - here the first draw call will be using \u0027count\u0027 instead of \u0027elementsToRender\u0027 for \u0027numElementsPerInstance\u0027 in applyVertexBuffers. Is that correct?",
      "range": {
        "startLine": 1982,
        "startChar": 28,
        "endLine": 1982,
        "endChar": 48
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "31a94060_aa2fcbc4",
        "filename": "src/tests/gl_tests/InstancingTest.cpp",
        "patchSetId": 9
      },
      "lineNbr": 24,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-02-03T15:34:18Z",
      "side": 1,
      "message": "nit: override instead of virtual",
      "range": {
        "startLine": 24,
        "startChar": 4,
        "endLine": 24,
        "endChar": 11
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "51c15418_417642de",
        "filename": "src/tests/gl_tests/InstancingTest.cpp",
        "patchSetId": 9
      },
      "lineNbr": 26,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-02-03T15:34:18Z",
      "side": 1,
      "message": "the !\u003d 0 check is redundant, you can just use glDeleteProgram(0), which will no op.",
      "range": {
        "startLine": 26,
        "startChar": 8,
        "endLine": 26,
        "endChar": 26
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "31d060e4_95e786ff",
        "filename": "src/tests/gl_tests/InstancingTest.cpp",
        "patchSetId": 9
      },
      "lineNbr": 32,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-02-03T15:34:18Z",
      "side": 1,
      "message": "nit: change the virtuals to override in the other members",
      "range": {
        "startLine": 32,
        "startChar": 4,
        "endLine": 32,
        "endChar": 11
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "31d060e4_b5e402fb",
        "filename": "src/tests/gl_tests/InstancingTest.cpp",
        "patchSetId": 9
      },
      "lineNbr": 107,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-02-03T15:34:18Z",
      "side": 1,
      "message": "return void",
      "range": {
        "startLine": 107,
        "startChar": 4,
        "endLine": 107,
        "endChar": 8
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b1a450bb_102524ed",
        "filename": "src/tests/gl_tests/InstancingTest.cpp",
        "patchSetId": 9
      },
      "lineNbr": 122,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-02-03T15:34:18Z",
      "side": 1,
      "message": "ASSERT_NE(0u, mProgram)",
      "range": {
        "startLine": 119,
        "startChar": 8,
        "endLine": 122,
        "endChar": 9
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "11a43c86_f75368ec",
        "filename": "src/tests/gl_tests/InstancingTest.cpp",
        "patchSetId": 9
      },
      "lineNbr": 133,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-02-03T15:34:18Z",
      "side": 1,
      "message": "remove this",
      "range": {
        "startLine": 133,
        "startChar": 7,
        "endLine": 133,
        "endChar": 20
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f1308814_88ac7b5f",
        "filename": "src/tests/gl_tests/InstancingTest.cpp",
        "patchSetId": 9
      },
      "lineNbr": 136,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-02-03T15:34:18Z",
      "side": 1,
      "message": "same comments about the return value here",
      "range": {
        "startLine": 136,
        "startChar": 4,
        "endLine": 136,
        "endChar": 8
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "31a94060_4a8e571e",
        "filename": "src/tests/gl_tests/InstancingTest.cpp",
        "patchSetId": 9
      },
      "lineNbr": 363,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-02-03T15:34:18Z",
      "side": 1,
      "message": "setupDrawArraysTest(vs);",
      "range": {
        "startLine": 363,
        "startChar": 4,
        "endLine": 363,
        "endChar": 28
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "71af3862_0c5ddbfb",
        "filename": "src/tests/gl_tests/InstancingTest.cpp",
        "patchSetId": 9
      },
      "lineNbr": 369,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-02-03T15:34:18Z",
      "side": 1,
      "message": "can we remove the parameter for program?",
      "range": {
        "startLine": 369,
        "startChar": 22,
        "endLine": 369,
        "endChar": 30
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "51c15418_a164c623",
        "filename": "src/tests/gl_tests/InstancingTest.cpp",
        "patchSetId": 9
      },
      "lineNbr": 381,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-02-03T15:34:18Z",
      "side": 1,
      "message": "can we filter by windows version here?",
      "range": {
        "startLine": 381,
        "startChar": 4,
        "endLine": 381,
        "endChar": 32
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b1a450bb_302a28bc",
        "filename": "src/tests/gl_tests/InstancingTest.cpp",
        "patchSetId": 9
      },
      "lineNbr": 384,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-02-03T15:34:18Z",
      "side": 1,
      "message": "same comment as above",
      "range": {
        "startLine": 384,
        "startChar": 4,
        "endLine": 384,
        "endChar": 13
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "31d060e4_55135eab",
        "filename": "src/tests/gl_tests/InstancingTest.cpp",
        "patchSetId": 9
      },
      "lineNbr": 386,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-02-03T15:34:18Z",
      "side": 1,
      "message": "make this mVertexBuffer as part of the the InstancingPointsTest fixture, like mProgram",
      "range": {
        "startLine": 386,
        "startChar": 11,
        "endLine": 386,
        "endChar": 23
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}