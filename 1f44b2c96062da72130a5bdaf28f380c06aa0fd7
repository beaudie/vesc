{
  "comments": [
    {
      "key": {
        "uuid": "31d060e4_55ea7ecd",
        "filename": "src/libANGLE/renderer/d3d/d3d11/InputLayoutCache.cpp",
        "patchSetId": 9
      },
      "lineNbr": 236,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-02-03T15:34:18Z",
      "side": 1,
      "message": "git cl format",
      "range": {
        "startLine": 236,
        "startChar": 98,
        "endLine": 236,
        "endChar": 110
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9124acf4_3084c933",
        "filename": "src/libANGLE/renderer/d3d/d3d11/InputLayoutCache.cpp",
        "patchSetId": 9
      },
      "lineNbr": 236,
      "author": {
        "id": 1115159
      },
      "writtenOn": "2016-02-03T18:40:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "31d060e4_55ea7ecd",
      "range": {
        "startLine": 236,
        "startChar": 98,
        "endLine": 236,
        "endChar": 110
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "11a43c86_973794b5",
        "filename": "src/libANGLE/renderer/d3d/d3d11/InputLayoutCache.cpp",
        "patchSetId": 9
      },
      "lineNbr": 247,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-02-03T15:34:18Z",
      "side": 1,
      "message": "make this into a local static helper function taking a bool, and use it instead of the hard-coded 1 below, just for readability",
      "range": {
        "startLine": 247,
        "startChar": 4,
        "endLine": 247,
        "endChar": 26
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b121b0e4_3cde6993",
        "filename": "src/libANGLE/renderer/d3d/d3d11/InputLayoutCache.cpp",
        "patchSetId": 9
      },
      "lineNbr": 247,
      "author": {
        "id": 1115159
      },
      "writtenOn": "2016-02-03T18:40:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "11a43c86_973794b5",
      "range": {
        "startLine": 247,
        "startChar": 4,
        "endLine": 247,
        "endChar": 26
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b1a450bb_b04c58c8",
        "filename": "src/libANGLE/renderer/d3d/d3d11/InputLayoutCache.cpp",
        "patchSetId": 9
      },
      "lineNbr": 421,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-02-03T15:34:18Z",
      "side": 1,
      "message": "why are you calling updateInputLayout here? I feel like this is unnecessary, and removing it can allow you to not cache mSortedSemanticIndices.",
      "range": {
        "startLine": 421,
        "startChar": 8,
        "endLine": 421,
        "endChar": 25
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "31c3005d_88f82768",
        "filename": "src/libANGLE/renderer/d3d/d3d11/InputLayoutCache.cpp",
        "patchSetId": 9
      },
      "lineNbr": 421,
      "author": {
        "id": 1115159
      },
      "writtenOn": "2016-02-03T18:40:18Z",
      "side": 1,
      "message": "I have to call this here to ensure that data step rate gets reset and a new the input layout is created with numIndicesPerInstnace.  I really only need to call it one additional time to reconfigure the inputlayout to match what is expected for looped instanced rendering calls. (emulatedInstancedId \u003d\u003d 1) is that condition.  The rest of the calls (instancedId 2-n) do not need a new layout.",
      "parentUuid": "b1a450bb_b04c58c8",
      "range": {
        "startLine": 421,
        "startChar": 8,
        "endLine": 421,
        "endChar": 25
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f1988891_a24afeab",
        "filename": "src/libANGLE/renderer/d3d/d3d11/InputLayoutCache.cpp",
        "patchSetId": 9
      },
      "lineNbr": 421,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-02-04T14:11:40Z",
      "side": 1,
      "message": "I think if we use correct update call in applyVertexBuffer initially you shouldn\u0027t ever need to call this from here.",
      "parentUuid": "31c3005d_88f82768",
      "range": {
        "startLine": 421,
        "startChar": 8,
        "endLine": 421,
        "endChar": 25
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "31a94060_ea35c316",
        "filename": "src/libANGLE/renderer/d3d/d3d11/InputLayoutCache.cpp",
        "patchSetId": 9
      },
      "lineNbr": 428,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-02-03T15:34:18Z",
      "side": 1,
      "message": "hard coded 1",
      "range": {
        "startLine": 428,
        "startChar": 73,
        "endLine": 428,
        "endChar": 74
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5116b490_bfba4724",
        "filename": "src/libANGLE/renderer/d3d/d3d11/InputLayoutCache.cpp",
        "patchSetId": 9
      },
      "lineNbr": 428,
      "author": {
        "id": 1115159
      },
      "writtenOn": "2016-02-03T18:40:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "31a94060_ea35c316",
      "range": {
        "startLine": 428,
        "startChar": 73,
        "endLine": 428,
        "endChar": 74
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d1be2490_0f4389f4",
        "filename": "src/libANGLE/renderer/d3d/d3d11/InputLayoutCache.cpp",
        "patchSetId": 9
      },
      "lineNbr": 431,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-02-03T15:34:18Z",
      "side": 1,
      "message": "hard coded 1",
      "range": {
        "startLine": 431,
        "startChar": 29,
        "endLine": 431,
        "endChar": 30
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5116b490_9fb78b3e",
        "filename": "src/libANGLE/renderer/d3d/d3d11/InputLayoutCache.cpp",
        "patchSetId": 9
      },
      "lineNbr": 431,
      "author": {
        "id": 1115159
      },
      "writtenOn": "2016-02-03T18:40:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d1be2490_0f4389f4",
      "range": {
        "startLine": 431,
        "startChar": 29,
        "endLine": 431,
        "endChar": 30
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "91b82ca8_9b6c9b4b",
        "filename": "src/libANGLE/renderer/d3d/d3d11/InputLayoutCache.cpp",
        "patchSetId": 9
      },
      "lineNbr": 442,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-02-03T15:34:18Z",
      "side": 1,
      "message": "hey Cooper, as I mentioned in our chat yesterday, this would be require much less caching if you simply reset the full buffer set. In this case it would be\n\n IASetVertexBuffers(0, gl::MAX_VERTEX_ATTRBIS, mCurrentBuffers, mCurrentVertexStrides, mCurrentVertexOffsets)\n\nThis would allow you to not cache mStartSlot and mNumBuffers.",
      "range": {
        "startLine": 440,
        "startChar": 0,
        "endLine": 442,
        "endChar": 75
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "11f7dc9a_a52a324d",
        "filename": "src/libANGLE/renderer/d3d/d3d11/InputLayoutCache.cpp",
        "patchSetId": 9
      },
      "lineNbr": 442,
      "author": {
        "id": 1115159
      },
      "writtenOn": "2016-02-03T18:40:18Z",
      "side": 1,
      "message": "I can\u0027t do that.  The crash on some mobile GPUs was due to specifying a non-exact buffer count.  The driver would attempt to peek at the other buffers because the count indicated that all were useful.  I have to cache these values to ensure I only send the correct size down.",
      "parentUuid": "91b82ca8_9b6c9b4b",
      "range": {
        "startLine": 440,
        "startChar": 0,
        "endLine": 442,
        "endChar": 75
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f183281b_4d1f0d9d",
        "filename": "src/libANGLE/renderer/d3d/d3d11/InputLayoutCache.cpp",
        "patchSetId": 9
      },
      "lineNbr": 442,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-02-04T14:11:40Z",
      "side": 1,
      "message": "This is very unforunate. Can you or explain exactly what the bug is, and what systems it is applied on? I don\u0027t recall any discussion of this bug or workaround - usually our workarounds are codified in Workarounds.h and have a different default behaviour. Note that the buffers should be contiguous and non-null starting from zero, so removing the start offset should be trivial. I\u0027d really like some confirmation here.",
      "parentUuid": "11f7dc9a_a52a324d",
      "range": {
        "startLine": 440,
        "startChar": 0,
        "endLine": 442,
        "endChar": 75
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "31c3005d_db358417",
        "filename": "src/libANGLE/renderer/d3d/d3d11/InputLayoutCache.cpp",
        "patchSetId": 9
      },
      "lineNbr": 442,
      "author": {
        "id": 1115159
      },
      "writtenOn": "2016-02-05T21:25:03Z",
      "side": 1,
      "message": "Issue 1176 has the details.  It took a while to debug this.  By tracking the number of buffers actually used, we could avoid special cases for individual drivers.  I am not sure workarounds is the correct thing here.",
      "parentUuid": "f183281b_4d1f0d9d",
      "range": {
        "startLine": 440,
        "startChar": 0,
        "endLine": 442,
        "endChar": 75
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f1308814_48a2736e",
        "filename": "src/libANGLE/renderer/d3d/d3d11/InputLayoutCache.cpp",
        "patchSetId": 9
      },
      "lineNbr": 453,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-02-03T15:34:18Z",
      "side": 1,
      "message": "you can probably just pass 0 for numIndicesPerInstance to disable this workaround, and avoid using both parameters",
      "range": {
        "startLine": 453,
        "startChar": 12,
        "endLine": 453,
        "endChar": 30
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "71c9f878_ca6f733e",
        "filename": "src/libANGLE/renderer/d3d/d3d11/InputLayoutCache.cpp",
        "patchSetId": 9
      },
      "lineNbr": 453,
      "author": {
        "id": 1115159
      },
      "writtenOn": "2016-02-03T18:40:18Z",
      "side": 1,
      "message": "I can\u0027t.  I need the data step rate to be recalculated and set in the input layout.  I mentioned below that numIndicesPerInstance is actually the count parameter passed through from the draw call.  Emulation supports instanced and non instanced rendering of points.  This value is never 0.  EmulationInstanceId of 1 tells me that I have entered the for-loop rendering for instanced rendered emulated points.",
      "parentUuid": "f1308814_48a2736e",
      "range": {
        "startLine": 453,
        "startChar": 12,
        "endLine": 453,
        "endChar": 30
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "116c3c47_e35372ba",
        "filename": "src/libANGLE/renderer/d3d/d3d11/InputLayoutCache.cpp",
        "patchSetId": 9
      },
      "lineNbr": 453,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-02-04T14:11:40Z",
      "side": 1,
      "message": "Let\u0027s revisit this after the rest of the comments are addressed, but I\u0027m hopeful we can fix this.",
      "parentUuid": "71c9f878_ca6f733e",
      "range": {
        "startLine": 453,
        "startChar": 12,
        "endLine": 453,
        "endChar": 30
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f1308814_0807cb34",
        "filename": "src/libANGLE/renderer/d3d/d3d11/InputLayoutCache.cpp",
        "patchSetId": 9
      },
      "lineNbr": 612,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-02-03T15:34:18Z",
      "side": 1,
      "message": "can\u0027t this check be numIndicesPerInstance !\u003d 0, allow you to skip caching the bool?",
      "range": {
        "startLine": 612,
        "startChar": 24,
        "endLine": 612,
        "endChar": 49
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5116b490_1f255b54",
        "filename": "src/libANGLE/renderer/d3d/d3d11/InputLayoutCache.cpp",
        "patchSetId": 9
      },
      "lineNbr": 612,
      "author": {
        "id": 1115159
      },
      "writtenOn": "2016-02-03T18:40:18Z",
      "side": 1,
      "message": "No.  The value of numIndicesPerInstance is the count parameter specified in the draw call.  Points emulation requires different Step rates depending if it is a instanced rendered call or non instanced rendered call.  I pass through count which becomes the new step rate in instanced rendering calls.  I needed an indicator to ensure that the data step rate is 1 for non instanced rendering and the \u0027count\u0027 for instanced rendering.",
      "parentUuid": "f1308814_0807cb34",
      "range": {
        "startLine": 612,
        "startChar": 24,
        "endLine": 612,
        "endChar": 49
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f1988891_82501a5c",
        "filename": "src/libANGLE/renderer/d3d/d3d11/InputLayoutCache.cpp",
        "patchSetId": 9
      },
      "lineNbr": 612,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-02-04T14:11:40Z",
      "side": 1,
      "message": "Same comment as above.",
      "parentUuid": "5116b490_1f255b54",
      "range": {
        "startLine": 612,
        "startChar": 24,
        "endLine": 612,
        "endChar": 49
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b1b530ae_ee1f1b48",
        "filename": "src/libANGLE/renderer/d3d/d3d11/Renderer11.cpp",
        "patchSetId": 9
      },
      "lineNbr": 1713,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-02-03T15:34:18Z",
      "side": 1,
      "message": "you can compute the correct value for an indexed or non-indexed call here, no? See comment below.",
      "range": {
        "startLine": 1713,
        "startChar": 63,
        "endLine": 1713,
        "endChar": 68
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "31c3005d_68966bc3",
        "filename": "src/libANGLE/renderer/d3d/d3d11/Renderer11.cpp",
        "patchSetId": 9
      },
      "lineNbr": 1713,
      "author": {
        "id": 1115159
      },
      "writtenOn": "2016-02-03T18:40:18Z",
      "side": 1,
      "message": "Not that I can see.  I would need translatedIndexData for drawElements calls and that isn\u0027t provided.  Are you suggesting that I attempt to plumb that value all the way through?",
      "parentUuid": "b1b530ae_ee1f1b48",
      "range": {
        "startLine": 1713,
        "startChar": 63,
        "endLine": 1713,
        "endChar": 68
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "116c3c47_c35676ad",
        "filename": "src/libANGLE/renderer/d3d/d3d11/Renderer11.cpp",
        "patchSetId": 9
      },
      "lineNbr": 1713,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-02-04T14:11:40Z",
      "side": 1,
      "message": "reference from comment below",
      "range": {
        "startLine": 1713,
        "startChar": 63,
        "endLine": 1713,
        "endChar": 68
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f183281b_6d24d1ee",
        "filename": "src/libANGLE/renderer/d3d/d3d11/Renderer11.cpp",
        "patchSetId": 9
      },
      "lineNbr": 1713,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-02-04T14:11:40Z",
      "side": 1,
      "message": "I didn\u0027t notice this. The design behind the Translated index info and source info is a complete failure, please merge the two classes and just use TranslatedIndexData. Give that this could allow you to probably remove the hacky \"0\" update calls and remove a ton of caching it\u0027s worth it.",
      "parentUuid": "31c3005d_68966bc3",
      "range": {
        "startLine": 1713,
        "startChar": 63,
        "endLine": 1713,
        "endChar": 68
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "715f38cc_89705de2",
        "filename": "src/libANGLE/renderer/d3d/d3d11/Renderer11.cpp",
        "patchSetId": 9
      },
      "lineNbr": 1713,
      "author": {
        "id": 1115159
      },
      "writtenOn": "2016-02-05T21:25:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f183281b_6d24d1ee",
      "range": {
        "startLine": 1713,
        "startChar": 63,
        "endLine": 1713,
        "endChar": 68
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "91b82ca8_16a2c2bb",
        "filename": "src/libANGLE/renderer/d3d/d3d11/Renderer11.cpp",
        "patchSetId": 9
      },
      "lineNbr": 1982,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-02-03T15:34:18Z",
      "side": 1,
      "message": "This is a bit confusing - here the first draw call will be using \u0027count\u0027 instead of \u0027elementsToRender\u0027 for \u0027numElementsPerInstance\u0027 in applyVertexBuffers. Is that correct?",
      "range": {
        "startLine": 1982,
        "startChar": 28,
        "endLine": 1982,
        "endChar": 48
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "31c3005d_084ed745",
        "filename": "src/libANGLE/renderer/d3d/d3d11/Renderer11.cpp",
        "patchSetId": 9
      },
      "lineNbr": 1982,
      "author": {
        "id": 1115159
      },
      "writtenOn": "2016-02-03T18:40:18Z",
      "side": 1,
      "message": "All of the draw calls in this emulated path use elementsToRender.  Count would not be the correct param to use here.  For a pure instanced call (no emulation), count would work.  I debugged through the calls into applyVertexBuffers and discovered that count is not used directly.  drawElements calls always pull out the indexInfo.indexRange.vertexCount for use in applyVertexBuffers.  This code path matches that code path. Look at \u0027RendererD3D::genericDrawElements( )\u0027 and you will see what I am talking about.",
      "parentUuid": "91b82ca8_16a2c2bb",
      "range": {
        "startLine": 1982,
        "startChar": 28,
        "endLine": 1982,
        "endChar": 48
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d186242d_2979eda4",
        "filename": "src/libANGLE/renderer/d3d/d3d11/Renderer11.cpp",
        "patchSetId": 9
      },
      "lineNbr": 1982,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-02-04T14:11:40Z",
      "side": 1,
      "message": "Sorry, I don\u0027t understand what you\u0027re saying. This draw call is preceded by the first input layout cache apply, which uses the \u0027count\u0027 from the draw call as the parameter, see the reference. This is a different value than will be used below in the updateVertexOffsets call.",
      "parentUuid": "31c3005d_084ed745",
      "range": {
        "startLine": 1982,
        "startChar": 28,
        "endLine": 1982,
        "endChar": 48
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "71c9f878_00dce792",
        "filename": "src/libANGLE/renderer/d3d/d3d11/Renderer11.cpp",
        "patchSetId": 9
      },
      "lineNbr": 1982,
      "author": {
        "id": 1115159
      },
      "writtenOn": "2016-02-05T21:25:03Z",
      "side": 1,
      "message": "In RendererD3D is where you can find the case I am talking about.  For genericDrawArrays, count is used directly as it is the count of the things to render.  For genericDrawElements this is not the case. Count is used when applying the index buffer (which is not used for emulation) and \u0027vertexCount\u0027 is extracted from indexInfo.  DrawElements is somehow a special case where I need to not use count for looping here.\n\nFrom RenderD3D::genericDrawElements:\n\nTranslatedIndexData indexInfo;\n    indexInfo.indexRange \u003d indexRange;\n\n    SourceIndexData sourceIndexInfo;\n\n    error \u003d applyIndexBuffer(data, indices, count, mode, type, \u0026indexInfo, \u0026sourceIndexInfo);\n    if (error.isError())\n    {\n        return error;\n    }\n\n    applyTransformFeedbackBuffers(*data.state);\n    // Transform feedback is not allowed for DrawElements, this error should have been caught at the API validation\n    // layer.\n    ASSERT(!data.state-\u003eisTransformFeedbackActiveUnpaused());\n\n    size_t vertexCount \u003d indexInfo.indexRange.vertexCount();\n    error \u003d applyVertexBuffer(*data.state, mode, static_cast\u003cGLsizei\u003e(indexInfo.indexRange.start),\n                              static_cast\u003cGLsizei\u003e(vertexCount), instances, \u0026sourceIndexInfo);\n    if (error.isError())\n    {\n        return error;\n    }\n\n    error \u003d applyTextures(data);",
      "parentUuid": "d186242d_2979eda4",
      "range": {
        "startLine": 1982,
        "startChar": 28,
        "endLine": 1982,
        "endChar": 48
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "31a94060_aa2fcbc4",
        "filename": "src/tests/gl_tests/InstancingTest.cpp",
        "patchSetId": 9
      },
      "lineNbr": 24,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-02-03T15:34:18Z",
      "side": 1,
      "message": "nit: override instead of virtual",
      "range": {
        "startLine": 24,
        "startChar": 4,
        "endLine": 24,
        "endChar": 11
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3115c084_78a0e9c2",
        "filename": "src/tests/gl_tests/InstancingTest.cpp",
        "patchSetId": 9
      },
      "lineNbr": 24,
      "author": {
        "id": 1115159
      },
      "writtenOn": "2016-02-03T18:40:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "31a94060_aa2fcbc4",
      "range": {
        "startLine": 24,
        "startChar": 4,
        "endLine": 24,
        "endChar": 11
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "51c15418_417642de",
        "filename": "src/tests/gl_tests/InstancingTest.cpp",
        "patchSetId": 9
      },
      "lineNbr": 26,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-02-03T15:34:18Z",
      "side": 1,
      "message": "the !\u003d 0 check is redundant, you can just use glDeleteProgram(0), which will no op.",
      "range": {
        "startLine": 26,
        "startChar": 8,
        "endLine": 26,
        "endChar": 26
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5116b490_7a71fde3",
        "filename": "src/tests/gl_tests/InstancingTest.cpp",
        "patchSetId": 9
      },
      "lineNbr": 26,
      "author": {
        "id": 1115159
      },
      "writtenOn": "2016-02-03T18:40:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "51c15418_417642de",
      "range": {
        "startLine": 26,
        "startChar": 8,
        "endLine": 26,
        "endChar": 26
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "31d060e4_95e786ff",
        "filename": "src/tests/gl_tests/InstancingTest.cpp",
        "patchSetId": 9
      },
      "lineNbr": 32,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-02-03T15:34:18Z",
      "side": 1,
      "message": "nit: change the virtuals to override in the other members",
      "range": {
        "startLine": 32,
        "startChar": 4,
        "endLine": 32,
        "endChar": 11
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5116b490_5a76c1dd",
        "filename": "src/tests/gl_tests/InstancingTest.cpp",
        "patchSetId": 9
      },
      "lineNbr": 32,
      "author": {
        "id": 1115159
      },
      "writtenOn": "2016-02-03T18:40:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "31d060e4_95e786ff",
      "range": {
        "startLine": 32,
        "startChar": 4,
        "endLine": 32,
        "endChar": 11
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "31d060e4_b5e402fb",
        "filename": "src/tests/gl_tests/InstancingTest.cpp",
        "patchSetId": 9
      },
      "lineNbr": 107,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-02-03T15:34:18Z",
      "side": 1,
      "message": "return void",
      "range": {
        "startLine": 107,
        "startChar": 4,
        "endLine": 107,
        "endChar": 8
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f127a8f2_39c15b5d",
        "filename": "src/tests/gl_tests/InstancingTest.cpp",
        "patchSetId": 9
      },
      "lineNbr": 107,
      "author": {
        "id": 1115159
      },
      "writtenOn": "2016-02-03T18:40:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "31d060e4_b5e402fb",
      "range": {
        "startLine": 107,
        "startChar": 4,
        "endLine": 107,
        "endChar": 8
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b1a450bb_102524ed",
        "filename": "src/tests/gl_tests/InstancingTest.cpp",
        "patchSetId": 9
      },
      "lineNbr": 122,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-02-03T15:34:18Z",
      "side": 1,
      "message": "ASSERT_NE(0u, mProgram)",
      "range": {
        "startLine": 119,
        "startChar": 8,
        "endLine": 122,
        "endChar": 9
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "11f7dc9a_a01fc048",
        "filename": "src/tests/gl_tests/InstancingTest.cpp",
        "patchSetId": 9
      },
      "lineNbr": 122,
      "author": {
        "id": 1115159
      },
      "writtenOn": "2016-02-03T18:40:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b1a450bb_102524ed",
      "range": {
        "startLine": 119,
        "startChar": 8,
        "endLine": 122,
        "endChar": 9
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "11a43c86_f75368ec",
        "filename": "src/tests/gl_tests/InstancingTest.cpp",
        "patchSetId": 9
      },
      "lineNbr": 133,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-02-03T15:34:18Z",
      "side": 1,
      "message": "remove this",
      "range": {
        "startLine": 133,
        "startChar": 7,
        "endLine": 133,
        "endChar": 20
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3115c084_b889c151",
        "filename": "src/tests/gl_tests/InstancingTest.cpp",
        "patchSetId": 9
      },
      "lineNbr": 133,
      "author": {
        "id": 1115159
      },
      "writtenOn": "2016-02-03T18:40:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "11a43c86_f75368ec",
      "range": {
        "startLine": 133,
        "startChar": 7,
        "endLine": 133,
        "endChar": 20
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f1308814_88ac7b5f",
        "filename": "src/tests/gl_tests/InstancingTest.cpp",
        "patchSetId": 9
      },
      "lineNbr": 136,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-02-03T15:34:18Z",
      "side": 1,
      "message": "same comments about the return value here",
      "range": {
        "startLine": 136,
        "startChar": 4,
        "endLine": 136,
        "endChar": 8
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "31fce07c_0606aeff",
        "filename": "src/tests/gl_tests/InstancingTest.cpp",
        "patchSetId": 9
      },
      "lineNbr": 136,
      "author": {
        "id": 1115159
      },
      "writtenOn": "2016-02-03T18:40:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f1308814_88ac7b5f",
      "range": {
        "startLine": 136,
        "startChar": 4,
        "endLine": 136,
        "endChar": 8
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "31a94060_4a8e571e",
        "filename": "src/tests/gl_tests/InstancingTest.cpp",
        "patchSetId": 9
      },
      "lineNbr": 363,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-02-03T15:34:18Z",
      "side": 1,
      "message": "setupDrawArraysTest(vs);",
      "range": {
        "startLine": 363,
        "startChar": 4,
        "endLine": 363,
        "endChar": 28
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f127a8f2_19c61775",
        "filename": "src/tests/gl_tests/InstancingTest.cpp",
        "patchSetId": 9
      },
      "lineNbr": 363,
      "author": {
        "id": 1115159
      },
      "writtenOn": "2016-02-03T18:40:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "31a94060_4a8e571e",
      "range": {
        "startLine": 363,
        "startChar": 4,
        "endLine": 363,
        "endChar": 28
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "71af3862_0c5ddbfb",
        "filename": "src/tests/gl_tests/InstancingTest.cpp",
        "patchSetId": 9
      },
      "lineNbr": 369,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-02-03T15:34:18Z",
      "side": 1,
      "message": "can we remove the parameter for program?",
      "range": {
        "startLine": 369,
        "startChar": 22,
        "endLine": 369,
        "endChar": 30
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "31fce07c_6610522c",
        "filename": "src/tests/gl_tests/InstancingTest.cpp",
        "patchSetId": 9
      },
      "lineNbr": 369,
      "author": {
        "id": 1115159
      },
      "writtenOn": "2016-02-03T18:40:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "71af3862_0c5ddbfb",
      "range": {
        "startLine": 369,
        "startChar": 22,
        "endLine": 369,
        "endChar": 30
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "51c15418_a164c623",
        "filename": "src/tests/gl_tests/InstancingTest.cpp",
        "patchSetId": 9
      },
      "lineNbr": 381,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-02-03T15:34:18Z",
      "side": 1,
      "message": "can we filter by windows version here?",
      "range": {
        "startLine": 381,
        "startChar": 4,
        "endLine": 381,
        "endChar": 32
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b1a450bb_302a28bc",
        "filename": "src/tests/gl_tests/InstancingTest.cpp",
        "patchSetId": 9
      },
      "lineNbr": 384,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-02-03T15:34:18Z",
      "side": 1,
      "message": "same comment as above",
      "range": {
        "startLine": 384,
        "startChar": 4,
        "endLine": 384,
        "endChar": 13
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5116b490_5adfe1fb",
        "filename": "src/tests/gl_tests/InstancingTest.cpp",
        "patchSetId": 9
      },
      "lineNbr": 384,
      "author": {
        "id": 1115159
      },
      "writtenOn": "2016-02-03T18:40:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b1a450bb_302a28bc",
      "range": {
        "startLine": 384,
        "startChar": 4,
        "endLine": 384,
        "endChar": 13
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "31d060e4_55135eab",
        "filename": "src/tests/gl_tests/InstancingTest.cpp",
        "patchSetId": 9
      },
      "lineNbr": 386,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-02-03T15:34:18Z",
      "side": 1,
      "message": "make this mVertexBuffer as part of the the InstancingPointsTest fixture, like mProgram",
      "range": {
        "startLine": 386,
        "startChar": 11,
        "endLine": 386,
        "endChar": 23
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "31fce07c_c62dc669",
        "filename": "src/tests/gl_tests/InstancingTest.cpp",
        "patchSetId": 9
      },
      "lineNbr": 386,
      "author": {
        "id": 1115159
      },
      "writtenOn": "2016-02-03T18:40:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "31d060e4_55135eab",
      "range": {
        "startLine": 386,
        "startChar": 11,
        "endLine": 386,
        "endChar": 23
      },
      "revId": "1f44b2c96062da72130a5bdaf28f380c06aa0fd7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}