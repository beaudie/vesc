{
  "comments": [
    {
      "key": {
        "uuid": "4b292cc8_7d7d51fc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2020-08-19T23:03:43Z",
      "side": 1,
      "message": "tim, its a simple resolution but can you upload a patchset with the merge conflict resolved so cherry-pick can be easy?",
      "revId": "b58a153e0eb3ecf2d3433dfd1139310a1e4be4a0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c27a8b86_c4218df8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2020-08-19T23:17:10Z",
      "side": 1,
      "message": "FYI - tim, when i try to build the debug libs with this patch i get the following error -\n\n$ ninja -C out/Debug/\nninja: Entering directory `out/Debug/\u0027\n[1/1] LINK(DLL) absl.dll absl.dll.lib absl.dll.pdb\nFAILED: absl.dll absl.dll.lib absl.dll.pdb\nninja -t msvc -e environment.x64 -- ..\\..\\third_party\\llvm-build\\Release+Asserts\\bin\\lld-link.exe /nologo -libpath:..\\..\\third_party\\llvm-build\\Release+Asserts\\lib\\clang\\12.0.0\\lib\\windows \"-libpath:..\\..\\..\\..\\..\\..\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Professional\\VC\\Tools\\MSVC\\14.27.29110\\ATLMFC\\lib\\x64\" \"-libpath:..\\..\\..\\..\\..\\..\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Professional\\VC\\Tools\\MSVC\\14.27.29110\\lib\\x64\" \"-libpath:..\\..\\..\\..\\..\\..\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.8\\lib\\um\\x64\" \"-libpath:..\\..\\..\\..\\..\\..\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.19041.0\\ucrt\\x64\" \"-libpath:..\\..\\..\\..\\..\\..\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.19041.0\\um\\x64\" /IMPLIB:./absl.dll.lib /DLL /OUT:./absl.dll /PDB:./absl.dll.pdb @./absl.dll.rsp\nlld-link: error: \u003croot\u003e: undefined symbol: public: __cdecl absl::Condition::Condition\u003cstruct std::__1::atomic\u003cbool\u003e const\u003e(bool (__cdecl *)(struct std::__1::atomic\u003cbool\u003e const *), struct std::__1::atomic\u003cbool\u003e const *)\nlld-link: error: \u003croot\u003e: undefined symbol: public: __cdecl std::__1::__compressed_pair\u003cclass absl::time_internal::cctz::time_zone::Impl const ***, class std::__1::allocator\u003cclass absl::time_internal::cctz::time_zone::Impl const **\u003e\u003e::__compressed_pair\u003cclass absl::time_internal::cctz::time_zone::Impl const ***, class std::__1::allocator\u003cclass absl::time_internal::cctz::time_zone::Impl const **\u003e\u003e\u003cstd::nullptr_t, 1\u003e(std::nullptr_t \u0026\u0026)\nlld-link: error: \u003croot\u003e: undefined symbol: public: __cdecl std::__1::__compressed_pair\u003cstruct absl::cord_internal::CordRep **, class std::__1::allocator\u003cstruct absl::cord_internal::CordRep *\u003e\u003e::__compressed_pair\u003cstruct absl::cord_internal::CordRep **, class std::__1::allocator\u003cstruct absl::cord_internal::CordRep *\u003e\u003e\u003cstd::nullptr_t, 1\u003e(std::nullptr_t \u0026\u0026)\nlld-link: error: \u003croot\u003e: undefined symbol: public: __cdecl std::__1::__compressed_pair\u003cstruct absl::str_format_internal::ParsedFormatBase::ConversionItem *, class std::__1::allocator\u003cstruct absl::str_format_internal::ParsedFormatBase::ConversionItem\u003e\u003e::__compressed_pair\u003cstruct absl::str_format_internal::ParsedFormatBase::ConversionItem *, class std::__1::allocator\u003cstruct absl::str_format_internal::ParsedFormatBase::ConversionItem\u003e\u003e\u003cstd::nullptr_t, 1\u003e(std::nullptr_t \u0026\u0026)\nlld-link: error: \u003croot\u003e: undefined symbol: public: __cdecl std::__1::__compressed_pair\u003cstruct absl::time_internal::cctz::Transition *, class std::__1::allocator\u003cstruct absl::time_internal::cctz::Transition\u003e\u003e::__compressed_pair\u003cstruct absl::time_internal::cctz::Transition *, class std::__1::allocator\u003cstruct absl::time_internal::cctz::Transition\u003e\u003e\u003cstd::nullptr_t, 1\u003e(std::nullptr_t \u0026\u0026)\nlld-link: error: \u003croot\u003e: undefined symbol: public: __cdecl std::__1::__compressed_pair\u003cstruct absl::time_internal::cctz::TransitionType *, class std::__1::allocator\u003cstruct absl::time_internal::cctz::TransitionType\u003e\u003e::__compressed_pair\u003cstruct absl::time_internal::cctz::TransitionType *, class std::__1::allocator\u003cstruct absl::time_internal::cctz::TransitionType\u003e\u003e\u003cstd::nullptr_t, 1\u003e(std::nullptr_t \u0026\u0026)\nlld-link: error: \u003croot\u003e: undefined symbol: public: __cdecl std::__1::__compressed_pair\u003cstruct absl::strings_internal::ViableSubstitution *, class std::__1::allocator\u003cstruct absl::strings_internal::ViableSubstitution\u003e\u003e::__compressed_pair\u003cstruct absl::strings_internal::ViableSubstitution *, class std::__1::allocator\u003cstruct absl::strings_internal::ViableSubstitution\u003e\u003e\u003cstd::nullptr_t, 1\u003e(std::nullptr_t \u0026\u0026)\nlld-link: error: \u003croot\u003e: undefined symbol: public: __cdecl std::__1::__compressed_pair\u003cclass absl::str_format_internal::FormatArgImpl *, class std::__1::allocator\u003cclass absl::str_format_internal::FormatArgImpl\u003e\u003e::__compressed_pair\u003cclass absl::str_format_internal::FormatArgImpl *, class std::__1::allocator\u003cclass absl::str_format_internal::FormatArgImpl\u003e\u003e\u003cstd::nullptr_t, 1\u003e(std::nullptr_t \u0026\u0026)\nlld-link: error: \u003croot\u003e: undefined symbol: public: __cdecl std::__1::__compressed_pair\u003cclass absl::time_internal::cctz::time_zone::Impl const ***, class std::__1::allocator\u003cclass absl::time_internal::cctz::time_zone::Impl const **\u003e \u0026\u003e::__compressed_pair\u003cclass absl::time_internal::cctz::time_zone::Impl const ***, class std::__1::allocator\u003cclass absl::time_internal::cctz::time_zone::Impl const **\u003e \u0026\u003e\u003cstd::nullptr_t, class std::__1::allocator\u003cclass absl::time_internal::cctz::time_zone::Impl const **\u003e \u0026\u003e(std::nullptr_t \u0026\u0026, class std::__1::allocator\u003cclass absl::time_internal::cctz::time_zone::Impl const **\u003e \u0026)\nlld-link: error: \u003croot\u003e: undefined symbol: public: __cdecl std::__1::__compressed_pair\u003cstruct absl::cord_internal::CordRep **, class std::__1::allocator\u003cstruct absl::cord_internal::CordRep *\u003e \u0026\u003e::__compressed_pair\u003cstruct absl::cord_internal::CordRep **, class std::__1::allocator\u003cstruct absl::cord_internal::CordRep *\u003e \u0026\u003e\u003cstd::nullptr_t, class std::__1::allocator\u003cstruct absl::cord_internal::CordRep *\u003e \u0026\u003e(std::nullptr_t \u0026\u0026, class std::__1::allocator\u003cstruct absl::cord_internal::CordRep *\u003e \u0026)\nlld-link: error: \u003croot\u003e: undefined symbol: public: __cdecl std::__1::__compressed_pair\u003cstruct absl::str_format_internal::ParsedFormatBase::ConversionItem *, class std::__1::allocator\u003cstruct absl::str_format_internal::ParsedFormatBase::ConversionItem\u003e \u0026\u003e::__compressed_pair\u003cstruct absl::str_format_internal::ParsedFormatBase::ConversionItem *, class std::__1::allocator\u003cstruct absl::str_format_internal::ParsedFormatBase::ConversionItem\u003e \u0026\u003e\u003cstd::nullptr_t, class std::__1::allocator\u003cstruct absl::str_format_internal::ParsedFormatBase::ConversionItem\u003e \u0026\u003e(std::nullptr_t \u0026\u0026, class std::__1::allocator\u003cstruct absl::str_format_internal::ParsedFormatBase::ConversionItem\u003e \u0026)\nlld-link: error: \u003croot\u003e: undefined symbol: public: __cdecl std::__1::__compressed_pair\u003cstruct absl::time_internal::cctz::Transition *, class std::__1::allocator\u003cstruct absl::time_internal::cctz::Transition\u003e \u0026\u003e::__compressed_pair\u003cstruct absl::time_internal::cctz::Transition *, class std::__1::allocator\u003cstruct absl::time_internal::cctz::Transition\u003e \u0026\u003e\u003cstd::nullptr_t, class std::__1::allocator\u003cstruct absl::time_internal::cctz::Transition\u003e \u0026\u003e(std::nullptr_t \u0026\u0026, class std::__1::allocator\u003cstruct absl::time_internal::cctz::Transition\u003e \u0026)\nlld-link: error: \u003croot\u003e: undefined symbol: public: __cdecl std::__1::__compressed_pair\u003cstruct absl::time_internal::cctz::TransitionType *, class std::__1::allocator\u003cstruct absl::time_internal::cctz::TransitionType\u003e \u0026\u003e::__compressed_pair\u003cstruct absl::time_internal::cctz::TransitionType *, class std::__1::allocator\u003cstruct absl::time_internal::cctz::TransitionType\u003e \u0026\u003e\u003cstd::nullptr_t, class std::__1::allocator\u003cstruct absl::time_internal::cctz::TransitionType\u003e \u0026\u003e(std::nullptr_t \u0026\u0026, class std::__1::allocator\u003cstruct absl::time_internal::cctz::TransitionType\u003e \u0026)\nlld-link: error: \u003croot\u003e: undefined symbol: public: __cdecl std::__1::__compressed_pair\u003cstruct absl::strings_internal::ViableSubstitution *, class std::__1::allocator\u003cstruct absl::strings_internal::ViableSubstitution\u003e \u0026\u003e::__compressed_pair\u003cstruct absl::strings_internal::ViableSubstitution *, class std::__1::allocator\u003cstruct absl::strings_internal::ViableSubstitution\u003e \u0026\u003e\u003cstd::nullptr_t, class std::__1::allocator\u003cstruct absl::strings_internal::ViableSubstitution\u003e \u0026\u003e(std::nullptr_t \u0026\u0026, class std::__1::allocator\u003cstruct absl::strings_internal::ViableSubstitution\u003e \u0026)\nlld-link: error: \u003croot\u003e: undefined symbol: public: __cdecl std::__1::__compressed_pair_elem\u003cclass absl::time_internal::cctz::time_zone::Impl const ***, 0, 0\u003e::__compressed_pair_elem\u003cclass absl::time_internal::cctz::time_zone::Impl const ***, 0, 0\u003e\u003cstd::nullptr_t, void\u003e(std::nullptr_t \u0026\u0026)\nlld-link: error: \u003croot\u003e: undefined symbol: public: __cdecl std::__1::__compressed_pair_elem\u003cstruct absl::cord_internal::CordRep **, 0, 0\u003e::__compressed_pair_elem\u003cstruct absl::cord_internal::CordRep **, 0, 0\u003e\u003cstd::nullptr_t, void\u003e(std::nullptr_t \u0026\u0026)\nlld-link: error: \u003croot\u003e: undefined symbol: public: __cdecl std::__1::__compressed_pair_elem\u003cstruct absl::str_format_internal::ParsedFormatBase::ConversionItem *, 0, 0\u003e::__compressed_pair_elem\u003cstruct absl::str_format_internal::ParsedFormatBase::ConversionItem *, 0, 0\u003e\u003cstd::nullptr_t, void\u003e(std::nullptr_t \u0026\u0026)\nlld-link: error: \u003croot\u003e: undefined symbol: public: __cdecl std::__1::__compressed_pair_elem\u003cstruct absl::time_internal::cctz::Transition *, 0, 0\u003e::__compressed_pair_elem\u003cstruct absl::time_internal::cctz::Transition *, 0, 0\u003e\u003cstd::nullptr_t, void\u003e(std::nullptr_t \u0026\u0026)\nlld-link: error: \u003croot\u003e: undefined symbol: public: __cdecl std::__1::__compressed_pair_elem\u003cstruct absl::time_internal::cctz::TransitionType *, 0, 0\u003e::__compressed_pair_elem\u003cstruct absl::time_internal::cctz::TransitionType *, 0, 0\u003e\u003cstd::nullptr_t, void\u003e(std::nullptr_t \u0026\u0026)\nlld-link: error: \u003croot\u003e: undefined symbol: public: __cdecl std::__1::__compressed_pair_elem\u003cstruct absl::strings_internal::ViableSubstitution *, 0, 0\u003e::__compressed_pair_elem\u003cstruct absl::strings_internal::ViableSubstitution *, 0, 0\u003e\u003cstd::nullptr_t, void\u003e(std::nullptr_t \u0026\u0026)\nlld-link: error: too many errors emitted, stopping now (use /errorlimit:0 to see all errors)\nninja: build stopped: subcommand failed.\n\n\n\nthis is my debug build\u0027s args.gn -\n\n$ cat out/Debug/args.gn\n# This file has been auto-generated for building ANGLE with default settings!\n# If you edit this file, your changes will not be overwritten.\n# If you delete this file, a new one will be generated on next build.\n\n# Target information.\ntarget_cpu \u003d \"x64\"\nis_debug \u003d true\nis_clang \u003d true\nsymbol_level \u003d 2\n\n# Backends to build, we want all of them for sanity purposes\nangle_enable_vulkan \u003d true\nangle_enable_gl \u003d true\nangle_enable_gl_null \u003d true\n\n# Shader support.\nangle_enable_glsl \u003d true\nangle_enable_essl \u003d true\n\n# Only enable validation layers by default in debug\nangle_enable_vulkan_validation_layers \u003d true\n\n# Always build dEQP test suite.\nbuild_angle_deqp_tests \u003d true\n\n# Windows specific backends and shader support.\nangle_enable_d3d9 \u003d true\nangle_enable_d3d11 \u003d true\nangle_enable_hlsl \u003d true",
      "revId": "b58a153e0eb3ecf2d3433dfd1139310a1e4be4a0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}