{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "01d735c7_6f11a7fd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2021-11-18T15:41:11Z",
      "side": 1,
      "message": "Round two of GLES1 optimizations.  Things are looking pretty good!",
      "revId": "bcdb05e0da18205fd6dfbdb579cc6b8e542060cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ec286faa_8076ed21",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-11-18T17:31:33Z",
      "side": 1,
      "message": "LGTM except wondering about the 300 second timeout change.",
      "revId": "bcdb05e0da18205fd6dfbdb579cc6b8e542060cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2c4dc9e1_161d3f69",
        "filename": "infra/specs/test_suites.pyl",
        "patchSetId": 15
      },
      "lineNbr": 637,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-11-18T17:31:33Z",
      "side": 1,
      "message": "what\u0027s up with this? should be a split change?",
      "range": {
        "startLine": 637,
        "startChar": 26,
        "endLine": 637,
        "endChar": 29
      },
      "revId": "bcdb05e0da18205fd6dfbdb579cc6b8e542060cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b5961ca3_801a0f64",
        "filename": "infra/specs/test_suites.pyl",
        "patchSetId": 15
      },
      "lineNbr": 637,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2021-11-18T17:44:35Z",
      "side": 1,
      "message": "Yeah, we can split it out.  I kept it together for testing during development.  The timeout before was pretty aggressive (40 seconds).  With the way the GLES1 conformance tests grind through each possible value and render once, it is a worst case scenario for this change, so it is a bit slower.  From checking the bot output, it is taking 150 seconds, so I just but a 5 minutes timeout on it.  If there\u0027s a better solution (like more sharding or something), happy to make a different change.",
      "parentUuid": "2c4dc9e1_161d3f69",
      "range": {
        "startLine": 637,
        "startChar": 26,
        "endLine": 637,
        "endChar": 29
      },
      "revId": "bcdb05e0da18205fd6dfbdb579cc6b8e542060cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "001453f9_7fa846fe",
        "filename": "infra/specs/test_suites.pyl",
        "patchSetId": 15
      },
      "lineNbr": 637,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2021-11-19T04:55:32Z",
      "side": 1,
      "message": "Okay, the timeout increase is its own CL now.",
      "parentUuid": "b5961ca3_801a0f64",
      "range": {
        "startLine": 637,
        "startChar": 26,
        "endLine": 637,
        "endChar": 29
      },
      "revId": "bcdb05e0da18205fd6dfbdb579cc6b8e542060cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bec7c4b4_47118819",
        "filename": "src/libANGLE/GLES1Renderer.cpp",
        "patchSetId": 15
      },
      "lineNbr": 188,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2021-11-18T17:44:35Z",
      "side": 1,
      "message": "ref",
      "range": {
        "startLine": 188,
        "startChar": 4,
        "endLine": 188,
        "endChar": 11
      },
      "revId": "bcdb05e0da18205fd6dfbdb579cc6b8e542060cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "abcbb0f1_23733b8c",
        "filename": "src/libANGLE/GLES1Renderer.cpp",
        "patchSetId": 15
      },
      "lineNbr": 188,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2021-11-19T04:55:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bec7c4b4_47118819",
      "range": {
        "startLine": 188,
        "startChar": 4,
        "endLine": 188,
        "endChar": 11
      },
      "revId": "bcdb05e0da18205fd6dfbdb579cc6b8e542060cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e06b685f_e6c148fe",
        "filename": "src/libANGLE/GLES1Renderer.h",
        "patchSetId": 15
      },
      "lineNbr": 50,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-11-18T17:31:33Z",
      "side": 1,
      "message": "nit: static doesn\u0027t really do anything in the header, you can omit it",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 50,
        "endChar": 6
      },
      "revId": "bcdb05e0da18205fd6dfbdb579cc6b8e542060cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a188c12b_4b5edaa9",
        "filename": "src/libANGLE/GLES1Renderer.h",
        "patchSetId": 15
      },
      "lineNbr": 50,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2021-11-19T04:55:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e06b685f_e6c148fe",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 50,
        "endChar": 6
      },
      "revId": "bcdb05e0da18205fd6dfbdb579cc6b8e542060cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "89a35958_95157ade",
        "filename": "src/libANGLE/GLES1Renderer.h",
        "patchSetId": 15
      },
      "lineNbr": 59,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-11-18T17:31:33Z",
      "side": 1,
      "message": "nit: suggest you lift the types out of the class",
      "range": {
        "startLine": 59,
        "startChar": 10,
        "endLine": 59,
        "endChar": 33
      },
      "revId": "bcdb05e0da18205fd6dfbdb579cc6b8e542060cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d8535059_23a72535",
        "filename": "src/libANGLE/GLES1Renderer.h",
        "patchSetId": 15
      },
      "lineNbr": 59,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2021-11-19T04:55:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "89a35958_95157ade",
      "range": {
        "startLine": 59,
        "startChar": 10,
        "endLine": 59,
        "endChar": 33
      },
      "revId": "bcdb05e0da18205fd6dfbdb579cc6b8e542060cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7cbec307_d8a2614d",
        "filename": "src/libANGLE/GLES1Renderer.h",
        "patchSetId": 15
      },
      "lineNbr": 295,
      "author": {
        "id": 1175714
      },
      "writtenOn": "2021-11-18T17:21:34Z",
      "side": 1,
      "message": "Should this be a fixed size to be platform size_t size independent?",
      "range": {
        "startLine": 295,
        "startChar": 19,
        "endLine": 295,
        "endChar": 25
      },
      "revId": "bcdb05e0da18205fd6dfbdb579cc6b8e542060cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1db336c8_1edfbb35",
        "filename": "src/libANGLE/GLES1Renderer.h",
        "patchSetId": 15
      },
      "lineNbr": 295,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-11-18T17:31:33Z",
      "side": 1,
      "message": "+1\n\nalso I suggest you make this a joined struct and use a single array. also, what does the index represent here?",
      "parentUuid": "7cbec307_d8a2614d",
      "range": {
        "startLine": 295,
        "startChar": 19,
        "endLine": 295,
        "endChar": 25
      },
      "revId": "bcdb05e0da18205fd6dfbdb579cc6b8e542060cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "650c833c_20921539",
        "filename": "src/libANGLE/GLES1Renderer.h",
        "patchSetId": 15
      },
      "lineNbr": 295,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2021-11-18T17:44:35Z",
      "side": 1,
      "message": "That\u0027s the type we get back from angle::ComputeGenericHash(), see ref.  We index with the hash of GLES1ShaderStates.",
      "parentUuid": "7cbec307_d8a2614d",
      "range": {
        "startLine": 295,
        "startChar": 19,
        "endLine": 295,
        "endChar": 25
      },
      "revId": "bcdb05e0da18205fd6dfbdb579cc6b8e542060cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e24d5e1b_aa713fac",
        "filename": "src/libANGLE/GLES1Renderer.h",
        "patchSetId": 15
      },
      "lineNbr": 295,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-11-18T17:48:59Z",
      "side": 1,
      "message": "Then it would be a code improvement to use the type itself as the hash key instead of the resulting hash value. See other instances where we use a struct as a key.",
      "parentUuid": "650c833c_20921539",
      "range": {
        "startLine": 295,
        "startChar": 19,
        "endLine": 295,
        "endChar": 25
      },
      "revId": "bcdb05e0da18205fd6dfbdb579cc6b8e542060cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "53f15801_3a13478e",
        "filename": "src/libANGLE/GLES1Renderer.h",
        "patchSetId": 15
      },
      "lineNbr": 295,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2021-11-19T04:55:32Z",
      "side": 1,
      "message": "Okay, good ideas, got those hooked up.  Thanks!",
      "parentUuid": "e24d5e1b_aa713fac",
      "range": {
        "startLine": 295,
        "startChar": 19,
        "endLine": 295,
        "endChar": 25
      },
      "revId": "bcdb05e0da18205fd6dfbdb579cc6b8e542060cd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}