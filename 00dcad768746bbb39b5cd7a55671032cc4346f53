{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "d5f6d626_6ae47316",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-05-16T16:05:26Z",
      "side": 1,
      "message": "`TextureBufferContentsObserver` looks fishy. Could you please give an overview of what the design here is? IIUC, it\u0027s for `TextureVk` to decide if `gl::Texture` should observe `gl::Buffer`. Depends on what messages exactly `gl::Texture` needs to react too, but could we reroute the messages to avoid the unusual design? How about `TextureVk` observing `BufferVk` itself, and then forward notifications to `gl::Texture`?",
      "revId": "00dcad768746bbb39b5cd7a55671032cc4346f53",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "73727e1f_e7db7e86",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 1531247
      },
      "writtenOn": "2023-05-16T16:18:13Z",
      "side": 1,
      "message": "Shabi, what should I do with the /ES3_1_OpenGL test failures - skip in expectations?",
      "revId": "00dcad768746bbb39b5cd7a55671032cc4346f53",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ee5a54da_df78766d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 1531247
      },
      "writtenOn": "2023-05-16T16:18:13Z",
      "side": 1,
      "message": "This simply mirrors `VertexArrayBufferContentsObservers` (which I believe has the same flaws and is certainly confusing, but after talking with Charlie this is what we thought would be the way forward)\nhttps://crsrc.org/c/third_party/angle/src/libANGLE/VertexArray.h;drc\u003d76fa380683ca3b1812cfbd3ef4e7ea768819bc75;l\u003d118\n\nMy understanding has been that this needs to be done on the Buffer level (or we will be missing syncState etc) - but I am pretty vague on the way notifications work in ANGLE so I might be wrong. If you could give pointers on what needs to be done to make this work correctly with Vk objects that\u0027d be a big help.",
      "parentUuid": "d5f6d626_6ae47316",
      "revId": "00dcad768746bbb39b5cd7a55671032cc4346f53",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "57c94c6e_f7ca330f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-05-16T16:53:26Z",
      "side": 1,
      "message": "Ah ok, I guess it\u0027s fine if there\u0027s precedence.",
      "parentUuid": "ee5a54da_df78766d",
      "revId": "00dcad768746bbb39b5cd7a55671032cc4346f53",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "48462ce7_828f0fcf",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-05-16T16:54:25Z",
      "side": 1,
      "message": "It could point to a test bug, but nothing I could identify. Just skip it.",
      "parentUuid": "73727e1f_e7db7e86",
      "revId": "00dcad768746bbb39b5cd7a55671032cc4346f53",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7a053acb_3bda2621",
        "filename": "src/libANGLE/Buffer.cpp",
        "patchSetId": 15
      },
      "lineNbr": 408,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-05-16T16:05:26Z",
      "side": 1,
      "message": "nit: a simpler term for `observingObject` is ... `observer` ðŸ˜Š",
      "range": {
        "startLine": 408,
        "startChar": 46,
        "endLine": 408,
        "endChar": 61
      },
      "revId": "00dcad768746bbb39b5cd7a55671032cc4346f53",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e745af2c_ff62a6da",
        "filename": "src/libANGLE/Texture.cpp",
        "patchSetId": 15
      },
      "lineNbr": 2449,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-05-16T16:05:26Z",
      "side": 1,
      "message": "I suggest not removing the observer here. The logic is based on a detail of the Vulkan backend and the front-end is not supposed to care about it.",
      "revId": "00dcad768746bbb39b5cd7a55671032cc4346f53",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "48123e89_c295db34",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 15
      },
      "lineNbr": 2905,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-05-16T16:05:26Z",
      "side": 1,
      "message": "Could you please move all these to a helper?",
      "revId": "00dcad768746bbb39b5cd7a55671032cc4346f53",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "35686d25_6b34ec5b",
        "filename": "src/libANGLE/renderer/vulkan/UtilsVk.cpp",
        "patchSetId": 15
      },
      "lineNbr": 3383,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-05-16T16:05:26Z",
      "side": 1,
      "message": "This should be `| VK_PIPELINE_STAGE_COMPUTE_SHADER_BIT`. The texture buffer may be used by a compute shader.",
      "range": {
        "startLine": 3383,
        "startChar": 33,
        "endLine": 3383,
        "endChar": 67
      },
      "revId": "00dcad768746bbb39b5cd7a55671032cc4346f53",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "49eb2067_5709f50c",
        "filename": "src/tests/gl_tests/GLSLTest.cpp",
        "patchSetId": 15
      },
      "lineNbr": 7312,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-05-16T16:53:26Z",
      "side": 1,
      "message": "Suggest not reusing colors or same values for channels; it should make debugging a bit easier. For the GL failure, it\u0027s not clear if the `memcpy` did nothing (and the color is still blue) or if there\u0027s a shift in channels and the green value ends in the blue channel.\n\nYou can use any value here, like `77, 162, 94` (anything really). Just use `EXPECT_PIXEL_COLOR_NEAR(..., 1)` later when verifying.",
      "range": {
        "startLine": 7312,
        "startChar": 37,
        "endLine": 7312,
        "endChar": 46
      },
      "revId": "00dcad768746bbb39b5cd7a55671032cc4346f53",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}