{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "59632e3c_f7ce5b4b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2021-10-08T17:32:09Z",
      "side": 1,
      "message": "This one turns out revealing another optimization opportunity that we missed. Because we sub-allocate buffer from dynamicBuffer, you may end up sharing the same BufferHelper object with previous allocation. But the tracking of GPU progress is only on BufferHelper granularity. This means when we check if GPU is busy or not, that answer is wrong (it may return true when it shoule be false). This does not affect correctness, but will cause us get into slower code path for mapBuffer/subData etc. The correct fix I believe is to track GPU queueSerial on sub-allocations, that will not just fix this issue, but also will reduce the memory usage. But lets tackle that issue in the sub-allocator in future CLs. For now, the easy/quick fix I did here is to track if BufferVk is been used by anyone since last time we allocate storage or not.\n\nhttps://issuetracker.google.com/202456459",
      "revId": "b1d195c9d16fffc3c25a7cb904b8403b551fb455",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}