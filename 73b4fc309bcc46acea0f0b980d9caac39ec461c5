{
  "comments": [
    {
      "key": {
        "uuid": "fc3a8a78_1311bfc0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2020-09-23T17:58:46Z",
      "side": 1,
      "message": "This looks good for Chromium builds.\n\nTim: I believe the manifests in AOSP and internal master live in those places, right?",
      "revId": "73b4fc309bcc46acea0f0b980d9caac39ec461c5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "52bce7d7_fe41a5bb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2020-09-23T19:27:27Z",
      "side": 1,
      "message": "Confirmed, works for me locally in chromium based build.\n\nIf I\u0027m reading this right, upstream ANGLE will dictate the versionCode for all downstream branches (unless they happen to run the python script and use GN).  There will most likely be downstream commits that don\u0027t make it upstream, so the histories will differ.  I\u0027m okay with this, but curious if it is a concern for others.",
      "revId": "73b4fc309bcc46acea0f0b980d9caac39ec461c5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b2b0bc5b_1e78e03c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-09-23T19:31:26Z",
      "side": 1,
      "message": "Cody, any blockers? Noticed you didn\u0027t approve the CL.",
      "revId": "73b4fc309bcc46acea0f0b980d9caac39ec461c5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "979f59bf_ebdcf0d3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-09-23T19:31:26Z",
      "side": 1,
      "message": "There shouldn\u0027t be downstream AOSP commits that can\u0027t be upstreamed. What were you thinking? Obviously people can fork ANGLE, but once there is a fork, all numbering schemes don\u0027t work.",
      "parentUuid": "52bce7d7_fe41a5bb",
      "revId": "73b4fc309bcc46acea0f0b980d9caac39ec461c5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0a9e37ae_4f736e22",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2020-09-23T19:35:57Z",
      "side": 1,
      "message": "For the projects that I\u0027ve maintained downstream, there\u0027s always a commit or two sprinkled in from Android fairies for various build reasons.  I guess this is a question for Geoff and Tim who maintain the downstream versions.  Are you planning to upstream all changes that occur?  Are there any downstream files not maintained upstream?  And if so, do we care if those changes are not reflected in the ANGLE version?\n\nActually, the histories may already differ, so the versions will never match.  I\u0027m okay with them differing, but I haven\u0027t built ANGLE in the Android tree very much.",
      "parentUuid": "979f59bf_ebdcf0d3",
      "revId": "73b4fc309bcc46acea0f0b980d9caac39ec461c5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9fb678d6_2ce87215",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-09-23T19:54:55Z",
      "side": 1,
      "message": "Cody, would you be okay with deferring this discussion and bringing it up in a more appropriate forum? As it stands this CL doesn\u0027t affect the AOSP integration at all. Wondering if there\u0027s any objection to landing it with the current design.",
      "parentUuid": "0a9e37ae_4f736e22",
      "revId": "73b4fc309bcc46acea0f0b980d9caac39ec461c5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7898b9e8_6172ffcc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2020-09-23T20:05:55Z",
      "side": 1,
      "message": "You\u0027ve presented a solution that is based on git history, so it most likely cannot be replicated downstream.  That means downstream will either need to inherit the version and use it as is (which is probably fine), or come up with their own solution which will make their version incompatible.  Since the downstream builds will have different package names anyway, it won\u0027t matter if their versionCode can\u0027t be compared.\n\nI\u0027d wait for Tim to chime in.  I would recommend the downstream builds try to use the same version.h that comes in, and not try to regenerate it based on history.",
      "parentUuid": "9fb678d6_2ce87215",
      "revId": "73b4fc309bcc46acea0f0b980d9caac39ec461c5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a618f3c_3a1009b0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-09-23T20:32:05Z",
      "side": 1,
      "message": "We will likely have to come up with a good way for ANGLE and downstream (AOSP) to diverge at some point, though we obviously want to minimize that as much as possible since it makes maintenance a pain.   This has kind of already happened, since the Android.bp which builds the ANGLE APK in AOSP only exists in AOSP.\n\nRegarding the package names, we currently have:\n1. org.chromium.angle\n- Added to the generated AndroidManifest.xml by android/AndroidManifest.xml.jinja2\n2. com.android.angle\n- Exists in src/android_system_settings/src/com/android/angle/AndroidManifest.xml\n\nWe haven\u0027t had to diverge the Android AndroidManifest.xml yet, but that\u0027s only because the files themselves are already different.   However, we may hit issues handling different package names between goog/master and aosp/master.   For example, com.google.android.angle to indicate it\u0027s the signed version.\n\nRelevant to this CL, this change could be more difficult to support if we were in Mainline.   One of their requirements was a specific format of these version fields, which doesn\u0027t match what\u0027s being output here.   However, since we aren\u0027t in Mainline anymore, there aren\u0027t any worries about handling that.   Also, since we have separate AndroidManifest.xml files anyway (where those values are used), it may not have been too big of a deal anyway.\n\nI\u0027m fine with these changes and kicking any downstream cans until we have actual divergence somewhere, rather than trying to predict how things could change and trying to adapt to those guesses.",
      "parentUuid": "7898b9e8_6172ffcc",
      "revId": "73b4fc309bcc46acea0f0b980d9caac39ec461c5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fb0e94bc_66a32057",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-09-23T20:32:05Z",
      "side": 1,
      "message": "The Chromium manifest is generated by android/AndroidManifest.xml.jinja2, which should be picking up these new values.\n\nThe AOSP manifest is:\nsrc/android_system_settings/src/com/android/angle/AndroidManifest.xml\n\nThat\u0027s not being updated here, so I don\u0027t expect those builds to see these new values.   I don\u0027t know how much we care about that, since they\u0027d need to be manually updated every roll of ANGLE anyway.   If we care, we should probably tackle it with a separate CL that (ideally) automates it as part of the ANGLE roll process, since we eventually want that entire process automated.",
      "parentUuid": "fc3a8a78_1311bfc0",
      "revId": "73b4fc309bcc46acea0f0b980d9caac39ec461c5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}