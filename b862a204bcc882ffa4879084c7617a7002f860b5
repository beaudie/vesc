{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "903465f1_bb35e2b8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 25
      },
      "lineNbr": 0,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2023-05-25T20:39:08Z",
      "side": 1,
      "message": "Very close to finish line now.",
      "revId": "b862a204bcc882ffa4879084c7617a7002f860b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ad44f3e_5e85d1bf",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 25
      },
      "lineNbr": 310,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2023-05-25T20:39:08Z",
      "side": 1,
      "message": "I don\u0027t think this is needed, line 311 should be sufficient, unless vulkan driver has a bug that missing the format feature bit.",
      "range": {
        "startLine": 309,
        "startChar": 4,
        "endLine": 310,
        "endChar": 21
      },
      "revId": "b862a204bcc882ffa4879084c7617a7002f860b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9aed0733_f1371699",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 25
      },
      "lineNbr": 310,
      "author": {
        "id": 1531247
      },
      "writtenOn": "2023-05-25T21:01:20Z",
      "side": 1,
      "message": "I see. Changed the first check to an assert instead.",
      "parentUuid": "8ad44f3e_5e85d1bf",
      "range": {
        "startLine": 309,
        "startChar": 4,
        "endLine": 310,
        "endChar": 21
      },
      "revId": "b862a204bcc882ffa4879084c7617a7002f860b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a5e6f4e9_ff57d51b",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 25
      },
      "lineNbr": 2941,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2023-05-25T20:39:08Z",
      "side": 1,
      "message": "Can you add an assertion:\nASSERT(getBaseLevelFormat(renderer).getIntendedFormatID() \u003d\u003d getBaseLevelFormat(renderer).getActualFormatID(getRequiredImageAccess()));",
      "revId": "b862a204bcc882ffa4879084c7617a7002f860b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ee0c9a7e_e7e64475",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 25
      },
      "lineNbr": 2941,
      "author": {
        "id": 1531247
      },
      "writtenOn": "2023-05-25T21:01:20Z",
      "side": 1,
      "message": "This assert fails on Linux:\n```\ngetBaseLevelFormat(renderer).getIntendedFormatID()\n-\u003e R32G32B32_UINT\ngetBaseLevelFormat(renderer).getActualImageFormatID(getRequiredImageAccess())\n-\u003e R32G32B32A32_UINT\n```\n\nDo you mean we should check for `GetRGBAEmulationDstFormat(first) \u003d\u003d second`?",
      "parentUuid": "a5e6f4e9_ff57d51b",
      "revId": "b862a204bcc882ffa4879084c7617a7002f860b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cb378604_76196ddd",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 25
      },
      "lineNbr": 2941,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2023-05-25T22:13:16Z",
      "side": 1,
      "message": "What does getRequiredImageAccess() returns? You may want to debug and understand why actualImageFormatID is different from intended format. If the reason is exactly because we need this emulation, then your NeedsRGBAEmulation check should be simply `if(actualImageFormatID !\u003d intendedImageFormatID)`, right? (and then assert that intendedImageFormatID does not support buffer texture bit and actualImageFormatID does)",
      "parentUuid": "ee0c9a7e_e7e64475",
      "revId": "b862a204bcc882ffa4879084c7617a7002f860b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "33c81623_1e269c76",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 25
      },
      "lineNbr": 2941,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-05-26T13:04:19Z",
      "side": 1,
      "message": "`getActualImageFormatID` doesn\u0027t apply here because this is not an image, it\u0027s a texture _buffer_.",
      "parentUuid": "cb378604_76196ddd",
      "revId": "b862a204bcc882ffa4879084c7617a7002f860b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fef25004_85923a30",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 25
      },
      "lineNbr": 2941,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2023-05-26T16:39:58Z",
      "side": 1,
      "message": "Right, but the format picking logic has nothing to do with buffer or image. If we emulate RGB32, then the format picking logic should pick RGB32 instead of RGBA32. There are many places we are using actualImageFormatID, it is a bit dangerous to have it return different value.",
      "parentUuid": "33c81623_1e269c76",
      "revId": "b862a204bcc882ffa4879084c7617a7002f860b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6336fee6_d7d4422c",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 25
      },
      "lineNbr": 2941,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2023-05-26T16:41:53Z",
      "side": 1,
      "message": "Since bots are all green now. I am +2 here, but still good to understand why actual format is different and fix it if needed.",
      "parentUuid": "fef25004_85923a30",
      "revId": "b862a204bcc882ffa4879084c7617a7002f860b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eea3a493_2852ed81",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 25
      },
      "lineNbr": 2941,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2023-05-26T17:04:05Z",
      "side": 1,
      "message": "I guess your point is getActualImageFormatID has the \"image\" in the name, so it does not apply here. Looking at the usage, it appears all places we use getActualImageFormatID should not get into with buffer textures, so we might be okay here. My guess is that the format maybe does not support  VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT, is why we are getting different format.",
      "parentUuid": "6336fee6_d7d4422c",
      "revId": "b862a204bcc882ffa4879084c7617a7002f860b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "18d66645_6efc1a7c",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 25
      },
      "lineNbr": 2941,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-05-26T18:08:47Z",
      "side": 1,
      "message": "Yes that\u0027s exactly it. Fallbacks for image formats are common, so we have the intended vs actual image format distinction. Buffer formats (for texture buffers) never had fallbacks (until this change), so there is no intended vs actual distinction. The distinction for images and texture buffers (or vertex array buffers for that matter) are based on different format feature flags.",
      "parentUuid": "eea3a493_2852ed81",
      "revId": "b862a204bcc882ffa4879084c7617a7002f860b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}