{
  "comments": [
    {
      "key": {
        "uuid": "354caefb_a4d247ce",
        "filename": "src/libANGLE/Framebuffer.cpp",
        "patchSetId": 10
      },
      "lineNbr": 1771,
      "author": {
        "id": 1328182
      },
      "writtenOn": "2019-02-27T01:02:06Z",
      "side": 1,
      "message": "Use sizedInternalFormat instead of componentType to detect 32 bit float only (throw no error when blending other sized float such as half float as indicated here:\nhttps://chromium.googlesource.com/angle/angle/+/master/extensions/EXT_color_buffer_float.txt#132\n)\nNeed confirmation.",
      "revId": "260c9c5f880cfce7f38a6f49514fc3b9ae989157",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6dfac244_e096a458",
        "filename": "src/libANGLE/Framebuffer.cpp",
        "patchSetId": 10
      },
      "lineNbr": 1771,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2019-02-27T14:46:52Z",
      "side": 1,
      "message": "resource-\u003egetAttachmentFormat(binding, textureIndex).info-\u003etype should be GL_FLOAT for these (as opposed to GL_HALF_FLOAT_OES or GL_HALF_FLOAT)",
      "parentUuid": "354caefb_a4d247ce",
      "revId": "260c9c5f880cfce7f38a6f49514fc3b9ae989157",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e8a21652_7d46d4a4",
        "filename": "src/libANGLE/Framebuffer.cpp",
        "patchSetId": 10
      },
      "lineNbr": 1771,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2019-02-27T15:50:57Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "6dfac244_e096a458",
      "revId": "260c9c5f880cfce7f38a6f49514fc3b9ae989157",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "07ce568c_202ecc0e",
        "filename": "src/libANGLE/Framebuffer.cpp",
        "patchSetId": 10
      },
      "lineNbr": 1771,
      "author": {
        "id": 1328182
      },
      "writtenOn": "2019-02-27T18:53:06Z",
      "side": 1,
      "message": "According to https://www.khronos.org/registry/OpenGL-Refpages/es3.0/html/glTexImage2D.xhtml\nThe sizedInternalFormat/format combination for half float could be either GL_R16F/GL_HALF_FLOAT or GL_R16F/GL_FLOAT. Thus relying on componentType alone couldn\u0027t tell if it\u0027s 32 bit float.\nI made this change cuz it used to fail the webgl conformance test sdk/tests/deqp/functional/gles3/fbocolorbuffer.html with --use-gl\u003dangle --use-cmd-decoder\u003dpassthrough (This test is pretty slow so you might want to comment out all tests except for .blend section if running locally)",
      "parentUuid": "e8a21652_7d46d4a4",
      "revId": "260c9c5f880cfce7f38a6f49514fc3b9ae989157",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "289f0a3e_288899fe",
        "filename": "src/libANGLE/Framebuffer.cpp",
        "patchSetId": 10
      },
      "lineNbr": 1771,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2019-02-27T19:01:09Z",
      "side": 1,
      "message": "Are you checking type or componentType?  I believe type should always be what you expect, the data type of the sized internal format.",
      "parentUuid": "07ce568c_202ecc0e",
      "revId": "260c9c5f880cfce7f38a6f49514fc3b9ae989157",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "17655fea_e99c3419",
        "filename": "src/libANGLE/Framebuffer.cpp",
        "patchSetId": 10
      },
      "lineNbr": 1771,
      "author": {
        "id": 1328182
      },
      "writtenOn": "2019-02-27T19:06:14Z",
      "side": 1,
      "message": "I used componentType \u003d\u003d GL_FLOAT. Now switching to sizedInternalFormat \u003d\u003d GL_R*16F.\nSo you are saying if using type https://cs.chromium.org/chromium/src/third_party/angle/src/libANGLE/formatutils.h?type\u003dcs\u0026g\u003d0\u0026l\u003d158\nit will return GL_FLOAT for float32 texture and GL_HALF_FLOAT for float16, no matter what the user input is when calling glTexImage2D?\nIf that\u0027s the case, I will switch to using type to do the detection.",
      "parentUuid": "289f0a3e_288899fe",
      "revId": "260c9c5f880cfce7f38a6f49514fc3b9ae989157",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1e2858dd_5619a166",
        "filename": "src/libANGLE/Framebuffer.cpp",
        "patchSetId": 10
      },
      "lineNbr": 1777,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2019-02-27T14:46:52Z",
      "side": 1,
      "message": "bitset::set has a second argument for the value to set so you don\u0027t need to branch here.",
      "range": {
        "startLine": 1773,
        "startChar": 0,
        "endLine": 1777,
        "endChar": 66
      },
      "revId": "260c9c5f880cfce7f38a6f49514fc3b9ae989157",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2eef418f_669e3e45",
        "filename": "src/libANGLE/Framebuffer.cpp",
        "patchSetId": 10
      },
      "lineNbr": 1777,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2019-02-27T15:50:57Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "1e2858dd_5619a166",
      "range": {
        "startLine": 1773,
        "startChar": 0,
        "endLine": 1777,
        "endChar": 66
      },
      "revId": "260c9c5f880cfce7f38a6f49514fc3b9ae989157",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "66e6cea2_2e437d45",
        "filename": "src/libANGLE/Framebuffer.cpp",
        "patchSetId": 10
      },
      "lineNbr": 1859,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2019-02-27T14:46:52Z",
      "side": 1,
      "message": "Avoid duplicating this logic if possible.  Maybe an updateFloatColorAttachmentBits(size_t index, const gl::InternalFormat\u0026 format)?",
      "range": {
        "startLine": 1857,
        "startChar": 8,
        "endLine": 1859,
        "endChar": 79
      },
      "revId": "260c9c5f880cfce7f38a6f49514fc3b9ae989157",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "30e29bc0_92391200",
        "filename": "src/libANGLE/Framebuffer.cpp",
        "patchSetId": 10
      },
      "lineNbr": 1859,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2019-02-27T15:50:57Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "66e6cea2_2e437d45",
      "range": {
        "startLine": 1857,
        "startChar": 8,
        "endLine": 1859,
        "endChar": 79
      },
      "revId": "260c9c5f880cfce7f38a6f49514fc3b9ae989157",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a455606c_a1bae8c6",
        "filename": "src/libANGLE/Framebuffer.h",
        "patchSetId": 10
      },
      "lineNbr": 340,
      "author": {
        "id": 1328182
      },
      "writtenOn": "2019-02-27T01:02:06Z",
      "side": 1,
      "message": "Use a bit set mFloat32ColorAttachmentBits to cache instead of looping through attachments to improve performance.",
      "revId": "260c9c5f880cfce7f38a6f49514fc3b9ae989157",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef139aff_8d8b7b9a",
        "filename": "src/libANGLE/Framebuffer.h",
        "patchSetId": 10
      },
      "lineNbr": 340,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2019-02-27T15:50:57Z",
      "side": 1,
      "message": "nit: you can just use DrawBufferMask directly.",
      "parentUuid": "a455606c_a1bae8c6",
      "revId": "260c9c5f880cfce7f38a6f49514fc3b9ae989157",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7d5edda2_d382c0ed",
        "filename": "src/tests/gl_tests/BlendMinMaxTest.cpp",
        "patchSetId": 10
      },
      "lineNbr": 43,
      "author": {
        "id": 1328182
      },
      "writtenOn": "2019-02-27T01:02:06Z",
      "side": 1,
      "message": "Need to request EXT_float_blend to blend on 32 bit float.",
      "revId": "260c9c5f880cfce7f38a6f49514fc3b9ae989157",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bd5cd182_4fca4eb9",
        "filename": "src/tests/gl_tests/BlendMinMaxTest.cpp",
        "patchSetId": 10
      },
      "lineNbr": 43,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2019-02-27T14:46:52Z",
      "side": 1,
      "message": "Put this skip in the tests below.",
      "parentUuid": "7d5edda2_d382c0ed",
      "revId": "260c9c5f880cfce7f38a6f49514fc3b9ae989157",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f9bfda7d_95617c30",
        "filename": "src/tests/gl_tests/BlendMinMaxTest.cpp",
        "patchSetId": 10
      },
      "lineNbr": 179,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2019-02-27T14:46:52Z",
      "side": 1,
      "message": "here",
      "revId": "260c9c5f880cfce7f38a6f49514fc3b9ae989157",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3e604b80_68a99ef3",
        "filename": "src/tests/gl_tests/BlendMinMaxTest.cpp",
        "patchSetId": 10
      },
      "lineNbr": 190,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2019-02-27T14:46:52Z",
      "side": 1,
      "message": "and here",
      "revId": "260c9c5f880cfce7f38a6f49514fc3b9ae989157",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3beac798_faf61ca8",
        "filename": "src/tests/gl_tests/WebGLCompatibilityTest.cpp",
        "patchSetId": 10
      },
      "lineNbr": 2910,
      "author": {
        "id": 1328182
      },
      "writtenOn": "2019-02-27T01:02:06Z",
      "side": 1,
      "message": "This test is moved from StateChangeTest.cpp to here. Since only by not explicitly requiring EXT_float_blend in the WebGL manner could trigger the check for float color attachment and thus throw some error.",
      "revId": "260c9c5f880cfce7f38a6f49514fc3b9ae989157",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e2229dd3_d50b0f89",
        "filename": "src/tests/gl_tests/WebGLCompatibilityTest.cpp",
        "patchSetId": 10
      },
      "lineNbr": 2989,
      "author": {
        "id": 1328182
      },
      "writtenOn": "2019-02-27T01:02:06Z",
      "side": 1,
      "message": "Add a test for float color attachment with multiple color attachment.",
      "revId": "260c9c5f880cfce7f38a6f49514fc3b9ae989157",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "790192d0_fe1a9707",
        "filename": "src/tests/gl_tests/WebGLCompatibilityTest.cpp",
        "patchSetId": 10
      },
      "lineNbr": 2989,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2019-02-27T15:50:57Z",
      "side": 1,
      "message": "could you please leave a comment before each test?",
      "parentUuid": "e2229dd3_d50b0f89",
      "revId": "260c9c5f880cfce7f38a6f49514fc3b9ae989157",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}