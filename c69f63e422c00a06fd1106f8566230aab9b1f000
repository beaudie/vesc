{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "8f3424fe_4a6a1eb6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 13
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-01-27T23:14:00Z",
      "side": 1,
      "message": "any other comments?",
      "revId": "c69f63e422c00a06fd1106f8566230aab9b1f000",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "25e6268d_b4fd8b32",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 13
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-01-28T10:08:09Z",
      "side": 1,
      "message": "Coming together nicely!\n\nCould you please run the tests locally with the syncval change [1] applied? You may encounter other synchronization bugs we have (which you can ignore), but at least we can be notified if there\u0027s an issue with the synchronization here.\n\n[1]: https://chromium-review.googlesource.com/c/angle/angle/+/2297884\n",
      "revId": "c69f63e422c00a06fd1106f8566230aab9b1f000",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d81550a8_284be7ce",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 13
      },
      "lineNbr": 0,
      "author": {
        "id": 1357791
      },
      "writtenOn": "2021-01-29T07:31:55Z",
      "side": 1,
      "message": "Unfortunately, the newly added end2end tests failed with the syncval change. Error messages are like below.\n--------------------------\n../../src/tests/test_utils/ANGLETest.cpp(63): error: RendererVk.cpp:346 (DebugUtilsMessenger): [ SYNC-HAZARD-WRITE_AFTER_WRITE ] Validation Error: [ SYNC-HAZARD-WRITE_AFTER_WRITE ] Object 0: handle \u003d 0x310000000031, type \u003d VK_OBJECT_TYPE_IMAGE; | MessageID \u003d 0xfdf9f5e1 | vkCmdPipelineBarrier: Hazard WRITE_AFTER_WRITE for image barrier 0 VkImage 0x310000000031[]. Access info (usage: SYNC_IMAGE_LAYOUT_TRANSITION, prior_usage: SYNC_IMAGE_LAYOUT_TRANSITION, write_barriers: 0, command: vkCmdEndRenderPass, seq_no: 7, reset_no: 1).\n                            Object: 0x310000000031 (type \u003d Image(10))\n--------------------------\n\nIt was not easy to debug syncval layer. but I think I found out a root cause of it.\nIn my change, I modify the layout of the color attachment image from VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL to VK_IMAGE_LAYOUT_GENERAL in case the program has framebuffer fetch.\n---------------------------\n@@ -934,7 +952,8 @@ angle::Result InitializeRenderPassFromDesc(ContextVk *contextVk,\n \n         VkAttachmentReference colorRef;\n         colorRef.attachment \u003d attachmentCount.get();\n--       colorRef.layout     \u003d VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL;\n+        colorRef.layout     \u003d needInputAttachments ? VK_IMAGE_LAYOUT_GENERAL\n+                                               : VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL;\n---------------------------\nThis seems to cause layout transition after color write operation and it leads to sync validation error in barrier check before readpixels.\n\nWhen I reverted this part then ignored the vulkan validation errors caused by bad layout type, all end2end tests passed.\n\nI don\u0027t have nice idea to avoid this problem with ANGLE modification. But how about we modify syncval layer not to set a usage flags to SYNC_IMAGE_LAYOUT_TRANSITION when source or dst layout is VK_IMAGE_LAYOUT_GENERAL? (though I can\u0027t find relevant code for it.)",
      "parentUuid": "25e6268d_b4fd8b32",
      "revId": "c69f63e422c00a06fd1106f8566230aab9b1f000",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5ec7dbfa_8fff1bac",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 13
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-01-29T10:30:12Z",
      "side": 1,
      "message": "I don\u0027t think ignoring this is really valid. Luckily this is fixable I believe.\n\nNote the following:\n\n- FramebufferVk::updateRenderPassDesc is called after the attachment layout transitions are issued.\n- FramebufferVk::onSwitchProgramFramebufferFetch is called:\n * after attachment layout transitions are issued, if render pass is started\n * if render pass not started, may or may not be issued after attachment layout transitions\n- ImageHelper::setCurrentImageLayout is made for this very purpose (a layout change implicitly done by the render pass)\n\nSo you can do the following:\n\n- Only in onSwitchProgramFramebufferFetch (and not syncState, which closes the render pass):\n  * **If render pass has started for current framebuffer**, also use setCurrentImageLayout to set the layout to GENERAL for color attachments if render pass desc is in fetch mode (note the bug in the other comment, shouldn\u0027t use `isFetchProgram`).\n- Make FramebufferVk::startNewRenderPass() set the layout of the attachments to GENERAL if the desc is in fetch mode.\n\nIn other words, the layouts are updated only when render pass starts (in case fetch mode is configured before the render pass) or in the middle of render pass. You should never update the layouts like this while the render pass is closed.",
      "parentUuid": "d81550a8_284be7ce",
      "revId": "c69f63e422c00a06fd1106f8566230aab9b1f000",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad1f31b6_1a75c991",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 13
      },
      "lineNbr": 1939,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-01-29T10:30:12Z",
      "side": 1,
      "message": "Looking again, I think this is not the best place for this. It would be more natural if this moved to FramebufferVk::startNewRenderPass I believe. For example if the framebuffer is synced for readback, blit etc, we don\u0027t need to modify the render pass desc with whatever unrelated program may be bound at the moment.",
      "range": {
        "startLine": 1931,
        "startChar": 0,
        "endLine": 1939,
        "endChar": 72
      },
      "revId": "c69f63e422c00a06fd1106f8566230aab9b1f000",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7d384fb7_21db61d9",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "patchSetId": 13
      },
      "lineNbr": 1336,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-01-29T10:30:12Z",
      "side": 1,
      "message": "There\u0027s a bug here. Say the application does this:\n\n- Start RP\n- Draw without fetch mode\n * sets mHasFramebufferFetch \u003d false\n- Draw with fetch mode\n * sets mHasFramebufferFetch \u003d true\n- Draw without fetch mode\n * sets mHasFramebufferFetch \u003d false\n- End RP\n\nAt the end when we create the render pass, InitializeRenderPassFromDesc will set needInputAttachments \u003d false, so the image layouts would be COLOR_ATTACHMENT, and the input attachments not specified.\n\nYou can add an `updateFramebufferFetchMode` that says SetBitField(mHasFramebufferFetch, mHasFramebufferFetch || hasFramebufferFetch); to call in FramebufferVk::onSwitchProgramFramebufferFetch()\n\nPlease add a test as well.",
      "revId": "c69f63e422c00a06fd1106f8566230aab9b1f000",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}