{
  "comments": [
    {
      "key": {
        "uuid": "722a7467_c09d6162",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 10,
      "author": {
        "id": 1263724
      },
      "writtenOn": "2020-09-30T17:57:59Z",
      "side": 1,
      "message": "typo, remove",
      "range": {
        "startLine": 10,
        "startChar": 55,
        "endLine": 10,
        "endChar": 56
      },
      "revId": "dd4f7947a79bb5b02afaf060b271ddee9fd1ffc7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7de0bd93_86c39713",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 10,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-09-30T19:00:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "722a7467_c09d6162",
      "range": {
        "startLine": 10,
        "startChar": 55,
        "endLine": 10,
        "endChar": 56
      },
      "revId": "dd4f7947a79bb5b02afaf060b271ddee9fd1ffc7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5f590a3_d6e5bda3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 10,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-09-30T19:03:47Z",
      "side": 1,
      "message": "typo",
      "range": {
        "startLine": 10,
        "startChar": 15,
        "endLine": 10,
        "endChar": 20
      },
      "revId": "dd4f7947a79bb5b02afaf060b271ddee9fd1ffc7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "55b8617b_c4b62a09",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 10,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-09-30T19:39:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a5f590a3_d6e5bda3",
      "range": {
        "startLine": 10,
        "startChar": 15,
        "endLine": 10,
        "endChar": 20
      },
      "revId": "dd4f7947a79bb5b02afaf060b271ddee9fd1ffc7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce0a1a92_518441ac",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 27,
      "author": {
        "id": 1263724
      },
      "writtenOn": "2020-09-30T17:57:59Z",
      "side": 1,
      "message": "Do/can we want to make this smarter?\nE.g. if missing the extension disable the feature and print warning that Vulkan debug extension is not present. That would allow us to have one ANGLE build we use for both normal debug and AGI debugging.",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 27,
        "endChar": 17
      },
      "revId": "dd4f7947a79bb5b02afaf060b271ddee9fd1ffc7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f9ba72ea_b13dab86",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 27,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-09-30T18:04:27Z",
      "side": 1,
      "message": "Just to clarify, why won\u0027t this work with games?",
      "parentUuid": "ce0a1a92_518441ac",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 27,
        "endChar": 17
      },
      "revId": "dd4f7947a79bb5b02afaf060b271ddee9fd1ffc7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e229018d_1adf89a7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 27,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-09-30T18:39:33Z",
      "side": 1,
      "message": "On Android, ANGLE is not finding the debug utils extension.  AGI provides it.  The ANGLE-tree-built tests (with VVL build) provides it.  Games don\u0027t.\n\nThe way Tobin designed building this CL, the debug utils extension is required.  Games don\u0027t typically have it.\n\nThe thing we discussed in the \"stand-up\" meeting is for me to look to see if the extension was found.  If not, disable DebugAnnotatorVk.  There\u0027s going to be more to it than that (e.g. can\u0027t add the end marker as well).\n\nIt makes sense to do this in the follow-up CL that moves more to DebugAnnotatorVk (e.g. adding the end marker).",
      "parentUuid": "f9ba72ea_b13dab86",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 27,
        "endChar": 17
      },
      "revId": "dd4f7947a79bb5b02afaf060b271ddee9fd1ffc7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a5d92460_2afadbe2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 27,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-09-30T18:51:43Z",
      "side": 1,
      "message": "Ack, maybe just leave a note in the commit message.",
      "parentUuid": "e229018d_1adf89a7",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 27,
        "endChar": 17
      },
      "revId": "dd4f7947a79bb5b02afaf060b271ddee9fd1ffc7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "31760ce8_852c17c7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 27,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-09-30T19:00:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a5d92460_2afadbe2",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 27,
        "endChar": 17
      },
      "revId": "dd4f7947a79bb5b02afaf060b271ddee9fd1ffc7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3e3969ca_e1e991c4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-09-30T16:29:38Z",
      "side": 1,
      "message": "Courtney \u0026 Tim, PTAL.  Fran and I have both tested this and it looks great!\n\nI figured out what Android needed, and that an application will only work with the built ANGLE APK if launched by AGI (which provides the needed debug utils extension), or if the game itself is built with the debug utils extension.",
      "revId": "dd4f7947a79bb5b02afaf060b271ddee9fd1ffc7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "416f9924_eb8eb702",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-09-30T18:39:33Z",
      "side": 1,
      "message": "Pushing comments now.  Code changes being tested on Android ... new patchset coming shortly.",
      "revId": "dd4f7947a79bb5b02afaf060b271ddee9fd1ffc7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "098bc7c1_31625e0c",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 1088,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-09-30T19:03:47Z",
      "side": 1,
      "message": "Why don\u0027t we want this event recorded if there aren\u0027t any dirty bits?",
      "revId": "dd4f7947a79bb5b02afaf060b271ddee9fd1ffc7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "833373d9_c38e019d",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 1088,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-09-30T19:39:55Z",
      "side": 1,
      "message": "I\u0027m not sure why Tobin put it here.  The follow-on CL is going to have DebugAnnotatorVk add a dirty bit, and have this call triggered by that dirty bit.  I\u0027ll leave it here for this CL.",
      "parentUuid": "098bc7c1_31625e0c",
      "revId": "dd4f7947a79bb5b02afaf060b271ddee9fd1ffc7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "45df19b7_e938f011",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 2121,
      "author": {
        "id": 1263724
      },
      "writtenOn": "2020-09-30T17:57:59Z",
      "side": 1,
      "message": "Need to get rid of this to be able to hit logging below.",
      "range": {
        "startLine": 2121,
        "startChar": 0,
        "endLine": 2121,
        "endChar": 39
      },
      "revId": "dd4f7947a79bb5b02afaf060b271ddee9fd1ffc7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "00cb2e0a_2b0df06b",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 2121,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-09-30T18:39:33Z",
      "side": 1,
      "message": "Done\n\nThanks!  I think I introduced this bug.  I looked broader and found another problem or two that Tobin didn\u0027t originally see).",
      "parentUuid": "45df19b7_e938f011",
      "range": {
        "startLine": 2121,
        "startChar": 0,
        "endLine": 2121,
        "endChar": 39
      },
      "revId": "dd4f7947a79bb5b02afaf060b271ddee9fd1ffc7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8fe5ca9b_1f11c16e",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 2152,
      "author": {
        "id": 1263724
      },
      "writtenOn": "2020-09-30T17:57:59Z",
      "side": 1,
      "message": "here as well.",
      "revId": "dd4f7947a79bb5b02afaf060b271ddee9fd1ffc7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "050b9f71_323650f1",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 2152,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-09-30T18:39:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8fe5ca9b_1f11c16e",
      "revId": "dd4f7947a79bb5b02afaf060b271ddee9fd1ffc7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5b29ae37_b4973bff",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 2284,
      "author": {
        "id": 1263724
      },
      "writtenOn": "2020-09-30T17:57:59Z",
      "side": 1,
      "message": "Need to remove this.",
      "revId": "dd4f7947a79bb5b02afaf060b271ddee9fd1ffc7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3dc336e3_d5262612",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 2284,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-09-30T18:39:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5b29ae37_b4973bff",
      "revId": "dd4f7947a79bb5b02afaf060b271ddee9fd1ffc7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "67d44194_693f5ac8",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 2649,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-09-30T19:03:47Z",
      "side": 1,
      "message": "Can this be inlined in the header file?",
      "range": {
        "startLine": 2646,
        "startChar": 0,
        "endLine": 2649,
        "endChar": 1
      },
      "revId": "dd4f7947a79bb5b02afaf060b271ddee9fd1ffc7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "107f9e7d_e734361f",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 2649,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-09-30T19:39:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "67d44194_693f5ac8",
      "range": {
        "startLine": 2646,
        "startChar": 0,
        "endLine": 2649,
        "endChar": 1
      },
      "revId": "dd4f7947a79bb5b02afaf060b271ddee9fd1ffc7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4f92fc25_0bd28ea6",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 2653,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-09-30T19:03:47Z",
      "side": 1,
      "message": "Why is getting a pointer to the variable helpful?   It looks like this can be removed and mEventLog can be used directly.",
      "revId": "dd4f7947a79bb5b02afaf060b271ddee9fd1ffc7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d840438a_c62c4526",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 2653,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-09-30T19:39:55Z",
      "side": 1,
      "message": "Not sure why Tobin did it this way (I wondered the same thing).  Gone now, thanks.",
      "parentUuid": "4f92fc25_0bd28ea6",
      "revId": "dd4f7947a79bb5b02afaf060b271ddee9fd1ffc7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "af201ac1_c89f1d69",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 2677,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-09-30T19:03:47Z",
      "side": 1,
      "message": "nit: OpenGL ES Commands",
      "range": {
        "startLine": 2677,
        "startChar": 31,
        "endLine": 2677,
        "endChar": 46
      },
      "revId": "dd4f7947a79bb5b02afaf060b271ddee9fd1ffc7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7d6b6260_a30f8e2c",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 2677,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-09-30T19:39:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "af201ac1_c89f1d69",
      "range": {
        "startLine": 2677,
        "startChar": 31,
        "endLine": 2677,
        "endChar": 46
      },
      "revId": "dd4f7947a79bb5b02afaf060b271ddee9fd1ffc7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d4bcfab5_e3e566ae",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 2678,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-09-30T19:03:47Z",
      "side": 1,
      "message": "Does oglCmds live long enough that recording a pointer to it is safe?",
      "revId": "dd4f7947a79bb5b02afaf060b271ddee9fd1ffc7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "72eece0a_4db46538",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 2678,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-09-30T19:39:55Z",
      "side": 1,
      "message": "It\u0027s memcpy\u0027d by commandBuffer-\u003ebeginDebugUtilsLabelEXT()",
      "parentUuid": "d4bcfab5_e3e566ae",
      "revId": "dd4f7947a79bb5b02afaf060b271ddee9fd1ffc7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9e0ddf08_c0dd7b80",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 2683,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-09-30T19:03:47Z",
      "side": 1,
      "message": "Similar to the above.   Does C++ keep these strings around forever, so you can record pointers to them after the vector is cleared?",
      "revId": "dd4f7947a79bb5b02afaf060b271ddee9fd1ffc7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a02143a9_478d003f",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 2683,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-09-30T19:39:55Z",
      "side": 1,
      "message": "Same ... It\u0027s memcpy\u0027d by commandBuffer-\u003ebeginDebugUtilsLabelEXT()",
      "parentUuid": "9e0ddf08_c0dd7b80",
      "revId": "dd4f7947a79bb5b02afaf060b271ddee9fd1ffc7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dd78bca8_0e0b47e6",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 2686,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-09-30T19:03:47Z",
      "side": 1,
      "message": "Even though the bug is only visible internally to Google, should probably still use https://issuetracker.google.com.\n\nAlso, does this need to be tracked with an internal buganizer, or is there somewhere externally visible we can open a bug?",
      "range": {
        "startLine": 2686,
        "startChar": 28,
        "endLine": 2686,
        "endChar": 39
      },
      "revId": "dd4f7947a79bb5b02afaf060b271ddee9fd1ffc7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cde415df_adf583f0",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 2686,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-09-30T19:39:55Z",
      "side": 1,
      "message": "The bug is in a private (non-public) AGI group.\n\nNot sure what your 2nd question is asking",
      "parentUuid": "dd78bca8_0e0b47e6",
      "range": {
        "startLine": 2686,
        "startChar": 28,
        "endLine": 2686,
        "endChar": 39
      },
      "revId": "dd4f7947a79bb5b02afaf060b271ddee9fd1ffc7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e2459e94_deb0dc04",
        "filename": "src/libANGLE/renderer/vulkan/DebugAnnotatorVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 40,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-09-30T19:03:47Z",
      "side": 1,
      "message": "Do you need to override these if you\u0027re just calling back into angle::LoggingAnnotator()?",
      "range": {
        "startLine": 32,
        "startChar": 0,
        "endLine": 40,
        "endChar": 1
      },
      "revId": "dd4f7947a79bb5b02afaf060b271ddee9fd1ffc7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a8ed861_e7f02e6f",
        "filename": "src/libANGLE/renderer/vulkan/DebugAnnotatorVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 40,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-09-30T19:39:55Z",
      "side": 1,
      "message": "Good point.  We don\u0027t need setMarker().  A follow-on CL is going to add to endEvent(), and so I\u0027ll keep that one.",
      "parentUuid": "e2459e94_deb0dc04",
      "range": {
        "startLine": 32,
        "startChar": 0,
        "endLine": 40,
        "endChar": 1
      },
      "revId": "dd4f7947a79bb5b02afaf060b271ddee9fd1ffc7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "26e7a799_42d16f83",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 911,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-09-30T19:03:47Z",
      "side": 1,
      "message": "Are there any concerns about serializing access to mAnnotator across multiple threads?   Looking at DebugAnnotator11, that only logs for a single thread:\n\n    bool DebugAnnotator11::loggingEnabledForThisThread() const\n    {\n        return mUserDefinedAnnotation !\u003d nullptr \u0026\u0026 std::this_thread::get_id() \u003d\u003d mAnnotationThread;\n    }\n\nAdmittedly, I\u0027m not familiar with the annotator stuff at all.   I do see g_debugMutex used by LogMessage, but haven\u0027t dug deep enough to know if that\u0027s the answer or not.",
      "range": {
        "startLine": 910,
        "startChar": 0,
        "endLine": 911,
        "endChar": 48
      },
      "revId": "dd4f7947a79bb5b02afaf060b271ddee9fd1ffc7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c05e0bf0_78c91667",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 911,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-09-30T19:39:55Z",
      "side": 1,
      "message": "I originally copied that, and Jamie didn\u0027t see a need for it with DebugAnnotatorVk, even with our multi-threading solution.",
      "parentUuid": "26e7a799_42d16f83",
      "range": {
        "startLine": 910,
        "startChar": 0,
        "endLine": 911,
        "endChar": 48
      },
      "revId": "dd4f7947a79bb5b02afaf060b271ddee9fd1ffc7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c7acecdd_7c1bf8ed",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 911,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-09-30T19:44:06Z",
      "side": 1,
      "message": "As long as the annotator itself stores the state in ContextVk it shouldn\u0027t be a problem. If DebugAnnotatorVk itself stored member variables there could be data races. So we should try to avoid that.",
      "parentUuid": "c05e0bf0_78c91667",
      "range": {
        "startLine": 910,
        "startChar": 0,
        "endLine": 911,
        "endChar": 48
      },
      "revId": "dd4f7947a79bb5b02afaf060b271ddee9fd1ffc7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}