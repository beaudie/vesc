{
  "comments": [
    {
      "key": {
        "uuid": "ab65eaf2_4b8d60a7",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 12
      },
      "lineNbr": 982,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-03-01T04:38:16Z",
      "side": 1,
      "message": "all these will eventually be upgraded to the packed enum?",
      "range": {
        "startLine": 982,
        "startChar": 59,
        "endLine": 982,
        "endChar": 67
      },
      "revId": "35764eede030092f4b1e3dd5a2a39b89e31adde7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d2af1d3d_ed6790ca",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 12
      },
      "lineNbr": 982,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2018-03-01T14:57:49Z",
      "side": 1,
      "message": "Yes, the only one that will be left after the next patch is [1]",
      "parentUuid": "ab65eaf2_4b8d60a7",
      "range": {
        "startLine": 982,
        "startChar": 59,
        "endLine": 982,
        "endChar": 67
      },
      "revId": "35764eede030092f4b1e3dd5a2a39b89e31adde7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5caedb11_cd521515",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 12
      },
      "lineNbr": 2635,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-03-01T04:38:16Z",
      "side": 1,
      "message": "how come the zero textures are allowed to be nullptr now?",
      "range": {
        "startLine": 2635,
        "startChar": 12,
        "endLine": 2635,
        "endChar": 23
      },
      "revId": "35764eede030092f4b1e3dd5a2a39b89e31adde7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "db3f0694_28abb50b",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 12
      },
      "lineNbr": 2635,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2018-03-01T14:57:49Z",
      "side": 1,
      "message": "TextureMap became a specialization for angle::PackedEnumMap when it was an std::map before. `TextureMap mZeroTextures`. This makes it so all types of textures are present when before only the supported ones were present. We skip over non-supported and uninitialized types with this check.",
      "parentUuid": "5caedb11_cd521515",
      "range": {
        "startLine": 2635,
        "startChar": 12,
        "endLine": 2635,
        "endChar": 23
      },
      "revId": "35764eede030092f4b1e3dd5a2a39b89e31adde7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c87fc0b2_581a7869",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 12
      },
      "lineNbr": 2635,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-03-01T18:59:45Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "db3f0694_28abb50b",
      "range": {
        "startLine": 2635,
        "startChar": 12,
        "endLine": 2635,
        "endChar": 23
      },
      "revId": "35764eede030092f4b1e3dd5a2a39b89e31adde7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c74a5046_9f9b0321",
        "filename": "src/libANGLE/PackedGLEnums.cpp",
        "patchSetId": 12
      },
      "lineNbr": 5,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-03-01T04:38:16Z",
      "side": 1,
      "message": "not autogen",
      "range": {
        "startLine": 5,
        "startChar": 3,
        "endLine": 5,
        "endChar": 24
      },
      "revId": "35764eede030092f4b1e3dd5a2a39b89e31adde7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6fc9d29c_5e27c106",
        "filename": "src/libANGLE/PackedGLEnums.cpp",
        "patchSetId": 12
      },
      "lineNbr": 5,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2018-03-01T14:57:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c74a5046_9f9b0321",
      "range": {
        "startLine": 5,
        "startChar": 3,
        "endLine": 5,
        "endChar": 24
      },
      "revId": "35764eede030092f4b1e3dd5a2a39b89e31adde7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "deeb2449_dc03e5e4",
        "filename": "src/libANGLE/PackedGLEnums.cpp",
        "patchSetId": 12
      },
      "lineNbr": 182,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-03-01T04:38:16Z",
      "side": 1,
      "message": "namespace comment.",
      "revId": "35764eede030092f4b1e3dd5a2a39b89e31adde7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7fb65ae7_1d1ca2cc",
        "filename": "src/libANGLE/PackedGLEnums.cpp",
        "patchSetId": 12
      },
      "lineNbr": 182,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2018-03-01T14:57:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "deeb2449_dc03e5e4",
      "revId": "35764eede030092f4b1e3dd5a2a39b89e31adde7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9e263455_40c1da9e",
        "filename": "src/libANGLE/packed_gl_enums.json",
        "patchSetId": 12
      },
      "lineNbr": 37,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-03-01T04:38:16Z",
      "side": 1,
      "message": "I\u0027m fine with any identifier that doesn\u0027t begin with E or underscore. Anything else is fine. (T2D, Tex2D, etc)",
      "range": {
        "startLine": 37,
        "startChar": 9,
        "endLine": 37,
        "endChar": 12
      },
      "revId": "35764eede030092f4b1e3dd5a2a39b89e31adde7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1fa1cf74_709cb946",
        "filename": "src/libANGLE/packed_gl_enums.json",
        "patchSetId": 12
      },
      "lineNbr": 37,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2018-03-01T14:57:49Z",
      "side": 1,
      "message": "Underscore was the nicest I found and it is safe to use because it is not followed by an uppercase letter. Ideally we want something that doesn\u0027t take much space visually so that the eyes skip over to the 2D part immediately.",
      "parentUuid": "9e263455_40c1da9e",
      "range": {
        "startLine": 37,
        "startChar": 9,
        "endLine": 37,
        "endChar": 12
      },
      "revId": "35764eede030092f4b1e3dd5a2a39b89e31adde7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a2a16a54_9fd223f2",
        "filename": "src/libANGLE/packed_gl_enums.json",
        "patchSetId": 12
      },
      "lineNbr": 37,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-03-01T18:59:45Z",
      "side": 1,
      "message": "Yeah. I agree in principle, but underscore naming rules are tricky to in c++, and you\u0027re left with an inconsistent pattern. How about just using Tex everywhere?\n\nTextureType::Tex2D\nTextureType::TexRectangle\n\netc.",
      "parentUuid": "1fa1cf74_709cb946",
      "range": {
        "startLine": 37,
        "startChar": 9,
        "endLine": 37,
        "endChar": 12
      },
      "revId": "35764eede030092f4b1e3dd5a2a39b89e31adde7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d368f83_56763a23",
        "filename": "src/libANGLE/packed_gl_enums.json",
        "patchSetId": 12
      },
      "lineNbr": 37,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2018-03-01T20:29:17Z",
      "side": 1,
      "message": "The rules are that __ and _[A-Z] are reserved prefixes for identifiers. I could live with a Tex prefix even if it is a bit verbose, but how about the following, they\u0027re a bit weird:\n\n  gl::TextureType::TexCubeMap\n  gl::TextureTarget::TexCubeMapPositiveX",
      "parentUuid": "a2a16a54_9fd223f2",
      "range": {
        "startLine": 37,
        "startChar": 9,
        "endLine": 37,
        "endChar": 12
      },
      "revId": "35764eede030092f4b1e3dd5a2a39b89e31adde7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "109ff69c_8fd0f749",
        "filename": "src/libANGLE/packed_gl_enums.json",
        "patchSetId": 12
      },
      "lineNbr": 37,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-03-02T02:19:33Z",
      "side": 1,
      "message": "Well, why don\u0027t you go ahead with this and we can always rename it later.",
      "parentUuid": "4d368f83_56763a23",
      "range": {
        "startLine": 37,
        "startChar": 9,
        "endLine": 37,
        "endChar": 12
      },
      "revId": "35764eede030092f4b1e3dd5a2a39b89e31adde7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e20feb60_ed8229dc",
        "filename": "src/libANGLE/packed_gl_enums.json",
        "patchSetId": 12
      },
      "lineNbr": 37,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-03-02T16:14:58Z",
      "side": 1,
      "message": "Slight preference for the underscore myself as it keeps the enums short and less verbose.",
      "parentUuid": "109ff69c_8fd0f749",
      "range": {
        "startLine": 37,
        "startChar": 9,
        "endLine": 37,
        "endChar": 12
      },
      "revId": "35764eede030092f4b1e3dd5a2a39b89e31adde7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1aa4e377_b761c839",
        "filename": "src/libANGLE/packed_gl_enums.json",
        "patchSetId": 12
      },
      "lineNbr": 37,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2018-03-05T18:09:21Z",
      "side": 1,
      "message": "Thank you. If we ever need to rename them it should be a simple search/replace now that they are well-typed enums.",
      "parentUuid": "109ff69c_8fd0f749",
      "range": {
        "startLine": 37,
        "startChar": 9,
        "endLine": 37,
        "endChar": 12
      },
      "revId": "35764eede030092f4b1e3dd5a2a39b89e31adde7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "056c3d41_bedd03ee",
        "filename": "src/libANGLE/renderer/d3d/ProgramD3D.cpp",
        "patchSetId": 12
      },
      "lineNbr": 2621,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2018-03-01T14:57:49Z",
      "side": 1,
      "message": "[1]",
      "revId": "35764eede030092f4b1e3dd5a2a39b89e31adde7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f2cf61ac_0e0a83b0",
        "filename": "src/libANGLE/renderer/renderer_utils.h",
        "patchSetId": 12
      },
      "lineNbr": 258,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-03-01T04:38:16Z",
      "side": 1,
      "message": "this also on the list for upgrades?",
      "range": {
        "startLine": 258,
        "startChar": 13,
        "endLine": 258,
        "endChar": 19
      },
      "revId": "35764eede030092f4b1e3dd5a2a39b89e31adde7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "84478486_3c7f8a0b",
        "filename": "src/libANGLE/renderer/renderer_utils.h",
        "patchSetId": 12
      },
      "lineNbr": 258,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2018-03-01T14:57:49Z",
      "side": 1,
      "message": "Yes, but it was difficult to do without changing the backends so it is done in the follow-up patch.",
      "parentUuid": "f2cf61ac_0e0a83b0",
      "range": {
        "startLine": 258,
        "startChar": 13,
        "endLine": 258,
        "endChar": 19
      },
      "revId": "35764eede030092f4b1e3dd5a2a39b89e31adde7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}