{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "433bfd83_8c2707ca",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 7,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2022-08-29T15:10:55Z",
      "side": 1,
      "message": "Can you preface this with \"Capture/Replay:\"?",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 55
      },
      "revId": "ed1828509e6b2b8808b875ff5f10d5b5354ee796",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9d176ed4_fab5d9b8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 7,
      "author": {
        "id": 1531247
      },
      "writtenOn": "2022-08-29T17:35:51Z",
      "side": 1,
      "message": "Done. Ouch, that prefix is 25% of the allowed CL  length!",
      "parentUuid": "433bfd83_8c2707ca",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 55
      },
      "revId": "ed1828509e6b2b8808b875ff5f10d5b5354ee796",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ce6bc569_a3bf13b4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-08-29T14:49:48Z",
      "side": 1,
      "message": "So the issue with this patch is I believe it won\u0027t fix the delete issue for all the existing traces without a re-trace. How about designing a solution that doesn\u0027t need a full re-trace to get the fix?\n\nHere\u0027s one way:\n\nIf the decompress callback is non-nullptr, do not delete it in the fixture (mirroring do-not-allocate-it). Instead keep the pointer in the replay harness and delete it there on a subsequent call to decompress (mirroring existing behaviour, but in the same module).\n\nWDYT?",
      "revId": "ed1828509e6b2b8808b875ff5f10d5b5354ee796",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7cc41b94_efc44868",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-08-29T14:50:19Z",
      "side": 1,
      "message": "Also this design avoids the need for a new callback and API.",
      "parentUuid": "ce6bc569_a3bf13b4",
      "revId": "ed1828509e6b2b8808b875ff5f10d5b5354ee796",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c26e53b4_0fa9021c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1531247
      },
      "writtenOn": "2022-08-29T14:52:03Z",
      "side": 1,
      "message": "\u003e I believe it won\u0027t fix the delete issue for all the existing traces without a re-trace\nCould you elaborate on this? I am missing why this requires a re-trace.",
      "parentUuid": "7cc41b94_efc44868",
      "revId": "ed1828509e6b2b8808b875ff5f10d5b5354ee796",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "81fc7493_3410eed0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-08-29T14:55:28Z",
      "side": 1,
      "message": "My bad, I was confused and all the new methods are in the fixture, not the trace. \n\nSo the remaining issue is that it adds a new API and callback. Definitely not a deal breaker. I do think it\u0027s nicer the way I proposed - mirrors the prior code \u0026 requires fewer interface points.\n\nLGTM to get this unblocked",
      "parentUuid": "c26e53b4_0fa9021c",
      "revId": "ed1828509e6b2b8808b875ff5f10d5b5354ee796",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e7a22900_adaa92c3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1531247
      },
      "writtenOn": "2022-08-29T15:04:27Z",
      "side": 1,
      "message": "Ok thanks! I thought I was missing something.\n\n\u003e Instead keep the pointer in the replay harness and delete it there on a subsequent call to decompress (mirroring existing behaviour, but in the same module).\nDoesn\u0027t this make the other side kind of weird? DecompressBinaryData is currently a pure function so all state is managed in the fixture. With your suggestion, DecompressBinaryData is going to have to store a singleton global state and will invalidate previously allocated pointer which is definitely not something I would expect from a function with this name.\n\nOne more alternative would be extracting GetGzipUncompressedSize into a separate api like GetDecompressBinaryDataSize() and always using new[] in the module, relying on FinishReplay to clean up. Gets rid of the delete callback if that\u0027s something you dislike about this CL, although is an api change of sorts (but why is changing this inter-module api an issue?)",
      "parentUuid": "81fc7493_3410eed0",
      "revId": "ed1828509e6b2b8808b875ff5f10d5b5354ee796",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c4d5b789_f1cd8a4c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2022-08-29T15:10:55Z",
      "side": 1,
      "message": "Nice fix Roman!  Let\u0027s get this in, can follow up if there are further refinements to be made.",
      "revId": "ed1828509e6b2b8808b875ff5f10d5b5354ee796",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "de4cef25_d8f4ceb0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1531247
      },
      "writtenOn": "2022-08-29T17:35:51Z",
      "side": 1,
      "message": "Submitting as is for now.",
      "parentUuid": "e7a22900_adaa92c3",
      "revId": "ed1828509e6b2b8808b875ff5f10d5b5354ee796",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}