{
  "comments": [
    {
      "key": {
        "uuid": "1dd9c63e_346e7c7c",
        "filename": "extensions/CHROMIUM_copy_texture.txt",
        "patchSetId": 15
      },
      "lineNbr": 45,
      "author": {
        "id": 1130144
      },
      "writtenOn": "2016-07-06T18:19:28Z",
      "side": 1,
      "message": "I know I am a bit late to the party but can we get this part of the implementation enhanced to handle any texture level or subresource? Since developers will be using this extension to implement texImage2D from an arbitrary source, they will need to be able to copy into levels other than level zero.",
      "revId": "f1d2cac18fcd74e6aeef748fbfa38602c1d1c42e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1dd9c63e_17c41a46",
        "filename": "extensions/CHROMIUM_copy_texture.txt",
        "patchSetId": 15
      },
      "lineNbr": 45,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2016-07-06T18:27:01Z",
      "side": 1,
      "message": "Maybe I should look into implementing EXT_copy_image but with some additional parameters for the premultiply/unmultiply/flip?",
      "parentUuid": "1dd9c63e_346e7c7c",
      "revId": "f1d2cac18fcd74e6aeef748fbfa38602c1d1c42e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1dd9c63e_7a6aab9e",
        "filename": "extensions/CHROMIUM_copy_texture.txt",
        "patchSetId": 15
      },
      "lineNbr": 45,
      "author": {
        "id": 1130144
      },
      "writtenOn": "2016-07-06T19:28:39Z",
      "side": 1,
      "message": "I presume you mean the extension at https://www.khronos.org/registry/gles/extensions/EXT/EXT_copy_image.txt?\n\nFrom reading the spec for EXT_copy_image, it only has CopyImageSubDataEXT. I think we also need the equivalent of CopyImageDataEXT, which is analogous to glCopyTextureCHROMIUM.\n\nDoes EXT_copy_image handle things cube maps and volume textures?",
      "parentUuid": "1dd9c63e_17c41a46",
      "revId": "f1d2cac18fcd74e6aeef748fbfa38602c1d1c42e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1dd9c63e_ba76f372",
        "filename": "extensions/CHROMIUM_copy_texture.txt",
        "patchSetId": 15
      },
      "lineNbr": 45,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2016-07-06T19:36:35Z",
      "side": 1,
      "message": "Only having CopyImageSubDataEXT should be enough, you can always create an empty mip level using TexImage or TexStorage.\n\nI think that extension doesn\u0027t do everything we\u0027d want though, it wouldn\u0027t convert things like RGBA-\u003eRGB or LA-\u003eRGBA.\n\nI wonder how the lack of mip level is enough for chromium to implement what it needs for WebGL.",
      "parentUuid": "1dd9c63e_7a6aab9e",
      "revId": "f1d2cac18fcd74e6aeef748fbfa38602c1d1c42e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1dd9c63e_daa2d2a9",
        "filename": "extensions/CHROMIUM_copy_texture.txt",
        "patchSetId": 15
      },
      "lineNbr": 45,
      "author": {
        "id": 1130144
      },
      "writtenOn": "2016-07-06T20:10:25Z",
      "side": 1,
      "message": "Good point on using TexImage or TexStorage.\n\nInstead of extending EXT_copy_image, how about we add the parameters we need to CHROMIUM_copy_texture?   \n\nI also wonder how the lack of mip level is enough for Chromium to implement what it needs for WebGL. MipLevels are just the beginning. texSubImage3D takes an arbitrary level and depth and it also accepts a Canvas or Video element as input. I suppose you could always introduce a single level intermediate texture but that is suboptimal.",
      "parentUuid": "1dd9c63e_ba76f372",
      "revId": "f1d2cac18fcd74e6aeef748fbfa38602c1d1c42e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "daf6544b_092a6c6f",
        "filename": "extensions/CHROMIUM_copy_texture.txt",
        "patchSetId": 15
      },
      "lineNbr": 45,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2016-07-08T17:07:56Z",
      "side": 1,
      "message": "Alright, I think the best approach is to land this and look into updating the function afterwards since it will likely require an update to Chrome too.  I know this extension needs some updates for the new ES3 formats so we can probably lump it in with that.",
      "parentUuid": "1dd9c63e_daa2d2a9",
      "revId": "f1d2cac18fcd74e6aeef748fbfa38602c1d1c42e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aaf86f8a_151a5624",
        "filename": "src/tests/gl_tests/CopyTextureTest.cpp",
        "patchSetId": 15
      },
      "lineNbr": 68,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-07-20T19:40:09Z",
      "side": 1,
      "message": "nit",
      "range": {
        "startLine": 68,
        "startChar": 12,
        "endLine": 68,
        "endChar": 13
      },
      "revId": "f1d2cac18fcd74e6aeef748fbfa38602c1d1c42e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2f2ad160_57ae3695",
        "filename": "src/tests/gl_tests/CopyTextureTest.cpp",
        "patchSetId": 15
      },
      "lineNbr": 68,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2016-08-01T18:50:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "aaf86f8a_151a5624",
      "range": {
        "startLine": 68,
        "startChar": 12,
        "endLine": 68,
        "endChar": 13
      },
      "revId": "f1d2cac18fcd74e6aeef748fbfa38602c1d1c42e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aaf86f8a_75363a9c",
        "filename": "src/tests/gl_tests/CopyTextureTest.cpp",
        "patchSetId": 15
      },
      "lineNbr": 171,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-07-20T19:40:09Z",
      "side": 1,
      "message": "nit: you can probably s/EXPECT_GL_NO_ERROR/ASSERT_GL_NO_ERROR/g. If we error we should just stop.",
      "range": {
        "startLine": 171,
        "startChar": 4,
        "endLine": 171,
        "endChar": 22
      },
      "revId": "f1d2cac18fcd74e6aeef748fbfa38602c1d1c42e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2f2ad160_b7b4d2ec",
        "filename": "src/tests/gl_tests/CopyTextureTest.cpp",
        "patchSetId": 15
      },
      "lineNbr": 171,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2016-08-01T18:50:04Z",
      "side": 1,
      "message": "There were no loops of tests so I skipped this nit, there shouldn\u0027t be too much error spew.",
      "parentUuid": "aaf86f8a_75363a9c",
      "range": {
        "startLine": 171,
        "startChar": 4,
        "endLine": 171,
        "endChar": 22
      },
      "revId": "f1d2cac18fcd74e6aeef748fbfa38602c1d1c42e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aaf86f8a_952c8647",
        "filename": "src/tests/gl_tests/CopyTextureTest.cpp",
        "patchSetId": 15
      },
      "lineNbr": 174,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-07-20T19:40:09Z",
      "side": 1,
      "message": "nit: EXPECT_GLENUM_EQ",
      "range": {
        "startLine": 174,
        "startChar": 4,
        "endLine": 174,
        "endChar": 13
      },
      "revId": "f1d2cac18fcd74e6aeef748fbfa38602c1d1c42e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2f2ad160_f7c9ea7b",
        "filename": "src/tests/gl_tests/CopyTextureTest.cpp",
        "patchSetId": 15
      },
      "lineNbr": 174,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2016-08-01T18:50:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "aaf86f8a_952c8647",
      "range": {
        "startLine": 174,
        "startChar": 4,
        "endLine": 174,
        "endChar": 13
      },
      "revId": "f1d2cac18fcd74e6aeef748fbfa38602c1d1c42e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aaf86f8a_b5f6e2c6",
        "filename": "src/tests/gl_tests/CopyTextureTest.cpp",
        "patchSetId": 15
      },
      "lineNbr": 324,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-07-20T19:40:09Z",
      "side": 1,
      "message": "dit",
      "range": {
        "startLine": 324,
        "startChar": 4,
        "endLine": 324,
        "endChar": 13
      },
      "revId": "f1d2cac18fcd74e6aeef748fbfa38602c1d1c42e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2f2ad160_37dc623a",
        "filename": "src/tests/gl_tests/CopyTextureTest.cpp",
        "patchSetId": 15
      },
      "lineNbr": 324,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2016-08-01T18:50:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "aaf86f8a_b5f6e2c6",
      "range": {
        "startLine": 324,
        "startChar": 4,
        "endLine": 324,
        "endChar": 13
      },
      "revId": "f1d2cac18fcd74e6aeef748fbfa38602c1d1c42e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aaf86f8a_f5006a9d",
        "filename": "src/tests/gl_tests/CopyTextureTest.cpp",
        "patchSetId": 15
      },
      "lineNbr": 474,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-07-20T19:40:09Z",
      "side": 1,
      "message": "and so on",
      "range": {
        "startLine": 474,
        "startChar": 4,
        "endLine": 474,
        "endChar": 13
      },
      "revId": "f1d2cac18fcd74e6aeef748fbfa38602c1d1c42e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2f2ad160_77d6da1b",
        "filename": "src/tests/gl_tests/CopyTextureTest.cpp",
        "patchSetId": 15
      },
      "lineNbr": 474,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2016-08-01T18:50:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "aaf86f8a_f5006a9d",
      "range": {
        "startLine": 474,
        "startChar": 4,
        "endLine": 474,
        "endChar": 13
      },
      "revId": "f1d2cac18fcd74e6aeef748fbfa38602c1d1c42e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aaf86f8a_b581c22b",
        "filename": "src/tests/test_utils/ANGLETest.cpp",
        "patchSetId": 15
      },
      "lineNbr": 29,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-07-20T19:40:09Z",
      "side": 1,
      "message": "nit: transparentBlack (ie 1, 1, 1, 0 is transparentWhite, etc)",
      "range": {
        "startLine": 29,
        "startChar": 23,
        "endLine": 29,
        "endChar": 34
      },
      "revId": "f1d2cac18fcd74e6aeef748fbfa38602c1d1c42e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2f2ad160_37a1c2a6",
        "filename": "src/tests/test_utils/ANGLETest.cpp",
        "patchSetId": 15
      },
      "lineNbr": 29,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2016-08-01T18:50:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "aaf86f8a_b581c22b",
      "range": {
        "startLine": 29,
        "startChar": 23,
        "endLine": 29,
        "endChar": 34
      },
      "revId": "f1d2cac18fcd74e6aeef748fbfa38602c1d1c42e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}