{
  "comments": [
    {
      "key": {
        "uuid": "6eea4669_623dbfde",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 9
      },
      "lineNbr": 1116,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2017-09-06T15:10:02Z",
      "side": 1,
      "message": "This \"checkFooAllocation\" method is to support the \"bind to create\" semantics of OpenGL. Program pipelines have no such semantics so it could be replaced with getProgramPipeline here. CheckProgramPipelineAllocation becomes unused and you could simplify code too.",
      "revId": "b960c44000204a0ebe008db185aa0f14c89fad4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "66262b49_60691f81",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 9
      },
      "lineNbr": 1116,
      "author": {
        "id": 1138134
      },
      "writtenOn": "2017-09-11T17:50:43Z",
      "side": 1,
      "message": "checkFooAllocation will create the object (say ProgramPipeline created by its constructor), otherwise, it only get an id but bind nullptr to that id in ObjectMap in ResourceManager. So I think it should call checkProgramPipelineAllocation. \nIn addition, what do you mean that program pipeline has no semantic to support \"bind to create\" ? Thanks a lot!",
      "parentUuid": "6eea4669_623dbfde",
      "revId": "b960c44000204a0ebe008db185aa0f14c89fad4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1d4e9869_03c2c47a",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 9
      },
      "lineNbr": 1116,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2017-09-11T18:01:12Z",
      "side": 1,
      "message": "\"bind to create\" is the OpenGL mechanism allowing, for example, to call glBindTexture(GL_TEXTURE_2D, 6) without having called glGenTextures before. It will be equivalent to \"glGenTextures(1, \u0026n)\" returning 6, then \"glBintTexture(GL_TEXTURE_2D, 6)\". The checkFooAllocation method implements these semantics by generating the ID if it didn\u0027t exist before. I was suggesting using a simpler variant that doesn\u0027t generate an ID if needed, but TypedResourceManager doesn\u0027t seem to have anything like that. So the code LGTM as is.",
      "parentUuid": "66262b49_60691f81",
      "revId": "b960c44000204a0ebe008db185aa0f14c89fad4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "044a49c7_9ec19440",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 9
      },
      "lineNbr": 1116,
      "author": {
        "id": 1138134
      },
      "writtenOn": "2017-09-12T01:27:16Z",
      "side": 1,
      "message": "Thanks for your explanation, Corentin. That\u0027s true, most GL objects can \"bind to create\" without GenFoos to generates the ids, with some exceptions like program pipeline, VAO and transform feedback.",
      "parentUuid": "1d4e9869_03c2c47a",
      "revId": "b960c44000204a0ebe008db185aa0f14c89fad4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7af8f96b_72a08b61",
        "filename": "src/libANGLE/ProgramPipeline.cpp",
        "patchSetId": 9
      },
      "lineNbr": 13,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2017-09-06T15:10:02Z",
      "side": 1,
      "message": "nit: Context isn\u0027t needed.",
      "revId": "b960c44000204a0ebe008db185aa0f14c89fad4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fc11581e_25138cbb",
        "filename": "src/libANGLE/ProgramPipeline.cpp",
        "patchSetId": 9
      },
      "lineNbr": 13,
      "author": {
        "id": 1138134
      },
      "writtenOn": "2017-09-11T17:50:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7af8f96b_72a08b61",
      "revId": "b960c44000204a0ebe008db185aa0f14c89fad4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cd16f57c_1dd2e1c6",
        "filename": "src/libANGLE/ProgramPipeline.h",
        "patchSetId": 9
      },
      "lineNbr": 17,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2017-09-06T15:10:02Z",
      "side": 1,
      "message": "nit: only angleutils and RefCountObject are needed.",
      "revId": "b960c44000204a0ebe008db185aa0f14c89fad4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c71a232d_191e2b1e",
        "filename": "src/libANGLE/ProgramPipeline.h",
        "patchSetId": 9
      },
      "lineNbr": 17,
      "author": {
        "id": 1138134
      },
      "writtenOn": "2017-09-11T17:50:43Z",
      "side": 1,
      "message": "Thanks for pointing out this. Debug.h is required by LabeledObject. The others are really unnecessary.",
      "parentUuid": "cd16f57c_1dd2e1c6",
      "revId": "b960c44000204a0ebe008db185aa0f14c89fad4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a9932193_05ac72da",
        "filename": "src/libANGLE/ProgramPipeline.h",
        "patchSetId": 9
      },
      "lineNbr": 28,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2017-09-06T15:10:02Z",
      "side": 1,
      "message": "nit: Caps, State and ContextState aren\u0027t used.",
      "revId": "b960c44000204a0ebe008db185aa0f14c89fad4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "72ce730a_edc3b8e9",
        "filename": "src/libANGLE/ProgramPipeline.h",
        "patchSetId": 9
      },
      "lineNbr": 28,
      "author": {
        "id": 1138134
      },
      "writtenOn": "2017-09-11T17:50:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a9932193_05ac72da",
      "revId": "b960c44000204a0ebe008db185aa0f14c89fad4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9c349ab_49d8a080",
        "filename": "src/libANGLE/renderer/d3d/d3d11/ProgramPipeline11.cpp",
        "patchSetId": 9
      },
      "lineNbr": 12,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2017-09-06T15:10:02Z",
      "side": 1,
      "message": "nit: unused.",
      "revId": "b960c44000204a0ebe008db185aa0f14c89fad4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5b4af397_243703b8",
        "filename": "src/libANGLE/renderer/d3d/d3d11/ProgramPipeline11.cpp",
        "patchSetId": 9
      },
      "lineNbr": 12,
      "author": {
        "id": 1138134
      },
      "writtenOn": "2017-09-11T17:50:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b9c349ab_49d8a080",
      "revId": "b960c44000204a0ebe008db185aa0f14c89fad4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f615140_200e72bf",
        "filename": "src/libANGLE/renderer/gl/ProgramPipelineGL.cpp",
        "patchSetId": 9
      },
      "lineNbr": 27,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2017-09-06T15:10:02Z",
      "side": 1,
      "message": "The destructor should delete the GL id generated in the constructor.",
      "revId": "b960c44000204a0ebe008db185aa0f14c89fad4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ffe32c23_f869b600",
        "filename": "src/libANGLE/renderer/gl/ProgramPipelineGL.cpp",
        "patchSetId": 9
      },
      "lineNbr": 27,
      "author": {
        "id": 1138134
      },
      "writtenOn": "2017-09-11T17:50:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5f615140_200e72bf",
      "revId": "b960c44000204a0ebe008db185aa0f14c89fad4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3edc9343_4c73791d",
        "filename": "src/libANGLE/renderer/null/ProgramPipelineNULL.cpp",
        "patchSetId": 9
      },
      "lineNbr": 12,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2017-09-06T15:10:02Z",
      "side": 1,
      "message": "nit: unused.",
      "revId": "b960c44000204a0ebe008db185aa0f14c89fad4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7ee92c7a_f8b510d2",
        "filename": "src/libANGLE/renderer/null/ProgramPipelineNULL.cpp",
        "patchSetId": 9
      },
      "lineNbr": 12,
      "author": {
        "id": 1138134
      },
      "writtenOn": "2017-09-11T17:50:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3edc9343_4c73791d",
      "revId": "b960c44000204a0ebe008db185aa0f14c89fad4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e03c6edf_5afaca16",
        "filename": "src/libANGLE/renderer/vulkan/ProgramPipelineVk.cpp",
        "patchSetId": 9
      },
      "lineNbr": 12,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2017-09-06T15:10:02Z",
      "side": 1,
      "message": "nit: unused.",
      "revId": "b960c44000204a0ebe008db185aa0f14c89fad4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "88f9e624_fd28d59b",
        "filename": "src/libANGLE/renderer/vulkan/ProgramPipelineVk.cpp",
        "patchSetId": 9
      },
      "lineNbr": 12,
      "author": {
        "id": 1138134
      },
      "writtenOn": "2017-09-11T17:50:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e03c6edf_5afaca16",
      "revId": "b960c44000204a0ebe008db185aa0f14c89fad4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4db7e91c_a298ae20",
        "filename": "src/libANGLE/validationES31.cpp",
        "patchSetId": 9
      },
      "lineNbr": 1233,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2017-09-06T15:10:02Z",
      "side": 1,
      "message": "You can use the ObjectNotGenerated message from ErrorStrings.h and use ANGLE_VALIDATION_ERR.",
      "revId": "b960c44000204a0ebe008db185aa0f14c89fad4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "69c34903_54a111f6",
        "filename": "src/libANGLE/validationES31.cpp",
        "patchSetId": 9
      },
      "lineNbr": 1233,
      "author": {
        "id": 1138134
      },
      "writtenOn": "2017-09-11T17:50:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4db7e91c_a298ae20",
      "revId": "b960c44000204a0ebe008db185aa0f14c89fad4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ec8c159e_ca7439e8",
        "filename": "src/libANGLE/validationES31.h",
        "patchSetId": 9
      },
      "lineNbr": 113,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2017-09-06T15:10:02Z",
      "side": 1,
      "message": "This doesn\u0027t need to be in the header, it just need to be defined above ValidateGen/DeleteProgramPipelines in the cpp file.",
      "revId": "b960c44000204a0ebe008db185aa0f14c89fad4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "31f3c5e0_6bddfcbd",
        "filename": "src/libANGLE/validationES31.h",
        "patchSetId": 9
      },
      "lineNbr": 113,
      "author": {
        "id": 1138134
      },
      "writtenOn": "2017-09-11T17:50:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ec8c159e_ca7439e8",
      "revId": "b960c44000204a0ebe008db185aa0f14c89fad4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f394a7e0_b0a7a3b0",
        "filename": "src/tests/gl_tests/ProgramPipelineTest.cpp",
        "patchSetId": 9
      },
      "lineNbr": 35,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2017-09-06T15:10:02Z",
      "side": 1,
      "message": "nit: add a ProgramPipeline type to gl_raii.h and use it everywhere in this file.",
      "revId": "b960c44000204a0ebe008db185aa0f14c89fad4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ac1b28cd_c1871990",
        "filename": "src/tests/gl_tests/ProgramPipelineTest.cpp",
        "patchSetId": 9
      },
      "lineNbr": 35,
      "author": {
        "id": 1138134
      },
      "writtenOn": "2017-09-11T17:50:43Z",
      "side": 1,
      "message": "Ack.\n\nThe current tests verifies object generation and deletion, so I think it is better to explicitly call GenProgramPipelines and DeleteProgramPipelines, so I prefer to use GLuint, instead of GLProgramPipeline. \n\nHowever, I would like to use it in later tests for useProgramStages and activeShaderProgram and so on.",
      "parentUuid": "f394a7e0_b0a7a3b0",
      "revId": "b960c44000204a0ebe008db185aa0f14c89fad4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "851271d2_422dad0e",
        "filename": "src/tests/gl_tests/ProgramPipelineTest.cpp",
        "patchSetId": 9
      },
      "lineNbr": 35,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2017-09-11T18:01:12Z",
      "side": 1,
      "message": "Sounds good, thanks!",
      "parentUuid": "ac1b28cd_c1871990",
      "revId": "b960c44000204a0ebe008db185aa0f14c89fad4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bfd6f0de_0d517f63",
        "filename": "src/tests/gl_tests/ProgramPipelineTest.cpp",
        "patchSetId": 9
      },
      "lineNbr": 58,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2017-09-06T15:10:02Z",
      "side": 1,
      "message": "nit: you can also test 0 for Gen and -1 for Delete.",
      "revId": "b960c44000204a0ebe008db185aa0f14c89fad4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8481cbcd_2a197c8b",
        "filename": "src/tests/gl_tests/ProgramPipelineTest.cpp",
        "patchSetId": 9
      },
      "lineNbr": 58,
      "author": {
        "id": 1138134
      },
      "writtenOn": "2017-09-11T17:50:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bfd6f0de_0d517f63",
      "revId": "b960c44000204a0ebe008db185aa0f14c89fad4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}