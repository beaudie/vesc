{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "d4a016e2_ca92f82a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2020-10-16T00:46:22Z",
      "side": 1,
      "message": "this might be early but need some eyes",
      "revId": "2ac446c972691e3412a17975fc85f559e852e58e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c806779a_02bd8f8b",
        "filename": "src/compiler/translator/TranslatorVulkan.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1025,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-10-19T20:50:30Z",
      "side": 1,
      "message": "Can gl_SampleMaskIn be assigned?!",
      "range": {
        "startLine": 1025,
        "startChar": 52,
        "endLine": 1025,
        "endChar": 63
      },
      "revId": "2ac446c972691e3412a17975fc85f559e852e58e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f3d78d48_9cd0ce13",
        "filename": "src/compiler/translator/TranslatorVulkan.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1030,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-10-19T20:50:30Z",
      "side": 1,
      "message": "Can these be assigned and read back? If so, it\u0027s not just assignments that need to be replaced.",
      "range": {
        "startLine": 1030,
        "startChar": 49,
        "endLine": 1030,
        "endChar": 60
      },
      "revId": "2ac446c972691e3412a17975fc85f559e852e58e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "61737bc3_16ef72c2",
        "filename": "src/compiler/translator/tree_util/ReplaceSampleMaskVariables.h",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-10-17T13:15:50Z",
      "side": 1,
      "message": "Why can\u0027t you just use ReplaceVariable for this?",
      "revId": "2ac446c972691e3412a17975fc85f559e852e58e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "747f8fea_cc133f58",
        "filename": "src/compiler/translator/tree_util/ReplaceSampleMaskVariables.h",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-10-19T20:50:30Z",
      "side": 1,
      "message": "Yes please. The transformation here is doing all sorts of tricks, like not doing anything if non-const indices are not used etc. I\u0027d say skip all that, always declare ANGLESampleMask/In, unconditionally replace gl_SampleMask/In, and assign to them at the end of the shader.\n\nUnless the optimized assembly of the shader is affected, there\u0027s no point in optimizing this. If it is, let me know and to review the code.",
      "parentUuid": "61737bc3_16ef72c2",
      "revId": "2ac446c972691e3412a17975fc85f559e852e58e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b1c815a4_d49557e2",
        "filename": "src/compiler/translator/tree_util/RunAtTheBeginOfShader.cpp",
        "patchSetId": 1
      },
      "lineNbr": 6,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-10-19T20:50:30Z",
      "side": 1,
      "message": "Wrong name",
      "range": {
        "startLine": 6,
        "startChar": 3,
        "endLine": 6,
        "endChar": 17
      },
      "revId": "2ac446c972691e3412a17975fc85f559e852e58e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3e59f441_9c0611d0",
        "filename": "src/compiler/translator/tree_util/RunAtTheBeginOfShader.h",
        "patchSetId": 1
      },
      "lineNbr": 6,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-10-19T20:50:30Z",
      "side": 1,
      "message": "\"beginning\": in comments, file name, guard macro below etc.",
      "range": {
        "startLine": 6,
        "startChar": 54,
        "endLine": 6,
        "endChar": 59
      },
      "revId": "2ac446c972691e3412a17975fc85f559e852e58e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "604fba1b_428c5088",
        "filename": "src/tests/compiler_tests/OES_sample_variables_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-10-19T20:50:30Z",
      "side": 1,
      "message": "int(0xAAAAAAAA) looks pretty constant to me. Is the int() making it non-const for some reason?",
      "range": {
        "startLine": 16,
        "startChar": 35,
        "endLine": 16,
        "endChar": 53
      },
      "revId": "2ac446c972691e3412a17975fc85f559e852e58e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d3664b63_e2b69c96",
        "filename": "src/tests/compiler_tests/OES_sample_variables_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-10-17T13:15:50Z",
      "side": 1,
      "message": "nit: whitespace",
      "range": {
        "startLine": 43,
        "startChar": 9,
        "endLine": 43,
        "endChar": 12
      },
      "revId": "2ac446c972691e3412a17975fc85f559e852e58e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6591d4bd_c69ffbbe",
        "filename": "src/tests/compiler_tests/OES_sample_variables_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-10-17T13:15:50Z",
      "side": 1,
      "message": "nit: whitespace",
      "range": {
        "startLine": 51,
        "startChar": 9,
        "endLine": 51,
        "endChar": 12
      },
      "revId": "2ac446c972691e3412a17975fc85f559e852e58e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}