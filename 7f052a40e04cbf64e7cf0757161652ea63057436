{
  "comments": [
    {
      "key": {
        "uuid": "41621ea7_3a135226",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-09-24T17:53:51Z",
      "side": 1,
      "message": "PTAL",
      "revId": "7f052a40e04cbf64e7cf0757161652ea63057436",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0557f5ce_f6614017",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-09-24T18:32:10Z",
      "side": 1,
      "message": "I am a bit concerned that these counters are in draw time (as oppsed to per renderpass of other counters) and eating some CPU cycles unnecessarily. Should we guard all the counters in a specific config bit that will disabled in end user build?",
      "revId": "7f052a40e04cbf64e7cf0757161652ea63057436",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0da57926_357c2924",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-09-24T18:44:45Z",
      "side": 1,
      "message": "Definitely a valid concern.   Would it be better to make little helper functions that increment the counts with the contents #ifdef\u0027ed?",
      "parentUuid": "0557f5ce_f6614017",
      "revId": "7f052a40e04cbf64e7cf0757161652ea63057436",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ad7d7b5_d0551174",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-09-24T18:44:45Z",
      "side": 1,
      "message": "Definitely a valid concern.   Would it be better to make little helper functions that increment the counts with the contents #ifdef\u0027ed?",
      "parentUuid": "0557f5ce_f6614017",
      "revId": "7f052a40e04cbf64e7cf0757161652ea63057436",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4718c07c_11dcd2c2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-09-24T19:02:03Z",
      "side": 1,
      "message": "I\u0027m not super concerned about the overhead as it only occurs on set allocations. e.g. in all of Manhattan it would be like 12 times, right? More concerned about adding hashmaps into a simple array.",
      "revId": "7f052a40e04cbf64e7cf0757161652ea63057436",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d636d252_51230545",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-09-24T20:07:07Z",
      "side": 1,
      "message": "Tim probably can easily print out the number ContextVk::onDestroy to see. If only a dozen, not real concern. I was under impression it is much bigger.",
      "parentUuid": "4718c07c_11dcd2c2",
      "revId": "7f052a40e04cbf64e7cf0757161652ea63057436",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b7170f50_4a2c25c1",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 307,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-09-24T19:02:03Z",
      "side": 1,
      "message": "regarding cumulative, I was thinking we\u0027d have two sets of counters - per-frame and per-context. and we\u0027d accumulate the per-frame into the per-context counters on flushes.",
      "range": {
        "startLine": 307,
        "startChar": 5,
        "endLine": 307,
        "endChar": 33
      },
      "revId": "7f052a40e04cbf64e7cf0757161652ea63057436",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d1755d8b_60e1987f",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 307,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-09-24T20:07:07Z",
      "side": 1,
      "message": "The counter clear at flushImpl time always bothers me a bit. I have to be careful that I did not trigger a flush before reading out the counter. Is it possible that  we always maintain the umulative counter. Then in the overlay code, it calculate the delta between two frames for the per frame data? The way it is right now, for example, you would also have issue that manhattan may not display accurate RP counts when we did honor the glFlush call.",
      "parentUuid": "b7170f50_4a2c25c1",
      "range": {
        "startLine": 307,
        "startChar": 5,
        "endLine": 307,
        "endChar": 33
      },
      "revId": "7f052a40e04cbf64e7cf0757161652ea63057436",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4be0b2f6_3d3dd975",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 307,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-09-24T20:32:08Z",
      "side": 1,
      "message": "Yeah I\u0027m fine with something that only stores cumulative and the overlay computes the delta or something like that. I was thinking two sets, and adding the \"current frame\" ones to the \"cumulative\" one was basically a way to implement that.",
      "parentUuid": "d1755d8b_60e1987f",
      "range": {
        "startLine": 307,
        "startChar": 5,
        "endLine": 307,
        "endChar": 33
      },
      "revId": "7f052a40e04cbf64e7cf0757161652ea63057436",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b9684574_ade40176",
        "filename": "src/libANGLE/renderer/vulkan/vk_utils.h",
        "patchSetId": 2
      },
      "lineNbr": 799,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-09-24T19:02:03Z",
      "side": 1,
      "message": "would prefer if we keep hashmaps out of the perf counters. it\u0027s really meant to be something we can expose as a GL extension and not something that needs a pointer to query.",
      "range": {
        "startLine": 798,
        "startChar": 4,
        "endLine": 799,
        "endChar": 39
      },
      "revId": "7f052a40e04cbf64e7cf0757161652ea63057436",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ea5709b7_573caffc",
        "filename": "src/libANGLE/renderer/vulkan/vk_utils.h",
        "patchSetId": 2
      },
      "lineNbr": 800,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-09-24T19:02:03Z",
      "side": 1,
      "message": "same here.",
      "range": {
        "startLine": 800,
        "startChar": 4,
        "endLine": 800,
        "endChar": 27
      },
      "revId": "7f052a40e04cbf64e7cf0757161652ea63057436",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}