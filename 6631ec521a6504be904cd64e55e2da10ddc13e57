{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "4d2ae32b_27fd8f83",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1518892
      },
      "writtenOn": "2021-10-23T04:20:18Z",
      "side": 1,
      "message": "As an aside, I notice we are inconsistent about the version of fxc.exe being used:\n\n git grep \u0027HLSL Shader Compiler\u0027 | awk \u0027{ print $NF }\u0027 | sort | uniq -c\n      10 6.3.9600.16384\n     178 9.29.952.3111\n\nPresumably that\u0027s because only deliberately modified shaders get committed/submitted after someone runs the generate_shaders.bat script, but it\u0027d be nice to make them consistent. Perhaps at the same time, consider using an fxc.exe from a recent Windows 10 SDK instead of the Windows 8.1 SDK currently being used. (I actually had to go *find* a Windows 8.1 SDK installer in order to get mine to match what generate_shaders.bat was expecting to use.)",
      "revId": "6631ec521a6504be904cd64e55e2da10ddc13e57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "19ea6f5f_1a372e30",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-10-24T01:12:14Z",
      "side": 1,
      "message": "You\u0027d think this would have cause a test failure? Looks a regression test is in order :)",
      "revId": "6631ec521a6504be904cd64e55e2da10ddc13e57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eddc88e1_771ac876",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-10-24T01:12:14Z",
      "side": 1,
      "message": "Looks like one of the shaders changed here is now using v6 instead of v9. I don\u0027t think there is any particular requirement that either of these versions _has_ to be used. I\u0027d just use whatever is latest. Feel free to recompile all the shaders (in a separate change) to make that consistent if you care about that.",
      "parentUuid": "4d2ae32b_27fd8f83",
      "revId": "6631ec521a6504be904cd64e55e2da10ddc13e57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c9a1a4e9_401af515",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1518892
      },
      "writtenOn": "2021-10-24T03:22:08Z",
      "side": 1,
      "message": "Well it doesn\u0027t seem to have any impact on rendering aside from making the debug layers complain, and those aren\u0027t enabled by default.\n\nOne option to make this break in tests would be to call whatever APIs are necessary to enable the D3D11 debug layers globally, with debug breaks enabled, and then run the tests. Assuming gtest knows to treat debug breaks as failures, that\u0027d probably catch it.",
      "parentUuid": "19ea6f5f_1a372e30",
      "revId": "6631ec521a6504be904cd64e55e2da10ddc13e57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6ba48f0e_e4b565a0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1518892
      },
      "writtenOn": "2021-10-24T03:22:08Z",
      "side": 1,
      "message": "I will probably do a separate change to move it to the Windows 10 19041 SDK\u0027s version of fxc.exe. It actually produces better-commented output from what I saw, too.",
      "parentUuid": "eddc88e1_771ac876",
      "revId": "6631ec521a6504be904cd64e55e2da10ddc13e57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "39cbef86_2b393596",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-10-25T01:14:58Z",
      "side": 1,
      "message": "\u003e Well it doesn\u0027t seem to have any impact on rendering aside from making the debug layers complain\n\nBut that\u0027s very strange! The error says:\n\n\u003e The input stage requires Semantic/Index (TEXCORD,0) as input, but it is not provided by the output stage\n\nWhich basically means that the fragment shader is not getting valid values for its varying. The only way I could see this working is if the whole texture has a uniform color, so no matter what the coordinates are the fragment shader invocations end up reading the same value. Unfortunately our end2end tests do frequently produce uniformly colored images.\n\nEither that, or d3d is magically fixing this error under the hood.\n\nI have one suggestion for a regression test, and if that still magically works, I\u0027d say nevermind it. The suggestion is to find a test where this error triggers, then duplicate/modify it such that the texture being sampled here (which is the source of resolve I presume) was originally rendered to with `essl1_shaders::fs::Checkered()`.",
      "parentUuid": "c9a1a4e9_401af515",
      "revId": "6631ec521a6504be904cd64e55e2da10ddc13e57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "073485d7_96cab11f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1518892
      },
      "writtenOn": "2021-10-25T02:54:54Z",
      "side": 1,
      "message": "Well when I turn the D3D11 debug layers on, I can get it to hit the relevant shaders and spew errors in MultisampleTestES3.ResolveToFBO/ES3_D3D11_NoFixture. If I modify that test to use the Checkered shader, it still seems to read back just fine after resolve.\n\nI suspect D3D *is* magically fixing this under the hood somehow.\n\nIncidentally there are a bunch of tests that trigger D3D11 errors even with the \"TEXCORD0\" typo corrected. For a couple of examples...\n\nIncompleteTextureTestES3.IntegerType/ES3_D3D11:\n\n  D3D11 ERROR: ID3D11DeviceContext::Draw: The resource return type for component 0 declared in the shader code (SINT) is not compatible with the Shader Resource View format bound to slot 0 of the Pixel Shader unit (UNORM).  This mismatch is invalid if the shader actually uses the view (e.g. it is not skipped due to shader code branching). [ EXECUTION ERROR #361: DEVICE_DRAW_RESOURCE_RETURN_TYPE_MISMATCH]\n\nRobustResourceInitTestES3.D3D11RecoverFromStorageBug/ES3_D3D11:\n\n  D3D11 ERROR: ID3D11DeviceContext::CopySubresourceRegion: When offset by the destination coordinates, pSrcBox does not fit on the destination subresource. OffsetSrcBox \u003d { left:0, top:0, front:0, right:12, bottom:12, back:1 }. DstSubresource \u003d { left:0, top:0, front:0, right:8, bottom:8, back:1 }. [ RESOURCE_MANIPULATION ERROR #280: COPYSUBRESOURCEREGION_INVALIDSOURCEBOX]\n\nAnd yet those tests also *pass* despite validation errors. D3D is weird. I guess it\u0027s doing a \"you screwed up, but here\u0027s my best effort to make it right\" thing.",
      "parentUuid": "39cbef86_2b393596",
      "revId": "6631ec521a6504be904cd64e55e2da10ddc13e57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4f9f6048_6d34cc1e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-10-25T13:35:41Z",
      "side": 1,
      "message": "\u003e I guess it\u0027s doing a \"you screwed up, but here\u0027s my best effort to make it right\" thing.\n\nAck. That must be a side effect of all sorts of games running on it. ANGLE actually has to \"fix the app\" too in a few places.\n\nProbably still a good idea to use the Checkered shader wherever we can, but not a blocker for this change.",
      "parentUuid": "073485d7_96cab11f",
      "revId": "6631ec521a6504be904cd64e55e2da10ddc13e57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fbc3dba7_205e2876",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2021-10-27T20:02:18Z",
      "side": 1,
      "message": "LGTM, also surprised no tests were affected but fixing warnings is great. Ideally we have a way of generating test errors when we get debug layer issues like with Vulkan. Maybe one day.",
      "revId": "6631ec521a6504be904cd64e55e2da10ddc13e57",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}