{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2a4949f3_f0c15e27",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2021-10-26T03:48:45Z",
      "side": 1,
      "message": "LGTM. Adding Shabi for this for Linux coverage. Might make sense to wait to land this until we\u0027ve shaken out the follow on CLs.",
      "revId": "aa357d126763e226a6ded940f21ce2459f3c4f0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "360a9d9a_45fd109b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-10-26T04:32:44Z",
      "side": 1,
      "message": "Definitely wait until we know it works!",
      "parentUuid": "2a4949f3_f0c15e27",
      "revId": "aa357d126763e226a6ded940f21ce2459f3c4f0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f839597c_8244472b",
        "filename": "src/common/system_utils.h",
        "patchSetId": 5
      },
      "lineNbr": 93,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-10-26T04:32:44Z",
      "side": 1,
      "message": "nit: ProtectMemory to make the name more specific. Same with UnprotectMemory.",
      "range": {
        "startLine": 93,
        "startChar": 5,
        "endLine": 93,
        "endChar": 12
      },
      "revId": "aa357d126763e226a6ded940f21ce2459f3c4f0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2a670aca_50bc039f",
        "filename": "src/common/system_utils.h",
        "patchSetId": 5
      },
      "lineNbr": 99,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-10-26T04:32:44Z",
      "side": 1,
      "message": "Suggest an `enum` to void having to explain this, and seeing meaningless trues and falses.",
      "range": {
        "startLine": 98,
        "startChar": 0,
        "endLine": 99,
        "endChar": 44
      },
      "revId": "aa357d126763e226a6ded940f21ce2459f3c4f0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cf8561ca_1f724884",
        "filename": "src/common/system_utils_posix.cpp",
        "patchSetId": 5
      },
      "lineNbr": 217,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-10-26T04:32:44Z",
      "side": 1,
      "message": "Suggest initializing it to \u003d {}, just so it doesn\u0027t contain garbage.",
      "range": {
        "startLine": 217,
        "startChar": 21,
        "endLine": 217,
        "endChar": 35
      },
      "revId": "aa357d126763e226a6ded940f21ce2459f3c4f0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "216e9d9f_ee7adcc1",
        "filename": "src/common/system_utils_posix.cpp",
        "patchSetId": 5
      },
      "lineNbr": 237,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-10-26T04:32:44Z",
      "side": 1,
      "message": "Remember to remove before submission.",
      "revId": "aa357d126763e226a6ded940f21ce2459f3c4f0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "88a6bf21_d4437791",
        "filename": "src/common/system_utils_posix.cpp",
        "patchSetId": 5
      },
      "lineNbr": 238,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-10-26T04:32:44Z",
      "side": 1,
      "message": "Should this check whether sa_sigaction is nullptr? What if there was no old handler installed?\n\nAlso, I think the default handler should be called either way (including if `found`), because that could be a handler installed by the application and we should respect that.  So instead of `if (!found) default_handler()`, I think the code should say `if (default_is_valid) default_handler()`",
      "revId": "aa357d126763e226a6ded940f21ce2459f3c4f0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d401eacf_3fb87896",
        "filename": "src/common/system_utils_posix.cpp",
        "patchSetId": 5
      },
      "lineNbr": 244,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-10-26T04:32:44Z",
      "side": 1,
      "message": "Use \u003d\u003d 0. According to the man page, that signifies success. There\u0027s no 1 return value.",
      "range": {
        "startLine": 244,
        "startChar": 56,
        "endLine": 244,
        "endChar": 60
      },
      "revId": "aa357d126763e226a6ded940f21ce2459f3c4f0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0cdfc4d4_8ec5f7e1",
        "filename": "src/common/system_utils_posix.cpp",
        "patchSetId": 5
      },
      "lineNbr": 254,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-10-26T04:32:44Z",
      "side": 1,
      "message": "Same here",
      "range": {
        "startLine": 254,
        "startChar": 59,
        "endLine": 254,
        "endChar": 63
      },
      "revId": "aa357d126763e226a6ded940f21ce2459f3c4f0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ae1844c_fba3fdda",
        "filename": "src/common/system_utils_posix.cpp",
        "patchSetId": 5
      },
      "lineNbr": 257,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-10-26T04:32:44Z",
      "side": 1,
      "message": "nit: Per ANGLE style, remove `static` and move to an anonymous namespace.",
      "range": {
        "startLine": 257,
        "startChar": 0,
        "endLine": 257,
        "endChar": 6
      },
      "revId": "aa357d126763e226a6ded940f21ce2459f3c4f0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9c6cc6be_abe5244d",
        "filename": "src/common/system_utils_posix.cpp",
        "patchSetId": 5
      },
      "lineNbr": 262,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-10-26T04:32:44Z",
      "side": 1,
      "message": "nit: Use perror",
      "revId": "aa357d126763e226a6ded940f21ce2459f3c4f0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "43a6cc06_e84dc6ce",
        "filename": "src/common/system_utils_posix.cpp",
        "patchSetId": 5
      },
      "lineNbr": 282,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-10-26T04:32:44Z",
      "side": 1,
      "message": "nit: Use perror",
      "revId": "aa357d126763e226a6ded940f21ce2459f3c4f0b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}