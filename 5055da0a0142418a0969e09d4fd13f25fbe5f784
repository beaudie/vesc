{
  "comments": [
    {
      "key": {
        "uuid": "cc5fdbe9_5e1f846b",
        "filename": "src/tests/test_expectations/GPUTestExpectationsParser.cpp",
        "patchSetId": 1
      },
      "lineNbr": 310,
      "author": {
        "id": 1326275
      },
      "writtenOn": "2019-06-26T17:12:34Z",
      "side": 1,
      "message": "Looks good in general, but I want to double check the logic here. Is this still the case? What\u0027s a good solution?\nIe.\n101 MAC : DEQP/test_group/*/long_named_test \u003d FAIL // int fails on Mac \n100 MAC NVIDIA : DEQP/test_group/subgroup/* \u003d SKIP // crashes on Nvidia mac\n\nThis case would use the FAIL expectation for \nDEQP/test_group/subgroup/long_named_test, which crashes.",
      "revId": "5055da0a0142418a0969e09d4fd13f25fbe5f784",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e66740a_0b587ca7",
        "filename": "src/tests/test_expectations/GPUTestExpectationsParser.cpp",
        "patchSetId": 1
      },
      "lineNbr": 310,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-06-26T18:29:10Z",
      "side": 1,
      "message": "Yes, I did encounter this issue. I had been thinking it would make more sense for the override to be based on the action rather than the length of the suppression. I.e. PASS overrides SKIP overrides TIMEOUT overrides FAIL overrides FLAKY.\n\nDoes that order sound good to you? I put PASS as the highest priority as I would expect it be used like \"* \u003d FAIL, specific \u003d PASS\".",
      "parentUuid": "cc5fdbe9_5e1f846b",
      "revId": "5055da0a0142418a0969e09d4fd13f25fbe5f784",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8697fcb5_fe46d627",
        "filename": "src/tests/test_expectations/GPUTestExpectationsParser.cpp",
        "patchSetId": 1
      },
      "lineNbr": 310,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2019-06-26T18:49:02Z",
      "side": 1,
      "message": "I\u0027m OK with using the expectation as a way to override.  We should make sure to use it sparingly though, the WebGL expectations used to work this way and it can become easy to make and end up with messy intertwined expectations.",
      "parentUuid": "2e66740a_0b587ca7",
      "revId": "5055da0a0142418a0969e09d4fd13f25fbe5f784",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "71ca48e1_06d84715",
        "filename": "src/tests/test_expectations/GPUTestExpectationsParser.cpp",
        "patchSetId": 1
      },
      "lineNbr": 310,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-06-26T18:51:50Z",
      "side": 1,
      "message": "Would you want me to make this change? Or since our expectations seem to be correct at the moment, defer that to another CL?",
      "parentUuid": "8697fcb5_fe46d627",
      "revId": "5055da0a0142418a0969e09d4fd13f25fbe5f784",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7ecb2b6b_24b96c3c",
        "filename": "src/tests/test_expectations/GPUTestExpectationsParser.cpp",
        "patchSetId": 1
      },
      "lineNbr": 310,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-06-26T19:00:06Z",
      "side": 1,
      "message": "Partial overlap can get pretty gnarly in some cases. I also recall Chrome having some problems with this kind of behaviour. You can probably just take out this section in the worst case as it\u0027s no longer valid.",
      "parentUuid": "2e66740a_0b587ca7",
      "revId": "5055da0a0142418a0969e09d4fd13f25fbe5f784",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "18f21c11_a2ff9700",
        "filename": "src/tests/test_expectations/GPUTestExpectationsParser.cpp",
        "patchSetId": 1
      },
      "lineNbr": 310,
      "author": {
        "id": 1326275
      },
      "writtenOn": "2019-06-26T19:19:12Z",
      "side": 1,
      "message": "Just to note, this CL will mean we diverge from http://bit.ly/chromium-test-list-format",
      "parentUuid": "7ecb2b6b_24b96c3c",
      "revId": "5055da0a0142418a0969e09d4fd13f25fbe5f784",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "892a745e_d42992e2",
        "filename": "src/tests/test_expectations/GPUTestExpectationsParser.cpp",
        "patchSetId": 1
      },
      "lineNbr": 310,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-06-26T19:43:49Z",
      "side": 1,
      "message": "I think we have already diverged from that! Examples there are like \"foo.bar.* [ Skip ]\".\n\n---\n\nWhat do you think of letting the overrides simply be in order? As in, whatever expectation is mentioned last would be the one to use?",
      "parentUuid": "18f21c11_a2ff9700",
      "revId": "5055da0a0142418a0969e09d4fd13f25fbe5f784",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a18cdd3_989241c4",
        "filename": "src/tests/test_expectations/GPUTestExpectationsParser.cpp",
        "patchSetId": 1
      },
      "lineNbr": 310,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-06-26T20:40:20Z",
      "side": 1,
      "message": "Going to land as is, and defer this change. It\u0027s an unnecessary risk right now to modify the behavior as it would affect suppressions for all backends.",
      "parentUuid": "892a745e_d42992e2",
      "revId": "5055da0a0142418a0969e09d4fd13f25fbe5f784",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}