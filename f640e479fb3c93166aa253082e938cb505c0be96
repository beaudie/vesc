{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "96f3e601_5ae39126",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-11-19T15:27:32Z",
      "side": 1,
      "message": "LGTM, but not an expert in the potential pitfalls of this change.",
      "revId": "f640e479fb3c93166aa253082e938cb505c0be96",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "79106339_af19a876",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2021-11-19T17:30:37Z",
      "side": 1,
      "message": "This solution will only work for the test, not the apps we want to record.  I\u0027ll look around for a way to force this outside of the manifest.\n\nNote that this may eventually be on by default and can\u0027t be turned off.  If there\u0027s any way to solve this that allows tagging, that will be future proof.",
      "parentUuid": "96f3e601_5ae39126",
      "revId": "f640e479fb3c93166aa253082e938cb505c0be96",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "169527e4_87c59c64",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1491687
      },
      "writtenOn": "2021-11-23T11:17:00Z",
      "side": 1,
      "message": "Cody, this workaround is indeed only required for the system utils unit tests, as this is the only place where the to be tracked memory is allocated in a test.\nIn the FrameCapture case, VMA allocates the memory, which is not using tagged pointers. Meaning that pointers returned from glMapBuffer are not tagged as well, which can be tested in the end2end tests.\nThis is why this issue only came up for the system utils tests and not for the end2end tests and capturing apps.\n\nAn alternative I see to avoid the flag in the Manifest is to manually remove the tags from the last 2 bytes in the address on Android with an #ifdef, which is less clean than the current solution.\n\nI am also puzzled why the POSIX implementation of AOSP is accepting tagged pointers in the mprotect function, but is returning untagged pointers in it\u0027s page fault callback via the siginfo_t struct.",
      "parentUuid": "79106339_af19a876",
      "revId": "f640e479fb3c93166aa253082e938cb505c0be96",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6b100cbf_94ee65ef",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2021-11-23T15:45:27Z",
      "side": 1,
      "message": "Thanks for the explanation Lubosz.  I do agree this seems wrong and we should follow up with an Android bug.  If this isn\u0027t blocking use of the feature with apps, let\u0027s go ahead with the workaround.\n\nAnother idea would be to write the test such that it mirrors how the app is allocating memory.",
      "parentUuid": "169527e4_87c59c64",
      "revId": "f640e479fb3c93166aa253082e938cb505c0be96",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}