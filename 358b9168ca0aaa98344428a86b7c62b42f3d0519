{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "bc2f8168_35e9f8f1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2024-02-01T16:40:24Z",
      "side": 1,
      "message": "PTAL",
      "revId": "358b9168ca0aaa98344428a86b7c62b42f3d0519",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "64548731_9b7de64e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-02-01T20:56:24Z",
      "side": 1,
      "message": "By the way, I took a look at the failing test `ComputeShaderTest.DispatchConvertVertexDispatch/ES3_1_Vulkan_SwiftShader`. With dynamic state disabled, I see the same mismatch that VVL complains about. The static version of that VU is suppressed (VUID-VkGraphicsPipelineCreateInfo-Input-08733). You can add the VU being complained about here (VUID-vkCmdDraw-Input-08734) to the suppression list next to it.\n\nWhatever that mismatch is, it\u0027s not due to this CL.",
      "revId": "358b9168ca0aaa98344428a86b7c62b42f3d0519",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c309b78c_d1daf096",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2024-02-06T21:06:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "64548731_9b7de64e",
      "revId": "358b9168ca0aaa98344428a86b7c62b42f3d0519",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "323dacc1_beef118c",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 1620,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-02-01T20:33:50Z",
      "side": 1,
      "message": "I feel like something\u0027s still wrong here. We don\u0027t have to do this sort of thing for the other dynamic state.\n\nI see `mNewGraphicsCommandBufferDirtyBits` has this bit, so clearly the issue is not on the first draw of the render pass, right? And after that, this command is already called in the command buffer...\n\nYou shouldn\u0027t need to re-set the vertex buffers on _every_ draw.",
      "revId": "358b9168ca0aaa98344428a86b7c62b42f3d0519",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d0427c2_4d351742",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 1620,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-02-01T20:40:49Z",
      "side": 1,
      "message": "What test fails if you remove this? I ran some tests without this, and so far they all passed. A corner case issue mishandled elsewhere probably.",
      "parentUuid": "323dacc1_beef118c",
      "revId": "358b9168ca0aaa98344428a86b7c62b42f3d0519",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dc84cb12_3e57a487",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 1620,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2024-02-06T21:06:32Z",
      "side": 1,
      "message": "the issue is not with setting the dirtybit but the `dirtyBitMask`.\n\nwith code before this change - if there were no vertex input buffers we would skip calling handleDirtyGraphicsVertexBuffers() even if `DIRTY_BIT_VERTEX_BUFFERS` because of the value of `dirtyBitMask`\n\nNow, we add `DIRTY_BIT_VERTEX_BUFFERS` bit to `dirtyBitMask` even if there are no vertex input buffers since the spec for `VK_EXT_vertex_input_dynamic_state` requires us to call `vkCmdSetVertexInputEXT` even if there are no active vertex input buffers.",
      "parentUuid": "4d0427c2_4d351742",
      "revId": "358b9168ca0aaa98344428a86b7c62b42f3d0519",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b8811197_c1ae7590",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 2627,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-02-01T20:33:50Z",
      "side": 1,
      "message": "Is this a `vector` just to be able to get the `size()`. In that case, you can use `FixedVector`. You can add that type in `angletypes.cpp` for convenience:\n\n```\n template \u003ctypename T\u003e\n using AttribArray \u003d std::array\u003cT, MAX_VERTEX_ATTRIBS\u003e;\n\n+template \u003ctypename T\u003e\n+using AttribVector \u003d std::FixedVector\u003cT, MAX_VERTEX_ATTRIBS\u003e;\n```",
      "range": {
        "startLine": 2627,
        "startChar": 13,
        "endLine": 2627,
        "endChar": 19
      },
      "revId": "358b9168ca0aaa98344428a86b7c62b42f3d0519",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "080aa6cc_ce407b84",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 2627,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2024-02-06T21:06:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b8811197_c1ae7590",
      "range": {
        "startLine": 2627,
        "startChar": 13,
        "endLine": 2627,
        "endChar": 19
      },
      "revId": "358b9168ca0aaa98344428a86b7c62b42f3d0519",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "81dd7686_bc2e6136",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 2655,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-02-01T20:47:53Z",
      "side": 1,
      "message": "Fixes garbage in pNext:\n\n```suggestion\n                VkVertexInputBindingDescription2EXT bindingDesc \u003d {};\n                VkVertexInputAttributeDescription2EXT attribDesc \u003d {};\n```",
      "range": {
        "startLine": 2654,
        "startChar": 0,
        "endLine": 2655,
        "endChar": 65
      },
      "revId": "358b9168ca0aaa98344428a86b7c62b42f3d0519",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "908c71f6_873fd082",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 2655,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2024-02-06T21:06:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "81dd7686_bc2e6136",
      "range": {
        "startLine": 2654,
        "startChar": 0,
        "endLine": 2655,
        "endChar": 65
      },
      "revId": "358b9168ca0aaa98344428a86b7c62b42f3d0519",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e2c16d94_07f70c29",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "patchSetId": 6
      },
      "lineNbr": 3012,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2024-02-01T16:40:24Z",
      "side": 1,
      "message": "change to - `getPipelineVertexInputStateFormat`",
      "range": {
        "startLine": 3012,
        "startChar": 31,
        "endLine": 3012,
        "endChar": 64
      },
      "revId": "358b9168ca0aaa98344428a86b7c62b42f3d0519",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "005ef1f4_3ffbccbd",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "patchSetId": 6
      },
      "lineNbr": 3012,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2024-02-06T21:06:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e2c16d94_07f70c29",
      "range": {
        "startLine": 3012,
        "startChar": 31,
        "endLine": 3012,
        "endChar": 64
      },
      "revId": "358b9168ca0aaa98344428a86b7c62b42f3d0519",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}