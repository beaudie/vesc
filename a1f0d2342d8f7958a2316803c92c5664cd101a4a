{
  "comments": [
    {
      "key": {
        "uuid": "e583f71c_97dcecaa",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 431,
      "author": {
        "id": 1263724
      },
      "writtenOn": "2019-08-09T17:12:50Z",
      "side": 0,
      "message": "Could you provide some commentary in the CL comment on why this isn\u0027t necessary?\nMaybe that would be better for an offline discussion.\nDoes a CPU read not need a read dependency?",
      "revId": "a1f0d2342d8f7958a2316803c92c5664cd101a4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "586fba8e_5eaa5184",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 431,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-08-09T17:37:53Z",
      "side": 0,
      "message": "Intuitively and from spec language copyTexImage is reading from a Framebuffer. The CL also doesn\u0027t seem to enable any new tests.",
      "parentUuid": "e583f71c_97dcecaa",
      "revId": "a1f0d2342d8f7958a2316803c92c5664cd101a4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "77a10387_ad83e8ed",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 431,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-08-09T17:46:14Z",
      "side": 0,
      "message": "ah, I get it. it\u0027s doing a flush and readback. and this call is happening after the flush. LGTM",
      "parentUuid": "586fba8e_5eaa5184",
      "revId": "a1f0d2342d8f7958a2316803c92c5664cd101a4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "27140e31_39cad153",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 431,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-08-09T17:46:53Z",
      "side": 0,
      "message": "I think I thought about remove it when I was working in this area but left it as a \"who cares, let\u0027s keep it to be safe\".\n\nThe reason this is not needed is that `stageSubresourceUpdateFromFramebuffer` is doing a finish call, so there are no real nodes at this point, and there\u0027s no point in setting a read dependency (would not have been true for write dependency).",
      "parentUuid": "586fba8e_5eaa5184",
      "revId": "a1f0d2342d8f7958a2316803c92c5664cd101a4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f8c3e6ad_b26c6014",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 431,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2019-08-09T17:57:13Z",
      "side": 0,
      "message": "The CL does reference the bug, with all of the details.  If desired, I can add a comment that explicitly says the details are in the bug (I wrote the bug and immediately the CL).  I\u0027ll probably wait till the bots are finished, to not give them more to do.",
      "parentUuid": "27140e31_39cad153",
      "revId": "a1f0d2342d8f7958a2316803c92c5664cd101a4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aa3d24c0_f496fd05",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 431,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2019-08-09T18:01:30Z",
      "side": 0,
      "message": "\u003e The CL also doesn\u0027t seem to enable any new tests\n\nYes.  As mentioned in the bug, when I was trying to track one crash, I forced/hacked all CopyTexImage calls down this path, and that\u0027s how I found this bug.  Those SKIP\u0027d test normally go down a GPU (DrawWith*) path, which is randomly crashing due to an assert.  This and other CLs have dealt with other crash root causes.  Eventually, those tests will pass:-)!",
      "parentUuid": "f8c3e6ad_b26c6014",
      "revId": "a1f0d2342d8f7958a2316803c92c5664cd101a4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}