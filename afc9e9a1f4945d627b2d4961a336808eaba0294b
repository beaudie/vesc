{
  "comments": [
    {
      "key": {
        "uuid": "07e2c675_47e65d81",
        "filename": "/COMMIT_MSG",
        "patchSetId": 33
      },
      "lineNbr": 9,
      "author": {
        "id": 1001426
      },
      "writtenOn": "2018-05-25T05:05:47Z",
      "side": 1,
      "message": "what problems?",
      "range": {
        "startLine": 9,
        "startChar": 66,
        "endLine": 9,
        "endChar": 74
      },
      "revId": "afc9e9a1f4945d627b2d4961a336808eaba0294b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "295647bf_b8a2aedb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 33
      },
      "lineNbr": 13,
      "author": {
        "id": 1001426
      },
      "writtenOn": "2018-05-25T05:05:47Z",
      "side": 1,
      "message": "all of them, isn\u0027t it?",
      "range": {
        "startLine": 13,
        "startChar": 9,
        "endLine": 13,
        "endChar": 15
      },
      "revId": "afc9e9a1f4945d627b2d4961a336808eaba0294b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9800c893_21190846",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 33
      },
      "lineNbr": 548,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-05-24T18:35:05Z",
      "side": 1,
      "message": "how hard would it be to just store the Framebuffer in the Context and trigger an onMakeCurrent(surface) function instead?",
      "range": {
        "startLine": 548,
        "startChar": 8,
        "endLine": 548,
        "endChar": 66
      },
      "revId": "afc9e9a1f4945d627b2d4961a336808eaba0294b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be234c21_1e0b407a",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 33
      },
      "lineNbr": 548,
      "author": {
        "id": 1001426
      },
      "writtenOn": "2018-05-25T05:05:47Z",
      "side": 1,
      "message": "I\u0027m lost/clueless.  This looks like creating a new framebuffer on every call to makeCurrent, which seems more heavyweight than we\u0027d want.\nIf we need a framebuffer per surface/context pair, why aren\u0027t we doing a map from those pairs to framebuffers?  Framebuffers that live in that map instead of framebuffers created and thrown away.",
      "parentUuid": "9800c893_21190846",
      "range": {
        "startLine": 548,
        "startChar": 8,
        "endLine": 548,
        "endChar": 66
      },
      "revId": "afc9e9a1f4945d627b2d4961a336808eaba0294b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "141b16ec_8c3e5261",
        "filename": "src/libANGLE/renderer/d3d/SurfaceD3D.cpp",
        "patchSetId": 33
      },
      "lineNbr": 135,
      "author": {
        "id": 1001426
      },
      "writtenOn": "2018-05-25T05:05:47Z",
      "side": 1,
      "message": "omit parameter name?",
      "range": {
        "startLine": 135,
        "startChar": 73,
        "endLine": 135,
        "endChar": 80
      },
      "revId": "afc9e9a1f4945d627b2d4961a336808eaba0294b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9263addd_b417a369",
        "filename": "src/libANGLE/renderer/gl/SurfaceGL.cpp",
        "patchSetId": 33
      },
      "lineNbr": 29,
      "author": {
        "id": 1001426
      },
      "writtenOn": "2018-05-25T05:05:47Z",
      "side": 1,
      "message": "omit parameter name?",
      "range": {
        "startLine": 29,
        "startChar": 72,
        "endLine": 29,
        "endChar": 79
      },
      "revId": "afc9e9a1f4945d627b2d4961a336808eaba0294b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "97e44da0_c6e7de12",
        "filename": "src/libANGLE/renderer/gl/egl/ozone/DisplayOzone.cpp",
        "patchSetId": 33
      },
      "lineNbr": 141,
      "author": {
        "id": 1001426
      },
      "writtenOn": "2018-05-25T05:05:47Z",
      "side": 1,
      "message": "Was I doing it wrong before?  I never noticed any problems, just lucky?",
      "revId": "afc9e9a1f4945d627b2d4961a336808eaba0294b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9fcc9e21_d14f5c91",
        "filename": "src/libANGLE/renderer/gl/egl/ozone/DisplayOzone.cpp",
        "patchSetId": 33
      },
      "lineNbr": 218,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2018-05-23T22:42:16Z",
      "side": 1,
      "message": "nit: Can we have a comment about how resizing renderbuffers here will update them in all framebuffers in which they are used?",
      "revId": "afc9e9a1f4945d627b2d4961a336808eaba0294b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "43812960_0de62a52",
        "filename": "src/libANGLE/renderer/gl/egl/ozone/DisplayOzone.cpp",
        "patchSetId": 33
      },
      "lineNbr": 749,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2018-05-24T01:49:58Z",
      "side": 1,
      "message": "Creating a new framebuffer every frame will be slow, I think.\nMaybe DisplayOzone should just stop using FramebufferGL and will call GL functions directly.",
      "range": {
        "startLine": 749,
        "startChar": 27,
        "endLine": 749,
        "endChar": 37
      },
      "revId": "afc9e9a1f4945d627b2d4961a336808eaba0294b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8f552551_fa1829c7",
        "filename": "src/libANGLE/renderer/gl/egl/ozone/DisplayOzone.cpp",
        "patchSetId": 33
      },
      "lineNbr": 749,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-05-24T15:21:10Z",
      "side": 1,
      "message": "Agreed that it could be slow, it was hard to figure out what context can own the FBO.  I believe these methods are only used for debugging purposes to get something to show on the screen.  Can you confirm, Frank?",
      "parentUuid": "43812960_0de62a52",
      "range": {
        "startLine": 749,
        "startChar": 27,
        "endLine": 749,
        "endChar": 37
      },
      "revId": "afc9e9a1f4945d627b2d4961a336808eaba0294b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "163f1cef_e87a52d0",
        "filename": "src/libANGLE/renderer/gl/egl/ozone/DisplayOzone.cpp",
        "patchSetId": 33
      },
      "lineNbr": 749,
      "author": {
        "id": 1001426
      },
      "writtenOn": "2018-05-25T05:05:47Z",
      "side": 1,
      "message": "There\u0027s a Buffer for each surface to hold the surface contents, and Buffer is also used in DisplayOzone to put stuff on screen.  Buffer supports scan out to screen, but it\u0027s only used with the display buffers, not the surface buffers.   Each window surface Buffer gets drawn into a display Buffer which is then flipped to screen (double buffering).\nThe Buffers in DisplayOzone don\u0027t need the \"create a new framebuffer every time\" treatment, only the surface Buffers need that.  I think it would be best to create framebuffers only once for the display Buffer objects.  It should be possible to refactor Buffer to support both use cases.\nThat said, the display functionality does only exist for debugging at this point, and is admittedly crude.  It might get fleshed out and be useful for someone\u0027s application some day, or it might not.\n\nYuly: I don\u0027t understand your comment.  DisplayOzone doesn\u0027t use FramebufferGL.  It\u0027s only mentioned in a Buffer method which is only used by SurfaceOzone.  Nor do I see why we\u0027d want to call GL directly, or what that has to do with FramebufferGL.\n\nGeoff: Dunno if this helps but DisplayOzone::mContext should own the FBO used for the drawing done in DisplayOzone.  I don\u0027t know about the surface FBOs but it\u0027s the same in every back end isn\u0027t it?  You said something about the surface/context pairs and framebuffer \"glue\" ...",
      "parentUuid": "8f552551_fa1829c7",
      "range": {
        "startLine": 749,
        "startChar": 27,
        "endLine": 749,
        "endChar": 37
      },
      "revId": "afc9e9a1f4945d627b2d4961a336808eaba0294b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b054f248_6cb785cb",
        "filename": "src/libANGLE/renderer/null/SurfaceNULL.cpp",
        "patchSetId": 33
      },
      "lineNbr": 32,
      "author": {
        "id": 1001426
      },
      "writtenOn": "2018-05-25T05:05:47Z",
      "side": 1,
      "message": "omit parameter name?",
      "range": {
        "startLine": 32,
        "startChar": 74,
        "endLine": 32,
        "endChar": 81
      },
      "revId": "afc9e9a1f4945d627b2d4961a336808eaba0294b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}