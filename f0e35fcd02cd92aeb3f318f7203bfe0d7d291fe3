{
  "comments": [
    {
      "key": {
        "uuid": "275724d1_0703a76f",
        "filename": "src/libANGLE/renderer/gl/RendererGL.cpp",
        "patchSetId": 5
      },
      "lineNbr": 286,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2020-01-09T14:56:58Z",
      "side": 1,
      "message": "nit: could you unset mNeedsFlushBeforeDeleteTextures here? Maybe finish too?",
      "revId": "f0e35fcd02cd92aeb3f318f7203bfe0d7d291fe3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "86920532_ea537445",
        "filename": "src/libANGLE/renderer/gl/RendererGL.cpp",
        "patchSetId": 5
      },
      "lineNbr": 286,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2020-01-09T19:31:30Z",
      "side": 1,
      "message": "Thanks, good idea - done. Also flushIfNecessaryBeforeDeleteTextures() just call flush().",
      "parentUuid": "275724d1_0703a76f",
      "revId": "f0e35fcd02cd92aeb3f318f7203bfe0d7d291fe3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8702c2ca_c24f8aa7",
        "filename": "src/libANGLE/renderer/gl/RendererGL.cpp",
        "patchSetId": 5
      },
      "lineNbr": 685,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-01-09T15:23:04Z",
      "side": 1,
      "message": "One naming comment. It is preferred if these two functions had less implementation detail in them.\n\nFor example, this could be \"onTextureCopy()\" and the next could be \"onTextureDelete\". The fact that we need to flush because of this, and whether there\u0027s a workaround involved etc, are not something the caller has to get involved with.\n\nThis also means that you can move the `if (features.flushBeforeDeleteTextureIfCopiedTo.enabled)` check inside this function and have the caller be blind to the workaround!",
      "range": {
        "startLine": 685,
        "startChar": 17,
        "endLine": 685,
        "endChar": 50
      },
      "revId": "f0e35fcd02cd92aeb3f318f7203bfe0d7d291fe3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c24bcac9_ed1daad8",
        "filename": "src/libANGLE/renderer/gl/RendererGL.cpp",
        "patchSetId": 5
      },
      "lineNbr": 685,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2020-01-09T19:31:30Z",
      "side": 1,
      "message": "I would prefer to name these entry points more explicitly. They\u0027re only being added because of a macOS-specific driver bug, and it\u0027s not clear whether they will be useful more generally. If it turns out that a different workaround is needed in the future, then these mechanism will be removed.",
      "parentUuid": "8702c2ca_c24f8aa7",
      "range": {
        "startLine": 685,
        "startChar": 17,
        "endLine": 685,
        "endChar": 50
      },
      "revId": "f0e35fcd02cd92aeb3f318f7203bfe0d7d291fe3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "13239dae_cd5f49f2",
        "filename": "src/libANGLE/renderer/gl/RendererGL.cpp",
        "patchSetId": 5
      },
      "lineNbr": 685,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-01-09T19:38:03Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "c24bcac9_ed1daad8",
      "range": {
        "startLine": 685,
        "startChar": 17,
        "endLine": 685,
        "endChar": 50
      },
      "revId": "f0e35fcd02cd92aeb3f318f7203bfe0d7d291fe3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e05c8d39_24d707ec",
        "filename": "src/tests/gl_tests/CopyTexImageTest.cpp",
        "patchSetId": 5
      },
      "lineNbr": 492,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-01-09T16:25:44Z",
      "side": 1,
      "message": "Can you use the RAII types in gl_raii.h for textures and framebuffers in this test? You can trigger deletion by calling obj.reset().",
      "range": {
        "startLine": 491,
        "startChar": 3,
        "endLine": 492,
        "endChar": 31
      },
      "revId": "f0e35fcd02cd92aeb3f318f7203bfe0d7d291fe3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c4d217ed_578c9c65",
        "filename": "src/tests/gl_tests/CopyTexImageTest.cpp",
        "patchSetId": 5
      },
      "lineNbr": 513,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-01-09T16:25:44Z",
      "side": 1,
      "message": "nit: you can use ASSERT_GL_FRAMEBUFFER_COMPLETE",
      "range": {
        "startLine": 513,
        "startChar": 4,
        "endLine": 513,
        "endChar": 88
      },
      "revId": "f0e35fcd02cd92aeb3f318f7203bfe0d7d291fe3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}