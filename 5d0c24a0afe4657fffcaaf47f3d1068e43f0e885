{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "57d4f1da_dc9303a1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-10-09T15:36:48Z",
      "side": 1,
      "message": "Restore?",
      "range": {
        "startLine": 7,
        "startChar": 8,
        "endLine": 7,
        "endChar": 21
      },
      "revId": "5d0c24a0afe4657fffcaaf47f3d1068e43f0e885",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5aec5347_da453ead",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-10-09T15:58:51Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "57d4f1da_dc9303a1",
      "range": {
        "startLine": 7,
        "startChar": 8,
        "endLine": 7,
        "endChar": 21
      },
      "revId": "5d0c24a0afe4657fffcaaf47f3d1068e43f0e885",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ecbd66d9_50753c69",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-10-09T15:58:51Z",
      "side": 1,
      "message": "LGTM, thanks for fixing this!",
      "revId": "5d0c24a0afe4657fffcaaf47f3d1068e43f0e885",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "08db5079_340b22b9",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1075,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-10-09T18:17:02Z",
      "side": 1,
      "message": "I was thinking all you need to do is this (after line 1085):\nif(dsOps.storeOp \u003d\u003d DONT_CARE)\n{\n       setDepthContentDefined(false);\n}\nelse\n{\n      if(dsOps.storeOp \u003d\u003d NONE_QCOM)\n               ASSERT(mContentDefined\u003d\u003dtrue);\n       else\n               setDepthContentDefined(true);\n}\n\nIs there any reason that we want to store but mean time want to mark its content as undefined? I can\u0027t think out any. So set content defined based on store op seems more straight forward. \n\nAnd if you take this approach, you may want to wait until crrev.com/c/2462604 that changes storeOp a bit.",
      "range": {
        "startLine": 1070,
        "startChar": 0,
        "endLine": 1075,
        "endChar": 5
      },
      "revId": "5d0c24a0afe4657fffcaaf47f3d1068e43f0e885",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "02ec2f61_1a0b253b",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1075,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-10-09T19:02:12Z",
      "side": 1,
      "message": "Thanks to your CL, we can now look at this at endRP time.\n\nI think you are correct about the relationship between DONT_CARE and mContentDefined at endRP time.  I thought about this, and I just looked at the different tests that I (and you) created.\n\nI\u0027m not sure that your code above is correct though.  Why do you think you can ASSERT(mContentDefined\u003d\u003dtrue) for NONE_QCOM?  I found (and Shabi\u0027s has it too) that we need to set/restore it to true for the else case.\n\nIf we can\u0027t ASSERT for NONE_QCOM, we can simply this CL to:\n\n    if (isInvalidated(mDepthCmdSizeInvalidated, mDepthCmdSizeDisabled))\n    {\n        setDepthContentDefined(false);\n        dsOps.storeOp \u003d VK_ATTACHMENT_STORE_OP_DONT_CARE;\n    }\n    else\n    {\n        setDepthContentDefined(true);\n    }\n\nand the same for stencil.",
      "parentUuid": "08db5079_340b22b9",
      "range": {
        "startLine": 1070,
        "startChar": 0,
        "endLine": 1075,
        "endChar": 5
      },
      "revId": "5d0c24a0afe4657fffcaaf47f3d1068e43f0e885",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "803a9304_698fd844",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1075,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-10-09T19:28:41Z",
      "side": 1,
      "message": "I guess one possibility is that if app is actually reading undefined data (real app probbaly won\u0027t, but one of the test might). When we enter renderpass, mContentDefined is false, so loadOp is DontCare. Because app did not call invalidate and it is only used for read, we set storeOp to Sore, and with my other CL, we set it to NONE. But content is still undefined, because it starts with undefined and we never write to it. Is this the situation you were seeing? \n\nIf yes, then I think either set the storeOp to DontCare instead of NONE, or do what you said above. The only downside of what you said above is that now we will set mContentDefined to true instead of leave it as undefined. Real app likely shouldn\u0027t get into this, so probably doesn\u0027t matter which one you pick.",
      "parentUuid": "02ec2f61_1a0b253b",
      "range": {
        "startLine": 1070,
        "startChar": 0,
        "endLine": 1075,
        "endChar": 5
      },
      "revId": "5d0c24a0afe4657fffcaaf47f3d1068e43f0e885",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}