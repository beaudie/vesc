{
  "comments": [
    {
      "key": {
        "uuid": "998cf269_e976a6ab",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 95,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-07-04T14:49:18Z",
      "side": 1,
      "message": "You can surround this with `if (signalSemaphore)`. The struct is already cleared.",
      "range": {
        "startLine": 94,
        "startChar": 0,
        "endLine": 95,
        "endChar": 90
      },
      "revId": "49f45726936373836922b38719f4e14c7075e4a0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e2f569c4_47b65f45",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 891,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-07-04T14:49:18Z",
      "side": 1,
      "message": "Please add a comment here explaining that we don\u0027t need to wait on the acquire semaphore because this function is always generating commands, so there\u0027s always something to flush (and ContextVk::flushImpl will use that semaphore).\n\nIf in the future this function is changed in such a way that may not generate commands, there would be a bug. You could even `ASSERT(!contextVk-\u003egetCommandGraph()-\u003eempty());`.\n\nAn example of such a change would be to avoid the layout transition if the layout is already Present.",
      "revId": "49f45726936373836922b38719f4e14c7075e4a0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6629e2ff_e41176c4",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 891,
      "author": {
        "id": 1001794
      },
      "writtenOn": "2019-07-08T17:24:01Z",
      "side": 1,
      "message": "We provide a semaphore, and flushImpl will always submit it, even if the command graph is empty. Therefore, it would not be a bug if we could skip the layout transition because the image was already in present layout. Callers shouldn\u0027t need to worry about this any more.",
      "parentUuid": "e2f569c4_47b65f45",
      "revId": "49f45726936373836922b38719f4e14c7075e4a0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "50fc8e6d_5b0cce08",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1004,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-07-04T14:49:18Z",
      "side": 1,
      "message": "This is incremented in `present` before a call to `nextSwapchainImage`. It basically means you are waiting on the previous frame instead of the one before previous. This should be put back in `present` before `mSwapHistory[mCurrentSwapHistroyIndex]` and `mCurrentSwapHistroyIndex` are modified.",
      "range": {
        "startLine": 1004,
        "startChar": 37,
        "endLine": 1004,
        "endChar": 61
      },
      "revId": "49f45726936373836922b38719f4e14c7075e4a0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "81f01482_d1a5f94f",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1004,
      "author": {
        "id": 1001794
      },
      "writtenOn": "2019-07-08T17:24:01Z",
      "side": 1,
      "message": "Good point, we would need to enlarge the swap history to 3 if we wait here to keep the same amount of submitted work if the throttling is done here.\n\nThis was just saving having to later move acquire semaphore into SwapHistory by placing it there initially. I guess it didn\u0027t really save much.",
      "parentUuid": "50fc8e6d_5b0cce08",
      "range": {
        "startLine": 1004,
        "startChar": 37,
        "endLine": 1004,
        "endChar": 61
      },
      "revId": "49f45726936373836922b38719f4e14c7075e4a0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}