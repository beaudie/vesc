{
  "comments": [
    {
      "key": {
        "uuid": "cc7863ce_e55a2b19",
        "filename": "src/libANGLE/renderer/vulkan/GlslangWrapper.cpp",
        "patchSetId": 6
      },
      "lineNbr": 259,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-05-10T16:57:00Z",
      "side": 1,
      "message": "minor request, but can we leave the code explicitly deleting markers? I like having errors when we have markers that are not explicitly dropped. Prevents some accidental code patterns from working.",
      "range": {
        "startLine": 257,
        "startChar": 8,
        "endLine": 259,
        "endChar": 10
      },
      "revId": "e93d75086091677cde3730f3c7441984fa242069",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f678848e_1dec61b5",
        "filename": "src/libANGLE/renderer/vulkan/GlslangWrapper.cpp",
        "patchSetId": 6
      },
      "lineNbr": 259,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-05-10T17:31:15Z",
      "side": 1,
      "message": "I agree, but I had to do this for the sake of \"unused packed uniform blocks\". The linker drops those, and I didn\u0027t notice a way to iterate over them and make this replacement.",
      "parentUuid": "cc7863ce_e55a2b19",
      "range": {
        "startLine": 257,
        "startChar": 8,
        "endLine": 259,
        "endChar": 10
      },
      "revId": "e93d75086091677cde3730f3c7441984fa242069",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cf2d894d_254475ca",
        "filename": "src/libANGLE/renderer/vulkan/GlslangWrapper.cpp",
        "patchSetId": 6
      },
      "lineNbr": 259,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-05-10T17:39:41Z",
      "side": 1,
      "message": "You should be able to store the names of dropped blocks like we do for unused uniforms, right? In InterfaceBlockLinker::linkBlocks?",
      "parentUuid": "f678848e_1dec61b5",
      "range": {
        "startLine": 257,
        "startChar": 8,
        "endLine": 259,
        "endChar": 10
      },
      "revId": "e93d75086091677cde3730f3c7441984fa242069",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "babd3d16_73206e62",
        "filename": "src/libANGLE/renderer/vulkan/GlslangWrapper.cpp",
        "patchSetId": 6
      },
      "lineNbr": 277,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-05-10T16:57:00Z",
      "side": 1,
      "message": "is it possible to make this logic a part of the GlslangWrapper and not the IntermediateShaderSource class? Like with an explicit replacement call? It feels like it\u0027s maybe not the right place here.",
      "range": {
        "startLine": 271,
        "startChar": 0,
        "endLine": 277,
        "endChar": 13
      },
      "revId": "e93d75086091677cde3730f3c7441984fa242069",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}