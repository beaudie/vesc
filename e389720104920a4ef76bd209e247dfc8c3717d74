{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "5bec2dde_5c8dc742",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-10-15T04:46:05Z",
      "side": 1,
      "message": "Swapping reviewers with Kyle, I know nothing about metal/\n\nThe test LGTM FWIW, thanks for that.",
      "revId": "e389720104920a4ef76bd209e247dfc8c3717d74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "24deeaf0_99f66671",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1500872
      },
      "writtenOn": "2021-10-15T18:10:05Z",
      "side": 1,
      "message": "I have ones small fix, Please address this one, and I\u0027d be happy to 2+ this.\nAmazing catch Steven, I was very unfamiliar with this workflow. Thank you ðŸ˜Š\n",
      "revId": "e389720104920a4ef76bd209e247dfc8c3717d74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "91e75856_411eddfc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2021-10-15T23:52:58Z",
      "side": 1,
      "message": "Thanks Steven for adding the test. Looks good to me, but let\u0027s let Kyle give +2 for the issue he found with binary shaders.\n",
      "revId": "e389720104920a4ef76bd209e247dfc8c3717d74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5624aeed_f1830609",
        "filename": "src/libANGLE/renderer/metal/ProgramMtl.mm",
        "patchSetId": 2
      },
      "lineNbr": 466,
      "author": {
        "id": 1500872
      },
      "writtenOn": "2021-10-15T18:10:05Z",
      "side": 1,
      "message": "We also have to update flat attributes here, when we reload shaders from a cache / binary form.",
      "revId": "e389720104920a4ef76bd209e247dfc8c3717d74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7893d7a2_7f351e94",
        "filename": "src/libANGLE/renderer/metal/ProgramMtl.mm",
        "patchSetId": 2
      },
      "lineNbr": 466,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2021-10-15T23:54:33Z",
      "side": 1,
      "message": "Does Steven need to serialize / deserialize the new mProgramHasFlatAttributes flag? If so can you point to the code where that needs to be done? Thanks in advance.",
      "parentUuid": "5624aeed_f1830609",
      "revId": "e389720104920a4ef76bd209e247dfc8c3717d74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0b54ab14_2bb30143",
        "filename": "src/libANGLE/renderer/metal/ProgramMtl.mm",
        "patchSetId": 2
      },
      "lineNbr": 466,
      "author": {
        "id": 1518892
      },
      "writtenOn": "2021-10-16T00:08:44Z",
      "side": 1,
      "message": "Is there a test that exercises that path that I could use?\n\nAnd does that path set up the attached shaders in ProgramState? If it does, I don\u0027t see it anywhere, so I guess we would want to serialize mProgramHasFlatAttributes in the binary form.",
      "parentUuid": "5624aeed_f1830609",
      "revId": "e389720104920a4ef76bd209e247dfc8c3717d74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "08435e62_3a687041",
        "filename": "src/libANGLE/renderer/metal/ProgramMtl.mm",
        "patchSetId": 2
      },
      "lineNbr": 466,
      "author": {
        "id": 1518892
      },
      "writtenOn": "2021-10-16T00:17:10Z",
      "side": 1,
      "message": "Also I am unfamiliar with the load/save path, and wonder how it handles versioning. If I serialize mProgramHasFlatAttributes in saveShaderInternalInfo/loadShaderInternalInfo, how would it handle loading old binaries? Seems like a risk.",
      "parentUuid": "0b54ab14_2bb30143",
      "revId": "e389720104920a4ef76bd209e247dfc8c3717d74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4375cb5c_57e8f3d4",
        "filename": "src/libANGLE/renderer/metal/ProgramMtl.mm",
        "patchSetId": 2
      },
      "lineNbr": 466,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-10-16T00:59:27Z",
      "side": 1,
      "message": "Anything you need post-link needs to be serialized. You can duplicate your test in ProgramBinaryTest.cpp, where you `saveAndLoadProgram()` after deleting shaders, and make sure you can render just fine with the loaded program.",
      "parentUuid": "08435e62_3a687041",
      "revId": "e389720104920a4ef76bd209e247dfc8c3717d74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ed1fa41d_22ae4351",
        "filename": "src/libANGLE/renderer/metal/ProgramMtl.mm",
        "patchSetId": 2
      },
      "lineNbr": 466,
      "author": {
        "id": 1518892
      },
      "writtenOn": "2021-10-16T01:54:50Z",
      "side": 1,
      "message": "Right, but how does it handle when a binary gets loaded and the binary structure differs (i.e. old version without mProgramHasFlatAttributes serialized, loaded by new ANGLE which tries to deserialize the bool)?",
      "parentUuid": "4375cb5c_57e8f3d4",
      "revId": "e389720104920a4ef76bd209e247dfc8c3717d74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "57698026_0e01388d",
        "filename": "src/libANGLE/renderer/metal/ProgramMtl.mm",
        "patchSetId": 2
      },
      "lineNbr": 466,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-10-16T04:03:54Z",
      "side": 1,
      "message": "Currently, the ANGLE git commit is part of the hash so old binaries never get loaded (otherwise we could have never changed anything here ;))\n\nI would love to see a day where ANGLE is able to load old binaries as long as the serialization format hasn\u0027t changed, but either way there is no danger of loading old binaries.",
      "parentUuid": "ed1fa41d_22ae4351",
      "revId": "e389720104920a4ef76bd209e247dfc8c3717d74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da84d469_3952fe3b",
        "filename": "src/libANGLE/renderer/metal/ProgramMtl.mm",
        "patchSetId": 2
      },
      "lineNbr": 466,
      "author": {
        "id": 1518892
      },
      "writtenOn": "2021-10-16T08:51:33Z",
      "side": 1,
      "message": "Aha, thank you! That makes me much less worried. Now I\u0027ll need to write up some tests.",
      "parentUuid": "57698026_0e01388d",
      "revId": "e389720104920a4ef76bd209e247dfc8c3717d74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "10b5bfe1_239533f0",
        "filename": "src/libANGLE/renderer/metal/ProgramMtl.mm",
        "patchSetId": 2
      },
      "lineNbr": 466,
      "author": {
        "id": 1518892
      },
      "writtenOn": "2021-10-16T11:00:35Z",
      "side": 1,
      "message": "OK. I added a couple things: I added saving/loading of the mProgramHasFlatAttributes variable, and a test to verify that the value is correct across save/load (via draw call results).",
      "parentUuid": "da84d469_3952fe3b",
      "revId": "e389720104920a4ef76bd209e247dfc8c3717d74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "15142b86_6922a6a3",
        "filename": "src/libANGLE/renderer/metal/ProgramMtl.mm",
        "patchSetId": 2
      },
      "lineNbr": 466,
      "author": {
        "id": 1500872
      },
      "writtenOn": "2021-10-18T21:49:50Z",
      "side": 1,
      "message": "If it were to be done anywhere, it would be in saveShaderInternalInfo / loadShaderInternalInfo. I\u0027m not actually 100% sure on what state\u0027s available when we\u0027re doing loadFromBinary.",
      "parentUuid": "7893d7a2_7f351e94",
      "revId": "e389720104920a4ef76bd209e247dfc8c3717d74",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}