{
  "comments": [
    {
      "key": {
        "uuid": "3586eba1_f81a781a",
        "filename": "extensions/ANGLE_multiview.txt",
        "patchSetId": 8
      },
      "lineNbr": 105,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2017-08-14T13:26:32Z",
      "side": 1,
      "message": "What\u0027s the need for this? I\u0027m worried this will introduce UB when the WebGL implementation exposes an opaque multiview FBO: if the page decides to clear it without scissor enabled what happens?",
      "revId": "df8d11032f436ba5f8a5f0e19b15685adb9ad471",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9071cbcd_20f16881",
        "filename": "extensions/ANGLE_multiview.txt",
        "patchSetId": 8
      },
      "lineNbr": 105,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2017-08-14T13:41:24Z",
      "side": 1,
      "message": "The intent is that the WebGL implementation can always enable scissoring when an opaque multiview FBO is bound, so no UB will be exposed to web apps. The WebGL implementation will need to have some management for splitting the framebuffer either way, since at the ANGLE level we only know about viewport offsets. We decided on this design since it keeps the ANGLE API flexible and maps well to the underlying native APIs.",
      "parentUuid": "3586eba1_f81a781a",
      "revId": "df8d11032f436ba5f8a5f0e19b15685adb9ad471",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9817e92a_73aa37e3",
        "filename": "extensions/ANGLE_multiview.txt",
        "patchSetId": 8
      },
      "lineNbr": 105,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2017-08-15T15:02:12Z",
      "side": 1,
      "message": "I\u0027m also concerned about this because with the passthrough command decoder and/or in other browsers, handling this undefined behaviour gets moved into ANGLE.  I think we should either make it an error in this extension or add an interaction with the WebGL compatibility extension that makes it an error.",
      "parentUuid": "9071cbcd_20f16881",
      "revId": "df8d11032f436ba5f8a5f0e19b15685adb9ad471",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}