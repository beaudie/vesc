{
  "comments": [
    {
      "key": {
        "uuid": "f9f2cc29_c03712cc",
        "filename": "src/libANGLE/ProgramExecutable.cpp",
        "patchSetId": 14
      },
      "lineNbr": 202,
      "author": {
        "id": 1263724
      },
      "writtenOn": "2020-03-11T19:32:05Z",
      "side": 1,
      "message": "I know this is unchanged from it\u0027s original location but I\u0027m wondering, are mActiveSamplerTypes and mActiveSamplerFormats really separate things?\nIn the if above we set both at the same time, could we set both to InvalidEnum here?",
      "revId": "07b427809b9e7d851b62b2496875c3688ee33eef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ca70b613_5acab619",
        "filename": "src/libANGLE/ProgramExecutable.cpp",
        "patchSetId": 14
      },
      "lineNbr": 202,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-03-12T23:16:05Z",
      "side": 1,
      "message": "I\u0027m not enough of an expert to answer that, but maybe someone else can jump in on this one.",
      "parentUuid": "f9f2cc29_c03712cc",
      "revId": "07b427809b9e7d851b62b2496875c3688ee33eef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ba789a6e_3086dcea",
        "filename": "src/libANGLE/ProgramExecutable.cpp",
        "patchSetId": 14
      },
      "lineNbr": 226,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-03-12T21:32:41Z",
      "side": 1,
      "message": "I don\u0027t see where this gets called for program pipelines. Do we forego this validation for pipelines? It would be nice if we could make a small angle_end2end_test for this if there\u0027s a gap in dEQP coverage and leave it with a tracked issue and TODO. From the spec:\n\nIt is not allowed to have variables of different sampler types pointing to\nthe same texture image unit within a program object. This situation can only\nbe detected at the next rendering command issued which triggers shader invocations, and an INVALID_OPERATION error will then be generated",
      "range": {
        "startLine": 226,
        "startChar": 24,
        "endLine": 226,
        "endChar": 61
      },
      "revId": "07b427809b9e7d851b62b2496875c3688ee33eef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "98bdbe71_11ea0670",
        "filename": "src/libANGLE/ProgramExecutable.cpp",
        "patchSetId": 14
      },
      "lineNbr": 226,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-03-12T23:16:05Z",
      "side": 1,
      "message": "It looks like the code path to get here is:\n\nProgramState::setSamplerUniformTextureTypeAndFormat\n    Program::updateSamplerUniform\n        Program::setUniform1iv\n            Context::setUniform1iImpl\n            GLES1Renderer::setUniform1i\n            GLES1Renderer::setUniform1iv\n            Program::setUniformValuesFromBindingQualifiers\n\nI have only added support for uniform1f (since that\u0027s all dEQP requires apparently):\n\n    void Context::uniform1f(UniformLocation location, GLfloat x)\n    {\n        Program *program \u003d mState.getProgram();\n        if (!program)\n        {\n            ProgramPipeline *programPipelineObject \u003d mState.getProgramPipeline();\n            if (programPipelineObject)\n            {\n                program \u003d programPipelineObject-\u003egetLinkedActiveShaderProgram(this);\n            }\n        }\n        program-\u003esetUniform1fv(location, 1, \u0026x);\n    }\n\nI should at least add support for the remaining uniformXX() (easy enough, just a lot of mechanical work).   I\u0027m not entirely understanding what you\u0027re describing for that test though, so I\u0027ll need to read up on that.",
      "parentUuid": "ba789a6e_3086dcea",
      "range": {
        "startLine": 226,
        "startChar": 24,
        "endLine": 226,
        "endChar": 61
      },
      "revId": "07b427809b9e7d851b62b2496875c3688ee33eef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c7a26e48_c18bd043",
        "filename": "src/libANGLE/ProgramExecutable.cpp",
        "patchSetId": 14
      },
      "lineNbr": 226,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-03-13T15:53:13Z",
      "side": 1,
      "message": "Test:\n\ntwo programs, one pipeline, one texture\n\nvertex shader from program 1 uses the texture as a 2d texture\nfragment shader from program 2 uses texture as a cube map\ndraw with a pipeline using vs 1 and fs 2\n\n-\u003e should be invalid_operation\n\nthen optionally update the texture uniform to make it valid, test, then invalid again, test, something like that",
      "parentUuid": "98bdbe71_11ea0670",
      "range": {
        "startLine": 226,
        "startChar": 24,
        "endLine": 226,
        "endChar": 61
      },
      "revId": "07b427809b9e7d851b62b2496875c3688ee33eef",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}