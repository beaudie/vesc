{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "dd55019b_83c1440f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 16
      },
      "lineNbr": 13,
      "author": {
        "id": 1520902
      },
      "writtenOn": "2022-12-06T19:57:03Z",
      "side": 1,
      "message": "Thanks Shabi for the work.\n\nWould you mind linking to docs/design docs on this change if there is any? It would be helpful if there is any docs explaning:\n\n1. Why we need the monolithic pipeline extension/feature?\n2. Why there is performance lost with the use the `VK_EXT_graphics_pipeline_library`?\n3. How does the the monolithic pipeline help gain back the performance loss?",
      "revId": "28fbd187c671a99977934fc3518f69e3533e2939",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "90ae0d3b_1242be10",
        "filename": "/COMMIT_MSG",
        "patchSetId": 16
      },
      "lineNbr": 13,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-12-06T20:02:11Z",
      "side": 1,
      "message": "go/vangle-with-pipeline-libraries is the doc. It\u0027s not very useful in the commit message since it\u0027s not publicly available, but you\u0027re hinting at a good point, I should add something under `doc/` for this.\n\nTL;DR answers to your questions:\n\n1. Because SPIR-V -\u003e assembly compilation is expensive, and we want that separated from most state so that it can be done earlier.\n2. Because there\u0027s less information during said compilation, the driver may not be able to do as well a job\n3. By optimizer better given the full picture\n\nInteresting reading here: https://www.khronos.org/blog/reducing-draw-time-hitching-with-vk-ext-graphics-pipeline-library",
      "parentUuid": "dd55019b_83c1440f",
      "revId": "28fbd187c671a99977934fc3518f69e3533e2939",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc778cd1_acb28a43",
        "filename": "/COMMIT_MSG",
        "patchSetId": 16
      },
      "lineNbr": 13,
      "author": {
        "id": 1520902
      },
      "writtenOn": "2022-12-06T21:44:31Z",
      "side": 1,
      "message": "Thank you Shabi! The blog post is a good read. From what the post said, it seems that the extension `VK_EXT_graphics_pipeline_library` was proposed to solve the issue of creating the monolithic pipeline at draw time. But in this change, we are doing the monolithic pipeline creation in the background thread and use that to replace the pipeline handle generated by the pipeline library. It sounds to me like we initially want to go from A (monolithic pipeline) to B (pipeline library) to solve a problem, but now we are going back from B to A. Am I misunderstanding anything here?",
      "parentUuid": "90ae0d3b_1242be10",
      "revId": "28fbd187c671a99977934fc3518f69e3533e2939",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ed33e82d_8f9f9e1f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 16
      },
      "lineNbr": 13,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-12-07T02:41:43Z",
      "side": 1,
      "message": "I think the blog post touched upon this as well. It\u0027s a complicated problem, for sure, and VK_EXT_graphics_pipeline_library itself feels like a band aid. A better solution can exist, but sort of requires hardware redesigns.\n\nSo originally we had monolithic pipelines build _on the main thread_ at draw time. The problem with that is that it causes hitching. With pipeline libraries, the slow part of the pipeline (shaders) is built at link time, and the fast part (vertex input, fragment output) is built at draw time and linked in. This fixes the hitching, but causes another problem; the linked pipelines are not as fast as monolithic pipelines.\n\nSo what this change does is to create the monolithic pipeline _in a background thread_, and swap in the handle whenever it\u0027s ready. If it takes a long time, it doesn\u0027t matter much, because the linked pipeline still works (like, say at 90% speed), and the app regains its optimal pipelines over time and reach its max speed.\n\nIf you wish things were simpler, welcome to the club.",
      "parentUuid": "bc778cd1_acb28a43",
      "revId": "28fbd187c671a99977934fc3518f69e3533e2939",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2e5c0251_4a9dbf54",
        "filename": "/COMMIT_MSG",
        "patchSetId": 16
      },
      "lineNbr": 13,
      "author": {
        "id": 1520902
      },
      "writtenOn": "2022-12-07T17:55:00Z",
      "side": 1,
      "message": "Thank you Shabi for the detailed explanations. This helps a lot :)",
      "parentUuid": "ed33e82d_8f9f9e1f",
      "revId": "28fbd187c671a99977934fc3518f69e3533e2939",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "88138129_8e4fd94e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 16
      },
      "lineNbr": 13,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-12-08T18:40:55Z",
      "side": 1,
      "message": "Added doc",
      "parentUuid": "2e5c0251_4a9dbf54",
      "revId": "28fbd187c671a99977934fc3518f69e3533e2939",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e9d37940_b688f369",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 16
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-12-06T16:55:08Z",
      "side": 1,
      "message": "Windows failure was due to monolithic pipeline cache sync accidentally enabled on windows/intel which is buggy.",
      "revId": "28fbd187c671a99977934fc3518f69e3533e2939",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f9633a37_d27605e1",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 16
      },
      "lineNbr": 4099,
      "author": {
        "id": 1520902
      },
      "writtenOn": "2022-12-06T19:57:03Z",
      "side": 1,
      "message": "which extension does `this extension` refer to? is it `preferMonolithicPipelinesOverLibraries`?",
      "revId": "28fbd187c671a99977934fc3518f69e3533e2939",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e695d158_29e3614e",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 16
      },
      "lineNbr": 4099,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-12-12T20:05:30Z",
      "side": 1,
      "message": "VK_EXT_graphics_pipeline_library. I made that explicit.",
      "parentUuid": "f9633a37_d27605e1",
      "revId": "28fbd187c671a99977934fc3518f69e3533e2939",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}