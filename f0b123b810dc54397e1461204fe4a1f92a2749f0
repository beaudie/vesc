{
  "comments": [
    {
      "key": {
        "uuid": "926d63b6_434defd0",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 331,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-05-08T15:42:09Z",
      "side": 1,
      "message": "let\u0027s call ensureInit here - the good thing about the texStorage extension is that we can create the storage immediately instead of lazily.",
      "range": {
        "startLine": 331,
        "startChar": 5,
        "endLine": 331,
        "endChar": 25
      },
      "revId": "f0b123b810dc54397e1461204fe4a1f92a2749f0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a63c4bbb_d243c5f9",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 331,
      "author": {
        "id": 1262827
      },
      "writtenOn": "2018-05-08T15:50:08Z",
      "side": 1,
      "message": "We can\u0027t, the frontend implementation of setStorage sets the image desc after calling setStorage on textureVk, so ensureImageInitialized fails because the extents is still 0X0 at the time of this call.\n\nSuggestion?",
      "parentUuid": "926d63b6_434defd0",
      "range": {
        "startLine": 331,
        "startChar": 5,
        "endLine": 331,
        "endChar": 25
      },
      "revId": "f0b123b810dc54397e1461204fe4a1f92a2749f0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b59c894b_e223839e",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 331,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-05-08T15:59:16Z",
      "side": 1,
      "message": "Oh, right. Good point. Maybe instead you can encapsulate the code in the if (!mImage.valid()) block in ensureImageInitialized, and pass in a vk::Format/gl::Extents/levelCount, and call that from here and from ensureInit.",
      "parentUuid": "a63c4bbb_d243c5f9",
      "range": {
        "startLine": 331,
        "startChar": 5,
        "endLine": 331,
        "endChar": 25
      },
      "revId": "f0b123b810dc54397e1461204fe4a1f92a2749f0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7a6306d2_776b19b2",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 433,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-05-08T15:59:16Z",
      "side": 1,
      "message": "this is the code I was thinking of.\n\nAlthough, didn\u0027t we fix multiple mip levels of a texture? It looks as though we always create an image with one mip level. Now I\u0027m confused.",
      "range": {
        "startLine": 433,
        "startChar": 25,
        "endLine": 433,
        "endChar": 29
      },
      "revId": "f0b123b810dc54397e1461204fe4a1f92a2749f0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c9749f0d_2f43f723",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 433,
      "author": {
        "id": 1262827
      },
      "writtenOn": "2018-05-08T16:56:11Z",
      "side": 1,
      "message": "Why do you say this creates an image with only 1 mip level? It uses getLevelCount for the number of levels no? The parameter hard coded to 1 is \"samples\"",
      "parentUuid": "7a6306d2_776b19b2",
      "range": {
        "startLine": 433,
        "startChar": 25,
        "endLine": 433,
        "endChar": 29
      },
      "revId": "f0b123b810dc54397e1461204fe4a1f92a2749f0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}