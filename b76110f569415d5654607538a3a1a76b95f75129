{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "48734aa4_0d2b93ac",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 15,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-09-10T20:44:24Z",
      "side": 1,
      "message": "typo",
      "range": {
        "startLine": 15,
        "startChar": 41,
        "endLine": 15,
        "endChar": 45
      },
      "revId": "b76110f569415d5654607538a3a1a76b95f75129",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6575d130_43ac5e25",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-09-10T17:13:44Z",
      "side": 1,
      "message": "LGTM, clever re-use of CopyImageCHROMIUM. Can we end up with formats not supported?",
      "revId": "b76110f569415d5654607538a3a1a76b95f75129",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0932c8a3_47339cce",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2021-09-10T17:22:07Z",
      "side": 1,
      "message": "The actual format conversion is done via srcFormat.pixelReadFunction and dstFormat.pixelWriteFunction, so they should be able to handle conversions for all formats.",
      "parentUuid": "6575d130_43ac5e25",
      "revId": "b76110f569415d5654607538a3a1a76b95f75129",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "75c462d0_566ca457",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-09-10T20:37:10Z",
      "side": 1,
      "message": "This doesn\u0027t handle image updates. You could repurpose some UtilsVk code that TextureVk uses for that too.\n\nHere\u0027s a test to demonstrate the issue:\n\n- Create texture A with 4444 format\n- Attach it to framebuffer (it\u0027s now 8888)\n- glCopyTexImage2D into texture B with 4444 format\n- Sample from B\n\nSince texture B was never used and is mutable, the result of the copy can be a staged image. Now I\u0027m actually not sure what\u0027s going to happen now; since UtilsVk uses a draw call, it should make sure the texture is drawable before doing that (which means the texture and its update become 8888), but I don\u0027t see ensureDrawable in the code in that path. Probably then it\u0027s falling back to a CPU readback, which means there is no bug.\n\nWould you please add that test and see what happens? It may be currently impossible for an image update to need reformatting. In that case, please add an ASSERT in your new code to make sure no image update has the previous format.",
      "revId": "b76110f569415d5654607538a3a1a76b95f75129",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d46208cb_b716b83a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-09-10T20:37:40Z",
      "side": 1,
      "message": "Nice clean up nevertheless!",
      "revId": "b76110f569415d5654607538a3a1a76b95f75129",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f030f211_9c0a875a",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 2
      },
      "lineNbr": 5672,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-09-10T20:44:24Z",
      "side": 1,
      "message": "TextureVk::copySubTextureImpl() and TextureVk::reinitImageAsRenderable() have extra checking to handle LUMA:\n\n    // Fix up the read/write functions for the sake of luminance/alpha that are emulated with\n    // formats whose channels don\u0027t correspond to the original format (alpha is emulated with red,\n    // and luminance/alpha is emulated with red/green).\n    if (sourceIntendedFormat.isLUMA())\n    {\n        pixelReadFunction \u003d sourceIntendedFormat.pixelReadFunction;\n    }\n    if (destVkFormat.getIntendedFormat().isLUMA())\n    {\n        pixelWriteFunction \u003d destVkFormat.getIntendedFormat().pixelWriteFunction;\n    }\n    \nIs that necessary here also?",
      "range": {
        "startLine": 5671,
        "startChar": 0,
        "endLine": 5672,
        "endChar": 89
      },
      "revId": "b76110f569415d5654607538a3a1a76b95f75129",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}