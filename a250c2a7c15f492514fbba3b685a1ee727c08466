{
  "comments": [
    {
      "key": {
        "uuid": "119e9415_8227e3cd",
        "filename": "src/tests/egl_tests/EGLProgramCacheControlTest.cpp",
        "patchSetId": 27
      },
      "lineNbr": 36,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-03-20T14:51:02Z",
      "side": 1,
      "message": "Having to force new display sounds a bit fragile. Could `CanShareDisplay` be extended to be able to automatically do this? Otherwise, I\u0027d like to see a comment explaining the reason for this on each call site.",
      "revId": "a250c2a7c15f492514fbba3b685a1ee727c08466",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "857a1d53_3de48753",
        "filename": "src/tests/egl_tests/EGLProgramCacheControlTest.cpp",
        "patchSetId": 27
      },
      "lineNbr": 36,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-03-20T15:54:10Z",
      "side": 1,
      "message": "Done. I plan to revisit this and triage the failures a bit more. Hopefully report them to the affected parties. But wanted to land this before doing the more time consuming triage process.",
      "parentUuid": "119e9415_8227e3cd",
      "revId": "a250c2a7c15f492514fbba3b685a1ee727c08466",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8d9c5316_21e066e9",
        "filename": "src/tests/egl_tests/EGLProgramCacheControlTest.cpp",
        "patchSetId": 27
      },
      "lineNbr": 45,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-03-20T16:47:39Z",
      "side": 1,
      "message": "It is not trivial that setContextProgramCacheEnabled must be called before ANGLETest::SetUp.\nCan we have config overrides be a parameter to SetUp?\nAnd then remember to restore things in TearDown?",
      "range": {
        "startLine": 42,
        "startChar": 0,
        "endLine": 45,
        "endChar": 0
      },
      "revId": "a250c2a7c15f492514fbba3b685a1ee727c08466",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8895e8e7_2d6c3f22",
        "filename": "src/tests/egl_tests/EGLProgramCacheControlTest.cpp",
        "patchSetId": 27
      },
      "lineNbr": 45,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-03-20T17:04:21Z",
      "side": 1,
      "message": "I don\u0027t think this is a simple change as it would involve using a different SetUp method.\n\nI think it might be worth doing. But I would recommend we do this separately.",
      "parentUuid": "8d9c5316_21e066e9",
      "range": {
        "startLine": 42,
        "startChar": 0,
        "endLine": 45,
        "endChar": 0
      },
      "revId": "a250c2a7c15f492514fbba3b685a1ee727c08466",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0cb5058a_95a752e6",
        "filename": "src/tests/egl_tests/EGLProgramCacheControlTest.cpp",
        "patchSetId": 27
      },
      "lineNbr": 224,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-03-20T16:47:39Z",
      "side": 1,
      "message": "I think TearDown and SetUp already do this?",
      "range": {
        "startLine": 224,
        "startChar": 4,
        "endLine": 224,
        "endChar": 19
      },
      "revId": "a250c2a7c15f492514fbba3b685a1ee727c08466",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f35d68a_fb64db35",
        "filename": "src/tests/egl_tests/EGLProgramCacheControlTest.cpp",
        "patchSetId": 27
      },
      "lineNbr": 224,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-03-20T17:04:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0cb5058a_95a752e6",
      "range": {
        "startLine": 224,
        "startChar": 4,
        "endLine": 224,
        "endChar": 19
      },
      "revId": "a250c2a7c15f492514fbba3b685a1ee727c08466",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4c251e4b_c017a928",
        "filename": "src/tests/gl_tests/RobustBufferAccessBehaviorTest.cpp",
        "patchSetId": 27
      },
      "lineNbr": 33,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-03-20T16:47:39Z",
      "side": 1,
      "message": "Is it possible to file a bug so that the driver will get fixed?",
      "range": {
        "startLine": 33,
        "startChar": 0,
        "endLine": 33,
        "endChar": 37
      },
      "revId": "a250c2a7c15f492514fbba3b685a1ee727c08466",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "65db39fb_cf683dd3",
        "filename": "src/tests/gl_tests/RobustBufferAccessBehaviorTest.cpp",
        "patchSetId": 27
      },
      "lineNbr": 33,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-03-20T17:04:21Z",
      "side": 1,
      "message": "Will do this as a follow-up.",
      "parentUuid": "4c251e4b_c017a928",
      "range": {
        "startLine": 33,
        "startChar": 0,
        "endLine": 33,
        "endChar": 37
      },
      "revId": "a250c2a7c15f492514fbba3b685a1ee727c08466",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7d504521_c64c8931",
        "filename": "src/tests/test_utils/ANGLETest.cpp",
        "patchSetId": 27
      },
      "lineNbr": 289,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-03-20T14:51:02Z",
      "side": 1,
      "message": "`kWindowReuseLimit`?",
      "range": {
        "startLine": 289,
        "startChar": 19,
        "endLine": 289,
        "endChar": 30
      },
      "revId": "a250c2a7c15f492514fbba3b685a1ee727c08466",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "74bd8060_acec21de",
        "filename": "src/tests/test_utils/ANGLETest.cpp",
        "patchSetId": 27
      },
      "lineNbr": 289,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-03-20T15:54:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7d504521_c64c8931",
      "range": {
        "startLine": 289,
        "startChar": 19,
        "endLine": 289,
        "endChar": 30
      },
      "revId": "a250c2a7c15f492514fbba3b685a1ee727c08466",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "776cca54_ccbad408",
        "filename": "src/tests/test_utils/ANGLETest.cpp",
        "patchSetId": 27
      },
      "lineNbr": 329,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-03-20T16:47:39Z",
      "side": 1,
      "message": "Can this be part of reset(), so you don\u0027t do it in two places?",
      "range": {
        "startLine": 329,
        "startChar": 8,
        "endLine": 329,
        "endChar": 65
      },
      "revId": "a250c2a7c15f492514fbba3b685a1ee727c08466",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7204c4f6_2f2ceccd",
        "filename": "src/tests/test_utils/ANGLETest.cpp",
        "patchSetId": 27
      },
      "lineNbr": 329,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-03-20T17:04:21Z",
      "side": 1,
      "message": "No, because reset() is not just a part of ANGLE tests. It\u0027s also for perf tests and samples.",
      "parentUuid": "776cca54_ccbad408",
      "range": {
        "startLine": 329,
        "startChar": 8,
        "endLine": 329,
        "endChar": 65
      },
      "revId": "a250c2a7c15f492514fbba3b685a1ee727c08466",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a794d8f3_6aaf80f3",
        "filename": "src/tests/test_utils/ANGLETest.cpp",
        "patchSetId": 27
      },
      "lineNbr": 341,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-03-20T16:47:39Z",
      "side": 1,
      "message": "It would make more sense to me if this was !alwaysForceNewDisplay(), otherwise, I don\u0027t follow this logic.",
      "range": {
        "startLine": 341,
        "startChar": 8,
        "endLine": 341,
        "endChar": 29
      },
      "revId": "a250c2a7c15f492514fbba3b685a1ee727c08466",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a8d209e_b8b970f1",
        "filename": "src/tests/test_utils/ANGLETest.cpp",
        "patchSetId": 27
      },
      "lineNbr": 341,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-03-20T17:04:21Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "a794d8f3_6aaf80f3",
      "range": {
        "startLine": 341,
        "startChar": 8,
        "endLine": 341,
        "endChar": 29
      },
      "revId": "a250c2a7c15f492514fbba3b685a1ee727c08466",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff2dde7c_3f7daf10",
        "filename": "src/tests/test_utils/ANGLETest.cpp",
        "patchSetId": 27
      },
      "lineNbr": 343,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-03-20T16:47:39Z",
      "side": 1,
      "message": "I need a comment regarding what mOSWindow means now.\nLast created OSWindow?\nBut this has the potential of sharing OpenGL and Vulkan contexts, unless alwaysForceNewDisplay() prevents it.",
      "range": {
        "startLine": 343,
        "startChar": 37,
        "endLine": 343,
        "endChar": 46
      },
      "revId": "a250c2a7c15f492514fbba3b685a1ee727c08466",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "170ebbba_bb6d87fc",
        "filename": "src/tests/test_utils/ANGLETest.cpp",
        "patchSetId": 27
      },
      "lineNbr": 343,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-03-20T17:04:21Z",
      "side": 1,
      "message": "Done. Here it is:\n\n    // On most systems we force a new display on every test instance. For these configs we can\n    // share a single OSWindow instance. With display reuse we need a separate OSWindow for each\n    // different config. This OSWindow sharing seemed to lead to driver bugs on some platforms.",
      "parentUuid": "ff2dde7c_3f7daf10",
      "range": {
        "startLine": 343,
        "startChar": 37,
        "endLine": 343,
        "endChar": 46
      },
      "revId": "a250c2a7c15f492514fbba3b685a1ee727c08466",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "95a8f2e7_fdb27061",
        "filename": "src/tests/test_utils/ANGLETest.cpp",
        "patchSetId": 27
      },
      "lineNbr": 348,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-03-20T17:04:21Z",
      "side": 1,
      "message": "OSWindow created here.",
      "range": {
        "startLine": 348,
        "startChar": 36,
        "endLine": 348,
        "endChar": 53
      },
      "revId": "a250c2a7c15f492514fbba3b685a1ee727c08466",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d875b349_e222f0fa",
        "filename": "src/tests/test_utils/ANGLETest.cpp",
        "patchSetId": 27
      },
      "lineNbr": 444,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-03-20T16:47:39Z",
      "side": 1,
      "message": "Where is new OSWindow created now?",
      "range": {
        "startLine": 444,
        "startChar": 62,
        "endLine": 444,
        "endChar": 74
      },
      "revId": "a250c2a7c15f492514fbba3b685a1ee727c08466",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d8d2eb17_4b7b651c",
        "filename": "src/tests/test_utils/ANGLETest.cpp",
        "patchSetId": 27
      },
      "lineNbr": 444,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-03-20T17:04:21Z",
      "side": 1,
      "message": "In the constructor.",
      "parentUuid": "d875b349_e222f0fa",
      "range": {
        "startLine": 444,
        "startChar": 62,
        "endLine": 444,
        "endChar": 74
      },
      "revId": "a250c2a7c15f492514fbba3b685a1ee727c08466",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9e96b5ce_c41c978d",
        "filename": "src/tests/test_utils/ANGLETest.cpp",
        "patchSetId": 27
      },
      "lineNbr": 462,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-03-20T16:47:39Z",
      "side": 1,
      "message": "Should this also check alwaysForceNewDisplay?",
      "range": {
        "startLine": 462,
        "startChar": 12,
        "endLine": 462,
        "endChar": 28
      },
      "revId": "a250c2a7c15f492514fbba3b685a1ee727c08466",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ce15bbe1_e6b389ab",
        "filename": "src/tests/test_utils/ANGLETest.cpp",
        "patchSetId": 27
      },
      "lineNbr": 508,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-03-20T16:47:39Z",
      "side": 1,
      "message": "I\u0027m confused. You always force new display (which is undesirable behavior, I presume) on non-Windows and Windows AMD. Is Intel a typo here?\nOr since you don\u0027t have \"!\" in the test above, the function name is wrong?",
      "range": {
        "startLine": 508,
        "startChar": 33,
        "endLine": 508,
        "endChar": 38
      },
      "revId": "a250c2a7c15f492514fbba3b685a1ee727c08466",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cf8ea166_6716a1b8",
        "filename": "src/tests/test_utils/ANGLETest.cpp",
        "patchSetId": 27
      },
      "lineNbr": 508,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-03-20T17:04:21Z",
      "side": 1,
      "message": "Here we go:\n\n    // We prefer to reuse config displays. This is faster and solves a driver issue where creating\n    // many displays causes crashes. However this exposes other driver bugs on many other platforms.\n    // Conservatively enable the feature only on Windows Intel and NVIDIA for now.",
      "parentUuid": "ce15bbe1_e6b389ab",
      "range": {
        "startLine": 508,
        "startChar": 33,
        "endLine": 508,
        "endChar": 38
      },
      "revId": "a250c2a7c15f492514fbba3b685a1ee727c08466",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9206de58_beca614b",
        "filename": "src/tests/test_utils/ANGLETest.cpp",
        "patchSetId": 27
      },
      "lineNbr": 510,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-03-20T14:51:02Z",
      "side": 1,
      "message": "You could put this in the constructor and store in `mAlwaysForceNewDisplay`.",
      "revId": "a250c2a7c15f492514fbba3b685a1ee727c08466",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "55ce2242_60b92f39",
        "filename": "src/tests/test_utils/ANGLETest.cpp",
        "patchSetId": 27
      },
      "lineNbr": 510,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-03-20T15:54:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9206de58_beca614b",
      "revId": "a250c2a7c15f492514fbba3b685a1ee727c08466",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dddf332a_11a39fa1",
        "filename": "src/tests/test_utils/ANGLETest.cpp",
        "patchSetId": 27
      },
      "lineNbr": 528,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-03-20T16:47:39Z",
      "side": 1,
      "message": "I guess this should be reuseCounter now?",
      "range": {
        "startLine": 528,
        "startChar": 26,
        "endLine": 528,
        "endChar": 38
      },
      "revId": "a250c2a7c15f492514fbba3b685a1ee727c08466",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b6c1163c_47e4bb05",
        "filename": "src/tests/test_utils/ANGLETest.cpp",
        "patchSetId": 27
      },
      "lineNbr": 528,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-03-20T17:04:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dddf332a_11a39fa1",
      "range": {
        "startLine": 528,
        "startChar": 26,
        "endLine": 528,
        "endChar": 38
      },
      "revId": "a250c2a7c15f492514fbba3b685a1ee727c08466",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}