{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b0e64bff_9192128b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-10-16T14:59:15Z",
      "side": 1,
      "message": "Jamie/Shabi - PTAL",
      "revId": "13c987abff381f011ca44339a27e413ecfc950be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2b298de5_e7f0bd85",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-10-16T15:06:46Z",
      "side": 1,
      "message": "Just change retain to have that check, and make that a prior CL as it\u0027s unrelated. This CL still LGTM once you split that off.",
      "revId": "13c987abff381f011ca44339a27e413ecfc950be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e53b444d_c610caf7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-10-16T21:53:21Z",
      "side": 1,
      "message": "The change you\u0027re suggesting doesn\u0027t work:\nhttps://chromium-review.googlesource.com/c/angle/angle/+/2480607\n\nretainOnce() can only be called on an object that\u0027s specific to a particular context.   Otherwise, retain() will see that someone has a reference to it, but that doesn\u0027t guarantee it\u0027s the context making the retain() call, which is why we need separate functions.",
      "parentUuid": "2b298de5_e7f0bd85",
      "revId": "13c987abff381f011ca44339a27e413ecfc950be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2fd8f64e_559d15d8",
        "filename": "src/tests/gl_tests/MultithreadingTest.cpp",
        "patchSetId": 9
      },
      "lineNbr": 312,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-10-09T22:31:18Z",
      "side": 1,
      "message": "Is \"GL_ANGLE_get_image\" something that ANGLE enables by default so we can assume this test will typically catch errors?\n\nI tried using an FBO, but that prevented VVL errors from being generated.   I don\u0027t know if that\u0027s an FBO thing or how the contexts are created in runMultithreadedGLTest() above.",
      "range": {
        "startLine": 304,
        "startChar": 0,
        "endLine": 312,
        "endChar": 13
      },
      "revId": "13c987abff381f011ca44339a27e413ecfc950be",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}