{
  "comments": [
    {
      "key": {
        "uuid": "4bd16f3e_5888c1b2",
        "filename": "src/compiler/translator/Types.cpp",
        "patchSetId": 3
      },
      "lineNbr": 181,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-01-22T19:48:26Z",
      "side": 1,
      "message": "nit: is the intention to assert in debug, but have a safe behaviour in release? I\u0027m not too clear on if it\u0027s spec-disallowed to have an object of that size.",
      "range": {
        "startLine": 181,
        "startChar": 8,
        "endLine": 181,
        "endChar": 37
      },
      "revId": "e4dadd5b454dab9827b1cc6a36a31763f2158ed7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2b70bb17_be9d0943",
        "filename": "src/compiler/translator/Types.cpp",
        "patchSetId": 3
      },
      "lineNbr": 181,
      "author": {
        "id": 1115160
      },
      "writtenOn": "2015-01-22T20:03:11Z",
      "side": 1,
      "message": "Oh yes, sorry, I forgot that ASSERTs don\u0027t do anything in release.\n\n\nI don\u0027t mind what we do here. I\u0027d just like to get this change off my plate.\n\n\nWould this work for you?\n\n\"if (static_cast\u003csize_t\u003e(arraySize) \u003e INT_MAX / totalSize)\"",
      "parentUuid": "4bd16f3e_5888c1b2",
      "range": {
        "startLine": 181,
        "startChar": 8,
        "endLine": 181,
        "endChar": 37
      },
      "revId": "e4dadd5b454dab9827b1cc6a36a31763f2158ed7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6bd9d36e_ce7083cc",
        "filename": "src/compiler/translator/Types.cpp",
        "patchSetId": 3
      },
      "lineNbr": 181,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-01-22T20:12:31Z",
      "side": 1,
      "message": "Can you try including \"common/mathutil.h\" and using IsUnsignedMultiplicationSafe? I think if we have at least a single point of hard-to-analyze code failure we\u0027d be a bit better off. Heh.",
      "parentUuid": "2b70bb17_be9d0943",
      "range": {
        "startLine": 181,
        "startChar": 8,
        "endLine": 181,
        "endChar": 37
      },
      "revId": "e4dadd5b454dab9827b1cc6a36a31763f2158ed7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4b732f24_59d27366",
        "filename": "src/compiler/translator/Types.cpp",
        "patchSetId": 3
      },
      "lineNbr": 181,
      "author": {
        "id": 1115160
      },
      "writtenOn": "2015-01-22T20:37:03Z",
      "side": 1,
      "message": "That brings in common/debug.h, and its macros clash with compilerdebug.h. I\u0027d rather not spend time solving that issue now.\n\n\nIf this is a problem then I can revert the changes in this file, and log an item in the ANGLE issue tracker for someone to look at in the future.",
      "parentUuid": "6bd9d36e_ce7083cc",
      "range": {
        "startLine": 181,
        "startChar": 8,
        "endLine": 181,
        "endChar": 37
      },
      "revId": "e4dadd5b454dab9827b1cc6a36a31763f2158ed7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8bf447d2_effa2182",
        "filename": "src/compiler/translator/Types.cpp",
        "patchSetId": 3
      },
      "lineNbr": 181,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-01-22T20:40:27Z",
      "side": 1,
      "message": "Ack. I\u0027m good with either leaving this file unchanged, or as you propose casting both sides to size_t.",
      "parentUuid": "4b732f24_59d27366",
      "range": {
        "startLine": 181,
        "startChar": 8,
        "endLine": 181,
        "endChar": 37
      },
      "revId": "e4dadd5b454dab9827b1cc6a36a31763f2158ed7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aba3cbb1_e48aa279",
        "filename": "src/compiler/translator/Types.cpp",
        "patchSetId": 3
      },
      "lineNbr": 181,
      "author": {
        "id": 1118395
      },
      "writtenOn": "2015-01-22T20:41:20Z",
      "side": 1,
      "message": "Safest change would be to go back to the original functionality but rename the \u0027arraySize\u0027 local variable to something different.\n\nIt is a bit strange that the arraySize member variable is an int and the arraySize local variable is a size_t, so maybe fixing that or verifying its correctness can be done separately.",
      "parentUuid": "4b732f24_59d27366",
      "range": {
        "startLine": 181,
        "startChar": 8,
        "endLine": 181,
        "endChar": 37
      },
      "revId": "e4dadd5b454dab9827b1cc6a36a31763f2158ed7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}