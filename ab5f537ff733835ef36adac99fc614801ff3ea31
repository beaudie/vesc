{
  "comments": [
    {
      "key": {
        "uuid": "2890a6a3_14d48318",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.h",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-07-20T20:24:52Z",
      "side": 1,
      "message": "Why is this change necessary?",
      "revId": "ab5f537ff733835ef36adac99fc614801ff3ea31",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d9387315_b63680ca",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.h",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-07-20T21:50:21Z",
      "side": 1,
      "message": "If `rhs` is an expression with side effects, it was previously called multiple times. (Worse, it would be called multiple times with ASSERTs enabled, and only once with it disabled).\n\nI noticed this when I was setting `rhs` to gl::ScanForward(static_cast\u003cuint8_t\u003e(samples)). That doesn\u0027t have side effects, but nevertheless this is the right way of implementing this macro.",
      "parentUuid": "2890a6a3_14d48318",
      "revId": "ab5f537ff733835ef36adac99fc614801ff3ea31",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f5ca55bf_a82a0626",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.h",
        "patchSetId": 2
      },
      "lineNbr": 107,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-07-20T03:21:46Z",
      "side": 1,
      "message": "Context: https://chromium-review.googlesource.com/c/angle/angle/+/2304170/8/src/libANGLE/renderer/vulkan/vk_cache_utils.h#114",
      "revId": "ab5f537ff733835ef36adac99fc614801ff3ea31",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b3d9aa3f_cc52b402",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.h",
        "patchSetId": 2
      },
      "lineNbr": 107,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-07-20T15:33:49Z",
      "side": 1,
      "message": "Nice",
      "parentUuid": "f5ca55bf_a82a0626",
      "revId": "ab5f537ff733835ef36adac99fc614801ff3ea31",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b5583776_a7fecf03",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2612,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-07-20T20:24:52Z",
      "side": 1,
      "message": "Why are these std::max() calls necessary when samples is set to at least 1 throughout (and GetSamples() is unreachable for 0)?",
      "revId": "ab5f537ff733835ef36adac99fc614801ff3ea31",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f5449c5_76e3e303",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2612,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-07-20T21:50:21Z",
      "side": 1,
      "message": "There are a number of places where the front-end provides samples\u003d0 and that\u0027s forwarded to this class. IIRC, setting render buffer storage is one of those places.",
      "parentUuid": "b5583776_a7fecf03",
      "revId": "ab5f537ff733835ef36adac99fc614801ff3ea31",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}