{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "9f38f6b9_ad2f838a",
        "filename": "src/common/mathutil.h",
        "patchSetId": 4
      },
      "lineNbr": 123,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-03-29T02:23:21Z",
      "side": 1,
      "message": "Some unit tests would be nice",
      "range": {
        "startLine": 123,
        "startChar": 2,
        "endLine": 123,
        "endChar": 18
      },
      "revId": "434550359d1bf2a86ea841fdc2c4d621423dfa35",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "da8ce081_93f71cab",
        "filename": "src/common/mathutil.h",
        "patchSetId": 4
      },
      "lineNbr": 123,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2022-03-29T17:04:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9f38f6b9_ad2f838a",
      "range": {
        "startLine": 123,
        "startChar": 2,
        "endLine": 123,
        "endChar": 18
      },
      "revId": "434550359d1bf2a86ea841fdc2c4d621423dfa35",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "74448189_2a037f67",
        "filename": "src/common/mathutil.h",
        "patchSetId": 4
      },
      "lineNbr": 132,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-03-29T02:23:21Z",
      "side": 1,
      "message": "nit: can be `constexpr`?",
      "range": {
        "startLine": 132,
        "startChar": 4,
        "endLine": 132,
        "endChar": 8
      },
      "revId": "434550359d1bf2a86ea841fdc2c4d621423dfa35",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b149f212_b1f5d6c7",
        "filename": "src/common/mathutil.h",
        "patchSetId": 4
      },
      "lineNbr": 132,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2022-03-29T17:04:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "74448189_2a037f67",
      "range": {
        "startLine": 132,
        "startChar": 4,
        "endLine": 132,
        "endChar": 8
      },
      "revId": "434550359d1bf2a86ea841fdc2c4d621423dfa35",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c04ce42d_51360d3e",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1462,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-03-29T02:23:21Z",
      "side": 1,
      "message": "Missing stencil clamp for depth+stencil formats?",
      "revId": "434550359d1bf2a86ea841fdc2c4d621423dfa35",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dacaac3b_37d04dfd",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1462,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2022-03-29T17:04:10Z",
      "side": 1,
      "message": "D component would be in float while stencil in uint, i was unable to get clarity from spec. given all D/S format deqp tests pass i did not look into it further. Any suggestions?",
      "parentUuid": "c04ce42d_51360d3e",
      "revId": "434550359d1bf2a86ea841fdc2c4d621423dfa35",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8b4951df_090aa6d1",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1462,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-03-30T03:51:11Z",
      "side": 1,
      "message": "I mean, in line 1466 stencil is clamped for stencil-only formats. In line 1474 depth is clamped for depth and depth+stencil formats.  If stencil should be clamped for stencil-only formats, don\u0027t you think it should also be clamped for depth+stencil formats by analogy?",
      "parentUuid": "dacaac3b_37d04dfd",
      "revId": "434550359d1bf2a86ea841fdc2c4d621423dfa35",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "352c09a7_d21b71a0",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1462,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2022-03-30T17:46:49Z",
      "side": 1,
      "message": "this is the only mention of depth in the spec -\n If the texture contains depth components, the first component of\n TEXTURE_BORDER_COLOR_EXT is interpreted as a depth value.\n \nthere is no mention of stencil in the spec. Since both depth and stencil need to setthe red channel as the border color i am assuming spec authors assumed mutual exclusivity. Given deqp tests for combined depth/stencil pass im inclined to not put more effort into this. WDYT?",
      "parentUuid": "8b4951df_090aa6d1",
      "revId": "434550359d1bf2a86ea841fdc2c4d621423dfa35",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d7b448f7_bb1035e1",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1462,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-03-30T20:26:05Z",
      "side": 1,
      "message": "Ok. I\u0027m not sure where you got this from: \"Since both depth and stencil need to set the red channel as the border color\", because depth/stencil probably uses the red and green channels, but I think the real point here is that stencil doesn\u0027t actually need clamping (it\u0027s an int, and besides it invariably has 8 bits anyway).\n\nSo you should be able to get away with just this:\n\n```\n    // Handle depth\n    if (format.hasDepthOrStencilBits())\n    {\n        if (format.depthBits \u003e 0)\n        {\n            // D or D/S formats\n            if (format.isUnorm())\n            {\n                adjustedBorderColor.colorF.red \u003d gl::clamp01(borderColorGeneric.colorF.red);\n            }\n        }\n\n        return adjustedBorderColor;\n    }\n```",
      "parentUuid": "352c09a7_d21b71a0",
      "revId": "434550359d1bf2a86ea841fdc2c4d621423dfa35",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1a7132f9_f6b0f645",
        "filename": "src/tests/deqp_support/deqp_gles31_test_expectations.txt",
        "patchSetId": 4
      },
      "lineNbr": 160,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-03-29T02:23:21Z",
      "side": 1,
      "message": "Could you please add more information to the issue on what the inconsistent interaction is?",
      "range": {
        "startLine": 160,
        "startChar": 0,
        "endLine": 160,
        "endChar": 4
      },
      "revId": "434550359d1bf2a86ea841fdc2c4d621423dfa35",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "833dedc9_9a69d67c",
        "filename": "src/tests/deqp_support/deqp_gles31_test_expectations.txt",
        "patchSetId": 4
      },
      "lineNbr": 160,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2022-03-29T17:04:10Z",
      "side": 1,
      "message": "by `Inconsistent` i tried to imply that SwS \"results\" are inconsistent with those from AMD. I have not looked into why it is failing on SwS other that the pixel comparisons fail.\n\nhappy to reword the comment if needed",
      "parentUuid": "1a7132f9_f6b0f645",
      "range": {
        "startLine": 160,
        "startChar": 0,
        "endLine": 160,
        "endChar": 4
      },
      "revId": "434550359d1bf2a86ea841fdc2c4d621423dfa35",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b773fa46_becabd1b",
        "filename": "src/tests/deqp_support/deqp_gles31_test_expectations.txt",
        "patchSetId": 4
      },
      "lineNbr": 160,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-03-30T03:51:11Z",
      "side": 1,
      "message": "Ack. This is fine IMO, we can look into it later for SwiftShader.",
      "parentUuid": "833dedc9_9a69d67c",
      "range": {
        "startLine": 160,
        "startChar": 0,
        "endLine": 160,
        "endChar": 4
      },
      "revId": "434550359d1bf2a86ea841fdc2c4d621423dfa35",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ea3ac682_f1f21744",
        "filename": "src/tests/deqp_support/deqp_gles31_test_expectations.txt",
        "patchSetId": 4
      },
      "lineNbr": 160,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-03-30T13:00:26Z",
      "side": 1,
      "message": "Can you help us figure this out Mohan? We need to determine if this is a bug in SwiftShader (unlikely) or a bug in ANGLE (more likely), in which case we\u0027d like to know how to fix it.",
      "parentUuid": "b773fa46_becabd1b",
      "range": {
        "startLine": 160,
        "startChar": 0,
        "endLine": 160,
        "endChar": 4
      },
      "revId": "434550359d1bf2a86ea841fdc2c4d621423dfa35",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bd466085_3e294f17",
        "filename": "src/tests/deqp_support/deqp_gles31_test_expectations.txt",
        "patchSetId": 4
      },
      "lineNbr": 160,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2022-03-30T17:46:49Z",
      "side": 1,
      "message": "\u003e Can you help us figure this out\n\nwith off-the-shelf AMD card that supports vulkan border color extension the existing deqp tests related depth passed. what kind of help we talking here jamie?",
      "parentUuid": "ea3ac682_f1f21744",
      "range": {
        "startLine": 160,
        "startChar": 0,
        "endLine": 160,
        "endChar": 4
      },
      "revId": "434550359d1bf2a86ea841fdc2c4d621423dfa35",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0595aead_448089d8",
        "filename": "src/tests/deqp_support/deqp_gles31_test_expectations.txt",
        "patchSetId": 4
      },
      "lineNbr": 160,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-03-30T17:52:44Z",
      "side": 1,
      "message": "We can\u0027t land this if it breaks other platforms that depend on it. So if you can contribute to the fix, that\u0027ll help us land this. Otherwise we\u0027ll have to prove it won\u0027t affect anything we need. I believe we have run into this situation before. I\u0027m happy to broaden the policy discussion, but I think we should instate a policy that if it\u0027s not a SwS bug, and it\u0027s most likely an ANGLE bug, we shouldn\u0027t land it.",
      "parentUuid": "bd466085_3e294f17",
      "range": {
        "startLine": 160,
        "startChar": 0,
        "endLine": 160,
        "endChar": 4
      },
      "revId": "434550359d1bf2a86ea841fdc2c4d621423dfa35",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "23ee28fc_60da7027",
        "filename": "src/tests/deqp_support/deqp_gles31_test_expectations.txt",
        "patchSetId": 4
      },
      "lineNbr": 160,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2022-03-30T18:12:02Z",
      "side": 1,
      "message": "\u003e We can\u0027t land this if it breaks other platforms that depend on it\n\ni can leave border color extension disabled for SwS, if that is what is the issue. this aint breaking any other platform, can you elaborate on what you mean by this?\n\n\u003e Otherwise we\u0027ll have to prove it won\u0027t affect anything we need\n\nThe tests pass on an off-the-shelf AMD vulkan driver while it fails without this CL. I am not sure what you are asking here",
      "parentUuid": "0595aead_448089d8",
      "range": {
        "startLine": 160,
        "startChar": 0,
        "endLine": 160,
        "endChar": 4
      },
      "revId": "434550359d1bf2a86ea841fdc2c4d621423dfa35",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "76bb47e6_81b05a83",
        "filename": "src/tests/deqp_support/deqp_gles31_test_expectations.txt",
        "patchSetId": 4
      },
      "lineNbr": 160,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2022-03-30T18:17:43Z",
      "side": 1,
      "message": "\u003e I think we should instate a policy that if it\u0027s not a SwS bug, and it\u0027s most likely an ANGLE bug, we shouldn\u0027t land it\n\nTBH, this is way too inflexible especially given that SwS can have bugs as well. Bots have multiple vendor implementations and if a CL passes with them that needs to count otherwise ANGLE will end up being stuck with GLES31. i think we need to broaden the policy filter",
      "parentUuid": "23ee28fc_60da7027",
      "range": {
        "startLine": 160,
        "startChar": 0,
        "endLine": 160,
        "endChar": 4
      },
      "revId": "434550359d1bf2a86ea841fdc2c4d621423dfa35",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "af43ab64_5544ee76",
        "filename": "src/tests/deqp_support/deqp_gles31_test_expectations.txt",
        "patchSetId": 4
      },
      "lineNbr": 160,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-03-30T19:13:12Z",
      "side": 1,
      "message": "Definitely if it\u0027s a SwS bug we can land CLs. Are you saying you think this is a SwiftShader bug? The problem is that SwiftShader passes an independent set of conformance tests. In our experience, it\u0027s usually the case that these failures are ANGLE bugs, and when they\u0027re not, it means there was a gap in the CTS. In any case, we\u0027d need to clarify that we\u0027re not introducing new feature bugs or turning off features by landing CLs. Is it possible your CL introduces a bug that is only visible on non-AMD platforms?",
      "parentUuid": "76bb47e6_81b05a83",
      "range": {
        "startLine": 160,
        "startChar": 0,
        "endLine": 160,
        "endChar": 4
      },
      "revId": "434550359d1bf2a86ea841fdc2c4d621423dfa35",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d3687095_5f23b9a2",
        "filename": "src/tests/deqp_support/deqp_gles31_test_expectations.txt",
        "patchSetId": 4
      },
      "lineNbr": 160,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-03-30T20:42:08Z",
      "side": 1,
      "message": "Shabi stepped up and found that there\u0027s something specific with shadow samplers that could be a bug in SwS. I\u0027d still recommend we leave this feature off on SwS for now - Shabi said he can file a bug for investigation there tomorrow. It very well could be a gap in CTS with shadow samplers and depth formats. Thanks for your patience Mohan.",
      "parentUuid": "af43ab64_5544ee76",
      "range": {
        "startLine": 160,
        "startChar": 0,
        "endLine": 160,
        "endChar": 4
      },
      "revId": "434550359d1bf2a86ea841fdc2c4d621423dfa35",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}