{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "195214fa_58c37c6f",
        "filename": "src/libANGLE/renderer/vulkan/DeviceVk.cpp",
        "patchSetId": 12
      },
      "lineNbr": 108,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-01-14T14:54:16Z",
      "side": 1,
      "message": "I suggest you make this a member of DeviceVk, and make kWrappedFunctions a member as well so it has a non-static lifetime.",
      "range": {
        "startLine": 66,
        "startChar": 0,
        "endLine": 108,
        "endChar": 18
      },
      "revId": "c7b132d6cf438734f2dfc7d365fce61332c11a70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "898879ee_0ae00c6c",
        "filename": "src/libANGLE/renderer/vulkan/DeviceVk.cpp",
        "patchSetId": 12
      },
      "lineNbr": 108,
      "author": {
        "id": 1000050
      },
      "writtenOn": "2022-01-14T15:03:10Z",
      "side": 1,
      "message": "I can move it to DeviceVK, but why non static? since kWrappedFunctons just stores const values.",
      "parentUuid": "195214fa_58c37c6f",
      "range": {
        "startLine": 66,
        "startChar": 0,
        "endLine": 108,
        "endChar": 18
      },
      "revId": "c7b132d6cf438734f2dfc7d365fce61332c11a70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad3ebfff_92e24359",
        "filename": "src/libANGLE/renderer/vulkan/DeviceVk.cpp",
        "patchSetId": 12
      },
      "lineNbr": 108,
      "author": {
        "id": 1000050
      },
      "writtenOn": "2022-01-14T15:07:51Z",
      "side": 1,
      "message": "And I also feel it is better to not make make all those wrappers member methods, since those wrapper defines use many vulkan types and macros, to do that, we need add vulkan related headers in DeviceVk.h.",
      "parentUuid": "898879ee_0ae00c6c",
      "range": {
        "startLine": 66,
        "startChar": 0,
        "endLine": 108,
        "endChar": 18
      },
      "revId": "c7b132d6cf438734f2dfc7d365fce61332c11a70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6e83f710_7867edcf",
        "filename": "src/libANGLE/renderer/vulkan/DeviceVk.cpp",
        "patchSetId": 12
      },
      "lineNbr": 108,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-01-14T15:33:10Z",
      "side": 1,
      "message": "Well, we\u0027re in the Vulkan back-end, so we are allowed to put Vulkan headers in DeviceVk.h. We should have full isolation from the front-end via DisplayVk_api.h.\n\nAvoiding non-constexpr global statics is a good general coding practice as it avoids unexpected initialization. It won\u0027t have any performance drawbacks that I can think of. Because you\u0027re using function pointers, I don\u0027t believe you can use constexpr here. Feel free to file an issue for a style guideline clarification if you\u0027d like further discussion.",
      "parentUuid": "ad3ebfff_92e24359",
      "range": {
        "startLine": 66,
        "startChar": 0,
        "endLine": 108,
        "endChar": 18
      },
      "revId": "c7b132d6cf438734f2dfc7d365fce61332c11a70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff15055a_c695eaa3",
        "filename": "src/libANGLE/renderer/vulkan/DeviceVk.h",
        "patchSetId": 12
      },
      "lineNbr": 36,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-01-14T14:54:16Z",
      "side": 1,
      "message": "If you add a DeviceState helper (similar to DisplayState/etc) and make it available in const \u0026 DeviceImpl::mState, you don\u0027t need to store the mRenderer pointer here because you already have access to Display *Device::mOwningDisplay;. I don\u0027t want to delay the CL any longer - it\u0027d be appreciated if you could help improve the code this way in a follow-up.",
      "range": {
        "startLine": 32,
        "startChar": 0,
        "endLine": 36,
        "endChar": 2
      },
      "revId": "c7b132d6cf438734f2dfc7d365fce61332c11a70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4631da0e_f3a2004a",
        "filename": "src/libANGLE/renderer/vulkan/DeviceVk.h",
        "patchSetId": 12
      },
      "lineNbr": 36,
      "author": {
        "id": 1000050
      },
      "writtenOn": "2022-01-14T15:03:10Z",
      "side": 1,
      "message": "Sure. I will do it in follow-up.",
      "parentUuid": "ff15055a_c695eaa3",
      "range": {
        "startLine": 32,
        "startChar": 0,
        "endLine": 36,
        "endChar": 2
      },
      "revId": "c7b132d6cf438734f2dfc7d365fce61332c11a70",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}