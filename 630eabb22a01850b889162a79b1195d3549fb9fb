{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "38d3e265_0c22afb9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2022-09-28T04:41:25Z",
      "side": 1,
      "message": "Hey Sean, great stuff, I\u0027ve been trying it locally with traces.  One question below that I think should probably be addressed.",
      "revId": "630eabb22a01850b889162a79b1195d3549fb9fb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "72916215_cfdb222d",
        "filename": "src/tests/restricted_traces/retrace_restricted_traces.py",
        "patchSetId": 3
      },
      "lineNbr": 329,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2022-09-28T04:41:25Z",
      "side": 1,
      "message": "This is getting the min version without requesting any additional extensions.  I think there\u0027s a problem here.  Take a trace that requires ES 3.1 + extensions.  With this logic, you\u0027ll still end up with ES 3.2 as the required minimum, and a collection of extensions, some of which that are already core in 3.2.  I verified this with `dead_by_daylight` and `sky_force_reloaded` on SwiftShader.",
      "range": {
        "startLine": 329,
        "startChar": 0,
        "endLine": 329,
        "endChar": 56
      },
      "revId": "630eabb22a01850b889162a79b1195d3549fb9fb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "09b282e6_770b425a",
        "filename": "src/tests/restricted_traces/retrace_restricted_traces.py",
        "patchSetId": 3
      },
      "lineNbr": 329,
      "author": {
        "id": 1340059
      },
      "writtenOn": "2022-10-11T17:39:34Z",
      "side": 1,
      "message": "The default behavior when running the test suite is that all extensions are enabled. When you request an extension through \"--request-ext \u003cEXT\u003e\" then it changes the behavior so all extensions are turned off by default, then it requests each extension that was passed in as an argument.\n\nSo when we run through all the ES versions, we\u0027re running them with all extensions enabled. If run_test_suite on line 327 fails for ES 3.1, then that means even with all extensions enabled ES 3.1 does not support the trace.",
      "parentUuid": "72916215_cfdb222d",
      "range": {
        "startLine": 329,
        "startChar": 0,
        "endLine": 329,
        "endChar": 56
      },
      "revId": "630eabb22a01850b889162a79b1195d3549fb9fb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["has:approval_code-owners"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "630eabb22a01850b889162a79b1195d3549fb9fb",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "630eabb22a01850b889162a79b1195d3549fb9fb",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "630eabb22a01850b889162a79b1195d3549fb9fb",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "630eabb22a01850b889162a79b1195d3549fb9fb",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}