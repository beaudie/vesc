{
  "comments": [
    {
      "key": {
        "uuid": "3e1138fa_be26d746",
        "filename": "src/libANGLE/validationES.cpp",
        "patchSetId": 1
      },
      "lineNbr": 3497,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-02-03T20:31:38Z",
      "side": 1,
      "message": "nit: can put in a trivial message.",
      "range": {
        "startLine": 3497,
        "startChar": 61,
        "endLine": 3497,
        "endChar": 62
      },
      "revId": "7d5ee4d78ef9ae12951c0cd7c981518015adcd12",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7715c6fd_7bdc3820",
        "filename": "src/libANGLE/validationES.cpp",
        "patchSetId": 1
      },
      "lineNbr": 3514,
      "author": {
        "id": 1166724
      },
      "writtenOn": "2017-02-02T00:19:08Z",
      "side": 1,
      "message": "Looks like the \"draw-elements-out-of-bounds\" conformance test expects INVALID_VALUE for neg. offset. Not sure why, but to be compatible the return value can\u0027t be GL_INVALID_OPERATION.",
      "revId": "7d5ee4d78ef9ae12951c0cd7c981518015adcd12",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ab26c0e9_2c2b94a6",
        "filename": "src/libANGLE/validationES.cpp",
        "patchSetId": 1
      },
      "lineNbr": 3514,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2017-02-02T03:45:02Z",
      "side": 1,
      "message": "It seems that this error code requirement was added in this commit https://github.com/KhronosGroup/WebGL/commit/7980f486de20ed486371c345c43e6eefbbdc3b36 but I didn\u0027t find anything related to it in the WebGL specification or in the OpenGL ES 2 specification. Do you know where it comes from and why it isn\u0027t GL_INVALID_OPERATION instead?",
      "revId": "7d5ee4d78ef9ae12951c0cd7c981518015adcd12",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "80d339cd_7b117880",
        "filename": "src/libANGLE/validationES.cpp",
        "patchSetId": 1
      },
      "lineNbr": 3514,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2017-02-03T20:09:35Z",
      "side": 1,
      "message": "INVALID_VALUE is usually thrown when a value out of a range defined in the spec (like a GLsizei being negative).  I\u0027d say it\u0027s fine to use INVALID_VALUE as long as the tests are happy.",
      "parentUuid": "ab26c0e9_2c2b94a6",
      "revId": "7d5ee4d78ef9ae12951c0cd7c981518015adcd12",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "75dceb8c_31b9cb52",
        "filename": "src/libANGLE/validationES.cpp",
        "patchSetId": 1
      },
      "lineNbr": 3514,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-02-03T20:31:38Z",
      "side": 1,
      "message": "I\u0027m pretty unclear on this. Feels like a minor bug in the WebGL test - at what point does a large enough offset switch from invalid_operation (below) to invalid_value (here). Would be worth checking, that test is very old. I\u0027m not sure how javascript converts -1 from \"JavascriptDoubleWhatever\" to GLsize in C.",
      "parentUuid": "80d339cd_7b117880",
      "revId": "7d5ee4d78ef9ae12951c0cd7c981518015adcd12",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}