{
  "comments": [
    {
      "key": {
        "uuid": "0230c605_c23ed2c1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-08-31T22:21:11Z",
      "side": 1,
      "message": "Rebased",
      "revId": "c86e5788deb6ed62099250d233a5764cd0fdd6de",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0fdad152_2c4936a4",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 11
      },
      "lineNbr": 2918,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-09-01T14:38:45Z",
      "side": 1,
      "message": "instead of restoring when \"CommandBufferHelper::shouldRestoreDepthStencilAttachment\", restore when access \u003d\u003d Write. This will remove the need to track some of the state.",
      "range": {
        "startLine": 2914,
        "startChar": 19,
        "endLine": 2918,
        "endChar": 21
      },
      "revId": "c86e5788deb6ed62099250d233a5764cd0fdd6de",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d6a3aa7_33fd840c",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 11
      },
      "lineNbr": 2918,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-09-01T17:39:45Z",
      "side": 1,
      "message": "These lines are deleted by the follow-on CL, that moves mContentDefined to ImageHelper, and the mContentDefined decision to endRP (see: https://chromium-review.googlesource.com/c/angle/angle/+/2386478).  IIRC you helped me see that endRP is the only time when mContentDefined can be properly set for all scenarios (so that the load op of the next RP matches the store op of this RP, based on the command count).\n\nBTW, these lines got put back when the one CL was reverted (that stored a pointer to the RenderTargetVk in CommandBufferHelper).",
      "parentUuid": "0fdad152_2c4936a4",
      "range": {
        "startLine": 2914,
        "startChar": 19,
        "endLine": 2918,
        "endChar": 21
      },
      "revId": "c86e5788deb6ed62099250d233a5764cd0fdd6de",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce8a233d_0bd744c9",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 11
      },
      "lineNbr": 4923,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-09-01T14:38:45Z",
      "side": 1,
      "message": "instead of restoring when \"CommandBufferHelper::shouldRestoreDepthStencilAttachment\", restore when access \u003d\u003d Write. This will remove the need to track some of the state.",
      "range": {
        "startLine": 4921,
        "startChar": 0,
        "endLine": 4923,
        "endChar": 20
      },
      "revId": "c86e5788deb6ed62099250d233a5764cd0fdd6de",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "41e37e97_ffbffee5",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 11
      },
      "lineNbr": 4923,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-09-01T17:39:45Z",
      "side": 1,
      "message": "Ditto from above.",
      "parentUuid": "ce8a233d_0bd744c9",
      "range": {
        "startLine": 4921,
        "startChar": 0,
        "endLine": 4923,
        "endChar": 20
      },
      "revId": "c86e5788deb6ed62099250d233a5764cd0fdd6de",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a0cd8dc5_c1821156",
        "filename": "src/libANGLE/renderer/vulkan/SecondaryCommandBuffer.h",
        "patchSetId": 11
      },
      "lineNbr": 697,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-09-01T18:53:44Z",
      "side": 1,
      "message": "Not a semi-quantitative indication of how many *commands* there are, but rather how many *bytes* of commands have been recorded.\n\nMaybe call it getApproximateCommandBufferSize()?\n\nI\u0027d honestly just call it `getCommandBufferSize()` and use `* kBlockSize` instead of the shift to get accurate results. We could use that for statistics later too.",
      "range": {
        "startLine": 697,
        "startChar": 13,
        "endLine": 697,
        "endChar": 28
      },
      "revId": "c86e5788deb6ed62099250d233a5764cd0fdd6de",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eb98a69a_6a4b7603",
        "filename": "src/libANGLE/renderer/vulkan/SecondaryCommandBuffer.h",
        "patchSetId": 11
      },
      "lineNbr": 697,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-09-01T21:53:30Z",
      "side": 1,
      "message": "\u003e I\u0027d honestly just call it `getCommandBufferSize()` and use `* kBlockSize` instead of the shift to get accurate results.\n\nDone",
      "parentUuid": "a0cd8dc5_c1821156",
      "range": {
        "startLine": 697,
        "startChar": 13,
        "endLine": 697,
        "endChar": 28
      },
      "revId": "c86e5788deb6ed62099250d233a5764cd0fdd6de",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0dd75d31_62a0a169",
        "filename": "src/libANGLE/renderer/vulkan/SecondaryCommandBuffer.h",
        "patchSetId": 11
      },
      "lineNbr": 700,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-09-01T18:53:44Z",
      "side": 1,
      "message": "Can be static_assert. Also technically \u003e\u003d is ok too.",
      "range": {
        "startLine": 700,
        "startChar": 8,
        "endLine": 700,
        "endChar": 14
      },
      "revId": "c86e5788deb6ed62099250d233a5764cd0fdd6de",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "45638d2d_84a92b64",
        "filename": "src/libANGLE/renderer/vulkan/SecondaryCommandBuffer.h",
        "patchSetId": 11
      },
      "lineNbr": 700,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-09-01T21:53:30Z",
      "side": 1,
      "message": "Obsolete now",
      "parentUuid": "0dd75d31_62a0a169",
      "range": {
        "startLine": 700,
        "startChar": 8,
        "endLine": 700,
        "endChar": 14
      },
      "revId": "c86e5788deb6ed62099250d233a5764cd0fdd6de",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2aec3c9e_e2b9de85",
        "filename": "src/libANGLE/renderer/vulkan/SecondaryCommandBuffer.h",
        "patchSetId": 11
      },
      "lineNbr": 702,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-09-01T18:53:44Z",
      "side": 1,
      "message": "You should be able to just do `- mCurrentBytesRemaining`. Either mCurrentBytesRemaining is 0, or mCommands.size() \u003e 0. You can ASSERT that.",
      "range": {
        "startLine": 701,
        "startChar": 80,
        "endLine": 702,
        "endChar": 81
      },
      "revId": "c86e5788deb6ed62099250d233a5764cd0fdd6de",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fd7aa59d_b3aaeccb",
        "filename": "src/libANGLE/renderer/vulkan/SecondaryCommandBuffer.h",
        "patchSetId": 11
      },
      "lineNbr": 702,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-09-01T21:53:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2aec3c9e_e2b9de85",
      "range": {
        "startLine": 701,
        "startChar": 80,
        "endLine": 702,
        "endChar": 81
      },
      "revId": "c86e5788deb6ed62099250d233a5764cd0fdd6de",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87e5c4d7_a9ad13b6",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 11
      },
      "lineNbr": 886,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-09-01T18:53:44Z",
      "side": 1,
      "message": "Maybe kInvalidatedButEnabledCmdCount?\n\nAlso per the other comment, CmdSize would be more accurate.",
      "range": {
        "startLine": 886,
        "startChar": 19,
        "endLine": 886,
        "endChar": 35
      },
      "revId": "c86e5788deb6ed62099250d233a5764cd0fdd6de",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "edd01349_81f721b9",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 11
      },
      "lineNbr": 886,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-09-01T21:53:30Z",
      "side": 1,
      "message": "\u003e Maybe kInvalidatedButEnabledCmdCount?\n\nGiven it\u0027s usage (per Jamie), it\u0027s actually kNeverInvalidatedOrInvalidatedAndEnabledCmdCount, but that was a mouthful.\n\nDo you want to change it still:-)?\n\n\n\u003e Also per the other comment, CmdSize would be more accurate.\n\nDone",
      "parentUuid": "87e5c4d7_a9ad13b6",
      "range": {
        "startLine": 886,
        "startChar": 19,
        "endLine": 886,
        "endChar": 35
      },
      "revId": "c86e5788deb6ed62099250d233a5764cd0fdd6de",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ab2e157c_87b3e4b6",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 11
      },
      "lineNbr": 886,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-09-02T10:19:38Z",
      "side": 1,
      "message": "No that\u0027s fine.",
      "parentUuid": "edd01349_81f721b9",
      "range": {
        "startLine": 886,
        "startChar": 19,
        "endLine": 886,
        "endChar": 35
      },
      "revId": "c86e5788deb6ed62099250d233a5764cd0fdd6de",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5c8064f3_90c134bf",
        "filename": "src/tests/gl_tests/VulkanPerformanceCounterTest.cpp",
        "patchSetId": 11
      },
      "lineNbr": 81,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-09-01T18:53:44Z",
      "side": 1,
      "message": "nit: Could you please double check that internally the two functions do the same thing? Then switch to glInvalidateFramebuffer(). One app using the more ancient entry point shouldn\u0027t define our test framework.",
      "revId": "c86e5788deb6ed62099250d233a5764cd0fdd6de",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "226876b1_33ae1ad5",
        "filename": "src/tests/gl_tests/VulkanPerformanceCounterTest.cpp",
        "patchSetId": 11
      },
      "lineNbr": 81,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-09-01T21:53:30Z",
      "side": 1,
      "message": "Done\n\nI checked again, and yes they are the same.",
      "parentUuid": "5c8064f3_90c134bf",
      "revId": "c86e5788deb6ed62099250d233a5764cd0fdd6de",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6a00d873_02c0411b",
        "filename": "src/tests/gl_tests/VulkanPerformanceCounterTest.cpp",
        "patchSetId": 11
      },
      "lineNbr": 102,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-09-01T18:53:44Z",
      "side": 1,
      "message": "nit: I would make them inline in the test. Their names are not descriptive, and they are just two lines each.",
      "range": {
        "startLine": 78,
        "startChar": 0,
        "endLine": 102,
        "endChar": 5
      },
      "revId": "c86e5788deb6ed62099250d233a5764cd0fdd6de",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eda8d08a_b069cae3",
        "filename": "src/tests/gl_tests/VulkanPerformanceCounterTest.cpp",
        "patchSetId": 11
      },
      "lineNbr": 102,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-09-01T21:53:30Z",
      "side": 1,
      "message": "Sigh.  That\u0027s what I originally did, but was asked to make the tests small and to share code.  I\u0027ll re-inline them.",
      "parentUuid": "6a00d873_02c0411b",
      "range": {
        "startLine": 78,
        "startChar": 0,
        "endLine": 102,
        "endChar": 5
      },
      "revId": "c86e5788deb6ed62099250d233a5764cd0fdd6de",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f7d117f0_230bac8f",
        "filename": "src/tests/gl_tests/VulkanPerformanceCounterTest.cpp",
        "patchSetId": 11
      },
      "lineNbr": 102,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-09-02T10:19:38Z",
      "side": 1,
      "message": "Thanks, looks better IMO. Refactoring setupClearAndDrawForInvalidateTest and the command counter set/compare was a good call.",
      "parentUuid": "eda8d08a_b069cae3",
      "range": {
        "startLine": 78,
        "startChar": 0,
        "endLine": 102,
        "endChar": 5
      },
      "revId": "c86e5788deb6ed62099250d233a5764cd0fdd6de",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6cab0e63_ddb5687b",
        "filename": "src/tests/gl_tests/VulkanPerformanceCounterTest.cpp",
        "patchSetId": 11
      },
      "lineNbr": 516,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-09-01T18:53:44Z",
      "side": 1,
      "message": "Use one or two structs with helper functions instead.",
      "range": {
        "startLine": 474,
        "startChar": 0,
        "endLine": 516,
        "endChar": 56
      },
      "revId": "c86e5788deb6ed62099250d233a5764cd0fdd6de",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eeca8c37_aed89532",
        "filename": "src/tests/gl_tests/VulkanPerformanceCounterTest.cpp",
        "patchSetId": 11
      },
      "lineNbr": 516,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-09-01T21:53:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6cab0e63_ddb5687b",
      "range": {
        "startLine": 474,
        "startChar": 0,
        "endLine": 516,
        "endChar": 56
      },
      "revId": "c86e5788deb6ed62099250d233a5764cd0fdd6de",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}