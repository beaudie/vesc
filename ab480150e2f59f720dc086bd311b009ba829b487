{
  "comments": [
    {
      "key": {
        "uuid": "ba43bc2e_2a62e2f7",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 210,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-05-22T15:54:19Z",
      "side": 1,
      "message": "Avoid std::vector when possible due to the memory allocations it uses. Can we put an upper limit on the number of semaphores in the submission? If so we can use angle::FixedVector.\n\nIf it\u0027s totally unbounded, we will need to cache the std::vector so it doesn\u0027t get recreated.",
      "range": {
        "startLine": 210,
        "startChar": 9,
        "endLine": 210,
        "endChar": 15
      },
      "revId": "ab480150e2f59f720dc086bd311b009ba829b487",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d4b286a_b1bebf30",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 210,
      "author": {
        "id": 1001794
      },
      "writtenOn": "2019-05-22T16:59:12Z",
      "side": 1,
      "message": "There can be one from current surface chain, and one client semaphore passed to glSignalSemaphoreEXT, so FixedVector\u003cVkSemaphore, 2\u003e should work for now.\n\nFor waits, there isn\u0027t an obvious bound other than resource limits.  But that vector is already cached.",
      "parentUuid": "ba43bc2e_2a62e2f7",
      "range": {
        "startLine": 210,
        "startChar": 9,
        "endLine": 210,
        "endChar": 15
      },
      "revId": "ab480150e2f59f720dc086bd311b009ba829b487",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d429de63_5ec0703c",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 224,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-05-22T15:54:19Z",
      "side": 1,
      "message": "same",
      "range": {
        "startLine": 224,
        "startChar": 9,
        "endLine": 224,
        "endChar": 15
      },
      "revId": "ab480150e2f59f720dc086bd311b009ba829b487",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec7f3fb6_637a297e",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 3
      },
      "lineNbr": 224,
      "author": {
        "id": 1001794
      },
      "writtenOn": "2019-05-22T16:59:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d429de63_5ec0703c",
      "range": {
        "startLine": 224,
        "startChar": 9,
        "endLine": 224,
        "endChar": 15
      },
      "revId": "ab480150e2f59f720dc086bd311b009ba829b487",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}