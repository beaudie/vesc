{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "cc88d255_cb1ffeb5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-11-24T17:28:24Z",
      "side": 1,
      "message": "Reminder to limit viewport size to 64k in vk_caps_utils.cpp",
      "revId": "9a48a76fe9b871125368ef2e14ec27aed1b0403a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fb15f2f1_f192cab0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-11-24T17:44:20Z",
      "side": 1,
      "message": "I think you can actually use a bigger viewport size as long as your texture size is below 64k. I would have to check but I think our max texture size is already under that.\n\nNot sure how this plays with sparse textures.",
      "parentUuid": "cc88d255_cb1ffeb5",
      "revId": "9a48a76fe9b871125368ef2e14ec27aed1b0403a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "769fd6f5_263fa324",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2464,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-11-24T17:43:30Z",
      "side": 1,
      "message": "nit: use SetBitField to match the rest of this file, then you don\u0027t need the explicit ASSERT or the sentinel value.",
      "range": {
        "startLine": 2460,
        "startChar": 0,
        "endLine": 2464,
        "endChar": 67
      },
      "revId": "9a48a76fe9b871125368ef2e14ec27aed1b0403a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ed7d0976_588e0806",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2464,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-11-24T17:49:05Z",
      "side": 1,
      "message": "I was gonna say, but the ASSERT is good regardless. The sentinel is within the uint16_t range, so SetBitField won\u0027t catch that.",
      "parentUuid": "769fd6f5_263fa324",
      "range": {
        "startLine": 2460,
        "startChar": 0,
        "endLine": 2464,
        "endChar": 67
      },
      "revId": "9a48a76fe9b871125368ef2e14ec27aed1b0403a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "630deb0f_6950048b",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2473,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-11-24T17:28:24Z",
      "side": 1,
      "message": "Call setScissor to use the same implementation + get the ASSERT",
      "range": {
        "startLine": 2470,
        "startChar": 0,
        "endLine": 2473,
        "endChar": 67
      },
      "revId": "9a48a76fe9b871125368ef2e14ec27aed1b0403a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}