{
  "comments": [
    {
      "key": {
        "uuid": "a24e9aec_a0e41b12",
        "filename": "gni/angle.gni",
        "patchSetId": 51
      },
      "lineNbr": 324,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "Is this needed for !standalone_harness?",
      "range": {
        "startLine": 320,
        "startChar": 0,
        "endLine": 324,
        "endChar": 0
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9a9f9fe4_dba371a0",
        "filename": "src/tests/angle_end2end_tests_main.cpp",
        "patchSetId": 51
      },
      "lineNbr": 12,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "What about dEQP, whitebox, perftests?\nThey can\u0027t use the new harness?",
      "range": {
        "startLine": 12,
        "startChar": 4,
        "endLine": 12,
        "endChar": 8
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02991619_40938c02",
        "filename": "src/tests/test_utils/runner/README.md",
        "patchSetId": 51
      },
      "lineNbr": 4,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "This renders wrong in gitiles.\nI think the correct format is to just have [Chromium test harness] here and then use it on the bottom instead of [BaseTest]",
      "range": {
        "startLine": 4,
        "startChar": 0,
        "endLine": 4,
        "endChar": 33
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4168907e_afe5ced9",
        "filename": "src/tests/test_utils/runner/README.md",
        "patchSetId": 51
      },
      "lineNbr": 8,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "same here",
      "range": {
        "startLine": 8,
        "startChar": 30,
        "endLine": 8,
        "endChar": 68
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "26d242ec_8fb45ca4",
        "filename": "src/tests/test_utils/runner/README.md",
        "patchSetId": 51
      },
      "lineNbr": 22,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "Is this also an ANGLE tests harness argument, or does it accept all the usual gtest arguments as well?",
      "range": {
        "startLine": 22,
        "startChar": 44,
        "endLine": 22,
        "endChar": 56
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "403b3365_2a6369e2",
        "filename": "src/tests/test_utils/runner/README.md",
        "patchSetId": 51
      },
      "lineNbr": 44,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "And this should be:\n[Chromium test harness]: https://chromium.googlesource.com/chromium/src/+/refs/heads/master/base/test/",
      "range": {
        "startLine": 44,
        "startChar": 0,
        "endLine": 44,
        "endChar": 89
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f251645f_43b15a2b",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 196,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "This is where test expectations will plug in?",
      "range": {
        "startLine": 196,
        "startChar": 39,
        "endLine": 196,
        "endChar": 45
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "280138d0_6f23d225",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 203,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "Do you plan to have several test invocations in the future, similar to 3 retires for flaky WebGL tests?\nOtherwise, using \"time\" seems simpler.",
      "range": {
        "startLine": 199,
        "startChar": 0,
        "endLine": 203,
        "endChar": 54
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "227687e8_24afb4bc",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 206,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "Looks like this does the same thing as TestIdentifier.operator\u003c\u003c(), do we need both?",
      "range": {
        "startLine": 206,
        "startChar": 8,
        "endLine": 206,
        "endChar": 81
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1a6f564a_88732ada",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 246,
      "author": {
        "id": 1326275
      },
      "writtenOn": "2019-11-28T17:06:46Z",
      "side": 1,
      "message": "Seems to me more like UpdateCurrentTestResult",
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d60f8c7_8e33cd7e",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 260,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "What about crash and timeout?",
      "range": {
        "startLine": 260,
        "startChar": 41,
        "endLine": 260,
        "endChar": 45
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "87358209_6060450f",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 270,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "Can just use TestIdentifier constructor.",
      "range": {
        "startLine": 268,
        "startChar": 0,
        "endLine": 270,
        "endChar": 48
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7d3beac9_bdf711d2",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 280,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "Should this be some kind of smart pointer?\nHow is the lifetime of testResults managed?",
      "range": {
        "startLine": 280,
        "startChar": 22,
        "endLine": 280,
        "endChar": 46
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a4ca8c9f_45f73e43",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 326,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "Why is this different from GetTestIdentifier?\nCan testCase-\u003ename() be different from testInfo-\u003etest_case_name()?",
      "range": {
        "startLine": 324,
        "startChar": 0,
        "endLine": 326,
        "endChar": 53
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3e7eb2f6_3251d98c",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 351,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "This looks very similar to GetCompiledInTests. Maybe these can be unified into one? Maybe with a lambda parameter for the filter.",
      "range": {
        "startLine": 351,
        "startChar": 28,
        "endLine": 351,
        "endChar": 44
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3975d13c_4de45c25",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 399,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "filterStream \u003c\u003c tests[testIndex];",
      "range": {
        "startLine": 397,
        "startChar": 0,
        "endLine": 399,
        "endChar": 50
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c97668df_3a098335",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 427,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "I\u0027m not very familiar with C++11. Is this the\n\"template \u003cclass InputIterator\u003e string(InputIterator first, InputIterator last)\"\nconstructor?\nLooks weird. Is this equivalent to \"strlen(baseNameStart) - suffixLen\"?",
      "range": {
        "startLine": 427,
        "startChar": 42,
        "endLine": 427,
        "endChar": 56
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a3cc1c4f_4c463817",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 431,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "I find it hard from the \"if\" condition to understand what\u0027s the expected contents here.\nRandom junk in case we weren\u0027t able to parse the string properly?\nMaybe replacing \"if\" with \"assert\" is better?",
      "range": {
        "startLine": 431,
        "startChar": 15,
        "endLine": 431,
        "endChar": 28
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c47ef5e6_a125d644",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 474,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "Makes sense to make a factory function from this.",
      "range": {
        "startLine": 465,
        "startChar": 0,
        "endLine": 474,
        "endChar": 92
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0c5e1187_7db68910",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 543,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "Should we have a constructor for TestResult that ensures the default type is not Skip?",
      "range": {
        "startLine": 543,
        "startChar": 0,
        "endLine": 543,
        "endChar": 60
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "86461be3_27a165c2",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 567,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "Better to use TestIdentifier.operator\u003c\u003c here as well.",
      "range": {
        "startLine": 567,
        "startChar": 27,
        "endLine": 567,
        "endChar": 62
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d34aca77_c61884c0",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 587,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "I\u0027d rather have this in \"else\" to avoid extra copy.\nOverall, would be better to return iterators than to copy the substring.",
      "range": {
        "startLine": 587,
        "startChar": 24,
        "endLine": 587,
        "endChar": 49
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5082879a_022bf0d6",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 695,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "That\u0027s unfortunate.\nRunning only SwiftShader end2end tests is a potential usage.",
      "range": {
        "startLine": 695,
        "startChar": 20,
        "endLine": 695,
        "endChar": 82
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8acad39c_f0d37b34",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 712,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "maybe check that the file starts with \"--gtest_filter\u003d\"?",
      "range": {
        "startLine": 712,
        "startChar": 8,
        "endLine": 712,
        "endChar": 50
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a009c2d_4b6aea63",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 728,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "same comment as for filter file, actually maybe more applicable here.",
      "range": {
        "startLine": 728,
        "startChar": 20,
        "endLine": 728,
        "endChar": 83
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "245c160d_ddc33f94",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 755,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "looks like results dir argument overrides results file with a default filename",
      "range": {
        "startLine": 749,
        "startChar": 0,
        "endLine": 755,
        "endChar": 0
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e06e3595_03f48065",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 759,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "Would this be relative to exe location? This assumes it is writable. I think it is on our bots, but it may break in the future.",
      "range": {
        "startLine": 759,
        "startChar": 24,
        "endLine": 759,
        "endChar": 35
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e36cc185_7a472b25",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 772,
      "author": {
        "id": 1326275
      },
      "writtenOn": "2019-11-28T17:06:46Z",
      "side": 1,
      "message": "Is this for initialization? It\u0027s missing elapsedTimeSeconds\nCould you do it in the TestResult constructor?",
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "11d39324_49b42bda",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 794,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "missing in doc",
      "range": {
        "startLine": 794,
        "startChar": 28,
        "endLine": 794,
        "endChar": 48
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d64bda4a_aea8444c",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 804,
      "author": {
        "id": 1326275
      },
      "writtenOn": "2019-11-28T17:06:46Z",
      "side": 1,
      "message": "Could forward to GetCurrentTestResult to update the elapsed time too",
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4ad9321b_cae35198",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 886,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "maybe construct this from \"args\", since you also add mArgv there?",
      "range": {
        "startLine": 886,
        "startChar": 22,
        "endLine": 886,
        "endChar": 89
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bf082536_14b4d82d",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 919,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "Does \"Skip\" mean unexpected process exit?\nI think we need a different enum, so it is not confused with \"Skip\" expectation.\nAlso, maybe it\u0027s possible to break instead of continue?\nIf the tests in batch are executed in map order.",
      "range": {
        "startLine": 916,
        "startChar": 0,
        "endLine": 919,
        "endChar": 9
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "09505af2_d9516f85",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 934,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "Going to be terribly slow to read from the start for each failure.\nMaybe we can advance batchStdout to be after the end of the current failure?",
      "range": {
        "startLine": 934,
        "startChar": 45,
        "endLine": 934,
        "endChar": 90
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "82db5a55_5e1fc7b7",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 942,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "If you break like I\u0027ve suggested above, can just start from the place previous \"for\" stopped.\nAnd not check result.type, since everything would be \"Skip\" from this point on.",
      "range": {
        "startLine": 942,
        "startChar": 13,
        "endLine": 942,
        "endChar": 58
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b53a32bd_97acaeaf",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 957,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "What if we crash and don\u0027t reach here or user Ctrl+C?\nI think there is an \"autodelete\" flag when you create a file.",
      "range": {
        "startLine": 957,
        "startChar": 20,
        "endLine": 957,
        "endChar": 30
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7c14d9fc_a4a6c3fe",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 1024,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "Where are these returned to mTestQueue?\nDo you need to call finishProcess here?",
      "range": {
        "startLine": 1024,
        "startChar": 72,
        "endLine": 1024,
        "endChar": 84
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d0f0d7c7_7352f85a",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 1026,
      "author": {
        "id": 1326275
      },
      "writtenOn": "2019-11-28T17:06:46Z",
      "side": 1,
      "message": "could forward to GetCurrentTestResult",
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "599e5dcf_a019cacd",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 1054,
      "author": {
        "id": 1326275
      },
      "writtenOn": "2019-11-28T17:06:46Z",
      "side": 1,
      "message": "Why is this necessary? Just double checking because (for example) on Android this adds 60 seconds to the total end2end test suite. (and much worse if this ends up being used for dEQP)",
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b863d210_3fb562a7",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 1063,
      "author": {
        "id": 1326275
      },
      "writtenOn": "2019-11-28T17:06:46Z",
      "side": 1,
      "message": "From my understanding, this doesn\u0027t yet parse any expectations, right? Would be more clear with the name printFailuresAndReturnCount()\n\nOr if expectations are parsed, it seems to be missing a comparison result.type !\u003d expectation.type below",
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "38c54a89_86d3b047",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 1074,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "Why not just keep these as part of TestIdentifier (possibly empty when you don\u0027t need them)?",
      "range": {
        "startLine": 1074,
        "startChar": 39,
        "endLine": 1074,
        "endChar": 62
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "86c672e2_f5499700",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 1077,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "id",
      "range": {
        "startLine": 1077,
        "startChar": 30,
        "endLine": 1077,
        "endChar": 67
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "162cc894_be33ae1b",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 1097,
      "author": {
        "id": 1326275
      },
      "writtenOn": "2019-11-28T17:06:46Z",
      "side": 1,
      "message": "nit: Is this meant to be commented or removed?",
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a4b3b930_0fe90cc6",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 1145,
      "author": {
        "id": 1326275
      },
      "writtenOn": "2019-11-28T17:06:46Z",
      "side": 1,
      "message": "nit: unnecessary",
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8a50a25f_ee2a7fa7",
        "filename": "src/tests/test_utils/runner/TestSuite.h",
        "patchSetId": 51
      },
      "lineNbr": 125,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "xec",
      "range": {
        "startLine": 125,
        "startChar": 22,
        "endLine": 125,
        "endChar": 24
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd2799fa_ce6f7a42",
        "filename": "src/tests/test_utils/runner/TestSuite.h",
        "patchSetId": 51
      },
      "lineNbr": 143,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "Could you give it a more meaningful name, like mPassthroughArgs?",
      "range": {
        "startLine": 143,
        "startChar": 29,
        "endLine": 143,
        "endChar": 34
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b5e3f4d0_e909e79b",
        "filename": "src/tests/test_utils/runner/TestSuite_unittest.cpp",
        "patchSetId": 51
      },
      "lineNbr": 41,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "Runs",
      "range": {
        "startLine": 41,
        "startChar": 47,
        "endLine": 41,
        "endChar": 53
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}