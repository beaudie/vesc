{
  "comments": [
    {
      "key": {
        "uuid": "a24e9aec_a0e41b12",
        "filename": "gni/angle.gni",
        "patchSetId": 51
      },
      "lineNbr": 324,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "Is this needed for !standalone_harness?",
      "range": {
        "startLine": 320,
        "startChar": 0,
        "endLine": 324,
        "endChar": 0
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fee5c42d_9ff7aa3d",
        "filename": "gni/angle.gni",
        "patchSetId": 51
      },
      "lineNbr": 324,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-11-29T15:23:12Z",
      "side": 1,
      "message": "Yep. \u0027gn check\u0027 was bothering me.",
      "parentUuid": "a24e9aec_a0e41b12",
      "range": {
        "startLine": 320,
        "startChar": 0,
        "endLine": 324,
        "endChar": 0
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1dfb3827_d19451ef",
        "filename": "gni/angle.gni",
        "patchSetId": 51
      },
      "lineNbr": 324,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-12-02T21:57:37Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "fee5c42d_9ff7aa3d",
      "range": {
        "startLine": 320,
        "startChar": 0,
        "endLine": 324,
        "endChar": 0
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a9f9fe4_dba371a0",
        "filename": "src/tests/angle_end2end_tests_main.cpp",
        "patchSetId": 51
      },
      "lineNbr": 12,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "What about dEQP, whitebox, perftests?\nThey can\u0027t use the new harness?",
      "range": {
        "startLine": 12,
        "startChar": 4,
        "endLine": 12,
        "endChar": 8
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a34c7063_52d6cc67",
        "filename": "src/tests/angle_end2end_tests_main.cpp",
        "patchSetId": 51
      },
      "lineNbr": 12,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-11-29T15:23:12Z",
      "side": 1,
      "message": "Done\n\nThink I just forgot about them.",
      "parentUuid": "9a9f9fe4_dba371a0",
      "range": {
        "startLine": 12,
        "startChar": 4,
        "endLine": 12,
        "endChar": 8
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "02991619_40938c02",
        "filename": "src/tests/test_utils/runner/README.md",
        "patchSetId": 51
      },
      "lineNbr": 4,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "This renders wrong in gitiles.\nI think the correct format is to just have [Chromium test harness] here and then use it on the bottom instead of [BaseTest]",
      "range": {
        "startLine": 4,
        "startChar": 0,
        "endLine": 4,
        "endChar": 33
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "11bc2b69_63053a1f",
        "filename": "src/tests/test_utils/runner/README.md",
        "patchSetId": 51
      },
      "lineNbr": 4,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-11-29T15:23:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "02991619_40938c02",
      "range": {
        "startLine": 4,
        "startChar": 0,
        "endLine": 4,
        "endChar": 33
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4168907e_afe5ced9",
        "filename": "src/tests/test_utils/runner/README.md",
        "patchSetId": 51
      },
      "lineNbr": 8,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "same here",
      "range": {
        "startLine": 8,
        "startChar": 30,
        "endLine": 8,
        "endChar": 68
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f0a6c1f9_119b8fc1",
        "filename": "src/tests/test_utils/runner/README.md",
        "patchSetId": 51
      },
      "lineNbr": 8,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-11-29T15:23:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4168907e_afe5ced9",
      "range": {
        "startLine": 8,
        "startChar": 30,
        "endLine": 8,
        "endChar": 68
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "26d242ec_8fb45ca4",
        "filename": "src/tests/test_utils/runner/README.md",
        "patchSetId": 51
      },
      "lineNbr": 22,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "Is this also an ANGLE tests harness argument, or does it accept all the usual gtest arguments as well?",
      "range": {
        "startLine": 22,
        "startChar": 44,
        "endLine": 22,
        "endChar": 56
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f57d579f_f8967ebd",
        "filename": "src/tests/test_utils/runner/README.md",
        "patchSetId": 51
      },
      "lineNbr": 22,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-11-29T15:23:12Z",
      "side": 1,
      "message": "The usual as well. These are all additional. Clarified in the doc.",
      "parentUuid": "26d242ec_8fb45ca4",
      "range": {
        "startLine": 22,
        "startChar": 44,
        "endLine": 22,
        "endChar": 56
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "006955b8_8bbbef7f",
        "filename": "src/tests/test_utils/runner/README.md",
        "patchSetId": 51
      },
      "lineNbr": 22,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-12-02T16:23:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f57d579f_f8967ebd",
      "range": {
        "startLine": 22,
        "startChar": 44,
        "endLine": 22,
        "endChar": 56
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "403b3365_2a6369e2",
        "filename": "src/tests/test_utils/runner/README.md",
        "patchSetId": 51
      },
      "lineNbr": 44,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "And this should be:\n[Chromium test harness]: https://chromium.googlesource.com/chromium/src/+/refs/heads/master/base/test/",
      "range": {
        "startLine": 44,
        "startChar": 0,
        "endLine": 44,
        "endChar": 89
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a8d9c327_92e74e04",
        "filename": "src/tests/test_utils/runner/README.md",
        "patchSetId": 51
      },
      "lineNbr": 44,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-11-29T15:23:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "403b3365_2a6369e2",
      "range": {
        "startLine": 44,
        "startChar": 0,
        "endLine": 44,
        "endChar": 89
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f251645f_43b15a2b",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 196,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "This is where test expectations will plug in?",
      "range": {
        "startLine": 196,
        "startChar": 39,
        "endLine": 196,
        "endChar": 45
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c79ecc55_25620163",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 196,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-11-29T15:23:12Z",
      "side": 1,
      "message": "This is test results rather than expectations. Added a link to the format doc.",
      "parentUuid": "f251645f_43b15a2b",
      "range": {
        "startLine": 196,
        "startChar": 39,
        "endLine": 196,
        "endChar": 45
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c8d480a8_cd86c47f",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 196,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-12-02T16:23:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c79ecc55_25620163",
      "range": {
        "startLine": 196,
        "startChar": 39,
        "endLine": 196,
        "endChar": 45
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "280138d0_6f23d225",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 203,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "Do you plan to have several test invocations in the future, similar to 3 retires for flaky WebGL tests?\nOtherwise, using \"time\" seems simpler.",
      "range": {
        "startLine": 199,
        "startChar": 0,
        "endLine": 203,
        "endChar": 54
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "594cfbfd_2353e9ba",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 203,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-11-29T15:23:12Z",
      "side": 1,
      "message": "Again, this is a according to a spec rather than my own decision. It has to be this way for the infra scripts.",
      "parentUuid": "280138d0_6f23d225",
      "range": {
        "startLine": 199,
        "startChar": 0,
        "endLine": 203,
        "endChar": 54
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "945b7d49_473feeb1",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 203,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T18:35:16Z",
      "side": 1,
      "message": "Interesting.\nhttps://chromium.googlesource.com/chromium/src/+/master/docs/testing/json_test_results_format.md has both \"time\" and \"times\".",
      "parentUuid": "594cfbfd_2353e9ba",
      "range": {
        "startLine": 199,
        "startChar": 0,
        "endLine": 203,
        "endChar": 54
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4301cf7d_d42f4bb7",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 203,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-12-02T16:23:14Z",
      "side": 1,
      "message": "Fair enough. \"times\" is future proofed for multiple flaky retries. Left as is for now.",
      "parentUuid": "945b7d49_473feeb1",
      "range": {
        "startLine": 199,
        "startChar": 0,
        "endLine": 203,
        "endChar": 54
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d32ca03e_2f910e42",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 203,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-12-02T21:57:37Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "4301cf7d_d42f4bb7",
      "range": {
        "startLine": 199,
        "startChar": 0,
        "endLine": 203,
        "endChar": 54
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "227687e8_24afb4bc",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 206,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "Looks like this does the same thing as TestIdentifier.operator\u003c\u003c(), do we need both?",
      "range": {
        "startLine": 206,
        "startChar": 8,
        "endLine": 206,
        "endChar": 81
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6632ec99_6dc74645",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 206,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-11-29T15:23:12Z",
      "side": 1,
      "message": "I\u0027d like to keep this one as it doesn\u0027t need a (slow) std::stringstream. The code duplication is a bit irksome though.",
      "parentUuid": "227687e8_24afb4bc",
      "range": {
        "startLine": 206,
        "startChar": 8,
        "endLine": 206,
        "endChar": 81
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d95331a_d1e7efdf",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 206,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T18:35:16Z",
      "side": 1,
      "message": "Maybe a helper function in TestIdentifier, then?",
      "parentUuid": "6632ec99_6dc74645",
      "range": {
        "startLine": 206,
        "startChar": 8,
        "endLine": 206,
        "endChar": 81
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f359d64a_9ce1684f",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 206,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-12-02T16:23:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4d95331a_d1e7efdf",
      "range": {
        "startLine": 206,
        "startChar": 8,
        "endLine": 206,
        "endChar": 81
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a6f564a_88732ada",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 246,
      "author": {
        "id": 1326275
      },
      "writtenOn": "2019-11-28T17:06:46Z",
      "side": 1,
      "message": "Seems to me more like UpdateCurrentTestResult",
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b229e000_09dab12a",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 246,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-11-29T15:23:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1a6f564a_88732ada",
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4d60f8c7_8e33cd7e",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 260,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "What about crash and timeout?",
      "range": {
        "startLine": 260,
        "startChar": 41,
        "endLine": 260,
        "endChar": 45
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d3bb981d_6ef5e91d",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 260,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-11-29T15:23:12Z",
      "side": 1,
      "message": "Those are detected by the crash handler and watchdog respectively. Added a comment.",
      "parentUuid": "4d60f8c7_8e33cd7e",
      "range": {
        "startLine": 260,
        "startChar": 41,
        "endLine": 260,
        "endChar": 45
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "150b4d97_893ec7bf",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 260,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-12-02T16:23:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d3bb981d_6ef5e91d",
      "range": {
        "startLine": 260,
        "startChar": 41,
        "endLine": 260,
        "endChar": 45
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87358209_6060450f",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 270,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "Can just use TestIdentifier constructor.",
      "range": {
        "startLine": 268,
        "startChar": 0,
        "endLine": 270,
        "endChar": 48
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "afd892b9_c234666b",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 270,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-11-29T15:23:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "87358209_6060450f",
      "range": {
        "startLine": 268,
        "startChar": 0,
        "endLine": 270,
        "endChar": 48
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7d3beac9_bdf711d2",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 280,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "Should this be some kind of smart pointer?\nHow is the lifetime of testResults managed?",
      "range": {
        "startLine": 280,
        "startChar": 22,
        "endLine": 280,
        "endChar": 46
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1b4fe8bf_a2d8d78f",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 280,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-11-29T15:23:12Z",
      "side": 1,
      "message": "The testResults lasts for the lifetime of TestSuite. That\u0027s basically the lifetime of the process. I don\u0027t think a smart pointer is needed. Added a comment.",
      "parentUuid": "7d3beac9_bdf711d2",
      "range": {
        "startLine": 280,
        "startChar": 22,
        "endLine": 280,
        "endChar": 46
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "991b50ce_95024e49",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 280,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-12-02T16:23:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1b4fe8bf_a2d8d78f",
      "range": {
        "startLine": 280,
        "startChar": 22,
        "endLine": 280,
        "endChar": 46
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a4ca8c9f_45f73e43",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 326,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "Why is this different from GetTestIdentifier?\nCan testCase-\u003ename() be different from testInfo-\u003etest_case_name()?",
      "range": {
        "startLine": 324,
        "startChar": 0,
        "endLine": 326,
        "endChar": 53
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9184a9b8_4d9ef1fc",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 326,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-11-29T15:23:12Z",
      "side": 1,
      "message": "Probably just an oversight on my part. Fixed.",
      "parentUuid": "a4ca8c9f_45f73e43",
      "range": {
        "startLine": 324,
        "startChar": 0,
        "endLine": 326,
        "endChar": 53
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0403259d_b3895fbd",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 326,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-12-02T16:23:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9184a9b8_4d9ef1fc",
      "range": {
        "startLine": 324,
        "startChar": 0,
        "endLine": 326,
        "endChar": 53
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3e7eb2f6_3251d98c",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 351,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "This looks very similar to GetCompiledInTests. Maybe these can be unified into one? Maybe with a lambda parameter for the filter.",
      "range": {
        "startLine": 351,
        "startChar": 28,
        "endLine": 351,
        "endChar": 44
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f5071f36_e6eb24e5",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 351,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-11-29T15:23:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3e7eb2f6_3251d98c",
      "range": {
        "startLine": 351,
        "startChar": 28,
        "endLine": 351,
        "endChar": 44
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aae3abab_88a89baa",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 357,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T18:35:16Z",
      "side": 1,
      "message": "I think you missed this when merging the two functions.",
      "range": {
        "startLine": 353,
        "startChar": 0,
        "endLine": 357,
        "endChar": 0
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1f9b08e6_938845a6",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 357,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-12-02T16:23:14Z",
      "side": 1,
      "message": "I had changed the way the filtering works. GetFilteredTests calls FilterMatchesTest instead of relying on testInfo.should_run().",
      "parentUuid": "aae3abab_88a89baa",
      "range": {
        "startLine": 353,
        "startChar": 0,
        "endLine": 357,
        "endChar": 0
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3975d13c_4de45c25",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 399,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "filterStream \u003c\u003c tests[testIndex];",
      "range": {
        "startLine": 397,
        "startChar": 0,
        "endLine": 399,
        "endChar": 50
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "477dadb6_140c415b",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 399,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-11-29T15:23:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3975d13c_4de45c25",
      "range": {
        "startLine": 397,
        "startChar": 0,
        "endLine": 399,
        "endChar": 50
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c97668df_3a098335",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 427,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "I\u0027m not very familiar with C++11. Is this the\n\"template \u003cclass InputIterator\u003e string(InputIterator first, InputIterator last)\"\nconstructor?\nLooks weird. Is this equivalent to \"strlen(baseNameStart) - suffixLen\"?",
      "range": {
        "startLine": 427,
        "startChar": 42,
        "endLine": 427,
        "endChar": 56
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a7cb70aa_001f1f06",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 427,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-11-29T15:23:12Z",
      "side": 1,
      "message": "That is the constructor yes. It allows making a string without needing a null delimiter. I think it should be equivalent to the other you mention.",
      "parentUuid": "c97668df_3a098335",
      "range": {
        "startLine": 427,
        "startChar": 42,
        "endLine": 427,
        "endChar": 56
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1273a44e_705edeb0",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 427,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-12-02T16:23:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a7cb70aa_001f1f06",
      "range": {
        "startLine": 427,
        "startChar": 42,
        "endLine": 427,
        "endChar": 56
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a3cc1c4f_4c463817",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 431,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "I find it hard from the \"if\" condition to understand what\u0027s the expected contents here.\nRandom junk in case we weren\u0027t able to parse the string properly?\nMaybe replacing \"if\" with \"assert\" is better?",
      "range": {
        "startLine": 431,
        "startChar": 15,
        "endLine": 431,
        "endChar": 28
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "82066024_461fd131",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 431,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-11-29T15:23:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a3cc1c4f_4c463817",
      "range": {
        "startLine": 431,
        "startChar": 15,
        "endLine": 431,
        "endChar": 28
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c47ef5e6_a125d644",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 474,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "Makes sense to make a factory function from this.",
      "range": {
        "startLine": 465,
        "startChar": 0,
        "endLine": 474,
        "endChar": 92
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2f684a88_9375be51",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 474,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-11-29T15:23:12Z",
      "side": 1,
      "message": "Sorry, not sure what you mean. Factory how?",
      "parentUuid": "c47ef5e6_a125d644",
      "range": {
        "startLine": 465,
        "startChar": 0,
        "endLine": 474,
        "endChar": 92
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d01dfb4d_30fbbba1",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 474,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T18:35:16Z",
      "side": 1,
      "message": "Well, you could have TestIdentifier constructor from a single string, but it wouldn\u0027t be obvious what it does.\nSo, I was thinking about \"static TestIdentifier TestIdentifier::parse(string)\".",
      "parentUuid": "2f684a88_9375be51",
      "range": {
        "startLine": 465,
        "startChar": 0,
        "endLine": 474,
        "endChar": 92
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0758cae4_e118190f",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 474,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-12-02T16:23:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d01dfb4d_30fbbba1",
      "range": {
        "startLine": 465,
        "startChar": 0,
        "endLine": 474,
        "endChar": 92
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0c5e1187_7db68910",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 543,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "Should we have a constructor for TestResult that ensures the default type is not Skip?",
      "range": {
        "startLine": 543,
        "startChar": 0,
        "endLine": 543,
        "endChar": 60
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3366ab8a_ebed84ef",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 543,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-11-29T15:23:12Z",
      "side": 1,
      "message": "Not sure. What\u0027s the concern?",
      "parentUuid": "0c5e1187_7db68910",
      "range": {
        "startLine": 543,
        "startChar": 0,
        "endLine": 543,
        "endChar": 60
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e149d274_a2c6887e",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 543,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T18:35:16Z",
      "side": 1,
      "message": "That output-\u003eresults[id] can construct a new TestResult, and you have outputResult.type !\u003d TestResultType::Skip below. Incidentally, 0 \u003d\u003d Crash, so the check below works well. But I\u0027d prefer it to be explicit.",
      "parentUuid": "3366ab8a_ebed84ef",
      "range": {
        "startLine": 543,
        "startChar": 0,
        "endLine": 543,
        "endChar": 60
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1b8b6b53_14ba8fda",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 543,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-12-02T16:23:14Z",
      "side": 1,
      "message": "I don\u0027t follow the concern still. What specifically are you worried about?",
      "parentUuid": "e149d274_a2c6887e",
      "range": {
        "startLine": 543,
        "startChar": 0,
        "endLine": 543,
        "endChar": 60
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d28747d5_ac46d24f",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 543,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-12-02T18:44:42Z",
      "side": 1,
      "message": "Below you check \"outputResult.type !\u003d TestResultType::Skip\".\nIf outputResult didn\u0027t exist in \"output\" map, it would be constructed in\n\"TestResult \u0026outputResult \u003d output-\u003eresults[id]\".\nThe value of outputResult.type would be 0 or \"Crash\" in the old patchset or \"Skip\" with the new constructor you\u0027ve added in later patchset.\nI don\u0027t think that\u0027s what you want to check in \"outputResult.type !\u003d TestResultType::Skip\".\nThus, I think we should have something like outputResult.type \u003d TestResultType::Uninitialized in TestResult constructor.\nOr maybe use output-\u003eresults.at(id) instead of operator[], though it will fix only the usage here but constructor would solve all future usages.",
      "parentUuid": "1b8b6b53_14ba8fda",
      "range": {
        "startLine": 543,
        "startChar": 0,
        "endLine": 543,
        "endChar": 60
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7e423285_17ee3d87",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 543,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-12-02T20:51:19Z",
      "side": 1,
      "message": "Ah. I do want Skip \u003d\u003d \"not run\" by default. And sorry, I forget exactly my reasoning on why I used operator[]. From what I can see this code can create the expectation if it is not present. Skip should be the correct default. Thanks for pointing out the incorrect initialization in a prior patch set.",
      "parentUuid": "d28747d5_ac46d24f",
      "range": {
        "startLine": 543,
        "startChar": 0,
        "endLine": 543,
        "endChar": 60
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "43991ae7_b73b8608",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 543,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-12-02T21:57:37Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "7e423285_17ee3d87",
      "range": {
        "startLine": 543,
        "startChar": 0,
        "endLine": 543,
        "endChar": 60
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "86461be3_27a165c2",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 567,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "Better to use TestIdentifier.operator\u003c\u003c here as well.",
      "range": {
        "startLine": 567,
        "startChar": 27,
        "endLine": 567,
        "endChar": 62
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "829876d3_28f3f6a8",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 567,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-11-29T15:23:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "86461be3_27a165c2",
      "range": {
        "startLine": 567,
        "startChar": 27,
        "endLine": 567,
        "endChar": 62
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d34aca77_c61884c0",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 587,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "I\u0027d rather have this in \"else\" to avoid extra copy.\nOverall, would be better to return iterators than to copy the substring.",
      "range": {
        "startLine": 587,
        "startChar": 24,
        "endLine": 587,
        "endChar": 49
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "74888cee_61a016a7",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 587,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-11-29T15:23:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d34aca77_c61884c0",
      "range": {
        "startLine": 587,
        "startChar": 24,
        "endLine": 587,
        "endChar": 49
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5082879a_022bf0d6",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 695,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "That\u0027s unfortunate.\nRunning only SwiftShader end2end tests is a potential usage.",
      "range": {
        "startLine": 695,
        "startChar": 20,
        "endLine": 695,
        "endChar": 82
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a50f409b_b82e654d",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 695,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-11-29T15:23:12Z",
      "side": 1,
      "message": "Can probably lift this limitation in the future. Will defer that for a follow-up CL.",
      "parentUuid": "5082879a_022bf0d6",
      "range": {
        "startLine": 695,
        "startChar": 20,
        "endLine": 695,
        "endChar": 82
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b4f89d90_fd15e4fe",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 695,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-12-02T16:23:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a50f409b_b82e654d",
      "range": {
        "startLine": 695,
        "startChar": 20,
        "endLine": 695,
        "endChar": 82
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8acad39c_f0d37b34",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 712,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "maybe check that the file starts with \"--gtest_filter\u003d\"?",
      "range": {
        "startLine": 712,
        "startChar": 8,
        "endLine": 712,
        "endChar": 50
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9ea4fadf_f9afaebc",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 712,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-11-29T15:23:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8acad39c_f0d37b34",
      "range": {
        "startLine": 712,
        "startChar": 8,
        "endLine": 712,
        "endChar": 50
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4a009c2d_4b6aea63",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 728,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "same comment as for filter file, actually maybe more applicable here.",
      "range": {
        "startLine": 728,
        "startChar": 20,
        "endLine": 728,
        "endChar": 83
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1da3e1d2_d3d423f0",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 728,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-11-29T15:23:12Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "4a009c2d_4b6aea63",
      "range": {
        "startLine": 728,
        "startChar": 20,
        "endLine": 728,
        "endChar": 83
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "245c160d_ddc33f94",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 755,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "looks like results dir argument overrides results file with a default filename",
      "range": {
        "startLine": 749,
        "startChar": 0,
        "endLine": 755,
        "endChar": 0
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e6837740_48090120",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 755,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-11-29T15:23:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "245c160d_ddc33f94",
      "range": {
        "startLine": 749,
        "startChar": 0,
        "endLine": 755,
        "endChar": 0
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e06e3595_03f48065",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 759,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "Would this be relative to exe location? This assumes it is writable. I think it is on our bots, but it may break in the future.",
      "range": {
        "startLine": 759,
        "startChar": 24,
        "endLine": 759,
        "endChar": 35
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "31ee0bdd_e6b19fda",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 759,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-11-29T15:23:12Z",
      "side": 1,
      "message": "It\u0027s probably relative to CWD. Not sure about exe location.",
      "parentUuid": "e06e3595_03f48065",
      "range": {
        "startLine": 759,
        "startChar": 24,
        "endLine": 759,
        "endChar": 35
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f5049994_734df890",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 759,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-12-02T16:23:14Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "31ee0bdd_e6b19fda",
      "range": {
        "startLine": 759,
        "startChar": 24,
        "endLine": 759,
        "endChar": 35
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e36cc185_7a472b25",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 772,
      "author": {
        "id": 1326275
      },
      "writtenOn": "2019-11-28T17:06:46Z",
      "side": 1,
      "message": "Is this for initialization? It\u0027s missing elapsedTimeSeconds\nCould you do it in the TestResult constructor?",
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "55f959c5_e1346ab7",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 772,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-11-29T15:23:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e36cc185_7a472b25",
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "11d39324_49b42bda",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 794,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "missing in doc",
      "range": {
        "startLine": 794,
        "startChar": 28,
        "endLine": 794,
        "endChar": 48
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0fcc5899_b907ef67",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 794,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-11-29T15:23:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "11d39324_49b42bda",
      "range": {
        "startLine": 794,
        "startChar": 28,
        "endLine": 794,
        "endChar": 48
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d64bda4a_aea8444c",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 804,
      "author": {
        "id": 1326275
      },
      "writtenOn": "2019-11-28T17:06:46Z",
      "side": 1,
      "message": "Could forward to GetCurrentTestResult to update the elapsed time too",
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5272a2e4_d8d16224",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 804,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-11-29T15:23:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d64bda4a_aea8444c",
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4ad9321b_cae35198",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 886,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "maybe construct this from \"args\", since you also add mArgv there?",
      "range": {
        "startLine": 886,
        "startChar": 22,
        "endLine": 886,
        "endChar": 89
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "94c5f975_9f2cb2d3",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 886,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-11-29T15:23:12Z",
      "side": 1,
      "message": "Don\u0027t quite follow this suggestion.",
      "parentUuid": "4ad9321b_cae35198",
      "range": {
        "startLine": 886,
        "startChar": 22,
        "endLine": 886,
        "endChar": 89
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1b699700_83d5cce4",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 886,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T18:35:16Z",
      "side": 1,
      "message": "The actual command line might have more arguments than you print here.\n\"args\" has them all.",
      "parentUuid": "94c5f975_9f2cb2d3",
      "range": {
        "startLine": 886,
        "startChar": 22,
        "endLine": 886,
        "endChar": 89
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d6ef716c_84c394f6",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 886,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-12-02T16:23:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1b699700_83d5cce4",
      "range": {
        "startLine": 886,
        "startChar": 22,
        "endLine": 886,
        "endChar": 89
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf082536_14b4d82d",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 919,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "Does \"Skip\" mean unexpected process exit?\nI think we need a different enum, so it is not confused with \"Skip\" expectation.\nAlso, maybe it\u0027s possible to break instead of continue?\nIf the tests in batch are executed in map order.",
      "range": {
        "startLine": 916,
        "startChar": 0,
        "endLine": 919,
        "endChar": 9
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "78c26373_9b1d1d30",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 919,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-11-29T15:23:12Z",
      "side": 1,
      "message": "Again, sorry, I\u0027m having trouble understanding the concern.\n\nThe Skip results aren\u0027t processed since they\u0027re added back to the queue to be run again. Added a comment.",
      "parentUuid": "bf082536_14b4d82d",
      "range": {
        "startLine": 916,
        "startChar": 0,
        "endLine": 919,
        "endChar": 9
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f5595c4_bc6b33e7",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 919,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T18:35:16Z",
      "side": 1,
      "message": "My concern it that I don\u0027t understand what \"Skip\" result means.\nReading the code, looks like if some test crashes, subsequent rests would have \"Skip\" result.\nThis was not obvious to me from the name, my interpretation was that tests that have \"Skip\" expectation would have this result.\nThus, I wanted to separate \"Skip\" and \"Did not run\" concepts.",
      "parentUuid": "78c26373_9b1d1d30",
      "range": {
        "startLine": 916,
        "startChar": 0,
        "endLine": 919,
        "endChar": 9
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "18b4e104_07f85dfe",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 919,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-12-02T16:23:14Z",
      "side": 1,
      "message": "https://chromium.googlesource.com/chromium/src/+/master/docs/testing/json_test_results_format.md#test-result-types\n\n\u003e SKIP\tThe test was not run.",
      "parentUuid": "7f5595c4_bc6b33e7",
      "range": {
        "startLine": 916,
        "startChar": 0,
        "endLine": 919,
        "endChar": 9
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "03d03f76_75cde67a",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 919,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-12-02T20:51:19Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "18b4e104_07f85dfe",
      "range": {
        "startLine": 916,
        "startChar": 0,
        "endLine": 919,
        "endChar": 9
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "09505af2_d9516f85",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 934,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "Going to be terribly slow to read from the start for each failure.\nMaybe we can advance batchStdout to be after the end of the current failure?",
      "range": {
        "startLine": 934,
        "startChar": 45,
        "endLine": 934,
        "endChar": 90
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef529cb3_8d7e0ec5",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 934,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-11-29T15:23:12Z",
      "side": 1,
      "message": "Failures are rare. Pretty sure this is what the Chromium test harness does. We don\u0027t need to worry about optimizing the error case.",
      "parentUuid": "09505af2_d9516f85",
      "range": {
        "startLine": 934,
        "startChar": 45,
        "endLine": 934,
        "endChar": 90
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fe0a9c01_b3109c3a",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 934,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T18:35:16Z",
      "side": 1,
      "message": "Yes, Chromium harness is bad.\nI don\u0027t see why we can\u0027t do better.\nI think failed CQ runs are much more common than successful.\nLike, all first patchsets of a CL will have failures, until all these are fixed.\nSo, successful runs to failed runs ratio is something like 1 : \"average number of patchsets for a CL\". (I know this is not accurate, since most of the test suites will pass with maybe one failing, but still, the proportion of failures is significant).",
      "parentUuid": "ef529cb3_8d7e0ec5",
      "range": {
        "startLine": 934,
        "startChar": 45,
        "endLine": 934,
        "endChar": 90
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d21f8d8e_e2792f36",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 934,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-12-02T16:23:14Z",
      "side": 1,
      "message": "I see your thinking. We\u0027re totally fine saving developer time by not optimizing this edge case. If you even think about the napkin math on how much developer and bot costs would be saved by optimizing this error case I think it would be tiny. i.e. this slowdown is likely in the order of a few milliseconds. So you\u0027d need to add a lot of milliseconds of bot time together to make this optimization worthwhile.\n\nSorry for the long-winded explanation.",
      "parentUuid": "fe0a9c01_b3109c3a",
      "range": {
        "startLine": 934,
        "startChar": 45,
        "endLine": 934,
        "endChar": 90
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0e408e07_8613b0e2",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 934,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-12-02T18:44:42Z",
      "side": 1,
      "message": "Note that our output is huge sometimes. Actually, here is an 18MB example\nhttps://chromium-swarm.appspot.com/task?id\u003d488f87129bed1710\nMaybe it\u0027s a few milliseconds, but I still feel bad about it.\n\nI thought originally that we could simply advance a pointer in batchStdout in GetTestOutputSnippet(), but this won\u0027t work since we can\u0027t guarantee gtest executes tests in the same order they appear in batchResults.results. Maybe we can process batchStdout once and build a map from test name to output snippet. Still would take some time to look for the snippet in the map, so I don\u0027t mind to leave this as is.",
      "parentUuid": "d21f8d8e_e2792f36",
      "range": {
        "startLine": 934,
        "startChar": 45,
        "endLine": 934,
        "endChar": 90
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4812b3e5_35e0fc86",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 934,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-12-02T20:51:19Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "0e408e07_8613b0e2",
      "range": {
        "startLine": 934,
        "startChar": 45,
        "endLine": 934,
        "endChar": 90
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "82db5a55_5e1fc7b7",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 942,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "If you break like I\u0027ve suggested above, can just start from the place previous \"for\" stopped.\nAnd not check result.type, since everything would be \"Skip\" from this point on.",
      "range": {
        "startLine": 942,
        "startChar": 13,
        "endLine": 942,
        "endChar": 58
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7cd1dd22_eaaa4744",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 942,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-11-29T15:23:12Z",
      "side": 1,
      "message": "Oh I see. No, skips are not guaranteed to be in order.",
      "parentUuid": "82db5a55_5e1fc7b7",
      "range": {
        "startLine": 942,
        "startChar": 13,
        "endLine": 942,
        "endChar": 58
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "87a40c25_27629a3d",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 942,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-12-02T16:23:14Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "7cd1dd22_eaaa4744",
      "range": {
        "startLine": 942,
        "startChar": 13,
        "endLine": 942,
        "endChar": 58
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b53a32bd_97acaeaf",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 957,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "What if we crash and don\u0027t reach here or user Ctrl+C?\nI think there is an \"autodelete\" flag when you create a file.",
      "range": {
        "startLine": 957,
        "startChar": 20,
        "endLine": 957,
        "endChar": 30
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "616fe262_d792ff8f",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 957,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-11-29T15:23:12Z",
      "side": 1,
      "message": "Can you find a link to that? I don\u0027t know of such a feature.",
      "parentUuid": "b53a32bd_97acaeaf",
      "range": {
        "startLine": 957,
        "startChar": 20,
        "endLine": 957,
        "endChar": 30
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "50ae8704_801b47ff",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 957,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T18:35:16Z",
      "side": 1,
      "message": "Windows has FILE_FLAG_DELETE_ON_CLOSE in CreateFile.\nLinux has O_TMPFILE in open().",
      "parentUuid": "616fe262_d792ff8f",
      "range": {
        "startLine": 957,
        "startChar": 20,
        "endLine": 957,
        "endChar": 30
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "127add43_7e52b3c1",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 957,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-12-02T16:23:14Z",
      "side": 1,
      "message": "I\u0027m a bit hesitant for this one because the Chromium harness doesn\u0027t do it and because I like to have the files available if my test suite I\u0027m debugging crashes. The master process itself shouldn\u0027t crash very often so it\u0027s unlikely to cause a real mess on the bots.\n\nWould be happy to defer action on this one.",
      "parentUuid": "50ae8704_801b47ff",
      "range": {
        "startLine": 957,
        "startChar": 20,
        "endLine": 957,
        "endChar": 30
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b2de6c3c_5e558108",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 957,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-12-02T18:44:42Z",
      "side": 1,
      "message": "Sure. Here is another thought - you could delete these in signal handler, but not delete if you pass a debugging flag to keep them for crash debugging.",
      "parentUuid": "127add43_7e52b3c1",
      "range": {
        "startLine": 957,
        "startChar": 20,
        "endLine": 957,
        "endChar": 30
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f0b59299_8d72fd04",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 957,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-12-02T20:51:19Z",
      "side": 1,
      "message": "The master process doesn\u0027t currently do a cleanup when the harness itself crashes. It does do cleanup when there are crashes and timeouts in the children. I\u0027m a bit hesitant here because it\u0027s hard to test this behaviour and it\u0027s not clear if it really affects behaviour on the bots.\n\nHow about we revisit this if we can prove it leads to bad behaviour on the bots? I left a note.",
      "parentUuid": "b2de6c3c_5e558108",
      "range": {
        "startLine": 957,
        "startChar": 20,
        "endLine": 957,
        "endChar": 30
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0ea093b3_67df3b7e",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 957,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-12-02T21:51:53Z",
      "side": 1,
      "message": "sg. I think swarming sets CWD to out/Release, which is deleted in the end of swarmed task, so this shouldn\u0027t affect bots.",
      "parentUuid": "f0b59299_8d72fd04",
      "range": {
        "startLine": 957,
        "startChar": 20,
        "endLine": 957,
        "endChar": 30
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b5387bbf_49f61d1b",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 957,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-12-02T21:53:29Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "0ea093b3_67df3b7e",
      "range": {
        "startLine": 957,
        "startChar": 20,
        "endLine": 957,
        "endChar": 30
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7c14d9fc_a4a6c3fe",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 1024,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "Where are these returned to mTestQueue?\nDo you need to call finishProcess here?",
      "range": {
        "startLine": 1024,
        "startChar": 72,
        "endLine": 1024,
        "endChar": 84
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1aad50ec_541632d0",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 1024,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-11-29T15:23:12Z",
      "side": 1,
      "message": "They are not returned to mTestQueue. If a test or bartch times out we don\u0027t want to re-run it. Could be something bad happening.",
      "parentUuid": "7c14d9fc_a4a6c3fe",
      "range": {
        "startLine": 1024,
        "startChar": 72,
        "endLine": 1024,
        "endChar": 84
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8ecb52b6_411b80c7",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 1024,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T18:35:16Z",
      "side": 1,
      "message": "Ah, yes, you did comment that we can\u0027t determine which sub-test caused a timeout.\nI think Chromium harness starts running tests one-by-one in this case.\nMaybe we can do something smarter, like binary search, i.e. dividing a timing out batch into two.",
      "parentUuid": "1aad50ec_541632d0",
      "range": {
        "startLine": 1024,
        "startChar": 72,
        "endLine": 1024,
        "endChar": 84
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "80c5543e_7bdf67f7",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 1024,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-12-02T16:23:14Z",
      "side": 1,
      "message": "Because the child process itself has a watchdog this \"whole shard timeout\" shouldn\u0027t happen very often. It\u0027s mainly for safety. The unit test actually verifies that when one test in the shard times out, it gets marked as a timeout and the rest of the tests get their proper result.",
      "parentUuid": "8ecb52b6_411b80c7",
      "range": {
        "startLine": 1024,
        "startChar": 72,
        "endLine": 1024,
        "endChar": 84
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7c9cc866_bd15352b",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 1024,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-12-02T21:57:37Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "80c5543e_7bdf67f7",
      "range": {
        "startLine": 1024,
        "startChar": 72,
        "endLine": 1024,
        "endChar": 84
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0f0d7c7_7352f85a",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 1026,
      "author": {
        "id": 1326275
      },
      "writtenOn": "2019-11-28T17:06:46Z",
      "side": 1,
      "message": "could forward to GetCurrentTestResult",
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "46966831_10a297a8",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 1026,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-11-29T15:23:12Z",
      "side": 1,
      "message": "We don\u0027t know in this case how long each individual test took. Only that the whole batch failed. Added a comment.",
      "parentUuid": "d0f0d7c7_7352f85a",
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c02a59d_d92eea85",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 1026,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-12-02T16:23:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "46966831_10a297a8",
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "599e5dcf_a019cacd",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 1054,
      "author": {
        "id": 1326275
      },
      "writtenOn": "2019-11-28T17:06:46Z",
      "side": 1,
      "message": "Why is this necessary? Just double checking because (for example) on Android this adds 60 seconds to the total end2end test suite. (and much worse if this ends up being used for dEQP)",
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "73af902f_dd14c8d8",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 1054,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-11-29T15:23:12Z",
      "side": 1,
      "message": "How does this add 60 seconds? It should only sleep for 10ms per loop iteration. I was just trying to save CPU cycles while the master process waits for children.",
      "parentUuid": "599e5dcf_a019cacd",
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "07055c75_6159439b",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 1054,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-12-02T21:57:37Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "73af902f_dd14c8d8",
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b863d210_3fb562a7",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 1063,
      "author": {
        "id": 1326275
      },
      "writtenOn": "2019-11-28T17:06:46Z",
      "side": 1,
      "message": "From my understanding, this doesn\u0027t yet parse any expectations, right? Would be more clear with the name printFailuresAndReturnCount()\n\nOr if expectations are parsed, it seems to be missing a comparison result.type !\u003d expectation.type below",
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0374cbec_2f3a75f3",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 1063,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-11-29T15:23:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b863d210_3fb562a7",
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "38c54a89_86d3b047",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 1074,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "Why not just keep these as part of TestIdentifier (possibly empty when you don\u0027t need them)?",
      "range": {
        "startLine": 1074,
        "startChar": 39,
        "endLine": 1074,
        "endChar": 62
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fbbdb39f_75edf926",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 1074,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-11-29T15:23:12Z",
      "side": 1,
      "message": "Seems awkward to keep them as keys in the map.",
      "parentUuid": "38c54a89_86d3b047",
      "range": {
        "startLine": 1074,
        "startChar": 39,
        "endLine": 1074,
        "endChar": 62
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a3d39cf0_52a46111",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 1074,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-12-02T21:57:37Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "fbbdb39f_75edf926",
      "range": {
        "startLine": 1074,
        "startChar": 39,
        "endLine": 1074,
        "endChar": 62
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "86c672e2_f5499700",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 1077,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "id",
      "range": {
        "startLine": 1077,
        "startChar": 30,
        "endLine": 1077,
        "endChar": 67
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "af9c5555_3feb19d5",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 1077,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-11-29T15:23:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "86c672e2_f5499700",
      "range": {
        "startLine": 1077,
        "startChar": 30,
        "endLine": 1077,
        "endChar": 67
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "162cc894_be33ae1b",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 1097,
      "author": {
        "id": 1326275
      },
      "writtenOn": "2019-11-28T17:06:46Z",
      "side": 1,
      "message": "nit: Is this meant to be commented or removed?",
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9bd028cd_03984dd4",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 1097,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-11-29T15:23:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "162cc894_be33ae1b",
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a4b3b930_0fe90cc6",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 1145,
      "author": {
        "id": 1326275
      },
      "writtenOn": "2019-11-28T17:06:46Z",
      "side": 1,
      "message": "nit: unnecessary",
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c46d8145_e82258a0",
        "filename": "src/tests/test_utils/runner/TestSuite.cpp",
        "patchSetId": 51
      },
      "lineNbr": 1145,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-11-29T15:23:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a4b3b930_0fe90cc6",
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8a50a25f_ee2a7fa7",
        "filename": "src/tests/test_utils/runner/TestSuite.h",
        "patchSetId": 51
      },
      "lineNbr": 125,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "xec",
      "range": {
        "startLine": 125,
        "startChar": 22,
        "endLine": 125,
        "endChar": 24
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "57e00143_2abdc226",
        "filename": "src/tests/test_utils/runner/TestSuite.h",
        "patchSetId": 51
      },
      "lineNbr": 125,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-11-29T15:23:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8a50a25f_ee2a7fa7",
      "range": {
        "startLine": 125,
        "startChar": 22,
        "endLine": 125,
        "endChar": 24
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dd2799fa_ce6f7a42",
        "filename": "src/tests/test_utils/runner/TestSuite.h",
        "patchSetId": 51
      },
      "lineNbr": 143,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "Could you give it a more meaningful name, like mPassthroughArgs?",
      "range": {
        "startLine": 143,
        "startChar": 29,
        "endLine": 143,
        "endChar": 34
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b0252600_2dd571ab",
        "filename": "src/tests/test_utils/runner/TestSuite.h",
        "patchSetId": 51
      },
      "lineNbr": 143,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-11-29T15:23:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dd2799fa_ce6f7a42",
      "range": {
        "startLine": 143,
        "startChar": 29,
        "endLine": 143,
        "endChar": 34
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b5e3f4d0_e909e79b",
        "filename": "src/tests/test_utils/runner/TestSuite_unittest.cpp",
        "patchSetId": 51
      },
      "lineNbr": 41,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-11-29T04:07:46Z",
      "side": 1,
      "message": "Runs",
      "range": {
        "startLine": 41,
        "startChar": 47,
        "endLine": 41,
        "endChar": 53
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e48e031f_8bf372e8",
        "filename": "src/tests/test_utils/runner/TestSuite_unittest.cpp",
        "patchSetId": 51
      },
      "lineNbr": 41,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-12-02T21:57:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b5e3f4d0_e909e79b",
      "range": {
        "startLine": 41,
        "startChar": 47,
        "endLine": 41,
        "endChar": 53
      },
      "revId": "3c972a39b567b105433b0feb857c91b29ae2ea3f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}