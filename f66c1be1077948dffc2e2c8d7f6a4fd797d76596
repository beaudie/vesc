{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "91e3754b_29f19d34",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2023-11-14T19:09:00Z",
      "side": 1,
      "message": "PTAL - trivial change",
      "revId": "f66c1be1077948dffc2e2c8d7f6a4fd797d76596",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6b6781bd_d337dce6",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 862,
      "author": {
        "id": 1300106
      },
      "writtenOn": "2023-11-14T19:27:51Z",
      "side": 1,
      "message": "Needs to be more than this! For example, what if the types match, but the format itself doesn\u0027t match (like GL_RG vs GL_RGBA)?\n\nThe way you can make sure this is bullet proof is to get a `vk::Format` out of `formatInfo` (which, already includes `type` I think?), then inside `isFastUnpackPossible` check that `vkFormat.getActualImageFormatID()` is the same as `bufferFormat.getIntendedFormatID()`.",
      "range": {
        "startLine": 862,
        "startChar": 56,
        "endLine": 862,
        "endChar": 60
      },
      "revId": "f66c1be1077948dffc2e2c8d7f6a4fd797d76596",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f95ae00c_d22bb89e",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 862,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2023-11-14T22:34:30Z",
      "side": 1,
      "message": "\u003e but the format itself doesn\u0027t match\n\nif the formats are not compatible then validation layer would have caught it already, i think",
      "parentUuid": "6b6781bd_d337dce6",
      "range": {
        "startLine": 862,
        "startChar": 56,
        "endLine": 862,
        "endChar": 60
      },
      "revId": "f66c1be1077948dffc2e2c8d7f6a4fd797d76596",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "205dc4cb_99fedeff",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 862,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2023-11-15T16:27:57Z",
      "side": 1,
      "message": "@syoussefi@chromium.org take a look at `ValidES3FormatCombination` that performs the validation check i mentioned earlier",
      "parentUuid": "f95ae00c_d22bb89e",
      "range": {
        "startLine": 862,
        "startChar": 56,
        "endLine": 862,
        "endChar": 60
      },
      "revId": "f66c1be1077948dffc2e2c8d7f6a4fd797d76596",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "70f64f31_c2452737",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 862,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-11-15T16:28:22Z",
      "side": 1,
      "message": "Assuming there are tests. When in doubt, add one ðŸ˜Š\n\nThat said, getting the `vk::Format` and checking the id is still the preferred way.",
      "parentUuid": "f95ae00c_d22bb89e",
      "range": {
        "startLine": 862,
        "startChar": 56,
        "endLine": 862,
        "endChar": 60
      },
      "revId": "f66c1be1077948dffc2e2c8d7f6a4fd797d76596",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9964abf4_86da4424",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 862,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2023-11-15T16:33:36Z",
      "side": 1,
      "message": "\u003e getting the vk::Format and checking the id is still the preferred way\n\nare you suggesting that we dont fast unpack unless format and type are equal?\n\nIt will be more narrow than current requirement but should be functionally correct either way",
      "parentUuid": "70f64f31_c2452737",
      "range": {
        "startLine": 862,
        "startChar": 56,
        "endLine": 862,
        "endChar": 60
      },
      "revId": "f66c1be1077948dffc2e2c8d7f6a4fd797d76596",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "27b181ea_14426778",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 862,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-11-15T16:35:10Z",
      "side": 1,
      "message": "Based on the GL validation you posted, that would be the same, wouldn\u0027t it?\n\nRegardless, we can\u0027t use `vkCmdCopyBufferToImage` if the formats don\u0027t perfectly match, whether GL allows it or not.",
      "parentUuid": "9964abf4_86da4424",
      "range": {
        "startLine": 862,
        "startChar": 56,
        "endLine": 862,
        "endChar": 60
      },
      "revId": "f66c1be1077948dffc2e2c8d7f6a4fd797d76596",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5a5ff147_b21fe44e",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 862,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2023-11-15T18:55:49Z",
      "side": 1,
      "message": "\u003e When in doubt, add one\n\ndone\n\n\u003e That said, getting the vk::Format and checking the id is still the preferred way.\n\ndone\n\n\u003e check that vkFormat.getActualImageFormatID() is the same as bufferFormat.getIntendedFormatID()\n\nis there a reason we check for intended format (instead of actual format) of the buffer?\n\n\u003e we can\u0027t use vkCmdCopyBufferToImage if the formats don\u0027t perfectly match\n\nis there a VU for this?",
      "parentUuid": "27b181ea_14426778",
      "range": {
        "startLine": 862,
        "startChar": 56,
        "endLine": 862,
        "endChar": 60
      },
      "revId": "f66c1be1077948dffc2e2c8d7f6a4fd797d76596",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "60b5ebb3_5a1febce",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 862,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-11-16T18:40:46Z",
      "side": 1,
      "message": "\u003e is there a reason we check for intended format (instead of actual format) of the buffer?\n\nThe format/type that ends up in the buffer should be exactly what the app asked for. So for example if app asks for RGB8 and we normally emulate that with RGBA8, we can\u0027t just write RGBA8 to the buffer. So we check the intended format because that\u0027s how we can be sure the buffer gets exactly what the app asked for.\n\n---\n\nThere\u0027s no VU because there\u0027s no buffer format in `vkCmdCopyBufferToImage`. The reason I said we can\u0027t do the copy that way is because `vkCmdCopyBufferToImage` is a \"raw\" copy, so if the format of the image doesn\u0027t match what the _GL_ app asked for in the buffer, doing `vkCmdCopyBufferToImage` would result in something that\u0027s not what the GL app asked for.",
      "parentUuid": "5a5ff147_b21fe44e",
      "range": {
        "startLine": 862,
        "startChar": 56,
        "endLine": 862,
        "endChar": 60
      },
      "revId": "f66c1be1077948dffc2e2c8d7f6a4fd797d76596",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c2531cce_3bbf8cca",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 862,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2023-11-16T19:53:51Z",
      "side": 1,
      "message": "\u003e So we check the intended format because that\u0027s how we can be sure the buffer gets exactly what the app asked for\n\nyup, that makes sense\n\n\u003e because vkCmdCopyBufferToImage is a \"raw\" copy\n\nindeed, got it. Thanks for the info",
      "parentUuid": "60b5ebb3_5a1febce",
      "range": {
        "startLine": 862,
        "startChar": 56,
        "endLine": 862,
        "endChar": 60
      },
      "revId": "f66c1be1077948dffc2e2c8d7f6a4fd797d76596",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}