{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "4a46f40b_2c8534cc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2024-06-13T22:58:05Z",
      "side": 1,
      "message": "Okay, updated to include new CapturedTest output.  Note the comments that show calls we always skip.  I little noisy but... probably valuable.\n\n+Roman for his feedback.",
      "revId": "0867ad274813ed4e6cd592a9ec7102fbed13b89c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc924f88_b9a73eed",
        "filename": "src/libANGLE/capture/FrameCapture.cpp",
        "patchSetId": 5
      },
      "lineNbr": 8355,
      "author": {
        "id": 1531247
      },
      "writtenOn": "2024-06-14T13:14:36Z",
      "side": 1,
      "message": "It looks like there are quite a few cases where this would get hit, including debug messages. Do we want everything listed in SkipCall to be added as comments (might get _really_ noisy?) - or only some specific cases?",
      "range": {
        "startLine": 8355,
        "startChar": 8,
        "endLine": 8355,
        "endChar": 16
      },
      "revId": "0867ad274813ed4e6cd592a9ec7102fbed13b89c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2c6f22d9_d4a69ba5",
        "filename": "src/libANGLE/capture/FrameCapture.cpp",
        "patchSetId": 5
      },
      "lineNbr": 8355,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2024-06-14T14:40:08Z",
      "side": 1,
      "message": "I was hoping to just pick up calls we skipped because they were invalid.  I\u0027ll see if I can tease that out.",
      "parentUuid": "fc924f88_b9a73eed",
      "range": {
        "startLine": 8355,
        "startChar": 8,
        "endLine": 8355,
        "endChar": 16
      },
      "revId": "0867ad274813ed4e6cd592a9ec7102fbed13b89c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5ef20c46_d3b0ebf3",
        "filename": "src/libANGLE/capture/FrameCapture.cpp",
        "patchSetId": 5
      },
      "lineNbr": 8355,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2024-06-17T23:44:21Z",
      "side": 1,
      "message": "Updated to only add a comment for invalid calls.  LMKWYT.\n\nI\u0027m open to dropping that entirely as well, but I\u0027d like to know when we\u0027ve skipped a call.",
      "parentUuid": "2c6f22d9_d4a69ba5",
      "range": {
        "startLine": 8355,
        "startChar": 8,
        "endLine": 8355,
        "endChar": 16
      },
      "revId": "0867ad274813ed4e6cd592a9ec7102fbed13b89c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3cae68a0_7bb4f2ea",
        "filename": "src/libANGLE/capture/FrameCapture.cpp",
        "patchSetId": 5
      },
      "lineNbr": 8355,
      "author": {
        "id": 1531247
      },
      "writtenOn": "2024-06-18T13:09:00Z",
      "side": 1,
      "message": "This makes sense. If not difficult, maybe consider adding the args as well? Then looking at the trace we might be able to tell why it was considered invalid.",
      "parentUuid": "5ef20c46_d3b0ebf3",
      "range": {
        "startLine": 8355,
        "startChar": 8,
        "endLine": 8355,
        "endChar": 16
      },
      "revId": "0867ad274813ed4e6cd592a9ec7102fbed13b89c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2864d060_490d794e",
        "filename": "src/libANGLE/capture/FrameCapture.cpp",
        "patchSetId": 5
      },
      "lineNbr": 8355,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2024-06-18T18:17:02Z",
      "side": 1,
      "message": "I don\u0027t see a clean way to do it.  We can\u0027t really write the call unless we start considering it valid and send it through `WriteCppReplayForCall`, which wants to update the header and resource limits, etc.  We skip the invalid calls because much of the capture code is set up expecting valid calls.  We could write out the error, like this:\n```\n// Skipping invalid call to glBindTexture with error: GL_INVALID_ENUM;\n```\nI mainly wanted something to use the AddComment call, but it is mostly a debug tool.",
      "parentUuid": "3cae68a0_7bb4f2ea",
      "range": {
        "startLine": 8355,
        "startChar": 8,
        "endLine": 8355,
        "endChar": 16
      },
      "revId": "0867ad274813ed4e6cd592a9ec7102fbed13b89c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1537f66f_6ebe7c78",
        "filename": "src/tests/capture_tests/expected/CapturedTest_MultiFrame_ES3_Vulkan_001.cpp",
        "patchSetId": 5
      },
      "lineNbr": 52,
      "author": {
        "id": 1531247
      },
      "writtenOn": "2024-06-14T13:14:36Z",
      "side": 1,
      "message": "I think the wording is a bit confusing.\n\nDoes this mean something along the lines of \"eglSwapBuffers skipped intentionally\"? If so, why eglSwapBuffers was supposed to show up here?",
      "range": {
        "startLine": 52,
        "startChar": 7,
        "endLine": 52,
        "endChar": 38
      },
      "revId": "0867ad274813ed4e6cd592a9ec7102fbed13b89c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e50f8b99_eab38c41",
        "filename": "src/tests/capture_tests/expected/CapturedTest_MultiFrame_ES3_Vulkan_001.cpp",
        "patchSetId": 5
      },
      "lineNbr": 52,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2024-06-14T14:40:08Z",
      "side": 1,
      "message": "Agree, these are confusing.  I\u0027ll back that off.",
      "parentUuid": "1537f66f_6ebe7c78",
      "range": {
        "startLine": 52,
        "startChar": 7,
        "endLine": 52,
        "endChar": 38
      },
      "revId": "0867ad274813ed4e6cd592a9ec7102fbed13b89c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2afd3311_d59a4751",
        "filename": "src/tests/capture_tests/expected/CapturedTest_MultiFrame_ES3_Vulkan_001.cpp",
        "patchSetId": 5
      },
      "lineNbr": 52,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2024-06-17T23:44:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e50f8b99_eab38c41",
      "range": {
        "startLine": 52,
        "startChar": 7,
        "endLine": 52,
        "endChar": 38
      },
      "revId": "0867ad274813ed4e6cd592a9ec7102fbed13b89c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}