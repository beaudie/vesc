{
  "comments": [
    {
      "key": {
        "uuid": "b994dcae_e694283c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-10-18T18:44:30Z",
      "side": 1,
      "message": "can you also add this generator to run_code_generation.py?",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 49
      },
      "revId": "cb2e797fc59d574f5eac7231fea617f38b9edc49",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f885bbae_9db4996b",
        "filename": "src/libANGLE/renderer/d3d/d3d11/Blit11.h",
        "patchSetId": 3
      },
      "lineNbr": 168,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-10-18T18:44:30Z",
      "side": 1,
      "message": "nit: can probably remove the Blit11:: from this and the following.",
      "range": {
        "startLine": 168,
        "startChar": 11,
        "endLine": 168,
        "endChar": 33
      },
      "revId": "cb2e797fc59d574f5eac7231fea617f38b9edc49",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "083f6616_ac4380d4",
        "filename": "src/libANGLE/renderer/d3d/d3d11/gen_blit11helper.py",
        "patchSetId": 3
      },
      "lineNbr": 67,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-10-18T18:44:30Z",
      "side": 1,
      "message": "I\u0027m wondering if we can somehow refactor this to make it part of the non-autogenerated code. It\u0027s basically a template function that is templated on the dimension. It\u0027s a bit of a larger refactor, but one idea is we could make a small enum {2D/3D}. Then the shader type becomes a pair of {Dimension,ShaderType}.\n\nA second option is to have a helper method \"Is3D\" or \"GetBlitShaderTypeDimension\" that is an auto-generated switch and returns 2D/3D/true/false as appropriate. WDYT?\n\nThe goal here would be to keep as much code in the non-autogen cpp file as possible.",
      "range": {
        "startLine": 61,
        "startChar": 33,
        "endLine": 67,
        "endChar": 75
      },
      "revId": "cb2e797fc59d574f5eac7231fea617f38b9edc49",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "00079851_d8f77e18",
        "filename": "src/libANGLE/renderer/d3d/d3d11/shaders/MultiplyAlpha.hlsl",
        "patchSetId": 3
      },
      "lineNbr": 177,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-10-18T18:44:30Z",
      "side": 1,
      "message": "this could also be in a split patch if you want to land it quickly.",
      "range": {
        "startLine": 177,
        "startChar": 6,
        "endLine": 177,
        "endChar": 23
      },
      "revId": "cb2e797fc59d574f5eac7231fea617f38b9edc49",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "da67f2b8_94cc0a98",
        "filename": "src/libANGLE/renderer/d3d/d3d11/shaders/compiled/multiplyalpha_ftof_pm_luma_2d_ps.h",
        "patchSetId": 3
      },
      "lineNbr": 3,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-10-18T18:44:30Z",
      "side": 1,
      "message": "interestingly it seems we are regenerating some of this with a newer compiler. Seems like a good thing. Could be a in a split patch if you want to land it quickly. Since it\u0027s non-controversial.",
      "range": {
        "startLine": 3,
        "startChar": 51,
        "endLine": 3,
        "endChar": 64
      },
      "revId": "cb2e797fc59d574f5eac7231fea617f38b9edc49",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}