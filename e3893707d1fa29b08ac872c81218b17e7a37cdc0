{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f658da42_2cc9027c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-10-18T01:09:03Z",
      "side": 1,
      "message": "PTAL. Need to deal with Chromium build, which I\u0027m pursuing offline",
      "revId": "e3893707d1fa29b08ac872c81218b17e7a37cdc0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f0d85233_c732a689",
        "filename": "src/libANGLE/Display.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2517,
      "author": {
        "id": 1557704
      },
      "writtenOn": "2022-10-18T17:19:05Z",
      "side": 1,
      "message": "probably an unnecessary micro optimization, but since the pools are created only once, would it make sense to create this struct at the same time the pools and keep it around as a class member, and then only return a pointer or reference to it?\n\nI admittedly have no idea how much it costs to make these copies, but I imagine that this code will get called quite a lot, which might make it worthwhile?",
      "revId": "e3893707d1fa29b08ac872c81218b17e7a37cdc0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4991744f_219ded4f",
        "filename": "src/libANGLE/Display.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2517,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-10-19T14:36:15Z",
      "side": 1,
      "message": "The load context can potentially carry more things in the future that could be gl::Context-specific. Also keeping the pools and the load context in sync is just error-prone.\n\nI kept it as-is for now, we could micro-optimize if it shows up as having any nontrivial cost.",
      "parentUuid": "f0d85233_c732a689",
      "revId": "e3893707d1fa29b08ac872c81218b17e7a37cdc0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cb1aa12e_647ce6b9",
        "filename": "src/libANGLE/Display.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2523,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-10-18T13:16:35Z",
      "side": 1,
      "message": "you might need to make this thing thread-exclusive with a mutex to prevent race conditions in the vulkan back-end.",
      "range": {
        "startLine": 2515,
        "startChar": 0,
        "endLine": 2523,
        "endChar": 1
      },
      "revId": "e3893707d1fa29b08ac872c81218b17e7a37cdc0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9f845b7c_f13c492c",
        "filename": "src/libANGLE/Display.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2523,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-10-18T14:41:10Z",
      "side": 1,
      "message": "The pools themselves are created once, and AFAICT, access to them is already threadsafe, but I\u0027ll verify again. Are you worried about the shared_ptr itself? That should be read-only for the lifetime of Display",
      "parentUuid": "cb1aa12e_647ce6b9",
      "range": {
        "startLine": 2515,
        "startChar": 0,
        "endLine": 2523,
        "endChar": 1
      },
      "revId": "e3893707d1fa29b08ac872c81218b17e7a37cdc0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "32e189aa_5d34385f",
        "filename": "src/libANGLE/Display.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2523,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-10-18T14:48:25Z",
      "side": 1,
      "message": "If the pools are internally synchronized can you please add a comment showing this, maybe even a link if possible?",
      "parentUuid": "9f845b7c_f13c492c",
      "range": {
        "startLine": 2515,
        "startChar": 0,
        "endLine": 2523,
        "endChar": 1
      },
      "revId": "e3893707d1fa29b08ac872c81218b17e7a37cdc0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4451f8e2_42d31170",
        "filename": "src/libANGLE/Display.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2523,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-10-19T14:36:15Z",
      "side": 1,
      "message": "Added a comment on WorkerThreadPool itself (and a reference here)",
      "parentUuid": "32e189aa_5d34385f",
      "range": {
        "startLine": 2515,
        "startChar": 0,
        "endLine": 2523,
        "endChar": 1
      },
      "revId": "e3893707d1fa29b08ac872c81218b17e7a37cdc0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}