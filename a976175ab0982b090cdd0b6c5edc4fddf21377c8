{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "2c903df8_44076312",
        "filename": "src/tests/perf_tests/ANGLEPerfTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 482,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-08-24T18:00:57Z",
      "side": 1,
      "message": "I\u0027m a bit confused by this comment.   Why do we want to know how many can run without glFinish() if we are running with glFinish()?\n\nPresumably the glFinish() will wait for all of the work to complete that might be missed without a glFinish(), so how does running without glFinish() give us a time that\u0027s representative of how long running with glFinish() will take?",
      "range": {
        "startLine": 480,
        "startChar": 0,
        "endLine": 482,
        "endChar": 60
      },
      "revId": "a976175ab0982b090cdd0b6c5edc4fddf21377c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7370833b_2cf519fb",
        "filename": "src/tests/perf_tests/ANGLEPerfTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 482,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-08-24T19:44:07Z",
      "side": 1,
      "message": "So this is what we did before:\n\nstep()\nglFinish()\nstep()\nglFinish()\n.. repeat for \"gCalibrationTime\" seconds\nthen take the number of steps, the actual time ran, and compute an estimate of steps \"mStepsToRun\". \n\nwhen we run for real, we go\n\nstep()\nstep()\nstep()\n.. repeat for \"mStepsToRun\" steps.\nglFinish()\n\nthis has an obvious performance difference, because after each step() (one frame in a trace) you had a complete stall.\n\nWhat the new code does, is first it does the above to compute a tentative steps to  run, then does another pass (several times) where it then computes the \"actual\" elapsed time after running mStepsToRun and then re-computes mStepsToRun. This produces a much more accurate approximation of the number of steps to run in the fixed time.\n\nThe goal is as always more consistency and stable measurements using the same number of steps when we take many samples.\n\nI can try to encapsulate this in the comment if it would help.",
      "parentUuid": "2c903df8_44076312",
      "range": {
        "startLine": 480,
        "startChar": 0,
        "endLine": 482,
        "endChar": 60
      },
      "revId": "a976175ab0982b090cdd0b6c5edc4fddf21377c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7da68535_b0462864",
        "filename": "src/tests/perf_tests/ANGLEPerfTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 482,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-08-24T20:06:19Z",
      "side": 1,
      "message": "Thanks. I think adding the above to the commit message should be good enough.",
      "parentUuid": "7370833b_2cf519fb",
      "range": {
        "startLine": 480,
        "startChar": 0,
        "endLine": 482,
        "endChar": 60
      },
      "revId": "a976175ab0982b090cdd0b6c5edc4fddf21377c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f2406e76_fe5021ec",
        "filename": "src/tests/perf_tests/ANGLEPerfTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 482,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2021-08-25T05:33:10Z",
      "side": 1,
      "message": "I\u0027d prefer it in a comment rather than commit message, with the call sequence reflecting what happens now vs. what used to happen.\n\nDid we add the finish per step for a reason?  Maybe for offscreen?  It has always been obviously slow, but I thought it was necessary.",
      "parentUuid": "7da68535_b0462864",
      "range": {
        "startLine": 480,
        "startChar": 0,
        "endLine": 482,
        "endChar": 60
      },
      "revId": "a976175ab0982b090cdd0b6c5edc4fddf21377c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3cf34817_9468836b",
        "filename": "src/tests/perf_tests/ANGLEPerfTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 482,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-08-25T12:50:06Z",
      "side": 1,
      "message": "Cody: I expanded the comment. PTAL.",
      "parentUuid": "f2406e76_fe5021ec",
      "range": {
        "startLine": 480,
        "startChar": 0,
        "endLine": 482,
        "endChar": 60
      },
      "revId": "a976175ab0982b090cdd0b6c5edc4fddf21377c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9a12d533_a0e0566a",
        "filename": "src/tests/perf_tests/ANGLEPerfTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 482,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-08-25T12:52:15Z",
      "side": 1,
      "message": "Oh, and your questions:\n\nI added finish per step because previously we weren\u0027t calling finish at all so were getting crazy wrong values for mStepsToRun for GPU tests. We want to get a fixed number of steps to run in a specified amount of time, with asynchronous calls, so it takes a bit of estimation. The calibration always produced an under-estimate so it wasn\u0027t a huge problem, but it had a surprisingly large variance between runs so I\u0027m hoping this will fix that.",
      "parentUuid": "3cf34817_9468836b",
      "range": {
        "startLine": 480,
        "startChar": 0,
        "endLine": 482,
        "endChar": 60
      },
      "revId": "a976175ab0982b090cdd0b6c5edc4fddf21377c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b759f151_594d2078",
        "filename": "src/tests/perf_tests/ANGLEPerfTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 482,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-08-25T14:34:52Z",
      "side": 1,
      "message": "\u003e What the new code does, is first it does the above to compute a tentative steps to  run, then does another pass (several times) where it then computes the \"actual\" elapsed time\n\nDrive by: why not skip the first run (finish after every step) and do the actual one (finish once at the end) right off the bat?",
      "parentUuid": "9a12d533_a0e0566a",
      "range": {
        "startLine": 480,
        "startChar": 0,
        "endLine": 482,
        "endChar": 60
      },
      "revId": "a976175ab0982b090cdd0b6c5edc4fddf21377c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8a5eac9d_6c382fdd",
        "filename": "src/tests/perf_tests/ANGLEPerfTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 482,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-08-25T14:44:25Z",
      "side": 1,
      "message": "Because we don\u0027t have a step estimate. The main concern is to run within a fixed set of time.",
      "parentUuid": "b759f151_594d2078",
      "range": {
        "startLine": 480,
        "startChar": 0,
        "endLine": 482,
        "endChar": 60
      },
      "revId": "a976175ab0982b090cdd0b6c5edc4fddf21377c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}