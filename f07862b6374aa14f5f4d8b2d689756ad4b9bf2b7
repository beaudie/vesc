{
  "comments": [
    {
      "key": {
        "uuid": "931655ff_bafca983",
        "filename": "src/common/mathutil.h",
        "patchSetId": 4
      },
      "lineNbr": 550,
      "author": {
        "id": 1001641
      },
      "writtenOn": "2015-07-03T15:07:11Z",
      "side": 1,
      "message": "There\u0027s no need to pass single values of a fundamental type as a reference - the reference takes just as much space as the value itself.",
      "range": {
        "startLine": 550,
        "startChar": 46,
        "endLine": 550,
        "endChar": 47
      },
      "revId": "f07862b6374aa14f5f4d8b2d689756ad4b9bf2b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "33da09aa_cc60bf2f",
        "filename": "src/common/mathutil.h",
        "patchSetId": 4
      },
      "lineNbr": 550,
      "author": {
        "id": 1121008
      },
      "writtenOn": "2015-07-06T10:55:17Z",
      "side": 1,
      "message": "Done, I now have normal pass-by-value parameters like other functions in this file.",
      "parentUuid": "931655ff_bafca983",
      "range": {
        "startLine": 550,
        "startChar": 46,
        "endLine": 550,
        "endChar": 47
      },
      "revId": "f07862b6374aa14f5f4d8b2d689756ad4b9bf2b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "93abb5ef_2fd3457c",
        "filename": "src/common/mathutil_unittest.cpp",
        "patchSetId": 4
      },
      "lineNbr": 33,
      "author": {
        "id": 1001641
      },
      "writtenOn": "2015-07-03T15:07:11Z",
      "side": 1,
      "message": "Can you add a few more corner cases to each test, like infinity?",
      "revId": "f07862b6374aa14f5f4d8b2d689756ad4b9bf2b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "53d77d7e_31f72f03",
        "filename": "src/common/mathutil_unittest.cpp",
        "patchSetId": 4
      },
      "lineNbr": 33,
      "author": {
        "id": 1121008
      },
      "writtenOn": "2015-07-06T10:55:17Z",
      "side": 1,
      "message": "Partially Done.\nI have added infinity cases for pack/unpackSnorm and pack/unpackUnorm functions where it is clear that the result should be clamped to [-1, 1] and [0, 1] respectively.\n\nFor pack/unpackHalf, spec doesn\u0027t look to be saying anything. And I see our implementation was returning NaN for pack(unpack(infinity)). Looks like Geoff also reverted the similar test he recently added in PackUnPackTest because of similar reasons. So I decided to not add it for *half* functions.",
      "parentUuid": "93abb5ef_2fd3457c",
      "revId": "f07862b6374aa14f5f4d8b2d689756ad4b9bf2b7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}