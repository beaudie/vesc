{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "d38b9e0d_ec51ab0b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2022-11-10T16:58:59Z",
      "side": 1,
      "message": "--fixed-test-time and --warmup-trials don\u0027t belong together, so I don\u0027t think we should bend over backwards or muck up this code to support the combination.\n\nLet\u0027s introduce another convenience flag that gets the combination we want, i.e. --fixed-test-time-after-warmup\n\nAnd assert on unsupported combinations of flags.",
      "revId": "135d480c21de98312a75b0abba15c4c08ff89198",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b34ff6a3_7dec945f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1531247
      },
      "writtenOn": "2022-11-11T14:49:42Z",
      "side": 1,
      "message": "\u003e --fixed-test-time and --warmup-trials don\u0027t belong together\n\nThat\u0027s the use case from restricted_trace_perf.py\n\nhttps://source.chromium.org/chromium/chromium/src/+/main:third_party/angle/src/tests/restricted_traces/restricted_trace_perf.py;drc\u003d11a3e06b2c67b4fd0d3026ac1db035f3951b987c;l\u003d198,203\n\nLeaving it to you Cody to choose the best course of actions then.",
      "parentUuid": "d38b9e0d_ec51ab0b",
      "revId": "135d480c21de98312a75b0abba15c4c08ff89198",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1a765a5c_5b8b6079",
        "filename": "src/tests/perf_tests/ANGLEPerfTestArgs.cpp",
        "patchSetId": 3
      },
      "lineNbr": 55,
      "author": {
        "id": 1525982
      },
      "writtenOn": "2022-11-10T00:16:36Z",
      "side": 1,
      "message": "Why not 0? (Since `gWarmupTrials` is 0 by default.)",
      "range": {
        "startLine": 55,
        "startChar": 23,
        "endLine": 55,
        "endChar": 25
      },
      "revId": "135d480c21de98312a75b0abba15c4c08ff89198",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1391dabe_2f07e19f",
        "filename": "src/tests/perf_tests/ANGLEPerfTestArgs.cpp",
        "patchSetId": 3
      },
      "lineNbr": 55,
      "author": {
        "id": 1525982
      },
      "writtenOn": "2022-11-10T00:16:36Z",
      "side": 1,
      "message": "Suggestion: Move to the previous line?",
      "range": {
        "startLine": 55,
        "startChar": 28,
        "endLine": 55,
        "endChar": 45
      },
      "revId": "135d480c21de98312a75b0abba15c4c08ff89198",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "47aa31bb_72d1113b",
        "filename": "src/tests/perf_tests/ANGLEPerfTestArgs.cpp",
        "patchSetId": 3
      },
      "lineNbr": 146,
      "author": {
        "id": 1525982
      },
      "writtenOn": "2022-11-10T00:16:36Z",
      "side": 1,
      "message": "Suggestion: Same",
      "range": {
        "startLine": 146,
        "startChar": 32,
        "endLine": 146,
        "endChar": 70
      },
      "revId": "135d480c21de98312a75b0abba15c4c08ff89198",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:approval_code-owners"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "135d480c21de98312a75b0abba15c4c08ff89198",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "135d480c21de98312a75b0abba15c4c08ff89198",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "135d480c21de98312a75b0abba15c4c08ff89198",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "135d480c21de98312a75b0abba15c4c08ff89198",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}