{
  "comments": [
    {
      "key": {
        "uuid": "f417a9f9_02154f36",
        "filename": "src/common/mathutil.cpp",
        "patchSetId": 12
      },
      "lineNbr": 67,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-06-16T19:58:53Z",
      "side": 1,
      "message": "nit: // namespace gl",
      "range": {
        "startLine": 67,
        "startChar": 6,
        "endLine": 67,
        "endChar": 8
      },
      "revId": "fa4497fbaa200d1a5e0dff1a2992bb513edd5c3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f417a9f9_62052307",
        "filename": "src/common/mathutil.h",
        "patchSetId": 12
      },
      "lineNbr": 724,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-06-16T19:58:53Z",
      "side": 1,
      "message": "not sure where this code came from.. can you elaborate? it certainly looks different from ANGLE code.",
      "range": {
        "startLine": 724,
        "startChar": 10,
        "endLine": 724,
        "endChar": 16
      },
      "revId": "fa4497fbaa200d1a5e0dff1a2992bb513edd5c3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f417a9f9_c26197c0",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 12
      },
      "lineNbr": 446,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-06-16T19:58:53Z",
      "side": 1,
      "message": "phrase this as:\n\n GLuint result \u003d 0;\n ANGLE_TRY_RESULT(..., result);\n return result;",
      "range": {
        "startLine": 444,
        "startChar": 0,
        "endLine": 446,
        "endChar": 35
      },
      "revId": "fa4497fbaa200d1a5e0dff1a2992bb513edd5c3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f417a9f9_a2a3bb15",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 12
      },
      "lineNbr": 1806,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-06-16T19:58:53Z",
      "side": 1,
      "message": "I\u0027m fine with leaving this as TODO, but if you can, label them as TODO(email) so we know who added them.",
      "range": {
        "startLine": 1806,
        "startChar": 7,
        "endLine": 1806,
        "endChar": 11
      },
      "revId": "fa4497fbaa200d1a5e0dff1a2992bb513edd5c3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f417a9f9_e2865377",
        "filename": "src/libANGLE/HandleRangeAllocator.cpp",
        "patchSetId": 12
      },
      "lineNbr": 13,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-06-16T19:58:53Z",
      "side": 1,
      "message": "nit: sort",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 13,
        "endChar": 17
      },
      "revId": "fa4497fbaa200d1a5e0dff1a2992bb513edd5c3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f417a9f9_c28fd78c",
        "filename": "src/libANGLE/HandleRangeAllocator.cpp",
        "patchSetId": 12
      },
      "lineNbr": 225,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-06-16T19:58:53Z",
      "side": 1,
      "message": "namespace gl.. and so on and so forth through the rest",
      "range": {
        "startLine": 225,
        "startChar": 6,
        "endLine": 225,
        "endChar": 8
      },
      "revId": "fa4497fbaa200d1a5e0dff1a2992bb513edd5c3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f417a9f9_e2adb3ff",
        "filename": "src/libANGLE/HandleRangeAllocator.h",
        "patchSetId": 12
      },
      "lineNbr": 54,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-06-16T19:58:53Z",
      "side": 1,
      "message": "I think you can remove this typedef, I didn\u0027t see it used anywhere except to define the map. Also, maybe unordered_map is better? Not sure.",
      "range": {
        "startLine": 54,
        "startChar": 4,
        "endLine": 54,
        "endChar": 46
      },
      "revId": "fa4497fbaa200d1a5e0dff1a2992bb513edd5c3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f417a9f9_62efe323",
        "filename": "src/libANGLE/Path.h",
        "patchSetId": 12
      },
      "lineNbr": 10,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-06-16T19:58:53Z",
      "side": 1,
      "message": "nit: trailing _",
      "range": {
        "startLine": 10,
        "startChar": 8,
        "endLine": 10,
        "endChar": 23
      },
      "revId": "fa4497fbaa200d1a5e0dff1a2992bb513edd5c3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f417a9f9_42c907b5",
        "filename": "src/libANGLE/ResourceManager.cpp",
        "patchSetId": 12
      },
      "lineNbr": 168,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-06-16T19:58:53Z",
      "side": 1,
      "message": "nit: use the optional second arg to bookmark where we failed.",
      "range": {
        "startLine": 168,
        "startChar": 25,
        "endLine": 168,
        "endChar": 41
      },
      "revId": "fa4497fbaa200d1a5e0dff1a2992bb513edd5c3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f417a9f9_82c31f95",
        "filename": "src/libANGLE/ResourceManager.cpp",
        "patchSetId": 12
      },
      "lineNbr": 174,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-06-16T19:58:53Z",
      "side": 1,
      "message": "same",
      "range": {
        "startLine": 174,
        "startChar": 25,
        "endLine": 174,
        "endChar": 41
      },
      "revId": "fa4497fbaa200d1a5e0dff1a2992bb513edd5c3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f417a9f9_82615f93",
        "filename": "src/libANGLE/ResourceManager.cpp",
        "patchSetId": 12
      },
      "lineNbr": 286,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-06-16T19:58:53Z",
      "side": 1,
      "message": "a factory doesn\u0027t delete things, so I\u0027d be happy if you would remove this arg.",
      "range": {
        "startLine": 286,
        "startChar": 34,
        "endLine": 286,
        "endChar": 60
      },
      "revId": "fa4497fbaa200d1a5e0dff1a2992bb513edd5c3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f417a9f9_420c67e5",
        "filename": "src/libANGLE/renderer/ContextImpl.h",
        "patchSetId": 12
      },
      "lineNbr": 75,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-06-16T19:58:53Z",
      "side": 1,
      "message": "I think they belong in PathImpl, but it\u0027s OK to leave them if Geoff objects.",
      "range": {
        "startLine": 63,
        "startChar": 0,
        "endLine": 75,
        "endChar": 62
      },
      "revId": "fa4497fbaa200d1a5e0dff1a2992bb513edd5c3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f417a9f9_c20077a9",
        "filename": "src/libANGLE/renderer/GLImplFactory.h",
        "patchSetId": 12
      },
      "lineNbr": 18,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-06-16T19:58:53Z",
      "side": 1,
      "message": "include order",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 18,
        "endChar": 17
      },
      "revId": "fa4497fbaa200d1a5e0dff1a2992bb513edd5c3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f417a9f9_621b631e",
        "filename": "src/libANGLE/renderer/GLImplFactory.h",
        "patchSetId": 12
      },
      "lineNbr": 41,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-06-16T19:58:53Z",
      "side": 1,
      "message": "nit: sort",
      "range": {
        "startLine": 41,
        "startChar": 6,
        "endLine": 41,
        "endChar": 14
      },
      "revId": "fa4497fbaa200d1a5e0dff1a2992bb513edd5c3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f417a9f9_a2fd7bbc",
        "filename": "src/libANGLE/renderer/GLImplFactory.h",
        "patchSetId": 12
      },
      "lineNbr": 84,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-06-16T19:58:53Z",
      "side": 1,
      "message": "this should not be UNIMPLEMENTED, this should definitely be abstract. The GLImplFactory is an interface class only.",
      "range": {
        "startLine": 80,
        "startChar": 0,
        "endLine": 84,
        "endChar": 5
      },
      "revId": "fa4497fbaa200d1a5e0dff1a2992bb513edd5c3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f417a9f9_02242f53",
        "filename": "src/libANGLE/renderer/PathImpl.h",
        "patchSetId": 12
      },
      "lineNbr": 10,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-06-16T19:58:53Z",
      "side": 1,
      "message": "trailing _",
      "range": {
        "startLine": 10,
        "startChar": 8,
        "endLine": 10,
        "endChar": 36
      },
      "revId": "fa4497fbaa200d1a5e0dff1a2992bb513edd5c3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f417a9f9_6234038a",
        "filename": "src/libANGLE/renderer/PathImpl.h",
        "patchSetId": 12
      },
      "lineNbr": 23,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-06-16T19:58:53Z",
      "side": 1,
      "message": "{} is fine for destructors.. at least until someone corrects me.",
      "range": {
        "startLine": 23,
        "startChar": 24,
        "endLine": 23,
        "endChar": 34
      },
      "revId": "fa4497fbaa200d1a5e0dff1a2992bb513edd5c3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f417a9f9_02a70fd2",
        "filename": "src/libGLESv2/entry_points_gles_2_0_ext.cpp",
        "patchSetId": 12
      },
      "lineNbr": 1424,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-06-16T19:58:53Z",
      "side": 1,
      "message": "this needs its own method.. very annoying I know but it would help us maintain this code. the context method/validation method can handle calling the other internally.",
      "range": {
        "startLine": 1422,
        "startChar": 3,
        "endLine": 1424,
        "endChar": 39
      },
      "revId": "fa4497fbaa200d1a5e0dff1a2992bb513edd5c3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f417a9f9_82bddfef",
        "filename": "src/libGLESv2/entry_points_gles_2_0_ext.cpp",
        "patchSetId": 12
      },
      "lineNbr": 1656,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-06-16T19:58:53Z",
      "side": 1,
      "message": "this needs its own method",
      "range": {
        "startLine": 1653,
        "startChar": 0,
        "endLine": 1656,
        "endChar": 23
      },
      "revId": "fa4497fbaa200d1a5e0dff1a2992bb513edd5c3e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}