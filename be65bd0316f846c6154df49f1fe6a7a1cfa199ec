{
  "comments": [
    {
      "key": {
        "uuid": "328ec7a2_2790865e",
        "filename": "src/libANGLE/validationES31.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1394,
      "author": {
        "id": 1165541
      },
      "writtenOn": "2017-11-28T08:24:26Z",
      "side": 1,
      "message": "Remove it. I think program-\u003ehasLinkedComputeShader() is true means that the corresponding program was linked successfully.",
      "range": {
        "startLine": 1394,
        "startChar": 8,
        "endLine": 1394,
        "endChar": 31
      },
      "revId": "be65bd0316f846c6154df49f1fe6a7a1cfa199ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ffaae89_dfdf27c8",
        "filename": "src/libANGLE/validationES31.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1394,
      "author": {
        "id": 1138134
      },
      "writtenOn": "2017-11-28T08:38:15Z",
      "side": 1,
      "message": "Not really. This ifs means that the program is a successfully linked RENDERING program. When you dispatch compute against a rendering program, it should generate INVALID_OPERATION. \n\nBut if you remove program-\u003eisLinked(). Then the program can be a unsuccessfully re-linked program (program is not null, so it is a unsuccessfully re-linked program).\n\nThese two are quite different.",
      "parentUuid": "328ec7a2_2790865e",
      "range": {
        "startLine": 1394,
        "startChar": 8,
        "endLine": 1394,
        "endChar": 31
      },
      "revId": "be65bd0316f846c6154df49f1fe6a7a1cfa199ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "73007be5_19429cc2",
        "filename": "src/libANGLE/validationES31.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1394,
      "author": {
        "id": 1165541
      },
      "writtenOn": "2017-11-28T09:11:15Z",
      "side": 1,
      "message": "Sorry, my previous comment is not correct. I rechecked the spec. There are following description in spec \u0027An INVALID_OPERATION error is generated if program is the name of a program that has not been successfully linked, or of a linked program object that contains no compute shaders.\u0027. I think \u0027program-\u003eisLinked() \u0026\u0026 !program-\u003ehasLinkedComputeShader()\u0027 corresponds to \u0027a linked program object that contains no compute shaders\u0027. But it seems that you miss the check if program is the name of a program that has not been successfully linked.",
      "parentUuid": "3ffaae89_dfdf27c8",
      "range": {
        "startLine": 1394,
        "startChar": 8,
        "endLine": 1394,
        "endChar": 31
      },
      "revId": "be65bd0316f846c6154df49f1fe6a7a1cfa199ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c069c27e_3d48b14f",
        "filename": "src/libANGLE/validationES31.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1396,
      "author": {
        "id": 1138134
      },
      "writtenOn": "2017-11-28T08:22:34Z",
      "side": 1,
      "message": "If the compute program is unsuccessfully linked, the failed program would not be installed to the pipeline even you called UseProgram(). In this situation(nsuccessfully linked), if you dispatch compute, it depends on the previous state: \n1) We already have a valid program in use because of previous call to UseProgram, then It is OK. Just continue to dispatch compute and use the old binary resided in pipeline, we should not report error here. \n2) No valid program is in use. Then it has already reported INVALID_OPERATION at code snippet 1387 ~ 1392. Because no program is installed in the pipeline at all (Even you called UseProgram with the unsuccessfully linked program).",
      "revId": "be65bd0316f846c6154df49f1fe6a7a1cfa199ec",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}