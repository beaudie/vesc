// GENERATED FILE - DO NOT EDIT.
// Generated by generate_loader.py using data from egl.xml and egl_angle_ext.xml.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// egl_loader_autogen.h:
//   Simple EGL function loader.

#ifndef UTIL_EGL_LOADER_AUTOGEN_H_
#define UTIL_EGL_LOADER_AUTOGEN_H_

#include <EGL/egl.h>
#include <EGL/eglext.h>

extern PFNEGLCHOOSECONFIGPROC EGLChooseConfig;
extern PFNEGLCOPYBUFFERSPROC EGLCopyBuffers;
extern PFNEGLCREATECONTEXTPROC EGLCreateContext;
extern PFNEGLCREATEPBUFFERSURFACEPROC EGLCreatePbufferSurface;
extern PFNEGLCREATEPIXMAPSURFACEPROC EGLCreatePixmapSurface;
extern PFNEGLCREATEWINDOWSURFACEPROC EGLCreateWindowSurface;
extern PFNEGLDESTROYCONTEXTPROC EGLDestroyContext;
extern PFNEGLDESTROYSURFACEPROC EGLDestroySurface;
extern PFNEGLGETCONFIGATTRIBPROC EGLGetConfigAttrib;
extern PFNEGLGETCONFIGSPROC EGLGetConfigs;
extern PFNEGLGETCURRENTDISPLAYPROC EGLGetCurrentDisplay;
extern PFNEGLGETCURRENTSURFACEPROC EGLGetCurrentSurface;
extern PFNEGLGETDISPLAYPROC EGLGetDisplay;
extern PFNEGLGETERRORPROC EGLGetError;
extern PFNEGLGETPROCADDRESSPROC EGLGetProcAddress;
extern PFNEGLINITIALIZEPROC EGLInitialize;
extern PFNEGLMAKECURRENTPROC EGLMakeCurrent;
extern PFNEGLQUERYCONTEXTPROC EGLQueryContext;
extern PFNEGLQUERYSTRINGPROC EGLQueryString;
extern PFNEGLQUERYSURFACEPROC EGLQuerySurface;
extern PFNEGLSWAPBUFFERSPROC EGLSwapBuffers;
extern PFNEGLTERMINATEPROC EGLTerminate;
extern PFNEGLWAITGLPROC EGLWaitGL;
extern PFNEGLWAITNATIVEPROC EGLWaitNative;
extern PFNEGLBINDTEXIMAGEPROC EGLBindTexImage;
extern PFNEGLRELEASETEXIMAGEPROC EGLReleaseTexImage;
extern PFNEGLSURFACEATTRIBPROC EGLSurfaceAttrib;
extern PFNEGLSWAPINTERVALPROC EGLSwapInterval;
extern PFNEGLBINDAPIPROC EGLBindAPI;
extern PFNEGLQUERYAPIPROC EGLQueryAPI;
extern PFNEGLCREATEPBUFFERFROMCLIENTBUFFERPROC EGLCreatePbufferFromClientBuffer;
extern PFNEGLRELEASETHREADPROC EGLReleaseThread;
extern PFNEGLWAITCLIENTPROC EGLWaitClient;
extern PFNEGLGETCURRENTCONTEXTPROC EGLGetCurrentContext;
extern PFNEGLCREATESYNCPROC EGLCreateSync;
extern PFNEGLDESTROYSYNCPROC EGLDestroySync;
extern PFNEGLCLIENTWAITSYNCPROC EGLClientWaitSync;
extern PFNEGLGETSYNCATTRIBPROC EGLGetSyncAttrib;
extern PFNEGLCREATEIMAGEPROC EGLCreateImage;
extern PFNEGLDESTROYIMAGEPROC EGLDestroyImage;
extern PFNEGLGETPLATFORMDISPLAYPROC EGLGetPlatformDisplay;
extern PFNEGLCREATEPLATFORMWINDOWSURFACEPROC EGLCreatePlatformWindowSurface;
extern PFNEGLCREATEPLATFORMPIXMAPSURFACEPROC EGLCreatePlatformPixmapSurface;
extern PFNEGLWAITSYNCPROC EGLWaitSync;
extern PFNEGLSETBLOBCACHEFUNCSANDROIDPROC EGLSetBlobCacheFuncsANDROID;
extern PFNEGLGETCOMPOSITORTIMINGANDROIDPROC EGLGetCompositorTimingANDROID;
extern PFNEGLGETCOMPOSITORTIMINGSUPPORTEDANDROIDPROC EGLGetCompositorTimingSupportedANDROID;
extern PFNEGLGETFRAMETIMESTAMPSUPPORTEDANDROIDPROC EGLGetFrameTimestampSupportedANDROID;
extern PFNEGLGETFRAMETIMESTAMPSANDROIDPROC EGLGetFrameTimestampsANDROID;
extern PFNEGLGETNEXTFRAMEIDANDROIDPROC EGLGetNextFrameIdANDROID;
extern PFNEGLPRESENTATIONTIMEANDROIDPROC EGLPresentationTimeANDROID;
extern PFNEGLCREATEDEVICEANGLEPROC EGLCreateDeviceANGLE;
extern PFNEGLRELEASEDEVICEANGLEPROC EGLReleaseDeviceANGLE;
extern PFNEGLPROGRAMCACHEGETATTRIBANGLEPROC EGLProgramCacheGetAttribANGLE;
extern PFNEGLPROGRAMCACHEPOPULATEANGLEPROC EGLProgramCachePopulateANGLE;
extern PFNEGLPROGRAMCACHEQUERYANGLEPROC EGLProgramCacheQueryANGLE;
extern PFNEGLPROGRAMCACHERESIZEANGLEPROC EGLProgramCacheResizeANGLE;
extern PFNEGLQUERYSURFACEPOINTERANGLEPROC EGLQuerySurfacePointerANGLE;
extern PFNEGLCREATESTREAMPRODUCERD3DTEXTUREANGLEPROC EGLCreateStreamProducerD3DTextureANGLE;
extern PFNEGLSTREAMPOSTD3DTEXTUREANGLEPROC EGLStreamPostD3DTextureANGLE;
extern PFNEGLGETSYNCVALUESCHROMIUMPROC EGLGetSyncValuesCHROMIUM;
extern PFNEGLQUERYDEVICEATTRIBEXTPROC EGLQueryDeviceAttribEXT;
extern PFNEGLQUERYDEVICESTRINGEXTPROC EGLQueryDeviceStringEXT;
extern PFNEGLQUERYDISPLAYATTRIBEXTPROC EGLQueryDisplayAttribEXT;
extern PFNEGLCREATEPLATFORMPIXMAPSURFACEEXTPROC EGLCreatePlatformPixmapSurfaceEXT;
extern PFNEGLCREATEPLATFORMWINDOWSURFACEEXTPROC EGLCreatePlatformWindowSurfaceEXT;
extern PFNEGLGETPLATFORMDISPLAYEXTPROC EGLGetPlatformDisplayEXT;
extern PFNEGLDEBUGMESSAGECONTROLKHRPROC EGLDebugMessageControlKHR;
extern PFNEGLLABELOBJECTKHRPROC EGLLabelObjectKHR;
extern PFNEGLQUERYDEBUGKHRPROC EGLQueryDebugKHR;
extern PFNEGLCREATEIMAGEKHRPROC EGLCreateImageKHR;
extern PFNEGLDESTROYIMAGEKHRPROC EGLDestroyImageKHR;
extern PFNEGLCREATESTREAMKHRPROC EGLCreateStreamKHR;
extern PFNEGLDESTROYSTREAMKHRPROC EGLDestroyStreamKHR;
extern PFNEGLQUERYSTREAMKHRPROC EGLQueryStreamKHR;
extern PFNEGLQUERYSTREAMU64KHRPROC EGLQueryStreamu64KHR;
extern PFNEGLSTREAMATTRIBKHRPROC EGLStreamAttribKHR;
extern PFNEGLSTREAMCONSUMERACQUIREKHRPROC EGLStreamConsumerAcquireKHR;
extern PFNEGLSTREAMCONSUMERGLTEXTUREEXTERNALKHRPROC EGLStreamConsumerGLTextureExternalKHR;
extern PFNEGLSTREAMCONSUMERRELEASEKHRPROC EGLStreamConsumerReleaseKHR;
extern PFNEGLSWAPBUFFERSWITHDAMAGEKHRPROC EGLSwapBuffersWithDamageKHR;
extern PFNEGLPOSTSUBBUFFERNVPROC EGLPostSubBufferNV;
extern PFNEGLSTREAMCONSUMERGLTEXTUREEXTERNALATTRIBSNVPROC
    EGLStreamConsumerGLTextureExternalAttribsNV;

namespace angle
{
using GenericProc = void (*)();
using LoadProc    = GenericProc(KHRONOS_APIENTRY *)(const char *);
void LoadEGL(LoadProc loadProc);
}  // namespace angle

#endif  // UTIL_EGL_LOADER_AUTOGEN_H_
