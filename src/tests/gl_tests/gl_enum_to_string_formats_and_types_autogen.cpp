// GENERATED FILE - DO NOT EDIT.
// Generated by gen_format_and_type_enum.py using data from format_and_type_enums.json.
//
// Copyright 2019 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// gl_enum_to_string_formats_and_types_autogen.cpp:
//   mapping of GLenum value to string.

#include "angle_gl.h"
#include "tests/gl_tests/gl_enum_to_string_formats_and_types.h"

namespace gl
{
namespace
{
const char kUnknownGLenumString[] = "EnumUnknown";
}

const char *GLenumToStringFormatsAndTypes(unsigned int value)
{

    switch (value)
    {
        case GL_ALPHA:
            return "GL_ALPHA";
        case GL_ALPHA16F_EXT:
            return "GL_ALPHA16F_EXT";
        case GL_ALPHA32F_EXT:
            return "GL_ALPHA32F_EXT";
        case GL_ALPHA8_EXT:
            return "GL_ALPHA8_EXT";
        case GL_BGRA_EXT:
            return "GL_BGRA_EXT";
        case GL_BGRA8_EXT:
            return "GL_BGRA8_EXT";
        case GL_BYTE:
            return "GL_BYTE";
        case GL_COMPRESSED_R11_EAC:
            return "GL_COMPRESSED_R11_EAC";
        case GL_COMPRESSED_RG11_EAC:
            return "GL_COMPRESSED_RG11_EAC";
        case GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT:
            return "GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT";
        case GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT:
            return "GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT";
        case GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG:
            return "GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG";
        case GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG:
            return "GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG";
        case GL_COMPRESSED_RGB_S3TC_DXT1_EXT:
            return "GL_COMPRESSED_RGB_S3TC_DXT1_EXT";
        case GL_COMPRESSED_RGB8_ETC2:
            return "GL_COMPRESSED_RGB8_ETC2";
        case GL_COMPRESSED_RGB8_LOSSY_DECODE_ETC2_ANGLE:
            return "GL_COMPRESSED_RGB8_LOSSY_DECODE_ETC2_ANGLE";
        case GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2:
            return "GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2";
        case GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_LOSSY_DECODE_ETC2_ANGLE:
            return "GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_LOSSY_DECODE_ETC2_ANGLE";
        case GL_COMPRESSED_RGBA_ASTC_10x10_KHR:
            return "GL_COMPRESSED_RGBA_ASTC_10x10_KHR";
        case GL_COMPRESSED_RGBA_ASTC_10x5_KHR:
            return "GL_COMPRESSED_RGBA_ASTC_10x5_KHR";
        case GL_COMPRESSED_RGBA_ASTC_10x6_KHR:
            return "GL_COMPRESSED_RGBA_ASTC_10x6_KHR";
        case GL_COMPRESSED_RGBA_ASTC_10x8_KHR:
            return "GL_COMPRESSED_RGBA_ASTC_10x8_KHR";
        case GL_COMPRESSED_RGBA_ASTC_12x10_KHR:
            return "GL_COMPRESSED_RGBA_ASTC_12x10_KHR";
        case GL_COMPRESSED_RGBA_ASTC_12x12_KHR:
            return "GL_COMPRESSED_RGBA_ASTC_12x12_KHR";
        case GL_COMPRESSED_RGBA_ASTC_3x3x3_OES:
            return "GL_COMPRESSED_RGBA_ASTC_3x3x3_OES";
        case GL_COMPRESSED_RGBA_ASTC_4x3x3_OES:
            return "GL_COMPRESSED_RGBA_ASTC_4x3x3_OES";
        case GL_COMPRESSED_RGBA_ASTC_4x4_KHR:
            return "GL_COMPRESSED_RGBA_ASTC_4x4_KHR";
        case GL_COMPRESSED_RGBA_ASTC_4x4x3_OES:
            return "GL_COMPRESSED_RGBA_ASTC_4x4x3_OES";
        case GL_COMPRESSED_RGBA_ASTC_4x4x4_OES:
            return "GL_COMPRESSED_RGBA_ASTC_4x4x4_OES";
        case GL_COMPRESSED_RGBA_ASTC_5x4_KHR:
            return "GL_COMPRESSED_RGBA_ASTC_5x4_KHR";
        case GL_COMPRESSED_RGBA_ASTC_5x4x4_OES:
            return "GL_COMPRESSED_RGBA_ASTC_5x4x4_OES";
        case GL_COMPRESSED_RGBA_ASTC_5x5_KHR:
            return "GL_COMPRESSED_RGBA_ASTC_5x5_KHR";
        case GL_COMPRESSED_RGBA_ASTC_5x5x4_OES:
            return "GL_COMPRESSED_RGBA_ASTC_5x5x4_OES";
        case GL_COMPRESSED_RGBA_ASTC_5x5x5_OES:
            return "GL_COMPRESSED_RGBA_ASTC_5x5x5_OES";
        case GL_COMPRESSED_RGBA_ASTC_6x5_KHR:
            return "GL_COMPRESSED_RGBA_ASTC_6x5_KHR";
        case GL_COMPRESSED_RGBA_ASTC_6x5x5_OES:
            return "GL_COMPRESSED_RGBA_ASTC_6x5x5_OES";
        case GL_COMPRESSED_RGBA_ASTC_6x6_KHR:
            return "GL_COMPRESSED_RGBA_ASTC_6x6_KHR";
        case GL_COMPRESSED_RGBA_ASTC_6x6x5_OES:
            return "GL_COMPRESSED_RGBA_ASTC_6x6x5_OES";
        case GL_COMPRESSED_RGBA_ASTC_6x6x6_OES:
            return "GL_COMPRESSED_RGBA_ASTC_6x6x6_OES";
        case GL_COMPRESSED_RGBA_ASTC_8x5_KHR:
            return "GL_COMPRESSED_RGBA_ASTC_8x5_KHR";
        case GL_COMPRESSED_RGBA_ASTC_8x6_KHR:
            return "GL_COMPRESSED_RGBA_ASTC_8x6_KHR";
        case GL_COMPRESSED_RGBA_ASTC_8x8_KHR:
            return "GL_COMPRESSED_RGBA_ASTC_8x8_KHR";
        case GL_COMPRESSED_RGBA_BPTC_UNORM_EXT:
            return "GL_COMPRESSED_RGBA_BPTC_UNORM_EXT";
        case GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG:
            return "GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG";
        case GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG:
            return "GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG";
        case GL_COMPRESSED_RGBA_S3TC_DXT1_EXT:
            return "GL_COMPRESSED_RGBA_S3TC_DXT1_EXT";
        case GL_COMPRESSED_RGBA_S3TC_DXT3_ANGLE:
            return "GL_COMPRESSED_RGBA_S3TC_DXT3_ANGLE";
        case GL_COMPRESSED_RGBA_S3TC_DXT5_ANGLE:
            return "GL_COMPRESSED_RGBA_S3TC_DXT5_ANGLE";
        case GL_COMPRESSED_RGBA8_ETC2_EAC:
            return "GL_COMPRESSED_RGBA8_ETC2_EAC";
        case GL_COMPRESSED_SIGNED_R11_EAC:
            return "GL_COMPRESSED_SIGNED_R11_EAC";
        case GL_COMPRESSED_SIGNED_RG11_EAC:
            return "GL_COMPRESSED_SIGNED_RG11_EAC";
        case GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:
            return "GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT";
        case GL_COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV1_EXT:
            return "GL_COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV1_EXT";
        case GL_COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV1_EXT:
            return "GL_COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV1_EXT";
        case GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT:
            return "GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT";
        case GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT:
            return "GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT";
        case GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT:
            return "GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT";
        case GL_COMPRESSED_SRGB_PVRTC_2BPPV1_EXT:
            return "GL_COMPRESSED_SRGB_PVRTC_2BPPV1_EXT";
        case GL_COMPRESSED_SRGB_PVRTC_4BPPV1_EXT:
            return "GL_COMPRESSED_SRGB_PVRTC_4BPPV1_EXT";
        case GL_COMPRESSED_SRGB_S3TC_DXT1_EXT:
            return "GL_COMPRESSED_SRGB_S3TC_DXT1_EXT";
        case GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:
            return "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR";
        case GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:
            return "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR";
        case GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:
            return "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR";
        case GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:
            return "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR";
        case GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:
            return "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR";
        case GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:
            return "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR";
        case GL_COMPRESSED_SRGB8_ALPHA8_ASTC_3x3x3_OES:
            return "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_3x3x3_OES";
        case GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x3x3_OES:
            return "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x3x3_OES";
        case GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:
            return "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR";
        case GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x3_OES:
            return "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x3_OES";
        case GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x4_OES:
            return "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x4_OES";
        case GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:
            return "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR";
        case GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4x4_OES:
            return "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4x4_OES";
        case GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:
            return "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR";
        case GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x4_OES:
            return "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x4_OES";
        case GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x5_OES:
            return "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x5_OES";
        case GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:
            return "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR";
        case GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5x5_OES:
            return "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5x5_OES";
        case GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:
            return "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR";
        case GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x5_OES:
            return "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x5_OES";
        case GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x6_OES:
            return "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x6_OES";
        case GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:
            return "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR";
        case GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:
            return "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR";
        case GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:
            return "GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR";
        case GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:
            return "GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC";
        case GL_COMPRESSED_SRGB8_ETC2:
            return "GL_COMPRESSED_SRGB8_ETC2";
        case GL_COMPRESSED_SRGB8_LOSSY_DECODE_ETC2_ANGLE:
            return "GL_COMPRESSED_SRGB8_LOSSY_DECODE_ETC2_ANGLE";
        case GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2:
            return "GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2";
        case GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_LOSSY_DECODE_ETC2_ANGLE:
            return "GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_LOSSY_DECODE_ETC2_ANGLE";
        case GL_DEPTH_COMPONENT:
            return "GL_DEPTH_COMPONENT";
        case GL_DEPTH_COMPONENT16:
            return "GL_DEPTH_COMPONENT16";
        case GL_DEPTH_COMPONENT24:
            return "GL_DEPTH_COMPONENT24";
        case GL_DEPTH_COMPONENT32_OES:
            return "GL_DEPTH_COMPONENT32_OES";
        case GL_DEPTH_COMPONENT32F:
            return "GL_DEPTH_COMPONENT32F";
        case GL_DEPTH_STENCIL:
            return "GL_DEPTH_STENCIL";
        case GL_DEPTH24_STENCIL8:
            return "GL_DEPTH24_STENCIL8";
        case GL_DEPTH32F_STENCIL8:
            return "GL_DEPTH32F_STENCIL8";
        case GL_ETC1_RGB8_LOSSY_DECODE_ANGLE:
            return "GL_ETC1_RGB8_LOSSY_DECODE_ANGLE";
        case GL_ETC1_RGB8_OES:
            return "GL_ETC1_RGB8_OES";
        case GL_FLOAT:
            return "GL_FLOAT";
        case GL_FLOAT_32_UNSIGNED_INT_24_8_REV:
            return "GL_FLOAT_32_UNSIGNED_INT_24_8_REV";
        case GL_HALF_FLOAT:
            return "GL_HALF_FLOAT";
        case GL_HALF_FLOAT_OES:
            return "GL_HALF_FLOAT_OES";
        case GL_INT:
            return "GL_INT";
        case GL_LUMINANCE:
            return "GL_LUMINANCE";
        case GL_LUMINANCE_ALPHA:
            return "GL_LUMINANCE_ALPHA";
        case GL_LUMINANCE_ALPHA16F_EXT:
            return "GL_LUMINANCE_ALPHA16F_EXT";
        case GL_LUMINANCE_ALPHA32F_EXT:
            return "GL_LUMINANCE_ALPHA32F_EXT";
        case GL_LUMINANCE16F_EXT:
            return "GL_LUMINANCE16F_EXT";
        case GL_LUMINANCE32F_EXT:
            return "GL_LUMINANCE32F_EXT";
        case GL_LUMINANCE8_ALPHA8_EXT:
            return "GL_LUMINANCE8_ALPHA8_EXT";
        case GL_LUMINANCE8_EXT:
            return "GL_LUMINANCE8_EXT";
        case GL_R11F_G11F_B10F:
            return "GL_R11F_G11F_B10F";
        case GL_R16_EXT:
            return "GL_R16_EXT";
        case GL_R16_SNORM_EXT:
            return "GL_R16_SNORM_EXT";
        case GL_R16F:
            return "GL_R16F";
        case GL_R16I:
            return "GL_R16I";
        case GL_R16UI:
            return "GL_R16UI";
        case GL_R32F:
            return "GL_R32F";
        case GL_R32I:
            return "GL_R32I";
        case GL_R32UI:
            return "GL_R32UI";
        case GL_R8:
            return "GL_R8";
        case GL_R8_SNORM:
            return "GL_R8_SNORM";
        case GL_R8I:
            return "GL_R8I";
        case GL_R8UI:
            return "GL_R8UI";
        case GL_RED:
            return "GL_RED";
        case GL_RED_INTEGER:
            return "GL_RED_INTEGER";
        case GL_RG:
            return "GL_RG";
        case GL_RG_INTEGER:
            return "GL_RG_INTEGER";
        case GL_RG16_EXT:
            return "GL_RG16_EXT";
        case GL_RG16_SNORM_EXT:
            return "GL_RG16_SNORM_EXT";
        case GL_RG16F:
            return "GL_RG16F";
        case GL_RG16I:
            return "GL_RG16I";
        case GL_RG16UI:
            return "GL_RG16UI";
        case GL_RG32F:
            return "GL_RG32F";
        case GL_RG32I:
            return "GL_RG32I";
        case GL_RG32UI:
            return "GL_RG32UI";
        case GL_RG8:
            return "GL_RG8";
        case GL_RG8_SNORM:
            return "GL_RG8_SNORM";
        case GL_RG8I:
            return "GL_RG8I";
        case GL_RG8UI:
            return "GL_RG8UI";
        case GL_RGB:
            return "GL_RGB";
        case GL_RGB_INTEGER:
            return "GL_RGB_INTEGER";
        case GL_RGB10_A2:
            return "GL_RGB10_A2";
        case GL_RGB10_A2UI:
            return "GL_RGB10_A2UI";
        case GL_RGB16_EXT:
            return "GL_RGB16_EXT";
        case GL_RGB16_SNORM_EXT:
            return "GL_RGB16_SNORM_EXT";
        case GL_RGB16F:
            return "GL_RGB16F";
        case GL_RGB16I:
            return "GL_RGB16I";
        case GL_RGB16UI:
            return "GL_RGB16UI";
        case GL_RGB32F:
            return "GL_RGB32F";
        case GL_RGB32I:
            return "GL_RGB32I";
        case GL_RGB32UI:
            return "GL_RGB32UI";
        case GL_RGB5_A1:
            return "GL_RGB5_A1";
        case GL_RGB565:
            return "GL_RGB565";
        case GL_RGB8:
            return "GL_RGB8";
        case GL_RGB8_SNORM:
            return "GL_RGB8_SNORM";
        case GL_RGB8I:
            return "GL_RGB8I";
        case GL_RGB8UI:
            return "GL_RGB8UI";
        case GL_RGB9_E5:
            return "GL_RGB9_E5";
        case GL_RGBA:
            return "GL_RGBA";
        case GL_RGBA_INTEGER:
            return "GL_RGBA_INTEGER";
        case GL_RGBA16_EXT:
            return "GL_RGBA16_EXT";
        case GL_RGBA16_SNORM_EXT:
            return "GL_RGBA16_SNORM_EXT";
        case GL_RGBA16F:
            return "GL_RGBA16F";
        case GL_RGBA16I:
            return "GL_RGBA16I";
        case GL_RGBA16UI:
            return "GL_RGBA16UI";
        case GL_RGBA32F:
            return "GL_RGBA32F";
        case GL_RGBA32I:
            return "GL_RGBA32I";
        case GL_RGBA32UI:
            return "GL_RGBA32UI";
        case GL_RGBA4:
            return "GL_RGBA4";
        case GL_RGBA8:
            return "GL_RGBA8";
        case GL_RGBA8_SNORM:
            return "GL_RGBA8_SNORM";
        case GL_RGBA8I:
            return "GL_RGBA8I";
        case GL_RGBA8UI:
            return "GL_RGBA8UI";
        case GL_SHORT:
            return "GL_SHORT";
        case GL_SRGB:
            return "GL_SRGB";
        case GL_SRGB_ALPHA_EXT:
            return "GL_SRGB_ALPHA_EXT";
        case GL_SRGB8:
            return "GL_SRGB8";
        case GL_SRGB8_ALPHA8:
            return "GL_SRGB8_ALPHA8";
        case GL_STENCIL:
            return "GL_STENCIL";
        case GL_STENCIL_INDEX8:
            return "GL_STENCIL_INDEX8";
        case GL_UNSIGNED_BYTE:
            return "GL_UNSIGNED_BYTE";
        case GL_UNSIGNED_INT:
            return "GL_UNSIGNED_INT";
        case GL_UNSIGNED_INT_10F_11F_11F_REV:
            return "GL_UNSIGNED_INT_10F_11F_11F_REV";
        case GL_UNSIGNED_INT_2_10_10_10_REV:
            return "GL_UNSIGNED_INT_2_10_10_10_REV";
        case GL_UNSIGNED_INT_24_8:
            return "GL_UNSIGNED_INT_24_8";
        case GL_UNSIGNED_INT_5_9_9_9_REV:
            return "GL_UNSIGNED_INT_5_9_9_9_REV";
        case GL_UNSIGNED_SHORT:
            return "GL_UNSIGNED_SHORT";
        case GL_UNSIGNED_SHORT_1_5_5_5_REV_EXT:
            return "GL_UNSIGNED_SHORT_1_5_5_5_REV_EXT";
        case GL_UNSIGNED_SHORT_4_4_4_4:
            return "GL_UNSIGNED_SHORT_4_4_4_4";
        case GL_UNSIGNED_SHORT_4_4_4_4_REV_EXT:
            return "GL_UNSIGNED_SHORT_4_4_4_4_REV_EXT";
        case GL_UNSIGNED_SHORT_5_5_5_1:
            return "GL_UNSIGNED_SHORT_5_5_5_1";
        case GL_UNSIGNED_SHORT_5_6_5:
            return "GL_UNSIGNED_SHORT_5_6_5";
        default:
            return kUnknownGLenumString;
    }
}

}  // namespace gl
