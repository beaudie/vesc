// GENERATED FILE - DO NOT EDIT.
// Generated by gen_builtin_symbols.py using data from builtin_variables.json and
// builtin_function_declarations.txt.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// SymbolTable_autogen.cpp:
//   Compile-time initialized built-ins.

#include "compiler/translator/SymbolTable.h"

#include "angle_gl.h"
#include "compiler/translator/ImmutableString.h"
#include "compiler/translator/StaticType.h"
#include "compiler/translator/Symbol.h"
#include "compiler/translator/SymbolTable.h"
#include "compiler/translator/SymbolUniqueId.h"

namespace sh
{

class BuiltInId
{
  public:
    static constexpr const TSymbolUniqueId radians_0B                       = TSymbolUniqueId(0);
    static constexpr const TSymbolUniqueId pt0B                             = TSymbolUniqueId(1);
    static constexpr const TSymbolUniqueId radians_1B                       = TSymbolUniqueId(2);
    static constexpr const TSymbolUniqueId pt1B                             = TSymbolUniqueId(3);
    static constexpr const TSymbolUniqueId radians_2B                       = TSymbolUniqueId(4);
    static constexpr const TSymbolUniqueId pt2B                             = TSymbolUniqueId(5);
    static constexpr const TSymbolUniqueId radians_3B                       = TSymbolUniqueId(6);
    static constexpr const TSymbolUniqueId pt3B                             = TSymbolUniqueId(7);
    static constexpr const TSymbolUniqueId degrees_0B                       = TSymbolUniqueId(8);
    static constexpr const TSymbolUniqueId degrees_1B                       = TSymbolUniqueId(9);
    static constexpr const TSymbolUniqueId degrees_2B                       = TSymbolUniqueId(10);
    static constexpr const TSymbolUniqueId degrees_3B                       = TSymbolUniqueId(11);
    static constexpr const TSymbolUniqueId sin_0B                           = TSymbolUniqueId(12);
    static constexpr const TSymbolUniqueId sin_1B                           = TSymbolUniqueId(13);
    static constexpr const TSymbolUniqueId sin_2B                           = TSymbolUniqueId(14);
    static constexpr const TSymbolUniqueId sin_3B                           = TSymbolUniqueId(15);
    static constexpr const TSymbolUniqueId cos_0B                           = TSymbolUniqueId(16);
    static constexpr const TSymbolUniqueId cos_1B                           = TSymbolUniqueId(17);
    static constexpr const TSymbolUniqueId cos_2B                           = TSymbolUniqueId(18);
    static constexpr const TSymbolUniqueId cos_3B                           = TSymbolUniqueId(19);
    static constexpr const TSymbolUniqueId tan_0B                           = TSymbolUniqueId(20);
    static constexpr const TSymbolUniqueId tan_1B                           = TSymbolUniqueId(21);
    static constexpr const TSymbolUniqueId tan_2B                           = TSymbolUniqueId(22);
    static constexpr const TSymbolUniqueId tan_3B                           = TSymbolUniqueId(23);
    static constexpr const TSymbolUniqueId asin_0B                          = TSymbolUniqueId(24);
    static constexpr const TSymbolUniqueId asin_1B                          = TSymbolUniqueId(25);
    static constexpr const TSymbolUniqueId asin_2B                          = TSymbolUniqueId(26);
    static constexpr const TSymbolUniqueId asin_3B                          = TSymbolUniqueId(27);
    static constexpr const TSymbolUniqueId acos_0B                          = TSymbolUniqueId(28);
    static constexpr const TSymbolUniqueId acos_1B                          = TSymbolUniqueId(29);
    static constexpr const TSymbolUniqueId acos_2B                          = TSymbolUniqueId(30);
    static constexpr const TSymbolUniqueId acos_3B                          = TSymbolUniqueId(31);
    static constexpr const TSymbolUniqueId atan_0B0B                        = TSymbolUniqueId(32);
    static constexpr const TSymbolUniqueId atan_1B1B                        = TSymbolUniqueId(33);
    static constexpr const TSymbolUniqueId atan_2B2B                        = TSymbolUniqueId(34);
    static constexpr const TSymbolUniqueId atan_3B3B                        = TSymbolUniqueId(35);
    static constexpr const TSymbolUniqueId atan_0B                          = TSymbolUniqueId(36);
    static constexpr const TSymbolUniqueId atan_1B                          = TSymbolUniqueId(37);
    static constexpr const TSymbolUniqueId atan_2B                          = TSymbolUniqueId(38);
    static constexpr const TSymbolUniqueId atan_3B                          = TSymbolUniqueId(39);
    static constexpr const TSymbolUniqueId sinh_0B                          = TSymbolUniqueId(40);
    static constexpr const TSymbolUniqueId sinh_1B                          = TSymbolUniqueId(41);
    static constexpr const TSymbolUniqueId sinh_2B                          = TSymbolUniqueId(42);
    static constexpr const TSymbolUniqueId sinh_3B                          = TSymbolUniqueId(43);
    static constexpr const TSymbolUniqueId cosh_0B                          = TSymbolUniqueId(44);
    static constexpr const TSymbolUniqueId cosh_1B                          = TSymbolUniqueId(45);
    static constexpr const TSymbolUniqueId cosh_2B                          = TSymbolUniqueId(46);
    static constexpr const TSymbolUniqueId cosh_3B                          = TSymbolUniqueId(47);
    static constexpr const TSymbolUniqueId tanh_0B                          = TSymbolUniqueId(48);
    static constexpr const TSymbolUniqueId tanh_1B                          = TSymbolUniqueId(49);
    static constexpr const TSymbolUniqueId tanh_2B                          = TSymbolUniqueId(50);
    static constexpr const TSymbolUniqueId tanh_3B                          = TSymbolUniqueId(51);
    static constexpr const TSymbolUniqueId asinh_0B                         = TSymbolUniqueId(52);
    static constexpr const TSymbolUniqueId asinh_1B                         = TSymbolUniqueId(53);
    static constexpr const TSymbolUniqueId asinh_2B                         = TSymbolUniqueId(54);
    static constexpr const TSymbolUniqueId asinh_3B                         = TSymbolUniqueId(55);
    static constexpr const TSymbolUniqueId acosh_0B                         = TSymbolUniqueId(56);
    static constexpr const TSymbolUniqueId acosh_1B                         = TSymbolUniqueId(57);
    static constexpr const TSymbolUniqueId acosh_2B                         = TSymbolUniqueId(58);
    static constexpr const TSymbolUniqueId acosh_3B                         = TSymbolUniqueId(59);
    static constexpr const TSymbolUniqueId atanh_0B                         = TSymbolUniqueId(60);
    static constexpr const TSymbolUniqueId atanh_1B                         = TSymbolUniqueId(61);
    static constexpr const TSymbolUniqueId atanh_2B                         = TSymbolUniqueId(62);
    static constexpr const TSymbolUniqueId atanh_3B                         = TSymbolUniqueId(63);
    static constexpr const TSymbolUniqueId pow_0B0B                         = TSymbolUniqueId(64);
    static constexpr const TSymbolUniqueId pow_1B1B                         = TSymbolUniqueId(65);
    static constexpr const TSymbolUniqueId pow_2B2B                         = TSymbolUniqueId(66);
    static constexpr const TSymbolUniqueId pow_3B3B                         = TSymbolUniqueId(67);
    static constexpr const TSymbolUniqueId exp_0B                           = TSymbolUniqueId(68);
    static constexpr const TSymbolUniqueId exp_1B                           = TSymbolUniqueId(69);
    static constexpr const TSymbolUniqueId exp_2B                           = TSymbolUniqueId(70);
    static constexpr const TSymbolUniqueId exp_3B                           = TSymbolUniqueId(71);
    static constexpr const TSymbolUniqueId log_0B                           = TSymbolUniqueId(72);
    static constexpr const TSymbolUniqueId log_1B                           = TSymbolUniqueId(73);
    static constexpr const TSymbolUniqueId log_2B                           = TSymbolUniqueId(74);
    static constexpr const TSymbolUniqueId log_3B                           = TSymbolUniqueId(75);
    static constexpr const TSymbolUniqueId exp2_0B                          = TSymbolUniqueId(76);
    static constexpr const TSymbolUniqueId exp2_1B                          = TSymbolUniqueId(77);
    static constexpr const TSymbolUniqueId exp2_2B                          = TSymbolUniqueId(78);
    static constexpr const TSymbolUniqueId exp2_3B                          = TSymbolUniqueId(79);
    static constexpr const TSymbolUniqueId log2_0B                          = TSymbolUniqueId(80);
    static constexpr const TSymbolUniqueId log2_1B                          = TSymbolUniqueId(81);
    static constexpr const TSymbolUniqueId log2_2B                          = TSymbolUniqueId(82);
    static constexpr const TSymbolUniqueId log2_3B                          = TSymbolUniqueId(83);
    static constexpr const TSymbolUniqueId sqrt_0B                          = TSymbolUniqueId(84);
    static constexpr const TSymbolUniqueId sqrt_1B                          = TSymbolUniqueId(85);
    static constexpr const TSymbolUniqueId sqrt_2B                          = TSymbolUniqueId(86);
    static constexpr const TSymbolUniqueId sqrt_3B                          = TSymbolUniqueId(87);
    static constexpr const TSymbolUniqueId inversesqrt_0B                   = TSymbolUniqueId(88);
    static constexpr const TSymbolUniqueId inversesqrt_1B                   = TSymbolUniqueId(89);
    static constexpr const TSymbolUniqueId inversesqrt_2B                   = TSymbolUniqueId(90);
    static constexpr const TSymbolUniqueId inversesqrt_3B                   = TSymbolUniqueId(91);
    static constexpr const TSymbolUniqueId abs_0B                           = TSymbolUniqueId(92);
    static constexpr const TSymbolUniqueId abs_1B                           = TSymbolUniqueId(93);
    static constexpr const TSymbolUniqueId abs_2B                           = TSymbolUniqueId(94);
    static constexpr const TSymbolUniqueId abs_3B                           = TSymbolUniqueId(95);
    static constexpr const TSymbolUniqueId abs_0C                           = TSymbolUniqueId(96);
    static constexpr const TSymbolUniqueId pt0C                             = TSymbolUniqueId(97);
    static constexpr const TSymbolUniqueId abs_1C                           = TSymbolUniqueId(98);
    static constexpr const TSymbolUniqueId pt1C                             = TSymbolUniqueId(99);
    static constexpr const TSymbolUniqueId abs_2C                           = TSymbolUniqueId(100);
    static constexpr const TSymbolUniqueId pt2C                             = TSymbolUniqueId(101);
    static constexpr const TSymbolUniqueId abs_3C                           = TSymbolUniqueId(102);
    static constexpr const TSymbolUniqueId pt3C                             = TSymbolUniqueId(103);
    static constexpr const TSymbolUniqueId sign_0B                          = TSymbolUniqueId(104);
    static constexpr const TSymbolUniqueId sign_1B                          = TSymbolUniqueId(105);
    static constexpr const TSymbolUniqueId sign_2B                          = TSymbolUniqueId(106);
    static constexpr const TSymbolUniqueId sign_3B                          = TSymbolUniqueId(107);
    static constexpr const TSymbolUniqueId sign_0C                          = TSymbolUniqueId(108);
    static constexpr const TSymbolUniqueId sign_1C                          = TSymbolUniqueId(109);
    static constexpr const TSymbolUniqueId sign_2C                          = TSymbolUniqueId(110);
    static constexpr const TSymbolUniqueId sign_3C                          = TSymbolUniqueId(111);
    static constexpr const TSymbolUniqueId floor_0B                         = TSymbolUniqueId(112);
    static constexpr const TSymbolUniqueId floor_1B                         = TSymbolUniqueId(113);
    static constexpr const TSymbolUniqueId floor_2B                         = TSymbolUniqueId(114);
    static constexpr const TSymbolUniqueId floor_3B                         = TSymbolUniqueId(115);
    static constexpr const TSymbolUniqueId trunc_0B                         = TSymbolUniqueId(116);
    static constexpr const TSymbolUniqueId trunc_1B                         = TSymbolUniqueId(117);
    static constexpr const TSymbolUniqueId trunc_2B                         = TSymbolUniqueId(118);
    static constexpr const TSymbolUniqueId trunc_3B                         = TSymbolUniqueId(119);
    static constexpr const TSymbolUniqueId round_0B                         = TSymbolUniqueId(120);
    static constexpr const TSymbolUniqueId round_1B                         = TSymbolUniqueId(121);
    static constexpr const TSymbolUniqueId round_2B                         = TSymbolUniqueId(122);
    static constexpr const TSymbolUniqueId round_3B                         = TSymbolUniqueId(123);
    static constexpr const TSymbolUniqueId roundEven_0B                     = TSymbolUniqueId(124);
    static constexpr const TSymbolUniqueId roundEven_1B                     = TSymbolUniqueId(125);
    static constexpr const TSymbolUniqueId roundEven_2B                     = TSymbolUniqueId(126);
    static constexpr const TSymbolUniqueId roundEven_3B                     = TSymbolUniqueId(127);
    static constexpr const TSymbolUniqueId ceil_0B                          = TSymbolUniqueId(128);
    static constexpr const TSymbolUniqueId ceil_1B                          = TSymbolUniqueId(129);
    static constexpr const TSymbolUniqueId ceil_2B                          = TSymbolUniqueId(130);
    static constexpr const TSymbolUniqueId ceil_3B                          = TSymbolUniqueId(131);
    static constexpr const TSymbolUniqueId fract_0B                         = TSymbolUniqueId(132);
    static constexpr const TSymbolUniqueId fract_1B                         = TSymbolUniqueId(133);
    static constexpr const TSymbolUniqueId fract_2B                         = TSymbolUniqueId(134);
    static constexpr const TSymbolUniqueId fract_3B                         = TSymbolUniqueId(135);
    static constexpr const TSymbolUniqueId mod_0B0B                         = TSymbolUniqueId(136);
    static constexpr const TSymbolUniqueId mod_1B0B                         = TSymbolUniqueId(137);
    static constexpr const TSymbolUniqueId mod_2B0B                         = TSymbolUniqueId(138);
    static constexpr const TSymbolUniqueId mod_3B0B                         = TSymbolUniqueId(139);
    static constexpr const TSymbolUniqueId mod_1B1B                         = TSymbolUniqueId(140);
    static constexpr const TSymbolUniqueId mod_2B2B                         = TSymbolUniqueId(141);
    static constexpr const TSymbolUniqueId mod_3B3B                         = TSymbolUniqueId(142);
    static constexpr const TSymbolUniqueId min_0B0B                         = TSymbolUniqueId(143);
    static constexpr const TSymbolUniqueId min_1B0B                         = TSymbolUniqueId(144);
    static constexpr const TSymbolUniqueId min_2B0B                         = TSymbolUniqueId(145);
    static constexpr const TSymbolUniqueId min_3B0B                         = TSymbolUniqueId(146);
    static constexpr const TSymbolUniqueId min_1B1B                         = TSymbolUniqueId(147);
    static constexpr const TSymbolUniqueId min_2B2B                         = TSymbolUniqueId(148);
    static constexpr const TSymbolUniqueId min_3B3B                         = TSymbolUniqueId(149);
    static constexpr const TSymbolUniqueId min_0C0C                         = TSymbolUniqueId(150);
    static constexpr const TSymbolUniqueId min_1C1C                         = TSymbolUniqueId(151);
    static constexpr const TSymbolUniqueId min_2C2C                         = TSymbolUniqueId(152);
    static constexpr const TSymbolUniqueId min_3C3C                         = TSymbolUniqueId(153);
    static constexpr const TSymbolUniqueId min_1C0C                         = TSymbolUniqueId(154);
    static constexpr const TSymbolUniqueId min_2C0C                         = TSymbolUniqueId(155);
    static constexpr const TSymbolUniqueId min_3C0C                         = TSymbolUniqueId(156);
    static constexpr const TSymbolUniqueId min_0D0D                         = TSymbolUniqueId(157);
    static constexpr const TSymbolUniqueId pt0D                             = TSymbolUniqueId(158);
    static constexpr const TSymbolUniqueId min_1D1D                         = TSymbolUniqueId(159);
    static constexpr const TSymbolUniqueId pt1D                             = TSymbolUniqueId(160);
    static constexpr const TSymbolUniqueId min_2D2D                         = TSymbolUniqueId(161);
    static constexpr const TSymbolUniqueId pt2D                             = TSymbolUniqueId(162);
    static constexpr const TSymbolUniqueId min_3D3D                         = TSymbolUniqueId(163);
    static constexpr const TSymbolUniqueId pt3D                             = TSymbolUniqueId(164);
    static constexpr const TSymbolUniqueId min_1D0D                         = TSymbolUniqueId(165);
    static constexpr const TSymbolUniqueId min_2D0D                         = TSymbolUniqueId(166);
    static constexpr const TSymbolUniqueId min_3D0D                         = TSymbolUniqueId(167);
    static constexpr const TSymbolUniqueId max_0B0B                         = TSymbolUniqueId(168);
    static constexpr const TSymbolUniqueId max_1B0B                         = TSymbolUniqueId(169);
    static constexpr const TSymbolUniqueId max_2B0B                         = TSymbolUniqueId(170);
    static constexpr const TSymbolUniqueId max_3B0B                         = TSymbolUniqueId(171);
    static constexpr const TSymbolUniqueId max_1B1B                         = TSymbolUniqueId(172);
    static constexpr const TSymbolUniqueId max_2B2B                         = TSymbolUniqueId(173);
    static constexpr const TSymbolUniqueId max_3B3B                         = TSymbolUniqueId(174);
    static constexpr const TSymbolUniqueId max_0C0C                         = TSymbolUniqueId(175);
    static constexpr const TSymbolUniqueId max_1C1C                         = TSymbolUniqueId(176);
    static constexpr const TSymbolUniqueId max_2C2C                         = TSymbolUniqueId(177);
    static constexpr const TSymbolUniqueId max_3C3C                         = TSymbolUniqueId(178);
    static constexpr const TSymbolUniqueId max_1C0C                         = TSymbolUniqueId(179);
    static constexpr const TSymbolUniqueId max_2C0C                         = TSymbolUniqueId(180);
    static constexpr const TSymbolUniqueId max_3C0C                         = TSymbolUniqueId(181);
    static constexpr const TSymbolUniqueId max_0D0D                         = TSymbolUniqueId(182);
    static constexpr const TSymbolUniqueId max_1D1D                         = TSymbolUniqueId(183);
    static constexpr const TSymbolUniqueId max_2D2D                         = TSymbolUniqueId(184);
    static constexpr const TSymbolUniqueId max_3D3D                         = TSymbolUniqueId(185);
    static constexpr const TSymbolUniqueId max_1D0D                         = TSymbolUniqueId(186);
    static constexpr const TSymbolUniqueId max_2D0D                         = TSymbolUniqueId(187);
    static constexpr const TSymbolUniqueId max_3D0D                         = TSymbolUniqueId(188);
    static constexpr const TSymbolUniqueId clamp_0B0B0B                     = TSymbolUniqueId(189);
    static constexpr const TSymbolUniqueId clamp_1B0B0B                     = TSymbolUniqueId(190);
    static constexpr const TSymbolUniqueId clamp_2B0B0B                     = TSymbolUniqueId(191);
    static constexpr const TSymbolUniqueId clamp_3B0B0B                     = TSymbolUniqueId(192);
    static constexpr const TSymbolUniqueId clamp_1B1B1B                     = TSymbolUniqueId(193);
    static constexpr const TSymbolUniqueId clamp_2B2B2B                     = TSymbolUniqueId(194);
    static constexpr const TSymbolUniqueId clamp_3B3B3B                     = TSymbolUniqueId(195);
    static constexpr const TSymbolUniqueId clamp_0C0C0C                     = TSymbolUniqueId(196);
    static constexpr const TSymbolUniqueId clamp_1C0C0C                     = TSymbolUniqueId(197);
    static constexpr const TSymbolUniqueId clamp_2C0C0C                     = TSymbolUniqueId(198);
    static constexpr const TSymbolUniqueId clamp_3C0C0C                     = TSymbolUniqueId(199);
    static constexpr const TSymbolUniqueId clamp_1C1C1C                     = TSymbolUniqueId(200);
    static constexpr const TSymbolUniqueId clamp_2C2C2C                     = TSymbolUniqueId(201);
    static constexpr const TSymbolUniqueId clamp_3C3C3C                     = TSymbolUniqueId(202);
    static constexpr const TSymbolUniqueId clamp_0D0D0D                     = TSymbolUniqueId(203);
    static constexpr const TSymbolUniqueId clamp_1D0D0D                     = TSymbolUniqueId(204);
    static constexpr const TSymbolUniqueId clamp_2D0D0D                     = TSymbolUniqueId(205);
    static constexpr const TSymbolUniqueId clamp_3D0D0D                     = TSymbolUniqueId(206);
    static constexpr const TSymbolUniqueId clamp_1D1D1D                     = TSymbolUniqueId(207);
    static constexpr const TSymbolUniqueId clamp_2D2D2D                     = TSymbolUniqueId(208);
    static constexpr const TSymbolUniqueId clamp_3D3D3D                     = TSymbolUniqueId(209);
    static constexpr const TSymbolUniqueId mix_0B0B0B                       = TSymbolUniqueId(210);
    static constexpr const TSymbolUniqueId mix_1B1B0B                       = TSymbolUniqueId(211);
    static constexpr const TSymbolUniqueId mix_2B2B0B                       = TSymbolUniqueId(212);
    static constexpr const TSymbolUniqueId mix_3B3B0B                       = TSymbolUniqueId(213);
    static constexpr const TSymbolUniqueId mix_1B1B1B                       = TSymbolUniqueId(214);
    static constexpr const TSymbolUniqueId mix_2B2B2B                       = TSymbolUniqueId(215);
    static constexpr const TSymbolUniqueId mix_3B3B3B                       = TSymbolUniqueId(216);
    static constexpr const TSymbolUniqueId mix_0B0B0E                       = TSymbolUniqueId(217);
    static constexpr const TSymbolUniqueId pt0E                             = TSymbolUniqueId(218);
    static constexpr const TSymbolUniqueId mix_1B1B1E                       = TSymbolUniqueId(219);
    static constexpr const TSymbolUniqueId pt1E                             = TSymbolUniqueId(220);
    static constexpr const TSymbolUniqueId mix_2B2B2E                       = TSymbolUniqueId(221);
    static constexpr const TSymbolUniqueId pt2E                             = TSymbolUniqueId(222);
    static constexpr const TSymbolUniqueId mix_3B3B3E                       = TSymbolUniqueId(223);
    static constexpr const TSymbolUniqueId pt3E                             = TSymbolUniqueId(224);
    static constexpr const TSymbolUniqueId step_0B0B                        = TSymbolUniqueId(225);
    static constexpr const TSymbolUniqueId step_1B1B                        = TSymbolUniqueId(226);
    static constexpr const TSymbolUniqueId step_2B2B                        = TSymbolUniqueId(227);
    static constexpr const TSymbolUniqueId step_3B3B                        = TSymbolUniqueId(228);
    static constexpr const TSymbolUniqueId step_0B1B                        = TSymbolUniqueId(229);
    static constexpr const TSymbolUniqueId step_0B2B                        = TSymbolUniqueId(230);
    static constexpr const TSymbolUniqueId step_0B3B                        = TSymbolUniqueId(231);
    static constexpr const TSymbolUniqueId smoothstep_0B0B0B                = TSymbolUniqueId(232);
    static constexpr const TSymbolUniqueId smoothstep_1B1B1B                = TSymbolUniqueId(233);
    static constexpr const TSymbolUniqueId smoothstep_2B2B2B                = TSymbolUniqueId(234);
    static constexpr const TSymbolUniqueId smoothstep_3B3B3B                = TSymbolUniqueId(235);
    static constexpr const TSymbolUniqueId smoothstep_0B0B1B                = TSymbolUniqueId(236);
    static constexpr const TSymbolUniqueId smoothstep_0B0B2B                = TSymbolUniqueId(237);
    static constexpr const TSymbolUniqueId smoothstep_0B0B3B                = TSymbolUniqueId(238);
    static constexpr const TSymbolUniqueId modf_0B0B                        = TSymbolUniqueId(239);
    static constexpr const TSymbolUniqueId pt_o_0B                          = TSymbolUniqueId(240);
    static constexpr const TSymbolUniqueId modf_1B1B                        = TSymbolUniqueId(241);
    static constexpr const TSymbolUniqueId pt_o_1B                          = TSymbolUniqueId(242);
    static constexpr const TSymbolUniqueId modf_2B2B                        = TSymbolUniqueId(243);
    static constexpr const TSymbolUniqueId pt_o_2B                          = TSymbolUniqueId(244);
    static constexpr const TSymbolUniqueId modf_3B3B                        = TSymbolUniqueId(245);
    static constexpr const TSymbolUniqueId pt_o_3B                          = TSymbolUniqueId(246);
    static constexpr const TSymbolUniqueId isnan_0B                         = TSymbolUniqueId(247);
    static constexpr const TSymbolUniqueId isnan_1B                         = TSymbolUniqueId(248);
    static constexpr const TSymbolUniqueId isnan_2B                         = TSymbolUniqueId(249);
    static constexpr const TSymbolUniqueId isnan_3B                         = TSymbolUniqueId(250);
    static constexpr const TSymbolUniqueId isinf_0B                         = TSymbolUniqueId(251);
    static constexpr const TSymbolUniqueId isinf_1B                         = TSymbolUniqueId(252);
    static constexpr const TSymbolUniqueId isinf_2B                         = TSymbolUniqueId(253);
    static constexpr const TSymbolUniqueId isinf_3B                         = TSymbolUniqueId(254);
    static constexpr const TSymbolUniqueId floatBitsToInt_0B                = TSymbolUniqueId(255);
    static constexpr const TSymbolUniqueId floatBitsToInt_1B                = TSymbolUniqueId(256);
    static constexpr const TSymbolUniqueId floatBitsToInt_2B                = TSymbolUniqueId(257);
    static constexpr const TSymbolUniqueId floatBitsToInt_3B                = TSymbolUniqueId(258);
    static constexpr const TSymbolUniqueId floatBitsToUint_0B               = TSymbolUniqueId(259);
    static constexpr const TSymbolUniqueId floatBitsToUint_1B               = TSymbolUniqueId(260);
    static constexpr const TSymbolUniqueId floatBitsToUint_2B               = TSymbolUniqueId(261);
    static constexpr const TSymbolUniqueId floatBitsToUint_3B               = TSymbolUniqueId(262);
    static constexpr const TSymbolUniqueId intBitsToFloat_0C                = TSymbolUniqueId(263);
    static constexpr const TSymbolUniqueId intBitsToFloat_1C                = TSymbolUniqueId(264);
    static constexpr const TSymbolUniqueId intBitsToFloat_2C                = TSymbolUniqueId(265);
    static constexpr const TSymbolUniqueId intBitsToFloat_3C                = TSymbolUniqueId(266);
    static constexpr const TSymbolUniqueId uintBitsToFloat_0D               = TSymbolUniqueId(267);
    static constexpr const TSymbolUniqueId uintBitsToFloat_1D               = TSymbolUniqueId(268);
    static constexpr const TSymbolUniqueId uintBitsToFloat_2D               = TSymbolUniqueId(269);
    static constexpr const TSymbolUniqueId uintBitsToFloat_3D               = TSymbolUniqueId(270);
    static constexpr const TSymbolUniqueId frexp_0B0C                       = TSymbolUniqueId(271);
    static constexpr const TSymbolUniqueId pt_o_0C                          = TSymbolUniqueId(272);
    static constexpr const TSymbolUniqueId frexp_1B1C                       = TSymbolUniqueId(273);
    static constexpr const TSymbolUniqueId pt_o_1C                          = TSymbolUniqueId(274);
    static constexpr const TSymbolUniqueId frexp_2B2C                       = TSymbolUniqueId(275);
    static constexpr const TSymbolUniqueId pt_o_2C                          = TSymbolUniqueId(276);
    static constexpr const TSymbolUniqueId frexp_3B3C                       = TSymbolUniqueId(277);
    static constexpr const TSymbolUniqueId pt_o_3C                          = TSymbolUniqueId(278);
    static constexpr const TSymbolUniqueId ldexp_0B0C                       = TSymbolUniqueId(279);
    static constexpr const TSymbolUniqueId ldexp_1B1C                       = TSymbolUniqueId(280);
    static constexpr const TSymbolUniqueId ldexp_2B2C                       = TSymbolUniqueId(281);
    static constexpr const TSymbolUniqueId ldexp_3B3C                       = TSymbolUniqueId(282);
    static constexpr const TSymbolUniqueId packSnorm2x16_1B                 = TSymbolUniqueId(283);
    static constexpr const TSymbolUniqueId packUnorm2x16_1B                 = TSymbolUniqueId(284);
    static constexpr const TSymbolUniqueId packHalf2x16_1B                  = TSymbolUniqueId(285);
    static constexpr const TSymbolUniqueId unpackSnorm2x16_0D               = TSymbolUniqueId(286);
    static constexpr const TSymbolUniqueId unpackUnorm2x16_0D               = TSymbolUniqueId(287);
    static constexpr const TSymbolUniqueId unpackHalf2x16_0D                = TSymbolUniqueId(288);
    static constexpr const TSymbolUniqueId packUnorm4x8_3B                  = TSymbolUniqueId(289);
    static constexpr const TSymbolUniqueId packSnorm4x8_3B                  = TSymbolUniqueId(290);
    static constexpr const TSymbolUniqueId unpackUnorm4x8_0D                = TSymbolUniqueId(291);
    static constexpr const TSymbolUniqueId unpackSnorm4x8_0D                = TSymbolUniqueId(292);
    static constexpr const TSymbolUniqueId length_0B                        = TSymbolUniqueId(293);
    static constexpr const TSymbolUniqueId length_1B                        = TSymbolUniqueId(294);
    static constexpr const TSymbolUniqueId length_2B                        = TSymbolUniqueId(295);
    static constexpr const TSymbolUniqueId length_3B                        = TSymbolUniqueId(296);
    static constexpr const TSymbolUniqueId distance_0B0B                    = TSymbolUniqueId(297);
    static constexpr const TSymbolUniqueId distance_1B1B                    = TSymbolUniqueId(298);
    static constexpr const TSymbolUniqueId distance_2B2B                    = TSymbolUniqueId(299);
    static constexpr const TSymbolUniqueId distance_3B3B                    = TSymbolUniqueId(300);
    static constexpr const TSymbolUniqueId dot_0B0B                         = TSymbolUniqueId(301);
    static constexpr const TSymbolUniqueId dot_1B1B                         = TSymbolUniqueId(302);
    static constexpr const TSymbolUniqueId dot_2B2B                         = TSymbolUniqueId(303);
    static constexpr const TSymbolUniqueId dot_3B3B                         = TSymbolUniqueId(304);
    static constexpr const TSymbolUniqueId cross_2B2B                       = TSymbolUniqueId(305);
    static constexpr const TSymbolUniqueId normalize_0B                     = TSymbolUniqueId(306);
    static constexpr const TSymbolUniqueId normalize_1B                     = TSymbolUniqueId(307);
    static constexpr const TSymbolUniqueId normalize_2B                     = TSymbolUniqueId(308);
    static constexpr const TSymbolUniqueId normalize_3B                     = TSymbolUniqueId(309);
    static constexpr const TSymbolUniqueId faceforward_0B0B0B               = TSymbolUniqueId(310);
    static constexpr const TSymbolUniqueId faceforward_1B1B1B               = TSymbolUniqueId(311);
    static constexpr const TSymbolUniqueId faceforward_2B2B2B               = TSymbolUniqueId(312);
    static constexpr const TSymbolUniqueId faceforward_3B3B3B               = TSymbolUniqueId(313);
    static constexpr const TSymbolUniqueId reflect_0B0B                     = TSymbolUniqueId(314);
    static constexpr const TSymbolUniqueId reflect_1B1B                     = TSymbolUniqueId(315);
    static constexpr const TSymbolUniqueId reflect_2B2B                     = TSymbolUniqueId(316);
    static constexpr const TSymbolUniqueId reflect_3B3B                     = TSymbolUniqueId(317);
    static constexpr const TSymbolUniqueId refract_0B0B0B                   = TSymbolUniqueId(318);
    static constexpr const TSymbolUniqueId refract_1B1B0B                   = TSymbolUniqueId(319);
    static constexpr const TSymbolUniqueId refract_2B2B0B                   = TSymbolUniqueId(320);
    static constexpr const TSymbolUniqueId refract_3B3B0B                   = TSymbolUniqueId(321);
    static constexpr const TSymbolUniqueId matrixCompMult_5B5B              = TSymbolUniqueId(322);
    static constexpr const TSymbolUniqueId pt5B                             = TSymbolUniqueId(323);
    static constexpr const TSymbolUniqueId matrixCompMult_ABAB              = TSymbolUniqueId(324);
    static constexpr const TSymbolUniqueId ptAB                             = TSymbolUniqueId(325);
    static constexpr const TSymbolUniqueId matrixCompMult_FBFB              = TSymbolUniqueId(326);
    static constexpr const TSymbolUniqueId ptFB                             = TSymbolUniqueId(327);
    static constexpr const TSymbolUniqueId matrixCompMult_9B9B              = TSymbolUniqueId(328);
    static constexpr const TSymbolUniqueId pt9B                             = TSymbolUniqueId(329);
    static constexpr const TSymbolUniqueId matrixCompMult_6B6B              = TSymbolUniqueId(330);
    static constexpr const TSymbolUniqueId pt6B                             = TSymbolUniqueId(331);
    static constexpr const TSymbolUniqueId matrixCompMult_DBDB              = TSymbolUniqueId(332);
    static constexpr const TSymbolUniqueId ptDB                             = TSymbolUniqueId(333);
    static constexpr const TSymbolUniqueId matrixCompMult_7B7B              = TSymbolUniqueId(334);
    static constexpr const TSymbolUniqueId pt7B                             = TSymbolUniqueId(335);
    static constexpr const TSymbolUniqueId matrixCompMult_EBEB              = TSymbolUniqueId(336);
    static constexpr const TSymbolUniqueId ptEB                             = TSymbolUniqueId(337);
    static constexpr const TSymbolUniqueId matrixCompMult_BBBB              = TSymbolUniqueId(338);
    static constexpr const TSymbolUniqueId ptBB                             = TSymbolUniqueId(339);
    static constexpr const TSymbolUniqueId outerProduct_1B1B                = TSymbolUniqueId(340);
    static constexpr const TSymbolUniqueId outerProduct_2B2B                = TSymbolUniqueId(341);
    static constexpr const TSymbolUniqueId outerProduct_3B3B                = TSymbolUniqueId(342);
    static constexpr const TSymbolUniqueId outerProduct_2B1B                = TSymbolUniqueId(343);
    static constexpr const TSymbolUniqueId outerProduct_1B2B                = TSymbolUniqueId(344);
    static constexpr const TSymbolUniqueId outerProduct_3B1B                = TSymbolUniqueId(345);
    static constexpr const TSymbolUniqueId outerProduct_1B3B                = TSymbolUniqueId(346);
    static constexpr const TSymbolUniqueId outerProduct_3B2B                = TSymbolUniqueId(347);
    static constexpr const TSymbolUniqueId outerProduct_2B3B                = TSymbolUniqueId(348);
    static constexpr const TSymbolUniqueId transpose_5B                     = TSymbolUniqueId(349);
    static constexpr const TSymbolUniqueId transpose_AB                     = TSymbolUniqueId(350);
    static constexpr const TSymbolUniqueId transpose_FB                     = TSymbolUniqueId(351);
    static constexpr const TSymbolUniqueId transpose_6B                     = TSymbolUniqueId(352);
    static constexpr const TSymbolUniqueId transpose_9B                     = TSymbolUniqueId(353);
    static constexpr const TSymbolUniqueId transpose_7B                     = TSymbolUniqueId(354);
    static constexpr const TSymbolUniqueId transpose_DB                     = TSymbolUniqueId(355);
    static constexpr const TSymbolUniqueId transpose_BB                     = TSymbolUniqueId(356);
    static constexpr const TSymbolUniqueId transpose_EB                     = TSymbolUniqueId(357);
    static constexpr const TSymbolUniqueId determinant_5B                   = TSymbolUniqueId(358);
    static constexpr const TSymbolUniqueId determinant_AB                   = TSymbolUniqueId(359);
    static constexpr const TSymbolUniqueId determinant_FB                   = TSymbolUniqueId(360);
    static constexpr const TSymbolUniqueId inverse_5B                       = TSymbolUniqueId(361);
    static constexpr const TSymbolUniqueId inverse_AB                       = TSymbolUniqueId(362);
    static constexpr const TSymbolUniqueId inverse_FB                       = TSymbolUniqueId(363);
    static constexpr const TSymbolUniqueId lessThan_1B1B                    = TSymbolUniqueId(364);
    static constexpr const TSymbolUniqueId lessThan_2B2B                    = TSymbolUniqueId(365);
    static constexpr const TSymbolUniqueId lessThan_3B3B                    = TSymbolUniqueId(366);
    static constexpr const TSymbolUniqueId lessThan_1C1C                    = TSymbolUniqueId(367);
    static constexpr const TSymbolUniqueId lessThan_2C2C                    = TSymbolUniqueId(368);
    static constexpr const TSymbolUniqueId lessThan_3C3C                    = TSymbolUniqueId(369);
    static constexpr const TSymbolUniqueId lessThan_1D1D                    = TSymbolUniqueId(370);
    static constexpr const TSymbolUniqueId lessThan_2D2D                    = TSymbolUniqueId(371);
    static constexpr const TSymbolUniqueId lessThan_3D3D                    = TSymbolUniqueId(372);
    static constexpr const TSymbolUniqueId lessThanEqual_1B1B               = TSymbolUniqueId(373);
    static constexpr const TSymbolUniqueId lessThanEqual_2B2B               = TSymbolUniqueId(374);
    static constexpr const TSymbolUniqueId lessThanEqual_3B3B               = TSymbolUniqueId(375);
    static constexpr const TSymbolUniqueId lessThanEqual_1C1C               = TSymbolUniqueId(376);
    static constexpr const TSymbolUniqueId lessThanEqual_2C2C               = TSymbolUniqueId(377);
    static constexpr const TSymbolUniqueId lessThanEqual_3C3C               = TSymbolUniqueId(378);
    static constexpr const TSymbolUniqueId lessThanEqual_1D1D               = TSymbolUniqueId(379);
    static constexpr const TSymbolUniqueId lessThanEqual_2D2D               = TSymbolUniqueId(380);
    static constexpr const TSymbolUniqueId lessThanEqual_3D3D               = TSymbolUniqueId(381);
    static constexpr const TSymbolUniqueId greaterThan_1B1B                 = TSymbolUniqueId(382);
    static constexpr const TSymbolUniqueId greaterThan_2B2B                 = TSymbolUniqueId(383);
    static constexpr const TSymbolUniqueId greaterThan_3B3B                 = TSymbolUniqueId(384);
    static constexpr const TSymbolUniqueId greaterThan_1C1C                 = TSymbolUniqueId(385);
    static constexpr const TSymbolUniqueId greaterThan_2C2C                 = TSymbolUniqueId(386);
    static constexpr const TSymbolUniqueId greaterThan_3C3C                 = TSymbolUniqueId(387);
    static constexpr const TSymbolUniqueId greaterThan_1D1D                 = TSymbolUniqueId(388);
    static constexpr const TSymbolUniqueId greaterThan_2D2D                 = TSymbolUniqueId(389);
    static constexpr const TSymbolUniqueId greaterThan_3D3D                 = TSymbolUniqueId(390);
    static constexpr const TSymbolUniqueId greaterThanEqual_1B1B            = TSymbolUniqueId(391);
    static constexpr const TSymbolUniqueId greaterThanEqual_2B2B            = TSymbolUniqueId(392);
    static constexpr const TSymbolUniqueId greaterThanEqual_3B3B            = TSymbolUniqueId(393);
    static constexpr const TSymbolUniqueId greaterThanEqual_1C1C            = TSymbolUniqueId(394);
    static constexpr const TSymbolUniqueId greaterThanEqual_2C2C            = TSymbolUniqueId(395);
    static constexpr const TSymbolUniqueId greaterThanEqual_3C3C            = TSymbolUniqueId(396);
    static constexpr const TSymbolUniqueId greaterThanEqual_1D1D            = TSymbolUniqueId(397);
    static constexpr const TSymbolUniqueId greaterThanEqual_2D2D            = TSymbolUniqueId(398);
    static constexpr const TSymbolUniqueId greaterThanEqual_3D3D            = TSymbolUniqueId(399);
    static constexpr const TSymbolUniqueId equal_1B1B                       = TSymbolUniqueId(400);
    static constexpr const TSymbolUniqueId equal_2B2B                       = TSymbolUniqueId(401);
    static constexpr const TSymbolUniqueId equal_3B3B                       = TSymbolUniqueId(402);
    static constexpr const TSymbolUniqueId equal_1C1C                       = TSymbolUniqueId(403);
    static constexpr const TSymbolUniqueId equal_2C2C                       = TSymbolUniqueId(404);
    static constexpr const TSymbolUniqueId equal_3C3C                       = TSymbolUniqueId(405);
    static constexpr const TSymbolUniqueId equal_1D1D                       = TSymbolUniqueId(406);
    static constexpr const TSymbolUniqueId equal_2D2D                       = TSymbolUniqueId(407);
    static constexpr const TSymbolUniqueId equal_3D3D                       = TSymbolUniqueId(408);
    static constexpr const TSymbolUniqueId equal_1E1E                       = TSymbolUniqueId(409);
    static constexpr const TSymbolUniqueId equal_2E2E                       = TSymbolUniqueId(410);
    static constexpr const TSymbolUniqueId equal_3E3E                       = TSymbolUniqueId(411);
    static constexpr const TSymbolUniqueId notEqual_1B1B                    = TSymbolUniqueId(412);
    static constexpr const TSymbolUniqueId notEqual_2B2B                    = TSymbolUniqueId(413);
    static constexpr const TSymbolUniqueId notEqual_3B3B                    = TSymbolUniqueId(414);
    static constexpr const TSymbolUniqueId notEqual_1C1C                    = TSymbolUniqueId(415);
    static constexpr const TSymbolUniqueId notEqual_2C2C                    = TSymbolUniqueId(416);
    static constexpr const TSymbolUniqueId notEqual_3C3C                    = TSymbolUniqueId(417);
    static constexpr const TSymbolUniqueId notEqual_1D1D                    = TSymbolUniqueId(418);
    static constexpr const TSymbolUniqueId notEqual_2D2D                    = TSymbolUniqueId(419);
    static constexpr const TSymbolUniqueId notEqual_3D3D                    = TSymbolUniqueId(420);
    static constexpr const TSymbolUniqueId notEqual_1E1E                    = TSymbolUniqueId(421);
    static constexpr const TSymbolUniqueId notEqual_2E2E                    = TSymbolUniqueId(422);
    static constexpr const TSymbolUniqueId notEqual_3E3E                    = TSymbolUniqueId(423);
    static constexpr const TSymbolUniqueId any_1E                           = TSymbolUniqueId(424);
    static constexpr const TSymbolUniqueId any_2E                           = TSymbolUniqueId(425);
    static constexpr const TSymbolUniqueId any_3E                           = TSymbolUniqueId(426);
    static constexpr const TSymbolUniqueId all_1E                           = TSymbolUniqueId(427);
    static constexpr const TSymbolUniqueId all_2E                           = TSymbolUniqueId(428);
    static constexpr const TSymbolUniqueId all_3E                           = TSymbolUniqueId(429);
    static constexpr const TSymbolUniqueId notFunc_1E                       = TSymbolUniqueId(430);
    static constexpr const TSymbolUniqueId notFunc_2E                       = TSymbolUniqueId(431);
    static constexpr const TSymbolUniqueId notFunc_3E                       = TSymbolUniqueId(432);
    static constexpr const TSymbolUniqueId bitfieldExtract_0C0C0C           = TSymbolUniqueId(433);
    static constexpr const TSymbolUniqueId bitfieldExtract_1C0C0C           = TSymbolUniqueId(434);
    static constexpr const TSymbolUniqueId bitfieldExtract_2C0C0C           = TSymbolUniqueId(435);
    static constexpr const TSymbolUniqueId bitfieldExtract_3C0C0C           = TSymbolUniqueId(436);
    static constexpr const TSymbolUniqueId bitfieldExtract_0D0C0C           = TSymbolUniqueId(437);
    static constexpr const TSymbolUniqueId bitfieldExtract_1D0C0C           = TSymbolUniqueId(438);
    static constexpr const TSymbolUniqueId bitfieldExtract_2D0C0C           = TSymbolUniqueId(439);
    static constexpr const TSymbolUniqueId bitfieldExtract_3D0C0C           = TSymbolUniqueId(440);
    static constexpr const TSymbolUniqueId bitfieldInsert_0C0C0C0C          = TSymbolUniqueId(441);
    static constexpr const TSymbolUniqueId bitfieldInsert_1C1C0C0C          = TSymbolUniqueId(442);
    static constexpr const TSymbolUniqueId bitfieldInsert_2C2C0C0C          = TSymbolUniqueId(443);
    static constexpr const TSymbolUniqueId bitfieldInsert_3C3C0C0C          = TSymbolUniqueId(444);
    static constexpr const TSymbolUniqueId bitfieldInsert_0D0D0C0C          = TSymbolUniqueId(445);
    static constexpr const TSymbolUniqueId bitfieldInsert_1D1D0C0C          = TSymbolUniqueId(446);
    static constexpr const TSymbolUniqueId bitfieldInsert_2D2D0C0C          = TSymbolUniqueId(447);
    static constexpr const TSymbolUniqueId bitfieldInsert_3D3D0C0C          = TSymbolUniqueId(448);
    static constexpr const TSymbolUniqueId bitfieldReverse_0C               = TSymbolUniqueId(449);
    static constexpr const TSymbolUniqueId bitfieldReverse_1C               = TSymbolUniqueId(450);
    static constexpr const TSymbolUniqueId bitfieldReverse_2C               = TSymbolUniqueId(451);
    static constexpr const TSymbolUniqueId bitfieldReverse_3C               = TSymbolUniqueId(452);
    static constexpr const TSymbolUniqueId bitfieldReverse_0D               = TSymbolUniqueId(453);
    static constexpr const TSymbolUniqueId bitfieldReverse_1D               = TSymbolUniqueId(454);
    static constexpr const TSymbolUniqueId bitfieldReverse_2D               = TSymbolUniqueId(455);
    static constexpr const TSymbolUniqueId bitfieldReverse_3D               = TSymbolUniqueId(456);
    static constexpr const TSymbolUniqueId bitCount_0C                      = TSymbolUniqueId(457);
    static constexpr const TSymbolUniqueId bitCount_1C                      = TSymbolUniqueId(458);
    static constexpr const TSymbolUniqueId bitCount_2C                      = TSymbolUniqueId(459);
    static constexpr const TSymbolUniqueId bitCount_3C                      = TSymbolUniqueId(460);
    static constexpr const TSymbolUniqueId bitCount_0D                      = TSymbolUniqueId(461);
    static constexpr const TSymbolUniqueId bitCount_1D                      = TSymbolUniqueId(462);
    static constexpr const TSymbolUniqueId bitCount_2D                      = TSymbolUniqueId(463);
    static constexpr const TSymbolUniqueId bitCount_3D                      = TSymbolUniqueId(464);
    static constexpr const TSymbolUniqueId findLSB_0C                       = TSymbolUniqueId(465);
    static constexpr const TSymbolUniqueId findLSB_1C                       = TSymbolUniqueId(466);
    static constexpr const TSymbolUniqueId findLSB_2C                       = TSymbolUniqueId(467);
    static constexpr const TSymbolUniqueId findLSB_3C                       = TSymbolUniqueId(468);
    static constexpr const TSymbolUniqueId findLSB_0D                       = TSymbolUniqueId(469);
    static constexpr const TSymbolUniqueId findLSB_1D                       = TSymbolUniqueId(470);
    static constexpr const TSymbolUniqueId findLSB_2D                       = TSymbolUniqueId(471);
    static constexpr const TSymbolUniqueId findLSB_3D                       = TSymbolUniqueId(472);
    static constexpr const TSymbolUniqueId findMSB_0C                       = TSymbolUniqueId(473);
    static constexpr const TSymbolUniqueId findMSB_1C                       = TSymbolUniqueId(474);
    static constexpr const TSymbolUniqueId findMSB_2C                       = TSymbolUniqueId(475);
    static constexpr const TSymbolUniqueId findMSB_3C                       = TSymbolUniqueId(476);
    static constexpr const TSymbolUniqueId findMSB_0D                       = TSymbolUniqueId(477);
    static constexpr const TSymbolUniqueId findMSB_1D                       = TSymbolUniqueId(478);
    static constexpr const TSymbolUniqueId findMSB_2D                       = TSymbolUniqueId(479);
    static constexpr const TSymbolUniqueId findMSB_3D                       = TSymbolUniqueId(480);
    static constexpr const TSymbolUniqueId uaddCarry_0D0D0D                 = TSymbolUniqueId(481);
    static constexpr const TSymbolUniqueId pt_o_0D                          = TSymbolUniqueId(482);
    static constexpr const TSymbolUniqueId uaddCarry_1D1D1D                 = TSymbolUniqueId(483);
    static constexpr const TSymbolUniqueId pt_o_1D                          = TSymbolUniqueId(484);
    static constexpr const TSymbolUniqueId uaddCarry_2D2D2D                 = TSymbolUniqueId(485);
    static constexpr const TSymbolUniqueId pt_o_2D                          = TSymbolUniqueId(486);
    static constexpr const TSymbolUniqueId uaddCarry_3D3D3D                 = TSymbolUniqueId(487);
    static constexpr const TSymbolUniqueId pt_o_3D                          = TSymbolUniqueId(488);
    static constexpr const TSymbolUniqueId usubBorrow_0D0D0D                = TSymbolUniqueId(489);
    static constexpr const TSymbolUniqueId usubBorrow_1D1D1D                = TSymbolUniqueId(490);
    static constexpr const TSymbolUniqueId usubBorrow_2D2D2D                = TSymbolUniqueId(491);
    static constexpr const TSymbolUniqueId usubBorrow_3D3D3D                = TSymbolUniqueId(492);
    static constexpr const TSymbolUniqueId umulExtended_0D0D0D0D            = TSymbolUniqueId(493);
    static constexpr const TSymbolUniqueId umulExtended_1D1D1D1D            = TSymbolUniqueId(494);
    static constexpr const TSymbolUniqueId umulExtended_2D2D2D2D            = TSymbolUniqueId(495);
    static constexpr const TSymbolUniqueId umulExtended_3D3D3D3D            = TSymbolUniqueId(496);
    static constexpr const TSymbolUniqueId imulExtended_0C0C0C0C            = TSymbolUniqueId(497);
    static constexpr const TSymbolUniqueId imulExtended_1C1C1C1C            = TSymbolUniqueId(498);
    static constexpr const TSymbolUniqueId imulExtended_2C2C2C2C            = TSymbolUniqueId(499);
    static constexpr const TSymbolUniqueId imulExtended_3C3C3C3C            = TSymbolUniqueId(500);
    static constexpr const TSymbolUniqueId texture2D_0H1B                   = TSymbolUniqueId(501);
    static constexpr const TSymbolUniqueId pt0H                             = TSymbolUniqueId(502);
    static constexpr const TSymbolUniqueId texture2DProj_0H2B               = TSymbolUniqueId(503);
    static constexpr const TSymbolUniqueId texture2DProj_0H3B               = TSymbolUniqueId(504);
    static constexpr const TSymbolUniqueId textureCube_0J2B                 = TSymbolUniqueId(505);
    static constexpr const TSymbolUniqueId pt0J                             = TSymbolUniqueId(506);
    static constexpr const TSymbolUniqueId texture2D_0L1B                   = TSymbolUniqueId(507);
    static constexpr const TSymbolUniqueId pt0L                             = TSymbolUniqueId(508);
    static constexpr const TSymbolUniqueId texture2DProj_0L2B               = TSymbolUniqueId(509);
    static constexpr const TSymbolUniqueId texture2DProj_0L3B               = TSymbolUniqueId(510);
    static constexpr const TSymbolUniqueId texture2DRect_0N1B               = TSymbolUniqueId(511);
    static constexpr const TSymbolUniqueId pt0N                             = TSymbolUniqueId(512);
    static constexpr const TSymbolUniqueId texture2DRectProj_0N2B           = TSymbolUniqueId(513);
    static constexpr const TSymbolUniqueId texture2DRectProj_0N3B           = TSymbolUniqueId(514);
    static constexpr const TSymbolUniqueId texture_0N1B                     = TSymbolUniqueId(515);
    static constexpr const TSymbolUniqueId textureProj_0N2B                 = TSymbolUniqueId(516);
    static constexpr const TSymbolUniqueId textureProj_0N3B                 = TSymbolUniqueId(517);
    static constexpr const TSymbolUniqueId texture2DGradEXT_0H1B1B1B        = TSymbolUniqueId(518);
    static constexpr const TSymbolUniqueId texture2DProjGradEXT_0H2B1B1B    = TSymbolUniqueId(519);
    static constexpr const TSymbolUniqueId texture2DProjGradEXT_0H3B1B1B    = TSymbolUniqueId(520);
    static constexpr const TSymbolUniqueId textureCubeGradEXT_0J2B2B2B      = TSymbolUniqueId(521);
    static constexpr const TSymbolUniqueId texture2D_0H1B0B                 = TSymbolUniqueId(522);
    static constexpr const TSymbolUniqueId texture2DProj_0H2B0B             = TSymbolUniqueId(523);
    static constexpr const TSymbolUniqueId texture2DProj_0H3B0B             = TSymbolUniqueId(524);
    static constexpr const TSymbolUniqueId textureCube_0J2B0B               = TSymbolUniqueId(525);
    static constexpr const TSymbolUniqueId dFdxExt_0B                       = TSymbolUniqueId(526);
    static constexpr const TSymbolUniqueId dFdxExt_1B                       = TSymbolUniqueId(527);
    static constexpr const TSymbolUniqueId dFdxExt_2B                       = TSymbolUniqueId(528);
    static constexpr const TSymbolUniqueId dFdxExt_3B                       = TSymbolUniqueId(529);
    static constexpr const TSymbolUniqueId dFdyExt_0B                       = TSymbolUniqueId(530);
    static constexpr const TSymbolUniqueId dFdyExt_1B                       = TSymbolUniqueId(531);
    static constexpr const TSymbolUniqueId dFdyExt_2B                       = TSymbolUniqueId(532);
    static constexpr const TSymbolUniqueId dFdyExt_3B                       = TSymbolUniqueId(533);
    static constexpr const TSymbolUniqueId fwidthExt_0B                     = TSymbolUniqueId(534);
    static constexpr const TSymbolUniqueId fwidthExt_1B                     = TSymbolUniqueId(535);
    static constexpr const TSymbolUniqueId fwidthExt_2B                     = TSymbolUniqueId(536);
    static constexpr const TSymbolUniqueId fwidthExt_3B                     = TSymbolUniqueId(537);
    static constexpr const TSymbolUniqueId texture2DLodEXT_0H1B0B           = TSymbolUniqueId(538);
    static constexpr const TSymbolUniqueId texture2DProjLodEXT_0H2B0B       = TSymbolUniqueId(539);
    static constexpr const TSymbolUniqueId texture2DProjLodEXT_0H3B0B       = TSymbolUniqueId(540);
    static constexpr const TSymbolUniqueId textureCubeLodEXT_0J2B0B         = TSymbolUniqueId(541);
    static constexpr const TSymbolUniqueId texture2DLod_0H1B0B              = TSymbolUniqueId(542);
    static constexpr const TSymbolUniqueId texture2DProjLod_0H2B0B          = TSymbolUniqueId(543);
    static constexpr const TSymbolUniqueId texture2DProjLod_0H3B0B          = TSymbolUniqueId(544);
    static constexpr const TSymbolUniqueId textureCubeLod_0J2B0B            = TSymbolUniqueId(545);
    static constexpr const TSymbolUniqueId texture_0H1B                     = TSymbolUniqueId(546);
    static constexpr const TSymbolUniqueId texture_0P1B                     = TSymbolUniqueId(547);
    static constexpr const TSymbolUniqueId pt0P                             = TSymbolUniqueId(548);
    static constexpr const TSymbolUniqueId texture_0U1B                     = TSymbolUniqueId(549);
    static constexpr const TSymbolUniqueId pt0U                             = TSymbolUniqueId(550);
    static constexpr const TSymbolUniqueId texture_0I2B                     = TSymbolUniqueId(551);
    static constexpr const TSymbolUniqueId pt0I                             = TSymbolUniqueId(552);
    static constexpr const TSymbolUniqueId texture_0Q2B                     = TSymbolUniqueId(553);
    static constexpr const TSymbolUniqueId pt0Q                             = TSymbolUniqueId(554);
    static constexpr const TSymbolUniqueId texture_0V2B                     = TSymbolUniqueId(555);
    static constexpr const TSymbolUniqueId pt0V                             = TSymbolUniqueId(556);
    static constexpr const TSymbolUniqueId texture_0J2B                     = TSymbolUniqueId(557);
    static constexpr const TSymbolUniqueId texture_0R2B                     = TSymbolUniqueId(558);
    static constexpr const TSymbolUniqueId pt0R                             = TSymbolUniqueId(559);
    static constexpr const TSymbolUniqueId texture_0W2B                     = TSymbolUniqueId(560);
    static constexpr const TSymbolUniqueId pt0W                             = TSymbolUniqueId(561);
    static constexpr const TSymbolUniqueId texture_0K2B                     = TSymbolUniqueId(562);
    static constexpr const TSymbolUniqueId pt0K                             = TSymbolUniqueId(563);
    static constexpr const TSymbolUniqueId texture_0S2B                     = TSymbolUniqueId(564);
    static constexpr const TSymbolUniqueId pt0S                             = TSymbolUniqueId(565);
    static constexpr const TSymbolUniqueId texture_0X2B                     = TSymbolUniqueId(566);
    static constexpr const TSymbolUniqueId pt0X                             = TSymbolUniqueId(567);
    static constexpr const TSymbolUniqueId textureProj_0H2B                 = TSymbolUniqueId(568);
    static constexpr const TSymbolUniqueId textureProj_0P2B                 = TSymbolUniqueId(569);
    static constexpr const TSymbolUniqueId textureProj_0U2B                 = TSymbolUniqueId(570);
    static constexpr const TSymbolUniqueId textureProj_0H3B                 = TSymbolUniqueId(571);
    static constexpr const TSymbolUniqueId textureProj_0P3B                 = TSymbolUniqueId(572);
    static constexpr const TSymbolUniqueId textureProj_0U3B                 = TSymbolUniqueId(573);
    static constexpr const TSymbolUniqueId textureProj_0I3B                 = TSymbolUniqueId(574);
    static constexpr const TSymbolUniqueId textureProj_0Q3B                 = TSymbolUniqueId(575);
    static constexpr const TSymbolUniqueId textureProj_0V3B                 = TSymbolUniqueId(576);
    static constexpr const TSymbolUniqueId textureLod_0H1B0B                = TSymbolUniqueId(577);
    static constexpr const TSymbolUniqueId textureLod_0P1B0B                = TSymbolUniqueId(578);
    static constexpr const TSymbolUniqueId textureLod_0U1B0B                = TSymbolUniqueId(579);
    static constexpr const TSymbolUniqueId textureLod_0I2B0B                = TSymbolUniqueId(580);
    static constexpr const TSymbolUniqueId textureLod_0Q2B0B                = TSymbolUniqueId(581);
    static constexpr const TSymbolUniqueId textureLod_0V2B0B                = TSymbolUniqueId(582);
    static constexpr const TSymbolUniqueId textureLod_0J2B0B                = TSymbolUniqueId(583);
    static constexpr const TSymbolUniqueId textureLod_0R2B0B                = TSymbolUniqueId(584);
    static constexpr const TSymbolUniqueId textureLod_0W2B0B                = TSymbolUniqueId(585);
    static constexpr const TSymbolUniqueId textureLod_0K2B0B                = TSymbolUniqueId(586);
    static constexpr const TSymbolUniqueId textureLod_0S2B0B                = TSymbolUniqueId(587);
    static constexpr const TSymbolUniqueId textureLod_0X2B0B                = TSymbolUniqueId(588);
    static constexpr const TSymbolUniqueId texture_0Z2B                     = TSymbolUniqueId(589);
    static constexpr const TSymbolUniqueId pt0Z                             = TSymbolUniqueId(590);
    static constexpr const TSymbolUniqueId texture_0a3B                     = TSymbolUniqueId(591);
    static constexpr const TSymbolUniqueId pt0a                             = TSymbolUniqueId(592);
    static constexpr const TSymbolUniqueId texture_0b3B                     = TSymbolUniqueId(593);
    static constexpr const TSymbolUniqueId pt0b                             = TSymbolUniqueId(594);
    static constexpr const TSymbolUniqueId textureProj_0Z3B                 = TSymbolUniqueId(595);
    static constexpr const TSymbolUniqueId textureLod_0Z2B0B                = TSymbolUniqueId(596);
    static constexpr const TSymbolUniqueId textureSize_0H0C                 = TSymbolUniqueId(597);
    static constexpr const TSymbolUniqueId textureSize_0P0C                 = TSymbolUniqueId(598);
    static constexpr const TSymbolUniqueId textureSize_0U0C                 = TSymbolUniqueId(599);
    static constexpr const TSymbolUniqueId textureSize_0I0C                 = TSymbolUniqueId(600);
    static constexpr const TSymbolUniqueId textureSize_0Q0C                 = TSymbolUniqueId(601);
    static constexpr const TSymbolUniqueId textureSize_0V0C                 = TSymbolUniqueId(602);
    static constexpr const TSymbolUniqueId textureSize_0J0C                 = TSymbolUniqueId(603);
    static constexpr const TSymbolUniqueId textureSize_0R0C                 = TSymbolUniqueId(604);
    static constexpr const TSymbolUniqueId textureSize_0W0C                 = TSymbolUniqueId(605);
    static constexpr const TSymbolUniqueId textureSize_0K0C                 = TSymbolUniqueId(606);
    static constexpr const TSymbolUniqueId textureSize_0S0C                 = TSymbolUniqueId(607);
    static constexpr const TSymbolUniqueId textureSize_0X0C                 = TSymbolUniqueId(608);
    static constexpr const TSymbolUniqueId textureSize_0Z0C                 = TSymbolUniqueId(609);
    static constexpr const TSymbolUniqueId textureSize_0a0C                 = TSymbolUniqueId(610);
    static constexpr const TSymbolUniqueId textureSize_0b0C                 = TSymbolUniqueId(611);
    static constexpr const TSymbolUniqueId textureSize_0O                   = TSymbolUniqueId(612);
    static constexpr const TSymbolUniqueId pt0O                             = TSymbolUniqueId(613);
    static constexpr const TSymbolUniqueId textureSize_0T                   = TSymbolUniqueId(614);
    static constexpr const TSymbolUniqueId pt0T                             = TSymbolUniqueId(615);
    static constexpr const TSymbolUniqueId textureSize_0Y                   = TSymbolUniqueId(616);
    static constexpr const TSymbolUniqueId pt0Y                             = TSymbolUniqueId(617);
    static constexpr const TSymbolUniqueId textureProjLod_0H2B0B            = TSymbolUniqueId(618);
    static constexpr const TSymbolUniqueId textureProjLod_0P2B0B            = TSymbolUniqueId(619);
    static constexpr const TSymbolUniqueId textureProjLod_0U2B0B            = TSymbolUniqueId(620);
    static constexpr const TSymbolUniqueId textureProjLod_0H3B0B            = TSymbolUniqueId(621);
    static constexpr const TSymbolUniqueId textureProjLod_0P3B0B            = TSymbolUniqueId(622);
    static constexpr const TSymbolUniqueId textureProjLod_0U3B0B            = TSymbolUniqueId(623);
    static constexpr const TSymbolUniqueId textureProjLod_0I3B0B            = TSymbolUniqueId(624);
    static constexpr const TSymbolUniqueId textureProjLod_0Q3B0B            = TSymbolUniqueId(625);
    static constexpr const TSymbolUniqueId textureProjLod_0V3B0B            = TSymbolUniqueId(626);
    static constexpr const TSymbolUniqueId textureProjLod_0Z3B0B            = TSymbolUniqueId(627);
    static constexpr const TSymbolUniqueId texelFetch_0H1C0C                = TSymbolUniqueId(628);
    static constexpr const TSymbolUniqueId texelFetch_0P1C0C                = TSymbolUniqueId(629);
    static constexpr const TSymbolUniqueId texelFetch_0U1C0C                = TSymbolUniqueId(630);
    static constexpr const TSymbolUniqueId texelFetch_0I2C0C                = TSymbolUniqueId(631);
    static constexpr const TSymbolUniqueId texelFetch_0Q2C0C                = TSymbolUniqueId(632);
    static constexpr const TSymbolUniqueId texelFetch_0V2C0C                = TSymbolUniqueId(633);
    static constexpr const TSymbolUniqueId texelFetch_0K2C0C                = TSymbolUniqueId(634);
    static constexpr const TSymbolUniqueId texelFetch_0S2C0C                = TSymbolUniqueId(635);
    static constexpr const TSymbolUniqueId texelFetch_0X2C0C                = TSymbolUniqueId(636);
    static constexpr const TSymbolUniqueId textureGrad_0H1B1B1B             = TSymbolUniqueId(637);
    static constexpr const TSymbolUniqueId textureGrad_0P1B1B1B             = TSymbolUniqueId(638);
    static constexpr const TSymbolUniqueId textureGrad_0U1B1B1B             = TSymbolUniqueId(639);
    static constexpr const TSymbolUniqueId textureGrad_0I2B2B2B             = TSymbolUniqueId(640);
    static constexpr const TSymbolUniqueId textureGrad_0Q2B2B2B             = TSymbolUniqueId(641);
    static constexpr const TSymbolUniqueId textureGrad_0V2B2B2B             = TSymbolUniqueId(642);
    static constexpr const TSymbolUniqueId textureGrad_0J2B2B2B             = TSymbolUniqueId(643);
    static constexpr const TSymbolUniqueId textureGrad_0R2B2B2B             = TSymbolUniqueId(644);
    static constexpr const TSymbolUniqueId textureGrad_0W2B2B2B             = TSymbolUniqueId(645);
    static constexpr const TSymbolUniqueId textureGrad_0Z2B1B1B             = TSymbolUniqueId(646);
    static constexpr const TSymbolUniqueId textureGrad_0a3B2B2B             = TSymbolUniqueId(647);
    static constexpr const TSymbolUniqueId textureGrad_0K2B1B1B             = TSymbolUniqueId(648);
    static constexpr const TSymbolUniqueId textureGrad_0S2B1B1B             = TSymbolUniqueId(649);
    static constexpr const TSymbolUniqueId textureGrad_0X2B1B1B             = TSymbolUniqueId(650);
    static constexpr const TSymbolUniqueId textureGrad_0b3B1B1B             = TSymbolUniqueId(651);
    static constexpr const TSymbolUniqueId textureProjGrad_0H2B1B1B         = TSymbolUniqueId(652);
    static constexpr const TSymbolUniqueId textureProjGrad_0P2B1B1B         = TSymbolUniqueId(653);
    static constexpr const TSymbolUniqueId textureProjGrad_0U2B1B1B         = TSymbolUniqueId(654);
    static constexpr const TSymbolUniqueId textureProjGrad_0H3B1B1B         = TSymbolUniqueId(655);
    static constexpr const TSymbolUniqueId textureProjGrad_0P3B1B1B         = TSymbolUniqueId(656);
    static constexpr const TSymbolUniqueId textureProjGrad_0U3B1B1B         = TSymbolUniqueId(657);
    static constexpr const TSymbolUniqueId textureProjGrad_0I3B2B2B         = TSymbolUniqueId(658);
    static constexpr const TSymbolUniqueId textureProjGrad_0Q3B2B2B         = TSymbolUniqueId(659);
    static constexpr const TSymbolUniqueId textureProjGrad_0V3B2B2B         = TSymbolUniqueId(660);
    static constexpr const TSymbolUniqueId textureProjGrad_0Z3B1B1B         = TSymbolUniqueId(661);
    static constexpr const TSymbolUniqueId textureOffset_0H1B1C             = TSymbolUniqueId(662);
    static constexpr const TSymbolUniqueId textureOffset_0P1B1C             = TSymbolUniqueId(663);
    static constexpr const TSymbolUniqueId textureOffset_0U1B1C             = TSymbolUniqueId(664);
    static constexpr const TSymbolUniqueId textureOffset_0I2B2C             = TSymbolUniqueId(665);
    static constexpr const TSymbolUniqueId textureOffset_0Q2B2C             = TSymbolUniqueId(666);
    static constexpr const TSymbolUniqueId textureOffset_0V2B2C             = TSymbolUniqueId(667);
    static constexpr const TSymbolUniqueId textureOffset_0Z2B1C             = TSymbolUniqueId(668);
    static constexpr const TSymbolUniqueId textureOffset_0K2B1C             = TSymbolUniqueId(669);
    static constexpr const TSymbolUniqueId textureOffset_0S2B1C             = TSymbolUniqueId(670);
    static constexpr const TSymbolUniqueId textureOffset_0X2B1C             = TSymbolUniqueId(671);
    static constexpr const TSymbolUniqueId textureProjOffset_0H2B1C         = TSymbolUniqueId(672);
    static constexpr const TSymbolUniqueId textureProjOffset_0P2B1C         = TSymbolUniqueId(673);
    static constexpr const TSymbolUniqueId textureProjOffset_0U2B1C         = TSymbolUniqueId(674);
    static constexpr const TSymbolUniqueId textureProjOffset_0H3B1C         = TSymbolUniqueId(675);
    static constexpr const TSymbolUniqueId textureProjOffset_0P3B1C         = TSymbolUniqueId(676);
    static constexpr const TSymbolUniqueId textureProjOffset_0U3B1C         = TSymbolUniqueId(677);
    static constexpr const TSymbolUniqueId textureProjOffset_0I3B2C         = TSymbolUniqueId(678);
    static constexpr const TSymbolUniqueId textureProjOffset_0Q3B2C         = TSymbolUniqueId(679);
    static constexpr const TSymbolUniqueId textureProjOffset_0V3B2C         = TSymbolUniqueId(680);
    static constexpr const TSymbolUniqueId textureProjOffset_0Z3B1C         = TSymbolUniqueId(681);
    static constexpr const TSymbolUniqueId textureLodOffset_0H1B0B1C        = TSymbolUniqueId(682);
    static constexpr const TSymbolUniqueId textureLodOffset_0P1B0B1C        = TSymbolUniqueId(683);
    static constexpr const TSymbolUniqueId textureLodOffset_0U1B0B1C        = TSymbolUniqueId(684);
    static constexpr const TSymbolUniqueId textureLodOffset_0I2B0B2C        = TSymbolUniqueId(685);
    static constexpr const TSymbolUniqueId textureLodOffset_0Q2B0B2C        = TSymbolUniqueId(686);
    static constexpr const TSymbolUniqueId textureLodOffset_0V2B0B2C        = TSymbolUniqueId(687);
    static constexpr const TSymbolUniqueId textureLodOffset_0Z2B0B1C        = TSymbolUniqueId(688);
    static constexpr const TSymbolUniqueId textureLodOffset_0K2B0B1C        = TSymbolUniqueId(689);
    static constexpr const TSymbolUniqueId textureLodOffset_0S2B0B1C        = TSymbolUniqueId(690);
    static constexpr const TSymbolUniqueId textureLodOffset_0X2B0B1C        = TSymbolUniqueId(691);
    static constexpr const TSymbolUniqueId textureProjLodOffset_0H2B0B1C    = TSymbolUniqueId(692);
    static constexpr const TSymbolUniqueId textureProjLodOffset_0P2B0B1C    = TSymbolUniqueId(693);
    static constexpr const TSymbolUniqueId textureProjLodOffset_0U2B0B1C    = TSymbolUniqueId(694);
    static constexpr const TSymbolUniqueId textureProjLodOffset_0H3B0B1C    = TSymbolUniqueId(695);
    static constexpr const TSymbolUniqueId textureProjLodOffset_0P3B0B1C    = TSymbolUniqueId(696);
    static constexpr const TSymbolUniqueId textureProjLodOffset_0U3B0B1C    = TSymbolUniqueId(697);
    static constexpr const TSymbolUniqueId textureProjLodOffset_0I3B0B2C    = TSymbolUniqueId(698);
    static constexpr const TSymbolUniqueId textureProjLodOffset_0Q3B0B2C    = TSymbolUniqueId(699);
    static constexpr const TSymbolUniqueId textureProjLodOffset_0V3B0B2C    = TSymbolUniqueId(700);
    static constexpr const TSymbolUniqueId textureProjLodOffset_0Z3B0B1C    = TSymbolUniqueId(701);
    static constexpr const TSymbolUniqueId texelFetchOffset_0H1C0C1C        = TSymbolUniqueId(702);
    static constexpr const TSymbolUniqueId texelFetchOffset_0P1C0C1C        = TSymbolUniqueId(703);
    static constexpr const TSymbolUniqueId texelFetchOffset_0U1C0C1C        = TSymbolUniqueId(704);
    static constexpr const TSymbolUniqueId texelFetchOffset_0I2C0C2C        = TSymbolUniqueId(705);
    static constexpr const TSymbolUniqueId texelFetchOffset_0Q2C0C2C        = TSymbolUniqueId(706);
    static constexpr const TSymbolUniqueId texelFetchOffset_0V2C0C2C        = TSymbolUniqueId(707);
    static constexpr const TSymbolUniqueId texelFetchOffset_0K2C0C1C        = TSymbolUniqueId(708);
    static constexpr const TSymbolUniqueId texelFetchOffset_0S2C0C1C        = TSymbolUniqueId(709);
    static constexpr const TSymbolUniqueId texelFetchOffset_0X2C0C1C        = TSymbolUniqueId(710);
    static constexpr const TSymbolUniqueId textureGradOffset_0H1B1B1B1C     = TSymbolUniqueId(711);
    static constexpr const TSymbolUniqueId textureGradOffset_0P1B1B1B1C     = TSymbolUniqueId(712);
    static constexpr const TSymbolUniqueId textureGradOffset_0U1B1B1B1C     = TSymbolUniqueId(713);
    static constexpr const TSymbolUniqueId textureGradOffset_0I2B2B2B2C     = TSymbolUniqueId(714);
    static constexpr const TSymbolUniqueId textureGradOffset_0Q2B2B2B2C     = TSymbolUniqueId(715);
    static constexpr const TSymbolUniqueId textureGradOffset_0V2B2B2B2C     = TSymbolUniqueId(716);
    static constexpr const TSymbolUniqueId textureGradOffset_0Z2B1B1B1C     = TSymbolUniqueId(717);
    static constexpr const TSymbolUniqueId textureGradOffset_0K2B1B1B1C     = TSymbolUniqueId(718);
    static constexpr const TSymbolUniqueId textureGradOffset_0S2B1B1B1C     = TSymbolUniqueId(719);
    static constexpr const TSymbolUniqueId textureGradOffset_0X2B1B1B1C     = TSymbolUniqueId(720);
    static constexpr const TSymbolUniqueId textureGradOffset_0b3B1B1B1C     = TSymbolUniqueId(721);
    static constexpr const TSymbolUniqueId textureProjGradOffset_0H2B1B1B1C = TSymbolUniqueId(722);
    static constexpr const TSymbolUniqueId textureProjGradOffset_0P2B1B1B1C = TSymbolUniqueId(723);
    static constexpr const TSymbolUniqueId textureProjGradOffset_0U2B1B1B1C = TSymbolUniqueId(724);
    static constexpr const TSymbolUniqueId textureProjGradOffset_0H3B1B1B1C = TSymbolUniqueId(725);
    static constexpr const TSymbolUniqueId textureProjGradOffset_0P3B1B1B1C = TSymbolUniqueId(726);
    static constexpr const TSymbolUniqueId textureProjGradOffset_0U3B1B1B1C = TSymbolUniqueId(727);
    static constexpr const TSymbolUniqueId textureProjGradOffset_0I3B2B2B2C = TSymbolUniqueId(728);
    static constexpr const TSymbolUniqueId textureProjGradOffset_0Q3B2B2B2C = TSymbolUniqueId(729);
    static constexpr const TSymbolUniqueId textureProjGradOffset_0V3B2B2B2C = TSymbolUniqueId(730);
    static constexpr const TSymbolUniqueId textureProjGradOffset_0Z3B1B1B1C = TSymbolUniqueId(731);
    static constexpr const TSymbolUniqueId textureOffset_0H1B1C0B           = TSymbolUniqueId(732);
    static constexpr const TSymbolUniqueId textureOffset_0P1B1C0B           = TSymbolUniqueId(733);
    static constexpr const TSymbolUniqueId textureOffset_0U1B1C0B           = TSymbolUniqueId(734);
    static constexpr const TSymbolUniqueId textureOffset_0I2B2C0B           = TSymbolUniqueId(735);
    static constexpr const TSymbolUniqueId textureOffset_0Q2B2C0B           = TSymbolUniqueId(736);
    static constexpr const TSymbolUniqueId textureOffset_0V2B2C0B           = TSymbolUniqueId(737);
    static constexpr const TSymbolUniqueId textureOffset_0Z2B1C0B           = TSymbolUniqueId(738);
    static constexpr const TSymbolUniqueId textureOffset_0K2B1C0B           = TSymbolUniqueId(739);
    static constexpr const TSymbolUniqueId textureOffset_0S2B1C0B           = TSymbolUniqueId(740);
    static constexpr const TSymbolUniqueId textureOffset_0X2B1C0B           = TSymbolUniqueId(741);
    static constexpr const TSymbolUniqueId textureProjOffset_0H2B1C0B       = TSymbolUniqueId(742);
    static constexpr const TSymbolUniqueId textureProjOffset_0P2B1C0B       = TSymbolUniqueId(743);
    static constexpr const TSymbolUniqueId textureProjOffset_0U2B1C0B       = TSymbolUniqueId(744);
    static constexpr const TSymbolUniqueId textureProjOffset_0H3B1C0B       = TSymbolUniqueId(745);
    static constexpr const TSymbolUniqueId textureProjOffset_0P3B1C0B       = TSymbolUniqueId(746);
    static constexpr const TSymbolUniqueId textureProjOffset_0U3B1C0B       = TSymbolUniqueId(747);
    static constexpr const TSymbolUniqueId textureProjOffset_0I3B2C0B       = TSymbolUniqueId(748);
    static constexpr const TSymbolUniqueId textureProjOffset_0Q3B2C0B       = TSymbolUniqueId(749);
    static constexpr const TSymbolUniqueId textureProjOffset_0V3B2C0B       = TSymbolUniqueId(750);
    static constexpr const TSymbolUniqueId textureProjOffset_0Z3B1C0B       = TSymbolUniqueId(751);
    static constexpr const TSymbolUniqueId texture_0L1B                     = TSymbolUniqueId(752);
    static constexpr const TSymbolUniqueId textureProj_0L2B                 = TSymbolUniqueId(753);
    static constexpr const TSymbolUniqueId textureProj_0L3B                 = TSymbolUniqueId(754);
    static constexpr const TSymbolUniqueId textureSize_0L0C                 = TSymbolUniqueId(755);
    static constexpr const TSymbolUniqueId texelFetch_0L1C0C                = TSymbolUniqueId(756);
    static constexpr const TSymbolUniqueId texture_0M1B                     = TSymbolUniqueId(757);
    static constexpr const TSymbolUniqueId pt0M                             = TSymbolUniqueId(758);
    static constexpr const TSymbolUniqueId textureProj_0M2B                 = TSymbolUniqueId(759);
    static constexpr const TSymbolUniqueId textureProj_0M3B                 = TSymbolUniqueId(760);
    static constexpr const TSymbolUniqueId rgb_2_yuv_2B0G                   = TSymbolUniqueId(761);
    static constexpr const TSymbolUniqueId pt0G                             = TSymbolUniqueId(762);
    static constexpr const TSymbolUniqueId yuv_2_rgb_2B0G                   = TSymbolUniqueId(763);
    static constexpr const TSymbolUniqueId textureSize_0M0C                 = TSymbolUniqueId(764);
    static constexpr const TSymbolUniqueId texelFetch_0M1C0C                = TSymbolUniqueId(765);
    static constexpr const TSymbolUniqueId texture_0H1B0B                   = TSymbolUniqueId(766);
    static constexpr const TSymbolUniqueId texture_0P1B0B                   = TSymbolUniqueId(767);
    static constexpr const TSymbolUniqueId texture_0U1B0B                   = TSymbolUniqueId(768);
    static constexpr const TSymbolUniqueId texture_0I2B0B                   = TSymbolUniqueId(769);
    static constexpr const TSymbolUniqueId texture_0Q2B0B                   = TSymbolUniqueId(770);
    static constexpr const TSymbolUniqueId texture_0V2B0B                   = TSymbolUniqueId(771);
    static constexpr const TSymbolUniqueId texture_0J2B0B                   = TSymbolUniqueId(772);
    static constexpr const TSymbolUniqueId texture_0R2B0B                   = TSymbolUniqueId(773);
    static constexpr const TSymbolUniqueId texture_0W2B0B                   = TSymbolUniqueId(774);
    static constexpr const TSymbolUniqueId texture_0K2B0B                   = TSymbolUniqueId(775);
    static constexpr const TSymbolUniqueId texture_0S2B0B                   = TSymbolUniqueId(776);
    static constexpr const TSymbolUniqueId texture_0X2B0B                   = TSymbolUniqueId(777);
    static constexpr const TSymbolUniqueId textureProj_0H2B0B               = TSymbolUniqueId(778);
    static constexpr const TSymbolUniqueId textureProj_0P2B0B               = TSymbolUniqueId(779);
    static constexpr const TSymbolUniqueId textureProj_0U2B0B               = TSymbolUniqueId(780);
    static constexpr const TSymbolUniqueId textureProj_0H3B0B               = TSymbolUniqueId(781);
    static constexpr const TSymbolUniqueId textureProj_0P3B0B               = TSymbolUniqueId(782);
    static constexpr const TSymbolUniqueId textureProj_0U3B0B               = TSymbolUniqueId(783);
    static constexpr const TSymbolUniqueId textureProj_0I3B0B               = TSymbolUniqueId(784);
    static constexpr const TSymbolUniqueId textureProj_0Q3B0B               = TSymbolUniqueId(785);
    static constexpr const TSymbolUniqueId textureProj_0V3B0B               = TSymbolUniqueId(786);
    static constexpr const TSymbolUniqueId texture_0Z2B0B                   = TSymbolUniqueId(787);
    static constexpr const TSymbolUniqueId texture_0a3B0B                   = TSymbolUniqueId(788);
    static constexpr const TSymbolUniqueId textureProj_0Z3B0B               = TSymbolUniqueId(789);
    static constexpr const TSymbolUniqueId texture_0L1B0B                   = TSymbolUniqueId(790);
    static constexpr const TSymbolUniqueId textureProj_0L2B0B               = TSymbolUniqueId(791);
    static constexpr const TSymbolUniqueId textureProj_0L3B0B               = TSymbolUniqueId(792);
    static constexpr const TSymbolUniqueId texture_0M1B0B                   = TSymbolUniqueId(793);
    static constexpr const TSymbolUniqueId textureProj_0M2B0B               = TSymbolUniqueId(794);
    static constexpr const TSymbolUniqueId textureProj_0M3B0B               = TSymbolUniqueId(795);
    static constexpr const TSymbolUniqueId texelFetch_0O1C0C                = TSymbolUniqueId(796);
    static constexpr const TSymbolUniqueId texelFetch_0T1C0C                = TSymbolUniqueId(797);
    static constexpr const TSymbolUniqueId texelFetch_0Y1C0C                = TSymbolUniqueId(798);
    static constexpr const TSymbolUniqueId textureGather_0H1B               = TSymbolUniqueId(799);
    static constexpr const TSymbolUniqueId textureGather_0P1B               = TSymbolUniqueId(800);
    static constexpr const TSymbolUniqueId textureGather_0U1B               = TSymbolUniqueId(801);
    static constexpr const TSymbolUniqueId textureGather_0H1B0C             = TSymbolUniqueId(802);
    static constexpr const TSymbolUniqueId textureGather_0P1B0C             = TSymbolUniqueId(803);
    static constexpr const TSymbolUniqueId textureGather_0U1B0C             = TSymbolUniqueId(804);
    static constexpr const TSymbolUniqueId textureGather_0K2B               = TSymbolUniqueId(805);
    static constexpr const TSymbolUniqueId textureGather_0S2B               = TSymbolUniqueId(806);
    static constexpr const TSymbolUniqueId textureGather_0X2B               = TSymbolUniqueId(807);
    static constexpr const TSymbolUniqueId textureGather_0K2B0C             = TSymbolUniqueId(808);
    static constexpr const TSymbolUniqueId textureGather_0S2B0C             = TSymbolUniqueId(809);
    static constexpr const TSymbolUniqueId textureGather_0X2B0C             = TSymbolUniqueId(810);
    static constexpr const TSymbolUniqueId textureGather_0J2B               = TSymbolUniqueId(811);
    static constexpr const TSymbolUniqueId textureGather_0R2B               = TSymbolUniqueId(812);
    static constexpr const TSymbolUniqueId textureGather_0W2B               = TSymbolUniqueId(813);
    static constexpr const TSymbolUniqueId textureGather_0J2B0C             = TSymbolUniqueId(814);
    static constexpr const TSymbolUniqueId textureGather_0R2B0C             = TSymbolUniqueId(815);
    static constexpr const TSymbolUniqueId textureGather_0W2B0C             = TSymbolUniqueId(816);
    static constexpr const TSymbolUniqueId textureGather_0Z1B               = TSymbolUniqueId(817);
    static constexpr const TSymbolUniqueId textureGather_0Z1B0B             = TSymbolUniqueId(818);
    static constexpr const TSymbolUniqueId textureGather_0b2B               = TSymbolUniqueId(819);
    static constexpr const TSymbolUniqueId textureGather_0b2B0B             = TSymbolUniqueId(820);
    static constexpr const TSymbolUniqueId textureGather_0a2B               = TSymbolUniqueId(821);
    static constexpr const TSymbolUniqueId textureGather_0a2B0B             = TSymbolUniqueId(822);
    static constexpr const TSymbolUniqueId textureGatherOffset_0H1B1C       = TSymbolUniqueId(823);
    static constexpr const TSymbolUniqueId textureGatherOffset_0P1B1C       = TSymbolUniqueId(824);
    static constexpr const TSymbolUniqueId textureGatherOffset_0U1B1C       = TSymbolUniqueId(825);
    static constexpr const TSymbolUniqueId textureGatherOffset_0H1B1C0C     = TSymbolUniqueId(826);
    static constexpr const TSymbolUniqueId textureGatherOffset_0P1B1C0C     = TSymbolUniqueId(827);
    static constexpr const TSymbolUniqueId textureGatherOffset_0U1B1C0C     = TSymbolUniqueId(828);
    static constexpr const TSymbolUniqueId textureGatherOffset_0K2B1C       = TSymbolUniqueId(829);
    static constexpr const TSymbolUniqueId textureGatherOffset_0S2B1C       = TSymbolUniqueId(830);
    static constexpr const TSymbolUniqueId textureGatherOffset_0X2B1C       = TSymbolUniqueId(831);
    static constexpr const TSymbolUniqueId textureGatherOffset_0K2B1C0C     = TSymbolUniqueId(832);
    static constexpr const TSymbolUniqueId textureGatherOffset_0S2B1C0C     = TSymbolUniqueId(833);
    static constexpr const TSymbolUniqueId textureGatherOffset_0X2B1C0C     = TSymbolUniqueId(834);
    static constexpr const TSymbolUniqueId textureGatherOffset_0Z1B0B1C     = TSymbolUniqueId(835);
    static constexpr const TSymbolUniqueId textureGatherOffset_0b2B0B1C     = TSymbolUniqueId(836);
    static constexpr const TSymbolUniqueId dFdx_0B                          = TSymbolUniqueId(837);
    static constexpr const TSymbolUniqueId dFdx_1B                          = TSymbolUniqueId(838);
    static constexpr const TSymbolUniqueId dFdx_2B                          = TSymbolUniqueId(839);
    static constexpr const TSymbolUniqueId dFdx_3B                          = TSymbolUniqueId(840);
    static constexpr const TSymbolUniqueId dFdy_0B                          = TSymbolUniqueId(841);
    static constexpr const TSymbolUniqueId dFdy_1B                          = TSymbolUniqueId(842);
    static constexpr const TSymbolUniqueId dFdy_2B                          = TSymbolUniqueId(843);
    static constexpr const TSymbolUniqueId dFdy_3B                          = TSymbolUniqueId(844);
    static constexpr const TSymbolUniqueId fwidth_0B                        = TSymbolUniqueId(845);
    static constexpr const TSymbolUniqueId fwidth_1B                        = TSymbolUniqueId(846);
    static constexpr const TSymbolUniqueId fwidth_2B                        = TSymbolUniqueId(847);
    static constexpr const TSymbolUniqueId fwidth_3B                        = TSymbolUniqueId(848);
    static constexpr const TSymbolUniqueId atomicCounter_0F                 = TSymbolUniqueId(849);
    static constexpr const TSymbolUniqueId pt0F                             = TSymbolUniqueId(850);
    static constexpr const TSymbolUniqueId atomicCounterIncrement_0F        = TSymbolUniqueId(851);
    static constexpr const TSymbolUniqueId atomicCounterDecrement_0F        = TSymbolUniqueId(852);
    static constexpr const TSymbolUniqueId atomicAdd_0D0D                   = TSymbolUniqueId(853);
    static constexpr const TSymbolUniqueId pt_io_0D                         = TSymbolUniqueId(854);
    static constexpr const TSymbolUniqueId atomicAdd_0C0C                   = TSymbolUniqueId(855);
    static constexpr const TSymbolUniqueId pt_io_0C                         = TSymbolUniqueId(856);
    static constexpr const TSymbolUniqueId atomicMin_0D0D                   = TSymbolUniqueId(857);
    static constexpr const TSymbolUniqueId atomicMin_0C0C                   = TSymbolUniqueId(858);
    static constexpr const TSymbolUniqueId atomicMax_0D0D                   = TSymbolUniqueId(859);
    static constexpr const TSymbolUniqueId atomicMax_0C0C                   = TSymbolUniqueId(860);
    static constexpr const TSymbolUniqueId atomicAnd_0D0D                   = TSymbolUniqueId(861);
    static constexpr const TSymbolUniqueId atomicAnd_0C0C                   = TSymbolUniqueId(862);
    static constexpr const TSymbolUniqueId atomicOr_0D0D                    = TSymbolUniqueId(863);
    static constexpr const TSymbolUniqueId atomicOr_0C0C                    = TSymbolUniqueId(864);
    static constexpr const TSymbolUniqueId atomicXor_0D0D                   = TSymbolUniqueId(865);
    static constexpr const TSymbolUniqueId atomicXor_0C0C                   = TSymbolUniqueId(866);
    static constexpr const TSymbolUniqueId atomicExchange_0D0D              = TSymbolUniqueId(867);
    static constexpr const TSymbolUniqueId atomicExchange_0C0C              = TSymbolUniqueId(868);
    static constexpr const TSymbolUniqueId atomicCompSwap_0D0D0D            = TSymbolUniqueId(869);
    static constexpr const TSymbolUniqueId atomicCompSwap_0C0C0C            = TSymbolUniqueId(870);
    static constexpr const TSymbolUniqueId imageSize_0c                     = TSymbolUniqueId(871);
    static constexpr const TSymbolUniqueId pt0c                             = TSymbolUniqueId(872);
    static constexpr const TSymbolUniqueId imageSize_0d                     = TSymbolUniqueId(873);
    static constexpr const TSymbolUniqueId pt0d                             = TSymbolUniqueId(874);
    static constexpr const TSymbolUniqueId imageSize_0e                     = TSymbolUniqueId(875);
    static constexpr const TSymbolUniqueId pt0e                             = TSymbolUniqueId(876);
    static constexpr const TSymbolUniqueId imageSize_0f                     = TSymbolUniqueId(877);
    static constexpr const TSymbolUniqueId pt0f                             = TSymbolUniqueId(878);
    static constexpr const TSymbolUniqueId imageSize_0g                     = TSymbolUniqueId(879);
    static constexpr const TSymbolUniqueId pt0g                             = TSymbolUniqueId(880);
    static constexpr const TSymbolUniqueId imageSize_0h                     = TSymbolUniqueId(881);
    static constexpr const TSymbolUniqueId pt0h                             = TSymbolUniqueId(882);
    static constexpr const TSymbolUniqueId imageSize_0i                     = TSymbolUniqueId(883);
    static constexpr const TSymbolUniqueId pt0i                             = TSymbolUniqueId(884);
    static constexpr const TSymbolUniqueId imageSize_0j                     = TSymbolUniqueId(885);
    static constexpr const TSymbolUniqueId pt0j                             = TSymbolUniqueId(886);
    static constexpr const TSymbolUniqueId imageSize_0k                     = TSymbolUniqueId(887);
    static constexpr const TSymbolUniqueId pt0k                             = TSymbolUniqueId(888);
    static constexpr const TSymbolUniqueId imageSize_0l                     = TSymbolUniqueId(889);
    static constexpr const TSymbolUniqueId pt0l                             = TSymbolUniqueId(890);
    static constexpr const TSymbolUniqueId imageSize_0m                     = TSymbolUniqueId(891);
    static constexpr const TSymbolUniqueId pt0m                             = TSymbolUniqueId(892);
    static constexpr const TSymbolUniqueId imageSize_0n                     = TSymbolUniqueId(893);
    static constexpr const TSymbolUniqueId pt0n                             = TSymbolUniqueId(894);
    static constexpr const TSymbolUniqueId imageLoad_0c1C                   = TSymbolUniqueId(895);
    static constexpr const TSymbolUniqueId imageLoad_0d1C                   = TSymbolUniqueId(896);
    static constexpr const TSymbolUniqueId imageLoad_0e1C                   = TSymbolUniqueId(897);
    static constexpr const TSymbolUniqueId imageLoad_0f2C                   = TSymbolUniqueId(898);
    static constexpr const TSymbolUniqueId imageLoad_0g2C                   = TSymbolUniqueId(899);
    static constexpr const TSymbolUniqueId imageLoad_0h2C                   = TSymbolUniqueId(900);
    static constexpr const TSymbolUniqueId imageLoad_0i2C                   = TSymbolUniqueId(901);
    static constexpr const TSymbolUniqueId imageLoad_0j2C                   = TSymbolUniqueId(902);
    static constexpr const TSymbolUniqueId imageLoad_0k2C                   = TSymbolUniqueId(903);
    static constexpr const TSymbolUniqueId imageLoad_0l2C                   = TSymbolUniqueId(904);
    static constexpr const TSymbolUniqueId imageLoad_0m2C                   = TSymbolUniqueId(905);
    static constexpr const TSymbolUniqueId imageLoad_0n2C                   = TSymbolUniqueId(906);
    static constexpr const TSymbolUniqueId imageStore_0c1C3B                = TSymbolUniqueId(907);
    static constexpr const TSymbolUniqueId imageStore_0d1C3C                = TSymbolUniqueId(908);
    static constexpr const TSymbolUniqueId imageStore_0e1C3D                = TSymbolUniqueId(909);
    static constexpr const TSymbolUniqueId imageStore_0f2C3B                = TSymbolUniqueId(910);
    static constexpr const TSymbolUniqueId imageStore_0g2C3C                = TSymbolUniqueId(911);
    static constexpr const TSymbolUniqueId imageStore_0h2C3D                = TSymbolUniqueId(912);
    static constexpr const TSymbolUniqueId imageStore_0i2C3B                = TSymbolUniqueId(913);
    static constexpr const TSymbolUniqueId imageStore_0j2C3C                = TSymbolUniqueId(914);
    static constexpr const TSymbolUniqueId imageStore_0k2C3D                = TSymbolUniqueId(915);
    static constexpr const TSymbolUniqueId imageStore_0l2C3B                = TSymbolUniqueId(916);
    static constexpr const TSymbolUniqueId imageStore_0m2C3C                = TSymbolUniqueId(917);
    static constexpr const TSymbolUniqueId imageStore_0n2C3D                = TSymbolUniqueId(918);
    static constexpr const TSymbolUniqueId memoryBarrier_                   = TSymbolUniqueId(919);
    static constexpr const TSymbolUniqueId memoryBarrierAtomicCounter_      = TSymbolUniqueId(920);
    static constexpr const TSymbolUniqueId memoryBarrierBuffer_             = TSymbolUniqueId(921);
    static constexpr const TSymbolUniqueId memoryBarrierImage_              = TSymbolUniqueId(922);
    static constexpr const TSymbolUniqueId barrier_                         = TSymbolUniqueId(923);
    static constexpr const TSymbolUniqueId memoryBarrierShared_             = TSymbolUniqueId(924);
    static constexpr const TSymbolUniqueId groupMemoryBarrier_              = TSymbolUniqueId(925);
    static constexpr const TSymbolUniqueId EmitVertex_                      = TSymbolUniqueId(926);
    static constexpr const TSymbolUniqueId EndPrimitive_                    = TSymbolUniqueId(927);
    static constexpr const TSymbolUniqueId gl_DepthRangeParameters          = TSymbolUniqueId(928);
    static constexpr const TSymbolUniqueId gl_DepthRange                    = TSymbolUniqueId(929);
    static constexpr const TSymbolUniqueId gl_MaxVertexAttribs              = TSymbolUniqueId(930);
    static constexpr const TSymbolUniqueId gl_MaxVertexUniformVectors       = TSymbolUniqueId(931);
    static constexpr const TSymbolUniqueId gl_MaxVertexTextureImageUnits    = TSymbolUniqueId(932);
    static constexpr const TSymbolUniqueId gl_MaxCombinedTextureImageUnits  = TSymbolUniqueId(933);
    static constexpr const TSymbolUniqueId gl_MaxTextureImageUnits          = TSymbolUniqueId(934);
    static constexpr const TSymbolUniqueId gl_MaxFragmentUniformVectors     = TSymbolUniqueId(935);
    static constexpr const TSymbolUniqueId gl_MaxVaryingVectors             = TSymbolUniqueId(936);
    static constexpr const TSymbolUniqueId gl_MaxDrawBuffers                = TSymbolUniqueId(937);
    static constexpr const TSymbolUniqueId gl_MaxDualSourceDrawBuffersEXT   = TSymbolUniqueId(938);
    static constexpr const TSymbolUniqueId gl_MaxVertexOutputVectors        = TSymbolUniqueId(939);
    static constexpr const TSymbolUniqueId gl_MaxFragmentInputVectors       = TSymbolUniqueId(940);
    static constexpr const TSymbolUniqueId gl_MinProgramTexelOffset         = TSymbolUniqueId(941);
    static constexpr const TSymbolUniqueId gl_MaxProgramTexelOffset         = TSymbolUniqueId(942);
    static constexpr const TSymbolUniqueId gl_MaxImageUnits                 = TSymbolUniqueId(943);
    static constexpr const TSymbolUniqueId gl_MaxVertexImageUniforms        = TSymbolUniqueId(944);
    static constexpr const TSymbolUniqueId gl_MaxFragmentImageUniforms      = TSymbolUniqueId(945);
    static constexpr const TSymbolUniqueId gl_MaxComputeImageUniforms       = TSymbolUniqueId(946);
    static constexpr const TSymbolUniqueId gl_MaxCombinedImageUniforms      = TSymbolUniqueId(947);
    static constexpr const TSymbolUniqueId gl_MaxCombinedShaderOutputResources =
        TSymbolUniqueId(948);
    static constexpr const TSymbolUniqueId gl_MaxComputeWorkGroupCount       = TSymbolUniqueId(949);
    static constexpr const TSymbolUniqueId gl_MaxComputeWorkGroupSize        = TSymbolUniqueId(950);
    static constexpr const TSymbolUniqueId gl_MaxComputeUniformComponents    = TSymbolUniqueId(951);
    static constexpr const TSymbolUniqueId gl_MaxComputeTextureImageUnits    = TSymbolUniqueId(952);
    static constexpr const TSymbolUniqueId gl_MaxComputeAtomicCounters       = TSymbolUniqueId(953);
    static constexpr const TSymbolUniqueId gl_MaxComputeAtomicCounterBuffers = TSymbolUniqueId(954);
    static constexpr const TSymbolUniqueId gl_MaxVertexAtomicCounters        = TSymbolUniqueId(955);
    static constexpr const TSymbolUniqueId gl_MaxFragmentAtomicCounters      = TSymbolUniqueId(956);
    static constexpr const TSymbolUniqueId gl_MaxCombinedAtomicCounters      = TSymbolUniqueId(957);
    static constexpr const TSymbolUniqueId gl_MaxAtomicCounterBindings       = TSymbolUniqueId(958);
    static constexpr const TSymbolUniqueId gl_MaxVertexAtomicCounterBuffers  = TSymbolUniqueId(959);
    static constexpr const TSymbolUniqueId gl_MaxFragmentAtomicCounterBuffers =
        TSymbolUniqueId(960);
    static constexpr const TSymbolUniqueId gl_MaxCombinedAtomicCounterBuffers =
        TSymbolUniqueId(961);
    static constexpr const TSymbolUniqueId gl_MaxAtomicCounterBufferSize   = TSymbolUniqueId(962);
    static constexpr const TSymbolUniqueId gl_MaxGeometryInputComponents   = TSymbolUniqueId(963);
    static constexpr const TSymbolUniqueId gl_MaxGeometryOutputComponents  = TSymbolUniqueId(964);
    static constexpr const TSymbolUniqueId gl_MaxGeometryImageUniforms     = TSymbolUniqueId(965);
    static constexpr const TSymbolUniqueId gl_MaxGeometryTextureImageUnits = TSymbolUniqueId(966);
    static constexpr const TSymbolUniqueId gl_MaxGeometryOutputVertices    = TSymbolUniqueId(967);
    static constexpr const TSymbolUniqueId gl_MaxGeometryTotalOutputComponents =
        TSymbolUniqueId(968);
    static constexpr const TSymbolUniqueId gl_MaxGeometryUniformComponents = TSymbolUniqueId(969);
    static constexpr const TSymbolUniqueId gl_MaxGeometryAtomicCounters    = TSymbolUniqueId(970);
    static constexpr const TSymbolUniqueId gl_MaxGeometryAtomicCounterBuffers =
        TSymbolUniqueId(971);
    static constexpr const TSymbolUniqueId gl_FragCoord             = TSymbolUniqueId(972);
    static constexpr const TSymbolUniqueId gl_FrontFacing           = TSymbolUniqueId(973);
    static constexpr const TSymbolUniqueId gl_PointCoord            = TSymbolUniqueId(974);
    static constexpr const TSymbolUniqueId gl_FragColor             = TSymbolUniqueId(975);
    static constexpr const TSymbolUniqueId gl_FragData              = TSymbolUniqueId(976);
    static constexpr const TSymbolUniqueId gl_FragDepth             = TSymbolUniqueId(977);
    static constexpr const TSymbolUniqueId gl_SecondaryFragColorEXT = TSymbolUniqueId(978);
    static constexpr const TSymbolUniqueId gl_SecondaryFragDataEXT  = TSymbolUniqueId(979);
    static constexpr const TSymbolUniqueId gl_FragDepthEXT          = TSymbolUniqueId(980);
    static constexpr const TSymbolUniqueId gl_LastFragData          = TSymbolUniqueId(981);
    static constexpr const TSymbolUniqueId gl_LastFragColor         = TSymbolUniqueId(982);
    static constexpr const TSymbolUniqueId gl_LastFragDataNV        = TSymbolUniqueId(983);
    static constexpr const TSymbolUniqueId gl_LastFragColorARM      = TSymbolUniqueId(984);
    static constexpr const TSymbolUniqueId gl_PrimitiveID           = TSymbolUniqueId(985);
    static constexpr const TSymbolUniqueId gl_Layer                 = TSymbolUniqueId(986);
    static constexpr const TSymbolUniqueId gl_Position              = TSymbolUniqueId(987);
    static constexpr const TSymbolUniqueId gl_PointSize             = TSymbolUniqueId(988);
    static constexpr const TSymbolUniqueId gl_InstanceID            = TSymbolUniqueId(989);
    static constexpr const TSymbolUniqueId gl_VertexID              = TSymbolUniqueId(990);
    static constexpr const TSymbolUniqueId gl_ViewportIndex         = TSymbolUniqueId(991);
    static constexpr const TSymbolUniqueId gl_LayerVS               = TSymbolUniqueId(992);
    static constexpr const TSymbolUniqueId gl_NumWorkGroups         = TSymbolUniqueId(993);
    static constexpr const TSymbolUniqueId gl_WorkGroupSize         = TSymbolUniqueId(994);
    static constexpr const TSymbolUniqueId gl_WorkGroupID           = TSymbolUniqueId(995);
    static constexpr const TSymbolUniqueId gl_LocalInvocationID     = TSymbolUniqueId(996);
    static constexpr const TSymbolUniqueId gl_GlobalInvocationID    = TSymbolUniqueId(997);
    static constexpr const TSymbolUniqueId gl_LocalInvocationIndex  = TSymbolUniqueId(998);
    static constexpr const TSymbolUniqueId gl_PrimitiveIDIn         = TSymbolUniqueId(999);
    static constexpr const TSymbolUniqueId gl_InvocationID          = TSymbolUniqueId(1000);
    static constexpr const TSymbolUniqueId gl_PrimitiveIDGS         = TSymbolUniqueId(1001);
    static constexpr const TSymbolUniqueId gl_LayerGS               = TSymbolUniqueId(1002);
    static constexpr const TSymbolUniqueId gl_PerVertex             = TSymbolUniqueId(1003);
    static constexpr const TSymbolUniqueId gl_in                    = TSymbolUniqueId(1004);
    static constexpr const TSymbolUniqueId gl_PerVertexOutBlock     = TSymbolUniqueId(1005);
    static constexpr const TSymbolUniqueId gl_PositionGS            = TSymbolUniqueId(1006);
    static constexpr const TSymbolUniqueId gl_ViewID_OVR            = TSymbolUniqueId(1007);
    static constexpr const TSymbolUniqueId gl_ViewID_OVRESSL1       = TSymbolUniqueId(1008);

};  // namespace BuiltInId

// Since some of the BuiltInId declarations are used outside of constexpr expressions, we need to
// have these definitions without an initializer. C++17 should eventually remove the need for this.
constexpr const TSymbolUniqueId BuiltInId::gl_DepthRangeParameters;
constexpr const TSymbolUniqueId BuiltInId::gl_DepthRange;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxVertexAttribs;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxVertexUniformVectors;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxVertexTextureImageUnits;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxCombinedTextureImageUnits;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxTextureImageUnits;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxFragmentUniformVectors;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxVaryingVectors;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxDrawBuffers;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxDualSourceDrawBuffersEXT;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxVertexOutputVectors;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxFragmentInputVectors;
constexpr const TSymbolUniqueId BuiltInId::gl_MinProgramTexelOffset;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxProgramTexelOffset;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxImageUnits;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxVertexImageUniforms;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxFragmentImageUniforms;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxComputeImageUniforms;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxCombinedImageUniforms;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxCombinedShaderOutputResources;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxComputeWorkGroupCount;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxComputeWorkGroupSize;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxComputeUniformComponents;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxComputeTextureImageUnits;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxComputeAtomicCounters;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxComputeAtomicCounterBuffers;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxVertexAtomicCounters;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxFragmentAtomicCounters;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxCombinedAtomicCounters;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxAtomicCounterBindings;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxVertexAtomicCounterBuffers;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxFragmentAtomicCounterBuffers;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxCombinedAtomicCounterBuffers;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxAtomicCounterBufferSize;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxGeometryInputComponents;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxGeometryOutputComponents;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxGeometryImageUniforms;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxGeometryTextureImageUnits;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxGeometryOutputVertices;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxGeometryTotalOutputComponents;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxGeometryUniformComponents;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxGeometryAtomicCounters;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxGeometryAtomicCounterBuffers;
constexpr const TSymbolUniqueId BuiltInId::gl_FragCoord;
constexpr const TSymbolUniqueId BuiltInId::gl_FrontFacing;
constexpr const TSymbolUniqueId BuiltInId::gl_PointCoord;
constexpr const TSymbolUniqueId BuiltInId::gl_FragColor;
constexpr const TSymbolUniqueId BuiltInId::gl_FragData;
constexpr const TSymbolUniqueId BuiltInId::gl_FragDepth;
constexpr const TSymbolUniqueId BuiltInId::gl_SecondaryFragColorEXT;
constexpr const TSymbolUniqueId BuiltInId::gl_SecondaryFragDataEXT;
constexpr const TSymbolUniqueId BuiltInId::gl_FragDepthEXT;
constexpr const TSymbolUniqueId BuiltInId::gl_LastFragData;
constexpr const TSymbolUniqueId BuiltInId::gl_LastFragColor;
constexpr const TSymbolUniqueId BuiltInId::gl_LastFragDataNV;
constexpr const TSymbolUniqueId BuiltInId::gl_LastFragColorARM;
constexpr const TSymbolUniqueId BuiltInId::gl_PrimitiveID;
constexpr const TSymbolUniqueId BuiltInId::gl_Layer;
constexpr const TSymbolUniqueId BuiltInId::gl_Position;
constexpr const TSymbolUniqueId BuiltInId::gl_PointSize;
constexpr const TSymbolUniqueId BuiltInId::gl_InstanceID;
constexpr const TSymbolUniqueId BuiltInId::gl_VertexID;
constexpr const TSymbolUniqueId BuiltInId::gl_ViewportIndex;
constexpr const TSymbolUniqueId BuiltInId::gl_LayerVS;
constexpr const TSymbolUniqueId BuiltInId::gl_NumWorkGroups;
constexpr const TSymbolUniqueId BuiltInId::gl_WorkGroupSize;
constexpr const TSymbolUniqueId BuiltInId::gl_WorkGroupID;
constexpr const TSymbolUniqueId BuiltInId::gl_LocalInvocationID;
constexpr const TSymbolUniqueId BuiltInId::gl_GlobalInvocationID;
constexpr const TSymbolUniqueId BuiltInId::gl_LocalInvocationIndex;
constexpr const TSymbolUniqueId BuiltInId::gl_PrimitiveIDIn;
constexpr const TSymbolUniqueId BuiltInId::gl_InvocationID;
constexpr const TSymbolUniqueId BuiltInId::gl_PrimitiveIDGS;
constexpr const TSymbolUniqueId BuiltInId::gl_LayerGS;
constexpr const TSymbolUniqueId BuiltInId::gl_PerVertex;
constexpr const TSymbolUniqueId BuiltInId::gl_in;
constexpr const TSymbolUniqueId BuiltInId::gl_PerVertexOutBlock;
constexpr const TSymbolUniqueId BuiltInId::gl_PositionGS;
constexpr const TSymbolUniqueId BuiltInId::gl_ViewID_OVR;
constexpr const TSymbolUniqueId BuiltInId::gl_ViewID_OVRESSL1;

const int TSymbolTable::kLastBuiltInId = 1008;

namespace BuiltInName
{

constexpr const ImmutableString _empty("");
constexpr const ImmutableString EmitVertex("EmitVertex");
constexpr const ImmutableString EndPrimitive("EndPrimitive");
constexpr const ImmutableString abs("abs");
constexpr const ImmutableString acos("acos");
constexpr const ImmutableString acosh("acosh");
constexpr const ImmutableString all("all");
constexpr const ImmutableString any("any");
constexpr const ImmutableString asin("asin");
constexpr const ImmutableString asinh("asinh");
constexpr const ImmutableString atan("atan");
constexpr const ImmutableString atanh("atanh");
constexpr const ImmutableString atomicAdd("atomicAdd");
constexpr const ImmutableString atomicAnd("atomicAnd");
constexpr const ImmutableString atomicCompSwap("atomicCompSwap");
constexpr const ImmutableString atomicCompSwap_0C0C0C("atomicCompSwap(0C0C0C");
constexpr const ImmutableString atomicCompSwap_0D0D0D("atomicCompSwap(0D0D0D");
constexpr const ImmutableString atomicCounter("atomicCounter");
constexpr const ImmutableString atomicCounterDecrement("atomicCounterDecrement");
constexpr const ImmutableString atomicCounterIncrement("atomicCounterIncrement");
constexpr const ImmutableString atomicExchange("atomicExchange");
constexpr const ImmutableString atomicMax("atomicMax");
constexpr const ImmutableString atomicMin("atomicMin");
constexpr const ImmutableString atomicOr("atomicOr");
constexpr const ImmutableString atomicXor("atomicXor");
constexpr const ImmutableString barrier("barrier");
constexpr const ImmutableString bitCount("bitCount");
constexpr const ImmutableString bitfieldExtract("bitfieldExtract");
constexpr const ImmutableString bitfieldExtract_0C0C0C("bitfieldExtract(0C0C0C");
constexpr const ImmutableString bitfieldExtract_0D0C0C("bitfieldExtract(0D0C0C");
constexpr const ImmutableString bitfieldExtract_1C0C0C("bitfieldExtract(1C0C0C");
constexpr const ImmutableString bitfieldExtract_1D0C0C("bitfieldExtract(1D0C0C");
constexpr const ImmutableString bitfieldExtract_2C0C0C("bitfieldExtract(2C0C0C");
constexpr const ImmutableString bitfieldExtract_2D0C0C("bitfieldExtract(2D0C0C");
constexpr const ImmutableString bitfieldExtract_3C0C0C("bitfieldExtract(3C0C0C");
constexpr const ImmutableString bitfieldExtract_3D0C0C("bitfieldExtract(3D0C0C");
constexpr const ImmutableString bitfieldInsert("bitfieldInsert");
constexpr const ImmutableString bitfieldInsert_0C0C0C0C("bitfieldInsert(0C0C0C0C");
constexpr const ImmutableString bitfieldInsert_0D0D0C0C("bitfieldInsert(0D0D0C0C");
constexpr const ImmutableString bitfieldInsert_1C1C0C0C("bitfieldInsert(1C1C0C0C");
constexpr const ImmutableString bitfieldInsert_1D1D0C0C("bitfieldInsert(1D1D0C0C");
constexpr const ImmutableString bitfieldInsert_2C2C0C0C("bitfieldInsert(2C2C0C0C");
constexpr const ImmutableString bitfieldInsert_2D2D0C0C("bitfieldInsert(2D2D0C0C");
constexpr const ImmutableString bitfieldInsert_3C3C0C0C("bitfieldInsert(3C3C0C0C");
constexpr const ImmutableString bitfieldInsert_3D3D0C0C("bitfieldInsert(3D3D0C0C");
constexpr const ImmutableString bitfieldReverse("bitfieldReverse");
constexpr const ImmutableString ceil("ceil");
constexpr const ImmutableString clamp("clamp");
constexpr const ImmutableString clamp_0B0B0B("clamp(0B0B0B");
constexpr const ImmutableString clamp_0C0C0C("clamp(0C0C0C");
constexpr const ImmutableString clamp_0D0D0D("clamp(0D0D0D");
constexpr const ImmutableString clamp_1B0B0B("clamp(1B0B0B");
constexpr const ImmutableString clamp_1B1B1B("clamp(1B1B1B");
constexpr const ImmutableString clamp_1C0C0C("clamp(1C0C0C");
constexpr const ImmutableString clamp_1C1C1C("clamp(1C1C1C");
constexpr const ImmutableString clamp_1D0D0D("clamp(1D0D0D");
constexpr const ImmutableString clamp_1D1D1D("clamp(1D1D1D");
constexpr const ImmutableString clamp_2B0B0B("clamp(2B0B0B");
constexpr const ImmutableString clamp_2B2B2B("clamp(2B2B2B");
constexpr const ImmutableString clamp_2C0C0C("clamp(2C0C0C");
constexpr const ImmutableString clamp_2C2C2C("clamp(2C2C2C");
constexpr const ImmutableString clamp_2D0D0D("clamp(2D0D0D");
constexpr const ImmutableString clamp_2D2D2D("clamp(2D2D2D");
constexpr const ImmutableString clamp_3B0B0B("clamp(3B0B0B");
constexpr const ImmutableString clamp_3B3B3B("clamp(3B3B3B");
constexpr const ImmutableString clamp_3C0C0C("clamp(3C0C0C");
constexpr const ImmutableString clamp_3C3C3C("clamp(3C3C3C");
constexpr const ImmutableString clamp_3D0D0D("clamp(3D0D0D");
constexpr const ImmutableString clamp_3D3D3D("clamp(3D3D3D");
constexpr const ImmutableString cos("cos");
constexpr const ImmutableString cosh("cosh");
constexpr const ImmutableString cross("cross");
constexpr const ImmutableString dFdx("dFdx");
constexpr const ImmutableString dFdxExt("dFdx");
constexpr const ImmutableString dFdy("dFdy");
constexpr const ImmutableString dFdyExt("dFdy");
constexpr const ImmutableString degrees("degrees");
constexpr const ImmutableString determinant("determinant");
constexpr const ImmutableString diff("diff");
constexpr const ImmutableString distance("distance");
constexpr const ImmutableString dot("dot");
constexpr const ImmutableString equal("equal");
constexpr const ImmutableString exp("exp");
constexpr const ImmutableString exp2("exp2");
constexpr const ImmutableString faceforward("faceforward");
constexpr const ImmutableString faceforward_0B0B0B("faceforward(0B0B0B");
constexpr const ImmutableString faceforward_1B1B1B("faceforward(1B1B1B");
constexpr const ImmutableString faceforward_2B2B2B("faceforward(2B2B2B");
constexpr const ImmutableString faceforward_3B3B3B("faceforward(3B3B3B");
constexpr const ImmutableString far("far");
constexpr const ImmutableString findLSB("findLSB");
constexpr const ImmutableString findMSB("findMSB");
constexpr const ImmutableString floatBitsToInt("floatBitsToInt");
constexpr const ImmutableString floatBitsToUint("floatBitsToUint");
constexpr const ImmutableString floor("floor");
constexpr const ImmutableString fract("fract");
constexpr const ImmutableString frexp("frexp");
constexpr const ImmutableString fwidth("fwidth");
constexpr const ImmutableString fwidthExt("fwidth");
constexpr const ImmutableString gl_DepthRange("gl_DepthRange");
constexpr const ImmutableString gl_DepthRangeParameters("gl_DepthRangeParameters");
constexpr const ImmutableString gl_FragColor("gl_FragColor");
constexpr const ImmutableString gl_FragCoord("gl_FragCoord");
constexpr const ImmutableString gl_FragData("gl_FragData");
constexpr const ImmutableString gl_FragDepth("gl_FragDepth");
constexpr const ImmutableString gl_FragDepthEXT("gl_FragDepthEXT");
constexpr const ImmutableString gl_FrontFacing("gl_FrontFacing");
constexpr const ImmutableString gl_GlobalInvocationID("gl_GlobalInvocationID");
constexpr const ImmutableString gl_InstanceID("gl_InstanceID");
constexpr const ImmutableString gl_InvocationID("gl_InvocationID");
constexpr const ImmutableString gl_LastFragColor("gl_LastFragColor");
constexpr const ImmutableString gl_LastFragColorARM("gl_LastFragColorARM");
constexpr const ImmutableString gl_LastFragData("gl_LastFragData");
constexpr const ImmutableString gl_Layer("gl_Layer");
constexpr const ImmutableString gl_LocalInvocationID("gl_LocalInvocationID");
constexpr const ImmutableString gl_LocalInvocationIndex("gl_LocalInvocationIndex");
constexpr const ImmutableString gl_MaxAtomicCounterBindings("gl_MaxAtomicCounterBindings");
constexpr const ImmutableString gl_MaxAtomicCounterBufferSize("gl_MaxAtomicCounterBufferSize");
constexpr const ImmutableString gl_MaxCombinedAtomicCounterBuffers(
    "gl_MaxCombinedAtomicCounterBuffers");
constexpr const ImmutableString gl_MaxCombinedAtomicCounters("gl_MaxCombinedAtomicCounters");
constexpr const ImmutableString gl_MaxCombinedImageUniforms("gl_MaxCombinedImageUniforms");
constexpr const ImmutableString gl_MaxCombinedShaderOutputResources(
    "gl_MaxCombinedShaderOutputResources");
constexpr const ImmutableString gl_MaxCombinedTextureImageUnits("gl_MaxCombinedTextureImageUnits");
constexpr const ImmutableString gl_MaxComputeAtomicCounterBuffers(
    "gl_MaxComputeAtomicCounterBuffers");
constexpr const ImmutableString gl_MaxComputeAtomicCounters("gl_MaxComputeAtomicCounters");
constexpr const ImmutableString gl_MaxComputeImageUniforms("gl_MaxComputeImageUniforms");
constexpr const ImmutableString gl_MaxComputeTextureImageUnits("gl_MaxComputeTextureImageUnits");
constexpr const ImmutableString gl_MaxComputeUniformComponents("gl_MaxComputeUniformComponents");
constexpr const ImmutableString gl_MaxComputeWorkGroupCount("gl_MaxComputeWorkGroupCount");
constexpr const ImmutableString gl_MaxComputeWorkGroupSize("gl_MaxComputeWorkGroupSize");
constexpr const ImmutableString gl_MaxDrawBuffers("gl_MaxDrawBuffers");
constexpr const ImmutableString gl_MaxDualSourceDrawBuffersEXT("gl_MaxDualSourceDrawBuffersEXT");
constexpr const ImmutableString gl_MaxFragmentAtomicCounterBuffers(
    "gl_MaxFragmentAtomicCounterBuffers");
constexpr const ImmutableString gl_MaxFragmentAtomicCounters("gl_MaxFragmentAtomicCounters");
constexpr const ImmutableString gl_MaxFragmentImageUniforms("gl_MaxFragmentImageUniforms");
constexpr const ImmutableString gl_MaxFragmentInputVectors("gl_MaxFragmentInputVectors");
constexpr const ImmutableString gl_MaxFragmentUniformVectors("gl_MaxFragmentUniformVectors");
constexpr const ImmutableString gl_MaxGeometryAtomicCounterBuffers(
    "gl_MaxGeometryAtomicCounterBuffers");
constexpr const ImmutableString gl_MaxGeometryAtomicCounters("gl_MaxGeometryAtomicCounters");
constexpr const ImmutableString gl_MaxGeometryImageUniforms("gl_MaxGeometryImageUniforms");
constexpr const ImmutableString gl_MaxGeometryInputComponents("gl_MaxGeometryInputComponents");
constexpr const ImmutableString gl_MaxGeometryOutputComponents("gl_MaxGeometryOutputComponents");
constexpr const ImmutableString gl_MaxGeometryOutputVertices("gl_MaxGeometryOutputVertices");
constexpr const ImmutableString gl_MaxGeometryTextureImageUnits("gl_MaxGeometryTextureImageUnits");
constexpr const ImmutableString gl_MaxGeometryTotalOutputComponents(
    "gl_MaxGeometryTotalOutputComponents");
constexpr const ImmutableString gl_MaxGeometryUniformComponents("gl_MaxGeometryUniformComponents");
constexpr const ImmutableString gl_MaxImageUnits("gl_MaxImageUnits");
constexpr const ImmutableString gl_MaxProgramTexelOffset("gl_MaxProgramTexelOffset");
constexpr const ImmutableString gl_MaxTextureImageUnits("gl_MaxTextureImageUnits");
constexpr const ImmutableString gl_MaxVaryingVectors("gl_MaxVaryingVectors");
constexpr const ImmutableString gl_MaxVertexAtomicCounterBuffers(
    "gl_MaxVertexAtomicCounterBuffers");
constexpr const ImmutableString gl_MaxVertexAtomicCounters("gl_MaxVertexAtomicCounters");
constexpr const ImmutableString gl_MaxVertexAttribs("gl_MaxVertexAttribs");
constexpr const ImmutableString gl_MaxVertexImageUniforms("gl_MaxVertexImageUniforms");
constexpr const ImmutableString gl_MaxVertexOutputVectors("gl_MaxVertexOutputVectors");
constexpr const ImmutableString gl_MaxVertexTextureImageUnits("gl_MaxVertexTextureImageUnits");
constexpr const ImmutableString gl_MaxVertexUniformVectors("gl_MaxVertexUniformVectors");
constexpr const ImmutableString gl_MinProgramTexelOffset("gl_MinProgramTexelOffset");
constexpr const ImmutableString gl_NumWorkGroups("gl_NumWorkGroups");
constexpr const ImmutableString gl_PerVertex("gl_PerVertex");
constexpr const ImmutableString gl_PointCoord("gl_PointCoord");
constexpr const ImmutableString gl_PointSize("gl_PointSize");
constexpr const ImmutableString gl_Position("gl_Position");
constexpr const ImmutableString gl_PrimitiveID("gl_PrimitiveID");
constexpr const ImmutableString gl_PrimitiveIDIn("gl_PrimitiveIDIn");
constexpr const ImmutableString gl_SecondaryFragColorEXT("gl_SecondaryFragColorEXT");
constexpr const ImmutableString gl_SecondaryFragDataEXT("gl_SecondaryFragDataEXT");
constexpr const ImmutableString gl_VertexID("gl_VertexID");
constexpr const ImmutableString gl_ViewID_OVR("gl_ViewID_OVR");
constexpr const ImmutableString gl_ViewportIndex("gl_ViewportIndex");
constexpr const ImmutableString gl_WorkGroupID("gl_WorkGroupID");
constexpr const ImmutableString gl_WorkGroupSize("gl_WorkGroupSize");
constexpr const ImmutableString gl_in("gl_in");
constexpr const ImmutableString greaterThan("greaterThan");
constexpr const ImmutableString greaterThanEqual("greaterThanEqual");
constexpr const ImmutableString groupMemoryBarrier("groupMemoryBarrier");
constexpr const ImmutableString imageLoad("imageLoad");
constexpr const ImmutableString imageLoad_0d1C("imageLoad(0d1C");
constexpr const ImmutableString imageSize("imageSize");
constexpr const ImmutableString imageStore("imageStore");
constexpr const ImmutableString imageStore_0c1C3B("imageStore(0c1C3B");
constexpr const ImmutableString imageStore_0d1C3C("imageStore(0d1C3C");
constexpr const ImmutableString imageStore_0e1C3D("imageStore(0e1C3D");
constexpr const ImmutableString imageStore_0f2C3B("imageStore(0f2C3B");
constexpr const ImmutableString imageStore_0g2C3C("imageStore(0g2C3C");
constexpr const ImmutableString imageStore_0h2C3D("imageStore(0h2C3D");
constexpr const ImmutableString imageStore_0i2C3B("imageStore(0i2C3B");
constexpr const ImmutableString imageStore_0j2C3C("imageStore(0j2C3C");
constexpr const ImmutableString imageStore_0k2C3D("imageStore(0k2C3D");
constexpr const ImmutableString imageStore_0l2C3B("imageStore(0l2C3B");
constexpr const ImmutableString imageStore_0m2C3C("imageStore(0m2C3C");
constexpr const ImmutableString imageStore_0n2C3D("imageStore(0n2C3D");
constexpr const ImmutableString imulExtended("imulExtended");
constexpr const ImmutableString imulExtended_0C0C0C0C("imulExtended(0C0C0C0C");
constexpr const ImmutableString imulExtended_1C1C1C1C("imulExtended(1C1C1C1C");
constexpr const ImmutableString imulExtended_2C2C2C2C("imulExtended(2C2C2C2C");
constexpr const ImmutableString imulExtended_3C3C3C3C("imulExtended(3C3C3C3C");
constexpr const ImmutableString intBitsToFloat("intBitsToFloat");
constexpr const ImmutableString inverse("inverse");
constexpr const ImmutableString inversesqrt("inversesqrt");
constexpr const ImmutableString isinf("isinf");
constexpr const ImmutableString isnan("isnan");
constexpr const ImmutableString ldexp("ldexp");
constexpr const ImmutableString length("length");
constexpr const ImmutableString lessThan("lessThan");
constexpr const ImmutableString lessThanEqual("lessThanEqual");
constexpr const ImmutableString log("log");
constexpr const ImmutableString log2("log2");
constexpr const ImmutableString matrixCompMult("matrixCompMult");
constexpr const ImmutableString max("max");
constexpr const ImmutableString memoryBarrier("memoryBarrier");
constexpr const ImmutableString memoryBarrierAtomicCounter("memoryBarrierAtomicCounter");
constexpr const ImmutableString memoryBarrierBuffer("memoryBarrierBuffer");
constexpr const ImmutableString memoryBarrierImage("memoryBarrierImage");
constexpr const ImmutableString memoryBarrierShared("memoryBarrierShared");
constexpr const ImmutableString min("min");
constexpr const ImmutableString mix("mix");
constexpr const ImmutableString mix_0B0B0B("mix(0B0B0B");
constexpr const ImmutableString mix_0B0B0E("mix(0B0B0E");
constexpr const ImmutableString mix_1B1B0B("mix(1B1B0B");
constexpr const ImmutableString mix_1B1B1B("mix(1B1B1B");
constexpr const ImmutableString mix_1B1B1E("mix(1B1B1E");
constexpr const ImmutableString mix_2B2B0B("mix(2B2B0B");
constexpr const ImmutableString mix_2B2B2B("mix(2B2B2B");
constexpr const ImmutableString mix_2B2B2E("mix(2B2B2E");
constexpr const ImmutableString mix_3B3B0B("mix(3B3B0B");
constexpr const ImmutableString mix_3B3B3B("mix(3B3B3B");
constexpr const ImmutableString mix_3B3B3E("mix(3B3B3E");
constexpr const ImmutableString mod("mod");
constexpr const ImmutableString modf("modf");
constexpr const ImmutableString near("near");
constexpr const ImmutableString normalize("normalize");
constexpr const ImmutableString notEqual("notEqual");
constexpr const ImmutableString notFunc("not");
constexpr const ImmutableString outerProduct("outerProduct");
constexpr const ImmutableString packHalf2x16("packHalf2x16");
constexpr const ImmutableString packSnorm2x16("packSnorm2x16");
constexpr const ImmutableString packSnorm4x8("packSnorm4x8");
constexpr const ImmutableString packUnorm2x16("packUnorm2x16");
constexpr const ImmutableString packUnorm4x8("packUnorm4x8");
constexpr const ImmutableString pow("pow");
constexpr const ImmutableString radians("radians");
constexpr const ImmutableString reflect("reflect");
constexpr const ImmutableString refract("refract");
constexpr const ImmutableString refract_0B0B0B("refract(0B0B0B");
constexpr const ImmutableString refract_1B1B0B("refract(1B1B0B");
constexpr const ImmutableString refract_2B2B0B("refract(2B2B0B");
constexpr const ImmutableString refract_3B3B0B("refract(3B3B0B");
constexpr const ImmutableString rgb_2_yuv("rgb_2_yuv");
constexpr const ImmutableString round("round");
constexpr const ImmutableString roundEven("roundEven");
constexpr const ImmutableString sign("sign");
constexpr const ImmutableString sin("sin");
constexpr const ImmutableString sinh("sinh");
constexpr const ImmutableString smoothstep("smoothstep");
constexpr const ImmutableString smoothstep_0B0B0B("smoothstep(0B0B0B");
constexpr const ImmutableString smoothstep_0B0B1B("smoothstep(0B0B1B");
constexpr const ImmutableString smoothstep_0B0B2B("smoothstep(0B0B2B");
constexpr const ImmutableString smoothstep_0B0B3B("smoothstep(0B0B3B");
constexpr const ImmutableString smoothstep_1B1B1B("smoothstep(1B1B1B");
constexpr const ImmutableString smoothstep_2B2B2B("smoothstep(2B2B2B");
constexpr const ImmutableString smoothstep_3B3B3B("smoothstep(3B3B3B");
constexpr const ImmutableString sqrt("sqrt");
constexpr const ImmutableString step("step");
constexpr const ImmutableString tan("tan");
constexpr const ImmutableString tanh("tanh");
constexpr const ImmutableString texelFetch("texelFetch");
constexpr const ImmutableString texelFetchOffset("texelFetchOffset");
constexpr const ImmutableString texelFetchOffset_0H1C0C1C("texelFetchOffset(0H1C0C1C");
constexpr const ImmutableString texelFetchOffset_0I2C0C2C("texelFetchOffset(0I2C0C2C");
constexpr const ImmutableString texelFetchOffset_0K2C0C1C("texelFetchOffset(0K2C0C1C");
constexpr const ImmutableString texelFetchOffset_0P1C0C1C("texelFetchOffset(0P1C0C1C");
constexpr const ImmutableString texelFetchOffset_0Q2C0C2C("texelFetchOffset(0Q2C0C2C");
constexpr const ImmutableString texelFetchOffset_0S2C0C1C("texelFetchOffset(0S2C0C1C");
constexpr const ImmutableString texelFetchOffset_0U1C0C1C("texelFetchOffset(0U1C0C1C");
constexpr const ImmutableString texelFetchOffset_0V2C0C2C("texelFetchOffset(0V2C0C2C");
constexpr const ImmutableString texelFetchOffset_0X2C0C1C("texelFetchOffset(0X2C0C1C");
constexpr const ImmutableString texelFetch_0H1C0C("texelFetch(0H1C0C");
constexpr const ImmutableString texelFetch_0I2C0C("texelFetch(0I2C0C");
constexpr const ImmutableString texelFetch_0K2C0C("texelFetch(0K2C0C");
constexpr const ImmutableString texelFetch_0L1C0C("texelFetch(0L1C0C");
constexpr const ImmutableString texelFetch_0M1C0C("texelFetch(0M1C0C");
constexpr const ImmutableString texelFetch_0O1C0C("texelFetch(0O1C0C");
constexpr const ImmutableString texelFetch_0P1C0C("texelFetch(0P1C0C");
constexpr const ImmutableString texelFetch_0Q2C0C("texelFetch(0Q2C0C");
constexpr const ImmutableString texelFetch_0S2C0C("texelFetch(0S2C0C");
constexpr const ImmutableString texelFetch_0T1C0C("texelFetch(0T1C0C");
constexpr const ImmutableString texelFetch_0U1C0C("texelFetch(0U1C0C");
constexpr const ImmutableString texelFetch_0V2C0C("texelFetch(0V2C0C");
constexpr const ImmutableString texelFetch_0X2C0C("texelFetch(0X2C0C");
constexpr const ImmutableString texelFetch_0Y1C0C("texelFetch(0Y1C0C");
constexpr const ImmutableString texture("texture");
constexpr const ImmutableString texture2D("texture2D");
constexpr const ImmutableString texture2DGradEXT("texture2DGradEXT");
constexpr const ImmutableString texture2DGradEXT_0H1B1B1B("texture2DGradEXT(0H1B1B1B");
constexpr const ImmutableString texture2DLod("texture2DLod");
constexpr const ImmutableString texture2DLodEXT("texture2DLodEXT");
constexpr const ImmutableString texture2DLodEXT_0H1B0B("texture2DLodEXT(0H1B0B");
constexpr const ImmutableString texture2DLod_0H1B0B("texture2DLod(0H1B0B");
constexpr const ImmutableString texture2DProj("texture2DProj");
constexpr const ImmutableString texture2DProjGradEXT("texture2DProjGradEXT");
constexpr const ImmutableString texture2DProjGradEXT_0H2B1B1B("texture2DProjGradEXT(0H2B1B1B");
constexpr const ImmutableString texture2DProjGradEXT_0H3B1B1B("texture2DProjGradEXT(0H3B1B1B");
constexpr const ImmutableString texture2DProjLod("texture2DProjLod");
constexpr const ImmutableString texture2DProjLodEXT("texture2DProjLodEXT");
constexpr const ImmutableString texture2DProjLodEXT_0H2B0B("texture2DProjLodEXT(0H2B0B");
constexpr const ImmutableString texture2DProjLodEXT_0H3B0B("texture2DProjLodEXT(0H3B0B");
constexpr const ImmutableString texture2DProjLod_0H2B0B("texture2DProjLod(0H2B0B");
constexpr const ImmutableString texture2DProjLod_0H3B0B("texture2DProjLod(0H3B0B");
constexpr const ImmutableString texture2DProj_0H2B0B("texture2DProj(0H2B0B");
constexpr const ImmutableString texture2DProj_0H3B0B("texture2DProj(0H3B0B");
constexpr const ImmutableString texture2DRect("texture2DRect");
constexpr const ImmutableString texture2DRectProj("texture2DRectProj");
constexpr const ImmutableString texture2D_0H1B0B("texture2D(0H1B0B");
constexpr const ImmutableString textureCube("textureCube");
constexpr const ImmutableString textureCubeGradEXT("textureCubeGradEXT");
constexpr const ImmutableString textureCubeGradEXT_0J2B2B2B("textureCubeGradEXT(0J2B2B2B");
constexpr const ImmutableString textureCubeLod("textureCubeLod");
constexpr const ImmutableString textureCubeLodEXT("textureCubeLodEXT");
constexpr const ImmutableString textureCubeLodEXT_0J2B0B("textureCubeLodEXT(0J2B0B");
constexpr const ImmutableString textureCubeLod_0J2B0B("textureCubeLod(0J2B0B");
constexpr const ImmutableString textureCube_0J2B0B("textureCube(0J2B0B");
constexpr const ImmutableString textureGather("textureGather");
constexpr const ImmutableString textureGatherOffset("textureGatherOffset");
constexpr const ImmutableString textureGatherOffset_0H1B1C("textureGatherOffset(0H1B1C");
constexpr const ImmutableString textureGatherOffset_0H1B1C0C("textureGatherOffset(0H1B1C0C");
constexpr const ImmutableString textureGatherOffset_0K2B1C("textureGatherOffset(0K2B1C");
constexpr const ImmutableString textureGatherOffset_0K2B1C0C("textureGatherOffset(0K2B1C0C");
constexpr const ImmutableString textureGatherOffset_0P1B1C("textureGatherOffset(0P1B1C");
constexpr const ImmutableString textureGatherOffset_0P1B1C0C("textureGatherOffset(0P1B1C0C");
constexpr const ImmutableString textureGatherOffset_0S2B1C("textureGatherOffset(0S2B1C");
constexpr const ImmutableString textureGatherOffset_0S2B1C0C("textureGatherOffset(0S2B1C0C");
constexpr const ImmutableString textureGatherOffset_0U1B1C("textureGatherOffset(0U1B1C");
constexpr const ImmutableString textureGatherOffset_0U1B1C0C("textureGatherOffset(0U1B1C0C");
constexpr const ImmutableString textureGatherOffset_0X2B1C("textureGatherOffset(0X2B1C");
constexpr const ImmutableString textureGatherOffset_0X2B1C0C("textureGatherOffset(0X2B1C0C");
constexpr const ImmutableString textureGatherOffset_0Z1B0B1C("textureGatherOffset(0Z1B0B1C");
constexpr const ImmutableString textureGatherOffset_0b2B0B1C("textureGatherOffset(0b2B0B1C");
constexpr const ImmutableString textureGather_0H1B0C("textureGather(0H1B0C");
constexpr const ImmutableString textureGather_0J2B0C("textureGather(0J2B0C");
constexpr const ImmutableString textureGather_0K2B0C("textureGather(0K2B0C");
constexpr const ImmutableString textureGather_0P1B0C("textureGather(0P1B0C");
constexpr const ImmutableString textureGather_0R2B0C("textureGather(0R2B0C");
constexpr const ImmutableString textureGather_0S2B0C("textureGather(0S2B0C");
constexpr const ImmutableString textureGather_0U1B0C("textureGather(0U1B0C");
constexpr const ImmutableString textureGather_0W2B0C("textureGather(0W2B0C");
constexpr const ImmutableString textureGather_0X2B0C("textureGather(0X2B0C");
constexpr const ImmutableString textureGather_0Z1B0B("textureGather(0Z1B0B");
constexpr const ImmutableString textureGather_0a2B0B("textureGather(0a2B0B");
constexpr const ImmutableString textureGather_0b2B0B("textureGather(0b2B0B");
constexpr const ImmutableString textureGrad("textureGrad");
constexpr const ImmutableString textureGradOffset("textureGradOffset");
constexpr const ImmutableString textureGradOffset_0H1B1B1B1C("textureGradOffset(0H1B1B1B1C");
constexpr const ImmutableString textureGradOffset_0I2B2B2B2C("textureGradOffset(0I2B2B2B2C");
constexpr const ImmutableString textureGradOffset_0K2B1B1B1C("textureGradOffset(0K2B1B1B1C");
constexpr const ImmutableString textureGradOffset_0P1B1B1B1C("textureGradOffset(0P1B1B1B1C");
constexpr const ImmutableString textureGradOffset_0Q2B2B2B2C("textureGradOffset(0Q2B2B2B2C");
constexpr const ImmutableString textureGradOffset_0S2B1B1B1C("textureGradOffset(0S2B1B1B1C");
constexpr const ImmutableString textureGradOffset_0U1B1B1B1C("textureGradOffset(0U1B1B1B1C");
constexpr const ImmutableString textureGradOffset_0V2B2B2B2C("textureGradOffset(0V2B2B2B2C");
constexpr const ImmutableString textureGradOffset_0X2B1B1B1C("textureGradOffset(0X2B1B1B1C");
constexpr const ImmutableString textureGradOffset_0Z2B1B1B1C("textureGradOffset(0Z2B1B1B1C");
constexpr const ImmutableString textureGradOffset_0b3B1B1B1C("textureGradOffset(0b3B1B1B1C");
constexpr const ImmutableString textureGrad_0H1B1B1B("textureGrad(0H1B1B1B");
constexpr const ImmutableString textureGrad_0I2B2B2B("textureGrad(0I2B2B2B");
constexpr const ImmutableString textureGrad_0J2B2B2B("textureGrad(0J2B2B2B");
constexpr const ImmutableString textureGrad_0K2B1B1B("textureGrad(0K2B1B1B");
constexpr const ImmutableString textureGrad_0P1B1B1B("textureGrad(0P1B1B1B");
constexpr const ImmutableString textureGrad_0Q2B2B2B("textureGrad(0Q2B2B2B");
constexpr const ImmutableString textureGrad_0R2B2B2B("textureGrad(0R2B2B2B");
constexpr const ImmutableString textureGrad_0S2B1B1B("textureGrad(0S2B1B1B");
constexpr const ImmutableString textureGrad_0U1B1B1B("textureGrad(0U1B1B1B");
constexpr const ImmutableString textureGrad_0V2B2B2B("textureGrad(0V2B2B2B");
constexpr const ImmutableString textureGrad_0W2B2B2B("textureGrad(0W2B2B2B");
constexpr const ImmutableString textureGrad_0X2B1B1B("textureGrad(0X2B1B1B");
constexpr const ImmutableString textureGrad_0Z2B1B1B("textureGrad(0Z2B1B1B");
constexpr const ImmutableString textureGrad_0a3B2B2B("textureGrad(0a3B2B2B");
constexpr const ImmutableString textureGrad_0b3B1B1B("textureGrad(0b3B1B1B");
constexpr const ImmutableString textureLod("textureLod");
constexpr const ImmutableString textureLodOffset("textureLodOffset");
constexpr const ImmutableString textureLodOffset_0H1B0B1C("textureLodOffset(0H1B0B1C");
constexpr const ImmutableString textureLodOffset_0I2B0B2C("textureLodOffset(0I2B0B2C");
constexpr const ImmutableString textureLodOffset_0K2B0B1C("textureLodOffset(0K2B0B1C");
constexpr const ImmutableString textureLodOffset_0P1B0B1C("textureLodOffset(0P1B0B1C");
constexpr const ImmutableString textureLodOffset_0Q2B0B2C("textureLodOffset(0Q2B0B2C");
constexpr const ImmutableString textureLodOffset_0S2B0B1C("textureLodOffset(0S2B0B1C");
constexpr const ImmutableString textureLodOffset_0U1B0B1C("textureLodOffset(0U1B0B1C");
constexpr const ImmutableString textureLodOffset_0V2B0B2C("textureLodOffset(0V2B0B2C");
constexpr const ImmutableString textureLodOffset_0X2B0B1C("textureLodOffset(0X2B0B1C");
constexpr const ImmutableString textureLodOffset_0Z2B0B1C("textureLodOffset(0Z2B0B1C");
constexpr const ImmutableString textureLod_0H1B0B("textureLod(0H1B0B");
constexpr const ImmutableString textureLod_0I2B0B("textureLod(0I2B0B");
constexpr const ImmutableString textureLod_0J2B0B("textureLod(0J2B0B");
constexpr const ImmutableString textureLod_0K2B0B("textureLod(0K2B0B");
constexpr const ImmutableString textureLod_0P1B0B("textureLod(0P1B0B");
constexpr const ImmutableString textureLod_0Q2B0B("textureLod(0Q2B0B");
constexpr const ImmutableString textureLod_0R2B0B("textureLod(0R2B0B");
constexpr const ImmutableString textureLod_0S2B0B("textureLod(0S2B0B");
constexpr const ImmutableString textureLod_0U1B0B("textureLod(0U1B0B");
constexpr const ImmutableString textureLod_0V2B0B("textureLod(0V2B0B");
constexpr const ImmutableString textureLod_0W2B0B("textureLod(0W2B0B");
constexpr const ImmutableString textureLod_0X2B0B("textureLod(0X2B0B");
constexpr const ImmutableString textureLod_0Z2B0B("textureLod(0Z2B0B");
constexpr const ImmutableString textureOffset("textureOffset");
constexpr const ImmutableString textureOffset_0H1B1C("textureOffset(0H1B1C");
constexpr const ImmutableString textureOffset_0H1B1C0B("textureOffset(0H1B1C0B");
constexpr const ImmutableString textureOffset_0I2B2C("textureOffset(0I2B2C");
constexpr const ImmutableString textureOffset_0I2B2C0B("textureOffset(0I2B2C0B");
constexpr const ImmutableString textureOffset_0K2B1C("textureOffset(0K2B1C");
constexpr const ImmutableString textureOffset_0K2B1C0B("textureOffset(0K2B1C0B");
constexpr const ImmutableString textureOffset_0P1B1C("textureOffset(0P1B1C");
constexpr const ImmutableString textureOffset_0P1B1C0B("textureOffset(0P1B1C0B");
constexpr const ImmutableString textureOffset_0Q2B2C("textureOffset(0Q2B2C");
constexpr const ImmutableString textureOffset_0Q2B2C0B("textureOffset(0Q2B2C0B");
constexpr const ImmutableString textureOffset_0S2B1C("textureOffset(0S2B1C");
constexpr const ImmutableString textureOffset_0S2B1C0B("textureOffset(0S2B1C0B");
constexpr const ImmutableString textureOffset_0U1B1C("textureOffset(0U1B1C");
constexpr const ImmutableString textureOffset_0U1B1C0B("textureOffset(0U1B1C0B");
constexpr const ImmutableString textureOffset_0V2B2C("textureOffset(0V2B2C");
constexpr const ImmutableString textureOffset_0V2B2C0B("textureOffset(0V2B2C0B");
constexpr const ImmutableString textureOffset_0X2B1C("textureOffset(0X2B1C");
constexpr const ImmutableString textureOffset_0X2B1C0B("textureOffset(0X2B1C0B");
constexpr const ImmutableString textureOffset_0Z2B1C("textureOffset(0Z2B1C");
constexpr const ImmutableString textureOffset_0Z2B1C0B("textureOffset(0Z2B1C0B");
constexpr const ImmutableString textureProj("textureProj");
constexpr const ImmutableString textureProjGrad("textureProjGrad");
constexpr const ImmutableString textureProjGradOffset("textureProjGradOffset");
constexpr const ImmutableString textureProjGradOffset_0H2B1B1B1C(
    "textureProjGradOffset(0H2B1B1B1C");
constexpr const ImmutableString textureProjGradOffset_0H3B1B1B1C(
    "textureProjGradOffset(0H3B1B1B1C");
constexpr const ImmutableString textureProjGradOffset_0I3B2B2B2C(
    "textureProjGradOffset(0I3B2B2B2C");
constexpr const ImmutableString textureProjGradOffset_0P2B1B1B1C(
    "textureProjGradOffset(0P2B1B1B1C");
constexpr const ImmutableString textureProjGradOffset_0P3B1B1B1C(
    "textureProjGradOffset(0P3B1B1B1C");
constexpr const ImmutableString textureProjGradOffset_0Q3B2B2B2C(
    "textureProjGradOffset(0Q3B2B2B2C");
constexpr const ImmutableString textureProjGradOffset_0U2B1B1B1C(
    "textureProjGradOffset(0U2B1B1B1C");
constexpr const ImmutableString textureProjGradOffset_0U3B1B1B1C(
    "textureProjGradOffset(0U3B1B1B1C");
constexpr const ImmutableString textureProjGradOffset_0V3B2B2B2C(
    "textureProjGradOffset(0V3B2B2B2C");
constexpr const ImmutableString textureProjGradOffset_0Z3B1B1B1C(
    "textureProjGradOffset(0Z3B1B1B1C");
constexpr const ImmutableString textureProjGrad_0H2B1B1B("textureProjGrad(0H2B1B1B");
constexpr const ImmutableString textureProjGrad_0H3B1B1B("textureProjGrad(0H3B1B1B");
constexpr const ImmutableString textureProjGrad_0I3B2B2B("textureProjGrad(0I3B2B2B");
constexpr const ImmutableString textureProjGrad_0P2B1B1B("textureProjGrad(0P2B1B1B");
constexpr const ImmutableString textureProjGrad_0P3B1B1B("textureProjGrad(0P3B1B1B");
constexpr const ImmutableString textureProjGrad_0Q3B2B2B("textureProjGrad(0Q3B2B2B");
constexpr const ImmutableString textureProjGrad_0U2B1B1B("textureProjGrad(0U2B1B1B");
constexpr const ImmutableString textureProjGrad_0U3B1B1B("textureProjGrad(0U3B1B1B");
constexpr const ImmutableString textureProjGrad_0V3B2B2B("textureProjGrad(0V3B2B2B");
constexpr const ImmutableString textureProjGrad_0Z3B1B1B("textureProjGrad(0Z3B1B1B");
constexpr const ImmutableString textureProjLod("textureProjLod");
constexpr const ImmutableString textureProjLodOffset("textureProjLodOffset");
constexpr const ImmutableString textureProjLodOffset_0H2B0B1C("textureProjLodOffset(0H2B0B1C");
constexpr const ImmutableString textureProjLodOffset_0H3B0B1C("textureProjLodOffset(0H3B0B1C");
constexpr const ImmutableString textureProjLodOffset_0I3B0B2C("textureProjLodOffset(0I3B0B2C");
constexpr const ImmutableString textureProjLodOffset_0P2B0B1C("textureProjLodOffset(0P2B0B1C");
constexpr const ImmutableString textureProjLodOffset_0P3B0B1C("textureProjLodOffset(0P3B0B1C");
constexpr const ImmutableString textureProjLodOffset_0Q3B0B2C("textureProjLodOffset(0Q3B0B2C");
constexpr const ImmutableString textureProjLodOffset_0U2B0B1C("textureProjLodOffset(0U2B0B1C");
constexpr const ImmutableString textureProjLodOffset_0U3B0B1C("textureProjLodOffset(0U3B0B1C");
constexpr const ImmutableString textureProjLodOffset_0V3B0B2C("textureProjLodOffset(0V3B0B2C");
constexpr const ImmutableString textureProjLodOffset_0Z3B0B1C("textureProjLodOffset(0Z3B0B1C");
constexpr const ImmutableString textureProjLod_0H2B0B("textureProjLod(0H2B0B");
constexpr const ImmutableString textureProjLod_0H3B0B("textureProjLod(0H3B0B");
constexpr const ImmutableString textureProjLod_0I3B0B("textureProjLod(0I3B0B");
constexpr const ImmutableString textureProjLod_0P2B0B("textureProjLod(0P2B0B");
constexpr const ImmutableString textureProjLod_0P3B0B("textureProjLod(0P3B0B");
constexpr const ImmutableString textureProjLod_0Q3B0B("textureProjLod(0Q3B0B");
constexpr const ImmutableString textureProjLod_0U2B0B("textureProjLod(0U2B0B");
constexpr const ImmutableString textureProjLod_0U3B0B("textureProjLod(0U3B0B");
constexpr const ImmutableString textureProjLod_0V3B0B("textureProjLod(0V3B0B");
constexpr const ImmutableString textureProjLod_0Z3B0B("textureProjLod(0Z3B0B");
constexpr const ImmutableString textureProjOffset("textureProjOffset");
constexpr const ImmutableString textureProjOffset_0H2B1C("textureProjOffset(0H2B1C");
constexpr const ImmutableString textureProjOffset_0H2B1C0B("textureProjOffset(0H2B1C0B");
constexpr const ImmutableString textureProjOffset_0H3B1C("textureProjOffset(0H3B1C");
constexpr const ImmutableString textureProjOffset_0H3B1C0B("textureProjOffset(0H3B1C0B");
constexpr const ImmutableString textureProjOffset_0I3B2C("textureProjOffset(0I3B2C");
constexpr const ImmutableString textureProjOffset_0I3B2C0B("textureProjOffset(0I3B2C0B");
constexpr const ImmutableString textureProjOffset_0P2B1C("textureProjOffset(0P2B1C");
constexpr const ImmutableString textureProjOffset_0P2B1C0B("textureProjOffset(0P2B1C0B");
constexpr const ImmutableString textureProjOffset_0P3B1C("textureProjOffset(0P3B1C");
constexpr const ImmutableString textureProjOffset_0P3B1C0B("textureProjOffset(0P3B1C0B");
constexpr const ImmutableString textureProjOffset_0Q3B2C("textureProjOffset(0Q3B2C");
constexpr const ImmutableString textureProjOffset_0Q3B2C0B("textureProjOffset(0Q3B2C0B");
constexpr const ImmutableString textureProjOffset_0U2B1C("textureProjOffset(0U2B1C");
constexpr const ImmutableString textureProjOffset_0U2B1C0B("textureProjOffset(0U2B1C0B");
constexpr const ImmutableString textureProjOffset_0U3B1C("textureProjOffset(0U3B1C");
constexpr const ImmutableString textureProjOffset_0U3B1C0B("textureProjOffset(0U3B1C0B");
constexpr const ImmutableString textureProjOffset_0V3B2C("textureProjOffset(0V3B2C");
constexpr const ImmutableString textureProjOffset_0V3B2C0B("textureProjOffset(0V3B2C0B");
constexpr const ImmutableString textureProjOffset_0Z3B1C("textureProjOffset(0Z3B1C");
constexpr const ImmutableString textureProjOffset_0Z3B1C0B("textureProjOffset(0Z3B1C0B");
constexpr const ImmutableString textureProj_0H2B0B("textureProj(0H2B0B");
constexpr const ImmutableString textureProj_0H3B0B("textureProj(0H3B0B");
constexpr const ImmutableString textureProj_0I3B0B("textureProj(0I3B0B");
constexpr const ImmutableString textureProj_0L2B0B("textureProj(0L2B0B");
constexpr const ImmutableString textureProj_0L3B0B("textureProj(0L3B0B");
constexpr const ImmutableString textureProj_0M2B0B("textureProj(0M2B0B");
constexpr const ImmutableString textureProj_0M3B0B("textureProj(0M3B0B");
constexpr const ImmutableString textureProj_0P2B0B("textureProj(0P2B0B");
constexpr const ImmutableString textureProj_0P3B0B("textureProj(0P3B0B");
constexpr const ImmutableString textureProj_0Q3B0B("textureProj(0Q3B0B");
constexpr const ImmutableString textureProj_0U2B0B("textureProj(0U2B0B");
constexpr const ImmutableString textureProj_0U3B0B("textureProj(0U3B0B");
constexpr const ImmutableString textureProj_0V3B0B("textureProj(0V3B0B");
constexpr const ImmutableString textureProj_0Z3B0B("textureProj(0Z3B0B");
constexpr const ImmutableString textureSize("textureSize");
constexpr const ImmutableString texture_0H1B0B("texture(0H1B0B");
constexpr const ImmutableString texture_0I2B0B("texture(0I2B0B");
constexpr const ImmutableString texture_0J2B0B("texture(0J2B0B");
constexpr const ImmutableString texture_0K2B0B("texture(0K2B0B");
constexpr const ImmutableString texture_0L1B0B("texture(0L1B0B");
constexpr const ImmutableString texture_0M1B0B("texture(0M1B0B");
constexpr const ImmutableString texture_0N1B("texture(0N1B");
constexpr const ImmutableString texture_0P1B0B("texture(0P1B0B");
constexpr const ImmutableString texture_0Q2B0B("texture(0Q2B0B");
constexpr const ImmutableString texture_0R2B0B("texture(0R2B0B");
constexpr const ImmutableString texture_0S2B0B("texture(0S2B0B");
constexpr const ImmutableString texture_0U1B0B("texture(0U1B0B");
constexpr const ImmutableString texture_0V2B0B("texture(0V2B0B");
constexpr const ImmutableString texture_0W2B0B("texture(0W2B0B");
constexpr const ImmutableString texture_0X2B0B("texture(0X2B0B");
constexpr const ImmutableString texture_0Z2B0B("texture(0Z2B0B");
constexpr const ImmutableString texture_0a3B0B("texture(0a3B0B");
constexpr const ImmutableString transpose("transpose");
constexpr const ImmutableString trunc("trunc");
constexpr const ImmutableString uaddCarry("uaddCarry");
constexpr const ImmutableString uaddCarry_0D0D0D("uaddCarry(0D0D0D");
constexpr const ImmutableString uaddCarry_1D1D1D("uaddCarry(1D1D1D");
constexpr const ImmutableString uaddCarry_2D2D2D("uaddCarry(2D2D2D");
constexpr const ImmutableString uaddCarry_3D3D3D("uaddCarry(3D3D3D");
constexpr const ImmutableString uintBitsToFloat("uintBitsToFloat");
constexpr const ImmutableString umulExtended("umulExtended");
constexpr const ImmutableString umulExtended_0D0D0D0D("umulExtended(0D0D0D0D");
constexpr const ImmutableString umulExtended_1D1D1D1D("umulExtended(1D1D1D1D");
constexpr const ImmutableString umulExtended_2D2D2D2D("umulExtended(2D2D2D2D");
constexpr const ImmutableString umulExtended_3D3D3D3D("umulExtended(3D3D3D3D");
constexpr const ImmutableString unpackHalf2x16("unpackHalf2x16");
constexpr const ImmutableString unpackSnorm2x16("unpackSnorm2x16");
constexpr const ImmutableString unpackSnorm4x8("unpackSnorm4x8");
constexpr const ImmutableString unpackUnorm2x16("unpackUnorm2x16");
constexpr const ImmutableString unpackUnorm4x8("unpackUnorm4x8");
constexpr const ImmutableString usubBorrow("usubBorrow");
constexpr const ImmutableString usubBorrow_0D0D0D("usubBorrow(0D0D0D");
constexpr const ImmutableString usubBorrow_1D1D1D("usubBorrow(1D1D1D");
constexpr const ImmutableString usubBorrow_2D2D2D("usubBorrow(2D2D2D");
constexpr const ImmutableString usubBorrow_3D3D3D("usubBorrow(3D3D3D");
constexpr const ImmutableString yuv_2_rgb("yuv_2_rgb");

}  // namespace BuiltInName

// TODO(oetuaho): Would be nice to make this a class instead of a namespace so that we could friend
// this from TVariable. Now symbol constructors taking an id have to be public even though they're
// not supposed to be accessible from outside of here. http://anglebug.com/2390
namespace BuiltInVariable
{

constexpr const TVariable kVar_gl_FragColor(
    BuiltInId::gl_FragColor,
    BuiltInName::gl_FragColor,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtFloat, EbpMedium, EvqFragColor, 4, 1>());
constexpr const TVariable kVar_gl_FragCoord(
    BuiltInId::gl_FragCoord,
    BuiltInName::gl_FragCoord,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtFloat, EbpMedium, EvqFragCoord, 4, 1>());
constexpr const TVariable kVar_gl_FragDepth(
    BuiltInId::gl_FragDepth,
    BuiltInName::gl_FragDepth,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtFloat, EbpHigh, EvqFragDepth, 1, 1>());
constexpr const TVariable kVar_gl_FrontFacing(
    BuiltInId::gl_FrontFacing,
    BuiltInName::gl_FrontFacing,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtBool, EbpUndefined, EvqFrontFacing, 1, 1>());
constexpr const TVariable kVar_gl_GlobalInvocationID(
    BuiltInId::gl_GlobalInvocationID,
    BuiltInName::gl_GlobalInvocationID,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobalInvocationID, 3, 1>());
constexpr const TVariable kVar_gl_InstanceID(
    BuiltInId::gl_InstanceID,
    BuiltInName::gl_InstanceID,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtInt, EbpHigh, EvqInstanceID, 1, 1>());
constexpr const TVariable kVar_gl_InvocationID(
    BuiltInId::gl_InvocationID,
    BuiltInName::gl_InvocationID,
    SymbolType::BuiltIn,
    TExtension::EXT_geometry_shader,
    StaticType::Get<EbtInt, EbpHigh, EvqInvocationID, 1, 1>());
constexpr const TVariable kVar_gl_LastFragColor(
    BuiltInId::gl_LastFragColor,
    BuiltInName::gl_LastFragColor,
    SymbolType::BuiltIn,
    TExtension::NV_shader_framebuffer_fetch,
    StaticType::Get<EbtFloat, EbpMedium, EvqLastFragColor, 4, 1>());
constexpr const TVariable kVar_gl_LastFragColorARM(
    BuiltInId::gl_LastFragColorARM,
    BuiltInName::gl_LastFragColorARM,
    SymbolType::BuiltIn,
    TExtension::ARM_shader_framebuffer_fetch,
    StaticType::Get<EbtFloat, EbpMedium, EvqLastFragColor, 4, 1>());
constexpr const TVariable kVar_gl_Layer(BuiltInId::gl_Layer,
                                        BuiltInName::gl_Layer,
                                        SymbolType::BuiltIn,
                                        TExtension::EXT_geometry_shader,
                                        StaticType::Get<EbtInt, EbpHigh, EvqLayer, 1, 1>());
constexpr const TVariable kVar_gl_LayerGS(BuiltInId::gl_LayerGS,
                                          BuiltInName::gl_Layer,
                                          SymbolType::BuiltIn,
                                          TExtension::EXT_geometry_shader,
                                          StaticType::Get<EbtInt, EbpHigh, EvqLayer, 1, 1>());
constexpr const TVariable kVar_gl_LayerVS(BuiltInId::gl_LayerVS,
                                          BuiltInName::gl_Layer,
                                          SymbolType::BuiltIn,
                                          TExtension::UNDEFINED,
                                          StaticType::Get<EbtInt, EbpHigh, EvqLayer, 1, 1>());
constexpr const TVariable kVar_gl_LocalInvocationID(
    BuiltInId::gl_LocalInvocationID,
    BuiltInName::gl_LocalInvocationID,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtUInt, EbpUndefined, EvqLocalInvocationID, 3, 1>());
constexpr const TVariable kVar_gl_LocalInvocationIndex(
    BuiltInId::gl_LocalInvocationIndex,
    BuiltInName::gl_LocalInvocationIndex,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtUInt, EbpUndefined, EvqLocalInvocationIndex, 1, 1>());
constexpr const TVariable kVar_gl_NumWorkGroups(
    BuiltInId::gl_NumWorkGroups,
    BuiltInName::gl_NumWorkGroups,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtUInt, EbpUndefined, EvqNumWorkGroups, 3, 1>());
constexpr const TVariable kVar_gl_PointCoord(
    BuiltInId::gl_PointCoord,
    BuiltInName::gl_PointCoord,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtFloat, EbpMedium, EvqPointCoord, 2, 1>());
constexpr const TVariable kVar_gl_PointSize(
    BuiltInId::gl_PointSize,
    BuiltInName::gl_PointSize,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtFloat, EbpMedium, EvqPointSize, 1, 1>());
constexpr const TVariable kVar_gl_Position(BuiltInId::gl_Position,
                                           BuiltInName::gl_Position,
                                           SymbolType::BuiltIn,
                                           TExtension::UNDEFINED,
                                           StaticType::Get<EbtFloat, EbpHigh, EvqPosition, 4, 1>());
constexpr const TVariable kVar_gl_PrimitiveID(
    BuiltInId::gl_PrimitiveID,
    BuiltInName::gl_PrimitiveID,
    SymbolType::BuiltIn,
    TExtension::EXT_geometry_shader,
    StaticType::Get<EbtInt, EbpHigh, EvqPrimitiveID, 1, 1>());
constexpr const TVariable kVar_gl_PrimitiveIDGS(
    BuiltInId::gl_PrimitiveIDGS,
    BuiltInName::gl_PrimitiveID,
    SymbolType::BuiltIn,
    TExtension::EXT_geometry_shader,
    StaticType::Get<EbtInt, EbpHigh, EvqPrimitiveID, 1, 1>());
constexpr const TVariable kVar_gl_PrimitiveIDIn(
    BuiltInId::gl_PrimitiveIDIn,
    BuiltInName::gl_PrimitiveIDIn,
    SymbolType::BuiltIn,
    TExtension::EXT_geometry_shader,
    StaticType::Get<EbtInt, EbpHigh, EvqPrimitiveIDIn, 1, 1>());
constexpr const TVariable kVar_gl_SecondaryFragColorEXT(
    BuiltInId::gl_SecondaryFragColorEXT,
    BuiltInName::gl_SecondaryFragColorEXT,
    SymbolType::BuiltIn,
    TExtension::EXT_blend_func_extended,
    StaticType::Get<EbtFloat, EbpMedium, EvqSecondaryFragColorEXT, 4, 1>());
constexpr const TVariable kVar_gl_VertexID(BuiltInId::gl_VertexID,
                                           BuiltInName::gl_VertexID,
                                           SymbolType::BuiltIn,
                                           TExtension::UNDEFINED,
                                           StaticType::Get<EbtInt, EbpHigh, EvqVertexID, 1, 1>());
constexpr const TVariable kVar_gl_ViewID_OVR(
    BuiltInId::gl_ViewID_OVR,
    BuiltInName::gl_ViewID_OVR,
    SymbolType::BuiltIn,
    TExtension::OVR_multiview,
    StaticType::Get<EbtUInt, EbpHigh, EvqViewIDOVR, 1, 1>());
constexpr const TVariable kVar_gl_ViewID_OVRESSL1(
    BuiltInId::gl_ViewID_OVRESSL1,
    BuiltInName::gl_ViewID_OVR,
    SymbolType::BuiltIn,
    TExtension::OVR_multiview,
    StaticType::Get<EbtInt, EbpHigh, EvqViewIDOVR, 1, 1>());
constexpr const TVariable kVar_gl_ViewportIndex(
    BuiltInId::gl_ViewportIndex,
    BuiltInName::gl_ViewportIndex,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtInt, EbpHigh, EvqViewportIndex, 1, 1>());
constexpr const TVariable kVar_gl_WorkGroupID(
    BuiltInId::gl_WorkGroupID,
    BuiltInName::gl_WorkGroupID,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtUInt, EbpUndefined, EvqWorkGroupID, 3, 1>());
constexpr const TVariable kVar_gl_WorkGroupSize(
    BuiltInId::gl_WorkGroupSize,
    BuiltInName::gl_WorkGroupSize,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtUInt, EbpUndefined, EvqWorkGroupSize, 3, 1>());
constexpr const TVariable kVar_pt0B(BuiltInId::pt0B,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0C(BuiltInId::pt0C,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0D(BuiltInId::pt0D,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0E(BuiltInId::pt0E,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0F(
    BuiltInId::pt0F,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtAtomicCounter, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0G(
    BuiltInId::pt0G,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtYuvCscStandardEXT, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0H(BuiltInId::pt0H,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtSampler2D, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0I(BuiltInId::pt0I,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtSampler3D, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0J(
    BuiltInId::pt0J,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtSamplerCube, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0K(
    BuiltInId::pt0K,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtSampler2DArray, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0L(
    BuiltInId::pt0L,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtSamplerExternalOES, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0M(
    BuiltInId::pt0M,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtSamplerExternal2DY2YEXT, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0N(
    BuiltInId::pt0N,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtSampler2DRect, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0O(
    BuiltInId::pt0O,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtSampler2DMS, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0P(
    BuiltInId::pt0P,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtISampler2D, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0Q(
    BuiltInId::pt0Q,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtISampler3D, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0R(
    BuiltInId::pt0R,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtISamplerCube, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0S(
    BuiltInId::pt0S,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtISampler2DArray, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0T(
    BuiltInId::pt0T,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtISampler2DMS, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0U(
    BuiltInId::pt0U,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtUSampler2D, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0V(
    BuiltInId::pt0V,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtUSampler3D, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0W(
    BuiltInId::pt0W,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtUSamplerCube, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0X(
    BuiltInId::pt0X,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtUSampler2DArray, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0Y(
    BuiltInId::pt0Y,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtUSampler2DMS, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0Z(
    BuiltInId::pt0Z,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtSampler2DShadow, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0a(
    BuiltInId::pt0a,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtSamplerCubeShadow, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0b(
    BuiltInId::pt0b,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtSampler2DArrayShadow, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0c(BuiltInId::pt0c,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtImage2D, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0d(BuiltInId::pt0d,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtIImage2D, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0e(BuiltInId::pt0e,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtUImage2D, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0f(BuiltInId::pt0f,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtImage3D, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0g(BuiltInId::pt0g,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtIImage3D, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0h(BuiltInId::pt0h,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtUImage3D, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0i(
    BuiltInId::pt0i,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtImage2DArray, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0j(
    BuiltInId::pt0j,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtIImage2DArray, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0k(
    BuiltInId::pt0k,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtUImage2DArray, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0l(BuiltInId::pt0l,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtImageCube, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0m(
    BuiltInId::pt0m,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtIImageCube, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0n(
    BuiltInId::pt0n,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtUImageCube, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt1B(BuiltInId::pt1B,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>());
constexpr const TVariable kVar_pt1C(BuiltInId::pt1C,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>());
constexpr const TVariable kVar_pt1D(BuiltInId::pt1D,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 2, 1>());
constexpr const TVariable kVar_pt1E(BuiltInId::pt1E,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>());
constexpr const TVariable kVar_pt2B(BuiltInId::pt2B,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>());
constexpr const TVariable kVar_pt2C(BuiltInId::pt2C,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>());
constexpr const TVariable kVar_pt2D(BuiltInId::pt2D,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 3, 1>());
constexpr const TVariable kVar_pt2E(BuiltInId::pt2E,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>());
constexpr const TVariable kVar_pt3B(BuiltInId::pt3B,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>());
constexpr const TVariable kVar_pt3C(BuiltInId::pt3C,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>());
constexpr const TVariable kVar_pt3D(BuiltInId::pt3D,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>());
constexpr const TVariable kVar_pt3E(BuiltInId::pt3E,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>());
constexpr const TVariable kVar_pt5B(BuiltInId::pt5B,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 2>());
constexpr const TVariable kVar_pt6B(BuiltInId::pt6B,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 2>());
constexpr const TVariable kVar_pt7B(BuiltInId::pt7B,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 2>());
constexpr const TVariable kVar_pt9B(BuiltInId::pt9B,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 3>());
constexpr const TVariable kVar_ptAB(BuiltInId::ptAB,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 3>());
constexpr const TVariable kVar_ptBB(BuiltInId::ptBB,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 3>());
constexpr const TVariable kVar_ptDB(BuiltInId::ptDB,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 4>());
constexpr const TVariable kVar_ptEB(BuiltInId::ptEB,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 4>());
constexpr const TVariable kVar_ptFB(BuiltInId::ptFB,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 4>());
constexpr const TVariable kVar_pt_io_0C(BuiltInId::pt_io_0C,
                                        BuiltInName::_empty,
                                        SymbolType::BuiltIn,
                                        TExtension::UNDEFINED,
                                        StaticType::Get<EbtInt, EbpUndefined, EvqInOut, 1, 1>());
constexpr const TVariable kVar_pt_io_0D(BuiltInId::pt_io_0D,
                                        BuiltInName::_empty,
                                        SymbolType::BuiltIn,
                                        TExtension::UNDEFINED,
                                        StaticType::Get<EbtUInt, EbpUndefined, EvqInOut, 1, 1>());
constexpr const TVariable kVar_pt_o_0B(BuiltInId::pt_o_0B,
                                       BuiltInName::_empty,
                                       SymbolType::BuiltIn,
                                       TExtension::UNDEFINED,
                                       StaticType::Get<EbtFloat, EbpUndefined, EvqOut, 1, 1>());
constexpr const TVariable kVar_pt_o_0C(BuiltInId::pt_o_0C,
                                       BuiltInName::_empty,
                                       SymbolType::BuiltIn,
                                       TExtension::UNDEFINED,
                                       StaticType::Get<EbtInt, EbpUndefined, EvqOut, 1, 1>());
constexpr const TVariable kVar_pt_o_0D(BuiltInId::pt_o_0D,
                                       BuiltInName::_empty,
                                       SymbolType::BuiltIn,
                                       TExtension::UNDEFINED,
                                       StaticType::Get<EbtUInt, EbpUndefined, EvqOut, 1, 1>());
constexpr const TVariable kVar_pt_o_1B(BuiltInId::pt_o_1B,
                                       BuiltInName::_empty,
                                       SymbolType::BuiltIn,
                                       TExtension::UNDEFINED,
                                       StaticType::Get<EbtFloat, EbpUndefined, EvqOut, 2, 1>());
constexpr const TVariable kVar_pt_o_1C(BuiltInId::pt_o_1C,
                                       BuiltInName::_empty,
                                       SymbolType::BuiltIn,
                                       TExtension::UNDEFINED,
                                       StaticType::Get<EbtInt, EbpUndefined, EvqOut, 2, 1>());
constexpr const TVariable kVar_pt_o_1D(BuiltInId::pt_o_1D,
                                       BuiltInName::_empty,
                                       SymbolType::BuiltIn,
                                       TExtension::UNDEFINED,
                                       StaticType::Get<EbtUInt, EbpUndefined, EvqOut, 2, 1>());
constexpr const TVariable kVar_pt_o_2B(BuiltInId::pt_o_2B,
                                       BuiltInName::_empty,
                                       SymbolType::BuiltIn,
                                       TExtension::UNDEFINED,
                                       StaticType::Get<EbtFloat, EbpUndefined, EvqOut, 3, 1>());
constexpr const TVariable kVar_pt_o_2C(BuiltInId::pt_o_2C,
                                       BuiltInName::_empty,
                                       SymbolType::BuiltIn,
                                       TExtension::UNDEFINED,
                                       StaticType::Get<EbtInt, EbpUndefined, EvqOut, 3, 1>());
constexpr const TVariable kVar_pt_o_2D(BuiltInId::pt_o_2D,
                                       BuiltInName::_empty,
                                       SymbolType::BuiltIn,
                                       TExtension::UNDEFINED,
                                       StaticType::Get<EbtUInt, EbpUndefined, EvqOut, 3, 1>());
constexpr const TVariable kVar_pt_o_3B(BuiltInId::pt_o_3B,
                                       BuiltInName::_empty,
                                       SymbolType::BuiltIn,
                                       TExtension::UNDEFINED,
                                       StaticType::Get<EbtFloat, EbpUndefined, EvqOut, 4, 1>());
constexpr const TVariable kVar_pt_o_3C(BuiltInId::pt_o_3C,
                                       BuiltInName::_empty,
                                       SymbolType::BuiltIn,
                                       TExtension::UNDEFINED,
                                       StaticType::Get<EbtInt, EbpUndefined, EvqOut, 4, 1>());
constexpr const TVariable kVar_pt_o_3D(BuiltInId::pt_o_3D,
                                       BuiltInName::_empty,
                                       SymbolType::BuiltIn,
                                       TExtension::UNDEFINED,
                                       StaticType::Get<EbtUInt, EbpUndefined, EvqOut, 4, 1>());

const TVariable *gl_FragColor()
{
    return &kVar_gl_FragColor;
}

const TVariable *gl_FragCoord()
{
    return &kVar_gl_FragCoord;
}

const TVariable *gl_FragDepth()
{
    return &kVar_gl_FragDepth;
}

const TVariable *gl_FrontFacing()
{
    return &kVar_gl_FrontFacing;
}

const TVariable *gl_GlobalInvocationID()
{
    return &kVar_gl_GlobalInvocationID;
}

const TVariable *gl_InstanceID()
{
    return &kVar_gl_InstanceID;
}

const TVariable *gl_InvocationID()
{
    return &kVar_gl_InvocationID;
}

const TVariable *gl_LastFragColor()
{
    return &kVar_gl_LastFragColor;
}

const TVariable *gl_LastFragColorARM()
{
    return &kVar_gl_LastFragColorARM;
}

const TVariable *gl_Layer()
{
    return &kVar_gl_Layer;
}

const TVariable *gl_LayerGS()
{
    return &kVar_gl_LayerGS;
}

const TVariable *gl_LayerVS()
{
    return &kVar_gl_LayerVS;
}

const TVariable *gl_LocalInvocationID()
{
    return &kVar_gl_LocalInvocationID;
}

const TVariable *gl_LocalInvocationIndex()
{
    return &kVar_gl_LocalInvocationIndex;
}

const TVariable *gl_NumWorkGroups()
{
    return &kVar_gl_NumWorkGroups;
}

const TVariable *gl_PointCoord()
{
    return &kVar_gl_PointCoord;
}

const TVariable *gl_PointSize()
{
    return &kVar_gl_PointSize;
}

const TVariable *gl_Position()
{
    return &kVar_gl_Position;
}

const TVariable *gl_PrimitiveID()
{
    return &kVar_gl_PrimitiveID;
}

const TVariable *gl_PrimitiveIDGS()
{
    return &kVar_gl_PrimitiveIDGS;
}

const TVariable *gl_PrimitiveIDIn()
{
    return &kVar_gl_PrimitiveIDIn;
}

const TVariable *gl_SecondaryFragColorEXT()
{
    return &kVar_gl_SecondaryFragColorEXT;
}

const TVariable *gl_VertexID()
{
    return &kVar_gl_VertexID;
}

const TVariable *gl_ViewID_OVR()
{
    return &kVar_gl_ViewID_OVR;
}

const TVariable *gl_ViewID_OVRESSL1()
{
    return &kVar_gl_ViewID_OVRESSL1;
}

const TVariable *gl_ViewportIndex()
{
    return &kVar_gl_ViewportIndex;
}

const TVariable *gl_WorkGroupID()
{
    return &kVar_gl_WorkGroupID;
}

const TVariable *gl_WorkGroupSize()
{
    return &kVar_gl_WorkGroupSize;
}

};  // namespace BuiltInVariable

namespace BuiltInParameters
{

constexpr const TVariable **empty      = nullptr;
constexpr const TVariable *p0B0B0B[3]  = {&BuiltInVariable::kVar_pt0B, &BuiltInVariable::kVar_pt0B,
                                         &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p0B0B0E[3]  = {&BuiltInVariable::kVar_pt0B, &BuiltInVariable::kVar_pt0B,
                                         &BuiltInVariable::kVar_pt0E};
constexpr const TVariable *p0B0B1B[3]  = {&BuiltInVariable::kVar_pt0B, &BuiltInVariable::kVar_pt0B,
                                         &BuiltInVariable::kVar_pt1B};
constexpr const TVariable *p0B0B2B[3]  = {&BuiltInVariable::kVar_pt0B, &BuiltInVariable::kVar_pt0B,
                                         &BuiltInVariable::kVar_pt2B};
constexpr const TVariable *p0B0B3B[3]  = {&BuiltInVariable::kVar_pt0B, &BuiltInVariable::kVar_pt0B,
                                         &BuiltInVariable::kVar_pt3B};
constexpr const TVariable *p0B0C[2]    = {&BuiltInVariable::kVar_pt0B, &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0B1B[2]    = {&BuiltInVariable::kVar_pt0B, &BuiltInVariable::kVar_pt1B};
constexpr const TVariable *p0B2B[2]    = {&BuiltInVariable::kVar_pt0B, &BuiltInVariable::kVar_pt2B};
constexpr const TVariable *p0B3B[2]    = {&BuiltInVariable::kVar_pt0B, &BuiltInVariable::kVar_pt3B};
constexpr const TVariable *p0B_o_0B[2] = {&BuiltInVariable::kVar_pt0B,
                                          &BuiltInVariable::kVar_pt_o_0B};
constexpr const TVariable *p0B_o_0C[2] = {&BuiltInVariable::kVar_pt0B,
                                          &BuiltInVariable::kVar_pt_o_0C};
constexpr const TVariable *p0C0C0C0C[4] = {&BuiltInVariable::kVar_pt0C, &BuiltInVariable::kVar_pt0C,
                                           &BuiltInVariable::kVar_pt0C,
                                           &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0C0C_o_0C_o_0C[4] = {
    &BuiltInVariable::kVar_pt0C, &BuiltInVariable::kVar_pt0C, &BuiltInVariable::kVar_pt_o_0C,
    &BuiltInVariable::kVar_pt_o_0C};
constexpr const TVariable *p0D0C0C[3]   = {&BuiltInVariable::kVar_pt0D, &BuiltInVariable::kVar_pt0C,
                                         &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0D0D0C0C[4] = {&BuiltInVariable::kVar_pt0D, &BuiltInVariable::kVar_pt0D,
                                           &BuiltInVariable::kVar_pt0C,
                                           &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0D0D0D[3]   = {&BuiltInVariable::kVar_pt0D, &BuiltInVariable::kVar_pt0D,
                                         &BuiltInVariable::kVar_pt0D};
constexpr const TVariable *p0D0D_o_0D_o_0D[4] = {
    &BuiltInVariable::kVar_pt0D, &BuiltInVariable::kVar_pt0D, &BuiltInVariable::kVar_pt_o_0D,
    &BuiltInVariable::kVar_pt_o_0D};
constexpr const TVariable *p0F[1]   = {&BuiltInVariable::kVar_pt0F};
constexpr const TVariable *p0H0C[2] = {&BuiltInVariable::kVar_pt0H, &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0H1B0B1C[4] = {&BuiltInVariable::kVar_pt0H, &BuiltInVariable::kVar_pt1B,
                                           &BuiltInVariable::kVar_pt0B,
                                           &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0H1B0C[3]   = {&BuiltInVariable::kVar_pt0H, &BuiltInVariable::kVar_pt1B,
                                         &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0H1B1B1B1C[5] = {
    &BuiltInVariable::kVar_pt0H, &BuiltInVariable::kVar_pt1B, &BuiltInVariable::kVar_pt1B,
    &BuiltInVariable::kVar_pt1B, &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0H1B1C0B[4] = {&BuiltInVariable::kVar_pt0H, &BuiltInVariable::kVar_pt1B,
                                           &BuiltInVariable::kVar_pt1C,
                                           &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p0H1B1C0C[4] = {&BuiltInVariable::kVar_pt0H, &BuiltInVariable::kVar_pt1B,
                                           &BuiltInVariable::kVar_pt1C,
                                           &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0H1C0C1C[4] = {&BuiltInVariable::kVar_pt0H, &BuiltInVariable::kVar_pt1C,
                                           &BuiltInVariable::kVar_pt0C,
                                           &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0H2B0B1C[4] = {&BuiltInVariable::kVar_pt0H, &BuiltInVariable::kVar_pt2B,
                                           &BuiltInVariable::kVar_pt0B,
                                           &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0H2B1B1B1C[5] = {
    &BuiltInVariable::kVar_pt0H, &BuiltInVariable::kVar_pt2B, &BuiltInVariable::kVar_pt1B,
    &BuiltInVariable::kVar_pt1B, &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0H2B1C0B[4] = {&BuiltInVariable::kVar_pt0H, &BuiltInVariable::kVar_pt2B,
                                           &BuiltInVariable::kVar_pt1C,
                                           &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p0H3B0B1C[4] = {&BuiltInVariable::kVar_pt0H, &BuiltInVariable::kVar_pt3B,
                                           &BuiltInVariable::kVar_pt0B,
                                           &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0H3B1B1B1C[5] = {
    &BuiltInVariable::kVar_pt0H, &BuiltInVariable::kVar_pt3B, &BuiltInVariable::kVar_pt1B,
    &BuiltInVariable::kVar_pt1B, &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0H3B1C0B[4] = {&BuiltInVariable::kVar_pt0H, &BuiltInVariable::kVar_pt3B,
                                           &BuiltInVariable::kVar_pt1C,
                                           &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p0I0C[2] = {&BuiltInVariable::kVar_pt0I, &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0I2B0B2C[4] = {&BuiltInVariable::kVar_pt0I, &BuiltInVariable::kVar_pt2B,
                                           &BuiltInVariable::kVar_pt0B,
                                           &BuiltInVariable::kVar_pt2C};
constexpr const TVariable *p0I2B2B2B2C[5] = {
    &BuiltInVariable::kVar_pt0I, &BuiltInVariable::kVar_pt2B, &BuiltInVariable::kVar_pt2B,
    &BuiltInVariable::kVar_pt2B, &BuiltInVariable::kVar_pt2C};
constexpr const TVariable *p0I2B2C0B[4] = {&BuiltInVariable::kVar_pt0I, &BuiltInVariable::kVar_pt2B,
                                           &BuiltInVariable::kVar_pt2C,
                                           &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p0I2C0C2C[4] = {&BuiltInVariable::kVar_pt0I, &BuiltInVariable::kVar_pt2C,
                                           &BuiltInVariable::kVar_pt0C,
                                           &BuiltInVariable::kVar_pt2C};
constexpr const TVariable *p0I3B0B2C[4] = {&BuiltInVariable::kVar_pt0I, &BuiltInVariable::kVar_pt3B,
                                           &BuiltInVariable::kVar_pt0B,
                                           &BuiltInVariable::kVar_pt2C};
constexpr const TVariable *p0I3B2B2B2C[5] = {
    &BuiltInVariable::kVar_pt0I, &BuiltInVariable::kVar_pt3B, &BuiltInVariable::kVar_pt2B,
    &BuiltInVariable::kVar_pt2B, &BuiltInVariable::kVar_pt2C};
constexpr const TVariable *p0I3B2C0B[4] = {&BuiltInVariable::kVar_pt0I, &BuiltInVariable::kVar_pt3B,
                                           &BuiltInVariable::kVar_pt2C,
                                           &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p0J0C[2]   = {&BuiltInVariable::kVar_pt0J, &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0J2B0B[3] = {&BuiltInVariable::kVar_pt0J, &BuiltInVariable::kVar_pt2B,
                                         &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p0J2B0C[3] = {&BuiltInVariable::kVar_pt0J, &BuiltInVariable::kVar_pt2B,
                                         &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0J2B2B2B[4] = {&BuiltInVariable::kVar_pt0J, &BuiltInVariable::kVar_pt2B,
                                           &BuiltInVariable::kVar_pt2B,
                                           &BuiltInVariable::kVar_pt2B};
constexpr const TVariable *p0K0C[2] = {&BuiltInVariable::kVar_pt0K, &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0K2B0B1C[4] = {&BuiltInVariable::kVar_pt0K, &BuiltInVariable::kVar_pt2B,
                                           &BuiltInVariable::kVar_pt0B,
                                           &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0K2B0C[3]   = {&BuiltInVariable::kVar_pt0K, &BuiltInVariable::kVar_pt2B,
                                         &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0K2B1B1B1C[5] = {
    &BuiltInVariable::kVar_pt0K, &BuiltInVariable::kVar_pt2B, &BuiltInVariable::kVar_pt1B,
    &BuiltInVariable::kVar_pt1B, &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0K2B1C0B[4] = {&BuiltInVariable::kVar_pt0K, &BuiltInVariable::kVar_pt2B,
                                           &BuiltInVariable::kVar_pt1C,
                                           &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p0K2B1C0C[4] = {&BuiltInVariable::kVar_pt0K, &BuiltInVariable::kVar_pt2B,
                                           &BuiltInVariable::kVar_pt1C,
                                           &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0K2C0C1C[4] = {&BuiltInVariable::kVar_pt0K, &BuiltInVariable::kVar_pt2C,
                                           &BuiltInVariable::kVar_pt0C,
                                           &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0L0C[2]   = {&BuiltInVariable::kVar_pt0L, &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0L1B0B[3] = {&BuiltInVariable::kVar_pt0L, &BuiltInVariable::kVar_pt1B,
                                         &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p0L1C0C[3] = {&BuiltInVariable::kVar_pt0L, &BuiltInVariable::kVar_pt1C,
                                         &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0L2B0B[3] = {&BuiltInVariable::kVar_pt0L, &BuiltInVariable::kVar_pt2B,
                                         &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p0L3B0B[3] = {&BuiltInVariable::kVar_pt0L, &BuiltInVariable::kVar_pt3B,
                                         &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p0M0C[2]   = {&BuiltInVariable::kVar_pt0M, &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0M1B0B[3] = {&BuiltInVariable::kVar_pt0M, &BuiltInVariable::kVar_pt1B,
                                         &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p0M1C0C[3] = {&BuiltInVariable::kVar_pt0M, &BuiltInVariable::kVar_pt1C,
                                         &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0M2B0B[3] = {&BuiltInVariable::kVar_pt0M, &BuiltInVariable::kVar_pt2B,
                                         &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p0M3B0B[3] = {&BuiltInVariable::kVar_pt0M, &BuiltInVariable::kVar_pt3B,
                                         &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p0N1B[2]   = {&BuiltInVariable::kVar_pt0N, &BuiltInVariable::kVar_pt1B};
constexpr const TVariable *p0N2B[2]   = {&BuiltInVariable::kVar_pt0N, &BuiltInVariable::kVar_pt2B};
constexpr const TVariable *p0N3B[2]   = {&BuiltInVariable::kVar_pt0N, &BuiltInVariable::kVar_pt3B};
constexpr const TVariable *p0O1C0C[3] = {&BuiltInVariable::kVar_pt0O, &BuiltInVariable::kVar_pt1C,
                                         &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0P0C[2]   = {&BuiltInVariable::kVar_pt0P, &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0P1B0B1C[4] = {&BuiltInVariable::kVar_pt0P, &BuiltInVariable::kVar_pt1B,
                                           &BuiltInVariable::kVar_pt0B,
                                           &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0P1B0C[3]   = {&BuiltInVariable::kVar_pt0P, &BuiltInVariable::kVar_pt1B,
                                         &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0P1B1B1B1C[5] = {
    &BuiltInVariable::kVar_pt0P, &BuiltInVariable::kVar_pt1B, &BuiltInVariable::kVar_pt1B,
    &BuiltInVariable::kVar_pt1B, &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0P1B1C0B[4] = {&BuiltInVariable::kVar_pt0P, &BuiltInVariable::kVar_pt1B,
                                           &BuiltInVariable::kVar_pt1C,
                                           &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p0P1B1C0C[4] = {&BuiltInVariable::kVar_pt0P, &BuiltInVariable::kVar_pt1B,
                                           &BuiltInVariable::kVar_pt1C,
                                           &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0P1C0C1C[4] = {&BuiltInVariable::kVar_pt0P, &BuiltInVariable::kVar_pt1C,
                                           &BuiltInVariable::kVar_pt0C,
                                           &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0P2B0B1C[4] = {&BuiltInVariable::kVar_pt0P, &BuiltInVariable::kVar_pt2B,
                                           &BuiltInVariable::kVar_pt0B,
                                           &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0P2B1B1B1C[5] = {
    &BuiltInVariable::kVar_pt0P, &BuiltInVariable::kVar_pt2B, &BuiltInVariable::kVar_pt1B,
    &BuiltInVariable::kVar_pt1B, &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0P2B1C0B[4] = {&BuiltInVariable::kVar_pt0P, &BuiltInVariable::kVar_pt2B,
                                           &BuiltInVariable::kVar_pt1C,
                                           &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p0P3B0B1C[4] = {&BuiltInVariable::kVar_pt0P, &BuiltInVariable::kVar_pt3B,
                                           &BuiltInVariable::kVar_pt0B,
                                           &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0P3B1B1B1C[5] = {
    &BuiltInVariable::kVar_pt0P, &BuiltInVariable::kVar_pt3B, &BuiltInVariable::kVar_pt1B,
    &BuiltInVariable::kVar_pt1B, &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0P3B1C0B[4] = {&BuiltInVariable::kVar_pt0P, &BuiltInVariable::kVar_pt3B,
                                           &BuiltInVariable::kVar_pt1C,
                                           &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p0Q0C[2] = {&BuiltInVariable::kVar_pt0Q, &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0Q2B0B2C[4] = {&BuiltInVariable::kVar_pt0Q, &BuiltInVariable::kVar_pt2B,
                                           &BuiltInVariable::kVar_pt0B,
                                           &BuiltInVariable::kVar_pt2C};
constexpr const TVariable *p0Q2B2B2B2C[5] = {
    &BuiltInVariable::kVar_pt0Q, &BuiltInVariable::kVar_pt2B, &BuiltInVariable::kVar_pt2B,
    &BuiltInVariable::kVar_pt2B, &BuiltInVariable::kVar_pt2C};
constexpr const TVariable *p0Q2B2C0B[4] = {&BuiltInVariable::kVar_pt0Q, &BuiltInVariable::kVar_pt2B,
                                           &BuiltInVariable::kVar_pt2C,
                                           &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p0Q2C0C2C[4] = {&BuiltInVariable::kVar_pt0Q, &BuiltInVariable::kVar_pt2C,
                                           &BuiltInVariable::kVar_pt0C,
                                           &BuiltInVariable::kVar_pt2C};
constexpr const TVariable *p0Q3B0B2C[4] = {&BuiltInVariable::kVar_pt0Q, &BuiltInVariable::kVar_pt3B,
                                           &BuiltInVariable::kVar_pt0B,
                                           &BuiltInVariable::kVar_pt2C};
constexpr const TVariable *p0Q3B2B2B2C[5] = {
    &BuiltInVariable::kVar_pt0Q, &BuiltInVariable::kVar_pt3B, &BuiltInVariable::kVar_pt2B,
    &BuiltInVariable::kVar_pt2B, &BuiltInVariable::kVar_pt2C};
constexpr const TVariable *p0Q3B2C0B[4] = {&BuiltInVariable::kVar_pt0Q, &BuiltInVariable::kVar_pt3B,
                                           &BuiltInVariable::kVar_pt2C,
                                           &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p0R0C[2]   = {&BuiltInVariable::kVar_pt0R, &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0R2B0B[3] = {&BuiltInVariable::kVar_pt0R, &BuiltInVariable::kVar_pt2B,
                                         &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p0R2B0C[3] = {&BuiltInVariable::kVar_pt0R, &BuiltInVariable::kVar_pt2B,
                                         &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0R2B2B2B[4] = {&BuiltInVariable::kVar_pt0R, &BuiltInVariable::kVar_pt2B,
                                           &BuiltInVariable::kVar_pt2B,
                                           &BuiltInVariable::kVar_pt2B};
constexpr const TVariable *p0S0C[2] = {&BuiltInVariable::kVar_pt0S, &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0S2B0B1C[4] = {&BuiltInVariable::kVar_pt0S, &BuiltInVariable::kVar_pt2B,
                                           &BuiltInVariable::kVar_pt0B,
                                           &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0S2B0C[3]   = {&BuiltInVariable::kVar_pt0S, &BuiltInVariable::kVar_pt2B,
                                         &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0S2B1B1B1C[5] = {
    &BuiltInVariable::kVar_pt0S, &BuiltInVariable::kVar_pt2B, &BuiltInVariable::kVar_pt1B,
    &BuiltInVariable::kVar_pt1B, &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0S2B1C0B[4] = {&BuiltInVariable::kVar_pt0S, &BuiltInVariable::kVar_pt2B,
                                           &BuiltInVariable::kVar_pt1C,
                                           &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p0S2B1C0C[4] = {&BuiltInVariable::kVar_pt0S, &BuiltInVariable::kVar_pt2B,
                                           &BuiltInVariable::kVar_pt1C,
                                           &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0S2C0C1C[4] = {&BuiltInVariable::kVar_pt0S, &BuiltInVariable::kVar_pt2C,
                                           &BuiltInVariable::kVar_pt0C,
                                           &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0T1C0C[3]   = {&BuiltInVariable::kVar_pt0T, &BuiltInVariable::kVar_pt1C,
                                         &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0U0C[2] = {&BuiltInVariable::kVar_pt0U, &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0U1B0B1C[4] = {&BuiltInVariable::kVar_pt0U, &BuiltInVariable::kVar_pt1B,
                                           &BuiltInVariable::kVar_pt0B,
                                           &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0U1B0C[3]   = {&BuiltInVariable::kVar_pt0U, &BuiltInVariable::kVar_pt1B,
                                         &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0U1B1B1B1C[5] = {
    &BuiltInVariable::kVar_pt0U, &BuiltInVariable::kVar_pt1B, &BuiltInVariable::kVar_pt1B,
    &BuiltInVariable::kVar_pt1B, &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0U1B1C0B[4] = {&BuiltInVariable::kVar_pt0U, &BuiltInVariable::kVar_pt1B,
                                           &BuiltInVariable::kVar_pt1C,
                                           &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p0U1B1C0C[4] = {&BuiltInVariable::kVar_pt0U, &BuiltInVariable::kVar_pt1B,
                                           &BuiltInVariable::kVar_pt1C,
                                           &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0U1C0C1C[4] = {&BuiltInVariable::kVar_pt0U, &BuiltInVariable::kVar_pt1C,
                                           &BuiltInVariable::kVar_pt0C,
                                           &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0U2B0B1C[4] = {&BuiltInVariable::kVar_pt0U, &BuiltInVariable::kVar_pt2B,
                                           &BuiltInVariable::kVar_pt0B,
                                           &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0U2B1B1B1C[5] = {
    &BuiltInVariable::kVar_pt0U, &BuiltInVariable::kVar_pt2B, &BuiltInVariable::kVar_pt1B,
    &BuiltInVariable::kVar_pt1B, &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0U2B1C0B[4] = {&BuiltInVariable::kVar_pt0U, &BuiltInVariable::kVar_pt2B,
                                           &BuiltInVariable::kVar_pt1C,
                                           &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p0U3B0B1C[4] = {&BuiltInVariable::kVar_pt0U, &BuiltInVariable::kVar_pt3B,
                                           &BuiltInVariable::kVar_pt0B,
                                           &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0U3B1B1B1C[5] = {
    &BuiltInVariable::kVar_pt0U, &BuiltInVariable::kVar_pt3B, &BuiltInVariable::kVar_pt1B,
    &BuiltInVariable::kVar_pt1B, &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0U3B1C0B[4] = {&BuiltInVariable::kVar_pt0U, &BuiltInVariable::kVar_pt3B,
                                           &BuiltInVariable::kVar_pt1C,
                                           &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p0V0C[2] = {&BuiltInVariable::kVar_pt0V, &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0V2B0B2C[4] = {&BuiltInVariable::kVar_pt0V, &BuiltInVariable::kVar_pt2B,
                                           &BuiltInVariable::kVar_pt0B,
                                           &BuiltInVariable::kVar_pt2C};
constexpr const TVariable *p0V2B2B2B2C[5] = {
    &BuiltInVariable::kVar_pt0V, &BuiltInVariable::kVar_pt2B, &BuiltInVariable::kVar_pt2B,
    &BuiltInVariable::kVar_pt2B, &BuiltInVariable::kVar_pt2C};
constexpr const TVariable *p0V2B2C0B[4] = {&BuiltInVariable::kVar_pt0V, &BuiltInVariable::kVar_pt2B,
                                           &BuiltInVariable::kVar_pt2C,
                                           &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p0V2C0C2C[4] = {&BuiltInVariable::kVar_pt0V, &BuiltInVariable::kVar_pt2C,
                                           &BuiltInVariable::kVar_pt0C,
                                           &BuiltInVariable::kVar_pt2C};
constexpr const TVariable *p0V3B0B2C[4] = {&BuiltInVariable::kVar_pt0V, &BuiltInVariable::kVar_pt3B,
                                           &BuiltInVariable::kVar_pt0B,
                                           &BuiltInVariable::kVar_pt2C};
constexpr const TVariable *p0V3B2B2B2C[5] = {
    &BuiltInVariable::kVar_pt0V, &BuiltInVariable::kVar_pt3B, &BuiltInVariable::kVar_pt2B,
    &BuiltInVariable::kVar_pt2B, &BuiltInVariable::kVar_pt2C};
constexpr const TVariable *p0V3B2C0B[4] = {&BuiltInVariable::kVar_pt0V, &BuiltInVariable::kVar_pt3B,
                                           &BuiltInVariable::kVar_pt2C,
                                           &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p0W0C[2]   = {&BuiltInVariable::kVar_pt0W, &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0W2B0B[3] = {&BuiltInVariable::kVar_pt0W, &BuiltInVariable::kVar_pt2B,
                                         &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p0W2B0C[3] = {&BuiltInVariable::kVar_pt0W, &BuiltInVariable::kVar_pt2B,
                                         &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0W2B2B2B[4] = {&BuiltInVariable::kVar_pt0W, &BuiltInVariable::kVar_pt2B,
                                           &BuiltInVariable::kVar_pt2B,
                                           &BuiltInVariable::kVar_pt2B};
constexpr const TVariable *p0X0C[2] = {&BuiltInVariable::kVar_pt0X, &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0X2B0B1C[4] = {&BuiltInVariable::kVar_pt0X, &BuiltInVariable::kVar_pt2B,
                                           &BuiltInVariable::kVar_pt0B,
                                           &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0X2B0C[3]   = {&BuiltInVariable::kVar_pt0X, &BuiltInVariable::kVar_pt2B,
                                         &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0X2B1B1B1C[5] = {
    &BuiltInVariable::kVar_pt0X, &BuiltInVariable::kVar_pt2B, &BuiltInVariable::kVar_pt1B,
    &BuiltInVariable::kVar_pt1B, &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0X2B1C0B[4] = {&BuiltInVariable::kVar_pt0X, &BuiltInVariable::kVar_pt2B,
                                           &BuiltInVariable::kVar_pt1C,
                                           &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p0X2B1C0C[4] = {&BuiltInVariable::kVar_pt0X, &BuiltInVariable::kVar_pt2B,
                                           &BuiltInVariable::kVar_pt1C,
                                           &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0X2C0C1C[4] = {&BuiltInVariable::kVar_pt0X, &BuiltInVariable::kVar_pt2C,
                                           &BuiltInVariable::kVar_pt0C,
                                           &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0Y1C0C[3]   = {&BuiltInVariable::kVar_pt0Y, &BuiltInVariable::kVar_pt1C,
                                         &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0Z0C[2] = {&BuiltInVariable::kVar_pt0Z, &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0Z1B0B1C[4] = {&BuiltInVariable::kVar_pt0Z, &BuiltInVariable::kVar_pt1B,
                                           &BuiltInVariable::kVar_pt0B,
                                           &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0Z2B0B1C[4] = {&BuiltInVariable::kVar_pt0Z, &BuiltInVariable::kVar_pt2B,
                                           &BuiltInVariable::kVar_pt0B,
                                           &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0Z2B1B1B1C[5] = {
    &BuiltInVariable::kVar_pt0Z, &BuiltInVariable::kVar_pt2B, &BuiltInVariable::kVar_pt1B,
    &BuiltInVariable::kVar_pt1B, &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0Z2B1C0B[4] = {&BuiltInVariable::kVar_pt0Z, &BuiltInVariable::kVar_pt2B,
                                           &BuiltInVariable::kVar_pt1C,
                                           &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p0Z3B0B1C[4] = {&BuiltInVariable::kVar_pt0Z, &BuiltInVariable::kVar_pt3B,
                                           &BuiltInVariable::kVar_pt0B,
                                           &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0Z3B1B1B1C[5] = {
    &BuiltInVariable::kVar_pt0Z, &BuiltInVariable::kVar_pt3B, &BuiltInVariable::kVar_pt1B,
    &BuiltInVariable::kVar_pt1B, &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0Z3B1C0B[4] = {&BuiltInVariable::kVar_pt0Z, &BuiltInVariable::kVar_pt3B,
                                           &BuiltInVariable::kVar_pt1C,
                                           &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p0a0C[2]   = {&BuiltInVariable::kVar_pt0a, &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0a2B0B[3] = {&BuiltInVariable::kVar_pt0a, &BuiltInVariable::kVar_pt2B,
                                         &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p0a3B0B[3] = {&BuiltInVariable::kVar_pt0a, &BuiltInVariable::kVar_pt3B,
                                         &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p0a3B2B2B[4] = {&BuiltInVariable::kVar_pt0a, &BuiltInVariable::kVar_pt3B,
                                           &BuiltInVariable::kVar_pt2B,
                                           &BuiltInVariable::kVar_pt2B};
constexpr const TVariable *p0b0C[2] = {&BuiltInVariable::kVar_pt0b, &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0b2B0B1C[4] = {&BuiltInVariable::kVar_pt0b, &BuiltInVariable::kVar_pt2B,
                                           &BuiltInVariable::kVar_pt0B,
                                           &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0b3B1B1B1C[5] = {
    &BuiltInVariable::kVar_pt0b, &BuiltInVariable::kVar_pt3B, &BuiltInVariable::kVar_pt1B,
    &BuiltInVariable::kVar_pt1B, &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0c1C3B[3]  = {&BuiltInVariable::kVar_pt0c, &BuiltInVariable::kVar_pt1C,
                                         &BuiltInVariable::kVar_pt3B};
constexpr const TVariable *p0d1C3C[3]  = {&BuiltInVariable::kVar_pt0d, &BuiltInVariable::kVar_pt1C,
                                         &BuiltInVariable::kVar_pt3C};
constexpr const TVariable *p0e1C3D[3]  = {&BuiltInVariable::kVar_pt0e, &BuiltInVariable::kVar_pt1C,
                                         &BuiltInVariable::kVar_pt3D};
constexpr const TVariable *p0f2C3B[3]  = {&BuiltInVariable::kVar_pt0f, &BuiltInVariable::kVar_pt2C,
                                         &BuiltInVariable::kVar_pt3B};
constexpr const TVariable *p0g2C3C[3]  = {&BuiltInVariable::kVar_pt0g, &BuiltInVariable::kVar_pt2C,
                                         &BuiltInVariable::kVar_pt3C};
constexpr const TVariable *p0h2C3D[3]  = {&BuiltInVariable::kVar_pt0h, &BuiltInVariable::kVar_pt2C,
                                         &BuiltInVariable::kVar_pt3D};
constexpr const TVariable *p0i2C3B[3]  = {&BuiltInVariable::kVar_pt0i, &BuiltInVariable::kVar_pt2C,
                                         &BuiltInVariable::kVar_pt3B};
constexpr const TVariable *p0j2C3C[3]  = {&BuiltInVariable::kVar_pt0j, &BuiltInVariable::kVar_pt2C,
                                         &BuiltInVariable::kVar_pt3C};
constexpr const TVariable *p0k2C3D[3]  = {&BuiltInVariable::kVar_pt0k, &BuiltInVariable::kVar_pt2C,
                                         &BuiltInVariable::kVar_pt3D};
constexpr const TVariable *p0l2C3B[3]  = {&BuiltInVariable::kVar_pt0l, &BuiltInVariable::kVar_pt2C,
                                         &BuiltInVariable::kVar_pt3B};
constexpr const TVariable *p0m2C3C[3]  = {&BuiltInVariable::kVar_pt0m, &BuiltInVariable::kVar_pt2C,
                                         &BuiltInVariable::kVar_pt3C};
constexpr const TVariable *p0n2C3D[3]  = {&BuiltInVariable::kVar_pt0n, &BuiltInVariable::kVar_pt2C,
                                         &BuiltInVariable::kVar_pt3D};
constexpr const TVariable *p1B0B0B[3]  = {&BuiltInVariable::kVar_pt1B, &BuiltInVariable::kVar_pt0B,
                                         &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p1B1B0B[3]  = {&BuiltInVariable::kVar_pt1B, &BuiltInVariable::kVar_pt1B,
                                         &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p1B1B1B[3]  = {&BuiltInVariable::kVar_pt1B, &BuiltInVariable::kVar_pt1B,
                                         &BuiltInVariable::kVar_pt1B};
constexpr const TVariable *p1B1B1E[3]  = {&BuiltInVariable::kVar_pt1B, &BuiltInVariable::kVar_pt1B,
                                         &BuiltInVariable::kVar_pt1E};
constexpr const TVariable *p1B1C[2]    = {&BuiltInVariable::kVar_pt1B, &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p1B2B[2]    = {&BuiltInVariable::kVar_pt1B, &BuiltInVariable::kVar_pt2B};
constexpr const TVariable *p1B3B[2]    = {&BuiltInVariable::kVar_pt1B, &BuiltInVariable::kVar_pt3B};
constexpr const TVariable *p1B_o_1B[2] = {&BuiltInVariable::kVar_pt1B,
                                          &BuiltInVariable::kVar_pt_o_1B};
constexpr const TVariable *p1B_o_1C[2] = {&BuiltInVariable::kVar_pt1B,
                                          &BuiltInVariable::kVar_pt_o_1C};
constexpr const TVariable *p1C0C0C[3]  = {&BuiltInVariable::kVar_pt1C, &BuiltInVariable::kVar_pt0C,
                                         &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p1C1C0C0C[4] = {&BuiltInVariable::kVar_pt1C, &BuiltInVariable::kVar_pt1C,
                                           &BuiltInVariable::kVar_pt0C,
                                           &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p1C1C1C[3]   = {&BuiltInVariable::kVar_pt1C, &BuiltInVariable::kVar_pt1C,
                                         &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p1C1C_o_1C_o_1C[4] = {
    &BuiltInVariable::kVar_pt1C, &BuiltInVariable::kVar_pt1C, &BuiltInVariable::kVar_pt_o_1C,
    &BuiltInVariable::kVar_pt_o_1C};
constexpr const TVariable *p1D0C0C[3]   = {&BuiltInVariable::kVar_pt1D, &BuiltInVariable::kVar_pt0C,
                                         &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p1D0D0D[3]   = {&BuiltInVariable::kVar_pt1D, &BuiltInVariable::kVar_pt0D,
                                         &BuiltInVariable::kVar_pt0D};
constexpr const TVariable *p1D1D0C0C[4] = {&BuiltInVariable::kVar_pt1D, &BuiltInVariable::kVar_pt1D,
                                           &BuiltInVariable::kVar_pt0C,
                                           &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p1D1D1D[3]   = {&BuiltInVariable::kVar_pt1D, &BuiltInVariable::kVar_pt1D,
                                         &BuiltInVariable::kVar_pt1D};
constexpr const TVariable *p1D1D_o_1D_o_1D[4] = {
    &BuiltInVariable::kVar_pt1D, &BuiltInVariable::kVar_pt1D, &BuiltInVariable::kVar_pt_o_1D,
    &BuiltInVariable::kVar_pt_o_1D};
constexpr const TVariable *p1E1E[2]    = {&BuiltInVariable::kVar_pt1E, &BuiltInVariable::kVar_pt1E};
constexpr const TVariable *p2B0B0B[3]  = {&BuiltInVariable::kVar_pt2B, &BuiltInVariable::kVar_pt0B,
                                         &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p2B0G[2]    = {&BuiltInVariable::kVar_pt2B, &BuiltInVariable::kVar_pt0G};
constexpr const TVariable *p2B1B[2]    = {&BuiltInVariable::kVar_pt2B, &BuiltInVariable::kVar_pt1B};
constexpr const TVariable *p2B2B0B[3]  = {&BuiltInVariable::kVar_pt2B, &BuiltInVariable::kVar_pt2B,
                                         &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p2B2B2B[3]  = {&BuiltInVariable::kVar_pt2B, &BuiltInVariable::kVar_pt2B,
                                         &BuiltInVariable::kVar_pt2B};
constexpr const TVariable *p2B2B2E[3]  = {&BuiltInVariable::kVar_pt2B, &BuiltInVariable::kVar_pt2B,
                                         &BuiltInVariable::kVar_pt2E};
constexpr const TVariable *p2B2C[2]    = {&BuiltInVariable::kVar_pt2B, &BuiltInVariable::kVar_pt2C};
constexpr const TVariable *p2B3B[2]    = {&BuiltInVariable::kVar_pt2B, &BuiltInVariable::kVar_pt3B};
constexpr const TVariable *p2B_o_2B[2] = {&BuiltInVariable::kVar_pt2B,
                                          &BuiltInVariable::kVar_pt_o_2B};
constexpr const TVariable *p2B_o_2C[2] = {&BuiltInVariable::kVar_pt2B,
                                          &BuiltInVariable::kVar_pt_o_2C};
constexpr const TVariable *p2C0C0C[3]  = {&BuiltInVariable::kVar_pt2C, &BuiltInVariable::kVar_pt0C,
                                         &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p2C2C0C0C[4] = {&BuiltInVariable::kVar_pt2C, &BuiltInVariable::kVar_pt2C,
                                           &BuiltInVariable::kVar_pt0C,
                                           &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p2C2C2C[3]   = {&BuiltInVariable::kVar_pt2C, &BuiltInVariable::kVar_pt2C,
                                         &BuiltInVariable::kVar_pt2C};
constexpr const TVariable *p2C2C_o_2C_o_2C[4] = {
    &BuiltInVariable::kVar_pt2C, &BuiltInVariable::kVar_pt2C, &BuiltInVariable::kVar_pt_o_2C,
    &BuiltInVariable::kVar_pt_o_2C};
constexpr const TVariable *p2D0C0C[3]   = {&BuiltInVariable::kVar_pt2D, &BuiltInVariable::kVar_pt0C,
                                         &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p2D0D0D[3]   = {&BuiltInVariable::kVar_pt2D, &BuiltInVariable::kVar_pt0D,
                                         &BuiltInVariable::kVar_pt0D};
constexpr const TVariable *p2D2D0C0C[4] = {&BuiltInVariable::kVar_pt2D, &BuiltInVariable::kVar_pt2D,
                                           &BuiltInVariable::kVar_pt0C,
                                           &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p2D2D2D[3]   = {&BuiltInVariable::kVar_pt2D, &BuiltInVariable::kVar_pt2D,
                                         &BuiltInVariable::kVar_pt2D};
constexpr const TVariable *p2D2D_o_2D_o_2D[4] = {
    &BuiltInVariable::kVar_pt2D, &BuiltInVariable::kVar_pt2D, &BuiltInVariable::kVar_pt_o_2D,
    &BuiltInVariable::kVar_pt_o_2D};
constexpr const TVariable *p2E2E[2]    = {&BuiltInVariable::kVar_pt2E, &BuiltInVariable::kVar_pt2E};
constexpr const TVariable *p3B0B0B[3]  = {&BuiltInVariable::kVar_pt3B, &BuiltInVariable::kVar_pt0B,
                                         &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p3B1B[2]    = {&BuiltInVariable::kVar_pt3B, &BuiltInVariable::kVar_pt1B};
constexpr const TVariable *p3B2B[2]    = {&BuiltInVariable::kVar_pt3B, &BuiltInVariable::kVar_pt2B};
constexpr const TVariable *p3B3B0B[3]  = {&BuiltInVariable::kVar_pt3B, &BuiltInVariable::kVar_pt3B,
                                         &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p3B3B3B[3]  = {&BuiltInVariable::kVar_pt3B, &BuiltInVariable::kVar_pt3B,
                                         &BuiltInVariable::kVar_pt3B};
constexpr const TVariable *p3B3B3E[3]  = {&BuiltInVariable::kVar_pt3B, &BuiltInVariable::kVar_pt3B,
                                         &BuiltInVariable::kVar_pt3E};
constexpr const TVariable *p3B3C[2]    = {&BuiltInVariable::kVar_pt3B, &BuiltInVariable::kVar_pt3C};
constexpr const TVariable *p3B_o_3B[2] = {&BuiltInVariable::kVar_pt3B,
                                          &BuiltInVariable::kVar_pt_o_3B};
constexpr const TVariable *p3B_o_3C[2] = {&BuiltInVariable::kVar_pt3B,
                                          &BuiltInVariable::kVar_pt_o_3C};
constexpr const TVariable *p3C0C0C[3]  = {&BuiltInVariable::kVar_pt3C, &BuiltInVariable::kVar_pt0C,
                                         &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p3C3C0C0C[4] = {&BuiltInVariable::kVar_pt3C, &BuiltInVariable::kVar_pt3C,
                                           &BuiltInVariable::kVar_pt0C,
                                           &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p3C3C3C[3]   = {&BuiltInVariable::kVar_pt3C, &BuiltInVariable::kVar_pt3C,
                                         &BuiltInVariable::kVar_pt3C};
constexpr const TVariable *p3C3C_o_3C_o_3C[4] = {
    &BuiltInVariable::kVar_pt3C, &BuiltInVariable::kVar_pt3C, &BuiltInVariable::kVar_pt_o_3C,
    &BuiltInVariable::kVar_pt_o_3C};
constexpr const TVariable *p3D0C0C[3]   = {&BuiltInVariable::kVar_pt3D, &BuiltInVariable::kVar_pt0C,
                                         &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p3D0D0D[3]   = {&BuiltInVariable::kVar_pt3D, &BuiltInVariable::kVar_pt0D,
                                         &BuiltInVariable::kVar_pt0D};
constexpr const TVariable *p3D3D0C0C[4] = {&BuiltInVariable::kVar_pt3D, &BuiltInVariable::kVar_pt3D,
                                           &BuiltInVariable::kVar_pt0C,
                                           &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p3D3D3D[3]   = {&BuiltInVariable::kVar_pt3D, &BuiltInVariable::kVar_pt3D,
                                         &BuiltInVariable::kVar_pt3D};
constexpr const TVariable *p3D3D_o_3D_o_3D[4] = {
    &BuiltInVariable::kVar_pt3D, &BuiltInVariable::kVar_pt3D, &BuiltInVariable::kVar_pt_o_3D,
    &BuiltInVariable::kVar_pt_o_3D};
constexpr const TVariable *p3E3E[2] = {&BuiltInVariable::kVar_pt3E, &BuiltInVariable::kVar_pt3E};
constexpr const TVariable *p5B5B[2] = {&BuiltInVariable::kVar_pt5B, &BuiltInVariable::kVar_pt5B};
constexpr const TVariable *p6B6B[2] = {&BuiltInVariable::kVar_pt6B, &BuiltInVariable::kVar_pt6B};
constexpr const TVariable *p7B7B[2] = {&BuiltInVariable::kVar_pt7B, &BuiltInVariable::kVar_pt7B};
constexpr const TVariable *p9B9B[2] = {&BuiltInVariable::kVar_pt9B, &BuiltInVariable::kVar_pt9B};
constexpr const TVariable *pABAB[2] = {&BuiltInVariable::kVar_ptAB, &BuiltInVariable::kVar_ptAB};
constexpr const TVariable *pBBBB[2] = {&BuiltInVariable::kVar_ptBB, &BuiltInVariable::kVar_ptBB};
constexpr const TVariable *pDBDB[2] = {&BuiltInVariable::kVar_ptDB, &BuiltInVariable::kVar_ptDB};
constexpr const TVariable *pEBEB[2] = {&BuiltInVariable::kVar_ptEB, &BuiltInVariable::kVar_ptEB};
constexpr const TVariable *pFBFB[2] = {&BuiltInVariable::kVar_ptFB, &BuiltInVariable::kVar_ptFB};
constexpr const TVariable *p_io_0C0C0C[3] = {
    &BuiltInVariable::kVar_pt_io_0C, &BuiltInVariable::kVar_pt0C, &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p_io_0D0D0D[3] = {
    &BuiltInVariable::kVar_pt_io_0D, &BuiltInVariable::kVar_pt0D, &BuiltInVariable::kVar_pt0D};

}  // namespace BuiltInParameters

namespace UnmangledBuiltIns
{

constexpr const UnmangledBuiltIn ARB_texture_rectangle(TExtension::ARB_texture_rectangle);
constexpr const UnmangledBuiltIn EXT_YUV_target(TExtension::EXT_YUV_target);
constexpr const UnmangledBuiltIn EXT_geometry_shader(TExtension::EXT_geometry_shader);
constexpr const UnmangledBuiltIn EXT_shader_texture_lod(TExtension::EXT_shader_texture_lod);
constexpr const UnmangledBuiltIn OES_standard_derivatives(TExtension::OES_standard_derivatives);
constexpr const UnmangledBuiltIn UNDEFINED(TExtension::UNDEFINED);

}  // namespace UnmangledBuiltIns

// TODO(oetuaho): Would be nice to make this a class instead of a namespace so that we could friend
// this from TFunction. Now symbol constructors taking an id have to be public even though they're
// not supposed to be accessible from outside of here. http://anglebug.com/2390
namespace BuiltInFunction
{

constexpr const TFunction kFunction_radians_0B(
    BuiltInId::radians_0B,
    BuiltInName::radians,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpRadians,
    true);
constexpr const TFunction kFunction_radians_1B(
    BuiltInId::radians_1B,
    BuiltInName::radians,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpRadians,
    true);
constexpr const TFunction kFunction_radians_2B(
    BuiltInId::radians_2B,
    BuiltInName::radians,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpRadians,
    true);
constexpr const TFunction kFunction_radians_3B(
    BuiltInId::radians_3B,
    BuiltInName::radians,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B1B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpRadians,
    true);
constexpr const TFunction kFunction_degrees_0B(
    BuiltInId::degrees_0B,
    BuiltInName::degrees,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpDegrees,
    true);
constexpr const TFunction kFunction_degrees_1B(
    BuiltInId::degrees_1B,
    BuiltInName::degrees,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpDegrees,
    true);
constexpr const TFunction kFunction_degrees_2B(
    BuiltInId::degrees_2B,
    BuiltInName::degrees,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpDegrees,
    true);
constexpr const TFunction kFunction_degrees_3B(
    BuiltInId::degrees_3B,
    BuiltInName::degrees,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B1B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpDegrees,
    true);
constexpr const TFunction kFunction_sin_0B(
    BuiltInId::sin_0B,
    BuiltInName::sin,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpSin,
    true);
constexpr const TFunction kFunction_sin_1B(
    BuiltInId::sin_1B,
    BuiltInName::sin,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpSin,
    true);
constexpr const TFunction kFunction_sin_2B(
    BuiltInId::sin_2B,
    BuiltInName::sin,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpSin,
    true);
constexpr const TFunction kFunction_sin_3B(
    BuiltInId::sin_3B,
    BuiltInName::sin,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B1B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpSin,
    true);
constexpr const TFunction kFunction_cos_0B(
    BuiltInId::cos_0B,
    BuiltInName::cos,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCos,
    true);
constexpr const TFunction kFunction_cos_1B(
    BuiltInId::cos_1B,
    BuiltInName::cos,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCos,
    true);
constexpr const TFunction kFunction_cos_2B(
    BuiltInId::cos_2B,
    BuiltInName::cos,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpCos,
    true);
constexpr const TFunction kFunction_cos_3B(
    BuiltInId::cos_3B,
    BuiltInName::cos,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B1B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCos,
    true);
constexpr const TFunction kFunction_tan_0B(
    BuiltInId::tan_0B,
    BuiltInName::tan,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpTan,
    true);
constexpr const TFunction kFunction_tan_1B(
    BuiltInId::tan_1B,
    BuiltInName::tan,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpTan,
    true);
constexpr const TFunction kFunction_tan_2B(
    BuiltInId::tan_2B,
    BuiltInName::tan,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpTan,
    true);
constexpr const TFunction kFunction_tan_3B(
    BuiltInId::tan_3B,
    BuiltInName::tan,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B1B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpTan,
    true);
constexpr const TFunction kFunction_asin_0B(
    BuiltInId::asin_0B,
    BuiltInName::asin,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAsin,
    true);
constexpr const TFunction kFunction_asin_1B(
    BuiltInId::asin_1B,
    BuiltInName::asin,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpAsin,
    true);
constexpr const TFunction kFunction_asin_2B(
    BuiltInId::asin_2B,
    BuiltInName::asin,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpAsin,
    true);
constexpr const TFunction kFunction_asin_3B(
    BuiltInId::asin_3B,
    BuiltInName::asin,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B1B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpAsin,
    true);
constexpr const TFunction kFunction_acos_0B(
    BuiltInId::acos_0B,
    BuiltInName::acos,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAcos,
    true);
constexpr const TFunction kFunction_acos_1B(
    BuiltInId::acos_1B,
    BuiltInName::acos,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpAcos,
    true);
constexpr const TFunction kFunction_acos_2B(
    BuiltInId::acos_2B,
    BuiltInName::acos,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpAcos,
    true);
constexpr const TFunction kFunction_acos_3B(
    BuiltInId::acos_3B,
    BuiltInName::acos,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B1B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpAcos,
    true);
constexpr const TFunction kFunction_atan_0B0B(
    BuiltInId::atan_0B0B,
    BuiltInName::atan,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0B1B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAtan,
    true);
constexpr const TFunction kFunction_atan_1B1B(
    BuiltInId::atan_1B1B,
    BuiltInName::atan,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpAtan,
    true);
constexpr const TFunction kFunction_atan_2B2B(
    BuiltInId::atan_2B2B,
    BuiltInName::atan,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpAtan,
    true);
constexpr const TFunction kFunction_atan_3B3B(
    BuiltInId::atan_3B3B,
    BuiltInName::atan,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B3B3B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpAtan,
    true);
constexpr const TFunction kFunction_atan_0B(
    BuiltInId::atan_0B,
    BuiltInName::atan,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAtan,
    true);
constexpr const TFunction kFunction_atan_1B(
    BuiltInId::atan_1B,
    BuiltInName::atan,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpAtan,
    true);
constexpr const TFunction kFunction_atan_2B(
    BuiltInId::atan_2B,
    BuiltInName::atan,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpAtan,
    true);
constexpr const TFunction kFunction_atan_3B(
    BuiltInId::atan_3B,
    BuiltInName::atan,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B1B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpAtan,
    true);
constexpr const TFunction kFunction_sinh_0B(
    BuiltInId::sinh_0B,
    BuiltInName::sinh,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpSinh,
    true);
constexpr const TFunction kFunction_sinh_1B(
    BuiltInId::sinh_1B,
    BuiltInName::sinh,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpSinh,
    true);
constexpr const TFunction kFunction_sinh_2B(
    BuiltInId::sinh_2B,
    BuiltInName::sinh,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpSinh,
    true);
constexpr const TFunction kFunction_sinh_3B(
    BuiltInId::sinh_3B,
    BuiltInName::sinh,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B1B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpSinh,
    true);
constexpr const TFunction kFunction_cosh_0B(
    BuiltInId::cosh_0B,
    BuiltInName::cosh,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCosh,
    true);
constexpr const TFunction kFunction_cosh_1B(
    BuiltInId::cosh_1B,
    BuiltInName::cosh,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCosh,
    true);
constexpr const TFunction kFunction_cosh_2B(
    BuiltInId::cosh_2B,
    BuiltInName::cosh,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpCosh,
    true);
constexpr const TFunction kFunction_cosh_3B(
    BuiltInId::cosh_3B,
    BuiltInName::cosh,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B1B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCosh,
    true);
constexpr const TFunction kFunction_tanh_0B(
    BuiltInId::tanh_0B,
    BuiltInName::tanh,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpTanh,
    true);
constexpr const TFunction kFunction_tanh_1B(
    BuiltInId::tanh_1B,
    BuiltInName::tanh,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpTanh,
    true);
constexpr const TFunction kFunction_tanh_2B(
    BuiltInId::tanh_2B,
    BuiltInName::tanh,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpTanh,
    true);
constexpr const TFunction kFunction_tanh_3B(
    BuiltInId::tanh_3B,
    BuiltInName::tanh,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B1B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpTanh,
    true);
constexpr const TFunction kFunction_asinh_0B(
    BuiltInId::asinh_0B,
    BuiltInName::asinh,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAsinh,
    true);
constexpr const TFunction kFunction_asinh_1B(
    BuiltInId::asinh_1B,
    BuiltInName::asinh,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpAsinh,
    true);
constexpr const TFunction kFunction_asinh_2B(
    BuiltInId::asinh_2B,
    BuiltInName::asinh,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpAsinh,
    true);
constexpr const TFunction kFunction_asinh_3B(
    BuiltInId::asinh_3B,
    BuiltInName::asinh,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B1B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpAsinh,
    true);
constexpr const TFunction kFunction_acosh_0B(
    BuiltInId::acosh_0B,
    BuiltInName::acosh,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAcosh,
    true);
constexpr const TFunction kFunction_acosh_1B(
    BuiltInId::acosh_1B,
    BuiltInName::acosh,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpAcosh,
    true);
constexpr const TFunction kFunction_acosh_2B(
    BuiltInId::acosh_2B,
    BuiltInName::acosh,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpAcosh,
    true);
constexpr const TFunction kFunction_acosh_3B(
    BuiltInId::acosh_3B,
    BuiltInName::acosh,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B1B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpAcosh,
    true);
constexpr const TFunction kFunction_atanh_0B(
    BuiltInId::atanh_0B,
    BuiltInName::atanh,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAtanh,
    true);
constexpr const TFunction kFunction_atanh_1B(
    BuiltInId::atanh_1B,
    BuiltInName::atanh,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpAtanh,
    true);
constexpr const TFunction kFunction_atanh_2B(
    BuiltInId::atanh_2B,
    BuiltInName::atanh,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpAtanh,
    true);
constexpr const TFunction kFunction_atanh_3B(
    BuiltInId::atanh_3B,
    BuiltInName::atanh,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B1B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpAtanh,
    true);
constexpr const TFunction kFunction_pow_0B0B(
    BuiltInId::pow_0B0B,
    BuiltInName::pow,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0B1B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpPow,
    true);
constexpr const TFunction kFunction_pow_1B1B(
    BuiltInId::pow_1B1B,
    BuiltInName::pow,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpPow,
    true);
constexpr const TFunction kFunction_pow_2B2B(
    BuiltInId::pow_2B2B,
    BuiltInName::pow,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpPow,
    true);
constexpr const TFunction kFunction_pow_3B3B(
    BuiltInId::pow_3B3B,
    BuiltInName::pow,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B3B3B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpPow,
    true);
constexpr const TFunction kFunction_exp_0B(
    BuiltInId::exp_0B,
    BuiltInName::exp,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpExp,
    true);
constexpr const TFunction kFunction_exp_1B(
    BuiltInId::exp_1B,
    BuiltInName::exp,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpExp,
    true);
constexpr const TFunction kFunction_exp_2B(
    BuiltInId::exp_2B,
    BuiltInName::exp,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpExp,
    true);
constexpr const TFunction kFunction_exp_3B(
    BuiltInId::exp_3B,
    BuiltInName::exp,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B1B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpExp,
    true);
constexpr const TFunction kFunction_log_0B(
    BuiltInId::log_0B,
    BuiltInName::log,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpLog,
    true);
constexpr const TFunction kFunction_log_1B(
    BuiltInId::log_1B,
    BuiltInName::log,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpLog,
    true);
constexpr const TFunction kFunction_log_2B(
    BuiltInId::log_2B,
    BuiltInName::log,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpLog,
    true);
constexpr const TFunction kFunction_log_3B(
    BuiltInId::log_3B,
    BuiltInName::log,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B1B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpLog,
    true);
constexpr const TFunction kFunction_exp2_0B(
    BuiltInId::exp2_0B,
    BuiltInName::exp2,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpExp2,
    true);
constexpr const TFunction kFunction_exp2_1B(
    BuiltInId::exp2_1B,
    BuiltInName::exp2,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpExp2,
    true);
constexpr const TFunction kFunction_exp2_2B(
    BuiltInId::exp2_2B,
    BuiltInName::exp2,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpExp2,
    true);
constexpr const TFunction kFunction_exp2_3B(
    BuiltInId::exp2_3B,
    BuiltInName::exp2,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B1B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpExp2,
    true);
constexpr const TFunction kFunction_log2_0B(
    BuiltInId::log2_0B,
    BuiltInName::log2,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpLog2,
    true);
constexpr const TFunction kFunction_log2_1B(
    BuiltInId::log2_1B,
    BuiltInName::log2,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpLog2,
    true);
constexpr const TFunction kFunction_log2_2B(
    BuiltInId::log2_2B,
    BuiltInName::log2,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpLog2,
    true);
constexpr const TFunction kFunction_log2_3B(
    BuiltInId::log2_3B,
    BuiltInName::log2,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B1B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpLog2,
    true);
constexpr const TFunction kFunction_sqrt_0B(
    BuiltInId::sqrt_0B,
    BuiltInName::sqrt,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpSqrt,
    true);
constexpr const TFunction kFunction_sqrt_1B(
    BuiltInId::sqrt_1B,
    BuiltInName::sqrt,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpSqrt,
    true);
constexpr const TFunction kFunction_sqrt_2B(
    BuiltInId::sqrt_2B,
    BuiltInName::sqrt,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpSqrt,
    true);
constexpr const TFunction kFunction_sqrt_3B(
    BuiltInId::sqrt_3B,
    BuiltInName::sqrt,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B1B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpSqrt,
    true);
constexpr const TFunction kFunction_inversesqrt_0B(
    BuiltInId::inversesqrt_0B,
    BuiltInName::inversesqrt,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpInversesqrt,
    true);
constexpr const TFunction kFunction_inversesqrt_1B(
    BuiltInId::inversesqrt_1B,
    BuiltInName::inversesqrt,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpInversesqrt,
    true);
constexpr const TFunction kFunction_inversesqrt_2B(
    BuiltInId::inversesqrt_2B,
    BuiltInName::inversesqrt,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpInversesqrt,
    true);
constexpr const TFunction kFunction_inversesqrt_3B(
    BuiltInId::inversesqrt_3B,
    BuiltInName::inversesqrt,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B1B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpInversesqrt,
    true);
constexpr const TFunction kFunction_abs_0B(
    BuiltInId::abs_0B,
    BuiltInName::abs,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAbs,
    true);
constexpr const TFunction kFunction_abs_1B(
    BuiltInId::abs_1B,
    BuiltInName::abs,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpAbs,
    true);
constexpr const TFunction kFunction_abs_2B(
    BuiltInId::abs_2B,
    BuiltInName::abs,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpAbs,
    true);
constexpr const TFunction kFunction_abs_3B(
    BuiltInId::abs_3B,
    BuiltInName::abs,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B1B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpAbs,
    true);
constexpr const TFunction kFunction_abs_0C(BuiltInId::abs_0C,
                                           BuiltInName::abs,
                                           TExtension::UNDEFINED,
                                           BuiltInParameters::p0C0C_o_0C_o_0C,
                                           1,
                                           StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
                                           EOpAbs,
                                           true);
constexpr const TFunction kFunction_abs_1C(BuiltInId::abs_1C,
                                           BuiltInName::abs,
                                           TExtension::UNDEFINED,
                                           BuiltInParameters::p1C1C0C0C,
                                           1,
                                           StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
                                           EOpAbs,
                                           true);
constexpr const TFunction kFunction_abs_2C(BuiltInId::abs_2C,
                                           BuiltInName::abs,
                                           TExtension::UNDEFINED,
                                           BuiltInParameters::p2C2C0C0C,
                                           1,
                                           StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
                                           EOpAbs,
                                           true);
constexpr const TFunction kFunction_abs_3C(BuiltInId::abs_3C,
                                           BuiltInName::abs,
                                           TExtension::UNDEFINED,
                                           BuiltInParameters::p3C0C0C,
                                           1,
                                           StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
                                           EOpAbs,
                                           true);
constexpr const TFunction kFunction_sign_0B(
    BuiltInId::sign_0B,
    BuiltInName::sign,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpSign,
    true);
constexpr const TFunction kFunction_sign_1B(
    BuiltInId::sign_1B,
    BuiltInName::sign,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpSign,
    true);
constexpr const TFunction kFunction_sign_2B(
    BuiltInId::sign_2B,
    BuiltInName::sign,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpSign,
    true);
constexpr const TFunction kFunction_sign_3B(
    BuiltInId::sign_3B,
    BuiltInName::sign,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B1B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpSign,
    true);
constexpr const TFunction kFunction_sign_0C(
    BuiltInId::sign_0C,
    BuiltInName::sign,
    TExtension::UNDEFINED,
    BuiltInParameters::p0C0C_o_0C_o_0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpSign,
    true);
constexpr const TFunction kFunction_sign_1C(
    BuiltInId::sign_1C,
    BuiltInName::sign,
    TExtension::UNDEFINED,
    BuiltInParameters::p1C1C0C0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpSign,
    true);
constexpr const TFunction kFunction_sign_2C(
    BuiltInId::sign_2C,
    BuiltInName::sign,
    TExtension::UNDEFINED,
    BuiltInParameters::p2C2C0C0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpSign,
    true);
constexpr const TFunction kFunction_sign_3C(
    BuiltInId::sign_3C,
    BuiltInName::sign,
    TExtension::UNDEFINED,
    BuiltInParameters::p3C0C0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpSign,
    true);
constexpr const TFunction kFunction_floor_0B(
    BuiltInId::floor_0B,
    BuiltInName::floor,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpFloor,
    true);
constexpr const TFunction kFunction_floor_1B(
    BuiltInId::floor_1B,
    BuiltInName::floor,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpFloor,
    true);
constexpr const TFunction kFunction_floor_2B(
    BuiltInId::floor_2B,
    BuiltInName::floor,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpFloor,
    true);
constexpr const TFunction kFunction_floor_3B(
    BuiltInId::floor_3B,
    BuiltInName::floor,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B1B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpFloor,
    true);
constexpr const TFunction kFunction_trunc_0B(
    BuiltInId::trunc_0B,
    BuiltInName::trunc,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpTrunc,
    true);
constexpr const TFunction kFunction_trunc_1B(
    BuiltInId::trunc_1B,
    BuiltInName::trunc,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpTrunc,
    true);
constexpr const TFunction kFunction_trunc_2B(
    BuiltInId::trunc_2B,
    BuiltInName::trunc,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpTrunc,
    true);
constexpr const TFunction kFunction_trunc_3B(
    BuiltInId::trunc_3B,
    BuiltInName::trunc,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B1B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpTrunc,
    true);
constexpr const TFunction kFunction_round_0B(
    BuiltInId::round_0B,
    BuiltInName::round,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpRound,
    true);
constexpr const TFunction kFunction_round_1B(
    BuiltInId::round_1B,
    BuiltInName::round,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpRound,
    true);
constexpr const TFunction kFunction_round_2B(
    BuiltInId::round_2B,
    BuiltInName::round,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpRound,
    true);
constexpr const TFunction kFunction_round_3B(
    BuiltInId::round_3B,
    BuiltInName::round,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B1B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpRound,
    true);
constexpr const TFunction kFunction_roundEven_0B(
    BuiltInId::roundEven_0B,
    BuiltInName::roundEven,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpRoundEven,
    true);
constexpr const TFunction kFunction_roundEven_1B(
    BuiltInId::roundEven_1B,
    BuiltInName::roundEven,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpRoundEven,
    true);
constexpr const TFunction kFunction_roundEven_2B(
    BuiltInId::roundEven_2B,
    BuiltInName::roundEven,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpRoundEven,
    true);
constexpr const TFunction kFunction_roundEven_3B(
    BuiltInId::roundEven_3B,
    BuiltInName::roundEven,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B1B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpRoundEven,
    true);
constexpr const TFunction kFunction_ceil_0B(
    BuiltInId::ceil_0B,
    BuiltInName::ceil,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCeil,
    true);
constexpr const TFunction kFunction_ceil_1B(
    BuiltInId::ceil_1B,
    BuiltInName::ceil,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCeil,
    true);
constexpr const TFunction kFunction_ceil_2B(
    BuiltInId::ceil_2B,
    BuiltInName::ceil,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpCeil,
    true);
constexpr const TFunction kFunction_ceil_3B(
    BuiltInId::ceil_3B,
    BuiltInName::ceil,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B1B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCeil,
    true);
constexpr const TFunction kFunction_fract_0B(
    BuiltInId::fract_0B,
    BuiltInName::fract,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpFract,
    true);
constexpr const TFunction kFunction_fract_1B(
    BuiltInId::fract_1B,
    BuiltInName::fract,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpFract,
    true);
constexpr const TFunction kFunction_fract_2B(
    BuiltInId::fract_2B,
    BuiltInName::fract,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpFract,
    true);
constexpr const TFunction kFunction_fract_3B(
    BuiltInId::fract_3B,
    BuiltInName::fract,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B1B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpFract,
    true);
constexpr const TFunction kFunction_mod_0B0B(
    BuiltInId::mod_0B0B,
    BuiltInName::mod,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0B1B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpMod,
    true);
constexpr const TFunction kFunction_mod_1B0B(
    BuiltInId::mod_1B0B,
    BuiltInName::mod,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B0B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpMod,
    true);
constexpr const TFunction kFunction_mod_2B0B(
    BuiltInId::mod_2B0B,
    BuiltInName::mod,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B0B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpMod,
    true);
constexpr const TFunction kFunction_mod_3B0B(
    BuiltInId::mod_3B0B,
    BuiltInName::mod,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B0B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpMod,
    true);
constexpr const TFunction kFunction_mod_1B1B(
    BuiltInId::mod_1B1B,
    BuiltInName::mod,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpMod,
    true);
constexpr const TFunction kFunction_mod_2B2B(
    BuiltInId::mod_2B2B,
    BuiltInName::mod,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpMod,
    true);
constexpr const TFunction kFunction_mod_3B3B(
    BuiltInId::mod_3B3B,
    BuiltInName::mod,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B3B3B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpMod,
    true);
constexpr const TFunction kFunction_min_0B0B(
    BuiltInId::min_0B0B,
    BuiltInName::min,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0B1B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpMin,
    true);
constexpr const TFunction kFunction_min_1B0B(
    BuiltInId::min_1B0B,
    BuiltInName::min,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B0B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpMin,
    true);
constexpr const TFunction kFunction_min_2B0B(
    BuiltInId::min_2B0B,
    BuiltInName::min,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B0B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpMin,
    true);
constexpr const TFunction kFunction_min_3B0B(
    BuiltInId::min_3B0B,
    BuiltInName::min,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B0B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpMin,
    true);
constexpr const TFunction kFunction_min_1B1B(
    BuiltInId::min_1B1B,
    BuiltInName::min,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpMin,
    true);
constexpr const TFunction kFunction_min_2B2B(
    BuiltInId::min_2B2B,
    BuiltInName::min,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpMin,
    true);
constexpr const TFunction kFunction_min_3B3B(
    BuiltInId::min_3B3B,
    BuiltInName::min,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B3B3B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpMin,
    true);
constexpr const TFunction kFunction_min_0C0C(
    BuiltInId::min_0C0C,
    BuiltInName::min,
    TExtension::UNDEFINED,
    BuiltInParameters::p0C0C_o_0C_o_0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpMin,
    true);
constexpr const TFunction kFunction_min_1C1C(
    BuiltInId::min_1C1C,
    BuiltInName::min,
    TExtension::UNDEFINED,
    BuiltInParameters::p1C1C0C0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpMin,
    true);
constexpr const TFunction kFunction_min_2C2C(
    BuiltInId::min_2C2C,
    BuiltInName::min,
    TExtension::UNDEFINED,
    BuiltInParameters::p2C2C0C0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpMin,
    true);
constexpr const TFunction kFunction_min_3C3C(
    BuiltInId::min_3C3C,
    BuiltInName::min,
    TExtension::UNDEFINED,
    BuiltInParameters::p3C3C0C0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpMin,
    true);
constexpr const TFunction kFunction_min_1C0C(
    BuiltInId::min_1C0C,
    BuiltInName::min,
    TExtension::UNDEFINED,
    BuiltInParameters::p1C0C0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpMin,
    true);
constexpr const TFunction kFunction_min_2C0C(
    BuiltInId::min_2C0C,
    BuiltInName::min,
    TExtension::UNDEFINED,
    BuiltInParameters::p2C0C0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpMin,
    true);
constexpr const TFunction kFunction_min_3C0C(
    BuiltInId::min_3C0C,
    BuiltInName::min,
    TExtension::UNDEFINED,
    BuiltInParameters::p3C0C0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpMin,
    true);
constexpr const TFunction kFunction_min_0D0D(
    BuiltInId::min_0D0D,
    BuiltInName::min,
    TExtension::UNDEFINED,
    BuiltInParameters::p0D0D0C0C,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpMin,
    true);
constexpr const TFunction kFunction_min_1D1D(
    BuiltInId::min_1D1D,
    BuiltInName::min,
    TExtension::UNDEFINED,
    BuiltInParameters::p1D1D0C0C,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpMin,
    true);
constexpr const TFunction kFunction_min_2D2D(
    BuiltInId::min_2D2D,
    BuiltInName::min,
    TExtension::UNDEFINED,
    BuiltInParameters::p2D2D0C0C,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpMin,
    true);
constexpr const TFunction kFunction_min_3D3D(
    BuiltInId::min_3D3D,
    BuiltInName::min,
    TExtension::UNDEFINED,
    BuiltInParameters::p3D3D0C0C,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpMin,
    true);
constexpr const TFunction kFunction_min_1D0D(
    BuiltInId::min_1D0D,
    BuiltInName::min,
    TExtension::UNDEFINED,
    BuiltInParameters::p1D0D0D,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpMin,
    true);
constexpr const TFunction kFunction_min_2D0D(
    BuiltInId::min_2D0D,
    BuiltInName::min,
    TExtension::UNDEFINED,
    BuiltInParameters::p2D0D0D,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpMin,
    true);
constexpr const TFunction kFunction_min_3D0D(
    BuiltInId::min_3D0D,
    BuiltInName::min,
    TExtension::UNDEFINED,
    BuiltInParameters::p3D0D0D,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpMin,
    true);
constexpr const TFunction kFunction_max_0B0B(
    BuiltInId::max_0B0B,
    BuiltInName::max,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0B1B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpMax,
    true);
constexpr const TFunction kFunction_max_1B0B(
    BuiltInId::max_1B0B,
    BuiltInName::max,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B0B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpMax,
    true);
constexpr const TFunction kFunction_max_2B0B(
    BuiltInId::max_2B0B,
    BuiltInName::max,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B0B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpMax,
    true);
constexpr const TFunction kFunction_max_3B0B(
    BuiltInId::max_3B0B,
    BuiltInName::max,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B0B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpMax,
    true);
constexpr const TFunction kFunction_max_1B1B(
    BuiltInId::max_1B1B,
    BuiltInName::max,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpMax,
    true);
constexpr const TFunction kFunction_max_2B2B(
    BuiltInId::max_2B2B,
    BuiltInName::max,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpMax,
    true);
constexpr const TFunction kFunction_max_3B3B(
    BuiltInId::max_3B3B,
    BuiltInName::max,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B3B3B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpMax,
    true);
constexpr const TFunction kFunction_max_0C0C(
    BuiltInId::max_0C0C,
    BuiltInName::max,
    TExtension::UNDEFINED,
    BuiltInParameters::p0C0C_o_0C_o_0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpMax,
    true);
constexpr const TFunction kFunction_max_1C1C(
    BuiltInId::max_1C1C,
    BuiltInName::max,
    TExtension::UNDEFINED,
    BuiltInParameters::p1C1C0C0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpMax,
    true);
constexpr const TFunction kFunction_max_2C2C(
    BuiltInId::max_2C2C,
    BuiltInName::max,
    TExtension::UNDEFINED,
    BuiltInParameters::p2C2C0C0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpMax,
    true);
constexpr const TFunction kFunction_max_3C3C(
    BuiltInId::max_3C3C,
    BuiltInName::max,
    TExtension::UNDEFINED,
    BuiltInParameters::p3C3C0C0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpMax,
    true);
constexpr const TFunction kFunction_max_1C0C(
    BuiltInId::max_1C0C,
    BuiltInName::max,
    TExtension::UNDEFINED,
    BuiltInParameters::p1C0C0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpMax,
    true);
constexpr const TFunction kFunction_max_2C0C(
    BuiltInId::max_2C0C,
    BuiltInName::max,
    TExtension::UNDEFINED,
    BuiltInParameters::p2C0C0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpMax,
    true);
constexpr const TFunction kFunction_max_3C0C(
    BuiltInId::max_3C0C,
    BuiltInName::max,
    TExtension::UNDEFINED,
    BuiltInParameters::p3C0C0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpMax,
    true);
constexpr const TFunction kFunction_max_0D0D(
    BuiltInId::max_0D0D,
    BuiltInName::max,
    TExtension::UNDEFINED,
    BuiltInParameters::p0D0D0C0C,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpMax,
    true);
constexpr const TFunction kFunction_max_1D1D(
    BuiltInId::max_1D1D,
    BuiltInName::max,
    TExtension::UNDEFINED,
    BuiltInParameters::p1D1D0C0C,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpMax,
    true);
constexpr const TFunction kFunction_max_2D2D(
    BuiltInId::max_2D2D,
    BuiltInName::max,
    TExtension::UNDEFINED,
    BuiltInParameters::p2D2D0C0C,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpMax,
    true);
constexpr const TFunction kFunction_max_3D3D(
    BuiltInId::max_3D3D,
    BuiltInName::max,
    TExtension::UNDEFINED,
    BuiltInParameters::p3D3D0C0C,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpMax,
    true);
constexpr const TFunction kFunction_max_1D0D(
    BuiltInId::max_1D0D,
    BuiltInName::max,
    TExtension::UNDEFINED,
    BuiltInParameters::p1D0D0D,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpMax,
    true);
constexpr const TFunction kFunction_max_2D0D(
    BuiltInId::max_2D0D,
    BuiltInName::max,
    TExtension::UNDEFINED,
    BuiltInParameters::p2D0D0D,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpMax,
    true);
constexpr const TFunction kFunction_max_3D0D(
    BuiltInId::max_3D0D,
    BuiltInName::max,
    TExtension::UNDEFINED,
    BuiltInParameters::p3D0D0D,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpMax,
    true);
constexpr const TFunction kFunction_clamp_0B0B0B(
    BuiltInId::clamp_0B0B0B,
    BuiltInName::clamp,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0B0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpClamp,
    true);
constexpr const TFunction kFunction_clamp_1B0B0B(
    BuiltInId::clamp_1B0B0B,
    BuiltInName::clamp,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B0B0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpClamp,
    true);
constexpr const TFunction kFunction_clamp_2B0B0B(
    BuiltInId::clamp_2B0B0B,
    BuiltInName::clamp,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B0B0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpClamp,
    true);
constexpr const TFunction kFunction_clamp_3B0B0B(
    BuiltInId::clamp_3B0B0B,
    BuiltInName::clamp,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B0B0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpClamp,
    true);
constexpr const TFunction kFunction_clamp_1B1B1B(
    BuiltInId::clamp_1B1B1B,
    BuiltInName::clamp,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B1B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpClamp,
    true);
constexpr const TFunction kFunction_clamp_2B2B2B(
    BuiltInId::clamp_2B2B2B,
    BuiltInName::clamp,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2B2B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpClamp,
    true);
constexpr const TFunction kFunction_clamp_3B3B3B(
    BuiltInId::clamp_3B3B3B,
    BuiltInName::clamp,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B3B3B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpClamp,
    true);
constexpr const TFunction kFunction_clamp_0C0C0C(
    BuiltInId::clamp_0C0C0C,
    BuiltInName::clamp,
    TExtension::UNDEFINED,
    BuiltInParameters::p0C0C0C0C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpClamp,
    true);
constexpr const TFunction kFunction_clamp_1C0C0C(
    BuiltInId::clamp_1C0C0C,
    BuiltInName::clamp,
    TExtension::UNDEFINED,
    BuiltInParameters::p1C0C0C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpClamp,
    true);
constexpr const TFunction kFunction_clamp_2C0C0C(
    BuiltInId::clamp_2C0C0C,
    BuiltInName::clamp,
    TExtension::UNDEFINED,
    BuiltInParameters::p2C0C0C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpClamp,
    true);
constexpr const TFunction kFunction_clamp_3C0C0C(
    BuiltInId::clamp_3C0C0C,
    BuiltInName::clamp,
    TExtension::UNDEFINED,
    BuiltInParameters::p3C0C0C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpClamp,
    true);
constexpr const TFunction kFunction_clamp_1C1C1C(
    BuiltInId::clamp_1C1C1C,
    BuiltInName::clamp,
    TExtension::UNDEFINED,
    BuiltInParameters::p1C1C1C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpClamp,
    true);
constexpr const TFunction kFunction_clamp_2C2C2C(
    BuiltInId::clamp_2C2C2C,
    BuiltInName::clamp,
    TExtension::UNDEFINED,
    BuiltInParameters::p2C2C2C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpClamp,
    true);
constexpr const TFunction kFunction_clamp_3C3C3C(
    BuiltInId::clamp_3C3C3C,
    BuiltInName::clamp,
    TExtension::UNDEFINED,
    BuiltInParameters::p3C3C3C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpClamp,
    true);
constexpr const TFunction kFunction_clamp_0D0D0D(
    BuiltInId::clamp_0D0D0D,
    BuiltInName::clamp,
    TExtension::UNDEFINED,
    BuiltInParameters::p0D0D0D,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpClamp,
    true);
constexpr const TFunction kFunction_clamp_1D0D0D(
    BuiltInId::clamp_1D0D0D,
    BuiltInName::clamp,
    TExtension::UNDEFINED,
    BuiltInParameters::p1D0D0D,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpClamp,
    true);
constexpr const TFunction kFunction_clamp_2D0D0D(
    BuiltInId::clamp_2D0D0D,
    BuiltInName::clamp,
    TExtension::UNDEFINED,
    BuiltInParameters::p2D0D0D,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpClamp,
    true);
constexpr const TFunction kFunction_clamp_3D0D0D(
    BuiltInId::clamp_3D0D0D,
    BuiltInName::clamp,
    TExtension::UNDEFINED,
    BuiltInParameters::p3D0D0D,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpClamp,
    true);
constexpr const TFunction kFunction_clamp_1D1D1D(
    BuiltInId::clamp_1D1D1D,
    BuiltInName::clamp,
    TExtension::UNDEFINED,
    BuiltInParameters::p1D1D1D,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpClamp,
    true);
constexpr const TFunction kFunction_clamp_2D2D2D(
    BuiltInId::clamp_2D2D2D,
    BuiltInName::clamp,
    TExtension::UNDEFINED,
    BuiltInParameters::p2D2D2D,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpClamp,
    true);
constexpr const TFunction kFunction_clamp_3D3D3D(
    BuiltInId::clamp_3D3D3D,
    BuiltInName::clamp,
    TExtension::UNDEFINED,
    BuiltInParameters::p3D3D3D,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpClamp,
    true);
constexpr const TFunction kFunction_mix_0B0B0B(
    BuiltInId::mix_0B0B0B,
    BuiltInName::mix,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0B0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpMix,
    true);
constexpr const TFunction kFunction_mix_1B1B0B(
    BuiltInId::mix_1B1B0B,
    BuiltInName::mix,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpMix,
    true);
constexpr const TFunction kFunction_mix_2B2B0B(
    BuiltInId::mix_2B2B0B,
    BuiltInName::mix,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2B0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpMix,
    true);
constexpr const TFunction kFunction_mix_3B3B0B(
    BuiltInId::mix_3B3B0B,
    BuiltInName::mix,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B3B0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpMix,
    true);
constexpr const TFunction kFunction_mix_1B1B1B(
    BuiltInId::mix_1B1B1B,
    BuiltInName::mix,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B1B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpMix,
    true);
constexpr const TFunction kFunction_mix_2B2B2B(
    BuiltInId::mix_2B2B2B,
    BuiltInName::mix,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2B2B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpMix,
    true);
constexpr const TFunction kFunction_mix_3B3B3B(
    BuiltInId::mix_3B3B3B,
    BuiltInName::mix,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B3B3B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpMix,
    true);
constexpr const TFunction kFunction_mix_0B0B0E(
    BuiltInId::mix_0B0B0E,
    BuiltInName::mix,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0B0E,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpMix,
    true);
constexpr const TFunction kFunction_mix_1B1B1E(
    BuiltInId::mix_1B1B1E,
    BuiltInName::mix,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B1E,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpMix,
    true);
constexpr const TFunction kFunction_mix_2B2B2E(
    BuiltInId::mix_2B2B2E,
    BuiltInName::mix,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2B2E,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpMix,
    true);
constexpr const TFunction kFunction_mix_3B3B3E(
    BuiltInId::mix_3B3B3E,
    BuiltInName::mix,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B3B3E,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpMix,
    true);
constexpr const TFunction kFunction_step_0B0B(
    BuiltInId::step_0B0B,
    BuiltInName::step,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0B1B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpStep,
    true);
constexpr const TFunction kFunction_step_1B1B(
    BuiltInId::step_1B1B,
    BuiltInName::step,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpStep,
    true);
constexpr const TFunction kFunction_step_2B2B(
    BuiltInId::step_2B2B,
    BuiltInName::step,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpStep,
    true);
constexpr const TFunction kFunction_step_3B3B(
    BuiltInId::step_3B3B,
    BuiltInName::step,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B3B3B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpStep,
    true);
constexpr const TFunction kFunction_step_0B1B(
    BuiltInId::step_0B1B,
    BuiltInName::step,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B1B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpStep,
    true);
constexpr const TFunction kFunction_step_0B2B(
    BuiltInId::step_0B2B,
    BuiltInName::step,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B2B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpStep,
    true);
constexpr const TFunction kFunction_step_0B3B(
    BuiltInId::step_0B3B,
    BuiltInName::step,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B3B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpStep,
    true);
constexpr const TFunction kFunction_smoothstep_0B0B0B(
    BuiltInId::smoothstep_0B0B0B,
    BuiltInName::smoothstep,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0B0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpSmoothstep,
    true);
constexpr const TFunction kFunction_smoothstep_1B1B1B(
    BuiltInId::smoothstep_1B1B1B,
    BuiltInName::smoothstep,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B1B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpSmoothstep,
    true);
constexpr const TFunction kFunction_smoothstep_2B2B2B(
    BuiltInId::smoothstep_2B2B2B,
    BuiltInName::smoothstep,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2B2B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpSmoothstep,
    true);
constexpr const TFunction kFunction_smoothstep_3B3B3B(
    BuiltInId::smoothstep_3B3B3B,
    BuiltInName::smoothstep,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B3B3B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpSmoothstep,
    true);
constexpr const TFunction kFunction_smoothstep_0B0B1B(
    BuiltInId::smoothstep_0B0B1B,
    BuiltInName::smoothstep,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0B1B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpSmoothstep,
    true);
constexpr const TFunction kFunction_smoothstep_0B0B2B(
    BuiltInId::smoothstep_0B0B2B,
    BuiltInName::smoothstep,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0B2B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpSmoothstep,
    true);
constexpr const TFunction kFunction_smoothstep_0B0B3B(
    BuiltInId::smoothstep_0B0B3B,
    BuiltInName::smoothstep,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0B3B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpSmoothstep,
    true);
constexpr const TFunction kFunction_modf_0B0B(
    BuiltInId::modf_0B0B,
    BuiltInName::modf,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B_o_0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpModf,
    false);
constexpr const TFunction kFunction_modf_1B1B(
    BuiltInId::modf_1B1B,
    BuiltInName::modf,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B_o_1B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpModf,
    false);
constexpr const TFunction kFunction_modf_2B2B(
    BuiltInId::modf_2B2B,
    BuiltInName::modf,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B_o_2B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpModf,
    false);
constexpr const TFunction kFunction_modf_3B3B(
    BuiltInId::modf_3B3B,
    BuiltInName::modf,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B_o_3B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpModf,
    false);
constexpr const TFunction kFunction_isnan_0B(
    BuiltInId::isnan_0B,
    BuiltInName::isnan,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpIsnan,
    true);
constexpr const TFunction kFunction_isnan_1B(
    BuiltInId::isnan_1B,
    BuiltInName::isnan,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpIsnan,
    true);
constexpr const TFunction kFunction_isnan_2B(
    BuiltInId::isnan_2B,
    BuiltInName::isnan,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2C,
    1,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpIsnan,
    true);
constexpr const TFunction kFunction_isnan_3B(
    BuiltInId::isnan_3B,
    BuiltInName::isnan,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B1B,
    1,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpIsnan,
    true);
constexpr const TFunction kFunction_isinf_0B(
    BuiltInId::isinf_0B,
    BuiltInName::isinf,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpIsinf,
    true);
constexpr const TFunction kFunction_isinf_1B(
    BuiltInId::isinf_1B,
    BuiltInName::isinf,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpIsinf,
    true);
constexpr const TFunction kFunction_isinf_2B(
    BuiltInId::isinf_2B,
    BuiltInName::isinf,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2C,
    1,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpIsinf,
    true);
constexpr const TFunction kFunction_isinf_3B(
    BuiltInId::isinf_3B,
    BuiltInName::isinf,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B1B,
    1,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpIsinf,
    true);
constexpr const TFunction kFunction_floatBitsToInt_0B(
    BuiltInId::floatBitsToInt_0B,
    BuiltInName::floatBitsToInt,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpFloatBitsToInt,
    true);
constexpr const TFunction kFunction_floatBitsToInt_1B(
    BuiltInId::floatBitsToInt_1B,
    BuiltInName::floatBitsToInt,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpFloatBitsToInt,
    true);
constexpr const TFunction kFunction_floatBitsToInt_2B(
    BuiltInId::floatBitsToInt_2B,
    BuiltInName::floatBitsToInt,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpFloatBitsToInt,
    true);
constexpr const TFunction kFunction_floatBitsToInt_3B(
    BuiltInId::floatBitsToInt_3B,
    BuiltInName::floatBitsToInt,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B1B,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpFloatBitsToInt,
    true);
constexpr const TFunction kFunction_floatBitsToUint_0B(
    BuiltInId::floatBitsToUint_0B,
    BuiltInName::floatBitsToUint,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpFloatBitsToUint,
    true);
constexpr const TFunction kFunction_floatBitsToUint_1B(
    BuiltInId::floatBitsToUint_1B,
    BuiltInName::floatBitsToUint,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpFloatBitsToUint,
    true);
constexpr const TFunction kFunction_floatBitsToUint_2B(
    BuiltInId::floatBitsToUint_2B,
    BuiltInName::floatBitsToUint,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2C,
    1,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpFloatBitsToUint,
    true);
constexpr const TFunction kFunction_floatBitsToUint_3B(
    BuiltInId::floatBitsToUint_3B,
    BuiltInName::floatBitsToUint,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B1B,
    1,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpFloatBitsToUint,
    true);
constexpr const TFunction kFunction_intBitsToFloat_0C(
    BuiltInId::intBitsToFloat_0C,
    BuiltInName::intBitsToFloat,
    TExtension::UNDEFINED,
    BuiltInParameters::p0C0C_o_0C_o_0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpIntBitsToFloat,
    true);
constexpr const TFunction kFunction_intBitsToFloat_1C(
    BuiltInId::intBitsToFloat_1C,
    BuiltInName::intBitsToFloat,
    TExtension::UNDEFINED,
    BuiltInParameters::p1C1C0C0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpIntBitsToFloat,
    true);
constexpr const TFunction kFunction_intBitsToFloat_2C(
    BuiltInId::intBitsToFloat_2C,
    BuiltInName::intBitsToFloat,
    TExtension::UNDEFINED,
    BuiltInParameters::p2C2C0C0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpIntBitsToFloat,
    true);
constexpr const TFunction kFunction_intBitsToFloat_3C(
    BuiltInId::intBitsToFloat_3C,
    BuiltInName::intBitsToFloat,
    TExtension::UNDEFINED,
    BuiltInParameters::p3C0C0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpIntBitsToFloat,
    true);
constexpr const TFunction kFunction_uintBitsToFloat_0D(
    BuiltInId::uintBitsToFloat_0D,
    BuiltInName::uintBitsToFloat,
    TExtension::UNDEFINED,
    BuiltInParameters::p0D0C0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpUintBitsToFloat,
    true);
constexpr const TFunction kFunction_uintBitsToFloat_1D(
    BuiltInId::uintBitsToFloat_1D,
    BuiltInName::uintBitsToFloat,
    TExtension::UNDEFINED,
    BuiltInParameters::p1D0C0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpUintBitsToFloat,
    true);
constexpr const TFunction kFunction_uintBitsToFloat_2D(
    BuiltInId::uintBitsToFloat_2D,
    BuiltInName::uintBitsToFloat,
    TExtension::UNDEFINED,
    BuiltInParameters::p2D2D0C0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpUintBitsToFloat,
    true);
constexpr const TFunction kFunction_uintBitsToFloat_3D(
    BuiltInId::uintBitsToFloat_3D,
    BuiltInName::uintBitsToFloat,
    TExtension::UNDEFINED,
    BuiltInParameters::p3D0C0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpUintBitsToFloat,
    true);
constexpr const TFunction kFunction_frexp_0B0C(
    BuiltInId::frexp_0B0C,
    BuiltInName::frexp,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B_o_0C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpFrexp,
    false);
constexpr const TFunction kFunction_frexp_1B1C(
    BuiltInId::frexp_1B1C,
    BuiltInName::frexp,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B_o_1C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpFrexp,
    false);
constexpr const TFunction kFunction_frexp_2B2C(
    BuiltInId::frexp_2B2C,
    BuiltInName::frexp,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B_o_2C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpFrexp,
    false);
constexpr const TFunction kFunction_frexp_3B3C(
    BuiltInId::frexp_3B3C,
    BuiltInName::frexp,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B_o_3C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpFrexp,
    false);
constexpr const TFunction kFunction_ldexp_0B0C(
    BuiltInId::ldexp_0B0C,
    BuiltInName::ldexp,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpLdexp,
    true);
constexpr const TFunction kFunction_ldexp_1B1C(
    BuiltInId::ldexp_1B1C,
    BuiltInName::ldexp,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpLdexp,
    true);
constexpr const TFunction kFunction_ldexp_2B2C(
    BuiltInId::ldexp_2B2C,
    BuiltInName::ldexp,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpLdexp,
    true);
constexpr const TFunction kFunction_ldexp_3B3C(
    BuiltInId::ldexp_3B3C,
    BuiltInName::ldexp,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B3C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpLdexp,
    true);
constexpr const TFunction kFunction_packSnorm2x16_1B(
    BuiltInId::packSnorm2x16_1B,
    BuiltInName::packSnorm2x16,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpPackSnorm2x16,
    true);
constexpr const TFunction kFunction_packUnorm2x16_1B(
    BuiltInId::packUnorm2x16_1B,
    BuiltInName::packUnorm2x16,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpPackUnorm2x16,
    true);
constexpr const TFunction kFunction_packHalf2x16_1B(
    BuiltInId::packHalf2x16_1B,
    BuiltInName::packHalf2x16,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpPackHalf2x16,
    true);
constexpr const TFunction kFunction_unpackSnorm2x16_0D(
    BuiltInId::unpackSnorm2x16_0D,
    BuiltInName::unpackSnorm2x16,
    TExtension::UNDEFINED,
    BuiltInParameters::p0D0C0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpUnpackSnorm2x16,
    true);
constexpr const TFunction kFunction_unpackUnorm2x16_0D(
    BuiltInId::unpackUnorm2x16_0D,
    BuiltInName::unpackUnorm2x16,
    TExtension::UNDEFINED,
    BuiltInParameters::p0D0C0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpUnpackUnorm2x16,
    true);
constexpr const TFunction kFunction_unpackHalf2x16_0D(
    BuiltInId::unpackHalf2x16_0D,
    BuiltInName::unpackHalf2x16,
    TExtension::UNDEFINED,
    BuiltInParameters::p0D0C0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpUnpackHalf2x16,
    true);
constexpr const TFunction kFunction_packUnorm4x8_3B(
    BuiltInId::packUnorm4x8_3B,
    BuiltInName::packUnorm4x8,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B1B,
    1,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpPackUnorm4x8,
    true);
constexpr const TFunction kFunction_packSnorm4x8_3B(
    BuiltInId::packSnorm4x8_3B,
    BuiltInName::packSnorm4x8,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B1B,
    1,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpPackSnorm4x8,
    true);
constexpr const TFunction kFunction_unpackUnorm4x8_0D(
    BuiltInId::unpackUnorm4x8_0D,
    BuiltInName::unpackUnorm4x8,
    TExtension::UNDEFINED,
    BuiltInParameters::p0D0C0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpUnpackUnorm4x8,
    true);
constexpr const TFunction kFunction_unpackSnorm4x8_0D(
    BuiltInId::unpackSnorm4x8_0D,
    BuiltInName::unpackSnorm4x8,
    TExtension::UNDEFINED,
    BuiltInParameters::p0D0C0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpUnpackSnorm4x8,
    true);
constexpr const TFunction kFunction_length_0B(
    BuiltInId::length_0B,
    BuiltInName::length,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpLength,
    true);
constexpr const TFunction kFunction_length_1B(
    BuiltInId::length_1B,
    BuiltInName::length,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpLength,
    true);
constexpr const TFunction kFunction_length_2B(
    BuiltInId::length_2B,
    BuiltInName::length,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpLength,
    true);
constexpr const TFunction kFunction_length_3B(
    BuiltInId::length_3B,
    BuiltInName::length,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B1B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpLength,
    true);
constexpr const TFunction kFunction_distance_0B0B(
    BuiltInId::distance_0B0B,
    BuiltInName::distance,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0B1B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpDistance,
    true);
constexpr const TFunction kFunction_distance_1B1B(
    BuiltInId::distance_1B1B,
    BuiltInName::distance,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpDistance,
    true);
constexpr const TFunction kFunction_distance_2B2B(
    BuiltInId::distance_2B2B,
    BuiltInName::distance,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpDistance,
    true);
constexpr const TFunction kFunction_distance_3B3B(
    BuiltInId::distance_3B3B,
    BuiltInName::distance,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B3B3B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpDistance,
    true);
constexpr const TFunction kFunction_dot_0B0B(
    BuiltInId::dot_0B0B,
    BuiltInName::dot,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0B1B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpDot,
    true);
constexpr const TFunction kFunction_dot_1B1B(
    BuiltInId::dot_1B1B,
    BuiltInName::dot,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpDot,
    true);
constexpr const TFunction kFunction_dot_2B2B(
    BuiltInId::dot_2B2B,
    BuiltInName::dot,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpDot,
    true);
constexpr const TFunction kFunction_dot_3B3B(
    BuiltInId::dot_3B3B,
    BuiltInName::dot,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B3B3B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpDot,
    true);
constexpr const TFunction kFunction_cross_2B2B(
    BuiltInId::cross_2B2B,
    BuiltInName::cross,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpCross,
    true);
constexpr const TFunction kFunction_normalize_0B(
    BuiltInId::normalize_0B,
    BuiltInName::normalize,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpNormalize,
    true);
constexpr const TFunction kFunction_normalize_1B(
    BuiltInId::normalize_1B,
    BuiltInName::normalize,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpNormalize,
    true);
constexpr const TFunction kFunction_normalize_2B(
    BuiltInId::normalize_2B,
    BuiltInName::normalize,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpNormalize,
    true);
constexpr const TFunction kFunction_normalize_3B(
    BuiltInId::normalize_3B,
    BuiltInName::normalize,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B1B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpNormalize,
    true);
constexpr const TFunction kFunction_faceforward_0B0B0B(
    BuiltInId::faceforward_0B0B0B,
    BuiltInName::faceforward,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0B0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpFaceforward,
    true);
constexpr const TFunction kFunction_faceforward_1B1B1B(
    BuiltInId::faceforward_1B1B1B,
    BuiltInName::faceforward,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B1B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpFaceforward,
    true);
constexpr const TFunction kFunction_faceforward_2B2B2B(
    BuiltInId::faceforward_2B2B2B,
    BuiltInName::faceforward,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2B2B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpFaceforward,
    true);
constexpr const TFunction kFunction_faceforward_3B3B3B(
    BuiltInId::faceforward_3B3B3B,
    BuiltInName::faceforward,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B3B3B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpFaceforward,
    true);
constexpr const TFunction kFunction_reflect_0B0B(
    BuiltInId::reflect_0B0B,
    BuiltInName::reflect,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0B1B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpReflect,
    true);
constexpr const TFunction kFunction_reflect_1B1B(
    BuiltInId::reflect_1B1B,
    BuiltInName::reflect,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpReflect,
    true);
constexpr const TFunction kFunction_reflect_2B2B(
    BuiltInId::reflect_2B2B,
    BuiltInName::reflect,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpReflect,
    true);
constexpr const TFunction kFunction_reflect_3B3B(
    BuiltInId::reflect_3B3B,
    BuiltInName::reflect,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B3B3B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpReflect,
    true);
constexpr const TFunction kFunction_refract_0B0B0B(
    BuiltInId::refract_0B0B0B,
    BuiltInName::refract,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0B0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpRefract,
    true);
constexpr const TFunction kFunction_refract_1B1B0B(
    BuiltInId::refract_1B1B0B,
    BuiltInName::refract,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpRefract,
    true);
constexpr const TFunction kFunction_refract_2B2B0B(
    BuiltInId::refract_2B2B0B,
    BuiltInName::refract,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2B0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpRefract,
    true);
constexpr const TFunction kFunction_refract_3B3B0B(
    BuiltInId::refract_3B3B0B,
    BuiltInName::refract,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B3B0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpRefract,
    true);
constexpr const TFunction kFunction_matrixCompMult_5B5B(
    BuiltInId::matrixCompMult_5B5B,
    BuiltInName::matrixCompMult,
    TExtension::UNDEFINED,
    BuiltInParameters::p5B5B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 2>(),
    EOpMulMatrixComponentWise,
    true);
constexpr const TFunction kFunction_matrixCompMult_ABAB(
    BuiltInId::matrixCompMult_ABAB,
    BuiltInName::matrixCompMult,
    TExtension::UNDEFINED,
    BuiltInParameters::pABAB,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 3>(),
    EOpMulMatrixComponentWise,
    true);
constexpr const TFunction kFunction_matrixCompMult_FBFB(
    BuiltInId::matrixCompMult_FBFB,
    BuiltInName::matrixCompMult,
    TExtension::UNDEFINED,
    BuiltInParameters::pFBFB,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 4>(),
    EOpMulMatrixComponentWise,
    true);
constexpr const TFunction kFunction_matrixCompMult_9B9B(
    BuiltInId::matrixCompMult_9B9B,
    BuiltInName::matrixCompMult,
    TExtension::UNDEFINED,
    BuiltInParameters::p9B9B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 3>(),
    EOpMulMatrixComponentWise,
    true);
constexpr const TFunction kFunction_matrixCompMult_6B6B(
    BuiltInId::matrixCompMult_6B6B,
    BuiltInName::matrixCompMult,
    TExtension::UNDEFINED,
    BuiltInParameters::p6B6B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 2>(),
    EOpMulMatrixComponentWise,
    true);
constexpr const TFunction kFunction_matrixCompMult_DBDB(
    BuiltInId::matrixCompMult_DBDB,
    BuiltInName::matrixCompMult,
    TExtension::UNDEFINED,
    BuiltInParameters::pDBDB,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 4>(),
    EOpMulMatrixComponentWise,
    true);
constexpr const TFunction kFunction_matrixCompMult_7B7B(
    BuiltInId::matrixCompMult_7B7B,
    BuiltInName::matrixCompMult,
    TExtension::UNDEFINED,
    BuiltInParameters::p7B7B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 2>(),
    EOpMulMatrixComponentWise,
    true);
constexpr const TFunction kFunction_matrixCompMult_EBEB(
    BuiltInId::matrixCompMult_EBEB,
    BuiltInName::matrixCompMult,
    TExtension::UNDEFINED,
    BuiltInParameters::pEBEB,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 4>(),
    EOpMulMatrixComponentWise,
    true);
constexpr const TFunction kFunction_matrixCompMult_BBBB(
    BuiltInId::matrixCompMult_BBBB,
    BuiltInName::matrixCompMult,
    TExtension::UNDEFINED,
    BuiltInParameters::pBBBB,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 3>(),
    EOpMulMatrixComponentWise,
    true);
constexpr const TFunction kFunction_outerProduct_1B1B(
    BuiltInId::outerProduct_1B1B,
    BuiltInName::outerProduct,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 2>(),
    EOpOuterProduct,
    true);
constexpr const TFunction kFunction_outerProduct_2B2B(
    BuiltInId::outerProduct_2B2B,
    BuiltInName::outerProduct,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 3>(),
    EOpOuterProduct,
    true);
constexpr const TFunction kFunction_outerProduct_3B3B(
    BuiltInId::outerProduct_3B3B,
    BuiltInName::outerProduct,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B3B3B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 4>(),
    EOpOuterProduct,
    true);
constexpr const TFunction kFunction_outerProduct_2B1B(
    BuiltInId::outerProduct_2B1B,
    BuiltInName::outerProduct,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B1B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 3>(),
    EOpOuterProduct,
    true);
constexpr const TFunction kFunction_outerProduct_1B2B(
    BuiltInId::outerProduct_1B2B,
    BuiltInName::outerProduct,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B2B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 2>(),
    EOpOuterProduct,
    true);
constexpr const TFunction kFunction_outerProduct_3B1B(
    BuiltInId::outerProduct_3B1B,
    BuiltInName::outerProduct,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B1B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 4>(),
    EOpOuterProduct,
    true);
constexpr const TFunction kFunction_outerProduct_1B3B(
    BuiltInId::outerProduct_1B3B,
    BuiltInName::outerProduct,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B3B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 2>(),
    EOpOuterProduct,
    true);
constexpr const TFunction kFunction_outerProduct_3B2B(
    BuiltInId::outerProduct_3B2B,
    BuiltInName::outerProduct,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B2B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 4>(),
    EOpOuterProduct,
    true);
constexpr const TFunction kFunction_outerProduct_2B3B(
    BuiltInId::outerProduct_2B3B,
    BuiltInName::outerProduct,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B3B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 3>(),
    EOpOuterProduct,
    true);
constexpr const TFunction kFunction_transpose_5B(
    BuiltInId::transpose_5B,
    BuiltInName::transpose,
    TExtension::UNDEFINED,
    BuiltInParameters::p5B5B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 2>(),
    EOpTranspose,
    true);
constexpr const TFunction kFunction_transpose_AB(
    BuiltInId::transpose_AB,
    BuiltInName::transpose,
    TExtension::UNDEFINED,
    BuiltInParameters::pABAB,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 3>(),
    EOpTranspose,
    true);
constexpr const TFunction kFunction_transpose_FB(
    BuiltInId::transpose_FB,
    BuiltInName::transpose,
    TExtension::UNDEFINED,
    BuiltInParameters::pFBFB,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 4>(),
    EOpTranspose,
    true);
constexpr const TFunction kFunction_transpose_6B(
    BuiltInId::transpose_6B,
    BuiltInName::transpose,
    TExtension::UNDEFINED,
    BuiltInParameters::p6B6B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 3>(),
    EOpTranspose,
    true);
constexpr const TFunction kFunction_transpose_9B(
    BuiltInId::transpose_9B,
    BuiltInName::transpose,
    TExtension::UNDEFINED,
    BuiltInParameters::p9B9B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 2>(),
    EOpTranspose,
    true);
constexpr const TFunction kFunction_transpose_7B(
    BuiltInId::transpose_7B,
    BuiltInName::transpose,
    TExtension::UNDEFINED,
    BuiltInParameters::p7B7B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 4>(),
    EOpTranspose,
    true);
constexpr const TFunction kFunction_transpose_DB(
    BuiltInId::transpose_DB,
    BuiltInName::transpose,
    TExtension::UNDEFINED,
    BuiltInParameters::pDBDB,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 2>(),
    EOpTranspose,
    true);
constexpr const TFunction kFunction_transpose_BB(
    BuiltInId::transpose_BB,
    BuiltInName::transpose,
    TExtension::UNDEFINED,
    BuiltInParameters::pBBBB,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 4>(),
    EOpTranspose,
    true);
constexpr const TFunction kFunction_transpose_EB(
    BuiltInId::transpose_EB,
    BuiltInName::transpose,
    TExtension::UNDEFINED,
    BuiltInParameters::pEBEB,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 3>(),
    EOpTranspose,
    true);
constexpr const TFunction kFunction_determinant_5B(
    BuiltInId::determinant_5B,
    BuiltInName::determinant,
    TExtension::UNDEFINED,
    BuiltInParameters::p5B5B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpDeterminant,
    true);
constexpr const TFunction kFunction_determinant_AB(
    BuiltInId::determinant_AB,
    BuiltInName::determinant,
    TExtension::UNDEFINED,
    BuiltInParameters::pABAB,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpDeterminant,
    true);
constexpr const TFunction kFunction_determinant_FB(
    BuiltInId::determinant_FB,
    BuiltInName::determinant,
    TExtension::UNDEFINED,
    BuiltInParameters::pFBFB,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpDeterminant,
    true);
constexpr const TFunction kFunction_inverse_5B(
    BuiltInId::inverse_5B,
    BuiltInName::inverse,
    TExtension::UNDEFINED,
    BuiltInParameters::p5B5B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 2>(),
    EOpInverse,
    true);
constexpr const TFunction kFunction_inverse_AB(
    BuiltInId::inverse_AB,
    BuiltInName::inverse,
    TExtension::UNDEFINED,
    BuiltInParameters::pABAB,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 3>(),
    EOpInverse,
    true);
constexpr const TFunction kFunction_inverse_FB(
    BuiltInId::inverse_FB,
    BuiltInName::inverse,
    TExtension::UNDEFINED,
    BuiltInParameters::pFBFB,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 4>(),
    EOpInverse,
    true);
constexpr const TFunction kFunction_lessThan_1B1B(
    BuiltInId::lessThan_1B1B,
    BuiltInName::lessThan,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpLessThanComponentWise,
    true);
constexpr const TFunction kFunction_lessThan_2B2B(
    BuiltInId::lessThan_2B2B,
    BuiltInName::lessThan,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2B0B,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpLessThanComponentWise,
    true);
constexpr const TFunction kFunction_lessThan_3B3B(
    BuiltInId::lessThan_3B3B,
    BuiltInName::lessThan,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B3B3B,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpLessThanComponentWise,
    true);
constexpr const TFunction kFunction_lessThan_1C1C(
    BuiltInId::lessThan_1C1C,
    BuiltInName::lessThan,
    TExtension::UNDEFINED,
    BuiltInParameters::p1C1C0C0C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpLessThanComponentWise,
    true);
constexpr const TFunction kFunction_lessThan_2C2C(
    BuiltInId::lessThan_2C2C,
    BuiltInName::lessThan,
    TExtension::UNDEFINED,
    BuiltInParameters::p2C2C0C0C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpLessThanComponentWise,
    true);
constexpr const TFunction kFunction_lessThan_3C3C(
    BuiltInId::lessThan_3C3C,
    BuiltInName::lessThan,
    TExtension::UNDEFINED,
    BuiltInParameters::p3C3C0C0C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpLessThanComponentWise,
    true);
constexpr const TFunction kFunction_lessThan_1D1D(
    BuiltInId::lessThan_1D1D,
    BuiltInName::lessThan,
    TExtension::UNDEFINED,
    BuiltInParameters::p1D1D0C0C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpLessThanComponentWise,
    true);
constexpr const TFunction kFunction_lessThan_2D2D(
    BuiltInId::lessThan_2D2D,
    BuiltInName::lessThan,
    TExtension::UNDEFINED,
    BuiltInParameters::p2D2D0C0C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpLessThanComponentWise,
    true);
constexpr const TFunction kFunction_lessThan_3D3D(
    BuiltInId::lessThan_3D3D,
    BuiltInName::lessThan,
    TExtension::UNDEFINED,
    BuiltInParameters::p3D3D0C0C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpLessThanComponentWise,
    true);
constexpr const TFunction kFunction_lessThanEqual_1B1B(
    BuiltInId::lessThanEqual_1B1B,
    BuiltInName::lessThanEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpLessThanEqualComponentWise,
    true);
constexpr const TFunction kFunction_lessThanEqual_2B2B(
    BuiltInId::lessThanEqual_2B2B,
    BuiltInName::lessThanEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2B0B,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpLessThanEqualComponentWise,
    true);
constexpr const TFunction kFunction_lessThanEqual_3B3B(
    BuiltInId::lessThanEqual_3B3B,
    BuiltInName::lessThanEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B3B3B,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpLessThanEqualComponentWise,
    true);
constexpr const TFunction kFunction_lessThanEqual_1C1C(
    BuiltInId::lessThanEqual_1C1C,
    BuiltInName::lessThanEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p1C1C0C0C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpLessThanEqualComponentWise,
    true);
constexpr const TFunction kFunction_lessThanEqual_2C2C(
    BuiltInId::lessThanEqual_2C2C,
    BuiltInName::lessThanEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p2C2C0C0C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpLessThanEqualComponentWise,
    true);
constexpr const TFunction kFunction_lessThanEqual_3C3C(
    BuiltInId::lessThanEqual_3C3C,
    BuiltInName::lessThanEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p3C3C0C0C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpLessThanEqualComponentWise,
    true);
constexpr const TFunction kFunction_lessThanEqual_1D1D(
    BuiltInId::lessThanEqual_1D1D,
    BuiltInName::lessThanEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p1D1D0C0C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpLessThanEqualComponentWise,
    true);
constexpr const TFunction kFunction_lessThanEqual_2D2D(
    BuiltInId::lessThanEqual_2D2D,
    BuiltInName::lessThanEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p2D2D0C0C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpLessThanEqualComponentWise,
    true);
constexpr const TFunction kFunction_lessThanEqual_3D3D(
    BuiltInId::lessThanEqual_3D3D,
    BuiltInName::lessThanEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p3D3D0C0C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpLessThanEqualComponentWise,
    true);
constexpr const TFunction kFunction_greaterThan_1B1B(
    BuiltInId::greaterThan_1B1B,
    BuiltInName::greaterThan,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpGreaterThanComponentWise,
    true);
constexpr const TFunction kFunction_greaterThan_2B2B(
    BuiltInId::greaterThan_2B2B,
    BuiltInName::greaterThan,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2B0B,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpGreaterThanComponentWise,
    true);
constexpr const TFunction kFunction_greaterThan_3B3B(
    BuiltInId::greaterThan_3B3B,
    BuiltInName::greaterThan,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B3B3B,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpGreaterThanComponentWise,
    true);
constexpr const TFunction kFunction_greaterThan_1C1C(
    BuiltInId::greaterThan_1C1C,
    BuiltInName::greaterThan,
    TExtension::UNDEFINED,
    BuiltInParameters::p1C1C0C0C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpGreaterThanComponentWise,
    true);
constexpr const TFunction kFunction_greaterThan_2C2C(
    BuiltInId::greaterThan_2C2C,
    BuiltInName::greaterThan,
    TExtension::UNDEFINED,
    BuiltInParameters::p2C2C0C0C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpGreaterThanComponentWise,
    true);
constexpr const TFunction kFunction_greaterThan_3C3C(
    BuiltInId::greaterThan_3C3C,
    BuiltInName::greaterThan,
    TExtension::UNDEFINED,
    BuiltInParameters::p3C3C0C0C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpGreaterThanComponentWise,
    true);
constexpr const TFunction kFunction_greaterThan_1D1D(
    BuiltInId::greaterThan_1D1D,
    BuiltInName::greaterThan,
    TExtension::UNDEFINED,
    BuiltInParameters::p1D1D0C0C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpGreaterThanComponentWise,
    true);
constexpr const TFunction kFunction_greaterThan_2D2D(
    BuiltInId::greaterThan_2D2D,
    BuiltInName::greaterThan,
    TExtension::UNDEFINED,
    BuiltInParameters::p2D2D0C0C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpGreaterThanComponentWise,
    true);
constexpr const TFunction kFunction_greaterThan_3D3D(
    BuiltInId::greaterThan_3D3D,
    BuiltInName::greaterThan,
    TExtension::UNDEFINED,
    BuiltInParameters::p3D3D0C0C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpGreaterThanComponentWise,
    true);
constexpr const TFunction kFunction_greaterThanEqual_1B1B(
    BuiltInId::greaterThanEqual_1B1B,
    BuiltInName::greaterThanEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpGreaterThanEqualComponentWise,
    true);
constexpr const TFunction kFunction_greaterThanEqual_2B2B(
    BuiltInId::greaterThanEqual_2B2B,
    BuiltInName::greaterThanEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2B0B,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpGreaterThanEqualComponentWise,
    true);
constexpr const TFunction kFunction_greaterThanEqual_3B3B(
    BuiltInId::greaterThanEqual_3B3B,
    BuiltInName::greaterThanEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B3B3B,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpGreaterThanEqualComponentWise,
    true);
constexpr const TFunction kFunction_greaterThanEqual_1C1C(
    BuiltInId::greaterThanEqual_1C1C,
    BuiltInName::greaterThanEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p1C1C0C0C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpGreaterThanEqualComponentWise,
    true);
constexpr const TFunction kFunction_greaterThanEqual_2C2C(
    BuiltInId::greaterThanEqual_2C2C,
    BuiltInName::greaterThanEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p2C2C0C0C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpGreaterThanEqualComponentWise,
    true);
constexpr const TFunction kFunction_greaterThanEqual_3C3C(
    BuiltInId::greaterThanEqual_3C3C,
    BuiltInName::greaterThanEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p3C3C0C0C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpGreaterThanEqualComponentWise,
    true);
constexpr const TFunction kFunction_greaterThanEqual_1D1D(
    BuiltInId::greaterThanEqual_1D1D,
    BuiltInName::greaterThanEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p1D1D0C0C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpGreaterThanEqualComponentWise,
    true);
constexpr const TFunction kFunction_greaterThanEqual_2D2D(
    BuiltInId::greaterThanEqual_2D2D,
    BuiltInName::greaterThanEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p2D2D0C0C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpGreaterThanEqualComponentWise,
    true);
constexpr const TFunction kFunction_greaterThanEqual_3D3D(
    BuiltInId::greaterThanEqual_3D3D,
    BuiltInName::greaterThanEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p3D3D0C0C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpGreaterThanEqualComponentWise,
    true);
constexpr const TFunction kFunction_equal_1B1B(
    BuiltInId::equal_1B1B,
    BuiltInName::equal,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpEqualComponentWise,
    true);
constexpr const TFunction kFunction_equal_2B2B(
    BuiltInId::equal_2B2B,
    BuiltInName::equal,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2B0B,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpEqualComponentWise,
    true);
constexpr const TFunction kFunction_equal_3B3B(
    BuiltInId::equal_3B3B,
    BuiltInName::equal,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B3B3B,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpEqualComponentWise,
    true);
constexpr const TFunction kFunction_equal_1C1C(
    BuiltInId::equal_1C1C,
    BuiltInName::equal,
    TExtension::UNDEFINED,
    BuiltInParameters::p1C1C0C0C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpEqualComponentWise,
    true);
constexpr const TFunction kFunction_equal_2C2C(
    BuiltInId::equal_2C2C,
    BuiltInName::equal,
    TExtension::UNDEFINED,
    BuiltInParameters::p2C2C0C0C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpEqualComponentWise,
    true);
constexpr const TFunction kFunction_equal_3C3C(
    BuiltInId::equal_3C3C,
    BuiltInName::equal,
    TExtension::UNDEFINED,
    BuiltInParameters::p3C3C0C0C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpEqualComponentWise,
    true);
constexpr const TFunction kFunction_equal_1D1D(
    BuiltInId::equal_1D1D,
    BuiltInName::equal,
    TExtension::UNDEFINED,
    BuiltInParameters::p1D1D0C0C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpEqualComponentWise,
    true);
constexpr const TFunction kFunction_equal_2D2D(
    BuiltInId::equal_2D2D,
    BuiltInName::equal,
    TExtension::UNDEFINED,
    BuiltInParameters::p2D2D0C0C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpEqualComponentWise,
    true);
constexpr const TFunction kFunction_equal_3D3D(
    BuiltInId::equal_3D3D,
    BuiltInName::equal,
    TExtension::UNDEFINED,
    BuiltInParameters::p3D3D0C0C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpEqualComponentWise,
    true);
constexpr const TFunction kFunction_equal_1E1E(
    BuiltInId::equal_1E1E,
    BuiltInName::equal,
    TExtension::UNDEFINED,
    BuiltInParameters::p1E1E,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpEqualComponentWise,
    true);
constexpr const TFunction kFunction_equal_2E2E(
    BuiltInId::equal_2E2E,
    BuiltInName::equal,
    TExtension::UNDEFINED,
    BuiltInParameters::p2E2E,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpEqualComponentWise,
    true);
constexpr const TFunction kFunction_equal_3E3E(
    BuiltInId::equal_3E3E,
    BuiltInName::equal,
    TExtension::UNDEFINED,
    BuiltInParameters::p3E3E,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpEqualComponentWise,
    true);
constexpr const TFunction kFunction_notEqual_1B1B(
    BuiltInId::notEqual_1B1B,
    BuiltInName::notEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpNotEqualComponentWise,
    true);
constexpr const TFunction kFunction_notEqual_2B2B(
    BuiltInId::notEqual_2B2B,
    BuiltInName::notEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2B0B,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpNotEqualComponentWise,
    true);
constexpr const TFunction kFunction_notEqual_3B3B(
    BuiltInId::notEqual_3B3B,
    BuiltInName::notEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B3B3B,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpNotEqualComponentWise,
    true);
constexpr const TFunction kFunction_notEqual_1C1C(
    BuiltInId::notEqual_1C1C,
    BuiltInName::notEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p1C1C0C0C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpNotEqualComponentWise,
    true);
constexpr const TFunction kFunction_notEqual_2C2C(
    BuiltInId::notEqual_2C2C,
    BuiltInName::notEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p2C2C0C0C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpNotEqualComponentWise,
    true);
constexpr const TFunction kFunction_notEqual_3C3C(
    BuiltInId::notEqual_3C3C,
    BuiltInName::notEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p3C3C0C0C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpNotEqualComponentWise,
    true);
constexpr const TFunction kFunction_notEqual_1D1D(
    BuiltInId::notEqual_1D1D,
    BuiltInName::notEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p1D1D0C0C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpNotEqualComponentWise,
    true);
constexpr const TFunction kFunction_notEqual_2D2D(
    BuiltInId::notEqual_2D2D,
    BuiltInName::notEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p2D2D0C0C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpNotEqualComponentWise,
    true);
constexpr const TFunction kFunction_notEqual_3D3D(
    BuiltInId::notEqual_3D3D,
    BuiltInName::notEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p3D3D0C0C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpNotEqualComponentWise,
    true);
constexpr const TFunction kFunction_notEqual_1E1E(
    BuiltInId::notEqual_1E1E,
    BuiltInName::notEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p1E1E,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpNotEqualComponentWise,
    true);
constexpr const TFunction kFunction_notEqual_2E2E(
    BuiltInId::notEqual_2E2E,
    BuiltInName::notEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p2E2E,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpNotEqualComponentWise,
    true);
constexpr const TFunction kFunction_notEqual_3E3E(
    BuiltInId::notEqual_3E3E,
    BuiltInName::notEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p3E3E,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpNotEqualComponentWise,
    true);
constexpr const TFunction kFunction_any_1E(
    BuiltInId::any_1E,
    BuiltInName::any,
    TExtension::UNDEFINED,
    BuiltInParameters::p1E1E,
    1,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAny,
    true);
constexpr const TFunction kFunction_any_2E(
    BuiltInId::any_2E,
    BuiltInName::any,
    TExtension::UNDEFINED,
    BuiltInParameters::p2E2E,
    1,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAny,
    true);
constexpr const TFunction kFunction_any_3E(
    BuiltInId::any_3E,
    BuiltInName::any,
    TExtension::UNDEFINED,
    BuiltInParameters::p3E3E,
    1,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAny,
    true);
constexpr const TFunction kFunction_all_1E(
    BuiltInId::all_1E,
    BuiltInName::all,
    TExtension::UNDEFINED,
    BuiltInParameters::p1E1E,
    1,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAll,
    true);
constexpr const TFunction kFunction_all_2E(
    BuiltInId::all_2E,
    BuiltInName::all,
    TExtension::UNDEFINED,
    BuiltInParameters::p2E2E,
    1,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAll,
    true);
constexpr const TFunction kFunction_all_3E(
    BuiltInId::all_3E,
    BuiltInName::all,
    TExtension::UNDEFINED,
    BuiltInParameters::p3E3E,
    1,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAll,
    true);
constexpr const TFunction kFunction_notFunc_1E(
    BuiltInId::notFunc_1E,
    BuiltInName::notFunc,
    TExtension::UNDEFINED,
    BuiltInParameters::p1E1E,
    1,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpLogicalNotComponentWise,
    true);
constexpr const TFunction kFunction_notFunc_2E(
    BuiltInId::notFunc_2E,
    BuiltInName::notFunc,
    TExtension::UNDEFINED,
    BuiltInParameters::p2E2E,
    1,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpLogicalNotComponentWise,
    true);
constexpr const TFunction kFunction_notFunc_3E(
    BuiltInId::notFunc_3E,
    BuiltInName::notFunc,
    TExtension::UNDEFINED,
    BuiltInParameters::p3E3E,
    1,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpLogicalNotComponentWise,
    true);
constexpr const TFunction kFunction_bitfieldExtract_0C0C0C(
    BuiltInId::bitfieldExtract_0C0C0C,
    BuiltInName::bitfieldExtract,
    TExtension::UNDEFINED,
    BuiltInParameters::p0C0C0C0C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpBitfieldExtract,
    true);
constexpr const TFunction kFunction_bitfieldExtract_1C0C0C(
    BuiltInId::bitfieldExtract_1C0C0C,
    BuiltInName::bitfieldExtract,
    TExtension::UNDEFINED,
    BuiltInParameters::p1C0C0C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpBitfieldExtract,
    true);
constexpr const TFunction kFunction_bitfieldExtract_2C0C0C(
    BuiltInId::bitfieldExtract_2C0C0C,
    BuiltInName::bitfieldExtract,
    TExtension::UNDEFINED,
    BuiltInParameters::p2C0C0C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpBitfieldExtract,
    true);
constexpr const TFunction kFunction_bitfieldExtract_3C0C0C(
    BuiltInId::bitfieldExtract_3C0C0C,
    BuiltInName::bitfieldExtract,
    TExtension::UNDEFINED,
    BuiltInParameters::p3C0C0C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpBitfieldExtract,
    true);
constexpr const TFunction kFunction_bitfieldExtract_0D0C0C(
    BuiltInId::bitfieldExtract_0D0C0C,
    BuiltInName::bitfieldExtract,
    TExtension::UNDEFINED,
    BuiltInParameters::p0D0C0C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpBitfieldExtract,
    true);
constexpr const TFunction kFunction_bitfieldExtract_1D0C0C(
    BuiltInId::bitfieldExtract_1D0C0C,
    BuiltInName::bitfieldExtract,
    TExtension::UNDEFINED,
    BuiltInParameters::p1D0C0C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpBitfieldExtract,
    true);
constexpr const TFunction kFunction_bitfieldExtract_2D0C0C(
    BuiltInId::bitfieldExtract_2D0C0C,
    BuiltInName::bitfieldExtract,
    TExtension::UNDEFINED,
    BuiltInParameters::p2D0C0C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpBitfieldExtract,
    true);
constexpr const TFunction kFunction_bitfieldExtract_3D0C0C(
    BuiltInId::bitfieldExtract_3D0C0C,
    BuiltInName::bitfieldExtract,
    TExtension::UNDEFINED,
    BuiltInParameters::p3D0C0C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpBitfieldExtract,
    true);
constexpr const TFunction kFunction_bitfieldInsert_0C0C0C0C(
    BuiltInId::bitfieldInsert_0C0C0C0C,
    BuiltInName::bitfieldInsert,
    TExtension::UNDEFINED,
    BuiltInParameters::p0C0C0C0C,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpBitfieldInsert,
    true);
constexpr const TFunction kFunction_bitfieldInsert_1C1C0C0C(
    BuiltInId::bitfieldInsert_1C1C0C0C,
    BuiltInName::bitfieldInsert,
    TExtension::UNDEFINED,
    BuiltInParameters::p1C1C0C0C,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpBitfieldInsert,
    true);
constexpr const TFunction kFunction_bitfieldInsert_2C2C0C0C(
    BuiltInId::bitfieldInsert_2C2C0C0C,
    BuiltInName::bitfieldInsert,
    TExtension::UNDEFINED,
    BuiltInParameters::p2C2C0C0C,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpBitfieldInsert,
    true);
constexpr const TFunction kFunction_bitfieldInsert_3C3C0C0C(
    BuiltInId::bitfieldInsert_3C3C0C0C,
    BuiltInName::bitfieldInsert,
    TExtension::UNDEFINED,
    BuiltInParameters::p3C3C0C0C,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpBitfieldInsert,
    true);
constexpr const TFunction kFunction_bitfieldInsert_0D0D0C0C(
    BuiltInId::bitfieldInsert_0D0D0C0C,
    BuiltInName::bitfieldInsert,
    TExtension::UNDEFINED,
    BuiltInParameters::p0D0D0C0C,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpBitfieldInsert,
    true);
constexpr const TFunction kFunction_bitfieldInsert_1D1D0C0C(
    BuiltInId::bitfieldInsert_1D1D0C0C,
    BuiltInName::bitfieldInsert,
    TExtension::UNDEFINED,
    BuiltInParameters::p1D1D0C0C,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpBitfieldInsert,
    true);
constexpr const TFunction kFunction_bitfieldInsert_2D2D0C0C(
    BuiltInId::bitfieldInsert_2D2D0C0C,
    BuiltInName::bitfieldInsert,
    TExtension::UNDEFINED,
    BuiltInParameters::p2D2D0C0C,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpBitfieldInsert,
    true);
constexpr const TFunction kFunction_bitfieldInsert_3D3D0C0C(
    BuiltInId::bitfieldInsert_3D3D0C0C,
    BuiltInName::bitfieldInsert,
    TExtension::UNDEFINED,
    BuiltInParameters::p3D3D0C0C,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpBitfieldInsert,
    true);
constexpr const TFunction kFunction_bitfieldReverse_0C(
    BuiltInId::bitfieldReverse_0C,
    BuiltInName::bitfieldReverse,
    TExtension::UNDEFINED,
    BuiltInParameters::p0C0C_o_0C_o_0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpBitfieldReverse,
    true);
constexpr const TFunction kFunction_bitfieldReverse_1C(
    BuiltInId::bitfieldReverse_1C,
    BuiltInName::bitfieldReverse,
    TExtension::UNDEFINED,
    BuiltInParameters::p1C1C0C0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpBitfieldReverse,
    true);
constexpr const TFunction kFunction_bitfieldReverse_2C(
    BuiltInId::bitfieldReverse_2C,
    BuiltInName::bitfieldReverse,
    TExtension::UNDEFINED,
    BuiltInParameters::p2C2C0C0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpBitfieldReverse,
    true);
constexpr const TFunction kFunction_bitfieldReverse_3C(
    BuiltInId::bitfieldReverse_3C,
    BuiltInName::bitfieldReverse,
    TExtension::UNDEFINED,
    BuiltInParameters::p3C0C0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpBitfieldReverse,
    true);
constexpr const TFunction kFunction_bitfieldReverse_0D(
    BuiltInId::bitfieldReverse_0D,
    BuiltInName::bitfieldReverse,
    TExtension::UNDEFINED,
    BuiltInParameters::p0D0C0C,
    1,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpBitfieldReverse,
    true);
constexpr const TFunction kFunction_bitfieldReverse_1D(
    BuiltInId::bitfieldReverse_1D,
    BuiltInName::bitfieldReverse,
    TExtension::UNDEFINED,
    BuiltInParameters::p1D0C0C,
    1,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpBitfieldReverse,
    true);
constexpr const TFunction kFunction_bitfieldReverse_2D(
    BuiltInId::bitfieldReverse_2D,
    BuiltInName::bitfieldReverse,
    TExtension::UNDEFINED,
    BuiltInParameters::p2D2D0C0C,
    1,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpBitfieldReverse,
    true);
constexpr const TFunction kFunction_bitfieldReverse_3D(
    BuiltInId::bitfieldReverse_3D,
    BuiltInName::bitfieldReverse,
    TExtension::UNDEFINED,
    BuiltInParameters::p3D0C0C,
    1,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpBitfieldReverse,
    true);
constexpr const TFunction kFunction_bitCount_0C(
    BuiltInId::bitCount_0C,
    BuiltInName::bitCount,
    TExtension::UNDEFINED,
    BuiltInParameters::p0C0C_o_0C_o_0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpBitCount,
    true);
constexpr const TFunction kFunction_bitCount_1C(
    BuiltInId::bitCount_1C,
    BuiltInName::bitCount,
    TExtension::UNDEFINED,
    BuiltInParameters::p1C1C0C0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpBitCount,
    true);
constexpr const TFunction kFunction_bitCount_2C(
    BuiltInId::bitCount_2C,
    BuiltInName::bitCount,
    TExtension::UNDEFINED,
    BuiltInParameters::p2C2C0C0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpBitCount,
    true);
constexpr const TFunction kFunction_bitCount_3C(
    BuiltInId::bitCount_3C,
    BuiltInName::bitCount,
    TExtension::UNDEFINED,
    BuiltInParameters::p3C0C0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpBitCount,
    true);
constexpr const TFunction kFunction_bitCount_0D(
    BuiltInId::bitCount_0D,
    BuiltInName::bitCount,
    TExtension::UNDEFINED,
    BuiltInParameters::p0D0C0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpBitCount,
    true);
constexpr const TFunction kFunction_bitCount_1D(
    BuiltInId::bitCount_1D,
    BuiltInName::bitCount,
    TExtension::UNDEFINED,
    BuiltInParameters::p1D0C0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpBitCount,
    true);
constexpr const TFunction kFunction_bitCount_2D(
    BuiltInId::bitCount_2D,
    BuiltInName::bitCount,
    TExtension::UNDEFINED,
    BuiltInParameters::p2D2D0C0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpBitCount,
    true);
constexpr const TFunction kFunction_bitCount_3D(
    BuiltInId::bitCount_3D,
    BuiltInName::bitCount,
    TExtension::UNDEFINED,
    BuiltInParameters::p3D0C0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpBitCount,
    true);
constexpr const TFunction kFunction_findLSB_0C(
    BuiltInId::findLSB_0C,
    BuiltInName::findLSB,
    TExtension::UNDEFINED,
    BuiltInParameters::p0C0C_o_0C_o_0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpFindLSB,
    true);
constexpr const TFunction kFunction_findLSB_1C(
    BuiltInId::findLSB_1C,
    BuiltInName::findLSB,
    TExtension::UNDEFINED,
    BuiltInParameters::p1C1C0C0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpFindLSB,
    true);
constexpr const TFunction kFunction_findLSB_2C(
    BuiltInId::findLSB_2C,
    BuiltInName::findLSB,
    TExtension::UNDEFINED,
    BuiltInParameters::p2C2C0C0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpFindLSB,
    true);
constexpr const TFunction kFunction_findLSB_3C(
    BuiltInId::findLSB_3C,
    BuiltInName::findLSB,
    TExtension::UNDEFINED,
    BuiltInParameters::p3C0C0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpFindLSB,
    true);
constexpr const TFunction kFunction_findLSB_0D(
    BuiltInId::findLSB_0D,
    BuiltInName::findLSB,
    TExtension::UNDEFINED,
    BuiltInParameters::p0D0C0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpFindLSB,
    true);
constexpr const TFunction kFunction_findLSB_1D(
    BuiltInId::findLSB_1D,
    BuiltInName::findLSB,
    TExtension::UNDEFINED,
    BuiltInParameters::p1D0C0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpFindLSB,
    true);
constexpr const TFunction kFunction_findLSB_2D(
    BuiltInId::findLSB_2D,
    BuiltInName::findLSB,
    TExtension::UNDEFINED,
    BuiltInParameters::p2D2D0C0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpFindLSB,
    true);
constexpr const TFunction kFunction_findLSB_3D(
    BuiltInId::findLSB_3D,
    BuiltInName::findLSB,
    TExtension::UNDEFINED,
    BuiltInParameters::p3D0C0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpFindLSB,
    true);
constexpr const TFunction kFunction_findMSB_0C(
    BuiltInId::findMSB_0C,
    BuiltInName::findMSB,
    TExtension::UNDEFINED,
    BuiltInParameters::p0C0C_o_0C_o_0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpFindMSB,
    true);
constexpr const TFunction kFunction_findMSB_1C(
    BuiltInId::findMSB_1C,
    BuiltInName::findMSB,
    TExtension::UNDEFINED,
    BuiltInParameters::p1C1C0C0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpFindMSB,
    true);
constexpr const TFunction kFunction_findMSB_2C(
    BuiltInId::findMSB_2C,
    BuiltInName::findMSB,
    TExtension::UNDEFINED,
    BuiltInParameters::p2C2C0C0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpFindMSB,
    true);
constexpr const TFunction kFunction_findMSB_3C(
    BuiltInId::findMSB_3C,
    BuiltInName::findMSB,
    TExtension::UNDEFINED,
    BuiltInParameters::p3C0C0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpFindMSB,
    true);
constexpr const TFunction kFunction_findMSB_0D(
    BuiltInId::findMSB_0D,
    BuiltInName::findMSB,
    TExtension::UNDEFINED,
    BuiltInParameters::p0D0C0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpFindMSB,
    true);
constexpr const TFunction kFunction_findMSB_1D(
    BuiltInId::findMSB_1D,
    BuiltInName::findMSB,
    TExtension::UNDEFINED,
    BuiltInParameters::p1D0C0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpFindMSB,
    true);
constexpr const TFunction kFunction_findMSB_2D(
    BuiltInId::findMSB_2D,
    BuiltInName::findMSB,
    TExtension::UNDEFINED,
    BuiltInParameters::p2D2D0C0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpFindMSB,
    true);
constexpr const TFunction kFunction_findMSB_3D(
    BuiltInId::findMSB_3D,
    BuiltInName::findMSB,
    TExtension::UNDEFINED,
    BuiltInParameters::p3D0C0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpFindMSB,
    true);
constexpr const TFunction kFunction_uaddCarry_0D0D0D(
    BuiltInId::uaddCarry_0D0D0D,
    BuiltInName::uaddCarry,
    TExtension::UNDEFINED,
    BuiltInParameters::p0D0D_o_0D_o_0D,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpUaddCarry,
    false);
constexpr const TFunction kFunction_uaddCarry_1D1D1D(
    BuiltInId::uaddCarry_1D1D1D,
    BuiltInName::uaddCarry,
    TExtension::UNDEFINED,
    BuiltInParameters::p1D1D_o_1D_o_1D,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpUaddCarry,
    false);
constexpr const TFunction kFunction_uaddCarry_2D2D2D(
    BuiltInId::uaddCarry_2D2D2D,
    BuiltInName::uaddCarry,
    TExtension::UNDEFINED,
    BuiltInParameters::p2D2D_o_2D_o_2D,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpUaddCarry,
    false);
constexpr const TFunction kFunction_uaddCarry_3D3D3D(
    BuiltInId::uaddCarry_3D3D3D,
    BuiltInName::uaddCarry,
    TExtension::UNDEFINED,
    BuiltInParameters::p3D3D_o_3D_o_3D,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpUaddCarry,
    false);
constexpr const TFunction kFunction_usubBorrow_0D0D0D(
    BuiltInId::usubBorrow_0D0D0D,
    BuiltInName::usubBorrow,
    TExtension::UNDEFINED,
    BuiltInParameters::p0D0D_o_0D_o_0D,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpUsubBorrow,
    false);
constexpr const TFunction kFunction_usubBorrow_1D1D1D(
    BuiltInId::usubBorrow_1D1D1D,
    BuiltInName::usubBorrow,
    TExtension::UNDEFINED,
    BuiltInParameters::p1D1D_o_1D_o_1D,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpUsubBorrow,
    false);
constexpr const TFunction kFunction_usubBorrow_2D2D2D(
    BuiltInId::usubBorrow_2D2D2D,
    BuiltInName::usubBorrow,
    TExtension::UNDEFINED,
    BuiltInParameters::p2D2D_o_2D_o_2D,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpUsubBorrow,
    false);
constexpr const TFunction kFunction_usubBorrow_3D3D3D(
    BuiltInId::usubBorrow_3D3D3D,
    BuiltInName::usubBorrow,
    TExtension::UNDEFINED,
    BuiltInParameters::p3D3D_o_3D_o_3D,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpUsubBorrow,
    false);
constexpr const TFunction kFunction_umulExtended_0D0D0D0D(
    BuiltInId::umulExtended_0D0D0D0D,
    BuiltInName::umulExtended,
    TExtension::UNDEFINED,
    BuiltInParameters::p0D0D_o_0D_o_0D,
    4,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpUmulExtended,
    false);
constexpr const TFunction kFunction_umulExtended_1D1D1D1D(
    BuiltInId::umulExtended_1D1D1D1D,
    BuiltInName::umulExtended,
    TExtension::UNDEFINED,
    BuiltInParameters::p1D1D_o_1D_o_1D,
    4,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpUmulExtended,
    false);
constexpr const TFunction kFunction_umulExtended_2D2D2D2D(
    BuiltInId::umulExtended_2D2D2D2D,
    BuiltInName::umulExtended,
    TExtension::UNDEFINED,
    BuiltInParameters::p2D2D_o_2D_o_2D,
    4,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpUmulExtended,
    false);
constexpr const TFunction kFunction_umulExtended_3D3D3D3D(
    BuiltInId::umulExtended_3D3D3D3D,
    BuiltInName::umulExtended,
    TExtension::UNDEFINED,
    BuiltInParameters::p3D3D_o_3D_o_3D,
    4,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpUmulExtended,
    false);
constexpr const TFunction kFunction_imulExtended_0C0C0C0C(
    BuiltInId::imulExtended_0C0C0C0C,
    BuiltInName::imulExtended,
    TExtension::UNDEFINED,
    BuiltInParameters::p0C0C_o_0C_o_0C,
    4,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpImulExtended,
    false);
constexpr const TFunction kFunction_imulExtended_1C1C1C1C(
    BuiltInId::imulExtended_1C1C1C1C,
    BuiltInName::imulExtended,
    TExtension::UNDEFINED,
    BuiltInParameters::p1C1C_o_1C_o_1C,
    4,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpImulExtended,
    false);
constexpr const TFunction kFunction_imulExtended_2C2C2C2C(
    BuiltInId::imulExtended_2C2C2C2C,
    BuiltInName::imulExtended,
    TExtension::UNDEFINED,
    BuiltInParameters::p2C2C_o_2C_o_2C,
    4,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpImulExtended,
    false);
constexpr const TFunction kFunction_imulExtended_3C3C3C3C(
    BuiltInId::imulExtended_3C3C3C3C,
    BuiltInName::imulExtended,
    TExtension::UNDEFINED,
    BuiltInParameters::p3C3C_o_3C_o_3C,
    4,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpImulExtended,
    false);
constexpr const TFunction kFunction_texture2D_0H1B(
    BuiltInId::texture2D_0H1B,
    BuiltInName::texture2D,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H1B1B1B1C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture2DProj_0H2B(
    BuiltInId::texture2DProj_0H2B,
    BuiltInName::texture2DProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H2B0B1C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture2DProj_0H3B(
    BuiltInId::texture2DProj_0H3B,
    BuiltInName::texture2DProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H3B0B1C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureCube_0J2B(
    BuiltInId::textureCube_0J2B,
    BuiltInName::textureCube,
    TExtension::UNDEFINED,
    BuiltInParameters::p0J2B2B2B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture2D_0L1B(
    BuiltInId::texture2D_0L1B,
    BuiltInName::texture2D,
    TExtension::UNDEFINED,
    BuiltInParameters::p0L1B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture2DProj_0L2B(
    BuiltInId::texture2DProj_0L2B,
    BuiltInName::texture2DProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p0L2B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture2DProj_0L3B(
    BuiltInId::texture2DProj_0L3B,
    BuiltInName::texture2DProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p0L3B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture2DRect_0N1B(
    BuiltInId::texture2DRect_0N1B,
    BuiltInName::texture2DRect,
    TExtension::ARB_texture_rectangle,
    BuiltInParameters::p0N1B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture2DRectProj_0N2B(
    BuiltInId::texture2DRectProj_0N2B,
    BuiltInName::texture2DRectProj,
    TExtension::ARB_texture_rectangle,
    BuiltInParameters::p0N2B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture2DRectProj_0N3B(
    BuiltInId::texture2DRectProj_0N3B,
    BuiltInName::texture2DRectProj,
    TExtension::ARB_texture_rectangle,
    BuiltInParameters::p0N3B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0N1B(
    BuiltInId::texture_0N1B,
    BuiltInName::texture,
    TExtension::ARB_texture_rectangle,
    BuiltInParameters::p0N1B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_0N2B(
    BuiltInId::textureProj_0N2B,
    BuiltInName::textureProj,
    TExtension::ARB_texture_rectangle,
    BuiltInParameters::p0N2B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_0N3B(
    BuiltInId::textureProj_0N3B,
    BuiltInName::textureProj,
    TExtension::ARB_texture_rectangle,
    BuiltInParameters::p0N3B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture2DGradEXT_0H1B1B1B(
    BuiltInId::texture2DGradEXT_0H1B1B1B,
    BuiltInName::texture2DGradEXT,
    TExtension::EXT_shader_texture_lod,
    BuiltInParameters::p0H1B1B1B1C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture2DProjGradEXT_0H2B1B1B(
    BuiltInId::texture2DProjGradEXT_0H2B1B1B,
    BuiltInName::texture2DProjGradEXT,
    TExtension::EXT_shader_texture_lod,
    BuiltInParameters::p0H2B1B1B1C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture2DProjGradEXT_0H3B1B1B(
    BuiltInId::texture2DProjGradEXT_0H3B1B1B,
    BuiltInName::texture2DProjGradEXT,
    TExtension::EXT_shader_texture_lod,
    BuiltInParameters::p0H3B1B1B1C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureCubeGradEXT_0J2B2B2B(
    BuiltInId::textureCubeGradEXT_0J2B2B2B,
    BuiltInName::textureCubeGradEXT,
    TExtension::EXT_shader_texture_lod,
    BuiltInParameters::p0J2B2B2B,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture2D_0H1B0B(
    BuiltInId::texture2D_0H1B0B,
    BuiltInName::texture2D,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H1B0B1C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture2DProj_0H2B0B(
    BuiltInId::texture2DProj_0H2B0B,
    BuiltInName::texture2DProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H2B0B1C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture2DProj_0H3B0B(
    BuiltInId::texture2DProj_0H3B0B,
    BuiltInName::texture2DProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H3B0B1C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureCube_0J2B0B(
    BuiltInId::textureCube_0J2B0B,
    BuiltInName::textureCube,
    TExtension::UNDEFINED,
    BuiltInParameters::p0J2B0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_dFdxExt_0B(
    BuiltInId::dFdxExt_0B,
    BuiltInName::dFdxExt,
    TExtension::OES_standard_derivatives,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpDFdx,
    false);
constexpr const TFunction kFunction_dFdxExt_1B(
    BuiltInId::dFdxExt_1B,
    BuiltInName::dFdxExt,
    TExtension::OES_standard_derivatives,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpDFdx,
    false);
constexpr const TFunction kFunction_dFdxExt_2B(
    BuiltInId::dFdxExt_2B,
    BuiltInName::dFdxExt,
    TExtension::OES_standard_derivatives,
    BuiltInParameters::p2B2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpDFdx,
    false);
constexpr const TFunction kFunction_dFdxExt_3B(
    BuiltInId::dFdxExt_3B,
    BuiltInName::dFdxExt,
    TExtension::OES_standard_derivatives,
    BuiltInParameters::p3B1B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpDFdx,
    false);
constexpr const TFunction kFunction_dFdyExt_0B(
    BuiltInId::dFdyExt_0B,
    BuiltInName::dFdyExt,
    TExtension::OES_standard_derivatives,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpDFdy,
    false);
constexpr const TFunction kFunction_dFdyExt_1B(
    BuiltInId::dFdyExt_1B,
    BuiltInName::dFdyExt,
    TExtension::OES_standard_derivatives,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpDFdy,
    false);
constexpr const TFunction kFunction_dFdyExt_2B(
    BuiltInId::dFdyExt_2B,
    BuiltInName::dFdyExt,
    TExtension::OES_standard_derivatives,
    BuiltInParameters::p2B2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpDFdy,
    false);
constexpr const TFunction kFunction_dFdyExt_3B(
    BuiltInId::dFdyExt_3B,
    BuiltInName::dFdyExt,
    TExtension::OES_standard_derivatives,
    BuiltInParameters::p3B1B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpDFdy,
    false);
constexpr const TFunction kFunction_fwidthExt_0B(
    BuiltInId::fwidthExt_0B,
    BuiltInName::fwidthExt,
    TExtension::OES_standard_derivatives,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpFwidth,
    false);
constexpr const TFunction kFunction_fwidthExt_1B(
    BuiltInId::fwidthExt_1B,
    BuiltInName::fwidthExt,
    TExtension::OES_standard_derivatives,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpFwidth,
    false);
constexpr const TFunction kFunction_fwidthExt_2B(
    BuiltInId::fwidthExt_2B,
    BuiltInName::fwidthExt,
    TExtension::OES_standard_derivatives,
    BuiltInParameters::p2B2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpFwidth,
    false);
constexpr const TFunction kFunction_fwidthExt_3B(
    BuiltInId::fwidthExt_3B,
    BuiltInName::fwidthExt,
    TExtension::OES_standard_derivatives,
    BuiltInParameters::p3B1B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpFwidth,
    false);
constexpr const TFunction kFunction_texture2DLodEXT_0H1B0B(
    BuiltInId::texture2DLodEXT_0H1B0B,
    BuiltInName::texture2DLodEXT,
    TExtension::EXT_shader_texture_lod,
    BuiltInParameters::p0H1B0B1C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture2DProjLodEXT_0H2B0B(
    BuiltInId::texture2DProjLodEXT_0H2B0B,
    BuiltInName::texture2DProjLodEXT,
    TExtension::EXT_shader_texture_lod,
    BuiltInParameters::p0H2B0B1C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture2DProjLodEXT_0H3B0B(
    BuiltInId::texture2DProjLodEXT_0H3B0B,
    BuiltInName::texture2DProjLodEXT,
    TExtension::EXT_shader_texture_lod,
    BuiltInParameters::p0H3B0B1C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureCubeLodEXT_0J2B0B(
    BuiltInId::textureCubeLodEXT_0J2B0B,
    BuiltInName::textureCubeLodEXT,
    TExtension::EXT_shader_texture_lod,
    BuiltInParameters::p0J2B0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture2DLod_0H1B0B(
    BuiltInId::texture2DLod_0H1B0B,
    BuiltInName::texture2DLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H1B0B1C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture2DProjLod_0H2B0B(
    BuiltInId::texture2DProjLod_0H2B0B,
    BuiltInName::texture2DProjLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H2B0B1C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture2DProjLod_0H3B0B(
    BuiltInId::texture2DProjLod_0H3B0B,
    BuiltInName::texture2DProjLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H3B0B1C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureCubeLod_0J2B0B(
    BuiltInId::textureCubeLod_0J2B0B,
    BuiltInName::textureCubeLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p0J2B0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0H1B(
    BuiltInId::texture_0H1B,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H1B1B1B1C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0P1B(
    BuiltInId::texture_0P1B,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p0P1B0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0U1B(
    BuiltInId::texture_0U1B,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p0U1B0B1C,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0I2B(
    BuiltInId::texture_0I2B,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p0I2B0B2C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0Q2B(
    BuiltInId::texture_0Q2B,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Q2B0B2C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0V2B(
    BuiltInId::texture_0V2B,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p0V2B2B2B2C,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0J2B(
    BuiltInId::texture_0J2B,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p0J2B2B2B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0R2B(
    BuiltInId::texture_0R2B,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p0R2B2B2B,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0W2B(
    BuiltInId::texture_0W2B,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p0W2B0B,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0K2B(
    BuiltInId::texture_0K2B,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p0K2B0B1C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0S2B(
    BuiltInId::texture_0S2B,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p0S2B0B1C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0X2B(
    BuiltInId::texture_0X2B,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p0X2B1C0C,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_0H2B(
    BuiltInId::textureProj_0H2B,
    BuiltInName::textureProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H2B0B1C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_0P2B(
    BuiltInId::textureProj_0P2B,
    BuiltInName::textureProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p0P2B0B1C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_0U2B(
    BuiltInId::textureProj_0U2B,
    BuiltInName::textureProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p0U2B1B1B1C,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_0H3B(
    BuiltInId::textureProj_0H3B,
    BuiltInName::textureProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H3B0B1C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_0P3B(
    BuiltInId::textureProj_0P3B,
    BuiltInName::textureProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p0P3B0B1C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_0U3B(
    BuiltInId::textureProj_0U3B,
    BuiltInName::textureProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p0U3B1C0B,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_0I3B(
    BuiltInId::textureProj_0I3B,
    BuiltInName::textureProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p0I3B2C0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_0Q3B(
    BuiltInId::textureProj_0Q3B,
    BuiltInName::textureProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Q3B0B2C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_0V3B(
    BuiltInId::textureProj_0V3B,
    BuiltInName::textureProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p0V3B2B2B2C,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLod_0H1B0B(
    BuiltInId::textureLod_0H1B0B,
    BuiltInName::textureLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H1B0B1C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLod_0P1B0B(
    BuiltInId::textureLod_0P1B0B,
    BuiltInName::textureLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p0P1B0B1C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLod_0U1B0B(
    BuiltInId::textureLod_0U1B0B,
    BuiltInName::textureLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p0U1B0B1C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLod_0I2B0B(
    BuiltInId::textureLod_0I2B0B,
    BuiltInName::textureLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p0I2B0B2C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLod_0Q2B0B(
    BuiltInId::textureLod_0Q2B0B,
    BuiltInName::textureLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Q2B0B2C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLod_0V2B0B(
    BuiltInId::textureLod_0V2B0B,
    BuiltInName::textureLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p0V2B0B2C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLod_0J2B0B(
    BuiltInId::textureLod_0J2B0B,
    BuiltInName::textureLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p0J2B0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLod_0R2B0B(
    BuiltInId::textureLod_0R2B0B,
    BuiltInName::textureLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p0R2B0B,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLod_0W2B0B(
    BuiltInId::textureLod_0W2B0B,
    BuiltInName::textureLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p0W2B0B,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLod_0K2B0B(
    BuiltInId::textureLod_0K2B0B,
    BuiltInName::textureLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p0K2B0B1C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLod_0S2B0B(
    BuiltInId::textureLod_0S2B0B,
    BuiltInName::textureLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p0S2B0B1C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLod_0X2B0B(
    BuiltInId::textureLod_0X2B0B,
    BuiltInName::textureLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p0X2B0B1C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0Z2B(
    BuiltInId::texture_0Z2B,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Z2B1B1B1C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0a3B(
    BuiltInId::texture_0a3B,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p0a3B2B2B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0b3B(
    BuiltInId::texture_0b3B,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p0b3B1B1B1C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_0Z3B(
    BuiltInId::textureProj_0Z3B,
    BuiltInName::textureProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Z3B0B1C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLod_0Z2B0B(
    BuiltInId::textureLod_0Z2B0B,
    BuiltInName::textureLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Z2B0B1C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSize_0H0C(
    BuiltInId::textureSize_0H0C,
    BuiltInName::textureSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSize_0P0C(
    BuiltInId::textureSize_0P0C,
    BuiltInName::textureSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p0P0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSize_0U0C(
    BuiltInId::textureSize_0U0C,
    BuiltInName::textureSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p0U0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSize_0I0C(
    BuiltInId::textureSize_0I0C,
    BuiltInName::textureSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p0I0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSize_0Q0C(
    BuiltInId::textureSize_0Q0C,
    BuiltInName::textureSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Q0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSize_0V0C(
    BuiltInId::textureSize_0V0C,
    BuiltInName::textureSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p0V0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSize_0J0C(
    BuiltInId::textureSize_0J0C,
    BuiltInName::textureSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p0J0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSize_0R0C(
    BuiltInId::textureSize_0R0C,
    BuiltInName::textureSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p0R0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSize_0W0C(
    BuiltInId::textureSize_0W0C,
    BuiltInName::textureSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p0W0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSize_0K0C(
    BuiltInId::textureSize_0K0C,
    BuiltInName::textureSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p0K0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSize_0S0C(
    BuiltInId::textureSize_0S0C,
    BuiltInName::textureSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p0S0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSize_0X0C(
    BuiltInId::textureSize_0X0C,
    BuiltInName::textureSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p0X0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSize_0Z0C(
    BuiltInId::textureSize_0Z0C,
    BuiltInName::textureSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Z0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSize_0a0C(
    BuiltInId::textureSize_0a0C,
    BuiltInName::textureSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p0a0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSize_0b0C(
    BuiltInId::textureSize_0b0C,
    BuiltInName::textureSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p0b0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSize_0O(
    BuiltInId::textureSize_0O,
    BuiltInName::textureSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p0O1C0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSize_0T(
    BuiltInId::textureSize_0T,
    BuiltInName::textureSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p0T1C0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSize_0Y(
    BuiltInId::textureSize_0Y,
    BuiltInName::textureSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Y1C0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjLod_0H2B0B(
    BuiltInId::textureProjLod_0H2B0B,
    BuiltInName::textureProjLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H2B0B1C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjLod_0P2B0B(
    BuiltInId::textureProjLod_0P2B0B,
    BuiltInName::textureProjLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p0P2B0B1C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjLod_0U2B0B(
    BuiltInId::textureProjLod_0U2B0B,
    BuiltInName::textureProjLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p0U2B0B1C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjLod_0H3B0B(
    BuiltInId::textureProjLod_0H3B0B,
    BuiltInName::textureProjLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H3B0B1C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjLod_0P3B0B(
    BuiltInId::textureProjLod_0P3B0B,
    BuiltInName::textureProjLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p0P3B0B1C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjLod_0U3B0B(
    BuiltInId::textureProjLod_0U3B0B,
    BuiltInName::textureProjLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p0U3B0B1C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjLod_0I3B0B(
    BuiltInId::textureProjLod_0I3B0B,
    BuiltInName::textureProjLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p0I3B0B2C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjLod_0Q3B0B(
    BuiltInId::textureProjLod_0Q3B0B,
    BuiltInName::textureProjLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Q3B0B2C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjLod_0V3B0B(
    BuiltInId::textureProjLod_0V3B0B,
    BuiltInName::textureProjLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p0V3B0B2C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjLod_0Z3B0B(
    BuiltInId::textureProjLod_0Z3B0B,
    BuiltInName::textureProjLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Z3B0B1C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetch_0H1C0C(
    BuiltInId::texelFetch_0H1C0C,
    BuiltInName::texelFetch,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H1C0C1C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetch_0P1C0C(
    BuiltInId::texelFetch_0P1C0C,
    BuiltInName::texelFetch,
    TExtension::UNDEFINED,
    BuiltInParameters::p0P1C0C1C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetch_0U1C0C(
    BuiltInId::texelFetch_0U1C0C,
    BuiltInName::texelFetch,
    TExtension::UNDEFINED,
    BuiltInParameters::p0U1C0C1C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetch_0I2C0C(
    BuiltInId::texelFetch_0I2C0C,
    BuiltInName::texelFetch,
    TExtension::UNDEFINED,
    BuiltInParameters::p0I2C0C2C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetch_0Q2C0C(
    BuiltInId::texelFetch_0Q2C0C,
    BuiltInName::texelFetch,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Q2C0C2C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetch_0V2C0C(
    BuiltInId::texelFetch_0V2C0C,
    BuiltInName::texelFetch,
    TExtension::UNDEFINED,
    BuiltInParameters::p0V2C0C2C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetch_0K2C0C(
    BuiltInId::texelFetch_0K2C0C,
    BuiltInName::texelFetch,
    TExtension::UNDEFINED,
    BuiltInParameters::p0K2C0C1C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetch_0S2C0C(
    BuiltInId::texelFetch_0S2C0C,
    BuiltInName::texelFetch,
    TExtension::UNDEFINED,
    BuiltInParameters::p0S2C0C1C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetch_0X2C0C(
    BuiltInId::texelFetch_0X2C0C,
    BuiltInName::texelFetch,
    TExtension::UNDEFINED,
    BuiltInParameters::p0X2C0C1C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGrad_0H1B1B1B(
    BuiltInId::textureGrad_0H1B1B1B,
    BuiltInName::textureGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H1B1B1B1C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGrad_0P1B1B1B(
    BuiltInId::textureGrad_0P1B1B1B,
    BuiltInName::textureGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0P1B1B1B1C,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGrad_0U1B1B1B(
    BuiltInId::textureGrad_0U1B1B1B,
    BuiltInName::textureGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0U1B1B1B1C,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGrad_0I2B2B2B(
    BuiltInId::textureGrad_0I2B2B2B,
    BuiltInName::textureGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0I2B2B2B2C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGrad_0Q2B2B2B(
    BuiltInId::textureGrad_0Q2B2B2B,
    BuiltInName::textureGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Q2B2B2B2C,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGrad_0V2B2B2B(
    BuiltInId::textureGrad_0V2B2B2B,
    BuiltInName::textureGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0V2B2B2B2C,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGrad_0J2B2B2B(
    BuiltInId::textureGrad_0J2B2B2B,
    BuiltInName::textureGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0J2B2B2B,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGrad_0R2B2B2B(
    BuiltInId::textureGrad_0R2B2B2B,
    BuiltInName::textureGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0R2B2B2B,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGrad_0W2B2B2B(
    BuiltInId::textureGrad_0W2B2B2B,
    BuiltInName::textureGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0W2B2B2B,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGrad_0Z2B1B1B(
    BuiltInId::textureGrad_0Z2B1B1B,
    BuiltInName::textureGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Z2B1B1B1C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGrad_0a3B2B2B(
    BuiltInId::textureGrad_0a3B2B2B,
    BuiltInName::textureGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0a3B2B2B,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGrad_0K2B1B1B(
    BuiltInId::textureGrad_0K2B1B1B,
    BuiltInName::textureGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0K2B1B1B1C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGrad_0S2B1B1B(
    BuiltInId::textureGrad_0S2B1B1B,
    BuiltInName::textureGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0S2B1B1B1C,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGrad_0X2B1B1B(
    BuiltInId::textureGrad_0X2B1B1B,
    BuiltInName::textureGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0X2B1B1B1C,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGrad_0b3B1B1B(
    BuiltInId::textureGrad_0b3B1B1B,
    BuiltInName::textureGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0b3B1B1B1C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjGrad_0H2B1B1B(
    BuiltInId::textureProjGrad_0H2B1B1B,
    BuiltInName::textureProjGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H2B1B1B1C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjGrad_0P2B1B1B(
    BuiltInId::textureProjGrad_0P2B1B1B,
    BuiltInName::textureProjGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0P2B1B1B1C,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjGrad_0U2B1B1B(
    BuiltInId::textureProjGrad_0U2B1B1B,
    BuiltInName::textureProjGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0U2B1B1B1C,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjGrad_0H3B1B1B(
    BuiltInId::textureProjGrad_0H3B1B1B,
    BuiltInName::textureProjGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H3B1B1B1C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjGrad_0P3B1B1B(
    BuiltInId::textureProjGrad_0P3B1B1B,
    BuiltInName::textureProjGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0P3B1B1B1C,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjGrad_0U3B1B1B(
    BuiltInId::textureProjGrad_0U3B1B1B,
    BuiltInName::textureProjGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0U3B1B1B1C,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjGrad_0I3B2B2B(
    BuiltInId::textureProjGrad_0I3B2B2B,
    BuiltInName::textureProjGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0I3B2B2B2C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjGrad_0Q3B2B2B(
    BuiltInId::textureProjGrad_0Q3B2B2B,
    BuiltInName::textureProjGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Q3B2B2B2C,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjGrad_0V3B2B2B(
    BuiltInId::textureProjGrad_0V3B2B2B,
    BuiltInName::textureProjGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0V3B2B2B2C,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjGrad_0Z3B1B1B(
    BuiltInId::textureProjGrad_0Z3B1B1B,
    BuiltInName::textureProjGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Z3B1B1B1C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureOffset_0H1B1C(
    BuiltInId::textureOffset_0H1B1C,
    BuiltInName::textureOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H1B1C0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureOffset_0P1B1C(
    BuiltInId::textureOffset_0P1B1C,
    BuiltInName::textureOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0P1B1C0B,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureOffset_0U1B1C(
    BuiltInId::textureOffset_0U1B1C,
    BuiltInName::textureOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0U1B1C0C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureOffset_0I2B2C(
    BuiltInId::textureOffset_0I2B2C,
    BuiltInName::textureOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0I2B2C0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureOffset_0Q2B2C(
    BuiltInId::textureOffset_0Q2B2C,
    BuiltInName::textureOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Q2B2C0B,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureOffset_0V2B2C(
    BuiltInId::textureOffset_0V2B2C,
    BuiltInName::textureOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0V2B2C0B,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureOffset_0Z2B1C(
    BuiltInId::textureOffset_0Z2B1C,
    BuiltInName::textureOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Z2B1C0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureOffset_0K2B1C(
    BuiltInId::textureOffset_0K2B1C,
    BuiltInName::textureOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0K2B1C0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureOffset_0S2B1C(
    BuiltInId::textureOffset_0S2B1C,
    BuiltInName::textureOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0S2B1C0B,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureOffset_0X2B1C(
    BuiltInId::textureOffset_0X2B1C,
    BuiltInName::textureOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0X2B1C0C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjOffset_0H2B1C(
    BuiltInId::textureProjOffset_0H2B1C,
    BuiltInName::textureProjOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H2B1C0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjOffset_0P2B1C(
    BuiltInId::textureProjOffset_0P2B1C,
    BuiltInName::textureProjOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0P2B1C0B,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjOffset_0U2B1C(
    BuiltInId::textureProjOffset_0U2B1C,
    BuiltInName::textureProjOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0U2B1C0B,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjOffset_0H3B1C(
    BuiltInId::textureProjOffset_0H3B1C,
    BuiltInName::textureProjOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H3B1C0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjOffset_0P3B1C(
    BuiltInId::textureProjOffset_0P3B1C,
    BuiltInName::textureProjOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0P3B1C0B,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjOffset_0U3B1C(
    BuiltInId::textureProjOffset_0U3B1C,
    BuiltInName::textureProjOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0U3B1C0B,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjOffset_0I3B2C(
    BuiltInId::textureProjOffset_0I3B2C,
    BuiltInName::textureProjOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0I3B2C0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjOffset_0Q3B2C(
    BuiltInId::textureProjOffset_0Q3B2C,
    BuiltInName::textureProjOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Q3B2C0B,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjOffset_0V3B2C(
    BuiltInId::textureProjOffset_0V3B2C,
    BuiltInName::textureProjOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0V3B2C0B,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjOffset_0Z3B1C(
    BuiltInId::textureProjOffset_0Z3B1C,
    BuiltInName::textureProjOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Z3B1C0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLodOffset_0H1B0B1C(
    BuiltInId::textureLodOffset_0H1B0B1C,
    BuiltInName::textureLodOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H1B0B1C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLodOffset_0P1B0B1C(
    BuiltInId::textureLodOffset_0P1B0B1C,
    BuiltInName::textureLodOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0P1B0B1C,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLodOffset_0U1B0B1C(
    BuiltInId::textureLodOffset_0U1B0B1C,
    BuiltInName::textureLodOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0U1B0B1C,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLodOffset_0I2B0B2C(
    BuiltInId::textureLodOffset_0I2B0B2C,
    BuiltInName::textureLodOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0I2B0B2C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLodOffset_0Q2B0B2C(
    BuiltInId::textureLodOffset_0Q2B0B2C,
    BuiltInName::textureLodOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Q2B0B2C,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLodOffset_0V2B0B2C(
    BuiltInId::textureLodOffset_0V2B0B2C,
    BuiltInName::textureLodOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0V2B0B2C,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLodOffset_0Z2B0B1C(
    BuiltInId::textureLodOffset_0Z2B0B1C,
    BuiltInName::textureLodOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Z2B0B1C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLodOffset_0K2B0B1C(
    BuiltInId::textureLodOffset_0K2B0B1C,
    BuiltInName::textureLodOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0K2B0B1C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLodOffset_0S2B0B1C(
    BuiltInId::textureLodOffset_0S2B0B1C,
    BuiltInName::textureLodOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0S2B0B1C,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLodOffset_0X2B0B1C(
    BuiltInId::textureLodOffset_0X2B0B1C,
    BuiltInName::textureLodOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0X2B0B1C,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjLodOffset_0H2B0B1C(
    BuiltInId::textureProjLodOffset_0H2B0B1C,
    BuiltInName::textureProjLodOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H2B0B1C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjLodOffset_0P2B0B1C(
    BuiltInId::textureProjLodOffset_0P2B0B1C,
    BuiltInName::textureProjLodOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0P2B0B1C,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjLodOffset_0U2B0B1C(
    BuiltInId::textureProjLodOffset_0U2B0B1C,
    BuiltInName::textureProjLodOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0U2B0B1C,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjLodOffset_0H3B0B1C(
    BuiltInId::textureProjLodOffset_0H3B0B1C,
    BuiltInName::textureProjLodOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H3B0B1C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjLodOffset_0P3B0B1C(
    BuiltInId::textureProjLodOffset_0P3B0B1C,
    BuiltInName::textureProjLodOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0P3B0B1C,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjLodOffset_0U3B0B1C(
    BuiltInId::textureProjLodOffset_0U3B0B1C,
    BuiltInName::textureProjLodOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0U3B0B1C,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjLodOffset_0I3B0B2C(
    BuiltInId::textureProjLodOffset_0I3B0B2C,
    BuiltInName::textureProjLodOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0I3B0B2C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjLodOffset_0Q3B0B2C(
    BuiltInId::textureProjLodOffset_0Q3B0B2C,
    BuiltInName::textureProjLodOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Q3B0B2C,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjLodOffset_0V3B0B2C(
    BuiltInId::textureProjLodOffset_0V3B0B2C,
    BuiltInName::textureProjLodOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0V3B0B2C,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjLodOffset_0Z3B0B1C(
    BuiltInId::textureProjLodOffset_0Z3B0B1C,
    BuiltInName::textureProjLodOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Z3B0B1C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetchOffset_0H1C0C1C(
    BuiltInId::texelFetchOffset_0H1C0C1C,
    BuiltInName::texelFetchOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H1C0C1C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetchOffset_0P1C0C1C(
    BuiltInId::texelFetchOffset_0P1C0C1C,
    BuiltInName::texelFetchOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0P1C0C1C,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetchOffset_0U1C0C1C(
    BuiltInId::texelFetchOffset_0U1C0C1C,
    BuiltInName::texelFetchOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0U1C0C1C,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetchOffset_0I2C0C2C(
    BuiltInId::texelFetchOffset_0I2C0C2C,
    BuiltInName::texelFetchOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0I2C0C2C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetchOffset_0Q2C0C2C(
    BuiltInId::texelFetchOffset_0Q2C0C2C,
    BuiltInName::texelFetchOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Q2C0C2C,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetchOffset_0V2C0C2C(
    BuiltInId::texelFetchOffset_0V2C0C2C,
    BuiltInName::texelFetchOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0V2C0C2C,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetchOffset_0K2C0C1C(
    BuiltInId::texelFetchOffset_0K2C0C1C,
    BuiltInName::texelFetchOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0K2C0C1C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetchOffset_0S2C0C1C(
    BuiltInId::texelFetchOffset_0S2C0C1C,
    BuiltInName::texelFetchOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0S2C0C1C,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetchOffset_0X2C0C1C(
    BuiltInId::texelFetchOffset_0X2C0C1C,
    BuiltInName::texelFetchOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0X2C0C1C,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGradOffset_0H1B1B1B1C(
    BuiltInId::textureGradOffset_0H1B1B1B1C,
    BuiltInName::textureGradOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H1B1B1B1C,
    5,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGradOffset_0P1B1B1B1C(
    BuiltInId::textureGradOffset_0P1B1B1B1C,
    BuiltInName::textureGradOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0P1B1B1B1C,
    5,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGradOffset_0U1B1B1B1C(
    BuiltInId::textureGradOffset_0U1B1B1B1C,
    BuiltInName::textureGradOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0U1B1B1B1C,
    5,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGradOffset_0I2B2B2B2C(
    BuiltInId::textureGradOffset_0I2B2B2B2C,
    BuiltInName::textureGradOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0I2B2B2B2C,
    5,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGradOffset_0Q2B2B2B2C(
    BuiltInId::textureGradOffset_0Q2B2B2B2C,
    BuiltInName::textureGradOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Q2B2B2B2C,
    5,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGradOffset_0V2B2B2B2C(
    BuiltInId::textureGradOffset_0V2B2B2B2C,
    BuiltInName::textureGradOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0V2B2B2B2C,
    5,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGradOffset_0Z2B1B1B1C(
    BuiltInId::textureGradOffset_0Z2B1B1B1C,
    BuiltInName::textureGradOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Z2B1B1B1C,
    5,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGradOffset_0K2B1B1B1C(
    BuiltInId::textureGradOffset_0K2B1B1B1C,
    BuiltInName::textureGradOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0K2B1B1B1C,
    5,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGradOffset_0S2B1B1B1C(
    BuiltInId::textureGradOffset_0S2B1B1B1C,
    BuiltInName::textureGradOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0S2B1B1B1C,
    5,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGradOffset_0X2B1B1B1C(
    BuiltInId::textureGradOffset_0X2B1B1B1C,
    BuiltInName::textureGradOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0X2B1B1B1C,
    5,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGradOffset_0b3B1B1B1C(
    BuiltInId::textureGradOffset_0b3B1B1B1C,
    BuiltInName::textureGradOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0b3B1B1B1C,
    5,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjGradOffset_0H2B1B1B1C(
    BuiltInId::textureProjGradOffset_0H2B1B1B1C,
    BuiltInName::textureProjGradOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H2B1B1B1C,
    5,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjGradOffset_0P2B1B1B1C(
    BuiltInId::textureProjGradOffset_0P2B1B1B1C,
    BuiltInName::textureProjGradOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0P2B1B1B1C,
    5,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjGradOffset_0U2B1B1B1C(
    BuiltInId::textureProjGradOffset_0U2B1B1B1C,
    BuiltInName::textureProjGradOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0U2B1B1B1C,
    5,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjGradOffset_0H3B1B1B1C(
    BuiltInId::textureProjGradOffset_0H3B1B1B1C,
    BuiltInName::textureProjGradOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H3B1B1B1C,
    5,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjGradOffset_0P3B1B1B1C(
    BuiltInId::textureProjGradOffset_0P3B1B1B1C,
    BuiltInName::textureProjGradOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0P3B1B1B1C,
    5,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjGradOffset_0U3B1B1B1C(
    BuiltInId::textureProjGradOffset_0U3B1B1B1C,
    BuiltInName::textureProjGradOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0U3B1B1B1C,
    5,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjGradOffset_0I3B2B2B2C(
    BuiltInId::textureProjGradOffset_0I3B2B2B2C,
    BuiltInName::textureProjGradOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0I3B2B2B2C,
    5,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjGradOffset_0Q3B2B2B2C(
    BuiltInId::textureProjGradOffset_0Q3B2B2B2C,
    BuiltInName::textureProjGradOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Q3B2B2B2C,
    5,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjGradOffset_0V3B2B2B2C(
    BuiltInId::textureProjGradOffset_0V3B2B2B2C,
    BuiltInName::textureProjGradOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0V3B2B2B2C,
    5,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjGradOffset_0Z3B1B1B1C(
    BuiltInId::textureProjGradOffset_0Z3B1B1B1C,
    BuiltInName::textureProjGradOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Z3B1B1B1C,
    5,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureOffset_0H1B1C0B(
    BuiltInId::textureOffset_0H1B1C0B,
    BuiltInName::textureOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H1B1C0B,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureOffset_0P1B1C0B(
    BuiltInId::textureOffset_0P1B1C0B,
    BuiltInName::textureOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0P1B1C0B,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureOffset_0U1B1C0B(
    BuiltInId::textureOffset_0U1B1C0B,
    BuiltInName::textureOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0U1B1C0B,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureOffset_0I2B2C0B(
    BuiltInId::textureOffset_0I2B2C0B,
    BuiltInName::textureOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0I2B2C0B,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureOffset_0Q2B2C0B(
    BuiltInId::textureOffset_0Q2B2C0B,
    BuiltInName::textureOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Q2B2C0B,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureOffset_0V2B2C0B(
    BuiltInId::textureOffset_0V2B2C0B,
    BuiltInName::textureOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0V2B2C0B,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureOffset_0Z2B1C0B(
    BuiltInId::textureOffset_0Z2B1C0B,
    BuiltInName::textureOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Z2B1C0B,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureOffset_0K2B1C0B(
    BuiltInId::textureOffset_0K2B1C0B,
    BuiltInName::textureOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0K2B1C0B,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureOffset_0S2B1C0B(
    BuiltInId::textureOffset_0S2B1C0B,
    BuiltInName::textureOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0S2B1C0B,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureOffset_0X2B1C0B(
    BuiltInId::textureOffset_0X2B1C0B,
    BuiltInName::textureOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0X2B1C0B,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjOffset_0H2B1C0B(
    BuiltInId::textureProjOffset_0H2B1C0B,
    BuiltInName::textureProjOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H2B1C0B,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjOffset_0P2B1C0B(
    BuiltInId::textureProjOffset_0P2B1C0B,
    BuiltInName::textureProjOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0P2B1C0B,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjOffset_0U2B1C0B(
    BuiltInId::textureProjOffset_0U2B1C0B,
    BuiltInName::textureProjOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0U2B1C0B,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjOffset_0H3B1C0B(
    BuiltInId::textureProjOffset_0H3B1C0B,
    BuiltInName::textureProjOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H3B1C0B,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjOffset_0P3B1C0B(
    BuiltInId::textureProjOffset_0P3B1C0B,
    BuiltInName::textureProjOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0P3B1C0B,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjOffset_0U3B1C0B(
    BuiltInId::textureProjOffset_0U3B1C0B,
    BuiltInName::textureProjOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0U3B1C0B,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjOffset_0I3B2C0B(
    BuiltInId::textureProjOffset_0I3B2C0B,
    BuiltInName::textureProjOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0I3B2C0B,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjOffset_0Q3B2C0B(
    BuiltInId::textureProjOffset_0Q3B2C0B,
    BuiltInName::textureProjOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Q3B2C0B,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjOffset_0V3B2C0B(
    BuiltInId::textureProjOffset_0V3B2C0B,
    BuiltInName::textureProjOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0V3B2C0B,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjOffset_0Z3B1C0B(
    BuiltInId::textureProjOffset_0Z3B1C0B,
    BuiltInName::textureProjOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Z3B1C0B,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0L1B(
    BuiltInId::texture_0L1B,
    BuiltInName::texture,
    TExtension::OES_EGL_image_external_essl3,
    BuiltInParameters::p0L1B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_0L2B(
    BuiltInId::textureProj_0L2B,
    BuiltInName::textureProj,
    TExtension::OES_EGL_image_external_essl3,
    BuiltInParameters::p0L2B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_0L3B(
    BuiltInId::textureProj_0L3B,
    BuiltInName::textureProj,
    TExtension::OES_EGL_image_external_essl3,
    BuiltInParameters::p0L3B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSize_0L0C(
    BuiltInId::textureSize_0L0C,
    BuiltInName::textureSize,
    TExtension::OES_EGL_image_external_essl3,
    BuiltInParameters::p0L0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetch_0L1C0C(
    BuiltInId::texelFetch_0L1C0C,
    BuiltInName::texelFetch,
    TExtension::OES_EGL_image_external_essl3,
    BuiltInParameters::p0L1C0C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0M1B(
    BuiltInId::texture_0M1B,
    BuiltInName::texture,
    TExtension::EXT_YUV_target,
    BuiltInParameters::p0M1B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_0M2B(
    BuiltInId::textureProj_0M2B,
    BuiltInName::textureProj,
    TExtension::EXT_YUV_target,
    BuiltInParameters::p0M2B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_0M3B(
    BuiltInId::textureProj_0M3B,
    BuiltInName::textureProj,
    TExtension::EXT_YUV_target,
    BuiltInParameters::p0M3B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_rgb_2_yuv_2B0G(
    BuiltInId::rgb_2_yuv_2B0G,
    BuiltInName::rgb_2_yuv,
    TExtension::EXT_YUV_target,
    BuiltInParameters::p2B0G,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_yuv_2_rgb_2B0G(
    BuiltInId::yuv_2_rgb_2B0G,
    BuiltInName::yuv_2_rgb,
    TExtension::EXT_YUV_target,
    BuiltInParameters::p2B0G,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSize_0M0C(
    BuiltInId::textureSize_0M0C,
    BuiltInName::textureSize,
    TExtension::EXT_YUV_target,
    BuiltInParameters::p0M0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetch_0M1C0C(
    BuiltInId::texelFetch_0M1C0C,
    BuiltInName::texelFetch,
    TExtension::EXT_YUV_target,
    BuiltInParameters::p0M1C0C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0H1B0B(
    BuiltInId::texture_0H1B0B,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H1B0B1C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0P1B0B(
    BuiltInId::texture_0P1B0B,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p0P1B0B1C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0U1B0B(
    BuiltInId::texture_0U1B0B,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p0U1B0B1C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0I2B0B(
    BuiltInId::texture_0I2B0B,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p0I2B0B2C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0Q2B0B(
    BuiltInId::texture_0Q2B0B,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Q2B0B2C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0V2B0B(
    BuiltInId::texture_0V2B0B,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p0V2B0B2C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0J2B0B(
    BuiltInId::texture_0J2B0B,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p0J2B0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0R2B0B(
    BuiltInId::texture_0R2B0B,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p0R2B0B,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0W2B0B(
    BuiltInId::texture_0W2B0B,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p0W2B0B,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0K2B0B(
    BuiltInId::texture_0K2B0B,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p0K2B0B1C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0S2B0B(
    BuiltInId::texture_0S2B0B,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p0S2B0B1C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0X2B0B(
    BuiltInId::texture_0X2B0B,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p0X2B0B1C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_0H2B0B(
    BuiltInId::textureProj_0H2B0B,
    BuiltInName::textureProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H2B0B1C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_0P2B0B(
    BuiltInId::textureProj_0P2B0B,
    BuiltInName::textureProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p0P2B0B1C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_0U2B0B(
    BuiltInId::textureProj_0U2B0B,
    BuiltInName::textureProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p0U2B0B1C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_0H3B0B(
    BuiltInId::textureProj_0H3B0B,
    BuiltInName::textureProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H3B0B1C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_0P3B0B(
    BuiltInId::textureProj_0P3B0B,
    BuiltInName::textureProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p0P3B0B1C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_0U3B0B(
    BuiltInId::textureProj_0U3B0B,
    BuiltInName::textureProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p0U3B0B1C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_0I3B0B(
    BuiltInId::textureProj_0I3B0B,
    BuiltInName::textureProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p0I3B0B2C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_0Q3B0B(
    BuiltInId::textureProj_0Q3B0B,
    BuiltInName::textureProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Q3B0B2C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_0V3B0B(
    BuiltInId::textureProj_0V3B0B,
    BuiltInName::textureProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p0V3B0B2C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0Z2B0B(
    BuiltInId::texture_0Z2B0B,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Z2B0B1C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0a3B0B(
    BuiltInId::texture_0a3B0B,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p0a3B0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_0Z3B0B(
    BuiltInId::textureProj_0Z3B0B,
    BuiltInName::textureProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Z3B0B1C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0L1B0B(
    BuiltInId::texture_0L1B0B,
    BuiltInName::texture,
    TExtension::OES_EGL_image_external_essl3,
    BuiltInParameters::p0L1B0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_0L2B0B(
    BuiltInId::textureProj_0L2B0B,
    BuiltInName::textureProj,
    TExtension::OES_EGL_image_external_essl3,
    BuiltInParameters::p0L2B0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_0L3B0B(
    BuiltInId::textureProj_0L3B0B,
    BuiltInName::textureProj,
    TExtension::OES_EGL_image_external_essl3,
    BuiltInParameters::p0L3B0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0M1B0B(
    BuiltInId::texture_0M1B0B,
    BuiltInName::texture,
    TExtension::EXT_YUV_target,
    BuiltInParameters::p0M1B0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_0M2B0B(
    BuiltInId::textureProj_0M2B0B,
    BuiltInName::textureProj,
    TExtension::EXT_YUV_target,
    BuiltInParameters::p0M2B0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_0M3B0B(
    BuiltInId::textureProj_0M3B0B,
    BuiltInName::textureProj,
    TExtension::EXT_YUV_target,
    BuiltInParameters::p0M3B0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetch_0O1C0C(
    BuiltInId::texelFetch_0O1C0C,
    BuiltInName::texelFetch,
    TExtension::UNDEFINED,
    BuiltInParameters::p0O1C0C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetch_0T1C0C(
    BuiltInId::texelFetch_0T1C0C,
    BuiltInName::texelFetch,
    TExtension::UNDEFINED,
    BuiltInParameters::p0T1C0C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetch_0Y1C0C(
    BuiltInId::texelFetch_0Y1C0C,
    BuiltInName::texelFetch,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Y1C0C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_0H1B(
    BuiltInId::textureGather_0H1B,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H1B1B1B1C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_0P1B(
    BuiltInId::textureGather_0P1B,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p0P1B0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_0U1B(
    BuiltInId::textureGather_0U1B,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p0U1B0B1C,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_0H1B0C(
    BuiltInId::textureGather_0H1B0C,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H1B0C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_0P1B0C(
    BuiltInId::textureGather_0P1B0C,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p0P1B0C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_0U1B0C(
    BuiltInId::textureGather_0U1B0C,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p0U1B0C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_0K2B(
    BuiltInId::textureGather_0K2B,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p0K2B0B1C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_0S2B(
    BuiltInId::textureGather_0S2B,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p0S2B0B1C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_0X2B(
    BuiltInId::textureGather_0X2B,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p0X2B1C0C,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_0K2B0C(
    BuiltInId::textureGather_0K2B0C,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p0K2B0C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_0S2B0C(
    BuiltInId::textureGather_0S2B0C,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p0S2B0C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_0X2B0C(
    BuiltInId::textureGather_0X2B0C,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p0X2B0C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_0J2B(
    BuiltInId::textureGather_0J2B,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p0J2B2B2B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_0R2B(
    BuiltInId::textureGather_0R2B,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p0R2B2B2B,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_0W2B(
    BuiltInId::textureGather_0W2B,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p0W2B0B,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_0J2B0C(
    BuiltInId::textureGather_0J2B0C,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p0J2B0C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_0R2B0C(
    BuiltInId::textureGather_0R2B0C,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p0R2B0C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_0W2B0C(
    BuiltInId::textureGather_0W2B0C,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p0W2B0C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_0Z1B(
    BuiltInId::textureGather_0Z1B,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Z1B0B1C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_0Z1B0B(
    BuiltInId::textureGather_0Z1B0B,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Z1B0B1C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_0b2B(
    BuiltInId::textureGather_0b2B,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p0b2B0B1C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_0b2B0B(
    BuiltInId::textureGather_0b2B0B,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p0b2B0B1C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_0a2B(
    BuiltInId::textureGather_0a2B,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p0a2B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_0a2B0B(
    BuiltInId::textureGather_0a2B0B,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p0a2B0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGatherOffset_0H1B1C(
    BuiltInId::textureGatherOffset_0H1B1C,
    BuiltInName::textureGatherOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H1B1C0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGatherOffset_0P1B1C(
    BuiltInId::textureGatherOffset_0P1B1C,
    BuiltInName::textureGatherOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0P1B1C0B,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGatherOffset_0U1B1C(
    BuiltInId::textureGatherOffset_0U1B1C,
    BuiltInName::textureGatherOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0U1B1C0C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGatherOffset_0H1B1C0C(
    BuiltInId::textureGatherOffset_0H1B1C0C,
    BuiltInName::textureGatherOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H1B1C0C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGatherOffset_0P1B1C0C(
    BuiltInId::textureGatherOffset_0P1B1C0C,
    BuiltInName::textureGatherOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0P1B1C0C,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGatherOffset_0U1B1C0C(
    BuiltInId::textureGatherOffset_0U1B1C0C,
    BuiltInName::textureGatherOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0U1B1C0C,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGatherOffset_0K2B1C(
    BuiltInId::textureGatherOffset_0K2B1C,
    BuiltInName::textureGatherOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0K2B1C0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGatherOffset_0S2B1C(
    BuiltInId::textureGatherOffset_0S2B1C,
    BuiltInName::textureGatherOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0S2B1C0B,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGatherOffset_0X2B1C(
    BuiltInId::textureGatherOffset_0X2B1C,
    BuiltInName::textureGatherOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0X2B1C0C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGatherOffset_0K2B1C0C(
    BuiltInId::textureGatherOffset_0K2B1C0C,
    BuiltInName::textureGatherOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0K2B1C0C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGatherOffset_0S2B1C0C(
    BuiltInId::textureGatherOffset_0S2B1C0C,
    BuiltInName::textureGatherOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0S2B1C0C,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGatherOffset_0X2B1C0C(
    BuiltInId::textureGatherOffset_0X2B1C0C,
    BuiltInName::textureGatherOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0X2B1C0C,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGatherOffset_0Z1B0B1C(
    BuiltInId::textureGatherOffset_0Z1B0B1C,
    BuiltInName::textureGatherOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Z1B0B1C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGatherOffset_0b2B0B1C(
    BuiltInId::textureGatherOffset_0b2B0B1C,
    BuiltInName::textureGatherOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0b2B0B1C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_dFdx_0B(
    BuiltInId::dFdx_0B,
    BuiltInName::dFdx,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpDFdx,
    false);
constexpr const TFunction kFunction_dFdx_1B(
    BuiltInId::dFdx_1B,
    BuiltInName::dFdx,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpDFdx,
    false);
constexpr const TFunction kFunction_dFdx_2B(
    BuiltInId::dFdx_2B,
    BuiltInName::dFdx,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpDFdx,
    false);
constexpr const TFunction kFunction_dFdx_3B(
    BuiltInId::dFdx_3B,
    BuiltInName::dFdx,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B1B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpDFdx,
    false);
constexpr const TFunction kFunction_dFdy_0B(
    BuiltInId::dFdy_0B,
    BuiltInName::dFdy,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpDFdy,
    false);
constexpr const TFunction kFunction_dFdy_1B(
    BuiltInId::dFdy_1B,
    BuiltInName::dFdy,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpDFdy,
    false);
constexpr const TFunction kFunction_dFdy_2B(
    BuiltInId::dFdy_2B,
    BuiltInName::dFdy,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpDFdy,
    false);
constexpr const TFunction kFunction_dFdy_3B(
    BuiltInId::dFdy_3B,
    BuiltInName::dFdy,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B1B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpDFdy,
    false);
constexpr const TFunction kFunction_fwidth_0B(
    BuiltInId::fwidth_0B,
    BuiltInName::fwidth,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpFwidth,
    false);
constexpr const TFunction kFunction_fwidth_1B(
    BuiltInId::fwidth_1B,
    BuiltInName::fwidth,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpFwidth,
    false);
constexpr const TFunction kFunction_fwidth_2B(
    BuiltInId::fwidth_2B,
    BuiltInName::fwidth,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpFwidth,
    false);
constexpr const TFunction kFunction_fwidth_3B(
    BuiltInId::fwidth_3B,
    BuiltInName::fwidth,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B1B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpFwidth,
    false);
constexpr const TFunction kFunction_atomicCounter_0F(
    BuiltInId::atomicCounter_0F,
    BuiltInName::atomicCounter,
    TExtension::UNDEFINED,
    BuiltInParameters::p0F,
    1,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_atomicCounterIncrement_0F(
    BuiltInId::atomicCounterIncrement_0F,
    BuiltInName::atomicCounterIncrement,
    TExtension::UNDEFINED,
    BuiltInParameters::p0F,
    1,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_atomicCounterDecrement_0F(
    BuiltInId::atomicCounterDecrement_0F,
    BuiltInName::atomicCounterDecrement,
    TExtension::UNDEFINED,
    BuiltInParameters::p0F,
    1,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_atomicAdd_0D0D(
    BuiltInId::atomicAdd_0D0D,
    BuiltInName::atomicAdd,
    TExtension::UNDEFINED,
    BuiltInParameters::p_io_0D0D0D,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_atomicAdd_0C0C(
    BuiltInId::atomicAdd_0C0C,
    BuiltInName::atomicAdd,
    TExtension::UNDEFINED,
    BuiltInParameters::p_io_0C0C0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_atomicMin_0D0D(
    BuiltInId::atomicMin_0D0D,
    BuiltInName::atomicMin,
    TExtension::UNDEFINED,
    BuiltInParameters::p_io_0D0D0D,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_atomicMin_0C0C(
    BuiltInId::atomicMin_0C0C,
    BuiltInName::atomicMin,
    TExtension::UNDEFINED,
    BuiltInParameters::p_io_0C0C0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_atomicMax_0D0D(
    BuiltInId::atomicMax_0D0D,
    BuiltInName::atomicMax,
    TExtension::UNDEFINED,
    BuiltInParameters::p_io_0D0D0D,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_atomicMax_0C0C(
    BuiltInId::atomicMax_0C0C,
    BuiltInName::atomicMax,
    TExtension::UNDEFINED,
    BuiltInParameters::p_io_0C0C0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_atomicAnd_0D0D(
    BuiltInId::atomicAnd_0D0D,
    BuiltInName::atomicAnd,
    TExtension::UNDEFINED,
    BuiltInParameters::p_io_0D0D0D,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_atomicAnd_0C0C(
    BuiltInId::atomicAnd_0C0C,
    BuiltInName::atomicAnd,
    TExtension::UNDEFINED,
    BuiltInParameters::p_io_0C0C0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_atomicOr_0D0D(
    BuiltInId::atomicOr_0D0D,
    BuiltInName::atomicOr,
    TExtension::UNDEFINED,
    BuiltInParameters::p_io_0D0D0D,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_atomicOr_0C0C(
    BuiltInId::atomicOr_0C0C,
    BuiltInName::atomicOr,
    TExtension::UNDEFINED,
    BuiltInParameters::p_io_0C0C0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_atomicXor_0D0D(
    BuiltInId::atomicXor_0D0D,
    BuiltInName::atomicXor,
    TExtension::UNDEFINED,
    BuiltInParameters::p_io_0D0D0D,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_atomicXor_0C0C(
    BuiltInId::atomicXor_0C0C,
    BuiltInName::atomicXor,
    TExtension::UNDEFINED,
    BuiltInParameters::p_io_0C0C0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_atomicExchange_0D0D(
    BuiltInId::atomicExchange_0D0D,
    BuiltInName::atomicExchange,
    TExtension::UNDEFINED,
    BuiltInParameters::p_io_0D0D0D,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_atomicExchange_0C0C(
    BuiltInId::atomicExchange_0C0C,
    BuiltInName::atomicExchange,
    TExtension::UNDEFINED,
    BuiltInParameters::p_io_0C0C0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_atomicCompSwap_0D0D0D(
    BuiltInId::atomicCompSwap_0D0D0D,
    BuiltInName::atomicCompSwap,
    TExtension::UNDEFINED,
    BuiltInParameters::p_io_0D0D0D,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_atomicCompSwap_0C0C0C(
    BuiltInId::atomicCompSwap_0C0C0C,
    BuiltInName::atomicCompSwap,
    TExtension::UNDEFINED,
    BuiltInParameters::p_io_0C0C0C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageSize_0c(
    BuiltInId::imageSize_0c,
    BuiltInName::imageSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p0c1C3B,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageSize_0d(
    BuiltInId::imageSize_0d,
    BuiltInName::imageSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p0d1C3C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageSize_0e(
    BuiltInId::imageSize_0e,
    BuiltInName::imageSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p0e1C3D,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageSize_0f(
    BuiltInId::imageSize_0f,
    BuiltInName::imageSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p0f2C3B,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageSize_0g(
    BuiltInId::imageSize_0g,
    BuiltInName::imageSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p0g2C3C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageSize_0h(
    BuiltInId::imageSize_0h,
    BuiltInName::imageSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p0h2C3D,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageSize_0i(
    BuiltInId::imageSize_0i,
    BuiltInName::imageSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p0i2C3B,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageSize_0j(
    BuiltInId::imageSize_0j,
    BuiltInName::imageSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p0j2C3C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageSize_0k(
    BuiltInId::imageSize_0k,
    BuiltInName::imageSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p0k2C3D,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageSize_0l(
    BuiltInId::imageSize_0l,
    BuiltInName::imageSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p0l2C3B,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageSize_0m(
    BuiltInId::imageSize_0m,
    BuiltInName::imageSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p0m2C3C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageSize_0n(
    BuiltInId::imageSize_0n,
    BuiltInName::imageSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p0n2C3D,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageLoad_0c1C(
    BuiltInId::imageLoad_0c1C,
    BuiltInName::imageLoad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0c1C3B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageLoad_0d1C(
    BuiltInId::imageLoad_0d1C,
    BuiltInName::imageLoad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0d1C3C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageLoad_0e1C(
    BuiltInId::imageLoad_0e1C,
    BuiltInName::imageLoad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0e1C3D,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageLoad_0f2C(
    BuiltInId::imageLoad_0f2C,
    BuiltInName::imageLoad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0f2C3B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageLoad_0g2C(
    BuiltInId::imageLoad_0g2C,
    BuiltInName::imageLoad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0g2C3C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageLoad_0h2C(
    BuiltInId::imageLoad_0h2C,
    BuiltInName::imageLoad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0h2C3D,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageLoad_0i2C(
    BuiltInId::imageLoad_0i2C,
    BuiltInName::imageLoad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0i2C3B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageLoad_0j2C(
    BuiltInId::imageLoad_0j2C,
    BuiltInName::imageLoad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0j2C3C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageLoad_0k2C(
    BuiltInId::imageLoad_0k2C,
    BuiltInName::imageLoad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0k2C3D,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageLoad_0l2C(
    BuiltInId::imageLoad_0l2C,
    BuiltInName::imageLoad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0l2C3B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageLoad_0m2C(
    BuiltInId::imageLoad_0m2C,
    BuiltInName::imageLoad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0m2C3C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageLoad_0n2C(
    BuiltInId::imageLoad_0n2C,
    BuiltInName::imageLoad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0n2C3D,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageStore_0c1C3B(
    BuiltInId::imageStore_0c1C3B,
    BuiltInName::imageStore,
    TExtension::UNDEFINED,
    BuiltInParameters::p0c1C3B,
    3,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageStore_0d1C3C(
    BuiltInId::imageStore_0d1C3C,
    BuiltInName::imageStore,
    TExtension::UNDEFINED,
    BuiltInParameters::p0d1C3C,
    3,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageStore_0e1C3D(
    BuiltInId::imageStore_0e1C3D,
    BuiltInName::imageStore,
    TExtension::UNDEFINED,
    BuiltInParameters::p0e1C3D,
    3,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageStore_0f2C3B(
    BuiltInId::imageStore_0f2C3B,
    BuiltInName::imageStore,
    TExtension::UNDEFINED,
    BuiltInParameters::p0f2C3B,
    3,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageStore_0g2C3C(
    BuiltInId::imageStore_0g2C3C,
    BuiltInName::imageStore,
    TExtension::UNDEFINED,
    BuiltInParameters::p0g2C3C,
    3,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageStore_0h2C3D(
    BuiltInId::imageStore_0h2C3D,
    BuiltInName::imageStore,
    TExtension::UNDEFINED,
    BuiltInParameters::p0h2C3D,
    3,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageStore_0i2C3B(
    BuiltInId::imageStore_0i2C3B,
    BuiltInName::imageStore,
    TExtension::UNDEFINED,
    BuiltInParameters::p0i2C3B,
    3,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageStore_0j2C3C(
    BuiltInId::imageStore_0j2C3C,
    BuiltInName::imageStore,
    TExtension::UNDEFINED,
    BuiltInParameters::p0j2C3C,
    3,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageStore_0k2C3D(
    BuiltInId::imageStore_0k2C3D,
    BuiltInName::imageStore,
    TExtension::UNDEFINED,
    BuiltInParameters::p0k2C3D,
    3,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageStore_0l2C3B(
    BuiltInId::imageStore_0l2C3B,
    BuiltInName::imageStore,
    TExtension::UNDEFINED,
    BuiltInParameters::p0l2C3B,
    3,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageStore_0m2C3C(
    BuiltInId::imageStore_0m2C3C,
    BuiltInName::imageStore,
    TExtension::UNDEFINED,
    BuiltInParameters::p0m2C3C,
    3,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageStore_0n2C3D(
    BuiltInId::imageStore_0n2C3D,
    BuiltInName::imageStore,
    TExtension::UNDEFINED,
    BuiltInParameters::p0n2C3D,
    3,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_memoryBarrier_(
    BuiltInId::memoryBarrier_,
    BuiltInName::memoryBarrier,
    TExtension::UNDEFINED,
    BuiltInParameters::empty,
    0,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpMemoryBarrier,
    false);
constexpr const TFunction kFunction_memoryBarrierAtomicCounter_(
    BuiltInId::memoryBarrierAtomicCounter_,
    BuiltInName::memoryBarrierAtomicCounter,
    TExtension::UNDEFINED,
    BuiltInParameters::empty,
    0,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpMemoryBarrierAtomicCounter,
    false);
constexpr const TFunction kFunction_memoryBarrierBuffer_(
    BuiltInId::memoryBarrierBuffer_,
    BuiltInName::memoryBarrierBuffer,
    TExtension::UNDEFINED,
    BuiltInParameters::empty,
    0,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpMemoryBarrierBuffer,
    false);
constexpr const TFunction kFunction_memoryBarrierImage_(
    BuiltInId::memoryBarrierImage_,
    BuiltInName::memoryBarrierImage,
    TExtension::UNDEFINED,
    BuiltInParameters::empty,
    0,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpMemoryBarrierImage,
    false);
constexpr const TFunction kFunction_barrier_(
    BuiltInId::barrier_,
    BuiltInName::barrier,
    TExtension::UNDEFINED,
    BuiltInParameters::empty,
    0,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpBarrier,
    false);
constexpr const TFunction kFunction_memoryBarrierShared_(
    BuiltInId::memoryBarrierShared_,
    BuiltInName::memoryBarrierShared,
    TExtension::UNDEFINED,
    BuiltInParameters::empty,
    0,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpMemoryBarrierShared,
    false);
constexpr const TFunction kFunction_groupMemoryBarrier_(
    BuiltInId::groupMemoryBarrier_,
    BuiltInName::groupMemoryBarrier,
    TExtension::UNDEFINED,
    BuiltInParameters::empty,
    0,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpGroupMemoryBarrier,
    false);
constexpr const TFunction kFunction_EmitVertex_(
    BuiltInId::EmitVertex_,
    BuiltInName::EmitVertex,
    TExtension::EXT_geometry_shader,
    BuiltInParameters::empty,
    0,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpEmitVertex,
    false);
constexpr const TFunction kFunction_EndPrimitive_(
    BuiltInId::EndPrimitive_,
    BuiltInName::EndPrimitive,
    TExtension::EXT_geometry_shader,
    BuiltInParameters::empty,
    0,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpEndPrimitive,
    false);

}  // namespace BuiltInFunction

void TSymbolTable::initializeBuiltInVariables(sh::GLenum shaderType,
                                              ShShaderSpec spec,
                                              const ShBuiltInResources &resources)
{
    const TSourceLoc zeroSourceLoc             = {0, 0, 0, 0};
    TFieldList *fields_gl_DepthRangeParameters = new TFieldList();
    fields_gl_DepthRangeParameters->push_back(new TField(
        new TType(EbtFloat, EbpHigh, EvqGlobal, 1, 1), BuiltInName::near, zeroSourceLoc));
    fields_gl_DepthRangeParameters->push_back(
        new TField(new TType(EbtFloat, EbpHigh, EvqGlobal, 1, 1), BuiltInName::far, zeroSourceLoc));
    fields_gl_DepthRangeParameters->push_back(new TField(
        new TType(EbtFloat, EbpHigh, EvqGlobal, 1, 1), BuiltInName::diff, zeroSourceLoc));
    TStructure *gl_DepthRangeParameters =
        new TStructure(BuiltInId::gl_DepthRangeParameters, BuiltInName::gl_DepthRangeParameters,
                       TExtension::UNDEFINED, fields_gl_DepthRangeParameters);
    mVar_gl_DepthRangeParameters = gl_DepthRangeParameters;
    TType *type_gl_DepthRange    = new TType(gl_DepthRangeParameters);
    type_gl_DepthRange->setQualifier(EvqUniform);
    type_gl_DepthRange->realize();
    mVar_gl_DepthRange =
        new TVariable(BuiltInId::gl_DepthRange, BuiltInName::gl_DepthRange, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, type_gl_DepthRange);
    mVar_gl_MaxVertexAttribs = new TVariable(
        BuiltInId::gl_MaxVertexAttribs, BuiltInName::gl_MaxVertexAttribs, SymbolType::BuiltIn,
        TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxVertexAttribs);
        mVar_gl_MaxVertexAttribs->shareConstPointer(unionArray);
    }
    mVar_gl_MaxVertexUniformVectors =
        new TVariable(BuiltInId::gl_MaxVertexUniformVectors,
                      BuiltInName::gl_MaxVertexUniformVectors, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxVertexUniformVectors);
        mVar_gl_MaxVertexUniformVectors->shareConstPointer(unionArray);
    }
    mVar_gl_MaxVertexTextureImageUnits =
        new TVariable(BuiltInId::gl_MaxVertexTextureImageUnits,
                      BuiltInName::gl_MaxVertexTextureImageUnits, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxVertexTextureImageUnits);
        mVar_gl_MaxVertexTextureImageUnits->shareConstPointer(unionArray);
    }
    mVar_gl_MaxCombinedTextureImageUnits =
        new TVariable(BuiltInId::gl_MaxCombinedTextureImageUnits,
                      BuiltInName::gl_MaxCombinedTextureImageUnits, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxCombinedTextureImageUnits);
        mVar_gl_MaxCombinedTextureImageUnits->shareConstPointer(unionArray);
    }
    mVar_gl_MaxTextureImageUnits =
        new TVariable(BuiltInId::gl_MaxTextureImageUnits, BuiltInName::gl_MaxTextureImageUnits,
                      SymbolType::BuiltIn, TExtension::UNDEFINED,
                      StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxTextureImageUnits);
        mVar_gl_MaxTextureImageUnits->shareConstPointer(unionArray);
    }
    mVar_gl_MaxFragmentUniformVectors =
        new TVariable(BuiltInId::gl_MaxFragmentUniformVectors,
                      BuiltInName::gl_MaxFragmentUniformVectors, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxFragmentUniformVectors);
        mVar_gl_MaxFragmentUniformVectors->shareConstPointer(unionArray);
    }
    mVar_gl_MaxVaryingVectors = new TVariable(
        BuiltInId::gl_MaxVaryingVectors, BuiltInName::gl_MaxVaryingVectors, SymbolType::BuiltIn,
        TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxVaryingVectors);
        mVar_gl_MaxVaryingVectors->shareConstPointer(unionArray);
    }
    mVar_gl_MaxDrawBuffers = new TVariable(
        BuiltInId::gl_MaxDrawBuffers, BuiltInName::gl_MaxDrawBuffers, SymbolType::BuiltIn,
        TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxDrawBuffers);
        mVar_gl_MaxDrawBuffers->shareConstPointer(unionArray);
    }
    mVar_gl_MaxDualSourceDrawBuffersEXT = new TVariable(
        BuiltInId::gl_MaxDualSourceDrawBuffersEXT, BuiltInName::gl_MaxDualSourceDrawBuffersEXT,
        SymbolType::BuiltIn, TExtension::EXT_blend_func_extended,
        StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxDualSourceDrawBuffers);
        mVar_gl_MaxDualSourceDrawBuffersEXT->shareConstPointer(unionArray);
    }
    mVar_gl_MaxVertexOutputVectors =
        new TVariable(BuiltInId::gl_MaxVertexOutputVectors, BuiltInName::gl_MaxVertexOutputVectors,
                      SymbolType::BuiltIn, TExtension::UNDEFINED,
                      StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxVertexOutputVectors);
        mVar_gl_MaxVertexOutputVectors->shareConstPointer(unionArray);
    }
    mVar_gl_MaxFragmentInputVectors =
        new TVariable(BuiltInId::gl_MaxFragmentInputVectors,
                      BuiltInName::gl_MaxFragmentInputVectors, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxFragmentInputVectors);
        mVar_gl_MaxFragmentInputVectors->shareConstPointer(unionArray);
    }
    mVar_gl_MinProgramTexelOffset =
        new TVariable(BuiltInId::gl_MinProgramTexelOffset, BuiltInName::gl_MinProgramTexelOffset,
                      SymbolType::BuiltIn, TExtension::UNDEFINED,
                      StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MinProgramTexelOffset);
        mVar_gl_MinProgramTexelOffset->shareConstPointer(unionArray);
    }
    mVar_gl_MaxProgramTexelOffset =
        new TVariable(BuiltInId::gl_MaxProgramTexelOffset, BuiltInName::gl_MaxProgramTexelOffset,
                      SymbolType::BuiltIn, TExtension::UNDEFINED,
                      StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxProgramTexelOffset);
        mVar_gl_MaxProgramTexelOffset->shareConstPointer(unionArray);
    }
    mVar_gl_MaxImageUnits = new TVariable(
        BuiltInId::gl_MaxImageUnits, BuiltInName::gl_MaxImageUnits, SymbolType::BuiltIn,
        TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxImageUnits);
        mVar_gl_MaxImageUnits->shareConstPointer(unionArray);
    }
    mVar_gl_MaxVertexImageUniforms =
        new TVariable(BuiltInId::gl_MaxVertexImageUniforms, BuiltInName::gl_MaxVertexImageUniforms,
                      SymbolType::BuiltIn, TExtension::UNDEFINED,
                      StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxVertexImageUniforms);
        mVar_gl_MaxVertexImageUniforms->shareConstPointer(unionArray);
    }
    mVar_gl_MaxFragmentImageUniforms =
        new TVariable(BuiltInId::gl_MaxFragmentImageUniforms,
                      BuiltInName::gl_MaxFragmentImageUniforms, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxFragmentImageUniforms);
        mVar_gl_MaxFragmentImageUniforms->shareConstPointer(unionArray);
    }
    mVar_gl_MaxComputeImageUniforms =
        new TVariable(BuiltInId::gl_MaxComputeImageUniforms,
                      BuiltInName::gl_MaxComputeImageUniforms, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxComputeImageUniforms);
        mVar_gl_MaxComputeImageUniforms->shareConstPointer(unionArray);
    }
    mVar_gl_MaxCombinedImageUniforms =
        new TVariable(BuiltInId::gl_MaxCombinedImageUniforms,
                      BuiltInName::gl_MaxCombinedImageUniforms, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxCombinedImageUniforms);
        mVar_gl_MaxCombinedImageUniforms->shareConstPointer(unionArray);
    }
    mVar_gl_MaxCombinedShaderOutputResources =
        new TVariable(BuiltInId::gl_MaxCombinedShaderOutputResources,
                      BuiltInName::gl_MaxCombinedShaderOutputResources, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxCombinedShaderOutputResources);
        mVar_gl_MaxCombinedShaderOutputResources->shareConstPointer(unionArray);
    }
    mVar_gl_MaxComputeWorkGroupCount =
        new TVariable(BuiltInId::gl_MaxComputeWorkGroupCount,
                      BuiltInName::gl_MaxComputeWorkGroupCount, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpHigh, EvqConst, 3, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[3];
        for (size_t index = 0u; index < 3; ++index)
        {
            unionArray[index].setIConst(resources.MaxComputeWorkGroupCount[index]);
        }
        mVar_gl_MaxComputeWorkGroupCount->shareConstPointer(unionArray);
    }
    mVar_gl_MaxComputeWorkGroupSize =
        new TVariable(BuiltInId::gl_MaxComputeWorkGroupSize,
                      BuiltInName::gl_MaxComputeWorkGroupSize, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpHigh, EvqConst, 3, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[3];
        for (size_t index = 0u; index < 3; ++index)
        {
            unionArray[index].setIConst(resources.MaxComputeWorkGroupSize[index]);
        }
        mVar_gl_MaxComputeWorkGroupSize->shareConstPointer(unionArray);
    }
    mVar_gl_MaxComputeUniformComponents =
        new TVariable(BuiltInId::gl_MaxComputeUniformComponents,
                      BuiltInName::gl_MaxComputeUniformComponents, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxComputeUniformComponents);
        mVar_gl_MaxComputeUniformComponents->shareConstPointer(unionArray);
    }
    mVar_gl_MaxComputeTextureImageUnits =
        new TVariable(BuiltInId::gl_MaxComputeTextureImageUnits,
                      BuiltInName::gl_MaxComputeTextureImageUnits, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxComputeTextureImageUnits);
        mVar_gl_MaxComputeTextureImageUnits->shareConstPointer(unionArray);
    }
    mVar_gl_MaxComputeAtomicCounters =
        new TVariable(BuiltInId::gl_MaxComputeAtomicCounters,
                      BuiltInName::gl_MaxComputeAtomicCounters, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxComputeAtomicCounters);
        mVar_gl_MaxComputeAtomicCounters->shareConstPointer(unionArray);
    }
    mVar_gl_MaxComputeAtomicCounterBuffers =
        new TVariable(BuiltInId::gl_MaxComputeAtomicCounterBuffers,
                      BuiltInName::gl_MaxComputeAtomicCounterBuffers, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxComputeAtomicCounterBuffers);
        mVar_gl_MaxComputeAtomicCounterBuffers->shareConstPointer(unionArray);
    }
    mVar_gl_MaxVertexAtomicCounters =
        new TVariable(BuiltInId::gl_MaxVertexAtomicCounters,
                      BuiltInName::gl_MaxVertexAtomicCounters, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxVertexAtomicCounters);
        mVar_gl_MaxVertexAtomicCounters->shareConstPointer(unionArray);
    }
    mVar_gl_MaxFragmentAtomicCounters =
        new TVariable(BuiltInId::gl_MaxFragmentAtomicCounters,
                      BuiltInName::gl_MaxFragmentAtomicCounters, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxFragmentAtomicCounters);
        mVar_gl_MaxFragmentAtomicCounters->shareConstPointer(unionArray);
    }
    mVar_gl_MaxCombinedAtomicCounters =
        new TVariable(BuiltInId::gl_MaxCombinedAtomicCounters,
                      BuiltInName::gl_MaxCombinedAtomicCounters, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxCombinedAtomicCounters);
        mVar_gl_MaxCombinedAtomicCounters->shareConstPointer(unionArray);
    }
    mVar_gl_MaxAtomicCounterBindings =
        new TVariable(BuiltInId::gl_MaxAtomicCounterBindings,
                      BuiltInName::gl_MaxAtomicCounterBindings, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxAtomicCounterBindings);
        mVar_gl_MaxAtomicCounterBindings->shareConstPointer(unionArray);
    }
    mVar_gl_MaxVertexAtomicCounterBuffers =
        new TVariable(BuiltInId::gl_MaxVertexAtomicCounterBuffers,
                      BuiltInName::gl_MaxVertexAtomicCounterBuffers, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxVertexAtomicCounterBuffers);
        mVar_gl_MaxVertexAtomicCounterBuffers->shareConstPointer(unionArray);
    }
    mVar_gl_MaxFragmentAtomicCounterBuffers =
        new TVariable(BuiltInId::gl_MaxFragmentAtomicCounterBuffers,
                      BuiltInName::gl_MaxFragmentAtomicCounterBuffers, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxFragmentAtomicCounterBuffers);
        mVar_gl_MaxFragmentAtomicCounterBuffers->shareConstPointer(unionArray);
    }
    mVar_gl_MaxCombinedAtomicCounterBuffers =
        new TVariable(BuiltInId::gl_MaxCombinedAtomicCounterBuffers,
                      BuiltInName::gl_MaxCombinedAtomicCounterBuffers, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxCombinedAtomicCounterBuffers);
        mVar_gl_MaxCombinedAtomicCounterBuffers->shareConstPointer(unionArray);
    }
    mVar_gl_MaxAtomicCounterBufferSize =
        new TVariable(BuiltInId::gl_MaxAtomicCounterBufferSize,
                      BuiltInName::gl_MaxAtomicCounterBufferSize, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxAtomicCounterBufferSize);
        mVar_gl_MaxAtomicCounterBufferSize->shareConstPointer(unionArray);
    }
    mVar_gl_MaxGeometryInputComponents = new TVariable(
        BuiltInId::gl_MaxGeometryInputComponents, BuiltInName::gl_MaxGeometryInputComponents,
        SymbolType::BuiltIn, TExtension::EXT_geometry_shader,
        StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxGeometryInputComponents);
        mVar_gl_MaxGeometryInputComponents->shareConstPointer(unionArray);
    }
    mVar_gl_MaxGeometryOutputComponents = new TVariable(
        BuiltInId::gl_MaxGeometryOutputComponents, BuiltInName::gl_MaxGeometryOutputComponents,
        SymbolType::BuiltIn, TExtension::EXT_geometry_shader,
        StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxGeometryOutputComponents);
        mVar_gl_MaxGeometryOutputComponents->shareConstPointer(unionArray);
    }
    mVar_gl_MaxGeometryImageUniforms = new TVariable(
        BuiltInId::gl_MaxGeometryImageUniforms, BuiltInName::gl_MaxGeometryImageUniforms,
        SymbolType::BuiltIn, TExtension::EXT_geometry_shader,
        StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxGeometryImageUniforms);
        mVar_gl_MaxGeometryImageUniforms->shareConstPointer(unionArray);
    }
    mVar_gl_MaxGeometryTextureImageUnits = new TVariable(
        BuiltInId::gl_MaxGeometryTextureImageUnits, BuiltInName::gl_MaxGeometryTextureImageUnits,
        SymbolType::BuiltIn, TExtension::EXT_geometry_shader,
        StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxGeometryTextureImageUnits);
        mVar_gl_MaxGeometryTextureImageUnits->shareConstPointer(unionArray);
    }
    mVar_gl_MaxGeometryOutputVertices = new TVariable(
        BuiltInId::gl_MaxGeometryOutputVertices, BuiltInName::gl_MaxGeometryOutputVertices,
        SymbolType::BuiltIn, TExtension::EXT_geometry_shader,
        StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxGeometryOutputVertices);
        mVar_gl_MaxGeometryOutputVertices->shareConstPointer(unionArray);
    }
    mVar_gl_MaxGeometryTotalOutputComponents = new TVariable(
        BuiltInId::gl_MaxGeometryTotalOutputComponents,
        BuiltInName::gl_MaxGeometryTotalOutputComponents, SymbolType::BuiltIn,
        TExtension::EXT_geometry_shader, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxGeometryTotalOutputComponents);
        mVar_gl_MaxGeometryTotalOutputComponents->shareConstPointer(unionArray);
    }
    mVar_gl_MaxGeometryUniformComponents = new TVariable(
        BuiltInId::gl_MaxGeometryUniformComponents, BuiltInName::gl_MaxGeometryUniformComponents,
        SymbolType::BuiltIn, TExtension::EXT_geometry_shader,
        StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxGeometryUniformComponents);
        mVar_gl_MaxGeometryUniformComponents->shareConstPointer(unionArray);
    }
    mVar_gl_MaxGeometryAtomicCounters = new TVariable(
        BuiltInId::gl_MaxGeometryAtomicCounters, BuiltInName::gl_MaxGeometryAtomicCounters,
        SymbolType::BuiltIn, TExtension::EXT_geometry_shader,
        StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxGeometryAtomicCounters);
        mVar_gl_MaxGeometryAtomicCounters->shareConstPointer(unionArray);
    }
    mVar_gl_MaxGeometryAtomicCounterBuffers = new TVariable(
        BuiltInId::gl_MaxGeometryAtomicCounterBuffers,
        BuiltInName::gl_MaxGeometryAtomicCounterBuffers, SymbolType::BuiltIn,
        TExtension::EXT_geometry_shader, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxGeometryAtomicCounterBuffers);
        mVar_gl_MaxGeometryAtomicCounterBuffers->shareConstPointer(unionArray);
    }
    if (shaderType == GL_FRAGMENT_SHADER)
    {
        TType *type_gl_FragData = new TType(EbtFloat, EbpMedium, EvqFragData, 4);
        if (spec != SH_WEBGL2_SPEC && spec != SH_WEBGL3_SPEC)
        {
            type_gl_FragData->makeArray(resources.MaxDrawBuffers);
        }
        else
        {
            type_gl_FragData->makeArray(1u);
        }
        type_gl_FragData->realize();
        mVar_gl_FragData =
            new TVariable(BuiltInId::gl_FragData, BuiltInName::gl_FragData, SymbolType::BuiltIn,
                          TExtension::UNDEFINED, type_gl_FragData);
    }
    if ((shaderType == GL_FRAGMENT_SHADER) && (mResources.EXT_blend_func_extended))
    {
        TType *type_gl_SecondaryFragDataEXT =
            new TType(EbtFloat, EbpMedium, EvqSecondaryFragDataEXT, 4, 1);
        type_gl_SecondaryFragDataEXT->makeArray(resources.MaxDualSourceDrawBuffers);
        type_gl_SecondaryFragDataEXT->realize();
        mVar_gl_SecondaryFragDataEXT = new TVariable(
            BuiltInId::gl_SecondaryFragDataEXT, BuiltInName::gl_SecondaryFragDataEXT,
            SymbolType::BuiltIn, TExtension::EXT_blend_func_extended, type_gl_SecondaryFragDataEXT);
    }
    if ((shaderType == GL_FRAGMENT_SHADER) && (mResources.EXT_frag_depth))
    {
        TType *type_gl_FragDepthEXT = new TType(
            EbtFloat, resources.FragmentPrecisionHigh ? EbpHigh : EbpMedium, EvqFragDepthEXT, 1);
        type_gl_FragDepthEXT->realize();
        mVar_gl_FragDepthEXT =
            new TVariable(BuiltInId::gl_FragDepthEXT, BuiltInName::gl_FragDepthEXT,
                          SymbolType::BuiltIn, TExtension::EXT_frag_depth, type_gl_FragDepthEXT);
    }
    TType *type_gl_LastFragData = new TType(EbtFloat, EbpMedium, EvqLastFragData, 4, 1);
    type_gl_LastFragData->makeArray(resources.MaxDrawBuffers);
    type_gl_LastFragData->realize();
    mVar_gl_LastFragData =
        new TVariable(BuiltInId::gl_LastFragData, BuiltInName::gl_LastFragData, SymbolType::BuiltIn,
                      TExtension::EXT_shader_framebuffer_fetch, type_gl_LastFragData);
    TType *type_gl_LastFragDataNV = new TType(EbtFloat, EbpMedium, EvqLastFragData, 4, 1);
    type_gl_LastFragDataNV->makeArray(resources.MaxDrawBuffers);
    type_gl_LastFragDataNV->realize();
    mVar_gl_LastFragDataNV = new TVariable(
        BuiltInId::gl_LastFragDataNV, BuiltInName::gl_LastFragData, SymbolType::BuiltIn,
        TExtension::NV_shader_framebuffer_fetch, type_gl_LastFragDataNV);
    TFieldList *fields_gl_PerVertex = new TFieldList();
    fields_gl_PerVertex->push_back(new TField(new TType(EbtFloat, EbpHigh, EvqPosition, 4, 1),
                                              BuiltInName::gl_Position, zeroSourceLoc));
    TInterfaceBlock *gl_PerVertex =
        new TInterfaceBlock(BuiltInId::gl_PerVertex, BuiltInName::gl_PerVertex,
                            TExtension::EXT_geometry_shader, fields_gl_PerVertex);
    mVar_gl_PerVertex = gl_PerVertex;
    if (shaderType == GL_GEOMETRY_SHADER_EXT)
    {
        TType *type_gl_in = new TType(gl_PerVertex, EvqPerVertexIn, TLayoutQualifier::Create());
        type_gl_in->makeArray(0u);
        type_gl_in->realize();
        mVar_gl_in = new TVariable(BuiltInId::gl_in, BuiltInName::gl_in, SymbolType::BuiltIn,
                                   TExtension::EXT_geometry_shader, type_gl_in);
    }
    TFieldList *fields_gl_PerVertexOutBlock = new TFieldList();
    fields_gl_PerVertexOutBlock->push_back(new TField(
        new TType(EbtFloat, EbpHigh, EvqPosition, 4, 1), BuiltInName::gl_Position, zeroSourceLoc));
    TInterfaceBlock *gl_PerVertexOutBlock =
        new TInterfaceBlock(BuiltInId::gl_PerVertexOutBlock, BuiltInName::gl_PerVertex,
                            TExtension::EXT_geometry_shader, fields_gl_PerVertexOutBlock);
    TType *type_gl_PositionGS = new TType(EbtFloat, EbpHigh, EvqPosition, 4);
    type_gl_PositionGS->setInterfaceBlock(gl_PerVertexOutBlock);
    type_gl_PositionGS->realize();
    mVar_gl_PositionGS =
        new TVariable(BuiltInId::gl_PositionGS, BuiltInName::gl_Position, SymbolType::BuiltIn,
                      TExtension::EXT_geometry_shader, type_gl_PositionGS);
}

const TSymbol *TSymbolTable::findBuiltIn(const ImmutableString &name, int shaderVersion) const
{
    if (name.length() > 35)
    {
        return nullptr;
    }
    uint32_t nameHash = name.mangledNameHash();
    if (shaderVersion >= 310)
    {
        switch (nameHash)
        {
            case 0x14a125a4u:
            {
                if (name.beginsWith(BuiltInName::ldexp))
                {
                    ASSERT(name.length() == 10);
                    return &BuiltInFunction::kFunction_ldexp_1B1C;
                }
                break;
            }
            case 0x14a1711cu:
            {
                if (name.beginsWith(BuiltInName::frexp))
                {
                    ASSERT(name.length() == 10);
                    return &BuiltInFunction::kFunction_frexp_2B2C;
                }
                break;
            }
            case 0x14a5788fu:
            {
                if (name.beginsWith(BuiltInName::ldexp))
                {
                    ASSERT(name.length() == 10);
                    return &BuiltInFunction::kFunction_ldexp_0B0C;
                }
                break;
            }
            case 0x14a7dfddu:
            {
                if (name.beginsWith(BuiltInName::frexp))
                {
                    ASSERT(name.length() == 10);
                    return &BuiltInFunction::kFunction_frexp_3B3C;
                }
                break;
            }
            case 0x14a941e1u:
            {
                if (name.beginsWith(BuiltInName::ldexp))
                {
                    ASSERT(name.length() == 10);
                    return &BuiltInFunction::kFunction_ldexp_2B2C;
                }
                break;
            }
            case 0x14aa386au:
            {
                if (name.beginsWith(BuiltInName::frexp))
                {
                    ASSERT(name.length() == 10);
                    return &BuiltInFunction::kFunction_frexp_1B1C;
                }
                break;
            }
            case 0x14af3af7u:
            {
                if (name.beginsWith(BuiltInName::frexp))
                {
                    ASSERT(name.length() == 10);
                    return &BuiltInFunction::kFunction_frexp_0B0C;
                }
                break;
            }
            case 0x14afab5au:
            {
                if (name.beginsWith(BuiltInName::ldexp))
                {
                    ASSERT(name.length() == 10);
                    return &BuiltInFunction::kFunction_ldexp_3B3C;
                }
                break;
            }
            case 0x1ca02eebu:
            {
                if (name.beginsWith(BuiltInName::findMSB))
                {
                    ASSERT(name.length() == 10);
                    return &BuiltInFunction::kFunction_findMSB_3C;
                }
                break;
            }
            case 0x1ca05552u:
            {
                if (name.beginsWith(BuiltInName::findMSB))
                {
                    ASSERT(name.length() == 10);
                    return &BuiltInFunction::kFunction_findMSB_3D;
                }
                break;
            }
            case 0x1ca12df2u:
            {
                if (name.beginsWith(BuiltInName::findMSB))
                {
                    ASSERT(name.length() == 10);
                    return &BuiltInFunction::kFunction_findMSB_0C;
                }
                break;
            }
            case 0x1ca13f87u:
            {
                if (name.beginsWith(BuiltInName::findMSB))
                {
                    ASSERT(name.length() == 10);
                    return &BuiltInFunction::kFunction_findMSB_0D;
                }
                break;
            }
            case 0x1ca32cc2u:
            {
                if (name.beginsWith(BuiltInName::findMSB))
                {
                    ASSERT(name.length() == 10);
                    return &BuiltInFunction::kFunction_findMSB_1C;
                }
                break;
            }
            case 0x1ca399c6u:
            {
                if (name.beginsWith(BuiltInName::findMSB))
                {
                    ASSERT(name.length() == 10);
                    return &BuiltInFunction::kFunction_findMSB_1D;
                }
                break;
            }
            case 0x1ca9155eu:
            {
                if (name.beginsWith(BuiltInName::findLSB))
                {
                    ASSERT(name.length() == 10);
                    return &BuiltInFunction::kFunction_findLSB_2C;
                }
                break;
            }
            case 0x1ca94816u:
            {
                if (name.beginsWith(BuiltInName::findLSB))
                {
                    ASSERT(name.length() == 10);
                    return &BuiltInFunction::kFunction_findLSB_2D;
                }
                break;
            }
            case 0x1caa1274u:
            {
                if (name.beginsWith(BuiltInName::findLSB))
                {
                    ASSERT(name.length() == 10);
                    return &BuiltInFunction::kFunction_findLSB_1C;
                }
                break;
            }
            case 0x1caa21e1u:
            {
                if (name.beginsWith(BuiltInName::findLSB))
                {
                    ASSERT(name.length() == 10);
                    return &BuiltInFunction::kFunction_findLSB_1D;
                }
                break;
            }
            case 0x1cac1124u:
            {
                if (name.beginsWith(BuiltInName::findLSB))
                {
                    ASSERT(name.length() == 10);
                    return &BuiltInFunction::kFunction_findLSB_0C;
                }
                break;
            }
            case 0x1cac8e20u:
            {
                if (name.beginsWith(BuiltInName::findLSB))
                {
                    ASSERT(name.length() == 10);
                    return &BuiltInFunction::kFunction_findLSB_0D;
                }
                break;
            }
            case 0x1cad7c7bu:
            {
                if (name.beginsWith(BuiltInName::findMSB))
                {
                    ASSERT(name.length() == 10);
                    return &BuiltInFunction::kFunction_findMSB_2D;
                }
                break;
            }
            case 0x1cada0b2u:
            {
                if (name.beginsWith(BuiltInName::findMSB))
                {
                    ASSERT(name.length() == 10);
                    return &BuiltInFunction::kFunction_findMSB_2C;
                }
                break;
            }
            case 0x1cae685au:
            {
                if (name.beginsWith(BuiltInName::findLSB))
                {
                    ASSERT(name.length() == 10);
                    return &BuiltInFunction::kFunction_findLSB_3D;
                }
                break;
            }
            case 0x1cae9c83u:
            {
                if (name.beginsWith(BuiltInName::findLSB))
                {
                    ASSERT(name.length() == 10);
                    return &BuiltInFunction::kFunction_findLSB_3C;
                }
                break;
            }
            case 0x20b0372du:
            {
                if (name.beginsWith(BuiltInName::bitCount))
                {
                    ASSERT(name.length() == 11);
                    return &BuiltInFunction::kFunction_bitCount_2D;
                }
                break;
            }
            case 0x20b08fccu:
            {
                if (name.beginsWith(BuiltInName::bitCount))
                {
                    ASSERT(name.length() == 11);
                    return &BuiltInFunction::kFunction_bitCount_2C;
                }
                break;
            }
            case 0x20b11d8bu:
            {
                if (name.beginsWith(BuiltInName::bitCount))
                {
                    ASSERT(name.length() == 11);
                    return &BuiltInFunction::kFunction_bitCount_1D;
                }
                break;
            }
            case 0x20b18889u:
            {
                if (name.beginsWith(BuiltInName::bitCount))
                {
                    ASSERT(name.length() == 11);
                    return &BuiltInFunction::kFunction_bitCount_1C;
                }
                break;
            }
            case 0x20b3783au:
            {
                if (name.beginsWith(BuiltInName::bitCount))
                {
                    ASSERT(name.length() == 11);
                    return &BuiltInFunction::kFunction_bitCount_0D;
                }
                break;
            }
            case 0x20b389afu:
            {
                if (name.beginsWith(BuiltInName::bitCount))
                {
                    ASSERT(name.length() == 11);
                    return &BuiltInFunction::kFunction_bitCount_0C;
                }
                break;
            }
            case 0x20b60bc0u:
            {
                if (name.beginsWith(BuiltInName::bitCount))
                {
                    ASSERT(name.length() == 11);
                    return &BuiltInFunction::kFunction_bitCount_3C;
                }
                break;
            }
            case 0x20b653e6u:
            {
                if (name.beginsWith(BuiltInName::bitCount))
                {
                    ASSERT(name.length() == 11);
                    return &BuiltInFunction::kFunction_bitCount_3D;
                }
                break;
            }
            case 0x20d440ddu:
            {
                if (name.beginsWith(BuiltInName::atomicOr))
                {
                    ASSERT(name.length() == 13);
                    return &BuiltInFunction::kFunction_atomicOr_0D0D;
                }
                break;
            }
            case 0x20d79994u:
            {
                if (name.beginsWith(BuiltInName::atomicOr))
                {
                    ASSERT(name.length() == 13);
                    return &BuiltInFunction::kFunction_atomicOr_0C0C;
                }
                break;
            }
            case 0x24cb34d4u:
            {
                if (name.beginsWith(BuiltInName::imageSize))
                {
                    ASSERT(name.length() == 12);
                    return &BuiltInFunction::kFunction_imageSize_0c;
                }
                break;
            }
            case 0x24cb7e98u:
            {
                if (name.beginsWith(BuiltInName::imageSize))
                {
                    ASSERT(name.length() == 12);
                    return &BuiltInFunction::kFunction_imageSize_0g;
                }
                break;
            }
            case 0x24cb8f2bu:
            {
                if (name.beginsWith(BuiltInName::imageSize))
                {
                    ASSERT(name.length() == 12);
                    return &BuiltInFunction::kFunction_imageSize_0f;
                }
                break;
            }
            case 0x24cb9d46u:
            {
                if (name.beginsWith(BuiltInName::imageSize))
                {
                    ASSERT(name.length() == 12);
                    return &BuiltInFunction::kFunction_imageSize_0e;
                }
                break;
            }
            case 0x24cba3d0u:
            {
                if (name.beginsWith(BuiltInName::imageSize))
                {
                    ASSERT(name.length() == 12);
                    return &BuiltInFunction::kFunction_imageSize_0d;
                }
                break;
            }
            case 0x24cbb06du:
            {
                if (name.beginsWith(BuiltInName::imageSize))
                {
                    ASSERT(name.length() == 12);
                    return &BuiltInFunction::kFunction_imageSize_0k;
                }
                break;
            }
            case 0x24cbc6feu:
            {
                if (name.beginsWith(BuiltInName::imageSize))
                {
                    ASSERT(name.length() == 12);
                    return &BuiltInFunction::kFunction_imageSize_0j;
                }
                break;
            }
            case 0x24cbd70bu:
            {
                if (name.beginsWith(BuiltInName::imageSize))
                {
                    ASSERT(name.length() == 12);
                    return &BuiltInFunction::kFunction_imageSize_0i;
                }
                break;
            }
            case 0x24cbe5a4u:
            {
                if (name.beginsWith(BuiltInName::imageSize))
                {
                    ASSERT(name.length() == 12);
                    return &BuiltInFunction::kFunction_imageSize_0h;
                }
                break;
            }
            case 0x24cc0842u:
            {
                if (name.beginsWith(BuiltInName::imageSize))
                {
                    ASSERT(name.length() == 12);
                    return &BuiltInFunction::kFunction_imageSize_0n;
                }
                break;
            }
            case 0x24cc1edfu:
            {
                if (name.beginsWith(BuiltInName::imageSize))
                {
                    ASSERT(name.length() == 12);
                    return &BuiltInFunction::kFunction_imageSize_0m;
                }
                break;
            }
            case 0x24cc2f68u:
            {
                if (name.beginsWith(BuiltInName::imageSize))
                {
                    ASSERT(name.length() == 12);
                    return &BuiltInFunction::kFunction_imageSize_0l;
                }
                break;
            }
            case 0x24e00501u:
            {
                if (name.beginsWith(BuiltInName::imageLoad))
                {
                    ASSERT(name.length() == 14);
                    return &BuiltInFunction::kFunction_imageLoad_0g2C;
                }
                break;
            }
            case 0x24e11051u:
            {
                if (name.beginsWith(BuiltInName::imageLoad))
                {
                    ASSERT(name.length() == 14);
                    return &BuiltInFunction::kFunction_imageLoad_0h2C;
                }
                break;
            }
            case 0x24e16ffdu:
            {
                if (name.beginsWith(BuiltInName::atomicXor))
                {
                    ASSERT(name.length() == 14);
                    return &BuiltInFunction::kFunction_atomicXor_0C0C;
                }
                break;
            }
            case 0x24e17d9bu:
            {
                if (name.beginsWith(BuiltInName::atomicAdd))
                {
                    ASSERT(name.length() == 14);
                    return &BuiltInFunction::kFunction_atomicAdd_0C0C;
                }
                break;
            }
            case 0x24e24455u:
            {
                if (name.beginsWith(BuiltInName::imageLoad))
                {
                    ASSERT(name.length() == 14);
                    return &BuiltInFunction::kFunction_imageLoad_0n2C;
                }
                break;
            }
            case 0x24e2806eu:
            {
                if (name.beginsWith(BuiltInName::imageLoad))
                {
                    ASSERT(name.length() == 14);
                    return &BuiltInFunction::kFunction_imageLoad_0j2C;
                }
                break;
            }
            case 0x24e2f67eu:
            {
                if (name.beginsWith(BuiltInName::atomicMin))
                {
                    ASSERT(name.length() == 14);
                    return &BuiltInFunction::kFunction_atomicMin_0C0C;
                }
                break;
            }
            case 0x24e48542u:
            {
                if (name.beginsWith(BuiltInName::atomicAdd))
                {
                    ASSERT(name.length() == 14);
                    return &BuiltInFunction::kFunction_atomicAdd_0D0D;
                }
                break;
            }
            case 0x24e6213eu:
            {
                if (name.beginsWith(BuiltInName::imageLoad))
                {
                    ASSERT(name.length() == 14);
                    return &BuiltInFunction::kFunction_imageLoad_0m2C;
                }
                break;
            }
            case 0x24e6cf12u:
            {
                if (name.beginsWith(BuiltInName::imageLoad))
                {
                    ASSERT(name.length() == 14);
                    return &BuiltInFunction::kFunction_imageLoad_0c1C;
                }
                break;
            }
            case 0x24e752d1u:
            {
                if (name == BuiltInName::imageLoad_0d1C)
                {
                    return &BuiltInFunction::kFunction_imageLoad_0d1C;
                }
                break;
            }
            case 0x24e7ac0cu:
            {
                if (name.beginsWith(BuiltInName::atomicMax))
                {
                    ASSERT(name.length() == 14);
                    return &BuiltInFunction::kFunction_atomicMax_0D0D;
                }
                break;
            }
            case 0x24e7d770u:
            {
                if (name.beginsWith(BuiltInName::atomicMin))
                {
                    ASSERT(name.length() == 14);
                    return &BuiltInFunction::kFunction_atomicMin_0D0D;
                }
                break;
            }
            case 0x24e8de55u:
            {
                if (name.beginsWith(BuiltInName::imageLoad))
                {
                    ASSERT(name.length() == 14);
                    return &BuiltInFunction::kFunction_imageLoad_0k2C;
                }
                break;
            }
            case 0x24e8f7afu:
            {
                if (name.beginsWith(BuiltInName::atomicAnd))
                {
                    ASSERT(name.length() == 14);
                    return &BuiltInFunction::kFunction_atomicAnd_0C0C;
                }
                break;
            }
            case 0x24e9aaedu:
            {
                if (name.beginsWith(BuiltInName::imageLoad))
                {
                    ASSERT(name.length() == 14);
                    return &BuiltInFunction::kFunction_imageLoad_0f2C;
                }
                break;
            }
            case 0x24ea7eeeu:
            {
                if (name.beginsWith(BuiltInName::imageLoad))
                {
                    ASSERT(name.length() == 14);
                    return &BuiltInFunction::kFunction_imageLoad_0i2C;
                }
                break;
            }
            case 0x24ea98bbu:
            {
                if (name.beginsWith(BuiltInName::imageLoad))
                {
                    ASSERT(name.length() == 14);
                    return &BuiltInFunction::kFunction_imageLoad_0e1C;
                }
                break;
            }
            case 0x24ec9041u:
            {
                if (name.beginsWith(BuiltInName::atomicAnd))
                {
                    ASSERT(name.length() == 14);
                    return &BuiltInFunction::kFunction_atomicAnd_0D0D;
                }
                break;
            }
            case 0x24ece2e2u:
            {
                if (name.beginsWith(BuiltInName::imageLoad))
                {
                    ASSERT(name.length() == 14);
                    return &BuiltInFunction::kFunction_imageLoad_0l2C;
                }
                break;
            }
            case 0x24ee0a8au:
            {
                if (name.beginsWith(BuiltInName::atomicXor))
                {
                    ASSERT(name.length() == 14);
                    return &BuiltInFunction::kFunction_atomicXor_0D0D;
                }
                break;
            }
            case 0x24ef375bu:
            {
                if (name.beginsWith(BuiltInName::atomicMax))
                {
                    ASSERT(name.length() == 14);
                    return &BuiltInFunction::kFunction_atomicMax_0C0C;
                }
                break;
            }
            case 0x25076120u:
            {
                if (name == BuiltInName::uaddCarry_0D0D0D)
                {
                    return &BuiltInFunction::kFunction_uaddCarry_0D0D0D;
                }
                break;
            }
            case 0x2508354bu:
            {
                if (name == BuiltInName::uaddCarry_2D2D2D)
                {
                    return &BuiltInFunction::kFunction_uaddCarry_2D2D2D;
                }
                break;
            }
            case 0x250850e3u:
            {
                if (name == BuiltInName::uaddCarry_3D3D3D)
                {
                    return &BuiltInFunction::kFunction_uaddCarry_3D3D3D;
                }
                break;
            }
            case 0x25086989u:
            {
                if (name == BuiltInName::uaddCarry_1D1D1D)
                {
                    return &BuiltInFunction::kFunction_uaddCarry_1D1D1D;
                }
                break;
            }
            case 0x29100bf8u:
            {
                if (name == BuiltInName::imageStore_0k2C3D)
                {
                    return &BuiltInFunction::kFunction_imageStore_0k2C3D;
                }
                break;
            }
            case 0x2911ee24u:
            {
                if (name == BuiltInName::usubBorrow_3D3D3D)
                {
                    return &BuiltInFunction::kFunction_usubBorrow_3D3D3D;
                }
                break;
            }
            case 0x2912da4du:
            {
                if (name == BuiltInName::usubBorrow_2D2D2D)
                {
                    return &BuiltInFunction::kFunction_usubBorrow_2D2D2D;
                }
                break;
            }
            case 0x2912ed46u:
            {
                if (name == BuiltInName::texelFetch_0O1C0C)
                {
                    return &BuiltInFunction::kFunction_texelFetch_0O1C0C;
                }
                break;
            }
            case 0x29156a3eu:
            {
                if (name == BuiltInName::usubBorrow_1D1D1D)
                {
                    return &BuiltInFunction::kFunction_usubBorrow_1D1D1D;
                }
                break;
            }
            case 0x2915bd8cu:
            {
                if (name == BuiltInName::imageStore_0d1C3C)
                {
                    return &BuiltInFunction::kFunction_imageStore_0d1C3C;
                }
                break;
            }
            case 0x29183d18u:
            {
                if (name == BuiltInName::texelFetch_0T1C0C)
                {
                    return &BuiltInFunction::kFunction_texelFetch_0T1C0C;
                }
                break;
            }
            case 0x29188a68u:
            {
                if (name == BuiltInName::imageStore_0f2C3B)
                {
                    return &BuiltInFunction::kFunction_imageStore_0f2C3B;
                }
                break;
            }
            case 0x291af7dcu:
            {
                if (name == BuiltInName::imageStore_0c1C3B)
                {
                    return &BuiltInFunction::kFunction_imageStore_0c1C3B;
                }
                break;
            }
            case 0x291b086bu:
            {
                if (name == BuiltInName::imageStore_0g2C3C)
                {
                    return &BuiltInFunction::kFunction_imageStore_0g2C3C;
                }
                break;
            }
            case 0x291ba62eu:
            {
                if (name == BuiltInName::imageStore_0l2C3B)
                {
                    return &BuiltInFunction::kFunction_imageStore_0l2C3B;
                }
                break;
            }
            case 0x291bb1d9u:
            {
                if (name == BuiltInName::texelFetch_0Y1C0C)
                {
                    return &BuiltInFunction::kFunction_texelFetch_0Y1C0C;
                }
                break;
            }
            case 0x291c4ce8u:
            {
                if (name == BuiltInName::imageStore_0m2C3C)
                {
                    return &BuiltInFunction::kFunction_imageStore_0m2C3C;
                }
                break;
            }
            case 0x291cf877u:
            {
                if (name == BuiltInName::imageStore_0j2C3C)
                {
                    return &BuiltInFunction::kFunction_imageStore_0j2C3C;
                }
                break;
            }
            case 0x291d8e34u:
            {
                if (name == BuiltInName::imageStore_0n2C3D)
                {
                    return &BuiltInFunction::kFunction_imageStore_0n2C3D;
                }
                break;
            }
            case 0x291e4ebau:
            {
                if (name == BuiltInName::imageStore_0e1C3D)
                {
                    return &BuiltInFunction::kFunction_imageStore_0e1C3D;
                }
                break;
            }
            case 0x291eef4cu:
            {
                if (name == BuiltInName::usubBorrow_0D0D0D)
                {
                    return &BuiltInFunction::kFunction_usubBorrow_0D0D0D;
                }
                break;
            }
            case 0x291f0ca5u:
            {
                if (name == BuiltInName::imageStore_0h2C3D)
                {
                    return &BuiltInFunction::kFunction_imageStore_0h2C3D;
                }
                break;
            }
            case 0x291fa1cau:
            {
                if (name == BuiltInName::imageStore_0i2C3B)
                {
                    return &BuiltInFunction::kFunction_imageStore_0i2C3B;
                }
                break;
            }
            case 0x30f6d757u:
            {
                if (name.beginsWith(BuiltInName::packSnorm4x8))
                {
                    ASSERT(name.length() == 15);
                    return &BuiltInFunction::kFunction_packSnorm4x8_3B;
                }
                break;
            }
            case 0x30f8217au:
            {
                if (name.beginsWith(BuiltInName::packUnorm4x8))
                {
                    ASSERT(name.length() == 15);
                    return &BuiltInFunction::kFunction_packUnorm4x8_3B;
                }
                break;
            }
            case 0x3150a6a9u:
            {
                if (name == BuiltInName::imulExtended_2C2C2C2C)
                {
                    return &BuiltInFunction::kFunction_imulExtended_2C2C2C2C;
                }
                break;
            }
            case 0x3152664bu:
            {
                if (name == BuiltInName::umulExtended_0D0D0D0D)
                {
                    return &BuiltInFunction::kFunction_umulExtended_0D0D0D0D;
                }
                break;
            }
            case 0x31528895u:
            {
                if (name == BuiltInName::umulExtended_3D3D3D3D)
                {
                    return &BuiltInFunction::kFunction_umulExtended_3D3D3D3D;
                }
                break;
            }
            case 0x3154dbceu:
            {
                if (name == BuiltInName::umulExtended_2D2D2D2D)
                {
                    return &BuiltInFunction::kFunction_umulExtended_2D2D2D2D;
                }
                break;
            }
            case 0x3156b43eu:
            {
                if (name == BuiltInName::umulExtended_1D1D1D1D)
                {
                    return &BuiltInFunction::kFunction_umulExtended_1D1D1D1D;
                }
                break;
            }
            case 0x31582937u:
            {
                if (name == BuiltInName::imulExtended_3C3C3C3C)
                {
                    return &BuiltInFunction::kFunction_imulExtended_3C3C3C3C;
                }
                break;
            }
            case 0x31584c20u:
            {
                if (name == BuiltInName::imulExtended_0C0C0C0C)
                {
                    return &BuiltInFunction::kFunction_imulExtended_0C0C0C0C;
                }
                break;
            }
            case 0x315ccad6u:
            {
                if (name == BuiltInName::imulExtended_1C1C1C1C)
                {
                    return &BuiltInFunction::kFunction_imulExtended_1C1C1C1C;
                }
                break;
            }
            case 0x34ea7717u:
            {
                if (name.beginsWith(BuiltInName::memoryBarrier))
                {
                    ASSERT(name.length() == 14);
                    return &BuiltInFunction::kFunction_memoryBarrier_;
                }
                break;
            }
            case 0x3500b5d6u:
            {
                if (name.beginsWith(BuiltInName::atomicCounter))
                {
                    ASSERT(name.length() == 16);
                    return &BuiltInFunction::kFunction_atomicCounter_0F;
                }
                break;
            }
            case 0x3520f548u:
            {
                if (name.beginsWith(BuiltInName::textureGather))
                {
                    ASSERT(name.length() == 18);
                    return &BuiltInFunction::kFunction_textureGather_0P1B;
                }
                break;
            }
            case 0x352183b6u:
            {
                if (name.beginsWith(BuiltInName::textureGather))
                {
                    ASSERT(name.length() == 18);
                    return &BuiltInFunction::kFunction_textureGather_0U1B;
                }
                break;
            }
            case 0x35257bf7u:
            {
                if (name.beginsWith(BuiltInName::textureGather))
                {
                    ASSERT(name.length() == 18);
                    return &BuiltInFunction::kFunction_textureGather_0H1B;
                }
                break;
            }
            case 0x3525e425u:
            {
                if (name.beginsWith(BuiltInName::textureGather))
                {
                    ASSERT(name.length() == 18);
                    return &BuiltInFunction::kFunction_textureGather_0a2B;
                }
                break;
            }
            case 0x352776c1u:
            {
                if (name.beginsWith(BuiltInName::textureGather))
                {
                    ASSERT(name.length() == 18);
                    return &BuiltInFunction::kFunction_textureGather_0X2B;
                }
                break;
            }
            case 0x3527b70eu:
            {
                if (name.beginsWith(BuiltInName::textureGather))
                {
                    ASSERT(name.length() == 18);
                    return &BuiltInFunction::kFunction_textureGather_0W2B;
                }
                break;
            }
            case 0x35280d85u:
            {
                if (name.beginsWith(BuiltInName::textureGather))
                {
                    ASSERT(name.length() == 18);
                    return &BuiltInFunction::kFunction_textureGather_0S2B;
                }
                break;
            }
            case 0x352889a7u:
            {
                if (name.beginsWith(BuiltInName::textureGather))
                {
                    ASSERT(name.length() == 18);
                    return &BuiltInFunction::kFunction_textureGather_0K2B;
                }
                break;
            }
            case 0x352c3259u:
            {
                if (name.beginsWith(BuiltInName::textureGather))
                {
                    ASSERT(name.length() == 18);
                    return &BuiltInFunction::kFunction_textureGather_0Z1B;
                }
                break;
            }
            case 0x352dc0eau:
            {
                if (name.beginsWith(BuiltInName::textureGather))
                {
                    ASSERT(name.length() == 18);
                    return &BuiltInFunction::kFunction_textureGather_0b2B;
                }
                break;
            }
            case 0x352e6efdu:
            {
                if (name.beginsWith(BuiltInName::textureGather))
                {
                    ASSERT(name.length() == 18);
                    return &BuiltInFunction::kFunction_textureGather_0R2B;
                }
                break;
            }
            case 0x352f0d8au:
            {
                if (name.beginsWith(BuiltInName::textureGather))
                {
                    ASSERT(name.length() == 18);
                    return &BuiltInFunction::kFunction_textureGather_0J2B;
                }
                break;
            }
            case 0x354047f2u:
            {
                if (name == BuiltInName::textureGather_0U1B0C)
                {
                    return &BuiltInFunction::kFunction_textureGather_0U1B0C;
                }
                break;
            }
            case 0x35412442u:
            {
                if (name == BuiltInName::textureGather_0P1B0C)
                {
                    return &BuiltInFunction::kFunction_textureGather_0P1B0C;
                }
                break;
            }
            case 0x35436214u:
            {
                if (name == BuiltInName::textureGather_0b2B0B)
                {
                    return &BuiltInFunction::kFunction_textureGather_0b2B0B;
                }
                break;
            }
            case 0x35436508u:
            {
                if (name == BuiltInName::textureGather_0X2B0C)
                {
                    return &BuiltInFunction::kFunction_textureGather_0X2B0C;
                }
                break;
            }
            case 0x3547e2f2u:
            {
                if (name == BuiltInName::textureGather_0S2B0C)
                {
                    return &BuiltInFunction::kFunction_textureGather_0S2B0C;
                }
                break;
            }
            case 0x3549192du:
            {
                if (name == BuiltInName::textureGather_0J2B0C)
                {
                    return &BuiltInFunction::kFunction_textureGather_0J2B0C;
                }
                break;
            }
            case 0x35498b6fu:
            {
                if (name == BuiltInName::textureGather_0H1B0C)
                {
                    return &BuiltInFunction::kFunction_textureGather_0H1B0C;
                }
                break;
            }
            case 0x354af264u:
            {
                if (name == BuiltInName::textureGather_0a2B0B)
                {
                    return &BuiltInFunction::kFunction_textureGather_0a2B0B;
                }
                break;
            }
            case 0x354b0049u:
            {
                if (name == BuiltInName::textureGather_0R2B0C)
                {
                    return &BuiltInFunction::kFunction_textureGather_0R2B0C;
                }
                break;
            }
            case 0x354bc853u:
            {
                if (name == BuiltInName::textureGather_0Z1B0B)
                {
                    return &BuiltInFunction::kFunction_textureGather_0Z1B0B;
                }
                break;
            }
            case 0x354d8e0fu:
            {
                if (name == BuiltInName::textureGather_0W2B0C)
                {
                    return &BuiltInFunction::kFunction_textureGather_0W2B0C;
                }
                break;
            }
            case 0x354f052bu:
            {
                if (name == BuiltInName::textureGather_0K2B0C)
                {
                    return &BuiltInFunction::kFunction_textureGather_0K2B0C;
                }
                break;
            }
            case 0x3912bd2du:
            {
                if (name.beginsWith(BuiltInName::unpackSnorm4x8))
                {
                    ASSERT(name.length() == 17);
                    return &BuiltInFunction::kFunction_unpackSnorm4x8_0D;
                }
                break;
            }
            case 0x3917e321u:
            {
                if (name.beginsWith(BuiltInName::unpackUnorm4x8))
                {
                    ASSERT(name.length() == 17);
                    return &BuiltInFunction::kFunction_unpackUnorm4x8_0D;
                }
                break;
            }
            case 0x39332d5cu:
            {
                if (name.beginsWith(BuiltInName::atomicExchange))
                {
                    ASSERT(name.length() == 19);
                    return &BuiltInFunction::kFunction_atomicExchange_0D0D;
                }
                break;
            }
            case 0x39368640u:
            {
                if (name.beginsWith(BuiltInName::atomicExchange))
                {
                    ASSERT(name.length() == 19);
                    return &BuiltInFunction::kFunction_atomicExchange_0C0C;
                }
                break;
            }
            case 0x3950f760u:
            {
                if (name == BuiltInName::atomicCompSwap_0C0C0C)
                {
                    return &BuiltInFunction::kFunction_atomicCompSwap_0C0C0C;
                }
                break;
            }
            case 0x39552df4u:
            {
                if (name == BuiltInName::atomicCompSwap_0D0D0D)
                {
                    return &BuiltInFunction::kFunction_atomicCompSwap_0D0D0D;
                }
                break;
            }
            case 0x3970aafcu:
            {
                if (name == BuiltInName::bitfieldInsert_3D3D0C0C)
                {
                    return &BuiltInFunction::kFunction_bitfieldInsert_3D3D0C0C;
                }
                break;
            }
            case 0x3971001fu:
            {
                if (name == BuiltInName::bitfieldInsert_3C3C0C0C)
                {
                    return &BuiltInFunction::kFunction_bitfieldInsert_3C3C0C0C;
                }
                break;
            }
            case 0x39722ea4u:
            {
                if (name == BuiltInName::bitfieldInsert_1C1C0C0C)
                {
                    return &BuiltInFunction::kFunction_bitfieldInsert_1C1C0C0C;
                }
                break;
            }
            case 0x3973d7eau:
            {
                if (name == BuiltInName::bitfieldInsert_1D1D0C0C)
                {
                    return &BuiltInFunction::kFunction_bitfieldInsert_1D1D0C0C;
                }
                break;
            }
            case 0x3976b0a6u:
            {
                if (name == BuiltInName::bitfieldInsert_0D0D0C0C)
                {
                    return &BuiltInFunction::kFunction_bitfieldInsert_0D0D0C0C;
                }
                break;
            }
            case 0x3977057au:
            {
                if (name == BuiltInName::bitfieldInsert_2D2D0C0C)
                {
                    return &BuiltInFunction::kFunction_bitfieldInsert_2D2D0C0C;
                }
                break;
            }
            case 0x397bc0a4u:
            {
                if (name == BuiltInName::bitfieldInsert_0C0C0C0C)
                {
                    return &BuiltInFunction::kFunction_bitfieldInsert_0C0C0C0C;
                }
                break;
            }
            case 0x397f475fu:
            {
                if (name == BuiltInName::bitfieldInsert_2C2C0C0C)
                {
                    return &BuiltInFunction::kFunction_bitfieldInsert_2C2C0C0C;
                }
                break;
            }
            case 0x3d20f7c7u:
            {
                if (name.beginsWith(BuiltInName::bitfieldReverse))
                {
                    ASSERT(name.length() == 18);
                    return &BuiltInFunction::kFunction_bitfieldReverse_3D;
                }
                break;
            }
            case 0x3d210852u:
            {
                if (name.beginsWith(BuiltInName::bitfieldReverse))
                {
                    ASSERT(name.length() == 18);
                    return &BuiltInFunction::kFunction_bitfieldReverse_3C;
                }
                break;
            }
            case 0x3d2386cdu:
            {
                if (name.beginsWith(BuiltInName::bitfieldReverse))
                {
                    ASSERT(name.length() == 18);
                    return &BuiltInFunction::kFunction_bitfieldReverse_0C;
                }
                break;
            }
            case 0x3d23deecu:
            {
                if (name.beginsWith(BuiltInName::bitfieldReverse))
                {
                    ASSERT(name.length() == 18);
                    return &BuiltInFunction::kFunction_bitfieldReverse_0D;
                }
                break;
            }
            case 0x3d2db471u:
            {
                if (name.beginsWith(BuiltInName::bitfieldReverse))
                {
                    ASSERT(name.length() == 18);
                    return &BuiltInFunction::kFunction_bitfieldReverse_1D;
                }
                break;
            }
            case 0x3d2e0c10u:
            {
                if (name.beginsWith(BuiltInName::bitfieldReverse))
                {
                    ASSERT(name.length() == 18);
                    return &BuiltInFunction::kFunction_bitfieldReverse_1C;
                }
                break;
            }
            case 0x3d2e9c06u:
            {
                if (name.beginsWith(BuiltInName::bitfieldReverse))
                {
                    ASSERT(name.length() == 18);
                    return &BuiltInFunction::kFunction_bitfieldReverse_2D;
                }
                break;
            }
            case 0x3d2f0702u:
            {
                if (name.beginsWith(BuiltInName::bitfieldReverse))
                {
                    ASSERT(name.length() == 18);
                    return &BuiltInFunction::kFunction_bitfieldReverse_2C;
                }
                break;
            }
            case 0x3d61b403u:
            {
                if (name == BuiltInName::bitfieldExtract_2C0C0C)
                {
                    return &BuiltInFunction::kFunction_bitfieldExtract_2C0C0C;
                }
                break;
            }
            case 0x3d61e101u:
            {
                if (name == BuiltInName::bitfieldExtract_0D0C0C)
                {
                    return &BuiltInFunction::kFunction_bitfieldExtract_0D0C0C;
                }
                break;
            }
            case 0x3d62667bu:
            {
                if (name == BuiltInName::bitfieldExtract_3D0C0C)
                {
                    return &BuiltInFunction::kFunction_bitfieldExtract_3D0C0C;
                }
                break;
            }
            case 0x3d62ca0du:
            {
                if (name == BuiltInName::bitfieldExtract_0C0C0C)
                {
                    return &BuiltInFunction::kFunction_bitfieldExtract_0C0C0C;
                }
                break;
            }
            case 0x3d62ec45u:
            {
                if (name == BuiltInName::bitfieldExtract_3C0C0C)
                {
                    return &BuiltInFunction::kFunction_bitfieldExtract_3C0C0C;
                }
                break;
            }
            case 0x3d630b44u:
            {
                if (name == BuiltInName::bitfieldExtract_1C0C0C)
                {
                    return &BuiltInFunction::kFunction_bitfieldExtract_1C0C0C;
                }
                break;
            }
            case 0x3d650769u:
            {
                if (name == BuiltInName::bitfieldExtract_2D0C0C)
                {
                    return &BuiltInFunction::kFunction_bitfieldExtract_2D0C0C;
                }
                break;
            }
            case 0x3d6bea76u:
            {
                if (name == BuiltInName::bitfieldExtract_1D0C0C)
                {
                    return &BuiltInFunction::kFunction_bitfieldExtract_1D0C0C;
                }
                break;
            }
            case 0x493cdf59u:
            {
                if (name.beginsWith(BuiltInName::memoryBarrierImage))
                {
                    ASSERT(name.length() == 19);
                    return &BuiltInFunction::kFunction_memoryBarrierImage_;
                }
                break;
            }
            case 0x4d4ffc7cu:
            {
                if (name.beginsWith(BuiltInName::memoryBarrierBuffer))
                {
                    ASSERT(name.length() == 20);
                    return &BuiltInFunction::kFunction_memoryBarrierBuffer_;
                }
                break;
            }
            case 0x4da38e3eu:
            {
                if (name == BuiltInName::textureGatherOffset_0P1B1C)
                {
                    return &BuiltInFunction::kFunction_textureGatherOffset_0P1B1C;
                }
                break;
            }
            case 0x4da3f983u:
            {
                if (name == BuiltInName::textureGatherOffset_0K2B1C)
                {
                    return &BuiltInFunction::kFunction_textureGatherOffset_0K2B1C;
                }
                break;
            }
            case 0x4da50052u:
            {
                if (name == BuiltInName::textureGatherOffset_0S2B1C)
                {
                    return &BuiltInFunction::kFunction_textureGatherOffset_0S2B1C;
                }
                break;
            }
            case 0x4dae37ebu:
            {
                if (name == BuiltInName::textureGatherOffset_0X2B1C)
                {
                    return &BuiltInFunction::kFunction_textureGatherOffset_0X2B1C;
                }
                break;
            }
            case 0x4dae3f95u:
            {
                if (name == BuiltInName::textureGatherOffset_0H1B1C)
                {
                    return &BuiltInFunction::kFunction_textureGatherOffset_0H1B1C;
                }
                break;
            }
            case 0x4daf95ffu:
            {
                if (name == BuiltInName::textureGatherOffset_0U1B1C)
                {
                    return &BuiltInFunction::kFunction_textureGatherOffset_0U1B1C;
                }
                break;
            }
            case 0x4dc0120bu:
            {
                if (name == BuiltInName::textureGatherOffset_0S2B1C0C)
                {
                    return &BuiltInFunction::kFunction_textureGatherOffset_0S2B1C0C;
                }
                break;
            }
            case 0x4dc38636u:
            {
                if (name == BuiltInName::textureGatherOffset_0X2B1C0C)
                {
                    return &BuiltInFunction::kFunction_textureGatherOffset_0X2B1C0C;
                }
                break;
            }
            case 0x4dc59589u:
            {
                if (name == BuiltInName::textureGatherOffset_0U1B1C0C)
                {
                    return &BuiltInFunction::kFunction_textureGatherOffset_0U1B1C0C;
                }
                break;
            }
            case 0x4dc89c91u:
            {
                if (name == BuiltInName::textureGatherOffset_0K2B1C0C)
                {
                    return &BuiltInFunction::kFunction_textureGatherOffset_0K2B1C0C;
                }
                break;
            }
            case 0x4dc8f1feu:
            {
                if (name == BuiltInName::textureGatherOffset_0H1B1C0C)
                {
                    return &BuiltInFunction::kFunction_textureGatherOffset_0H1B1C0C;
                }
                break;
            }
            case 0x4dcb06fcu:
            {
                if (name == BuiltInName::textureGatherOffset_0Z1B0B1C)
                {
                    return &BuiltInFunction::kFunction_textureGatherOffset_0Z1B0B1C;
                }
                break;
            }
            case 0x4dcb704cu:
            {
                if (name == BuiltInName::textureGatherOffset_0P1B1C0C)
                {
                    return &BuiltInFunction::kFunction_textureGatherOffset_0P1B1C0C;
                }
                break;
            }
            case 0x4dcd2cb2u:
            {
                if (name == BuiltInName::textureGatherOffset_0b2B0B1C)
                {
                    return &BuiltInFunction::kFunction_textureGatherOffset_0b2B0B1C;
                }
                break;
            }
            case 0x599f07cfu:
            {
                if (name.beginsWith(BuiltInName::atomicCounterIncrement))
                {
                    ASSERT(name.length() == 25);
                    return &BuiltInFunction::kFunction_atomicCounterIncrement_0F;
                }
                break;
            }
            case 0x599f5c0eu:
            {
                if (name.beginsWith(BuiltInName::atomicCounterDecrement))
                {
                    ASSERT(name.length() == 25);
                    return &BuiltInFunction::kFunction_atomicCounterDecrement_0F;
                }
                break;
            }
            case 0x69bd8347u:
            {
                if (name.beginsWith(BuiltInName::memoryBarrierAtomicCounter))
                {
                    ASSERT(name.length() == 27);
                    return &BuiltInFunction::kFunction_memoryBarrierAtomicCounter_;
                }
                break;
            }
            case 0xfc57d894u:
            {
                if (name == BuiltInName::gl_in)
                {
                    // Only initialized if shaderType == GL_GEOMETRY_SHADER_EXT
                    return mVar_gl_in;
                }
                break;
            }
            case 0xfd02c057u:
            {
                if (name == BuiltInName::gl_MaxImageUnits)
                {
                    return mVar_gl_MaxImageUnits;
                }
                break;
            }
            case 0xfd9ea0aeu:
            {
                if (name == BuiltInName::gl_MaxVertexImageUniforms)
                {
                    return mVar_gl_MaxVertexImageUniforms;
                }
                break;
            }
            case 0xfda4cb4eu:
            {
                if (name == BuiltInName::gl_MaxVertexAtomicCounters)
                {
                    return mVar_gl_MaxVertexAtomicCounters;
                }
                break;
            }
            case 0xfda554a5u:
            {
                if (name == BuiltInName::gl_MaxComputeImageUniforms)
                {
                    return mVar_gl_MaxComputeImageUniforms;
                }
                break;
            }
            case 0xfdaec53cu:
            {
                if (name == BuiltInName::gl_MaxComputeWorkGroupSize)
                {
                    return mVar_gl_MaxComputeWorkGroupSize;
                }
                break;
            }
            case 0xfdb37edfu:
            {
                if (name == BuiltInName::gl_MaxCombinedImageUniforms)
                {
                    return mVar_gl_MaxCombinedImageUniforms;
                }
                break;
            }
            case 0xfdb3d624u:
            {
                if (name == BuiltInName::gl_MaxGeometryImageUniforms)
                {
                    return mVar_gl_MaxGeometryImageUniforms;
                }
                break;
            }
            case 0xfdb5a5efu:
            {
                if (name == BuiltInName::gl_MaxAtomicCounterBindings)
                {
                    return mVar_gl_MaxAtomicCounterBindings;
                }
                break;
            }
            case 0xfdbc3a77u:
            {
                if (name == BuiltInName::gl_MaxComputeAtomicCounters)
                {
                    return mVar_gl_MaxComputeAtomicCounters;
                }
                break;
            }
            case 0xfdbd5365u:
            {
                if (name == BuiltInName::gl_MaxComputeWorkGroupCount)
                {
                    return mVar_gl_MaxComputeWorkGroupCount;
                }
                break;
            }
            case 0xfdbe9e66u:
            {
                if (name == BuiltInName::gl_MaxFragmentImageUniforms)
                {
                    return mVar_gl_MaxFragmentImageUniforms;
                }
                break;
            }
            case 0xfdc36735u:
            {
                if (name == BuiltInName::gl_MaxGeometryOutputVertices)
                {
                    return mVar_gl_MaxGeometryOutputVertices;
                }
                break;
            }
            case 0xfdc4585cu:
            {
                if (name == BuiltInName::gl_MaxFragmentAtomicCounters)
                {
                    return mVar_gl_MaxFragmentAtomicCounters;
                }
                break;
            }
            case 0xfdc82d47u:
            {
                if (name == BuiltInName::gl_MaxCombinedAtomicCounters)
                {
                    return mVar_gl_MaxCombinedAtomicCounters;
                }
                break;
            }
            case 0xfdcd9e6eu:
            {
                if (name == BuiltInName::gl_MaxGeometryAtomicCounters)
                {
                    return mVar_gl_MaxGeometryAtomicCounters;
                }
                break;
            }
            case 0xfdd850b4u:
            {
                if (name == BuiltInName::gl_MaxGeometryInputComponents)
                {
                    return mVar_gl_MaxGeometryInputComponents;
                }
                break;
            }
            case 0xfdd980a0u:
            {
                if (name == BuiltInName::gl_MaxAtomicCounterBufferSize)
                {
                    return mVar_gl_MaxAtomicCounterBufferSize;
                }
                break;
            }
            case 0xfde022f8u:
            {
                if (name == BuiltInName::gl_MaxComputeTextureImageUnits)
                {
                    return mVar_gl_MaxComputeTextureImageUnits;
                }
                break;
            }
            case 0xfde6c67fu:
            {
                if (name == BuiltInName::gl_MaxComputeUniformComponents)
                {
                    return mVar_gl_MaxComputeUniformComponents;
                }
                break;
            }
            case 0xfded2f56u:
            {
                if (name == BuiltInName::gl_MaxGeometryOutputComponents)
                {
                    return mVar_gl_MaxGeometryOutputComponents;
                }
                break;
            }
            case 0xfdf3607cu:
            {
                if (name == BuiltInName::gl_MaxGeometryTextureImageUnits)
                {
                    return mVar_gl_MaxGeometryTextureImageUnits;
                }
                break;
            }
            case 0xfdfc01c8u:
            {
                if (name == BuiltInName::gl_MaxGeometryUniformComponents)
                {
                    return mVar_gl_MaxGeometryUniformComponents;
                }
                break;
            }
            case 0xfe01078bu:
            {
                if (name == BuiltInName::gl_MaxVertexAtomicCounterBuffers)
                {
                    return mVar_gl_MaxVertexAtomicCounterBuffers;
                }
                break;
            }
            case 0xfe1ac97cu:
            {
                if (name == BuiltInName::gl_MaxComputeAtomicCounterBuffers)
                {
                    return mVar_gl_MaxComputeAtomicCounterBuffers;
                }
                break;
            }
            case 0xfe23d724u:
            {
                if (name == BuiltInName::gl_MaxCombinedAtomicCounterBuffers)
                {
                    return mVar_gl_MaxCombinedAtomicCounterBuffers;
                }
                break;
            }
            case 0xfe2e3022u:
            {
                if (name == BuiltInName::gl_MaxGeometryAtomicCounterBuffers)
                {
                    return mVar_gl_MaxGeometryAtomicCounterBuffers;
                }
                break;
            }
            case 0xfe2f6e03u:
            {
                if (name == BuiltInName::gl_MaxFragmentAtomicCounterBuffers)
                {
                    return mVar_gl_MaxFragmentAtomicCounterBuffers;
                }
                break;
            }
            case 0xfe38d36fu:
            {
                if (name == BuiltInName::gl_MaxCombinedShaderOutputResources)
                {
                    return mVar_gl_MaxCombinedShaderOutputResources;
                }
                break;
            }
            case 0xfe399b59u:
            {
                if (name == BuiltInName::gl_MaxGeometryTotalOutputComponents)
                {
                    return mVar_gl_MaxGeometryTotalOutputComponents;
                }
                break;
            }
        }
        if (mShaderType == GL_COMPUTE_SHADER)
        {
            switch (nameHash)
            {
                case 0x1c8349e8u:
                {
                    if (name.beginsWith(BuiltInName::barrier))
                    {
                        ASSERT(name.length() == 8);
                        return &BuiltInFunction::kFunction_barrier_;
                    }
                    break;
                }
                case 0x493df1afu:
                {
                    if (name.beginsWith(BuiltInName::groupMemoryBarrier))
                    {
                        ASSERT(name.length() == 19);
                        return &BuiltInFunction::kFunction_groupMemoryBarrier_;
                    }
                    break;
                }
                case 0x4d49a5a0u:
                {
                    if (name.beginsWith(BuiltInName::memoryBarrierShared))
                    {
                        ASSERT(name.length() == 20);
                        return &BuiltInFunction::kFunction_memoryBarrierShared_;
                    }
                    break;
                }
                case 0xfce6f9f9u:
                {
                    if (name == BuiltInName::gl_WorkGroupID)
                    {
                        return &BuiltInVariable::kVar_gl_WorkGroupID;
                    }
                    break;
                }
                case 0xfd012f8fu:
                {
                    if (name == BuiltInName::gl_WorkGroupSize)
                    {
                        return &BuiltInVariable::kVar_gl_WorkGroupSize;
                    }
                    break;
                }
                case 0xfd056470u:
                {
                    if (name == BuiltInName::gl_NumWorkGroups)
                    {
                        return &BuiltInVariable::kVar_gl_NumWorkGroups;
                    }
                    break;
                }
                case 0xfd44b7fdu:
                {
                    if (name == BuiltInName::gl_LocalInvocationID)
                    {
                        return &BuiltInVariable::kVar_gl_LocalInvocationID;
                    }
                    break;
                }
                case 0xfd5a3d85u:
                {
                    if (name == BuiltInName::gl_GlobalInvocationID)
                    {
                        return &BuiltInVariable::kVar_gl_GlobalInvocationID;
                    }
                    break;
                }
                case 0xfd79936fu:
                {
                    if (name == BuiltInName::gl_LocalInvocationIndex)
                    {
                        return &BuiltInVariable::kVar_gl_LocalInvocationIndex;
                    }
                    break;
                }
            }
        }
        if (mShaderType == GL_GEOMETRY_SHADER_EXT)
        {
            switch (nameHash)
            {
                case 0x28bab062u:
                {
                    if (name.beginsWith(BuiltInName::EmitVertex))
                    {
                        ASSERT(name.length() == 11);
                        return &BuiltInFunction::kFunction_EmitVertex_;
                    }
                    break;
                }
                case 0x30dfadf2u:
                {
                    if (name.beginsWith(BuiltInName::EndPrimitive))
                    {
                        ASSERT(name.length() == 13);
                        return &BuiltInFunction::kFunction_EndPrimitive_;
                    }
                    break;
                }
                case 0xfc802b2du:
                {
                    if (name == BuiltInName::gl_Layer)
                    {
                        return &BuiltInVariable::kVar_gl_LayerGS;
                    }
                    break;
                }
                case 0xfcb021abu:
                {
                    if (name == BuiltInName::gl_Position)
                    {
                        return mVar_gl_PositionGS;
                    }
                    break;
                }
                case 0xfcce2be4u:
                {
                    if (name == BuiltInName::gl_PerVertex)
                    {
                        return mVar_gl_PerVertex;
                    }
                    break;
                }
                case 0xfce8624au:
                {
                    if (name == BuiltInName::gl_PrimitiveID)
                    {
                        return &BuiltInVariable::kVar_gl_PrimitiveIDGS;
                    }
                    break;
                }
                case 0xfcffc55cu:
                {
                    if (name == BuiltInName::gl_InvocationID)
                    {
                        return &BuiltInVariable::kVar_gl_InvocationID;
                    }
                    break;
                }
                case 0xfd0c9b3bu:
                {
                    if (name == BuiltInName::gl_PrimitiveIDIn)
                    {
                        return &BuiltInVariable::kVar_gl_PrimitiveIDIn;
                    }
                    break;
                }
            }
        }
        if ((mShaderType == GL_FRAGMENT_SHADER) && (mResources.EXT_geometry_shader))
        {
            switch (nameHash)
            {
                case 0xfc802b2du:
                {
                    if (name == BuiltInName::gl_Layer)
                    {
                        return &BuiltInVariable::kVar_gl_Layer;
                    }
                    break;
                }
                case 0xfce8624au:
                {
                    if (name == BuiltInName::gl_PrimitiveID)
                    {
                        return &BuiltInVariable::kVar_gl_PrimitiveID;
                    }
                    break;
                }
            }
        }
    }
    if (shaderVersion >= 300)
    {
        switch (nameHash)
        {
            case 0x0c610961u:
            {
                if (name.beginsWith(BuiltInName::abs))
                {
                    ASSERT(name.length() == 6);
                    return &BuiltInFunction::kFunction_abs_0C;
                }
                break;
            }
            case 0x0c638c06u:
            {
                if (name.beginsWith(BuiltInName::abs))
                {
                    ASSERT(name.length() == 6);
                    return &BuiltInFunction::kFunction_abs_3C;
                }
                break;
            }
            case 0x0c6e080au:
            {
                if (name.beginsWith(BuiltInName::abs))
                {
                    ASSERT(name.length() == 6);
                    return &BuiltInFunction::kFunction_abs_2C;
                }
                break;
            }
            case 0x0c6f0a53u:
            {
                if (name.beginsWith(BuiltInName::abs))
                {
                    ASSERT(name.length() == 6);
                    return &BuiltInFunction::kFunction_abs_1C;
                }
                break;
            }
            case 0x0c813da4u:
            {
                if (name.beginsWith(BuiltInName::min))
                {
                    ASSERT(name.length() == 8);
                    return &BuiltInFunction::kFunction_min_2D0D;
                }
                break;
            }
            case 0x0c81f92eu:
            {
                if (name.beginsWith(BuiltInName::max))
                {
                    ASSERT(name.length() == 8);
                    return &BuiltInFunction::kFunction_max_1C0C;
                }
                break;
            }
            case 0x0c840c87u:
            {
                if (name.beginsWith(BuiltInName::min))
                {
                    ASSERT(name.length() == 8);
                    return &BuiltInFunction::kFunction_min_0D0D;
                }
                break;
            }
            case 0x0c8470b5u:
            {
                if (name.beginsWith(BuiltInName::min))
                {
                    ASSERT(name.length() == 8);
                    return &BuiltInFunction::kFunction_min_2D2D;
                }
                break;
            }
            case 0x0c84903fu:
            {
                if (name.beginsWith(BuiltInName::min))
                {
                    ASSERT(name.length() == 8);
                    return &BuiltInFunction::kFunction_min_3C0C;
                }
                break;
            }
            case 0x0c849cbeu:
            {
                if (name.beginsWith(BuiltInName::min))
                {
                    ASSERT(name.length() == 8);
                    return &BuiltInFunction::kFunction_min_2C0C;
                }
                break;
            }
            case 0x0c850224u:
            {
                if (name.beginsWith(BuiltInName::max))
                {
                    ASSERT(name.length() == 8);
                    return &BuiltInFunction::kFunction_max_2D2D;
                }
                break;
            }
            case 0x0c8536c3u:
            {
                if (name.beginsWith(BuiltInName::max))
                {
                    ASSERT(name.length() == 8);
                    return &BuiltInFunction::kFunction_max_2C0C;
                }
                break;
            }
            case 0x0c85921fu:
            {
                if (name.beginsWith(BuiltInName::max))
                {
                    ASSERT(name.length() == 8);
                    return &BuiltInFunction::kFunction_max_3D3D;
                }
                break;
            }
            case 0x0c859e3eu:
            {
                if (name.beginsWith(BuiltInName::min))
                {
                    ASSERT(name.length() == 8);
                    return &BuiltInFunction::kFunction_min_3C3C;
                }
                break;
            }
            case 0x0c86138du:
            {
                if (name.beginsWith(BuiltInName::min))
                {
                    ASSERT(name.length() == 8);
                    return &BuiltInFunction::kFunction_min_3D3D;
                }
                break;
            }
            case 0x0c86f921u:
            {
                if (name.beginsWith(BuiltInName::min))
                {
                    ASSERT(name.length() == 8);
                    return &BuiltInFunction::kFunction_min_1D0D;
                }
                break;
            }
            case 0x0c87fdd9u:
            {
                if (name.beginsWith(BuiltInName::min))
                {
                    ASSERT(name.length() == 8);
                    return &BuiltInFunction::kFunction_min_3D0D;
                }
                break;
            }
            case 0x0c880c7au:
            {
                if (name.beginsWith(BuiltInName::min))
                {
                    ASSERT(name.length() == 8);
                    return &BuiltInFunction::kFunction_min_1C1C;
                }
                break;
            }
            case 0x0c88171cu:
            {
                if (name.beginsWith(BuiltInName::min))
                {
                    ASSERT(name.length() == 8);
                    return &BuiltInFunction::kFunction_min_2C2C;
                }
                break;
            }
            case 0x0c884c7au:
            {
                if (name.beginsWith(BuiltInName::max))
                {
                    ASSERT(name.length() == 8);
                    return &BuiltInFunction::kFunction_max_2D0D;
                }
                break;
            }
            case 0x0c8912a9u:
            {
                if (name.beginsWith(BuiltInName::max))
                {
                    ASSERT(name.length() == 8);
                    return &BuiltInFunction::kFunction_max_3C3C;
                }
                break;
            }
            case 0x0c895321u:
            {
                if (name.beginsWith(BuiltInName::min))
                {
                    ASSERT(name.length() == 8);
                    return &BuiltInFunction::kFunction_min_1D1D;
                }
                break;
            }
            case 0x0c89b596u:
            {
                if (name.beginsWith(BuiltInName::max))
                {
                    ASSERT(name.length() == 8);
                    return &BuiltInFunction::kFunction_max_2C2C;
                }
                break;
            }
            case 0x0c8a0c9au:
            {
                if (name.beginsWith(BuiltInName::min))
                {
                    ASSERT(name.length() == 8);
                    return &BuiltInFunction::kFunction_min_1C0C;
                }
                break;
            }
            case 0x0c8a492cu:
            {
                if (name.beginsWith(BuiltInName::max))
                {
                    ASSERT(name.length() == 8);
                    return &BuiltInFunction::kFunction_max_1D0D;
                }
                break;
            }
            case 0x0c8aaf96u:
            {
                if (name.beginsWith(BuiltInName::max))
                {
                    ASSERT(name.length() == 8);
                    return &BuiltInFunction::kFunction_max_0C0C;
                }
                break;
            }
            case 0x0c8bd2a5u:
            {
                if (name.beginsWith(BuiltInName::min))
                {
                    ASSERT(name.length() == 8);
                    return &BuiltInFunction::kFunction_min_0C0C;
                }
                break;
            }
            case 0x0c8c2b46u:
            {
                if (name.beginsWith(BuiltInName::max))
                {
                    ASSERT(name.length() == 8);
                    return &BuiltInFunction::kFunction_max_1D1D;
                }
                break;
            }
            case 0x0c8e4658u:
            {
                if (name.beginsWith(BuiltInName::max))
                {
                    ASSERT(name.length() == 8);
                    return &BuiltInFunction::kFunction_max_0D0D;
                }
                break;
            }
            case 0x0c8e71adu:
            {
                if (name.beginsWith(BuiltInName::max))
                {
                    ASSERT(name.length() == 8);
                    return &BuiltInFunction::kFunction_max_3D0D;
                }
                break;
            }
            case 0x0c8e9eabu:
            {
                if (name.beginsWith(BuiltInName::max))
                {
                    ASSERT(name.length() == 8);
                    return &BuiltInFunction::kFunction_max_3C0C;
                }
                break;
            }
            case 0x0c8f6447u:
            {
                if (name.beginsWith(BuiltInName::max))
                {
                    ASSERT(name.length() == 8);
                    return &BuiltInFunction::kFunction_max_1C1C;
                }
                break;
            }
            case 0x0ca9587fu:
            {
                if (name == BuiltInName::mix_2B2B2E)
                {
                    return &BuiltInFunction::kFunction_mix_2B2B2E;
                }
                break;
            }
            case 0x0cab6df1u:
            {
                if (name == BuiltInName::mix_0B0B0E)
                {
                    return &BuiltInFunction::kFunction_mix_0B0B0E;
                }
                break;
            }
            case 0x0cacc094u:
            {
                if (name == BuiltInName::mix_3B3B3E)
                {
                    return &BuiltInFunction::kFunction_mix_3B3B3E;
                }
                break;
            }
            case 0x0cafcf44u:
            {
                if (name == BuiltInName::mix_1B1B1E)
                {
                    return &BuiltInFunction::kFunction_mix_1B1B1E;
                }
                break;
            }
            case 0x10703776u:
            {
                if (name.beginsWith(BuiltInName::tanh))
                {
                    ASSERT(name.length() == 7);
                    return &BuiltInFunction::kFunction_tanh_3B;
                }
                break;
            }
            case 0x1071119bu:
            {
                if (name.beginsWith(BuiltInName::tanh))
                {
                    ASSERT(name.length() == 7);
                    return &BuiltInFunction::kFunction_tanh_0B;
                }
                break;
            }
            case 0x10725bc1u:
            {
                if (name.beginsWith(BuiltInName::sinh))
                {
                    ASSERT(name.length() == 7);
                    return &BuiltInFunction::kFunction_sinh_2B;
                }
                break;
            }
            case 0x1073328bu:
            {
                if (name.beginsWith(BuiltInName::sinh))
                {
                    ASSERT(name.length() == 7);
                    return &BuiltInFunction::kFunction_sinh_1B;
                }
                break;
            }
            case 0x10733497u:
            {
                if (name.beginsWith(BuiltInName::tanh))
                {
                    ASSERT(name.length() == 7);
                    return &BuiltInFunction::kFunction_tanh_1B;
                }
                break;
            }
            case 0x10755e8fu:
            {
                if (name.beginsWith(BuiltInName::sinh))
                {
                    ASSERT(name.length() == 7);
                    return &BuiltInFunction::kFunction_sinh_0B;
                }
                break;
            }
            case 0x10759e30u:
            {
                if (name.beginsWith(BuiltInName::tanh))
                {
                    ASSERT(name.length() == 7);
                    return &BuiltInFunction::kFunction_tanh_2B;
                }
                break;
            }
            case 0x1075b747u:
            {
                if (name.beginsWith(BuiltInName::sign))
                {
                    ASSERT(name.length() == 7);
                    return &BuiltInFunction::kFunction_sign_1C;
                }
                break;
            }
            case 0x1076845du:
            {
                if (name.beginsWith(BuiltInName::cosh))
                {
                    ASSERT(name.length() == 7);
                    return &BuiltInFunction::kFunction_cosh_0B;
                }
                break;
            }
            case 0x1077b440u:
            {
                if (name.beginsWith(BuiltInName::sinh))
                {
                    ASSERT(name.length() == 7);
                    return &BuiltInFunction::kFunction_sinh_3B;
                }
                break;
            }
            case 0x10783ab9u:
            {
                if (name.beginsWith(BuiltInName::sign))
                {
                    ASSERT(name.length() == 7);
                    return &BuiltInFunction::kFunction_sign_2C;
                }
                break;
            }
            case 0x1078bfd9u:
            {
                if (name.beginsWith(BuiltInName::cosh))
                {
                    ASSERT(name.length() == 7);
                    return &BuiltInFunction::kFunction_cosh_1B;
                }
                break;
            }
            case 0x107abcf0u:
            {
                if (name.beginsWith(BuiltInName::sign))
                {
                    ASSERT(name.length() == 7);
                    return &BuiltInFunction::kFunction_sign_3C;
                }
                break;
            }
            case 0x107b1a06u:
            {
                if (name.beginsWith(BuiltInName::cosh))
                {
                    ASSERT(name.length() == 7);
                    return &BuiltInFunction::kFunction_cosh_2B;
                }
                break;
            }
            case 0x107bbfe5u:
            {
                if (name.beginsWith(BuiltInName::sign))
                {
                    ASSERT(name.length() == 7);
                    return &BuiltInFunction::kFunction_sign_0C;
                }
                break;
            }
            case 0x107dba8bu:
            {
                if (name.beginsWith(BuiltInName::cosh))
                {
                    ASSERT(name.length() == 7);
                    return &BuiltInFunction::kFunction_cosh_3B;
                }
                break;
            }
            case 0x10901551u:
            {
                if (name.beginsWith(BuiltInName::modf))
                {
                    ASSERT(name.length() == 9);
                    return &BuiltInFunction::kFunction_modf_3B3B;
                }
                break;
            }
            case 0x10951ffeu:
            {
                if (name.beginsWith(BuiltInName::modf))
                {
                    ASSERT(name.length() == 9);
                    return &BuiltInFunction::kFunction_modf_1B1B;
                }
                break;
            }
            case 0x1097fab5u:
            {
                if (name.beginsWith(BuiltInName::modf))
                {
                    ASSERT(name.length() == 9);
                    return &BuiltInFunction::kFunction_modf_0B0B;
                }
                break;
            }
            case 0x109f44f5u:
            {
                if (name.beginsWith(BuiltInName::modf))
                {
                    ASSERT(name.length() == 9);
                    return &BuiltInFunction::kFunction_modf_2B2B;
                }
                break;
            }
            case 0x1480271fu:
            {
                if (name.beginsWith(BuiltInName::asinh))
                {
                    ASSERT(name.length() == 8);
                    return &BuiltInFunction::kFunction_asinh_2B;
                }
                break;
            }
            case 0x1480c6aeu:
            {
                if (name.beginsWith(BuiltInName::isnan))
                {
                    ASSERT(name.length() == 8);
                    return &BuiltInFunction::kFunction_isnan_2B;
                }
                break;
            }
            case 0x1480c808u:
            {
                if (name.beginsWith(BuiltInName::round))
                {
                    ASSERT(name.length() == 8);
                    return &BuiltInFunction::kFunction_round_0B;
                }
                break;
            }
            case 0x1482431bu:
            {
                if (name.beginsWith(BuiltInName::asinh))
                {
                    ASSERT(name.length() == 8);
                    return &BuiltInFunction::kFunction_asinh_3B;
                }
                break;
            }
            case 0x14826e42u:
            {
                if (name.beginsWith(BuiltInName::trunc))
                {
                    ASSERT(name.length() == 8);
                    return &BuiltInFunction::kFunction_trunc_0B;
                }
                break;
            }
            case 0x14832dbfu:
            {
                if (name.beginsWith(BuiltInName::round))
                {
                    ASSERT(name.length() == 8);
                    return &BuiltInFunction::kFunction_round_3B;
                }
                break;
            }
            case 0x14834209u:
            {
                if (name.beginsWith(BuiltInName::trunc))
                {
                    ASSERT(name.length() == 8);
                    return &BuiltInFunction::kFunction_trunc_3B;
                }
                break;
            }
            case 0x1484c8c8u:
            {
                if (name.beginsWith(BuiltInName::isinf))
                {
                    ASSERT(name.length() == 8);
                    return &BuiltInFunction::kFunction_isinf_2B;
                }
                break;
            }
            case 0x1485660du:
            {
                if (name.beginsWith(BuiltInName::trunc))
                {
                    ASSERT(name.length() == 8);
                    return &BuiltInFunction::kFunction_trunc_2B;
                }
                break;
            }
            case 0x14861f9fu:
            {
                if (name.beginsWith(BuiltInName::atanh))
                {
                    ASSERT(name.length() == 8);
                    return &BuiltInFunction::kFunction_atanh_2B;
                }
                break;
            }
            case 0x148769adu:
            {
                if (name.beginsWith(BuiltInName::isinf))
                {
                    ASSERT(name.length() == 8);
                    return &BuiltInFunction::kFunction_isinf_3B;
                }
                break;
            }
            case 0x1487c3c2u:
            {
                if (name.beginsWith(BuiltInName::trunc))
                {
                    ASSERT(name.length() == 8);
                    return &BuiltInFunction::kFunction_trunc_1B;
                }
                break;
            }
            case 0x14884407u:
            {
                if (name.beginsWith(BuiltInName::isinf))
                {
                    ASSERT(name.length() == 8);
                    return &BuiltInFunction::kFunction_isinf_0B;
                }
                break;
            }
            case 0x148878f0u:
            {
                if (name.beginsWith(BuiltInName::atanh))
                {
                    ASSERT(name.length() == 8);
                    return &BuiltInFunction::kFunction_atanh_1B;
                }
                break;
            }
            case 0x14897423u:
            {
                if (name.beginsWith(BuiltInName::acosh))
                {
                    ASSERT(name.length() == 8);
                    return &BuiltInFunction::kFunction_acosh_1B;
                }
                break;
            }
            case 0x148a680au:
            {
                if (name.beginsWith(BuiltInName::isinf))
                {
                    ASSERT(name.length() == 8);
                    return &BuiltInFunction::kFunction_isinf_1B;
                }
                break;
            }
            case 0x148ae3f8u:
            {
                if (name.beginsWith(BuiltInName::isnan))
                {
                    ASSERT(name.length() == 8);
                    return &BuiltInFunction::kFunction_isnan_3B;
                }
                break;
            }
            case 0x148b1badu:
            {
                if (name.beginsWith(BuiltInName::atanh))
                {
                    ASSERT(name.length() == 8);
                    return &BuiltInFunction::kFunction_atanh_0B;
                }
                break;
            }
            case 0x148bf514u:
            {
                if (name.beginsWith(BuiltInName::atanh))
                {
                    ASSERT(name.length() == 8);
                    return &BuiltInFunction::kFunction_atanh_3B;
                }
                break;
            }
            case 0x148c14feu:
            {
                if (name.beginsWith(BuiltInName::acosh))
                {
                    ASSERT(name.length() == 8);
                    return &BuiltInFunction::kFunction_acosh_0B;
                }
                break;
            }
            case 0x148cac27u:
            {
                if (name.beginsWith(BuiltInName::asinh))
                {
                    ASSERT(name.length() == 8);
                    return &BuiltInFunction::kFunction_asinh_0B;
                }
                break;
            }
            case 0x148cff1au:
            {
                if (name.beginsWith(BuiltInName::acosh))
                {
                    ASSERT(name.length() == 8);
                    return &BuiltInFunction::kFunction_acosh_3B;
                }
                break;
            }
            case 0x148d4956u:
            {
                if (name.beginsWith(BuiltInName::isnan))
                {
                    ASSERT(name.length() == 8);
                    return &BuiltInFunction::kFunction_isnan_0B;
                }
                break;
            }
            case 0x148dc6eeu:
            {
                if (name.beginsWith(BuiltInName::round))
                {
                    ASSERT(name.length() == 8);
                    return &BuiltInFunction::kFunction_round_2B;
                }
                break;
            }
            case 0x148eac12u:
            {
                if (name.beginsWith(BuiltInName::round))
                {
                    ASSERT(name.length() == 8);
                    return &BuiltInFunction::kFunction_round_1B;
                }
                break;
            }
            case 0x148f151fu:
            {
                if (name.beginsWith(BuiltInName::acosh))
                {
                    ASSERT(name.length() == 8);
                    return &BuiltInFunction::kFunction_acosh_2B;
                }
                break;
            }
            case 0x148f4dfau:
            {
                if (name.beginsWith(BuiltInName::asinh))
                {
                    ASSERT(name.length() == 8);
                    return &BuiltInFunction::kFunction_asinh_1B;
                }
                break;
            }
            case 0x148fe84bu:
            {
                if (name.beginsWith(BuiltInName::isnan))
                {
                    ASSERT(name.length() == 8);
                    return &BuiltInFunction::kFunction_isnan_1B;
                }
                break;
            }
            case 0x14a4b126u:
            {
                if (name.beginsWith(BuiltInName::equal))
                {
                    ASSERT(name.length() == 10);
                    return &BuiltInFunction::kFunction_equal_2D2D;
                }
                break;
            }
            case 0x14ac0278u:
            {
                if (name.beginsWith(BuiltInName::equal))
                {
                    ASSERT(name.length() == 10);
                    return &BuiltInFunction::kFunction_equal_1D1D;
                }
                break;
            }
            case 0x14ad7597u:
            {
                if (name.beginsWith(BuiltInName::equal))
                {
                    ASSERT(name.length() == 10);
                    return &BuiltInFunction::kFunction_equal_3D3D;
                }
                break;
            }
            case 0x14c00d68u:
            {
                if (name == BuiltInName::clamp_2C2C2C)
                {
                    return &BuiltInFunction::kFunction_clamp_2C2C2C;
                }
                break;
            }
            case 0x14c0acb1u:
            {
                if (name == BuiltInName::clamp_1D0D0D)
                {
                    return &BuiltInFunction::kFunction_clamp_1D0D0D;
                }
                break;
            }
            case 0x14c1bf46u:
            {
                if (name == BuiltInName::clamp_1C0C0C)
                {
                    return &BuiltInFunction::kFunction_clamp_1C0C0C;
                }
                break;
            }
            case 0x14c404a0u:
            {
                if (name == BuiltInName::clamp_0C0C0C)
                {
                    return &BuiltInFunction::kFunction_clamp_0C0C0C;
                }
                break;
            }
            case 0x14c4515bu:
            {
                if (name == BuiltInName::clamp_2D0D0D)
                {
                    return &BuiltInFunction::kFunction_clamp_2D0D0D;
                }
                break;
            }
            case 0x14c4b865u:
            {
                if (name == BuiltInName::clamp_3C0C0C)
                {
                    return &BuiltInFunction::kFunction_clamp_3C0C0C;
                }
                break;
            }
            case 0x14c57085u:
            {
                if (name == BuiltInName::clamp_1C1C1C)
                {
                    return &BuiltInFunction::kFunction_clamp_1C1C1C;
                }
                break;
            }
            case 0x14c61344u:
            {
                if (name == BuiltInName::clamp_1D1D1D)
                {
                    return &BuiltInFunction::kFunction_clamp_1D1D1D;
                }
                break;
            }
            case 0x14c9dd99u:
            {
                if (name == BuiltInName::clamp_2D2D2D)
                {
                    return &BuiltInFunction::kFunction_clamp_2D2D2D;
                }
                break;
            }
            case 0x14cae813u:
            {
                if (name == BuiltInName::clamp_3C3C3C)
                {
                    return &BuiltInFunction::kFunction_clamp_3C3C3C;
                }
                break;
            }
            case 0x14cb6e76u:
            {
                if (name == BuiltInName::clamp_3D0D0D)
                {
                    return &BuiltInFunction::kFunction_clamp_3D0D0D;
                }
                break;
            }
            case 0x14cc2e9au:
            {
                if (name == BuiltInName::clamp_2C0C0C)
                {
                    return &BuiltInFunction::kFunction_clamp_2C0C0C;
                }
                break;
            }
            case 0x14cc3941u:
            {
                if (name == BuiltInName::clamp_0D0D0D)
                {
                    return &BuiltInFunction::kFunction_clamp_0D0D0D;
                }
                break;
            }
            case 0x14ceb43eu:
            {
                if (name == BuiltInName::clamp_3D3D3D)
                {
                    return &BuiltInFunction::kFunction_clamp_3D3D3D;
                }
                break;
            }
            case 0x1ca06416u:
            {
                if (name.beginsWith(BuiltInName::inverse))
                {
                    ASSERT(name.length() == 10);
                    return &BuiltInFunction::kFunction_inverse_5B;
                }
                break;
            }
            case 0x1ca0f080u:
            {
                if (name.beginsWith(BuiltInName::inverse))
                {
                    ASSERT(name.length() == 10);
                    return &BuiltInFunction::kFunction_inverse_AB;
                }
                break;
            }
            case 0x1ca198d9u:
            {
                if (name.beginsWith(BuiltInName::inverse))
                {
                    ASSERT(name.length() == 10);
                    return &BuiltInFunction::kFunction_inverse_FB;
                }
                break;
            }
            case 0x1cc0bf9eu:
            {
                if (name.beginsWith(BuiltInName::texture))
                {
                    ASSERT(name.length() == 12);
                    return &BuiltInFunction::kFunction_texture_0S2B;
                }
                break;
            }
            case 0x1cc25663u:
            {
                if (name.beginsWith(BuiltInName::texture))
                {
                    ASSERT(name.length() == 12);
                    return &BuiltInFunction::kFunction_texture_0K2B;
                }
                break;
            }
            case 0x1cc39501u:
            {
                if (name.beginsWith(BuiltInName::texture))
                {
                    ASSERT(name.length() == 12);
                    return &BuiltInFunction::kFunction_texture_0V2B;
                }
                break;
            }
            case 0x1cc3d380u:
            {
                if (name.beginsWith(BuiltInName::texture))
                {
                    ASSERT(name.length() == 12);
                    return &BuiltInFunction::kFunction_texture_0Z2B;
                }
                break;
            }
            case 0x1cc4bc63u:
            {
                if (name.beginsWith(BuiltInName::texture))
                {
                    ASSERT(name.length() == 12);
                    return &BuiltInFunction::kFunction_texture_0I2B;
                }
                break;
            }
            case 0x1cc71e2fu:
            {
                if (name.beginsWith(BuiltInName::texture))
                {
                    ASSERT(name.length() == 12);
                    return &BuiltInFunction::kFunction_texture_0Q2B;
                }
                break;
            }
            case 0x1cc75b2bu:
            {
                if (name.beginsWith(BuiltInName::texture))
                {
                    ASSERT(name.length() == 12);
                    return &BuiltInFunction::kFunction_texture_0M1B;
                }
                break;
            }
            case 0x1cc8b086u:
            {
                if (name.beginsWith(BuiltInName::texture))
                {
                    ASSERT(name.length() == 12);
                    return &BuiltInFunction::kFunction_texture_0b3B;
                }
                break;
            }
            case 0x1cc8e9a8u:
            {
                if (name.beginsWith(BuiltInName::texture))
                {
                    ASSERT(name.length() == 12);
                    return &BuiltInFunction::kFunction_texture_0J2B;
                }
                break;
            }
            case 0x1cc8f192u:
            {
                if (name.beginsWith(BuiltInName::texture))
                {
                    ASSERT(name.length() == 12);
                    return &BuiltInFunction::kFunction_texture_0W2B;
                }
                break;
            }
            case 0x1cc931d1u:
            {
                if (name.beginsWith(BuiltInName::texture))
                {
                    ASSERT(name.length() == 12);
                    return &BuiltInFunction::kFunction_texture_0X2B;
                }
                break;
            }
            case 0x1ccbe1e6u:
            {
                if (name.beginsWith(BuiltInName::texture))
                {
                    ASSERT(name.length() == 12);
                    return &BuiltInFunction::kFunction_texture_0H1B;
                }
                break;
            }
            case 0x1ccc3b2fu:
            {
                if (name.beginsWith(BuiltInName::texture))
                {
                    ASSERT(name.length() == 12);
                    return &BuiltInFunction::kFunction_texture_0a3B;
                }
                break;
            }
            case 0x1ccc3cbfu:
            {
                if (name.beginsWith(BuiltInName::texture))
                {
                    ASSERT(name.length() == 12);
                    return &BuiltInFunction::kFunction_texture_0L1B;
                }
                break;
            }
            case 0x1ccc5cd8u:
            {
                if (name == BuiltInName::texture_0N1B)
                {
                    return &BuiltInFunction::kFunction_texture_0N1B;
                }
                break;
            }
            case 0x1ccdb695u:
            {
                if (name.beginsWith(BuiltInName::texture))
                {
                    ASSERT(name.length() == 12);
                    return &BuiltInFunction::kFunction_texture_0U1B;
                }
                break;
            }
            case 0x1cce4cd6u:
            {
                if (name.beginsWith(BuiltInName::texture))
                {
                    ASSERT(name.length() == 12);
                    return &BuiltInFunction::kFunction_texture_0P1B;
                }
                break;
            }
            case 0x1ccf4520u:
            {
                if (name.beginsWith(BuiltInName::texture))
                {
                    ASSERT(name.length() == 12);
                    return &BuiltInFunction::kFunction_texture_0R2B;
                }
                break;
            }
            case 0x20d0bc8cu:
            {
                if (name.beginsWith(BuiltInName::lessThan))
                {
                    ASSERT(name.length() == 13);
                    return &BuiltInFunction::kFunction_lessThan_3D3D;
                }
                break;
            }
            case 0x20d2c382u:
            {
                if (name.beginsWith(BuiltInName::lessThan))
                {
                    ASSERT(name.length() == 13);
                    return &BuiltInFunction::kFunction_lessThan_2D2D;
                }
                break;
            }
            case 0x20d59f47u:
            {
                if (name.beginsWith(BuiltInName::notEqual))
                {
                    ASSERT(name.length() == 13);
                    return &BuiltInFunction::kFunction_notEqual_1D1D;
                }
                break;
            }
            case 0x20dae9e7u:
            {
                if (name.beginsWith(BuiltInName::lessThan))
                {
                    ASSERT(name.length() == 13);
                    return &BuiltInFunction::kFunction_lessThan_1D1D;
                }
                break;
            }
            case 0x20dc53d0u:
            {
                if (name.beginsWith(BuiltInName::notEqual))
                {
                    ASSERT(name.length() == 13);
                    return &BuiltInFunction::kFunction_notEqual_3D3D;
                }
                break;
            }
            case 0x20dcebb4u:
            {
                if (name.beginsWith(BuiltInName::notEqual))
                {
                    ASSERT(name.length() == 13);
                    return &BuiltInFunction::kFunction_notEqual_2D2D;
                }
                break;
            }
            case 0x24c016b3u:
            {
                if (name.beginsWith(BuiltInName::roundEven))
                {
                    ASSERT(name.length() == 12);
                    return &BuiltInFunction::kFunction_roundEven_3B;
                }
                break;
            }
            case 0x24c04563u:
            {
                if (name.beginsWith(BuiltInName::transpose))
                {
                    ASSERT(name.length() == 12);
                    return &BuiltInFunction::kFunction_transpose_AB;
                }
                break;
            }
            case 0x24c2b5deu:
            {
                if (name.beginsWith(BuiltInName::roundEven))
                {
                    ASSERT(name.length() == 12);
                    return &BuiltInFunction::kFunction_roundEven_2B;
                }
                break;
            }
            case 0x24c9ce28u:
            {
                if (name.beginsWith(BuiltInName::transpose))
                {
                    ASSERT(name.length() == 12);
                    return &BuiltInFunction::kFunction_transpose_EB;
                }
                break;
            }
            case 0x24ca150au:
            {
                if (name.beginsWith(BuiltInName::transpose))
                {
                    ASSERT(name.length() == 12);
                    return &BuiltInFunction::kFunction_transpose_6B;
                }
                break;
            }
            case 0x24caa0a8u:
            {
                if (name.beginsWith(BuiltInName::transpose))
                {
                    ASSERT(name.length() == 12);
                    return &BuiltInFunction::kFunction_transpose_BB;
                }
                break;
            }
            case 0x24cb384cu:
            {
                if (name.beginsWith(BuiltInName::transpose))
                {
                    ASSERT(name.length() == 12);
                    return &BuiltInFunction::kFunction_transpose_9B;
                }
                break;
            }
            case 0x24cb958eu:
            {
                if (name.beginsWith(BuiltInName::roundEven))
                {
                    ASSERT(name.length() == 12);
                    return &BuiltInFunction::kFunction_roundEven_1B;
                }
                break;
            }
            case 0x24cc2056u:
            {
                if (name.beginsWith(BuiltInName::transpose))
                {
                    ASSERT(name.length() == 12);
                    return &BuiltInFunction::kFunction_transpose_FB;
                }
                break;
            }
            case 0x24ccb677u:
            {
                if (name.beginsWith(BuiltInName::transpose))
                {
                    ASSERT(name.length() == 12);
                    return &BuiltInFunction::kFunction_transpose_7B;
                }
                break;
            }
            case 0x24cdb8acu:
            {
                if (name.beginsWith(BuiltInName::roundEven))
                {
                    ASSERT(name.length() == 12);
                    return &BuiltInFunction::kFunction_roundEven_0B;
                }
                break;
            }
            case 0x24cfa59eu:
            {
                if (name.beginsWith(BuiltInName::transpose))
                {
                    ASSERT(name.length() == 12);
                    return &BuiltInFunction::kFunction_transpose_DB;
                }
                break;
            }
            case 0x24cfb971u:
            {
                if (name.beginsWith(BuiltInName::transpose))
                {
                    ASSERT(name.length() == 12);
                    return &BuiltInFunction::kFunction_transpose_5B;
                }
                break;
            }
            case 0x24e7ca02u:
            {
                if (name.beginsWith(BuiltInName::yuv_2_rgb))
                {
                    ASSERT(name.length() == 14);
                    return &BuiltInFunction::kFunction_yuv_2_rgb_2B0G;
                }
                break;
            }
            case 0x24eb3ad6u:
            {
                if (name.beginsWith(BuiltInName::rgb_2_yuv))
                {
                    ASSERT(name.length() == 14);
                    return &BuiltInFunction::kFunction_rgb_2_yuv_2B0G;
                }
                break;
            }
            case 0x29102cb2u:
            {
                if (name == BuiltInName::texelFetch_0V2C0C)
                {
                    return &BuiltInFunction::kFunction_texelFetch_0V2C0C;
                }
                break;
            }
            case 0x2910700au:
            {
                if (name == BuiltInName::textureLod_0X2B0B)
                {
                    return &BuiltInFunction::kFunction_textureLod_0X2B0B;
                }
                break;
            }
            case 0x29112a03u:
            {
                if (name == BuiltInName::textureLod_0Q2B0B)
                {
                    return &BuiltInFunction::kFunction_textureLod_0Q2B0B;
                }
                break;
            }
            case 0x2911720eu:
            {
                if (name == BuiltInName::texelFetch_0Q2C0C)
                {
                    return &BuiltInFunction::kFunction_texelFetch_0Q2C0C;
                }
                break;
            }
            case 0x29128f3eu:
            {
                if (name == BuiltInName::texelFetch_0P1C0C)
                {
                    return &BuiltInFunction::kFunction_texelFetch_0P1C0C;
                }
                break;
            }
            case 0x29133cc9u:
            {
                if (name == BuiltInName::textureLod_0V2B0B)
                {
                    return &BuiltInFunction::kFunction_textureLod_0V2B0B;
                }
                break;
            }
            case 0x29140228u:
            {
                if (name == BuiltInName::texelFetch_0M1C0C)
                {
                    return &BuiltInFunction::kFunction_texelFetch_0M1C0C;
                }
                break;
            }
            case 0x29144470u:
            {
                if (name == BuiltInName::texelFetch_0S2C0C)
                {
                    return &BuiltInFunction::kFunction_texelFetch_0S2C0C;
                }
                break;
            }
            case 0x2914cd7au:
            {
                if (name == BuiltInName::textureLod_0S2B0B)
                {
                    return &BuiltInFunction::kFunction_textureLod_0S2B0B;
                }
                break;
            }
            case 0x2916234cu:
            {
                if (name == BuiltInName::textureLod_0J2B0B)
                {
                    return &BuiltInFunction::kFunction_textureLod_0J2B0B;
                }
                break;
            }
            case 0x29166bccu:
            {
                if (name == BuiltInName::textureLod_0H1B0B)
                {
                    return &BuiltInFunction::kFunction_textureLod_0H1B0B;
                }
                break;
            }
            case 0x291771ddu:
            {
                if (name == BuiltInName::texelFetch_0I2C0C)
                {
                    return &BuiltInFunction::kFunction_texelFetch_0I2C0C;
                }
                break;
            }
            case 0x2919999du:
            {
                if (name == BuiltInName::textureLod_0R2B0B)
                {
                    return &BuiltInFunction::kFunction_textureLod_0R2B0B;
                }
                break;
            }
            case 0x291a3c8bu:
            {
                if (name == BuiltInName::texelFetch_0K2C0C)
                {
                    return &BuiltInFunction::kFunction_texelFetch_0K2C0C;
                }
                break;
            }
            case 0x291a6956u:
            {
                if (name == BuiltInName::textureLod_0W2B0B)
                {
                    return &BuiltInFunction::kFunction_textureLod_0W2B0B;
                }
                break;
            }
            case 0x291a77ccu:
            {
                if (name == BuiltInName::textureLod_0I2B0B)
                {
                    return &BuiltInFunction::kFunction_textureLod_0I2B0B;
                }
                break;
            }
            case 0x291c010eu:
            {
                if (name == BuiltInName::texelFetch_0X2C0C)
                {
                    return &BuiltInFunction::kFunction_texelFetch_0X2C0C;
                }
                break;
            }
            case 0x291d8e21u:
            {
                if (name == BuiltInName::textureLod_0K2B0B)
                {
                    return &BuiltInFunction::kFunction_textureLod_0K2B0B;
                }
                break;
            }
            case 0x291da4e1u:
            {
                if (name == BuiltInName::texelFetch_0U1C0C)
                {
                    return &BuiltInFunction::kFunction_texelFetch_0U1C0C;
                }
                break;
            }
            case 0x291dc663u:
            {
                if (name == BuiltInName::texelFetch_0L1C0C)
                {
                    return &BuiltInFunction::kFunction_texelFetch_0L1C0C;
                }
                break;
            }
            case 0x291eee75u:
            {
                if (name == BuiltInName::textureLod_0U1B0B)
                {
                    return &BuiltInFunction::kFunction_textureLod_0U1B0B;
                }
                break;
            }
            case 0x291f9c5du:
            {
                if (name == BuiltInName::textureLod_0P1B0B)
                {
                    return &BuiltInFunction::kFunction_textureLod_0P1B0B;
                }
                break;
            }
            case 0x291fb96au:
            {
                if (name == BuiltInName::texelFetch_0H1C0C)
                {
                    return &BuiltInFunction::kFunction_texelFetch_0H1C0C;
                }
                break;
            }
            case 0x291fc149u:
            {
                if (name == BuiltInName::textureLod_0Z2B0B)
                {
                    return &BuiltInFunction::kFunction_textureLod_0Z2B0B;
                }
                break;
            }
            case 0x2ce6e60cu:
            {
                if (name.beginsWith(BuiltInName::textureSize))
                {
                    ASSERT(name.length() == 14);
                    return &BuiltInFunction::kFunction_textureSize_0Y;
                }
                break;
            }
            case 0x2ce73febu:
            {
                if (name.beginsWith(BuiltInName::textureSize))
                {
                    ASSERT(name.length() == 14);
                    return &BuiltInFunction::kFunction_textureSize_0T;
                }
                break;
            }
            case 0x2ce7c017u:
            {
                if (name.beginsWith(BuiltInName::textureSize))
                {
                    ASSERT(name.length() == 14);
                    return &BuiltInFunction::kFunction_textureSize_0O;
                }
                break;
            }
            case 0x2ce9e97du:
            {
                if (name.beginsWith(BuiltInName::determinant))
                {
                    ASSERT(name.length() == 14);
                    return &BuiltInFunction::kFunction_determinant_FB;
                }
                break;
            }
            case 0x2ced705au:
            {
                if (name.beginsWith(BuiltInName::determinant))
                {
                    ASSERT(name.length() == 14);
                    return &BuiltInFunction::kFunction_determinant_5B;
                }
                break;
            }
            case 0x2cee0c54u:
            {
                if (name.beginsWith(BuiltInName::determinant))
                {
                    ASSERT(name.length() == 14);
                    return &BuiltInFunction::kFunction_determinant_AB;
                }
                break;
            }
            case 0x2d005187u:
            {
                if (name.beginsWith(BuiltInName::textureProj))
                {
                    ASSERT(name.length() == 16);
                    return &BuiltInFunction::kFunction_textureProj_0U3B;
                }
                break;
            }
            case 0x2d007125u:
            {
                if (name.beginsWith(BuiltInName::textureSize))
                {
                    ASSERT(name.length() == 16);
                    return &BuiltInFunction::kFunction_textureSize_0I0C;
                }
                break;
            }
            case 0x2d00b7aau:
            {
                if (name.beginsWith(BuiltInName::textureSize))
                {
                    ASSERT(name.length() == 16);
                    return &BuiltInFunction::kFunction_textureSize_0M0C;
                }
                break;
            }
            case 0x2d00dc41u:
            {
                if (name.beginsWith(BuiltInName::textureProj))
                {
                    ASSERT(name.length() == 16);
                    return &BuiltInFunction::kFunction_textureProj_0P3B;
                }
                break;
            }
            case 0x2d015791u:
            {
                if (name.beginsWith(BuiltInName::textureSize))
                {
                    ASSERT(name.length() == 16);
                    return &BuiltInFunction::kFunction_textureSize_0U0C;
                }
                break;
            }
            case 0x2d026f5fu:
            {
                if (name.beginsWith(BuiltInName::greaterThan))
                {
                    ASSERT(name.length() == 16);
                    return &BuiltInFunction::kFunction_greaterThan_3D3D;
                }
                break;
            }
            case 0x2d02d8e9u:
            {
                if (name.beginsWith(BuiltInName::greaterThan))
                {
                    ASSERT(name.length() == 16);
                    return &BuiltInFunction::kFunction_greaterThan_1D1D;
                }
                break;
            }
            case 0x2d02de80u:
            {
                if (name.beginsWith(BuiltInName::textureProj))
                {
                    ASSERT(name.length() == 16);
                    return &BuiltInFunction::kFunction_textureProj_0H2B;
                }
                break;
            }
            case 0x2d037c4cu:
            {
                if (name.beginsWith(BuiltInName::textureProj))
                {
                    ASSERT(name.length() == 16);
                    return &BuiltInFunction::kFunction_textureProj_0P2B;
                }
                break;
            }
            case 0x2d03b1f6u:
            {
                if (name.beginsWith(BuiltInName::greaterThan))
                {
                    ASSERT(name.length() == 16);
                    return &BuiltInFunction::kFunction_greaterThan_2D2D;
                }
                break;
            }
            case 0x2d03e3dau:
            {
                if (name.beginsWith(BuiltInName::textureSize))
                {
                    ASSERT(name.length() == 16);
                    return &BuiltInFunction::kFunction_textureSize_0J0C;
                }
                break;
            }
            case 0x2d03fc9du:
            {
                if (name.beginsWith(BuiltInName::textureProj))
                {
                    ASSERT(name.length() == 16);
                    return &BuiltInFunction::kFunction_textureProj_0V3B;
                }
                break;
            }
            case 0x2d04b5f4u:
            {
                if (name.beginsWith(BuiltInName::textureSize))
                {
                    ASSERT(name.length() == 16);
                    return &BuiltInFunction::kFunction_textureSize_0V0C;
                }
                break;
            }
            case 0x2d04bd90u:
            {
                if (name.beginsWith(BuiltInName::textureSize))
                {
                    ASSERT(name.length() == 16);
                    return &BuiltInFunction::kFunction_textureSize_0S0C;
                }
                break;
            }
            case 0x2d05209au:
            {
                if (name.beginsWith(BuiltInName::textureSize))
                {
                    ASSERT(name.length() == 16);
                    return &BuiltInFunction::kFunction_textureSize_0b0C;
                }
                break;
            }
            case 0x2d05b26eu:
            {
                if (name.beginsWith(BuiltInName::textureProj))
                {
                    ASSERT(name.length() == 16);
                    return &BuiltInFunction::kFunction_textureProj_0M2B;
                }
                break;
            }
            case 0x2d0728a0u:
            {
                if (name.beginsWith(BuiltInName::textureProj))
                {
                    ASSERT(name.length() == 16);
                    return &BuiltInFunction::kFunction_textureProj_0L2B;
                }
                break;
            }
            case 0x2d07de2bu:
            {
                if (name.beginsWith(BuiltInName::textureProj))
                {
                    ASSERT(name.length() == 16);
                    return &BuiltInFunction::kFunction_textureProj_0M3B;
                }
                break;
            }
            case 0x2d0836b9u:
            {
                if (name.beginsWith(BuiltInName::textureProj))
                {
                    ASSERT(name.length() == 16);
                    return &BuiltInFunction::kFunction_textureProj_0H3B;
                }
                break;
            }
            case 0x2d084eecu:
            {
                if (name.beginsWith(BuiltInName::textureProj))
                {
                    ASSERT(name.length() == 16);
                    return &BuiltInFunction::kFunction_textureProj_0Z3B;
                }
                break;
            }
            case 0x2d085b63u:
            {
                if (name.beginsWith(BuiltInName::textureSize))
                {
                    ASSERT(name.length() == 16);
                    return &BuiltInFunction::kFunction_textureSize_0H0C;
                }
                break;
            }
            case 0x2d089a63u:
            {
                if (name.beginsWith(BuiltInName::textureSize))
                {
                    ASSERT(name.length() == 16);
                    return &BuiltInFunction::kFunction_textureSize_0L0C;
                }
                break;
            }
            case 0x2d08e824u:
            {
                if (name.beginsWith(BuiltInName::textureSize))
                {
                    ASSERT(name.length() == 16);
                    return &BuiltInFunction::kFunction_textureSize_0W0C;
                }
                break;
            }
            case 0x2d0908bdu:
            {
                if (name.beginsWith(BuiltInName::textureSize))
                {
                    ASSERT(name.length() == 16);
                    return &BuiltInFunction::kFunction_textureSize_0Z0C;
                }
                break;
            }
            case 0x2d0b7d30u:
            {
                if (name.beginsWith(BuiltInName::textureProj))
                {
                    ASSERT(name.length() == 16);
                    return &BuiltInFunction::kFunction_textureProj_0N3B;
                }
                break;
            }
            case 0x2d0b9377u:
            {
                if (name.beginsWith(BuiltInName::textureProj))
                {
                    ASSERT(name.length() == 16);
                    return &BuiltInFunction::kFunction_textureProj_0I3B;
                }
                break;
            }
            case 0x2d0c1458u:
            {
                if (name.beginsWith(BuiltInName::textureSize))
                {
                    ASSERT(name.length() == 16);
                    return &BuiltInFunction::kFunction_textureSize_0K0C;
                }
                break;
            }
            case 0x2d0c211cu:
            {
                if (name.beginsWith(BuiltInName::textureProj))
                {
                    ASSERT(name.length() == 16);
                    return &BuiltInFunction::kFunction_textureProj_0Q3B;
                }
                break;
            }
            case 0x2d0c7922u:
            {
                if (name.beginsWith(BuiltInName::textureSize))
                {
                    ASSERT(name.length() == 16);
                    return &BuiltInFunction::kFunction_textureSize_0R0C;
                }
                break;
            }
            case 0x2d0c82e1u:
            {
                if (name.beginsWith(BuiltInName::textureProj))
                {
                    ASSERT(name.length() == 16);
                    return &BuiltInFunction::kFunction_textureProj_0L3B;
                }
                break;
            }
            case 0x2d0cd4ecu:
            {
                if (name.beginsWith(BuiltInName::textureSize))
                {
                    ASSERT(name.length() == 16);
                    return &BuiltInFunction::kFunction_textureSize_0P0C;
                }
                break;
            }
            case 0x2d0d00f6u:
            {
                if (name.beginsWith(BuiltInName::textureSize))
                {
                    ASSERT(name.length() == 16);
                    return &BuiltInFunction::kFunction_textureSize_0Q0C;
                }
                break;
            }
            case 0x2d0d65fbu:
            {
                if (name.beginsWith(BuiltInName::textureSize))
                {
                    ASSERT(name.length() == 16);
                    return &BuiltInFunction::kFunction_textureSize_0X0C;
                }
                break;
            }
            case 0x2d0d917du:
            {
                if (name.beginsWith(BuiltInName::textureProj))
                {
                    ASSERT(name.length() == 16);
                    return &BuiltInFunction::kFunction_textureProj_0N2B;
                }
                break;
            }
            case 0x2d0db21du:
            {
                if (name.beginsWith(BuiltInName::textureSize))
                {
                    ASSERT(name.length() == 16);
                    return &BuiltInFunction::kFunction_textureSize_0a0C;
                }
                break;
            }
            case 0x2d0e3593u:
            {
                if (name.beginsWith(BuiltInName::textureProj))
                {
                    ASSERT(name.length() == 16);
                    return &BuiltInFunction::kFunction_textureProj_0U2B;
                }
                break;
            }
            case 0x2d401271u:
            {
                if (name == BuiltInName::textureGrad_0I2B2B2B)
                {
                    return &BuiltInFunction::kFunction_textureGrad_0I2B2B2B;
                }
                break;
            }
            case 0x2d423ef7u:
            {
                if (name == BuiltInName::textureGrad_0W2B2B2B)
                {
                    return &BuiltInFunction::kFunction_textureGrad_0W2B2B2B;
                }
                break;
            }
            case 0x2d42a4a7u:
            {
                if (name == BuiltInName::textureGrad_0a3B2B2B)
                {
                    return &BuiltInFunction::kFunction_textureGrad_0a3B2B2B;
                }
                break;
            }
            case 0x2d4319eeu:
            {
                if (name == BuiltInName::textureGrad_0H1B1B1B)
                {
                    return &BuiltInFunction::kFunction_textureGrad_0H1B1B1B;
                }
                break;
            }
            case 0x2d432b01u:
            {
                if (name == BuiltInName::textureGrad_0Q2B2B2B)
                {
                    return &BuiltInFunction::kFunction_textureGrad_0Q2B2B2B;
                }
                break;
            }
            case 0x2d43ef75u:
            {
                if (name == BuiltInName::textureGrad_0J2B2B2B)
                {
                    return &BuiltInFunction::kFunction_textureGrad_0J2B2B2B;
                }
                break;
            }
            case 0x2d447047u:
            {
                if (name == BuiltInName::textureGrad_0X2B1B1B)
                {
                    return &BuiltInFunction::kFunction_textureGrad_0X2B1B1B;
                }
                break;
            }
            case 0x2d468d96u:
            {
                if (name == BuiltInName::textureGrad_0R2B2B2B)
                {
                    return &BuiltInFunction::kFunction_textureGrad_0R2B2B2B;
                }
                break;
            }
            case 0x2d48f0f3u:
            {
                if (name == BuiltInName::textureGrad_0P1B1B1B)
                {
                    return &BuiltInFunction::kFunction_textureGrad_0P1B1B1B;
                }
                break;
            }
            case 0x2d4a4f6au:
            {
                if (name == BuiltInName::textureGrad_0b3B1B1B)
                {
                    return &BuiltInFunction::kFunction_textureGrad_0b3B1B1B;
                }
                break;
            }
            case 0x2d4add22u:
            {
                if (name == BuiltInName::textureGrad_0S2B1B1B)
                {
                    return &BuiltInFunction::kFunction_textureGrad_0S2B1B1B;
                }
                break;
            }
            case 0x2d4d40c2u:
            {
                if (name == BuiltInName::textureGrad_0Z2B1B1B)
                {
                    return &BuiltInFunction::kFunction_textureGrad_0Z2B1B1B;
                }
                break;
            }
            case 0x2d4e1d2au:
            {
                if (name == BuiltInName::textureGrad_0K2B1B1B)
                {
                    return &BuiltInFunction::kFunction_textureGrad_0K2B1B1B;
                }
                break;
            }
            case 0x2d4e721cu:
            {
                if (name == BuiltInName::textureGrad_0U1B1B1B)
                {
                    return &BuiltInFunction::kFunction_textureGrad_0U1B1B1B;
                }
                break;
            }
            case 0x2d4fefbbu:
            {
                if (name == BuiltInName::textureGrad_0V2B2B2B)
                {
                    return &BuiltInFunction::kFunction_textureGrad_0V2B2B2B;
                }
                break;
            }
            case 0x30fbf415u:
            {
                if (name.beginsWith(BuiltInName::packHalf2x16))
                {
                    ASSERT(name.length() == 15);
                    return &BuiltInFunction::kFunction_packHalf2x16_1B;
                }
                break;
            }
            case 0x3110c06fu:
            {
                if (name.beginsWith(BuiltInName::outerProduct))
                {
                    ASSERT(name.length() == 17);
                    return &BuiltInFunction::kFunction_outerProduct_2B3B;
                }
                break;
            }
            case 0x311128b0u:
            {
                if (name.beginsWith(BuiltInName::outerProduct))
                {
                    ASSERT(name.length() == 17);
                    return &BuiltInFunction::kFunction_outerProduct_1B1B;
                }
                break;
            }
            case 0x311199aau:
            {
                if (name.beginsWith(BuiltInName::outerProduct))
                {
                    ASSERT(name.length() == 17);
                    return &BuiltInFunction::kFunction_outerProduct_3B2B;
                }
                break;
            }
            case 0x31120e21u:
            {
                if (name.beginsWith(BuiltInName::outerProduct))
                {
                    ASSERT(name.length() == 17);
                    return &BuiltInFunction::kFunction_outerProduct_1B2B;
                }
                break;
            }
            case 0x31142a15u:
            {
                if (name.beginsWith(BuiltInName::outerProduct))
                {
                    ASSERT(name.length() == 17);
                    return &BuiltInFunction::kFunction_outerProduct_1B3B;
                }
                break;
            }
            case 0x311b6bbfu:
            {
                if (name.beginsWith(BuiltInName::outerProduct))
                {
                    ASSERT(name.length() == 17);
                    return &BuiltInFunction::kFunction_outerProduct_2B2B;
                }
                break;
            }
            case 0x311c3faau:
            {
                if (name.beginsWith(BuiltInName::outerProduct))
                {
                    ASSERT(name.length() == 17);
                    return &BuiltInFunction::kFunction_outerProduct_3B3B;
                }
                break;
            }
            case 0x311c4162u:
            {
                if (name.beginsWith(BuiltInName::outerProduct))
                {
                    ASSERT(name.length() == 17);
                    return &BuiltInFunction::kFunction_outerProduct_2B1B;
                }
                break;
            }
            case 0x311f3234u:
            {
                if (name.beginsWith(BuiltInName::outerProduct))
                {
                    ASSERT(name.length() == 17);
                    return &BuiltInFunction::kFunction_outerProduct_3B1B;
                }
                break;
            }
            case 0x3509e2f1u:
            {
                if (name.beginsWith(BuiltInName::packSnorm2x16))
                {
                    ASSERT(name.length() == 16);
                    return &BuiltInFunction::kFunction_packSnorm2x16_1B;
                }
                break;
            }
            case 0x350e7c49u:
            {
                if (name.beginsWith(BuiltInName::packUnorm2x16))
                {
                    ASSERT(name.length() == 16);
                    return &BuiltInFunction::kFunction_packUnorm2x16_1B;
                }
                break;
            }
            case 0x35248d4eu:
            {
                if (name.beginsWith(BuiltInName::lessThanEqual))
                {
                    ASSERT(name.length() == 18);
                    return &BuiltInFunction::kFunction_lessThanEqual_2D2D;
                }
                break;
            }
            case 0x352bc93du:
            {
                if (name.beginsWith(BuiltInName::lessThanEqual))
                {
                    ASSERT(name.length() == 18);
                    return &BuiltInFunction::kFunction_lessThanEqual_1D1D;
                }
                break;
            }
            case 0x352df7d8u:
            {
                if (name.beginsWith(BuiltInName::lessThanEqual))
                {
                    ASSERT(name.length() == 18);
                    return &BuiltInFunction::kFunction_lessThanEqual_3D3D;
                }
                break;
            }
            case 0x354102f7u:
            {
                if (name == BuiltInName::textureOffset_0P1B1C)
                {
                    return &BuiltInFunction::kFunction_textureOffset_0P1B1C;
                }
                break;
            }
            case 0x35413eedu:
            {
                if (name == BuiltInName::textureOffset_0V2B2C)
                {
                    return &BuiltInFunction::kFunction_textureOffset_0V2B2C;
                }
                break;
            }
            case 0x35422c30u:
            {
                if (name == BuiltInName::textureOffset_0H1B1C)
                {
                    return &BuiltInFunction::kFunction_textureOffset_0H1B1C;
                }
                break;
            }
            case 0x3543944fu:
            {
                if (name == BuiltInName::textureOffset_0U1B1C)
                {
                    return &BuiltInFunction::kFunction_textureOffset_0U1B1C;
                }
                break;
            }
            case 0x35459cf8u:
            {
                if (name == BuiltInName::textureOffset_0S2B1C)
                {
                    return &BuiltInFunction::kFunction_textureOffset_0S2B1C;
                }
                break;
            }
            case 0x354706eau:
            {
                if (name == BuiltInName::textureOffset_0X2B1C)
                {
                    return &BuiltInFunction::kFunction_textureOffset_0X2B1C;
                }
                break;
            }
            case 0x35473958u:
            {
                if (name == BuiltInName::textureOffset_0Z2B1C)
                {
                    return &BuiltInFunction::kFunction_textureOffset_0Z2B1C;
                }
                break;
            }
            case 0x35478003u:
            {
                if (name == BuiltInName::textureOffset_0Q2B2C)
                {
                    return &BuiltInFunction::kFunction_textureOffset_0Q2B2C;
                }
                break;
            }
            case 0x354801adu:
            {
                if (name == BuiltInName::textureOffset_0K2B1C)
                {
                    return &BuiltInFunction::kFunction_textureOffset_0K2B1C;
                }
                break;
            }
            case 0x354cbe1cu:
            {
                if (name == BuiltInName::textureOffset_0I2B2C)
                {
                    return &BuiltInFunction::kFunction_textureOffset_0I2B2C;
                }
                break;
            }
            case 0x3910c5d7u:
            {
                if (name.beginsWith(BuiltInName::intBitsToFloat))
                {
                    ASSERT(name.length() == 17);
                    return &BuiltInFunction::kFunction_intBitsToFloat_2C;
                }
                break;
            }
            case 0x3910f8b9u:
            {
                if (name.beginsWith(BuiltInName::floatBitsToInt))
                {
                    ASSERT(name.length() == 17);
                    return &BuiltInFunction::kFunction_floatBitsToInt_2B;
                }
                break;
            }
            case 0x3911c106u:
            {
                if (name.beginsWith(BuiltInName::intBitsToFloat))
                {
                    ASSERT(name.length() == 17);
                    return &BuiltInFunction::kFunction_intBitsToFloat_1C;
                }
                break;
            }
            case 0x3913568du:
            {
                if (name.beginsWith(BuiltInName::floatBitsToInt))
                {
                    ASSERT(name.length() == 17);
                    return &BuiltInFunction::kFunction_floatBitsToInt_1B;
                }
                break;
            }
            case 0x3913c3f6u:
            {
                if (name.beginsWith(BuiltInName::intBitsToFloat))
                {
                    ASSERT(name.length() == 17);
                    return &BuiltInFunction::kFunction_intBitsToFloat_0C;
                }
                break;
            }
            case 0x3915f628u:
            {
                if (name.beginsWith(BuiltInName::floatBitsToInt))
                {
                    ASSERT(name.length() == 17);
                    return &BuiltInFunction::kFunction_floatBitsToInt_0B;
                }
                break;
            }
            case 0x39164139u:
            {
                if (name.beginsWith(BuiltInName::intBitsToFloat))
                {
                    ASSERT(name.length() == 17);
                    return &BuiltInFunction::kFunction_intBitsToFloat_3C;
                }
                break;
            }
            case 0x391bbc13u:
            {
                if (name.beginsWith(BuiltInName::unpackHalf2x16))
                {
                    ASSERT(name.length() == 17);
                    return &BuiltInFunction::kFunction_unpackHalf2x16_0D;
                }
                break;
            }
            case 0x391ed774u:
            {
                if (name.beginsWith(BuiltInName::floatBitsToInt))
                {
                    ASSERT(name.length() == 17);
                    return &BuiltInFunction::kFunction_floatBitsToInt_3B;
                }
                break;
            }
            case 0x3930f22du:
            {
                if (name.beginsWith(BuiltInName::matrixCompMult))
                {
                    ASSERT(name.length() == 19);
                    return &BuiltInFunction::kFunction_matrixCompMult_9B9B;
                }
                break;
            }
            case 0x39334a4du:
            {
                if (name.beginsWith(BuiltInName::matrixCompMult))
                {
                    ASSERT(name.length() == 19);
                    return &BuiltInFunction::kFunction_matrixCompMult_7B7B;
                }
                break;
            }
            case 0x39393016u:
            {
                if (name.beginsWith(BuiltInName::matrixCompMult))
                {
                    ASSERT(name.length() == 19);
                    return &BuiltInFunction::kFunction_matrixCompMult_6B6B;
                }
                break;
            }
            case 0x3939896du:
            {
                if (name.beginsWith(BuiltInName::matrixCompMult))
                {
                    ASSERT(name.length() == 19);
                    return &BuiltInFunction::kFunction_matrixCompMult_BBBB;
                }
                break;
            }
            case 0x393d70dau:
            {
                if (name.beginsWith(BuiltInName::matrixCompMult))
                {
                    ASSERT(name.length() == 19);
                    return &BuiltInFunction::kFunction_matrixCompMult_DBDB;
                }
                break;
            }
            case 0x393f69ceu:
            {
                if (name.beginsWith(BuiltInName::matrixCompMult))
                {
                    ASSERT(name.length() == 19);
                    return &BuiltInFunction::kFunction_matrixCompMult_EBEB;
                }
                break;
            }
            case 0x39509c5du:
            {
                if (name == BuiltInName::textureProjLod_0Q3B0B)
                {
                    return &BuiltInFunction::kFunction_textureProjLod_0Q3B0B;
                }
                break;
            }
            case 0x39516b09u:
            {
                if (name == BuiltInName::textureProjLod_0P2B0B)
                {
                    return &BuiltInFunction::kFunction_textureProjLod_0P2B0B;
                }
                break;
            }
            case 0x3951bcdau:
            {
                if (name == BuiltInName::textureProjLod_0H3B0B)
                {
                    return &BuiltInFunction::kFunction_textureProjLod_0H3B0B;
                }
                break;
            }
            case 0x3954274au:
            {
                if (name == BuiltInName::textureProjLod_0H2B0B)
                {
                    return &BuiltInFunction::kFunction_textureProjLod_0H2B0B;
                }
                break;
            }
            case 0x39564b1cu:
            {
                if (name == BuiltInName::textureProjLod_0U3B0B)
                {
                    return &BuiltInFunction::kFunction_textureProjLod_0U3B0B;
                }
                break;
            }
            case 0x395794afu:
            {
                if (name == BuiltInName::textureProjLod_0U2B0B)
                {
                    return &BuiltInFunction::kFunction_textureProjLod_0U2B0B;
                }
                break;
            }
            case 0x395b06aau:
            {
                if (name == BuiltInName::textureProjLod_0V3B0B)
                {
                    return &BuiltInFunction::kFunction_textureProjLod_0V3B0B;
                }
                break;
            }
            case 0x395bbd87u:
            {
                if (name == BuiltInName::textureProjLod_0P3B0B)
                {
                    return &BuiltInFunction::kFunction_textureProjLod_0P3B0B;
                }
                break;
            }
            case 0x395dfaedu:
            {
                if (name == BuiltInName::textureProjLod_0Z3B0B)
                {
                    return &BuiltInFunction::kFunction_textureProjLod_0Z3B0B;
                }
                break;
            }
            case 0x395f01e1u:
            {
                if (name == BuiltInName::textureProjLod_0I3B0B)
                {
                    return &BuiltInFunction::kFunction_textureProjLod_0I3B0B;
                }
                break;
            }
            case 0x3d204dd3u:
            {
                if (name.beginsWith(BuiltInName::floatBitsToUint))
                {
                    ASSERT(name.length() == 18);
                    return &BuiltInFunction::kFunction_floatBitsToUint_0B;
                }
                break;
            }
            case 0x3d25c369u:
            {
                if (name.beginsWith(BuiltInName::uintBitsToFloat))
                {
                    ASSERT(name.length() == 18);
                    return &BuiltInFunction::kFunction_uintBitsToFloat_3D;
                }
                break;
            }
            case 0x3d27a145u:
            {
                if (name.beginsWith(BuiltInName::uintBitsToFloat))
                {
                    ASSERT(name.length() == 18);
                    return &BuiltInFunction::kFunction_uintBitsToFloat_0D;
                }
                break;
            }
            case 0x3d2a6fcau:
            {
                if (name.beginsWith(BuiltInName::floatBitsToUint))
                {
                    ASSERT(name.length() == 18);
                    return &BuiltInFunction::kFunction_floatBitsToUint_1B;
                }
                break;
            }
            case 0x3d2a886cu:
            {
                if (name.beginsWith(BuiltInName::uintBitsToFloat))
                {
                    ASSERT(name.length() == 18);
                    return &BuiltInFunction::kFunction_uintBitsToFloat_1D;
                }
                break;
            }
            case 0x3d2abf41u:
            {
                if (name.beginsWith(BuiltInName::unpackSnorm2x16))
                {
                    ASSERT(name.length() == 18);
                    return &BuiltInFunction::kFunction_unpackSnorm2x16_0D;
                }
                break;
            }
            case 0x3d2b50abu:
            {
                if (name.beginsWith(BuiltInName::uintBitsToFloat))
                {
                    ASSERT(name.length() == 18);
                    return &BuiltInFunction::kFunction_uintBitsToFloat_2D;
                }
                break;
            }
            case 0x3d2cc57cu:
            {
                if (name.beginsWith(BuiltInName::floatBitsToUint))
                {
                    ASSERT(name.length() == 18);
                    return &BuiltInFunction::kFunction_floatBitsToUint_2B;
                }
                break;
            }
            case 0x3d2e13e6u:
            {
                if (name.beginsWith(BuiltInName::unpackUnorm2x16))
                {
                    ASSERT(name.length() == 18);
                    return &BuiltInFunction::kFunction_unpackUnorm2x16_0D;
                }
                break;
            }
            case 0x3d2f6a98u:
            {
                if (name.beginsWith(BuiltInName::floatBitsToUint))
                {
                    ASSERT(name.length() == 18);
                    return &BuiltInFunction::kFunction_floatBitsToUint_3B;
                }
                break;
            }
            case 0x3d832970u:
            {
                if (name == BuiltInName::textureProjGrad_0V3B2B2B)
                {
                    return &BuiltInFunction::kFunction_textureProjGrad_0V3B2B2B;
                }
                break;
            }
            case 0x3d83cc77u:
            {
                if (name == BuiltInName::textureProjGrad_0Q3B2B2B)
                {
                    return &BuiltInFunction::kFunction_textureProjGrad_0Q3B2B2B;
                }
                break;
            }
            case 0x3d865b2au:
            {
                if (name == BuiltInName::textureProjGrad_0H3B1B1B)
                {
                    return &BuiltInFunction::kFunction_textureProjGrad_0H3B1B1B;
                }
                break;
            }
            case 0x3d86f397u:
            {
                if (name == BuiltInName::textureProjGrad_0P2B1B1B)
                {
                    return &BuiltInFunction::kFunction_textureProjGrad_0P2B1B1B;
                }
                break;
            }
            case 0x3d87ff0au:
            {
                if (name == BuiltInName::textureProjGrad_0I3B2B2B)
                {
                    return &BuiltInFunction::kFunction_textureProjGrad_0I3B2B2B;
                }
                break;
            }
            case 0x3d896556u:
            {
                if (name == BuiltInName::textureProjGrad_0U3B1B1B)
                {
                    return &BuiltInFunction::kFunction_textureProjGrad_0U3B1B1B;
                }
                break;
            }
            case 0x3d8a0862u:
            {
                if (name == BuiltInName::textureProjGrad_0P3B1B1B)
                {
                    return &BuiltInFunction::kFunction_textureProjGrad_0P3B1B1B;
                }
                break;
            }
            case 0x3d8b645cu:
            {
                if (name == BuiltInName::textureProjGrad_0H2B1B1B)
                {
                    return &BuiltInFunction::kFunction_textureProjGrad_0H2B1B1B;
                }
                break;
            }
            case 0x3d8ca0b7u:
            {
                if (name == BuiltInName::textureProjGrad_0Z3B1B1B)
                {
                    return &BuiltInFunction::kFunction_textureProjGrad_0Z3B1B1B;
                }
                break;
            }
            case 0x3d8e064fu:
            {
                if (name == BuiltInName::textureProjGrad_0U2B1B1B)
                {
                    return &BuiltInFunction::kFunction_textureProjGrad_0U2B1B1B;
                }
                break;
            }
            case 0x415269b7u:
            {
                if (name.beginsWith(BuiltInName::greaterThanEqual))
                {
                    ASSERT(name.length() == 21);
                    return &BuiltInFunction::kFunction_greaterThanEqual_2D2D;
                }
                break;
            }
            case 0x415d18d9u:
            {
                if (name.beginsWith(BuiltInName::greaterThanEqual))
                {
                    ASSERT(name.length() == 21);
                    return &BuiltInFunction::kFunction_greaterThanEqual_3D3D;
                }
                break;
            }
            case 0x415d84abu:
            {
                if (name.beginsWith(BuiltInName::greaterThanEqual))
                {
                    ASSERT(name.length() == 21);
                    return &BuiltInFunction::kFunction_greaterThanEqual_1D1D;
                }
                break;
            }
            case 0x4190d486u:
            {
                if (name == BuiltInName::texelFetchOffset_0X2C0C1C)
                {
                    return &BuiltInFunction::kFunction_texelFetchOffset_0X2C0C1C;
                }
                break;
            }
            case 0x4191cb81u:
            {
                if (name == BuiltInName::texelFetchOffset_0I2C0C2C)
                {
                    return &BuiltInFunction::kFunction_texelFetchOffset_0I2C0C2C;
                }
                break;
            }
            case 0x419224bdu:
            {
                if (name == BuiltInName::texelFetchOffset_0S2C0C1C)
                {
                    return &BuiltInFunction::kFunction_texelFetchOffset_0S2C0C1C;
                }
                break;
            }
            case 0x4192d547u:
            {
                if (name == BuiltInName::textureLodOffset_0X2B0B1C)
                {
                    return &BuiltInFunction::kFunction_textureLodOffset_0X2B0B1C;
                }
                break;
            }
            case 0x41938a11u:
            {
                if (name == BuiltInName::texelFetchOffset_0P1C0C1C)
                {
                    return &BuiltInFunction::kFunction_texelFetchOffset_0P1C0C1C;
                }
                break;
            }
            case 0x4194ae35u:
            {
                if (name == BuiltInName::textureLodOffset_0Z2B0B1C)
                {
                    return &BuiltInFunction::kFunction_textureLodOffset_0Z2B0B1C;
                }
                break;
            }
            case 0x4194ea77u:
            {
                if (name == BuiltInName::textureLodOffset_0V2B0B2C)
                {
                    return &BuiltInFunction::kFunction_textureLodOffset_0V2B0B2C;
                }
                break;
            }
            case 0x41958afau:
            {
                if (name == BuiltInName::textureLodOffset_0S2B0B1C)
                {
                    return &BuiltInFunction::kFunction_textureLodOffset_0S2B0B1C;
                }
                break;
            }
            case 0x4195953fu:
            {
                if (name == BuiltInName::texelFetchOffset_0K2C0C1C)
                {
                    return &BuiltInFunction::kFunction_texelFetchOffset_0K2C0C1C;
                }
                break;
            }
            case 0x419641e4u:
            {
                if (name == BuiltInName::texelFetchOffset_0H1C0C1C)
                {
                    return &BuiltInFunction::kFunction_texelFetchOffset_0H1C0C1C;
                }
                break;
            }
            case 0x41979f66u:
            {
                if (name == BuiltInName::textureLodOffset_0P1B0B1C)
                {
                    return &BuiltInFunction::kFunction_textureLodOffset_0P1B0B1C;
                }
                break;
            }
            case 0x4198f5c0u:
            {
                if (name == BuiltInName::texelFetchOffset_0U1C0C1C)
                {
                    return &BuiltInFunction::kFunction_texelFetchOffset_0U1C0C1C;
                }
                break;
            }
            case 0x41990c42u:
            {
                if (name == BuiltInName::textureLodOffset_0Q2B0B2C)
                {
                    return &BuiltInFunction::kFunction_textureLodOffset_0Q2B0B2C;
                }
                break;
            }
            case 0x41992585u:
            {
                if (name == BuiltInName::textureLodOffset_0H1B0B1C)
                {
                    return &BuiltInFunction::kFunction_textureLodOffset_0H1B0B1C;
                }
                break;
            }
            case 0x419a009fu:
            {
                if (name == BuiltInName::textureLodOffset_0K2B0B1C)
                {
                    return &BuiltInFunction::kFunction_textureLodOffset_0K2B0B1C;
                }
                break;
            }
            case 0x419b1491u:
            {
                if (name == BuiltInName::texelFetchOffset_0Q2C0C2C)
                {
                    return &BuiltInFunction::kFunction_texelFetchOffset_0Q2C0C2C;
                }
                break;
            }
            case 0x419bdc72u:
            {
                if (name == BuiltInName::textureLodOffset_0I2B0B2C)
                {
                    return &BuiltInFunction::kFunction_textureLodOffset_0I2B0B2C;
                }
                break;
            }
            case 0x419c6bc9u:
            {
                if (name == BuiltInName::texelFetchOffset_0V2C0C2C)
                {
                    return &BuiltInFunction::kFunction_texelFetchOffset_0V2C0C2C;
                }
                break;
            }
            case 0x419f4e4du:
            {
                if (name == BuiltInName::textureLodOffset_0U1B0B1C)
                {
                    return &BuiltInFunction::kFunction_textureLodOffset_0U1B0B1C;
                }
                break;
            }
            case 0x45801598u:
            {
                if (name == BuiltInName::textureProjOffset_0U3B1C)
                {
                    return &BuiltInFunction::kFunction_textureProjOffset_0U3B1C;
                }
                break;
            }
            case 0x4580712au:
            {
                if (name == BuiltInName::textureProjOffset_0U2B1C)
                {
                    return &BuiltInFunction::kFunction_textureProjOffset_0U2B1C;
                }
                break;
            }
            case 0x458150bau:
            {
                if (name == BuiltInName::textureProjOffset_0H2B1C)
                {
                    return &BuiltInFunction::kFunction_textureProjOffset_0H2B1C;
                }
                break;
            }
            case 0x45859c54u:
            {
                if (name == BuiltInName::textureProjOffset_0Q3B2C)
                {
                    return &BuiltInFunction::kFunction_textureProjOffset_0Q3B2C;
                }
                break;
            }
            case 0x4585bb13u:
            {
                if (name == BuiltInName::textureProjOffset_0H3B1C)
                {
                    return &BuiltInFunction::kFunction_textureProjOffset_0H3B1C;
                }
                break;
            }
            case 0x45889762u:
            {
                if (name == BuiltInName::textureProjOffset_0I3B2C)
                {
                    return &BuiltInFunction::kFunction_textureProjOffset_0I3B2C;
                }
                break;
            }
            case 0x4589a875u:
            {
                if (name == BuiltInName::textureProjOffset_0P2B1C)
                {
                    return &BuiltInFunction::kFunction_textureProjOffset_0P2B1C;
                }
                break;
            }
            case 0x458a50a0u:
            {
                if (name == BuiltInName::textureProjOffset_0V3B2C)
                {
                    return &BuiltInFunction::kFunction_textureProjOffset_0V3B2C;
                }
                break;
            }
            case 0x458be8b2u:
            {
                if (name == BuiltInName::textureProjOffset_0Z3B1C)
                {
                    return &BuiltInFunction::kFunction_textureProjOffset_0Z3B1C;
                }
                break;
            }
            case 0x458df23bu:
            {
                if (name == BuiltInName::textureProjOffset_0P3B1C)
                {
                    return &BuiltInFunction::kFunction_textureProjOffset_0P3B1C;
                }
                break;
            }
            case 0x45c09d88u:
            {
                if (name == BuiltInName::textureGradOffset_0U1B1B1B1C)
                {
                    return &BuiltInFunction::kFunction_textureGradOffset_0U1B1B1B1C;
                }
                break;
            }
            case 0x45c2f605u:
            {
                if (name == BuiltInName::textureGradOffset_0K2B1B1B1C)
                {
                    return &BuiltInFunction::kFunction_textureGradOffset_0K2B1B1B1C;
                }
                break;
            }
            case 0x45c47453u:
            {
                if (name == BuiltInName::textureGradOffset_0X2B1B1B1C)
                {
                    return &BuiltInFunction::kFunction_textureGradOffset_0X2B1B1B1C;
                }
                break;
            }
            case 0x45c59fedu:
            {
                if (name == BuiltInName::textureGradOffset_0b3B1B1B1C)
                {
                    return &BuiltInFunction::kFunction_textureGradOffset_0b3B1B1B1C;
                }
                break;
            }
            case 0x45c7de83u:
            {
                if (name == BuiltInName::textureGradOffset_0I2B2B2B2C)
                {
                    return &BuiltInFunction::kFunction_textureGradOffset_0I2B2B2B2C;
                }
                break;
            }
            case 0x45ca81ceu:
            {
                if (name == BuiltInName::textureGradOffset_0S2B1B1B1C)
                {
                    return &BuiltInFunction::kFunction_textureGradOffset_0S2B1B1B1C;
                }
                break;
            }
            case 0x45cafdcbu:
            {
                if (name == BuiltInName::textureGradOffset_0Q2B2B2B2C)
                {
                    return &BuiltInFunction::kFunction_textureGradOffset_0Q2B2B2B2C;
                }
                break;
            }
            case 0x45cc5a72u:
            {
                if (name == BuiltInName::textureGradOffset_0V2B2B2B2C)
                {
                    return &BuiltInFunction::kFunction_textureGradOffset_0V2B2B2B2C;
                }
                break;
            }
            case 0x45cd0417u:
            {
                if (name == BuiltInName::textureGradOffset_0Z2B1B1B1C)
                {
                    return &BuiltInFunction::kFunction_textureGradOffset_0Z2B1B1B1C;
                }
                break;
            }
            case 0x45ce0193u:
            {
                if (name == BuiltInName::textureGradOffset_0H1B1B1B1C)
                {
                    return &BuiltInFunction::kFunction_textureGradOffset_0H1B1B1B1C;
                }
                break;
            }
            case 0x45ce7db4u:
            {
                if (name == BuiltInName::textureGradOffset_0P1B1B1B1C)
                {
                    return &BuiltInFunction::kFunction_textureGradOffset_0P1B1B1B1C;
                }
                break;
            }
            case 0x51d1a62du:
            {
                if (name == BuiltInName::textureProjLodOffset_0Z3B0B1C)
                {
                    return &BuiltInFunction::kFunction_textureProjLodOffset_0Z3B0B1C;
                }
                break;
            }
            case 0x51d55102u:
            {
                if (name == BuiltInName::textureProjLodOffset_0H2B0B1C)
                {
                    return &BuiltInFunction::kFunction_textureProjLodOffset_0H2B0B1C;
                }
                break;
            }
            case 0x51d5cc8cu:
            {
                if (name == BuiltInName::textureProjLodOffset_0Q3B0B2C)
                {
                    return &BuiltInFunction::kFunction_textureProjLodOffset_0Q3B0B2C;
                }
                break;
            }
            case 0x51d72007u:
            {
                if (name == BuiltInName::textureProjLodOffset_0I3B0B2C)
                {
                    return &BuiltInFunction::kFunction_textureProjLodOffset_0I3B0B2C;
                }
                break;
            }
            case 0x51d731fau:
            {
                if (name == BuiltInName::textureProjLodOffset_0V3B0B2C)
                {
                    return &BuiltInFunction::kFunction_textureProjLodOffset_0V3B0B2C;
                }
                break;
            }
            case 0x51d7ccd1u:
            {
                if (name == BuiltInName::textureProjLodOffset_0H3B0B1C)
                {
                    return &BuiltInFunction::kFunction_textureProjLodOffset_0H3B0B1C;
                }
                break;
            }
            case 0x51dabe62u:
            {
                if (name == BuiltInName::textureProjLodOffset_0P3B0B1C)
                {
                    return &BuiltInFunction::kFunction_textureProjLodOffset_0P3B0B1C;
                }
                break;
            }
            case 0x51ddd932u:
            {
                if (name == BuiltInName::textureProjLodOffset_0P2B0B1C)
                {
                    return &BuiltInFunction::kFunction_textureProjLodOffset_0P2B0B1C;
                }
                break;
            }
            case 0x51ded012u:
            {
                if (name == BuiltInName::textureProjLodOffset_0U2B0B1C)
                {
                    return &BuiltInFunction::kFunction_textureProjLodOffset_0U2B0B1C;
                }
                break;
            }
            case 0x51dfb7dcu:
            {
                if (name == BuiltInName::textureProjLodOffset_0U3B0B1C)
                {
                    return &BuiltInFunction::kFunction_textureProjLodOffset_0U3B0B1C;
                }
                break;
            }
            case 0x560144aau:
            {
                if (name == BuiltInName::textureProjGradOffset_0U3B1B1B1C)
                {
                    return &BuiltInFunction::kFunction_textureProjGradOffset_0U3B1B1B1C;
                }
                break;
            }
            case 0x560187dbu:
            {
                if (name == BuiltInName::textureProjGradOffset_0V3B2B2B2C)
                {
                    return &BuiltInFunction::kFunction_textureProjGradOffset_0V3B2B2B2C;
                }
                break;
            }
            case 0x56045ff7u:
            {
                if (name == BuiltInName::textureProjGradOffset_0P2B1B1B1C)
                {
                    return &BuiltInFunction::kFunction_textureProjGradOffset_0P2B1B1B1C;
                }
                break;
            }
            case 0x5604692eu:
            {
                if (name == BuiltInName::textureProjGradOffset_0H3B1B1B1C)
                {
                    return &BuiltInFunction::kFunction_textureProjGradOffset_0H3B1B1B1C;
                }
                break;
            }
            case 0x56057148u:
            {
                if (name == BuiltInName::textureProjGradOffset_0I3B2B2B2C)
                {
                    return &BuiltInFunction::kFunction_textureProjGradOffset_0I3B2B2B2C;
                }
                break;
            }
            case 0x56088480u:
            {
                if (name == BuiltInName::textureProjGradOffset_0Q3B2B2B2C)
                {
                    return &BuiltInFunction::kFunction_textureProjGradOffset_0Q3B2B2B2C;
                }
                break;
            }
            case 0x5608e4edu:
            {
                if (name == BuiltInName::textureProjGradOffset_0Z3B1B1B1C)
                {
                    return &BuiltInFunction::kFunction_textureProjGradOffset_0Z3B1B1B1C;
                }
                break;
            }
            case 0x56096070u:
            {
                if (name == BuiltInName::textureProjGradOffset_0U2B1B1B1C)
                {
                    return &BuiltInFunction::kFunction_textureProjGradOffset_0U2B1B1B1C;
                }
                break;
            }
            case 0x560cb2ebu:
            {
                if (name == BuiltInName::textureProjGradOffset_0P3B1B1B1C)
                {
                    return &BuiltInFunction::kFunction_textureProjGradOffset_0P3B1B1B1C;
                }
                break;
            }
            case 0x560efc8au:
            {
                if (name == BuiltInName::textureProjGradOffset_0H2B1B1B1C)
                {
                    return &BuiltInFunction::kFunction_textureProjGradOffset_0H2B1B1B1C;
                }
                break;
            }
            case 0xfd8203fcu:
            {
                if (name == BuiltInName::gl_MaxProgramTexelOffset)
                {
                    return mVar_gl_MaxProgramTexelOffset;
                }
                break;
            }
            case 0xfd87bc19u:
            {
                if (name == BuiltInName::gl_MinProgramTexelOffset)
                {
                    return mVar_gl_MinProgramTexelOffset;
                }
                break;
            }
            case 0xfd9190e7u:
            {
                if (name == BuiltInName::gl_MaxVertexOutputVectors)
                {
                    return mVar_gl_MaxVertexOutputVectors;
                }
                break;
            }
            case 0xfda34617u:
            {
                if (name == BuiltInName::gl_MaxFragmentInputVectors)
                {
                    return mVar_gl_MaxFragmentInputVectors;
                }
                break;
            }
        }
        if (mShaderType == GL_FRAGMENT_SHADER)
        {
            switch (nameHash)
            {
                case 0x1072a9fbu:
                {
                    if (name.beginsWith(BuiltInName::dFdy))
                    {
                        ASSERT(name.length() == 7);
                        return &BuiltInFunction::kFunction_dFdy_0B;
                    }
                    break;
                }
                case 0x1073030fu:
                {
                    if (name.beginsWith(BuiltInName::dFdx))
                    {
                        ASSERT(name.length() == 7);
                        return &BuiltInFunction::kFunction_dFdx_0B;
                    }
                    break;
                }
                case 0x1074c546u:
                {
                    if (name.beginsWith(BuiltInName::dFdy))
                    {
                        ASSERT(name.length() == 7);
                        return &BuiltInFunction::kFunction_dFdy_1B;
                    }
                    break;
                }
                case 0x10756758u:
                {
                    if (name.beginsWith(BuiltInName::dFdx))
                    {
                        ASSERT(name.length() == 7);
                        return &BuiltInFunction::kFunction_dFdx_3B;
                    }
                    break;
                }
                case 0x10772880u:
                {
                    if (name.beginsWith(BuiltInName::dFdy))
                    {
                        ASSERT(name.length() == 7);
                        return &BuiltInFunction::kFunction_dFdy_2B;
                    }
                    break;
                }
                case 0x1078043du:
                {
                    if (name.beginsWith(BuiltInName::dFdx))
                    {
                        ASSERT(name.length() == 7);
                        return &BuiltInFunction::kFunction_dFdx_2B;
                    }
                    break;
                }
                case 0x1078ecffu:
                {
                    if (name.beginsWith(BuiltInName::dFdx))
                    {
                        ASSERT(name.length() == 7);
                        return &BuiltInFunction::kFunction_dFdx_1B;
                    }
                    break;
                }
                case 0x1079c835u:
                {
                    if (name.beginsWith(BuiltInName::dFdy))
                    {
                        ASSERT(name.length() == 7);
                        return &BuiltInFunction::kFunction_dFdy_3B;
                    }
                    break;
                }
                case 0x189044e9u:
                {
                    if (name.beginsWith(BuiltInName::fwidth))
                    {
                        ASSERT(name.length() == 9);
                        return &BuiltInFunction::kFunction_fwidth_1B;
                    }
                    break;
                }
                case 0x189a6fa9u:
                {
                    if (name.beginsWith(BuiltInName::fwidth))
                    {
                        ASSERT(name.length() == 9);
                        return &BuiltInFunction::kFunction_fwidth_0B;
                    }
                    break;
                }
                case 0x189cc19du:
                {
                    if (name.beginsWith(BuiltInName::fwidth))
                    {
                        ASSERT(name.length() == 9);
                        return &BuiltInFunction::kFunction_fwidth_3B;
                    }
                    break;
                }
                case 0x189f6338u:
                {
                    if (name.beginsWith(BuiltInName::fwidth))
                    {
                        ASSERT(name.length() == 9);
                        return &BuiltInFunction::kFunction_fwidth_2B;
                    }
                    break;
                }
                case 0x1ce04aabu:
                {
                    if (name == BuiltInName::texture_0U1B0B)
                    {
                        return &BuiltInFunction::kFunction_texture_0U1B0B;
                    }
                    break;
                }
                case 0x1ce1eb81u:
                {
                    if (name == BuiltInName::texture_0X2B0B)
                    {
                        return &BuiltInFunction::kFunction_texture_0X2B0B;
                    }
                    break;
                }
                case 0x1ce319feu:
                {
                    if (name == BuiltInName::texture_0M1B0B)
                    {
                        return &BuiltInFunction::kFunction_texture_0M1B0B;
                    }
                    break;
                }
                case 0x1ce386eeu:
                {
                    if (name == BuiltInName::texture_0P1B0B)
                    {
                        return &BuiltInFunction::kFunction_texture_0P1B0B;
                    }
                    break;
                }
                case 0x1ce4390bu:
                {
                    if (name == BuiltInName::texture_0V2B0B)
                    {
                        return &BuiltInFunction::kFunction_texture_0V2B0B;
                    }
                    break;
                }
                case 0x1ce445b0u:
                {
                    if (name == BuiltInName::texture_0L1B0B)
                    {
                        return &BuiltInFunction::kFunction_texture_0L1B0B;
                    }
                    break;
                }
                case 0x1ce684a0u:
                {
                    if (name == BuiltInName::texture_0Z2B0B)
                    {
                        return &BuiltInFunction::kFunction_texture_0Z2B0B;
                    }
                    break;
                }
                case 0x1ce6cb20u:
                {
                    if (name == BuiltInName::texture_0Q2B0B)
                    {
                        return &BuiltInFunction::kFunction_texture_0Q2B0B;
                    }
                    break;
                }
                case 0x1ce7ffc3u:
                {
                    if (name == BuiltInName::texture_0W2B0B)
                    {
                        return &BuiltInFunction::kFunction_texture_0W2B0B;
                    }
                    break;
                }
                case 0x1ce87584u:
                {
                    if (name == BuiltInName::texture_0K2B0B)
                    {
                        return &BuiltInFunction::kFunction_texture_0K2B0B;
                    }
                    break;
                }
                case 0x1cea71adu:
                {
                    if (name == BuiltInName::texture_0S2B0B)
                    {
                        return &BuiltInFunction::kFunction_texture_0S2B0B;
                    }
                    break;
                }
                case 0x1ceb9abfu:
                {
                    if (name == BuiltInName::texture_0J2B0B)
                    {
                        return &BuiltInFunction::kFunction_texture_0J2B0B;
                    }
                    break;
                }
                case 0x1cede054u:
                {
                    if (name == BuiltInName::texture_0H1B0B)
                    {
                        return &BuiltInFunction::kFunction_texture_0H1B0B;
                    }
                    break;
                }
                case 0x1cee54d8u:
                {
                    if (name == BuiltInName::texture_0R2B0B)
                    {
                        return &BuiltInFunction::kFunction_texture_0R2B0B;
                    }
                    break;
                }
                case 0x1cef758fu:
                {
                    if (name == BuiltInName::texture_0a3B0B)
                    {
                        return &BuiltInFunction::kFunction_texture_0a3B0B;
                    }
                    break;
                }
                case 0x1cefb0f7u:
                {
                    if (name == BuiltInName::texture_0I2B0B)
                    {
                        return &BuiltInFunction::kFunction_texture_0I2B0B;
                    }
                    break;
                }
                case 0x2d202f3fu:
                {
                    if (name == BuiltInName::textureProj_0L3B0B)
                    {
                        return &BuiltInFunction::kFunction_textureProj_0L3B0B;
                    }
                    break;
                }
                case 0x2d2141e1u:
                {
                    if (name == BuiltInName::textureProj_0M3B0B)
                    {
                        return &BuiltInFunction::kFunction_textureProj_0M3B0B;
                    }
                    break;
                }
                case 0x2d220503u:
                {
                    if (name == BuiltInName::textureProj_0P3B0B)
                    {
                        return &BuiltInFunction::kFunction_textureProj_0P3B0B;
                    }
                    break;
                }
                case 0x2d2210bau:
                {
                    if (name == BuiltInName::textureProj_0Z3B0B)
                    {
                        return &BuiltInFunction::kFunction_textureProj_0Z3B0B;
                    }
                    break;
                }
                case 0x2d23ba38u:
                {
                    if (name == BuiltInName::textureProj_0U2B0B)
                    {
                        return &BuiltInFunction::kFunction_textureProj_0U2B0B;
                    }
                    break;
                }
                case 0x2d23be17u:
                {
                    if (name == BuiltInName::textureProj_0M2B0B)
                    {
                        return &BuiltInFunction::kFunction_textureProj_0M2B0B;
                    }
                    break;
                }
                case 0x2d24b561u:
                {
                    if (name == BuiltInName::textureProj_0Q3B0B)
                    {
                        return &BuiltInFunction::kFunction_textureProj_0Q3B0B;
                    }
                    break;
                }
                case 0x2d2534d7u:
                {
                    if (name == BuiltInName::textureProj_0U3B0B)
                    {
                        return &BuiltInFunction::kFunction_textureProj_0U3B0B;
                    }
                    break;
                }
                case 0x2d269d32u:
                {
                    if (name == BuiltInName::textureProj_0I3B0B)
                    {
                        return &BuiltInFunction::kFunction_textureProj_0I3B0B;
                    }
                    break;
                }
                case 0x2d2a8d3au:
                {
                    if (name == BuiltInName::textureProj_0P2B0B)
                    {
                        return &BuiltInFunction::kFunction_textureProj_0P2B0B;
                    }
                    break;
                }
                case 0x2d2a9c1cu:
                {
                    if (name == BuiltInName::textureProj_0V3B0B)
                    {
                        return &BuiltInFunction::kFunction_textureProj_0V3B0B;
                    }
                    break;
                }
                case 0x2d2ca6f8u:
                {
                    if (name == BuiltInName::textureProj_0H3B0B)
                    {
                        return &BuiltInFunction::kFunction_textureProj_0H3B0B;
                    }
                    break;
                }
                case 0x2d2df52bu:
                {
                    if (name == BuiltInName::textureProj_0H2B0B)
                    {
                        return &BuiltInFunction::kFunction_textureProj_0H2B0B;
                    }
                    break;
                }
                case 0x2d2fc16fu:
                {
                    if (name == BuiltInName::textureProj_0L2B0B)
                    {
                        return &BuiltInFunction::kFunction_textureProj_0L2B0B;
                    }
                    break;
                }
                case 0x35611ec2u:
                {
                    if (name == BuiltInName::textureOffset_0Q2B2C0B)
                    {
                        return &BuiltInFunction::kFunction_textureOffset_0Q2B2C0B;
                    }
                    break;
                }
                case 0x35618a59u:
                {
                    if (name == BuiltInName::textureOffset_0V2B2C0B)
                    {
                        return &BuiltInFunction::kFunction_textureOffset_0V2B2C0B;
                    }
                    break;
                }
                case 0x35630e76u:
                {
                    if (name == BuiltInName::textureOffset_0X2B1C0B)
                    {
                        return &BuiltInFunction::kFunction_textureOffset_0X2B1C0B;
                    }
                    break;
                }
                case 0x356524a3u:
                {
                    if (name == BuiltInName::textureOffset_0Z2B1C0B)
                    {
                        return &BuiltInFunction::kFunction_textureOffset_0Z2B1C0B;
                    }
                    break;
                }
                case 0x3565646au:
                {
                    if (name == BuiltInName::textureOffset_0U1B1C0B)
                    {
                        return &BuiltInFunction::kFunction_textureOffset_0U1B1C0B;
                    }
                    break;
                }
                case 0x356ae2a8u:
                {
                    if (name == BuiltInName::textureOffset_0H1B1C0B)
                    {
                        return &BuiltInFunction::kFunction_textureOffset_0H1B1C0B;
                    }
                    break;
                }
                case 0x356b0f18u:
                {
                    if (name == BuiltInName::textureOffset_0I2B2C0B)
                    {
                        return &BuiltInFunction::kFunction_textureOffset_0I2B2C0B;
                    }
                    break;
                }
                case 0x356c4537u:
                {
                    if (name == BuiltInName::textureOffset_0K2B1C0B)
                    {
                        return &BuiltInFunction::kFunction_textureOffset_0K2B1C0B;
                    }
                    break;
                }
                case 0x356dd6bdu:
                {
                    if (name == BuiltInName::textureOffset_0S2B1C0B)
                    {
                        return &BuiltInFunction::kFunction_textureOffset_0S2B1C0B;
                    }
                    break;
                }
                case 0x356dff31u:
                {
                    if (name == BuiltInName::textureOffset_0P1B1C0B)
                    {
                        return &BuiltInFunction::kFunction_textureOffset_0P1B1C0B;
                    }
                    break;
                }
                case 0x45a13c18u:
                {
                    if (name == BuiltInName::textureProjOffset_0V3B2C0B)
                    {
                        return &BuiltInFunction::kFunction_textureProjOffset_0V3B2C0B;
                    }
                    break;
                }
                case 0x45a5a09au:
                {
                    if (name == BuiltInName::textureProjOffset_0U3B1C0B)
                    {
                        return &BuiltInFunction::kFunction_textureProjOffset_0U3B1C0B;
                    }
                    break;
                }
                case 0x45a7bc78u:
                {
                    if (name == BuiltInName::textureProjOffset_0P3B1C0B)
                    {
                        return &BuiltInFunction::kFunction_textureProjOffset_0P3B1C0B;
                    }
                    break;
                }
                case 0x45a7c263u:
                {
                    if (name == BuiltInName::textureProjOffset_0Q3B2C0B)
                    {
                        return &BuiltInFunction::kFunction_textureProjOffset_0Q3B2C0B;
                    }
                    break;
                }
                case 0x45ab195eu:
                {
                    if (name == BuiltInName::textureProjOffset_0Z3B1C0B)
                    {
                        return &BuiltInFunction::kFunction_textureProjOffset_0Z3B1C0B;
                    }
                    break;
                }
                case 0x45ac482bu:
                {
                    if (name == BuiltInName::textureProjOffset_0H3B1C0B)
                    {
                        return &BuiltInFunction::kFunction_textureProjOffset_0H3B1C0B;
                    }
                    break;
                }
                case 0x45aca531u:
                {
                    if (name == BuiltInName::textureProjOffset_0U2B1C0B)
                    {
                        return &BuiltInFunction::kFunction_textureProjOffset_0U2B1C0B;
                    }
                    break;
                }
                case 0x45ad4b1cu:
                {
                    if (name == BuiltInName::textureProjOffset_0I3B2C0B)
                    {
                        return &BuiltInFunction::kFunction_textureProjOffset_0I3B2C0B;
                    }
                    break;
                }
                case 0x45adf315u:
                {
                    if (name == BuiltInName::textureProjOffset_0H2B1C0B)
                    {
                        return &BuiltInFunction::kFunction_textureProjOffset_0H2B1C0B;
                    }
                    break;
                }
                case 0x45aec1dcu:
                {
                    if (name == BuiltInName::textureProjOffset_0P2B1C0B)
                    {
                        return &BuiltInFunction::kFunction_textureProjOffset_0P2B1C0B;
                    }
                    break;
                }
                case 0xfcc88d0bu:
                {
                    if (name == BuiltInName::gl_FragDepth)
                    {
                        return &BuiltInVariable::kVar_gl_FragDepth;
                    }
                    break;
                }
            }
        }
        if (mShaderType == GL_VERTEX_SHADER)
        {
            switch (nameHash)
            {
                case 0xfcbf3cafu:
                {
                    if (name == BuiltInName::gl_VertexID)
                    {
                        return &BuiltInVariable::kVar_gl_VertexID;
                    }
                    break;
                }
                case 0xfcd7e888u:
                {
                    if (name == BuiltInName::gl_InstanceID)
                    {
                        return &BuiltInVariable::kVar_gl_InstanceID;
                    }
                    break;
                }
            }
        }
        if (mResources.OVR_multiview && mShaderType != GL_COMPUTE_SHADER)
        {
            switch (nameHash)
            {
                case 0xfcdecfa5u:
                {
                    if (name == BuiltInName::gl_ViewID_OVR)
                    {
                        return &BuiltInVariable::kVar_gl_ViewID_OVR;
                    }
                    break;
                }
            }
        }
    }
    if (shaderVersion == 100)
    {
        switch (nameHash)
        {
            case 0x24e2c4e7u:
            {
                if (name.beginsWith(BuiltInName::texture2D))
                {
                    ASSERT(name.length() == 14);
                    return &BuiltInFunction::kFunction_texture2D_0H1B;
                }
                break;
            }
            case 0x24ee7b56u:
            {
                if (name.beginsWith(BuiltInName::texture2D))
                {
                    ASSERT(name.length() == 14);
                    return &BuiltInFunction::kFunction_texture2D_0L1B;
                }
                break;
            }
            case 0x2d011380u:
            {
                if (name.beginsWith(BuiltInName::textureCube))
                {
                    ASSERT(name.length() == 16);
                    return &BuiltInFunction::kFunction_textureCube_0J2B;
                }
                break;
            }
            case 0x352056b3u:
            {
                if (name.beginsWith(BuiltInName::texture2DRect))
                {
                    ASSERT(name.length() == 18);
                    return &BuiltInFunction::kFunction_texture2DRect_0N1B;
                }
                break;
            }
            case 0x3525221bu:
            {
                if (name.beginsWith(BuiltInName::texture2DProj))
                {
                    ASSERT(name.length() == 18);
                    return &BuiltInFunction::kFunction_texture2DProj_0L2B;
                }
                break;
            }
            case 0x352b0152u:
            {
                if (name.beginsWith(BuiltInName::texture2DProj))
                {
                    ASSERT(name.length() == 18);
                    return &BuiltInFunction::kFunction_texture2DProj_0L3B;
                }
                break;
            }
            case 0x352b4775u:
            {
                if (name.beginsWith(BuiltInName::texture2DProj))
                {
                    ASSERT(name.length() == 18);
                    return &BuiltInFunction::kFunction_texture2DProj_0H3B;
                }
                break;
            }
            case 0x352d6339u:
            {
                if (name.beginsWith(BuiltInName::texture2DProj))
                {
                    ASSERT(name.length() == 18);
                    return &BuiltInFunction::kFunction_texture2DProj_0H2B;
                }
                break;
            }
            case 0x41972dabu:
            {
                if (name == BuiltInName::texture2DGradEXT_0H1B1B1B)
                {
                    return &BuiltInFunction::kFunction_texture2DGradEXT_0H1B1B1B;
                }
                break;
            }
            case 0x456a76c4u:
            {
                if (name.beginsWith(BuiltInName::texture2DRectProj))
                {
                    ASSERT(name.length() == 22);
                    return &BuiltInFunction::kFunction_texture2DRectProj_0N3B;
                }
                break;
            }
            case 0x456c9272u:
            {
                if (name.beginsWith(BuiltInName::texture2DRectProj))
                {
                    ASSERT(name.length() == 22);
                    return &BuiltInFunction::kFunction_texture2DRectProj_0N2B;
                }
                break;
            }
            case 0x49b79cd7u:
            {
                if (name == BuiltInName::textureCubeGradEXT_0J2B2B2B)
                {
                    return &BuiltInFunction::kFunction_textureCubeGradEXT_0J2B2B2B;
                }
                break;
            }
            case 0x51d33b0du:
            {
                if (name == BuiltInName::texture2DProjGradEXT_0H3B1B1B)
                {
                    return &BuiltInFunction::kFunction_texture2DProjGradEXT_0H3B1B1B;
                }
                break;
            }
            case 0x51dab294u:
            {
                if (name == BuiltInName::texture2DProjGradEXT_0H2B1B1B)
                {
                    return &BuiltInFunction::kFunction_texture2DProjGradEXT_0H2B1B1B;
                }
                break;
            }
            case 0xfcb413a9u:
            {
                if (name == BuiltInName::gl_FragData)
                {
                    // Only initialized if shaderType == GL_FRAGMENT_SHADER
                    return mVar_gl_FragData;
                }
                break;
            }
            case 0xfcf86783u:
            {
                if (name == BuiltInName::gl_FragDepthEXT)
                {
                    // Only initialized if (shaderType == GL_FRAGMENT_SHADER) &&
                    // (mResources.EXT_frag_depth)
                    return mVar_gl_FragDepthEXT;
                }
                break;
            }
            case 0xfd4d8991u:
            {
                if (name == BuiltInName::gl_MaxVaryingVectors)
                {
                    return mVar_gl_MaxVaryingVectors;
                }
                break;
            }
            case 0xfd79d316u:
            {
                if (name == BuiltInName::gl_SecondaryFragDataEXT)
                {
                    // Only initialized if (shaderType == GL_FRAGMENT_SHADER) &&
                    // (mResources.EXT_blend_func_extended)
                    return mVar_gl_SecondaryFragDataEXT;
                }
                break;
            }
        }
        if (mShaderType == GL_FRAGMENT_SHADER)
        {
            switch (nameHash)
            {
                case 0x1072a9fbu:
                {
                    if (name.beginsWith(BuiltInName::dFdyExt))
                    {
                        ASSERT(name.length() == 7);
                        return &BuiltInFunction::kFunction_dFdyExt_0B;
                    }
                    break;
                }
                case 0x1073030fu:
                {
                    if (name.beginsWith(BuiltInName::dFdxExt))
                    {
                        ASSERT(name.length() == 7);
                        return &BuiltInFunction::kFunction_dFdxExt_0B;
                    }
                    break;
                }
                case 0x1074c546u:
                {
                    if (name.beginsWith(BuiltInName::dFdyExt))
                    {
                        ASSERT(name.length() == 7);
                        return &BuiltInFunction::kFunction_dFdyExt_1B;
                    }
                    break;
                }
                case 0x10756758u:
                {
                    if (name.beginsWith(BuiltInName::dFdxExt))
                    {
                        ASSERT(name.length() == 7);
                        return &BuiltInFunction::kFunction_dFdxExt_3B;
                    }
                    break;
                }
                case 0x10772880u:
                {
                    if (name.beginsWith(BuiltInName::dFdyExt))
                    {
                        ASSERT(name.length() == 7);
                        return &BuiltInFunction::kFunction_dFdyExt_2B;
                    }
                    break;
                }
                case 0x1078043du:
                {
                    if (name.beginsWith(BuiltInName::dFdxExt))
                    {
                        ASSERT(name.length() == 7);
                        return &BuiltInFunction::kFunction_dFdxExt_2B;
                    }
                    break;
                }
                case 0x1078ecffu:
                {
                    if (name.beginsWith(BuiltInName::dFdxExt))
                    {
                        ASSERT(name.length() == 7);
                        return &BuiltInFunction::kFunction_dFdxExt_1B;
                    }
                    break;
                }
                case 0x1079c835u:
                {
                    if (name.beginsWith(BuiltInName::dFdyExt))
                    {
                        ASSERT(name.length() == 7);
                        return &BuiltInFunction::kFunction_dFdyExt_3B;
                    }
                    break;
                }
                case 0x189044e9u:
                {
                    if (name.beginsWith(BuiltInName::fwidthExt))
                    {
                        ASSERT(name.length() == 9);
                        return &BuiltInFunction::kFunction_fwidthExt_1B;
                    }
                    break;
                }
                case 0x189a6fa9u:
                {
                    if (name.beginsWith(BuiltInName::fwidthExt))
                    {
                        ASSERT(name.length() == 9);
                        return &BuiltInFunction::kFunction_fwidthExt_0B;
                    }
                    break;
                }
                case 0x189cc19du:
                {
                    if (name.beginsWith(BuiltInName::fwidthExt))
                    {
                        ASSERT(name.length() == 9);
                        return &BuiltInFunction::kFunction_fwidthExt_3B;
                    }
                    break;
                }
                case 0x189f6338u:
                {
                    if (name.beginsWith(BuiltInName::fwidthExt))
                    {
                        ASSERT(name.length() == 9);
                        return &BuiltInFunction::kFunction_fwidthExt_2B;
                    }
                    break;
                }
                case 0x2508e2a4u:
                {
                    if (name == BuiltInName::texture2D_0H1B0B)
                    {
                        return &BuiltInFunction::kFunction_texture2D_0H1B0B;
                    }
                    break;
                }
                case 0x2d2d65c4u:
                {
                    if (name == BuiltInName::textureCube_0J2B0B)
                    {
                        return &BuiltInFunction::kFunction_textureCube_0J2B0B;
                    }
                    break;
                }
                case 0x35430cdfu:
                {
                    if (name == BuiltInName::texture2DProj_0H3B0B)
                    {
                        return &BuiltInFunction::kFunction_texture2DProj_0H3B0B;
                    }
                    break;
                }
                case 0x35488931u:
                {
                    if (name == BuiltInName::texture2DProj_0H2B0B)
                    {
                        return &BuiltInFunction::kFunction_texture2DProj_0H2B0B;
                    }
                    break;
                }
                case 0x3d686753u:
                {
                    if (name == BuiltInName::texture2DLodEXT_0H1B0B)
                    {
                        return &BuiltInFunction::kFunction_texture2DLodEXT_0H1B0B;
                    }
                    break;
                }
                case 0x458436e4u:
                {
                    if (name == BuiltInName::textureCubeLodEXT_0J2B0B)
                    {
                        return &BuiltInFunction::kFunction_textureCubeLodEXT_0J2B0B;
                    }
                    break;
                }
                case 0x4da39b8fu:
                {
                    if (name == BuiltInName::texture2DProjLodEXT_0H3B0B)
                    {
                        return &BuiltInFunction::kFunction_texture2DProjLodEXT_0H3B0B;
                    }
                    break;
                }
                case 0x4dac1445u:
                {
                    if (name == BuiltInName::texture2DProjLodEXT_0H2B0B)
                    {
                        return &BuiltInFunction::kFunction_texture2DProjLodEXT_0H2B0B;
                    }
                    break;
                }
                case 0xfcc1acd3u:
                {
                    if (name == BuiltInName::gl_FragColor)
                    {
                        return &BuiltInVariable::kVar_gl_FragColor;
                    }
                    break;
                }
            }
        }
        if (mShaderType == GL_VERTEX_SHADER)
        {
            switch (nameHash)
            {
                case 0x3130c76au:
                {
                    if (name == BuiltInName::texture2DLod_0H1B0B)
                    {
                        return &BuiltInFunction::kFunction_texture2DLod_0H1B0B;
                    }
                    break;
                }
                case 0x39582d02u:
                {
                    if (name == BuiltInName::textureCubeLod_0J2B0B)
                    {
                        return &BuiltInFunction::kFunction_textureCubeLod_0J2B0B;
                    }
                    break;
                }
                case 0x41715cefu:
                {
                    if (name == BuiltInName::texture2DProjLod_0H3B0B)
                    {
                        return &BuiltInFunction::kFunction_texture2DProjLod_0H3B0B;
                    }
                    break;
                }
                case 0x4178ec55u:
                {
                    if (name == BuiltInName::texture2DProjLod_0H2B0B)
                    {
                        return &BuiltInFunction::kFunction_texture2DProjLod_0H2B0B;
                    }
                    break;
                }
            }
        }
        if ((mShaderType == GL_FRAGMENT_SHADER) && (mResources.EXT_blend_func_extended))
        {
            switch (nameHash)
            {
                case 0xfd8aea76u:
                {
                    if (name == BuiltInName::gl_SecondaryFragColorEXT)
                    {
                        return &BuiltInVariable::kVar_gl_SecondaryFragColorEXT;
                    }
                    break;
                }
            }
        }
        if ((mShaderType == GL_FRAGMENT_SHADER) && (mResources.EXT_shader_framebuffer_fetch))
        {
            switch (nameHash)
            {
                case 0xfcf2cf9cu:
                {
                    if (name == BuiltInName::gl_LastFragData)
                    {
                        return mVar_gl_LastFragData;
                    }
                    break;
                }
            }
        }
        if ((mShaderType == GL_FRAGMENT_SHADER) && (mResources.NV_shader_framebuffer_fetch))
        {
            switch (nameHash)
            {
                case 0xfcf2cf9cu:
                {
                    if (name == BuiltInName::gl_LastFragData)
                    {
                        return mVar_gl_LastFragDataNV;
                    }
                    break;
                }
                case 0xfd004caeu:
                {
                    if (name == BuiltInName::gl_LastFragColor)
                    {
                        return &BuiltInVariable::kVar_gl_LastFragColor;
                    }
                    break;
                }
            }
        }
        if ((mShaderType == GL_FRAGMENT_SHADER) &&
            (!mResources.EXT_shader_framebuffer_fetch && !mResources.NV_shader_framebuffer_fetch &&
             mResources.ARM_shader_framebuffer_fetch))
        {
            switch (nameHash)
            {
                case 0xfd3e1d30u:
                {
                    if (name == BuiltInName::gl_LastFragColorARM)
                    {
                        return &BuiltInVariable::kVar_gl_LastFragColorARM;
                    }
                    break;
                }
            }
        }
        if (mResources.OVR_multiview && mShaderType != GL_COMPUTE_SHADER)
        {
            switch (nameHash)
            {
                case 0xfcdecfa5u:
                {
                    if (name == BuiltInName::gl_ViewID_OVR)
                    {
                        return &BuiltInVariable::kVar_gl_ViewID_OVRESSL1;
                    }
                    break;
                }
            }
        }
    }
    switch (nameHash)
    {
        case 0x0c60bd37u:
        {
            if (name.beginsWith(BuiltInName::log))
            {
                ASSERT(name.length() == 6);
                return &BuiltInFunction::kFunction_log_0B;
            }
            break;
        }
        case 0x0c60fbdau:
        {
            if (name.beginsWith(BuiltInName::all))
            {
                ASSERT(name.length() == 6);
                return &BuiltInFunction::kFunction_all_1E;
            }
            break;
        }
        case 0x0c610070u:
        {
            if (name.beginsWith(BuiltInName::tan))
            {
                ASSERT(name.length() == 6);
                return &BuiltInFunction::kFunction_tan_1B;
            }
            break;
        }
        case 0x0c6118f2u:
        {
            if (name.beginsWith(BuiltInName::abs))
            {
                ASSERT(name.length() == 6);
                return &BuiltInFunction::kFunction_abs_0B;
            }
            break;
        }
        case 0x0c612efdu:
        {
            if (name.beginsWith(BuiltInName::notFunc))
            {
                ASSERT(name.length() == 6);
                return &BuiltInFunction::kFunction_notFunc_3E;
            }
            break;
        }
        case 0x0c617c1cu:
        {
            if (name.beginsWith(BuiltInName::cos))
            {
                ASSERT(name.length() == 6);
                return &BuiltInFunction::kFunction_cos_2B;
            }
            break;
        }
        case 0x0c6194f5u:
        {
            if (name.beginsWith(BuiltInName::log))
            {
                ASSERT(name.length() == 6);
                return &BuiltInFunction::kFunction_log_3B;
            }
            break;
        }
        case 0x0c632bd9u:
        {
            if (name.beginsWith(BuiltInName::any))
            {
                ASSERT(name.length() == 6);
                return &BuiltInFunction::kFunction_any_1E;
            }
            break;
        }
        case 0x0c637d95u:
        {
            if (name.beginsWith(BuiltInName::abs))
            {
                ASSERT(name.length() == 6);
                return &BuiltInFunction::kFunction_abs_3B;
            }
            break;
        }
        case 0x0c63b949u:
        {
            if (name.beginsWith(BuiltInName::log))
            {
                ASSERT(name.length() == 6);
                return &BuiltInFunction::kFunction_log_2B;
            }
            break;
        }
        case 0x0c641ba1u:
        {
            if (name.beginsWith(BuiltInName::cos))
            {
                ASSERT(name.length() == 6);
                return &BuiltInFunction::kFunction_cos_3B;
            }
            break;
        }
        case 0x0c65e3b3u:
        {
            if (name.beginsWith(BuiltInName::any))
            {
                ASSERT(name.length() == 6);
                return &BuiltInFunction::kFunction_any_3E;
            }
            break;
        }
        case 0x0c6604cbu:
        {
            if (name.beginsWith(BuiltInName::sin))
            {
                ASSERT(name.length() == 6);
                return &BuiltInFunction::kFunction_sin_1B;
            }
            break;
        }
        case 0x0c66131eu:
        {
            if (name.beginsWith(BuiltInName::log))
            {
                ASSERT(name.length() == 6);
                return &BuiltInFunction::kFunction_log_1B;
            }
            break;
        }
        case 0x0c682adeu:
        {
            if (name.beginsWith(BuiltInName::any))
            {
                ASSERT(name.length() == 6);
                return &BuiltInFunction::kFunction_any_2E;
            }
            break;
        }
        case 0x0c68a536u:
        {
            if (name.beginsWith(BuiltInName::sin))
            {
                ASSERT(name.length() == 6);
                return &BuiltInFunction::kFunction_sin_0B;
            }
            break;
        }
        case 0x0c698f82u:
        {
            if (name.beginsWith(BuiltInName::sin))
            {
                ASSERT(name.length() == 6);
                return &BuiltInFunction::kFunction_sin_3B;
            }
            break;
        }
        case 0x0c6a5499u:
        {
            if (name.beginsWith(BuiltInName::exp))
            {
                ASSERT(name.length() == 6);
                return &BuiltInFunction::kFunction_exp_3B;
            }
            break;
        }
        case 0x0c6b32c8u:
        {
            if (name.beginsWith(BuiltInName::exp))
            {
                ASSERT(name.length() == 6);
                return &BuiltInFunction::kFunction_exp_0B;
            }
            break;
        }
        case 0x0c6b658bu:
        {
            if (name.beginsWith(BuiltInName::tan))
            {
                ASSERT(name.length() == 6);
                return &BuiltInFunction::kFunction_tan_2B;
            }
            break;
        }
        case 0x0c6ba397u:
        {
            if (name.beginsWith(BuiltInName::sin))
            {
                ASSERT(name.length() == 6);
                return &BuiltInFunction::kFunction_sin_2B;
            }
            break;
        }
        case 0x0c6bff3cu:
        {
            if (name.beginsWith(BuiltInName::all))
            {
                ASSERT(name.length() == 6);
                return &BuiltInFunction::kFunction_all_2E;
            }
            break;
        }
        case 0x0c6cfa67u:
        {
            if (name.beginsWith(BuiltInName::cos))
            {
                ASSERT(name.length() == 6);
                return &BuiltInFunction::kFunction_cos_0B;
            }
            break;
        }
        case 0x0c6d5636u:
        {
            if (name.beginsWith(BuiltInName::exp))
            {
                ASSERT(name.length() == 6);
                return &BuiltInFunction::kFunction_exp_1B;
            }
            break;
        }
        case 0x0c6db950u:
        {
            if (name.beginsWith(BuiltInName::all))
            {
                ASSERT(name.length() == 6);
                return &BuiltInFunction::kFunction_all_3E;
            }
            break;
        }
        case 0x0c6ded4fu:
        {
            if (name.beginsWith(BuiltInName::notFunc))
            {
                ASSERT(name.length() == 6);
                return &BuiltInFunction::kFunction_notFunc_1E;
            }
            break;
        }
        case 0x0c6e046eu:
        {
            if (name.beginsWith(BuiltInName::tan))
            {
                ASSERT(name.length() == 6);
                return &BuiltInFunction::kFunction_tan_3B;
            }
            break;
        }
        case 0x0c6e1694u:
        {
            if (name.beginsWith(BuiltInName::abs))
            {
                ASSERT(name.length() == 6);
                return &BuiltInFunction::kFunction_abs_2B;
            }
            break;
        }
        case 0x0c6ee660u:
        {
            if (name.beginsWith(BuiltInName::notFunc))
            {
                ASSERT(name.length() == 6);
                return &BuiltInFunction::kFunction_notFunc_2E;
            }
            break;
        }
        case 0x0c6eec2au:
        {
            if (name.beginsWith(BuiltInName::tan))
            {
                ASSERT(name.length() == 6);
                return &BuiltInFunction::kFunction_tan_0B;
            }
            break;
        }
        case 0x0c6efc3cu:
        {
            if (name.beginsWith(BuiltInName::abs))
            {
                ASSERT(name.length() == 6);
                return &BuiltInFunction::kFunction_abs_1B;
            }
            break;
        }
        case 0x0c6f1633u:
        {
            if (name.beginsWith(BuiltInName::cos))
            {
                ASSERT(name.length() == 6);
                return &BuiltInFunction::kFunction_cos_1B;
            }
            break;
        }
        case 0x0c6fbdb1u:
        {
            if (name.beginsWith(BuiltInName::exp))
            {
                ASSERT(name.length() == 6);
                return &BuiltInFunction::kFunction_exp_2B;
            }
            break;
        }
        case 0x0c800f27u:
        {
            if (name.beginsWith(BuiltInName::max))
            {
                ASSERT(name.length() == 8);
                return &BuiltInFunction::kFunction_max_2B2B;
            }
            break;
        }
        case 0x0c804dbau:
        {
            if (name.beginsWith(BuiltInName::mod))
            {
                ASSERT(name.length() == 8);
                return &BuiltInFunction::kFunction_mod_2B0B;
            }
            break;
        }
        case 0x0c8133bdu:
        {
            if (name.beginsWith(BuiltInName::mod))
            {
                ASSERT(name.length() == 8);
                return &BuiltInFunction::kFunction_mod_1B0B;
            }
            break;
        }
        case 0x0c8175a2u:
        {
            if (name.beginsWith(BuiltInName::min))
            {
                ASSERT(name.length() == 8);
                return &BuiltInFunction::kFunction_min_2B2B;
            }
            break;
        }
        case 0x0c82396bu:
        {
            if (name.beginsWith(BuiltInName::min))
            {
                ASSERT(name.length() == 8);
                return &BuiltInFunction::kFunction_min_1B0B;
            }
            break;
        }
        case 0x0c82ace0u:
        {
            if (name.beginsWith(BuiltInName::dot))
            {
                ASSERT(name.length() == 8);
                return &BuiltInFunction::kFunction_dot_3B3B;
            }
            break;
        }
        case 0x0c831999u:
        {
            if (name.beginsWith(BuiltInName::pow))
            {
                ASSERT(name.length() == 8);
                return &BuiltInFunction::kFunction_pow_3B3B;
            }
            break;
        }
        case 0x0c83ba4au:
        {
            if (name.beginsWith(BuiltInName::min))
            {
                ASSERT(name.length() == 8);
                return &BuiltInFunction::kFunction_min_0B0B;
            }
            break;
        }
        case 0x0c83d010u:
        {
            if (name.beginsWith(BuiltInName::mod))
            {
                ASSERT(name.length() == 8);
                return &BuiltInFunction::kFunction_mod_1B1B;
            }
            break;
        }
        case 0x0c8412a7u:
        {
            if (name.beginsWith(BuiltInName::dot))
            {
                ASSERT(name.length() == 8);
                return &BuiltInFunction::kFunction_dot_1B1B;
            }
            break;
        }
        case 0x0c844fb5u:
        {
            if (name.beginsWith(BuiltInName::max))
            {
                ASSERT(name.length() == 8);
                return &BuiltInFunction::kFunction_max_3B3B;
            }
            break;
        }
        case 0x0c84da0eu:
        {
            if (name.beginsWith(BuiltInName::min))
            {
                ASSERT(name.length() == 8);
                return &BuiltInFunction::kFunction_min_1B1B;
            }
            break;
        }
        case 0x0c8540c8u:
        {
            if (name.beginsWith(BuiltInName::mod))
            {
                ASSERT(name.length() == 8);
                return &BuiltInFunction::kFunction_mod_2B2B;
            }
            break;
        }
        case 0x0c860330u:
        {
            if (name.beginsWith(BuiltInName::pow))
            {
                ASSERT(name.length() == 8);
                return &BuiltInFunction::kFunction_pow_2B2B;
            }
            break;
        }
        case 0x0c86a229u:
        {
            if (name.beginsWith(BuiltInName::max))
            {
                ASSERT(name.length() == 8);
                return &BuiltInFunction::kFunction_max_3B0B;
            }
            break;
        }
        case 0x0c87043eu:
        {
            if (name.beginsWith(BuiltInName::pow))
            {
                ASSERT(name.length() == 8);
                return &BuiltInFunction::kFunction_pow_1B1B;
            }
            break;
        }
        case 0x0c8a02a9u:
        {
            if (name.beginsWith(BuiltInName::max))
            {
                ASSERT(name.length() == 8);
                return &BuiltInFunction::kFunction_max_1B0B;
            }
            break;
        }
        case 0x0c8a0e3eu:
        {
            if (name.beginsWith(BuiltInName::dot))
            {
                ASSERT(name.length() == 8);
                return &BuiltInFunction::kFunction_dot_0B0B;
            }
            break;
        }
        case 0x0c8ae761u:
        {
            if (name.beginsWith(BuiltInName::mod))
            {
                ASSERT(name.length() == 8);
                return &BuiltInFunction::kFunction_mod_3B3B;
            }
            break;
        }
        case 0x0c8bcf1bu:
        {
            if (name.beginsWith(BuiltInName::mod))
            {
                ASSERT(name.length() == 8);
                return &BuiltInFunction::kFunction_mod_3B0B;
            }
            break;
        }
        case 0x0c8bed0fu:
        {
            if (name.beginsWith(BuiltInName::min))
            {
                ASSERT(name.length() == 8);
                return &BuiltInFunction::kFunction_min_3B3B;
            }
            break;
        }
        case 0x0c8c26cdu:
        {
            if (name.beginsWith(BuiltInName::max))
            {
                ASSERT(name.length() == 8);
                return &BuiltInFunction::kFunction_max_1B1B;
            }
            break;
        }
        case 0x0c8c41a3u:
        {
            if (name.beginsWith(BuiltInName::dot))
            {
                ASSERT(name.length() == 8);
                return &BuiltInFunction::kFunction_dot_2B2B;
            }
            break;
        }
        case 0x0c8c7030u:
        {
            if (name.beginsWith(BuiltInName::min))
            {
                ASSERT(name.length() == 8);
                return &BuiltInFunction::kFunction_min_2B0B;
            }
            break;
        }
        case 0x0c8cc54du:
        {
            if (name.beginsWith(BuiltInName::min))
            {
                ASSERT(name.length() == 8);
                return &BuiltInFunction::kFunction_min_3B0B;
            }
            break;
        }
        case 0x0c8d02a1u:
        {
            if (name.beginsWith(BuiltInName::max))
            {
                ASSERT(name.length() == 8);
                return &BuiltInFunction::kFunction_max_2B0B;
            }
            break;
        }
        case 0x0c8d484cu:
        {
            if (name.beginsWith(BuiltInName::pow))
            {
                ASSERT(name.length() == 8);
                return &BuiltInFunction::kFunction_pow_0B0B;
            }
            break;
        }
        case 0x0c8e7928u:
        {
            if (name.beginsWith(BuiltInName::max))
            {
                ASSERT(name.length() == 8);
                return &BuiltInFunction::kFunction_max_0B0B;
            }
            break;
        }
        case 0x0c8ed10eu:
        {
            if (name.beginsWith(BuiltInName::mod))
            {
                ASSERT(name.length() == 8);
                return &BuiltInFunction::kFunction_mod_0B0B;
            }
            break;
        }
        case 0x0ca1f57du:
        {
            if (name == BuiltInName::mix_1B1B0B)
            {
                return &BuiltInFunction::kFunction_mix_1B1B0B;
            }
            break;
        }
        case 0x0ca60671u:
        {
            if (name == BuiltInName::mix_2B2B0B)
            {
                return &BuiltInFunction::kFunction_mix_2B2B0B;
            }
            break;
        }
        case 0x0ca9009eu:
        {
            if (name == BuiltInName::mix_2B2B2B)
            {
                return &BuiltInFunction::kFunction_mix_2B2B2B;
            }
            break;
        }
        case 0x0cab5c44u:
        {
            if (name == BuiltInName::mix_0B0B0B)
            {
                return &BuiltInFunction::kFunction_mix_0B0B0B;
            }
            break;
        }
        case 0x0cac3e9fu:
        {
            if (name == BuiltInName::mix_3B3B0B)
            {
                return &BuiltInFunction::kFunction_mix_3B3B0B;
            }
            break;
        }
        case 0x0cad187au:
        {
            if (name == BuiltInName::mix_3B3B3B)
            {
                return &BuiltInFunction::kFunction_mix_3B3B3B;
            }
            break;
        }
        case 0x0caf5440u:
        {
            if (name == BuiltInName::mix_1B1B1B)
            {
                return &BuiltInFunction::kFunction_mix_1B1B1B;
            }
            break;
        }
        case 0x10705009u:
        {
            if (name.beginsWith(BuiltInName::acos))
            {
                ASSERT(name.length() == 7);
                return &BuiltInFunction::kFunction_acos_3B;
            }
            break;
        }
        case 0x10714a97u:
        {
            if (name.beginsWith(BuiltInName::exp2))
            {
                ASSERT(name.length() == 7);
                return &BuiltInFunction::kFunction_exp2_3B;
            }
            break;
        }
        case 0x107153b8u:
        {
            if (name.beginsWith(BuiltInName::ceil))
            {
                ASSERT(name.length() == 7);
                return &BuiltInFunction::kFunction_ceil_2B;
            }
            break;
        }
        case 0x1071adbbu:
        {
            if (name.beginsWith(BuiltInName::sqrt))
            {
                ASSERT(name.length() == 7);
                return &BuiltInFunction::kFunction_sqrt_0B;
            }
            break;
        }
        case 0x1072f084u:
        {
            if (name.beginsWith(BuiltInName::acos))
            {
                ASSERT(name.length() == 7);
                return &BuiltInFunction::kFunction_acos_2B;
            }
            break;
        }
        case 0x1073acd0u:
        {
            if (name.beginsWith(BuiltInName::exp2))
            {
                ASSERT(name.length() == 7);
                return &BuiltInFunction::kFunction_exp2_0B;
            }
            break;
        }
        case 0x1073dcdcu:
        {
            if (name.beginsWith(BuiltInName::acos))
            {
                ASSERT(name.length() == 7);
                return &BuiltInFunction::kFunction_acos_1B;
            }
            break;
        }
        case 0x1073f35du:
        {
            if (name.beginsWith(BuiltInName::ceil))
            {
                ASSERT(name.length() == 7);
                return &BuiltInFunction::kFunction_ceil_3B;
            }
            break;
        }
        case 0x10740614u:
        {
            if (name.beginsWith(BuiltInName::sqrt))
            {
                ASSERT(name.length() == 7);
                return &BuiltInFunction::kFunction_sqrt_3B;
            }
            break;
        }
        case 0x1074db1fu:
        {
            if (name.beginsWith(BuiltInName::ceil))
            {
                ASSERT(name.length() == 7);
                return &BuiltInFunction::kFunction_ceil_0B;
            }
            break;
        }
        case 0x1075c6d4u:
        {
            if (name.beginsWith(BuiltInName::sign))
            {
                ASSERT(name.length() == 7);
                return &BuiltInFunction::kFunction_sign_1B;
            }
            break;
        }
        case 0x1075ec70u:
        {
            if (name.beginsWith(BuiltInName::atan))
            {
                ASSERT(name.length() == 7);
                return &BuiltInFunction::kFunction_atan_2B;
            }
            break;
        }
        case 0x1075f159u:
        {
            if (name.beginsWith(BuiltInName::acos))
            {
                ASSERT(name.length() == 7);
                return &BuiltInFunction::kFunction_acos_0B;
            }
            break;
        }
        case 0x10764dc5u:
        {
            if (name.beginsWith(BuiltInName::exp2))
            {
                ASSERT(name.length() == 7);
                return &BuiltInFunction::kFunction_exp2_1B;
            }
            break;
        }
        case 0x1076a689u:
        {
            if (name.beginsWith(BuiltInName::sqrt))
            {
                ASSERT(name.length() == 7);
                return &BuiltInFunction::kFunction_sqrt_2B;
            }
            break;
        }
        case 0x1076cc3bu:
        {
            if (name.beginsWith(BuiltInName::atan))
            {
                ASSERT(name.length() == 7);
                return &BuiltInFunction::kFunction_atan_1B;
            }
            break;
        }
        case 0x10778fc2u:
        {
            if (name.beginsWith(BuiltInName::sqrt))
            {
                ASSERT(name.length() == 7);
                return &BuiltInFunction::kFunction_sqrt_1B;
            }
            break;
        }
        case 0x10782b2au:
        {
            if (name.beginsWith(BuiltInName::sign))
            {
                ASSERT(name.length() == 7);
                return &BuiltInFunction::kFunction_sign_2B;
            }
            break;
        }
        case 0x1078e07eu:
        {
            if (name.beginsWith(BuiltInName::atan))
            {
                ASSERT(name.length() == 7);
                return &BuiltInFunction::kFunction_atan_0B;
            }
            break;
        }
        case 0x1079530au:
        {
            if (name.beginsWith(BuiltInName::asin))
            {
                ASSERT(name.length() == 7);
                return &BuiltInFunction::kFunction_asin_0B;
            }
            break;
        }
        case 0x1079b7b6u:
        {
            if (name.beginsWith(BuiltInName::log2))
            {
                ASSERT(name.length() == 7);
                return &BuiltInFunction::kFunction_log2_2B;
            }
            break;
        }
        case 0x107aca67u:
        {
            if (name.beginsWith(BuiltInName::sign))
            {
                ASSERT(name.length() == 7);
                return &BuiltInFunction::kFunction_sign_3B;
            }
            break;
        }
        case 0x107b4a10u:
        {
            if (name.beginsWith(BuiltInName::atan))
            {
                ASSERT(name.length() == 7);
                return &BuiltInFunction::kFunction_atan_3B;
            }
            break;
        }
        case 0x107ba052u:
        {
            if (name.beginsWith(BuiltInName::sign))
            {
                ASSERT(name.length() == 7);
                return &BuiltInFunction::kFunction_sign_0B;
            }
            break;
        }
        case 0x107bf08fu:
        {
            if (name.beginsWith(BuiltInName::asin))
            {
                ASSERT(name.length() == 7);
                return &BuiltInFunction::kFunction_asin_1B;
            }
            break;
        }
        case 0x107c1ab1u:
        {
            if (name.beginsWith(BuiltInName::log2))
            {
                ASSERT(name.length() == 7);
                return &BuiltInFunction::kFunction_log2_1B;
            }
            break;
        }
        case 0x107cde72u:
        {
            if (name.beginsWith(BuiltInName::asin))
            {
                ASSERT(name.length() == 7);
                return &BuiltInFunction::kFunction_asin_2B;
            }
            break;
        }
        case 0x107eba44u:
        {
            if (name.beginsWith(BuiltInName::log2))
            {
                ASSERT(name.length() == 7);
                return &BuiltInFunction::kFunction_log2_0B;
            }
            break;
        }
        case 0x107ef228u:
        {
            if (name.beginsWith(BuiltInName::asin))
            {
                ASSERT(name.length() == 7);
                return &BuiltInFunction::kFunction_asin_3B;
            }
            break;
        }
        case 0x107ef88eu:
        {
            if (name.beginsWith(BuiltInName::ceil))
            {
                ASSERT(name.length() == 7);
                return &BuiltInFunction::kFunction_ceil_1B;
            }
            break;
        }
        case 0x107f298bu:
        {
            if (name.beginsWith(BuiltInName::exp2))
            {
                ASSERT(name.length() == 7);
                return &BuiltInFunction::kFunction_exp2_2B;
            }
            break;
        }
        case 0x107f9207u:
        {
            if (name.beginsWith(BuiltInName::log2))
            {
                ASSERT(name.length() == 7);
                return &BuiltInFunction::kFunction_log2_3B;
            }
            break;
        }
        case 0x109056cfu:
        {
            if (name.beginsWith(BuiltInName::atan))
            {
                ASSERT(name.length() == 9);
                return &BuiltInFunction::kFunction_atan_3B3B;
            }
            break;
        }
        case 0x10922878u:
        {
            if (name.beginsWith(BuiltInName::step))
            {
                ASSERT(name.length() == 9);
                return &BuiltInFunction::kFunction_step_0B1B;
            }
            break;
        }
        case 0x10935054u:
        {
            if (name.beginsWith(BuiltInName::step))
            {
                ASSERT(name.length() == 9);
                return &BuiltInFunction::kFunction_step_2B2B;
            }
            break;
        }
        case 0x10954d55u:
        {
            if (name.beginsWith(BuiltInName::atan))
            {
                ASSERT(name.length() == 9);
                return &BuiltInFunction::kFunction_atan_1B1B;
            }
            break;
        }
        case 0x10982a8bu:
        {
            if (name.beginsWith(BuiltInName::atan))
            {
                ASSERT(name.length() == 9);
                return &BuiltInFunction::kFunction_atan_0B0B;
            }
            break;
        }
        case 0x10992111u:
        {
            if (name.beginsWith(BuiltInName::step))
            {
                ASSERT(name.length() == 9);
                return &BuiltInFunction::kFunction_step_1B1B;
            }
            break;
        }
        case 0x109cc0c6u:
        {
            if (name.beginsWith(BuiltInName::step))
            {
                ASSERT(name.length() == 9);
                return &BuiltInFunction::kFunction_step_0B0B;
            }
            break;
        }
        case 0x109cf7f1u:
        {
            if (name.beginsWith(BuiltInName::step))
            {
                ASSERT(name.length() == 9);
                return &BuiltInFunction::kFunction_step_3B3B;
            }
            break;
        }
        case 0x109daa13u:
        {
            if (name.beginsWith(BuiltInName::step))
            {
                ASSERT(name.length() == 9);
                return &BuiltInFunction::kFunction_step_0B3B;
            }
            break;
        }
        case 0x109de66cu:
        {
            if (name.beginsWith(BuiltInName::atan))
            {
                ASSERT(name.length() == 9);
                return &BuiltInFunction::kFunction_atan_2B2B;
            }
            break;
        }
        case 0x109fc6e7u:
        {
            if (name.beginsWith(BuiltInName::step))
            {
                ASSERT(name.length() == 9);
                return &BuiltInFunction::kFunction_step_0B2B;
            }
            break;
        }
        case 0x14806be8u:
        {
            if (name.beginsWith(BuiltInName::fract))
            {
                ASSERT(name.length() == 8);
                return &BuiltInFunction::kFunction_fract_0B;
            }
            break;
        }
        case 0x1482c577u:
        {
            if (name.beginsWith(BuiltInName::fract))
            {
                ASSERT(name.length() == 8);
                return &BuiltInFunction::kFunction_fract_3B;
            }
            break;
        }
        case 0x1485649au:
        {
            if (name.beginsWith(BuiltInName::fract))
            {
                ASSERT(name.length() == 8);
                return &BuiltInFunction::kFunction_fract_2B;
            }
            break;
        }
        case 0x148688dbu:
        {
            if (name.beginsWith(BuiltInName::floor))
            {
                ASSERT(name.length() == 8);
                return &BuiltInFunction::kFunction_floor_0B;
            }
            break;
        }
        case 0x148761a0u:
        {
            if (name.beginsWith(BuiltInName::floor))
            {
                ASSERT(name.length() == 8);
                return &BuiltInFunction::kFunction_floor_3B;
            }
            break;
        }
        case 0x14898596u:
        {
            if (name.beginsWith(BuiltInName::floor))
            {
                ASSERT(name.length() == 8);
                return &BuiltInFunction::kFunction_floor_2B;
            }
            break;
        }
        case 0x148be379u:
        {
            if (name.beginsWith(BuiltInName::floor))
            {
                ASSERT(name.length() == 8);
                return &BuiltInFunction::kFunction_floor_1B;
            }
            break;
        }
        case 0x148e47b2u:
        {
            if (name.beginsWith(BuiltInName::fract))
            {
                ASSERT(name.length() == 8);
                return &BuiltInFunction::kFunction_fract_1B;
            }
            break;
        }
        case 0x14a24982u:
        {
            if (name.beginsWith(BuiltInName::equal))
            {
                ASSERT(name.length() == 10);
                return &BuiltInFunction::kFunction_equal_3E3E;
            }
            break;
        }
        case 0x14a344cau:
        {
            if (name.beginsWith(BuiltInName::equal))
            {
                ASSERT(name.length() == 10);
                return &BuiltInFunction::kFunction_equal_3B3B;
            }
            break;
        }
        case 0x14a4c07au:
        {
            if (name.beginsWith(BuiltInName::cross))
            {
                ASSERT(name.length() == 10);
                return &BuiltInFunction::kFunction_cross_2B2B;
            }
            break;
        }
        case 0x14a841f7u:
        {
            if (name.beginsWith(BuiltInName::equal))
            {
                ASSERT(name.length() == 10);
                return &BuiltInFunction::kFunction_equal_2C2C;
            }
            break;
        }
        case 0x14a99557u:
        {
            if (name.beginsWith(BuiltInName::equal))
            {
                ASSERT(name.length() == 10);
                return &BuiltInFunction::kFunction_equal_2B2B;
            }
            break;
        }
        case 0x14aabf32u:
        {
            if (name.beginsWith(BuiltInName::equal))
            {
                ASSERT(name.length() == 10);
                return &BuiltInFunction::kFunction_equal_1C1C;
            }
            break;
        }
        case 0x14ad02bdu:
        {
            if (name.beginsWith(BuiltInName::equal))
            {
                ASSERT(name.length() == 10);
                return &BuiltInFunction::kFunction_equal_3C3C;
            }
            break;
        }
        case 0x14adc97au:
        {
            if (name.beginsWith(BuiltInName::equal))
            {
                ASSERT(name.length() == 10);
                return &BuiltInFunction::kFunction_equal_2E2E;
            }
            break;
        }
        case 0x14aeb3fau:
        {
            if (name.beginsWith(BuiltInName::equal))
            {
                ASSERT(name.length() == 10);
                return &BuiltInFunction::kFunction_equal_1E1E;
            }
            break;
        }
        case 0x14af6410u:
        {
            if (name.beginsWith(BuiltInName::equal))
            {
                ASSERT(name.length() == 10);
                return &BuiltInFunction::kFunction_equal_1B1B;
            }
            break;
        }
        case 0x14c33da1u:
        {
            if (name == BuiltInName::clamp_3B3B3B)
            {
                return &BuiltInFunction::kFunction_clamp_3B3B3B;
            }
            break;
        }
        case 0x14c5e296u:
        {
            if (name == BuiltInName::clamp_1B0B0B)
            {
                return &BuiltInFunction::kFunction_clamp_1B0B0B;
            }
            break;
        }
        case 0x14c6b919u:
        {
            if (name == BuiltInName::clamp_1B1B1B)
            {
                return &BuiltInFunction::kFunction_clamp_1B1B1B;
            }
            break;
        }
        case 0x14cb1025u:
        {
            if (name == BuiltInName::clamp_3B0B0B)
            {
                return &BuiltInFunction::kFunction_clamp_3B0B0B;
            }
            break;
        }
        case 0x14cbe76eu:
        {
            if (name == BuiltInName::clamp_0B0B0B)
            {
                return &BuiltInFunction::kFunction_clamp_0B0B0B;
            }
            break;
        }
        case 0x14cccae5u:
        {
            if (name == BuiltInName::clamp_2B0B0B)
            {
                return &BuiltInFunction::kFunction_clamp_2B0B0B;
            }
            break;
        }
        case 0x14cf0779u:
        {
            if (name == BuiltInName::clamp_2B2B2B)
            {
                return &BuiltInFunction::kFunction_clamp_2B2B2B;
            }
            break;
        }
        case 0x1891756bu:
        {
            if (name.beginsWith(BuiltInName::length))
            {
                ASSERT(name.length() == 9);
                return &BuiltInFunction::kFunction_length_0B;
            }
            break;
        }
        case 0x18925f20u:
        {
            if (name.beginsWith(BuiltInName::length))
            {
                ASSERT(name.length() == 9);
                return &BuiltInFunction::kFunction_length_3B;
            }
            break;
        }
        case 0x18947315u:
        {
            if (name.beginsWith(BuiltInName::length))
            {
                ASSERT(name.length() == 9);
                return &BuiltInFunction::kFunction_length_2B;
            }
            break;
        }
        case 0x189ed736u:
        {
            if (name.beginsWith(BuiltInName::length))
            {
                ASSERT(name.length() == 9);
                return &BuiltInFunction::kFunction_length_1B;
            }
            break;
        }
        case 0x1ca0fdeeu:
        {
            if (name.beginsWith(BuiltInName::degrees))
            {
                ASSERT(name.length() == 10);
                return &BuiltInFunction::kFunction_degrees_2B;
            }
            break;
        }
        case 0x1ca3192cu:
        {
            if (name.beginsWith(BuiltInName::degrees))
            {
                ASSERT(name.length() == 10);
                return &BuiltInFunction::kFunction_degrees_3B;
            }
            break;
        }
        case 0x1ca5733au:
        {
            if (name.beginsWith(BuiltInName::degrees))
            {
                ASSERT(name.length() == 10);
                return &BuiltInFunction::kFunction_degrees_0B;
            }
            break;
        }
        case 0x1ca5f5cau:
        {
            if (name.beginsWith(BuiltInName::radians))
            {
                ASSERT(name.length() == 10);
                return &BuiltInFunction::kFunction_radians_0B;
            }
            break;
        }
        case 0x1ca6dbf7u:
        {
            if (name.beginsWith(BuiltInName::radians))
            {
                ASSERT(name.length() == 10);
                return &BuiltInFunction::kFunction_radians_3B;
            }
            break;
        }
        case 0x1ca81c5eu:
        {
            if (name.beginsWith(BuiltInName::degrees))
            {
                ASSERT(name.length() == 10);
                return &BuiltInFunction::kFunction_degrees_1B;
            }
            break;
        }
        case 0x1ca8f62bu:
        {
            if (name.beginsWith(BuiltInName::radians))
            {
                ASSERT(name.length() == 10);
                return &BuiltInFunction::kFunction_radians_2B;
            }
            break;
        }
        case 0x1cab5cdcu:
        {
            if (name.beginsWith(BuiltInName::radians))
            {
                ASSERT(name.length() == 10);
                return &BuiltInFunction::kFunction_radians_1B;
            }
            break;
        }
        case 0x1cc408dau:
        {
            if (name.beginsWith(BuiltInName::reflect))
            {
                ASSERT(name.length() == 12);
                return &BuiltInFunction::kFunction_reflect_2B2B;
            }
            break;
        }
        case 0x1cc6193fu:
        {
            if (name.beginsWith(BuiltInName::reflect))
            {
                ASSERT(name.length() == 12);
                return &BuiltInFunction::kFunction_reflect_3B3B;
            }
            break;
        }
        case 0x1cc64487u:
        {
            if (name.beginsWith(BuiltInName::reflect))
            {
                ASSERT(name.length() == 12);
                return &BuiltInFunction::kFunction_reflect_0B0B;
            }
            break;
        }
        case 0x1ccca9c8u:
        {
            if (name.beginsWith(BuiltInName::reflect))
            {
                ASSERT(name.length() == 12);
                return &BuiltInFunction::kFunction_reflect_1B1B;
            }
            break;
        }
        case 0x1ce0c06au:
        {
            if (name == BuiltInName::refract_1B1B0B)
            {
                return &BuiltInFunction::kFunction_refract_1B1B0B;
            }
            break;
        }
        case 0x1ce34099u:
        {
            if (name == BuiltInName::refract_3B3B0B)
            {
                return &BuiltInFunction::kFunction_refract_3B3B0B;
            }
            break;
        }
        case 0x1ce342a6u:
        {
            if (name == BuiltInName::refract_2B2B0B)
            {
                return &BuiltInFunction::kFunction_refract_2B2B0B;
            }
            break;
        }
        case 0x1ce7660eu:
        {
            if (name == BuiltInName::refract_0B0B0B)
            {
                return &BuiltInFunction::kFunction_refract_0B0B0B;
            }
            break;
        }
        case 0x20d08e18u:
        {
            if (name.beginsWith(BuiltInName::distance))
            {
                ASSERT(name.length() == 13);
                return &BuiltInFunction::kFunction_distance_3B3B;
            }
            break;
        }
        case 0x20d1a6f5u:
        {
            if (name.beginsWith(BuiltInName::distance))
            {
                ASSERT(name.length() == 13);
                return &BuiltInFunction::kFunction_distance_2B2B;
            }
            break;
        }
        case 0x20d1d723u:
        {
            if (name.beginsWith(BuiltInName::notEqual))
            {
                ASSERT(name.length() == 13);
                return &BuiltInFunction::kFunction_notEqual_1E1E;
            }
            break;
        }
        case 0x20d2b884u:
        {
            if (name.beginsWith(BuiltInName::notEqual))
            {
                ASSERT(name.length() == 13);
                return &BuiltInFunction::kFunction_notEqual_2E2E;
            }
            break;
        }
        case 0x20d3517eu:
        {
            if (name.beginsWith(BuiltInName::lessThan))
            {
                ASSERT(name.length() == 13);
                return &BuiltInFunction::kFunction_lessThan_1B1B;
            }
            break;
        }
        case 0x20d42037u:
        {
            if (name.beginsWith(BuiltInName::lessThan))
            {
                ASSERT(name.length() == 13);
                return &BuiltInFunction::kFunction_lessThan_3C3C;
            }
            break;
        }
        case 0x20d4c66eu:
        {
            if (name.beginsWith(BuiltInName::lessThan))
            {
                ASSERT(name.length() == 13);
                return &BuiltInFunction::kFunction_lessThan_2B2B;
            }
            break;
        }
        case 0x20d4c7eeu:
        {
            if (name.beginsWith(BuiltInName::notEqual))
            {
                ASSERT(name.length() == 13);
                return &BuiltInFunction::kFunction_notEqual_2C2C;
            }
            break;
        }
        case 0x20d58403u:
        {
            if (name.beginsWith(BuiltInName::notEqual))
            {
                ASSERT(name.length() == 13);
                return &BuiltInFunction::kFunction_notEqual_1B1B;
            }
            break;
        }
        case 0x20d6513cu:
        {
            if (name.beginsWith(BuiltInName::notEqual))
            {
                ASSERT(name.length() == 13);
                return &BuiltInFunction::kFunction_notEqual_1C1C;
            }
            break;
        }
        case 0x20d69913u:
        {
            if (name.beginsWith(BuiltInName::lessThan))
            {
                ASSERT(name.length() == 13);
                return &BuiltInFunction::kFunction_lessThan_1C1C;
            }
            break;
        }
        case 0x20d71eb8u:
        {
            if (name.beginsWith(BuiltInName::notEqual))
            {
                ASSERT(name.length() == 13);
                return &BuiltInFunction::kFunction_notEqual_3B3B;
            }
            break;
        }
        case 0x20d7839eu:
        {
            if (name.beginsWith(BuiltInName::notEqual))
            {
                ASSERT(name.length() == 13);
                return &BuiltInFunction::kFunction_notEqual_3E3E;
            }
            break;
        }
        case 0x20d979cdu:
        {
            if (name.beginsWith(BuiltInName::distance))
            {
                ASSERT(name.length() == 13);
                return &BuiltInFunction::kFunction_distance_0B0B;
            }
            break;
        }
        case 0x20da61d4u:
        {
            if (name.beginsWith(BuiltInName::lessThan))
            {
                ASSERT(name.length() == 13);
                return &BuiltInFunction::kFunction_lessThan_3B3B;
            }
            break;
        }
        case 0x20db5cc6u:
        {
            if (name.beginsWith(BuiltInName::notEqual))
            {
                ASSERT(name.length() == 13);
                return &BuiltInFunction::kFunction_notEqual_2B2B;
            }
            break;
        }
        case 0x20dd5e88u:
        {
            if (name.beginsWith(BuiltInName::notEqual))
            {
                ASSERT(name.length() == 13);
                return &BuiltInFunction::kFunction_notEqual_3C3C;
            }
            break;
        }
        case 0x20df72aau:
        {
            if (name.beginsWith(BuiltInName::lessThan))
            {
                ASSERT(name.length() == 13);
                return &BuiltInFunction::kFunction_lessThan_2C2C;
            }
            break;
        }
        case 0x20dfd70fu:
        {
            if (name.beginsWith(BuiltInName::distance))
            {
                ASSERT(name.length() == 13);
                return &BuiltInFunction::kFunction_distance_1B1B;
            }
            break;
        }
        case 0x24c44c28u:
        {
            if (name.beginsWith(BuiltInName::normalize))
            {
                ASSERT(name.length() == 12);
                return &BuiltInFunction::kFunction_normalize_1B;
            }
            break;
        }
        case 0x24c6a3d6u:
        {
            if (name.beginsWith(BuiltInName::normalize))
            {
                ASSERT(name.length() == 12);
                return &BuiltInFunction::kFunction_normalize_2B;
            }
            break;
        }
        case 0x24c942bbu:
        {
            if (name.beginsWith(BuiltInName::normalize))
            {
                ASSERT(name.length() == 12);
                return &BuiltInFunction::kFunction_normalize_3B;
            }
            break;
        }
        case 0x24ca2b81u:
        {
            if (name.beginsWith(BuiltInName::normalize))
            {
                ASSERT(name.length() == 12);
                return &BuiltInFunction::kFunction_normalize_0B;
            }
            break;
        }
        case 0x29113c5du:
        {
            if (name == BuiltInName::smoothstep_0B0B1B)
            {
                return &BuiltInFunction::kFunction_smoothstep_0B0B1B;
            }
            break;
        }
        case 0x29129286u:
        {
            if (name == BuiltInName::smoothstep_1B1B1B)
            {
                return &BuiltInFunction::kFunction_smoothstep_1B1B1B;
            }
            break;
        }
        case 0x29137486u:
        {
            if (name == BuiltInName::smoothstep_3B3B3B)
            {
                return &BuiltInFunction::kFunction_smoothstep_3B3B3B;
            }
            break;
        }
        case 0x29145112u:
        {
            if (name == BuiltInName::smoothstep_2B2B2B)
            {
                return &BuiltInFunction::kFunction_smoothstep_2B2B2B;
            }
            break;
        }
        case 0x291bdbcdu:
        {
            if (name == BuiltInName::smoothstep_0B0B0B)
            {
                return &BuiltInFunction::kFunction_smoothstep_0B0B0B;
            }
            break;
        }
        case 0x291cba04u:
        {
            if (name == BuiltInName::smoothstep_0B0B3B)
            {
                return &BuiltInFunction::kFunction_smoothstep_0B0B3B;
            }
            break;
        }
        case 0x291ed9f2u:
        {
            if (name == BuiltInName::smoothstep_0B0B2B)
            {
                return &BuiltInFunction::kFunction_smoothstep_0B0B2B;
            }
            break;
        }
        case 0x2ce151f2u:
        {
            if (name.beginsWith(BuiltInName::inversesqrt))
            {
                ASSERT(name.length() == 14);
                return &BuiltInFunction::kFunction_inversesqrt_2B;
            }
            break;
        }
        case 0x2ce3bb6cu:
        {
            if (name.beginsWith(BuiltInName::inversesqrt))
            {
                ASSERT(name.length() == 14);
                return &BuiltInFunction::kFunction_inversesqrt_1B;
            }
            break;
        }
        case 0x2cee53ddu:
        {
            if (name.beginsWith(BuiltInName::inversesqrt))
            {
                ASSERT(name.length() == 14);
                return &BuiltInFunction::kFunction_inversesqrt_0B;
            }
            break;
        }
        case 0x2cef3d27u:
        {
            if (name.beginsWith(BuiltInName::inversesqrt))
            {
                ASSERT(name.length() == 14);
                return &BuiltInFunction::kFunction_inversesqrt_3B;
            }
            break;
        }
        case 0x2d02eb78u:
        {
            if (name.beginsWith(BuiltInName::greaterThan))
            {
                ASSERT(name.length() == 16);
                return &BuiltInFunction::kFunction_greaterThan_1B1B;
            }
            break;
        }
        case 0x2d0362a4u:
        {
            if (name.beginsWith(BuiltInName::greaterThan))
            {
                ASSERT(name.length() == 16);
                return &BuiltInFunction::kFunction_greaterThan_3C3C;
            }
            break;
        }
        case 0x2d052a50u:
        {
            if (name.beginsWith(BuiltInName::greaterThan))
            {
                ASSERT(name.length() == 16);
                return &BuiltInFunction::kFunction_greaterThan_3B3B;
            }
            break;
        }
        case 0x2d0a449bu:
        {
            if (name.beginsWith(BuiltInName::greaterThan))
            {
                ASSERT(name.length() == 16);
                return &BuiltInFunction::kFunction_greaterThan_2B2B;
            }
            break;
        }
        case 0x2d0b99c3u:
        {
            if (name.beginsWith(BuiltInName::greaterThan))
            {
                ASSERT(name.length() == 16);
                return &BuiltInFunction::kFunction_greaterThan_1C1C;
            }
            break;
        }
        case 0x2d0ba1a0u:
        {
            if (name.beginsWith(BuiltInName::greaterThan))
            {
                ASSERT(name.length() == 16);
                return &BuiltInFunction::kFunction_greaterThan_2C2C;
            }
            break;
        }
        case 0x2d216fbcu:
        {
            if (name == BuiltInName::faceforward_3B3B3B)
            {
                return &BuiltInFunction::kFunction_faceforward_3B3B3B;
            }
            break;
        }
        case 0x2d23a287u:
        {
            if (name == BuiltInName::faceforward_1B1B1B)
            {
                return &BuiltInFunction::kFunction_faceforward_1B1B1B;
            }
            break;
        }
        case 0x2d2d4250u:
        {
            if (name == BuiltInName::faceforward_2B2B2B)
            {
                return &BuiltInFunction::kFunction_faceforward_2B2B2B;
            }
            break;
        }
        case 0x2d2fa1bau:
        {
            if (name == BuiltInName::faceforward_0B0B0B)
            {
                return &BuiltInFunction::kFunction_faceforward_0B0B0B;
            }
            break;
        }
        case 0x352938d0u:
        {
            if (name.beginsWith(BuiltInName::lessThanEqual))
            {
                ASSERT(name.length() == 18);
                return &BuiltInFunction::kFunction_lessThanEqual_2C2C;
            }
            break;
        }
        case 0x35296680u:
        {
            if (name.beginsWith(BuiltInName::lessThanEqual))
            {
                ASSERT(name.length() == 18);
                return &BuiltInFunction::kFunction_lessThanEqual_3C3C;
            }
            break;
        }
        case 0x352bbb54u:
        {
            if (name.beginsWith(BuiltInName::lessThanEqual))
            {
                ASSERT(name.length() == 18);
                return &BuiltInFunction::kFunction_lessThanEqual_1B1B;
            }
            break;
        }
        case 0x352cacb6u:
        {
            if (name.beginsWith(BuiltInName::lessThanEqual))
            {
                ASSERT(name.length() == 18);
                return &BuiltInFunction::kFunction_lessThanEqual_3B3B;
            }
            break;
        }
        case 0x352eff39u:
        {
            if (name.beginsWith(BuiltInName::lessThanEqual))
            {
                ASSERT(name.length() == 18);
                return &BuiltInFunction::kFunction_lessThanEqual_1C1C;
            }
            break;
        }
        case 0x352f913eu:
        {
            if (name.beginsWith(BuiltInName::lessThanEqual))
            {
                ASSERT(name.length() == 18);
                return &BuiltInFunction::kFunction_lessThanEqual_2B2B;
            }
            break;
        }
        case 0x39325152u:
        {
            if (name.beginsWith(BuiltInName::matrixCompMult))
            {
                ASSERT(name.length() == 19);
                return &BuiltInFunction::kFunction_matrixCompMult_5B5B;
            }
            break;
        }
        case 0x393640c0u:
        {
            if (name.beginsWith(BuiltInName::matrixCompMult))
            {
                ASSERT(name.length() == 19);
                return &BuiltInFunction::kFunction_matrixCompMult_FBFB;
            }
            break;
        }
        case 0x393ce233u:
        {
            if (name.beginsWith(BuiltInName::matrixCompMult))
            {
                ASSERT(name.length() == 19);
                return &BuiltInFunction::kFunction_matrixCompMult_ABAB;
            }
            break;
        }
        case 0x41563f06u:
        {
            if (name.beginsWith(BuiltInName::greaterThanEqual))
            {
                ASSERT(name.length() == 21);
                return &BuiltInFunction::kFunction_greaterThanEqual_2C2C;
            }
            break;
        }
        case 0x41598af3u:
        {
            if (name.beginsWith(BuiltInName::greaterThanEqual))
            {
                ASSERT(name.length() == 21);
                return &BuiltInFunction::kFunction_greaterThanEqual_1B1B;
            }
            break;
        }
        case 0x415a0237u:
        {
            if (name.beginsWith(BuiltInName::greaterThanEqual))
            {
                ASSERT(name.length() == 21);
                return &BuiltInFunction::kFunction_greaterThanEqual_3C3C;
            }
            break;
        }
        case 0x415bc9cbu:
        {
            if (name.beginsWith(BuiltInName::greaterThanEqual))
            {
                ASSERT(name.length() == 21);
                return &BuiltInFunction::kFunction_greaterThanEqual_3B3B;
            }
            break;
        }
        case 0x415cecbdu:
        {
            if (name.beginsWith(BuiltInName::greaterThanEqual))
            {
                ASSERT(name.length() == 21);
                return &BuiltInFunction::kFunction_greaterThanEqual_2B2B;
            }
            break;
        }
        case 0x415e3912u:
        {
            if (name.beginsWith(BuiltInName::greaterThanEqual))
            {
                ASSERT(name.length() == 21);
                return &BuiltInFunction::kFunction_greaterThanEqual_1C1C;
            }
            break;
        }
        case 0xfcd5c51au:
        {
            if (name == BuiltInName::gl_DepthRange)
            {
                return mVar_gl_DepthRange;
            }
            break;
        }
        case 0xfd1554f1u:
        {
            if (name == BuiltInName::gl_MaxDrawBuffers)
            {
                return mVar_gl_MaxDrawBuffers;
            }
            break;
        }
        case 0xfd35ab48u:
        {
            if (name == BuiltInName::gl_MaxVertexAttribs)
            {
                return mVar_gl_MaxVertexAttribs;
            }
            break;
        }
        case 0xfd756b95u:
        {
            if (name == BuiltInName::gl_MaxTextureImageUnits)
            {
                return mVar_gl_MaxTextureImageUnits;
            }
            break;
        }
        case 0xfd7dc4d6u:
        {
            if (name == BuiltInName::gl_DepthRangeParameters)
            {
                return mVar_gl_DepthRangeParameters;
            }
            break;
        }
        case 0xfda6bc61u:
        {
            if (name == BuiltInName::gl_MaxVertexUniformVectors)
            {
                return mVar_gl_MaxVertexUniformVectors;
            }
            break;
        }
        case 0xfdc89746u:
        {
            if (name == BuiltInName::gl_MaxFragmentUniformVectors)
            {
                return mVar_gl_MaxFragmentUniformVectors;
            }
            break;
        }
        case 0xfdd42165u:
        {
            if (name == BuiltInName::gl_MaxVertexTextureImageUnits)
            {
                return mVar_gl_MaxVertexTextureImageUnits;
            }
            break;
        }
        case 0xfde3d71cu:
        {
            if (name == BuiltInName::gl_MaxDualSourceDrawBuffersEXT)
            {
                return mVar_gl_MaxDualSourceDrawBuffersEXT;
            }
            break;
        }
        case 0xfdf08397u:
        {
            if (name == BuiltInName::gl_MaxCombinedTextureImageUnits)
            {
                return mVar_gl_MaxCombinedTextureImageUnits;
            }
            break;
        }
    }
    if (mShaderType == GL_FRAGMENT_SHADER)
    {
        switch (nameHash)
        {
            case 0xfcc997bcu:
            {
                if (name == BuiltInName::gl_FragCoord)
                {
                    return &BuiltInVariable::kVar_gl_FragCoord;
                }
                break;
            }
            case 0xfcd86bd1u:
            {
                if (name == BuiltInName::gl_PointCoord)
                {
                    return &BuiltInVariable::kVar_gl_PointCoord;
                }
                break;
            }
            case 0xfce60278u:
            {
                if (name == BuiltInName::gl_FrontFacing)
                {
                    return &BuiltInVariable::kVar_gl_FrontFacing;
                }
                break;
            }
        }
    }
    if (mShaderType == GL_VERTEX_SHADER)
    {
        switch (nameHash)
        {
            case 0xfcb021abu:
            {
                if (name == BuiltInName::gl_Position)
                {
                    return &BuiltInVariable::kVar_gl_Position;
                }
                break;
            }
            case 0xfcc70d97u:
            {
                if (name == BuiltInName::gl_PointSize)
                {
                    return &BuiltInVariable::kVar_gl_PointSize;
                }
                break;
            }
        }
    }
    return nullptr;
}

const UnmangledBuiltIn *TSymbolTable::getUnmangledBuiltInForShaderVersion(
    const ImmutableString &name,
    int shaderVersion)
{
    if (name.length() > 26)
    {
        return nullptr;
    }
    uint32_t nameHash = name.mangledNameHash();
    if (shaderVersion >= 310)
    {
        switch (nameHash)
        {
            case 0xfc58c75fu:
            {
                if (name == BuiltInName::ldexp)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfc5a3e39u:
            {
                if (name == BuiltInName::frexp)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfc731d38u:
            {
                if (name == BuiltInName::findLSB)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfc77b8eeu:
            {
                if (name == BuiltInName::findMSB)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfc8255f7u:
            {
                if (name == BuiltInName::bitCount)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfc8d2e21u:
            {
                if (name == BuiltInName::atomicOr)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfc902522u:
            {
                if (name == BuiltInName::atomicAdd)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfc911c23u:
            {
                if (name == BuiltInName::atomicMax)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfc923b7bu:
            {
                if (name == BuiltInName::atomicMin)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfc949f9au:
            {
                if (name == BuiltInName::imageLoad)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfc96eee8u:
            {
                if (name == BuiltInName::imageSize)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfc9bf930u:
            {
                if (name == BuiltInName::atomicXor)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfc9ca01au:
            {
                if (name == BuiltInName::uaddCarry)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfc9e6576u:
            {
                if (name == BuiltInName::atomicAnd)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfca448b0u:
            {
                if (name == BuiltInName::texelFetch)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfca4fe73u:
            {
                if (name == BuiltInName::imageStore)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfcab8d28u:
            {
                if (name == BuiltInName::usubBorrow)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfcc4dd14u:
            {
                if (name == BuiltInName::packSnorm4x8)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfcc55991u:
            {
                if (name == BuiltInName::imulExtended)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfccaeea7u:
            {
                if (name == BuiltInName::packUnorm4x8)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfcceb6ecu:
            {
                if (name == BuiltInName::umulExtended)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfcd38128u:
            {
                if (name == BuiltInName::memoryBarrier)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfcda3830u:
            {
                if (name == BuiltInName::textureGather)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfcdc11a6u:
            {
                if (name == BuiltInName::atomicCounter)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfce33074u:
            {
                if (name == BuiltInName::unpackUnorm4x8)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfce7c191u:
            {
                if (name == BuiltInName::unpackSnorm4x8)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfceb9105u:
            {
                if (name == BuiltInName::atomicExchange)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfcef39c9u:
            {
                if (name == BuiltInName::atomicCompSwap)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfcef8089u:
            {
                if (name == BuiltInName::bitfieldInsert)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfcfe5ecau:
            {
                if (name == BuiltInName::bitfieldReverse)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfcff5885u:
            {
                if (name == BuiltInName::bitfieldExtract)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfd24de50u:
            {
                if (name == BuiltInName::memoryBarrierImage)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfd36fc39u:
            {
                if (name == BuiltInName::memoryBarrierBuffer)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfd3b2cf3u:
            {
                if (name == BuiltInName::textureGatherOffset)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfd6666b0u:
            {
                if (name == BuiltInName::atomicCounterIncrement)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfd6d6946u:
            {
                if (name == BuiltInName::atomicCounterDecrement)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfdab512bu:
            {
                if (name == BuiltInName::memoryBarrierAtomicCounter)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
        }
        if (mShaderType == GL_COMPUTE_SHADER)
        {
            switch (nameHash)
            {
                case 0xfc73d933u:
                {
                    if (name == BuiltInName::barrier)
                    {
                        return &UnmangledBuiltIns::UNDEFINED;
                    }
                    break;
                }
                case 0xfd27aec1u:
                {
                    if (name == BuiltInName::groupMemoryBarrier)
                    {
                        return &UnmangledBuiltIns::UNDEFINED;
                    }
                    break;
                }
                case 0xfd3e8c1eu:
                {
                    if (name == BuiltInName::memoryBarrierShared)
                    {
                        return &UnmangledBuiltIns::UNDEFINED;
                    }
                    break;
                }
            }
        }
        if (mShaderType == GL_GEOMETRY_SHADER_EXT)
        {
            switch (nameHash)
            {
                case 0xfcab5e6cu:
                {
                    if (name == BuiltInName::EmitVertex)
                    {
                        return &UnmangledBuiltIns::EXT_geometry_shader;
                    }
                    break;
                }
                case 0xfccb436cu:
                {
                    if (name == BuiltInName::EndPrimitive)
                    {
                        return &UnmangledBuiltIns::EXT_geometry_shader;
                    }
                    break;
                }
            }
        }
    }
    if (shaderVersion >= 300)
    {
        switch (nameHash)
        {
            case 0xfc32a6bbu:
            {
                if (name == BuiltInName::abs)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfc3c9da3u:
            {
                if (name == BuiltInName::min)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfc3d7394u:
            {
                if (name == BuiltInName::mix)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfc3d7937u:
            {
                if (name == BuiltInName::max)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfc409755u:
            {
                if (name == BuiltInName::tanh)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfc40c06cu:
            {
                if (name == BuiltInName::sign)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfc41051au:
            {
                if (name == BuiltInName::sinh)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfc4eb892u:
            {
                if (name == BuiltInName::modf)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfc4f43d8u:
            {
                if (name == BuiltInName::cosh)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfc507200u:
            {
                if (name == BuiltInName::atanh)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfc526b19u:
            {
                if (name == BuiltInName::isinf)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfc52ffbfu:
            {
                if (name == BuiltInName::equal)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfc54f285u:
            {
                if (name == BuiltInName::round)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfc5a8e53u:
            {
                if (name == BuiltInName::clamp)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfc5b1b56u:
            {
                if (name == BuiltInName::isnan)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfc5ba553u:
            {
                if (name == BuiltInName::asinh)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfc5d5403u:
            {
                if (name == BuiltInName::trunc)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfc5ed779u:
            {
                if (name == BuiltInName::acosh)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfc73ceb2u:
            {
                if (name == BuiltInName::texture)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfc7b229cu:
            {
                if (name == BuiltInName::inverse)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfc805a04u:
            {
                if (name == BuiltInName::lessThan)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfc8243e5u:
            {
                if (name == BuiltInName::notEqual)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfc9a471eu:
            {
                if (name == BuiltInName::roundEven)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfc9a638fu:
            {
                if (name == BuiltInName::rgb_2_yuv)
                {
                    return &UnmangledBuiltIns::EXT_YUV_target;
                }
                break;
            }
            case 0xfc9c00d8u:
            {
                if (name == BuiltInName::transpose)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfc9c77bau:
            {
                if (name == BuiltInName::yuv_2_rgb)
                {
                    return &UnmangledBuiltIns::EXT_YUV_target;
                }
                break;
            }
            case 0xfca02c0du:
            {
                if (name == BuiltInName::textureLod)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfca448b0u:
            {
                if (name == BuiltInName::texelFetch)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfcb04a9au:
            {
                if (name == BuiltInName::greaterThan)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfcb3343au:
            {
                if (name == BuiltInName::textureGrad)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfcb76123u:
            {
                if (name == BuiltInName::determinant)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfcb94477u:
            {
                if (name == BuiltInName::textureProj)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfcbc7b6au:
            {
                if (name == BuiltInName::textureSize)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfcc5b90eu:
            {
                if (name == BuiltInName::packHalf2x16)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfcc8ffcau:
            {
                if (name == BuiltInName::outerProduct)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfcd04816u:
            {
                if (name == BuiltInName::lessThanEqual)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfcd43a65u:
            {
                if (name == BuiltInName::packSnorm2x16)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfcd6f27cu:
            {
                if (name == BuiltInName::packUnorm2x16)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfcd88b5eu:
            {
                if (name == BuiltInName::textureOffset)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfce2872eu:
            {
                if (name == BuiltInName::unpackHalf2x16)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfceb196au:
            {
                if (name == BuiltInName::floatBitsToInt)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfceb71d9u:
            {
                if (name == BuiltInName::textureProjLod)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfced5e20u:
            {
                if (name == BuiltInName::matrixCompMult)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfcefcb16u:
            {
                if (name == BuiltInName::intBitsToFloat)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfcf250f9u:
            {
                if (name == BuiltInName::unpackUnorm2x16)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfcf6ea30u:
            {
                if (name == BuiltInName::unpackSnorm2x16)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfcf7b1b6u:
            {
                if (name == BuiltInName::textureProjGrad)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfcfc2381u:
            {
                if (name == BuiltInName::uintBitsToFloat)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfcfc86fdu:
            {
                if (name == BuiltInName::floatBitsToUint)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfd012f28u:
            {
                if (name == BuiltInName::texelFetchOffset)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfd0394b4u:
            {
                if (name == BuiltInName::textureLodOffset)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfd0ed0feu:
            {
                if (name == BuiltInName::greaterThanEqual)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfd16b09du:
            {
                if (name == BuiltInName::textureGradOffset)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfd1a5636u:
            {
                if (name == BuiltInName::textureProjOffset)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfd4154feu:
            {
                if (name == BuiltInName::textureProjLodOffset)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfd58b966u:
            {
                if (name == BuiltInName::textureProjGradOffset)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
        }
        if (mShaderType == GL_FRAGMENT_SHADER)
        {
            switch (nameHash)
            {
                case 0xfc4c70a1u:
                {
                    if (name == BuiltInName::dFdy)
                    {
                        return &UnmangledBuiltIns::UNDEFINED;
                    }
                    break;
                }
                case 0xfc4c82d2u:
                {
                    if (name == BuiltInName::dFdx)
                    {
                        return &UnmangledBuiltIns::UNDEFINED;
                    }
                    break;
                }
                case 0xfc64b336u:
                {
                    if (name == BuiltInName::fwidth)
                    {
                        return &UnmangledBuiltIns::UNDEFINED;
                    }
                    break;
                }
            }
        }
    }
    if (shaderVersion == 100)
    {
        switch (nameHash)
        {
            case 0xfc918adeu:
            {
                if (name == BuiltInName::texture2D)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfcbfe6dbu:
            {
                if (name == BuiltInName::textureCube)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfcd3dbbbu:
            {
                if (name == BuiltInName::texture2DRect)
                {
                    return &UnmangledBuiltIns::ARB_texture_rectangle;
                }
                break;
            }
            case 0xfcdc75d1u:
            {
                if (name == BuiltInName::texture2DProj)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0xfd0d1e0fu:
            {
                if (name == BuiltInName::texture2DGradEXT)
                {
                    return &UnmangledBuiltIns::EXT_shader_texture_lod;
                }
                break;
            }
            case 0xfd16d4edu:
            {
                if (name == BuiltInName::texture2DRectProj)
                {
                    return &UnmangledBuiltIns::ARB_texture_rectangle;
                }
                break;
            }
            case 0xfd21d313u:
            {
                if (name == BuiltInName::textureCubeGradEXT)
                {
                    return &UnmangledBuiltIns::EXT_shader_texture_lod;
                }
                break;
            }
            case 0xfd440d8au:
            {
                if (name == BuiltInName::texture2DProjGradEXT)
                {
                    return &UnmangledBuiltIns::EXT_shader_texture_lod;
                }
                break;
            }
        }
        if (mShaderType == GL_FRAGMENT_SHADER)
        {
            switch (nameHash)
            {
                case 0xfc4c70a1u:
                {
                    if (name == BuiltInName::dFdyExt)
                    {
                        return &UnmangledBuiltIns::OES_standard_derivatives;
                    }
                    break;
                }
                case 0xfc4c82d2u:
                {
                    if (name == BuiltInName::dFdxExt)
                    {
                        return &UnmangledBuiltIns::OES_standard_derivatives;
                    }
                    break;
                }
                case 0xfc64b336u:
                {
                    if (name == BuiltInName::fwidthExt)
                    {
                        return &UnmangledBuiltIns::OES_standard_derivatives;
                    }
                    break;
                }
                case 0xfcf71bb4u:
                {
                    if (name == BuiltInName::texture2DLodEXT)
                    {
                        return &UnmangledBuiltIns::EXT_shader_texture_lod;
                    }
                    break;
                }
                case 0xfd17391cu:
                {
                    if (name == BuiltInName::textureCubeLodEXT)
                    {
                        return &UnmangledBuiltIns::EXT_shader_texture_lod;
                    }
                    break;
                }
                case 0xfd3ba159u:
                {
                    if (name == BuiltInName::texture2DProjLodEXT)
                    {
                        return &UnmangledBuiltIns::EXT_shader_texture_lod;
                    }
                    break;
                }
            }
        }
        if (mShaderType == GL_VERTEX_SHADER)
        {
            switch (nameHash)
            {
                case 0xfccfa39eu:
                {
                    if (name == BuiltInName::texture2DLod)
                    {
                        return &UnmangledBuiltIns::UNDEFINED;
                    }
                    break;
                }
                case 0xfceb31cfu:
                {
                    if (name == BuiltInName::textureCubeLod)
                    {
                        return &UnmangledBuiltIns::UNDEFINED;
                    }
                    break;
                }
                case 0xfd030225u:
                {
                    if (name == BuiltInName::texture2DProjLod)
                    {
                        return &UnmangledBuiltIns::UNDEFINED;
                    }
                    break;
                }
            }
        }
    }
    switch (nameHash)
    {
        case 0xfc313990u:
        {
            if (name == BuiltInName::all)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0xfc329793u:
        {
            if (name == BuiltInName::notFunc)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0xfc32a6bbu:
        {
            if (name == BuiltInName::abs)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0xfc32c2d2u:
        {
            if (name == BuiltInName::any)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0xfc33f444u:
        {
            if (name == BuiltInName::log)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0xfc3589e3u:
        {
            if (name == BuiltInName::pow)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0xfc372d40u:
        {
            if (name == BuiltInName::exp)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0xfc39cbebu:
        {
            if (name == BuiltInName::tan)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0xfc3c9da3u:
        {
            if (name == BuiltInName::min)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0xfc3d39a9u:
        {
            if (name == BuiltInName::dot)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0xfc3d7394u:
        {
            if (name == BuiltInName::mix)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0xfc3d7937u:
        {
            if (name == BuiltInName::max)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0xfc3dfb64u:
        {
            if (name == BuiltInName::mod)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0xfc3e094fu:
        {
            if (name == BuiltInName::sin)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0xfc3fba42u:
        {
            if (name == BuiltInName::cos)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0xfc406d33u:
        {
            if (name == BuiltInName::atan)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0xfc40c06cu:
        {
            if (name == BuiltInName::sign)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0xfc410ee8u:
        {
            if (name == BuiltInName::log2)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0xfc43cf02u:
        {
            if (name == BuiltInName::acos)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0xfc462c46u:
        {
            if (name == BuiltInName::ceil)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0xfc47d52cu:
        {
            if (name == BuiltInName::sqrt)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0xfc496f84u:
        {
            if (name == BuiltInName::exp2)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0xfc4c7e4eu:
        {
            if (name == BuiltInName::step)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0xfc4fe441u:
        {
            if (name == BuiltInName::asin)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0xfc5297cau:
        {
            if (name == BuiltInName::cross)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0xfc52ffbfu:
        {
            if (name == BuiltInName::equal)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0xfc5a8e53u:
        {
            if (name == BuiltInName::clamp)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0xfc5b826du:
        {
            if (name == BuiltInName::floor)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0xfc5ee54eu:
        {
            if (name == BuiltInName::fract)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0xfc683b16u:
        {
            if (name == BuiltInName::length)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0xfc70669bu:
        {
            if (name == BuiltInName::refract)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0xfc785144u:
        {
            if (name == BuiltInName::radians)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0xfc7924ddu:
        {
            if (name == BuiltInName::reflect)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0xfc7af7aau:
        {
            if (name == BuiltInName::degrees)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0xfc805a04u:
        {
            if (name == BuiltInName::lessThan)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0xfc8243e5u:
        {
            if (name == BuiltInName::notEqual)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0xfc82ef53u:
        {
            if (name == BuiltInName::distance)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0xfc9ceefeu:
        {
            if (name == BuiltInName::normalize)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0xfca95719u:
        {
            if (name == BuiltInName::smoothstep)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0xfcb04a9au:
        {
            if (name == BuiltInName::greaterThan)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0xfcb5f2b4u:
        {
            if (name == BuiltInName::faceforward)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0xfcbe83f1u:
        {
            if (name == BuiltInName::inversesqrt)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0xfcd04816u:
        {
            if (name == BuiltInName::lessThanEqual)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0xfced5e20u:
        {
            if (name == BuiltInName::matrixCompMult)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0xfd0ed0feu:
        {
            if (name == BuiltInName::greaterThanEqual)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
    }
    return nullptr;
}

}  // namespace sh
