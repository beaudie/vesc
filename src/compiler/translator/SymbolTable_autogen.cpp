// GENERATED FILE - DO NOT EDIT.
// Generated by gen_builtin_symbols.py using data from builtin_variables.json and
// builtin_function_declarations.txt.
//
// Copyright 2019 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// SymbolTable_autogen.cpp:
//   Compile-time initialized built-ins.

#include "compiler/translator/SymbolTable.h"

#include "angle_gl.h"
#include "compiler/translator/ImmutableString.h"
#include "compiler/translator/StaticType.h"
#include "compiler/translator/Symbol.h"
#include "compiler/translator/SymbolTable.h"
#include "compiler/translator/tree_util/BuiltIn_autogen.h"

namespace sh
{

// Since some of the BuiltInId declarations are used outside of constexpr expressions, we need to
// have these definitions without an initializer. C++17 should eventually remove the need for this.
constexpr const TSymbolUniqueId BuiltInId::radians_Float1;
constexpr const TSymbolUniqueId BuiltInId::radians_Float2;
constexpr const TSymbolUniqueId BuiltInId::radians_Float3;
constexpr const TSymbolUniqueId BuiltInId::radians_Float4;
constexpr const TSymbolUniqueId BuiltInId::degrees_Float1;
constexpr const TSymbolUniqueId BuiltInId::degrees_Float2;
constexpr const TSymbolUniqueId BuiltInId::degrees_Float3;
constexpr const TSymbolUniqueId BuiltInId::degrees_Float4;
constexpr const TSymbolUniqueId BuiltInId::sin_Float1;
constexpr const TSymbolUniqueId BuiltInId::sin_Float2;
constexpr const TSymbolUniqueId BuiltInId::sin_Float3;
constexpr const TSymbolUniqueId BuiltInId::sin_Float4;
constexpr const TSymbolUniqueId BuiltInId::cos_Float1;
constexpr const TSymbolUniqueId BuiltInId::cos_Float2;
constexpr const TSymbolUniqueId BuiltInId::cos_Float3;
constexpr const TSymbolUniqueId BuiltInId::cos_Float4;
constexpr const TSymbolUniqueId BuiltInId::tan_Float1;
constexpr const TSymbolUniqueId BuiltInId::tan_Float2;
constexpr const TSymbolUniqueId BuiltInId::tan_Float3;
constexpr const TSymbolUniqueId BuiltInId::tan_Float4;
constexpr const TSymbolUniqueId BuiltInId::asin_Float1;
constexpr const TSymbolUniqueId BuiltInId::asin_Float2;
constexpr const TSymbolUniqueId BuiltInId::asin_Float3;
constexpr const TSymbolUniqueId BuiltInId::asin_Float4;
constexpr const TSymbolUniqueId BuiltInId::acos_Float1;
constexpr const TSymbolUniqueId BuiltInId::acos_Float2;
constexpr const TSymbolUniqueId BuiltInId::acos_Float3;
constexpr const TSymbolUniqueId BuiltInId::acos_Float4;
constexpr const TSymbolUniqueId BuiltInId::atan_Float1_Float1;
constexpr const TSymbolUniqueId BuiltInId::atan_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::atan_Float3_Float3;
constexpr const TSymbolUniqueId BuiltInId::atan_Float4_Float4;
constexpr const TSymbolUniqueId BuiltInId::atan_Float1;
constexpr const TSymbolUniqueId BuiltInId::atan_Float2;
constexpr const TSymbolUniqueId BuiltInId::atan_Float3;
constexpr const TSymbolUniqueId BuiltInId::atan_Float4;
constexpr const TSymbolUniqueId BuiltInId::sinh_Float1;
constexpr const TSymbolUniqueId BuiltInId::sinh_Float2;
constexpr const TSymbolUniqueId BuiltInId::sinh_Float3;
constexpr const TSymbolUniqueId BuiltInId::sinh_Float4;
constexpr const TSymbolUniqueId BuiltInId::cosh_Float1;
constexpr const TSymbolUniqueId BuiltInId::cosh_Float2;
constexpr const TSymbolUniqueId BuiltInId::cosh_Float3;
constexpr const TSymbolUniqueId BuiltInId::cosh_Float4;
constexpr const TSymbolUniqueId BuiltInId::tanh_Float1;
constexpr const TSymbolUniqueId BuiltInId::tanh_Float2;
constexpr const TSymbolUniqueId BuiltInId::tanh_Float3;
constexpr const TSymbolUniqueId BuiltInId::tanh_Float4;
constexpr const TSymbolUniqueId BuiltInId::asinh_Float1;
constexpr const TSymbolUniqueId BuiltInId::asinh_Float2;
constexpr const TSymbolUniqueId BuiltInId::asinh_Float3;
constexpr const TSymbolUniqueId BuiltInId::asinh_Float4;
constexpr const TSymbolUniqueId BuiltInId::acosh_Float1;
constexpr const TSymbolUniqueId BuiltInId::acosh_Float2;
constexpr const TSymbolUniqueId BuiltInId::acosh_Float3;
constexpr const TSymbolUniqueId BuiltInId::acosh_Float4;
constexpr const TSymbolUniqueId BuiltInId::atanh_Float1;
constexpr const TSymbolUniqueId BuiltInId::atanh_Float2;
constexpr const TSymbolUniqueId BuiltInId::atanh_Float3;
constexpr const TSymbolUniqueId BuiltInId::atanh_Float4;
constexpr const TSymbolUniqueId BuiltInId::pow_Float1_Float1;
constexpr const TSymbolUniqueId BuiltInId::pow_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::pow_Float3_Float3;
constexpr const TSymbolUniqueId BuiltInId::pow_Float4_Float4;
constexpr const TSymbolUniqueId BuiltInId::exp_Float1;
constexpr const TSymbolUniqueId BuiltInId::exp_Float2;
constexpr const TSymbolUniqueId BuiltInId::exp_Float3;
constexpr const TSymbolUniqueId BuiltInId::exp_Float4;
constexpr const TSymbolUniqueId BuiltInId::log_Float1;
constexpr const TSymbolUniqueId BuiltInId::log_Float2;
constexpr const TSymbolUniqueId BuiltInId::log_Float3;
constexpr const TSymbolUniqueId BuiltInId::log_Float4;
constexpr const TSymbolUniqueId BuiltInId::exp2_Float1;
constexpr const TSymbolUniqueId BuiltInId::exp2_Float2;
constexpr const TSymbolUniqueId BuiltInId::exp2_Float3;
constexpr const TSymbolUniqueId BuiltInId::exp2_Float4;
constexpr const TSymbolUniqueId BuiltInId::log2_Float1;
constexpr const TSymbolUniqueId BuiltInId::log2_Float2;
constexpr const TSymbolUniqueId BuiltInId::log2_Float3;
constexpr const TSymbolUniqueId BuiltInId::log2_Float4;
constexpr const TSymbolUniqueId BuiltInId::sqrt_Float1;
constexpr const TSymbolUniqueId BuiltInId::sqrt_Float2;
constexpr const TSymbolUniqueId BuiltInId::sqrt_Float3;
constexpr const TSymbolUniqueId BuiltInId::sqrt_Float4;
constexpr const TSymbolUniqueId BuiltInId::inversesqrt_Float1;
constexpr const TSymbolUniqueId BuiltInId::inversesqrt_Float2;
constexpr const TSymbolUniqueId BuiltInId::inversesqrt_Float3;
constexpr const TSymbolUniqueId BuiltInId::inversesqrt_Float4;
constexpr const TSymbolUniqueId BuiltInId::abs_Float1;
constexpr const TSymbolUniqueId BuiltInId::abs_Float2;
constexpr const TSymbolUniqueId BuiltInId::abs_Float3;
constexpr const TSymbolUniqueId BuiltInId::abs_Float4;
constexpr const TSymbolUniqueId BuiltInId::abs_Int1;
constexpr const TSymbolUniqueId BuiltInId::abs_Int2;
constexpr const TSymbolUniqueId BuiltInId::abs_Int3;
constexpr const TSymbolUniqueId BuiltInId::abs_Int4;
constexpr const TSymbolUniqueId BuiltInId::sign_Float1;
constexpr const TSymbolUniqueId BuiltInId::sign_Float2;
constexpr const TSymbolUniqueId BuiltInId::sign_Float3;
constexpr const TSymbolUniqueId BuiltInId::sign_Float4;
constexpr const TSymbolUniqueId BuiltInId::sign_Int1;
constexpr const TSymbolUniqueId BuiltInId::sign_Int2;
constexpr const TSymbolUniqueId BuiltInId::sign_Int3;
constexpr const TSymbolUniqueId BuiltInId::sign_Int4;
constexpr const TSymbolUniqueId BuiltInId::floor_Float1;
constexpr const TSymbolUniqueId BuiltInId::floor_Float2;
constexpr const TSymbolUniqueId BuiltInId::floor_Float3;
constexpr const TSymbolUniqueId BuiltInId::floor_Float4;
constexpr const TSymbolUniqueId BuiltInId::trunc_Float1;
constexpr const TSymbolUniqueId BuiltInId::trunc_Float2;
constexpr const TSymbolUniqueId BuiltInId::trunc_Float3;
constexpr const TSymbolUniqueId BuiltInId::trunc_Float4;
constexpr const TSymbolUniqueId BuiltInId::round_Float1;
constexpr const TSymbolUniqueId BuiltInId::round_Float2;
constexpr const TSymbolUniqueId BuiltInId::round_Float3;
constexpr const TSymbolUniqueId BuiltInId::round_Float4;
constexpr const TSymbolUniqueId BuiltInId::roundEven_Float1;
constexpr const TSymbolUniqueId BuiltInId::roundEven_Float2;
constexpr const TSymbolUniqueId BuiltInId::roundEven_Float3;
constexpr const TSymbolUniqueId BuiltInId::roundEven_Float4;
constexpr const TSymbolUniqueId BuiltInId::ceil_Float1;
constexpr const TSymbolUniqueId BuiltInId::ceil_Float2;
constexpr const TSymbolUniqueId BuiltInId::ceil_Float3;
constexpr const TSymbolUniqueId BuiltInId::ceil_Float4;
constexpr const TSymbolUniqueId BuiltInId::fract_Float1;
constexpr const TSymbolUniqueId BuiltInId::fract_Float2;
constexpr const TSymbolUniqueId BuiltInId::fract_Float3;
constexpr const TSymbolUniqueId BuiltInId::fract_Float4;
constexpr const TSymbolUniqueId BuiltInId::mod_Float1_Float1;
constexpr const TSymbolUniqueId BuiltInId::mod_Float2_Float1;
constexpr const TSymbolUniqueId BuiltInId::mod_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::mod_Float4_Float1;
constexpr const TSymbolUniqueId BuiltInId::mod_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::mod_Float3_Float3;
constexpr const TSymbolUniqueId BuiltInId::mod_Float4_Float4;
constexpr const TSymbolUniqueId BuiltInId::min_Float1_Float1;
constexpr const TSymbolUniqueId BuiltInId::min_Float2_Float1;
constexpr const TSymbolUniqueId BuiltInId::min_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::min_Float4_Float1;
constexpr const TSymbolUniqueId BuiltInId::min_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::min_Float3_Float3;
constexpr const TSymbolUniqueId BuiltInId::min_Float4_Float4;
constexpr const TSymbolUniqueId BuiltInId::min_Int1_Int1;
constexpr const TSymbolUniqueId BuiltInId::min_Int2_Int2;
constexpr const TSymbolUniqueId BuiltInId::min_Int3_Int3;
constexpr const TSymbolUniqueId BuiltInId::min_Int4_Int4;
constexpr const TSymbolUniqueId BuiltInId::min_Int2_Int1;
constexpr const TSymbolUniqueId BuiltInId::min_Int3_Int1;
constexpr const TSymbolUniqueId BuiltInId::min_Int4_Int1;
constexpr const TSymbolUniqueId BuiltInId::min_UInt1_UInt1;
constexpr const TSymbolUniqueId BuiltInId::min_UInt2_UInt2;
constexpr const TSymbolUniqueId BuiltInId::min_UInt3_UInt3;
constexpr const TSymbolUniqueId BuiltInId::min_UInt4_UInt4;
constexpr const TSymbolUniqueId BuiltInId::min_UInt2_UInt1;
constexpr const TSymbolUniqueId BuiltInId::min_UInt3_UInt1;
constexpr const TSymbolUniqueId BuiltInId::min_UInt4_UInt1;
constexpr const TSymbolUniqueId BuiltInId::max_Float1_Float1;
constexpr const TSymbolUniqueId BuiltInId::max_Float2_Float1;
constexpr const TSymbolUniqueId BuiltInId::max_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::max_Float4_Float1;
constexpr const TSymbolUniqueId BuiltInId::max_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::max_Float3_Float3;
constexpr const TSymbolUniqueId BuiltInId::max_Float4_Float4;
constexpr const TSymbolUniqueId BuiltInId::max_Int1_Int1;
constexpr const TSymbolUniqueId BuiltInId::max_Int2_Int2;
constexpr const TSymbolUniqueId BuiltInId::max_Int3_Int3;
constexpr const TSymbolUniqueId BuiltInId::max_Int4_Int4;
constexpr const TSymbolUniqueId BuiltInId::max_Int2_Int1;
constexpr const TSymbolUniqueId BuiltInId::max_Int3_Int1;
constexpr const TSymbolUniqueId BuiltInId::max_Int4_Int1;
constexpr const TSymbolUniqueId BuiltInId::max_UInt1_UInt1;
constexpr const TSymbolUniqueId BuiltInId::max_UInt2_UInt2;
constexpr const TSymbolUniqueId BuiltInId::max_UInt3_UInt3;
constexpr const TSymbolUniqueId BuiltInId::max_UInt4_UInt4;
constexpr const TSymbolUniqueId BuiltInId::max_UInt2_UInt1;
constexpr const TSymbolUniqueId BuiltInId::max_UInt3_UInt1;
constexpr const TSymbolUniqueId BuiltInId::max_UInt4_UInt1;
constexpr const TSymbolUniqueId BuiltInId::clamp_Float1_Float1_Float1;
constexpr const TSymbolUniqueId BuiltInId::clamp_Float2_Float1_Float1;
constexpr const TSymbolUniqueId BuiltInId::clamp_Float3_Float1_Float1;
constexpr const TSymbolUniqueId BuiltInId::clamp_Float4_Float1_Float1;
constexpr const TSymbolUniqueId BuiltInId::clamp_Float2_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::clamp_Float3_Float3_Float3;
constexpr const TSymbolUniqueId BuiltInId::clamp_Float4_Float4_Float4;
constexpr const TSymbolUniqueId BuiltInId::clamp_Int1_Int1_Int1;
constexpr const TSymbolUniqueId BuiltInId::clamp_Int2_Int1_Int1;
constexpr const TSymbolUniqueId BuiltInId::clamp_Int3_Int1_Int1;
constexpr const TSymbolUniqueId BuiltInId::clamp_Int4_Int1_Int1;
constexpr const TSymbolUniqueId BuiltInId::clamp_Int2_Int2_Int2;
constexpr const TSymbolUniqueId BuiltInId::clamp_Int3_Int3_Int3;
constexpr const TSymbolUniqueId BuiltInId::clamp_Int4_Int4_Int4;
constexpr const TSymbolUniqueId BuiltInId::clamp_UInt1_UInt1_UInt1;
constexpr const TSymbolUniqueId BuiltInId::clamp_UInt2_UInt1_UInt1;
constexpr const TSymbolUniqueId BuiltInId::clamp_UInt3_UInt1_UInt1;
constexpr const TSymbolUniqueId BuiltInId::clamp_UInt4_UInt1_UInt1;
constexpr const TSymbolUniqueId BuiltInId::clamp_UInt2_UInt2_UInt2;
constexpr const TSymbolUniqueId BuiltInId::clamp_UInt3_UInt3_UInt3;
constexpr const TSymbolUniqueId BuiltInId::clamp_UInt4_UInt4_UInt4;
constexpr const TSymbolUniqueId BuiltInId::mix_Float1_Float1_Float1;
constexpr const TSymbolUniqueId BuiltInId::mix_Float2_Float2_Float1;
constexpr const TSymbolUniqueId BuiltInId::mix_Float3_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::mix_Float4_Float4_Float1;
constexpr const TSymbolUniqueId BuiltInId::mix_Float2_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::mix_Float3_Float3_Float3;
constexpr const TSymbolUniqueId BuiltInId::mix_Float4_Float4_Float4;
constexpr const TSymbolUniqueId BuiltInId::mix_Float1_Float1_Bool1;
constexpr const TSymbolUniqueId BuiltInId::mix_Float2_Float2_Bool2;
constexpr const TSymbolUniqueId BuiltInId::mix_Float3_Float3_Bool3;
constexpr const TSymbolUniqueId BuiltInId::mix_Float4_Float4_Bool4;
constexpr const TSymbolUniqueId BuiltInId::step_Float1_Float1;
constexpr const TSymbolUniqueId BuiltInId::step_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::step_Float3_Float3;
constexpr const TSymbolUniqueId BuiltInId::step_Float4_Float4;
constexpr const TSymbolUniqueId BuiltInId::step_Float1_Float2;
constexpr const TSymbolUniqueId BuiltInId::step_Float1_Float3;
constexpr const TSymbolUniqueId BuiltInId::step_Float1_Float4;
constexpr const TSymbolUniqueId BuiltInId::smoothstep_Float1_Float1_Float1;
constexpr const TSymbolUniqueId BuiltInId::smoothstep_Float2_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::smoothstep_Float3_Float3_Float3;
constexpr const TSymbolUniqueId BuiltInId::smoothstep_Float4_Float4_Float4;
constexpr const TSymbolUniqueId BuiltInId::smoothstep_Float1_Float1_Float2;
constexpr const TSymbolUniqueId BuiltInId::smoothstep_Float1_Float1_Float3;
constexpr const TSymbolUniqueId BuiltInId::smoothstep_Float1_Float1_Float4;
constexpr const TSymbolUniqueId BuiltInId::modf_Float1_Float1;
constexpr const TSymbolUniqueId BuiltInId::modf_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::modf_Float3_Float3;
constexpr const TSymbolUniqueId BuiltInId::modf_Float4_Float4;
constexpr const TSymbolUniqueId BuiltInId::isnan_Float1;
constexpr const TSymbolUniqueId BuiltInId::isnan_Float2;
constexpr const TSymbolUniqueId BuiltInId::isnan_Float3;
constexpr const TSymbolUniqueId BuiltInId::isnan_Float4;
constexpr const TSymbolUniqueId BuiltInId::isinf_Float1;
constexpr const TSymbolUniqueId BuiltInId::isinf_Float2;
constexpr const TSymbolUniqueId BuiltInId::isinf_Float3;
constexpr const TSymbolUniqueId BuiltInId::isinf_Float4;
constexpr const TSymbolUniqueId BuiltInId::floatBitsToInt_Float1;
constexpr const TSymbolUniqueId BuiltInId::floatBitsToInt_Float2;
constexpr const TSymbolUniqueId BuiltInId::floatBitsToInt_Float3;
constexpr const TSymbolUniqueId BuiltInId::floatBitsToInt_Float4;
constexpr const TSymbolUniqueId BuiltInId::floatBitsToUint_Float1;
constexpr const TSymbolUniqueId BuiltInId::floatBitsToUint_Float2;
constexpr const TSymbolUniqueId BuiltInId::floatBitsToUint_Float3;
constexpr const TSymbolUniqueId BuiltInId::floatBitsToUint_Float4;
constexpr const TSymbolUniqueId BuiltInId::intBitsToFloat_Int1;
constexpr const TSymbolUniqueId BuiltInId::intBitsToFloat_Int2;
constexpr const TSymbolUniqueId BuiltInId::intBitsToFloat_Int3;
constexpr const TSymbolUniqueId BuiltInId::intBitsToFloat_Int4;
constexpr const TSymbolUniqueId BuiltInId::uintBitsToFloat_UInt1;
constexpr const TSymbolUniqueId BuiltInId::uintBitsToFloat_UInt2;
constexpr const TSymbolUniqueId BuiltInId::uintBitsToFloat_UInt3;
constexpr const TSymbolUniqueId BuiltInId::uintBitsToFloat_UInt4;
constexpr const TSymbolUniqueId BuiltInId::frexp_Float1_Int1;
constexpr const TSymbolUniqueId BuiltInId::frexp_Float2_Int2;
constexpr const TSymbolUniqueId BuiltInId::frexp_Float3_Int3;
constexpr const TSymbolUniqueId BuiltInId::frexp_Float4_Int4;
constexpr const TSymbolUniqueId BuiltInId::ldexp_Float1_Int1;
constexpr const TSymbolUniqueId BuiltInId::ldexp_Float2_Int2;
constexpr const TSymbolUniqueId BuiltInId::ldexp_Float3_Int3;
constexpr const TSymbolUniqueId BuiltInId::ldexp_Float4_Int4;
constexpr const TSymbolUniqueId BuiltInId::packSnorm2x16_Float2;
constexpr const TSymbolUniqueId BuiltInId::packUnorm2x16_Float2;
constexpr const TSymbolUniqueId BuiltInId::packHalf2x16_Float2;
constexpr const TSymbolUniqueId BuiltInId::unpackSnorm2x16_UInt1;
constexpr const TSymbolUniqueId BuiltInId::unpackUnorm2x16_UInt1;
constexpr const TSymbolUniqueId BuiltInId::unpackHalf2x16_UInt1;
constexpr const TSymbolUniqueId BuiltInId::packUnorm4x8_Float4;
constexpr const TSymbolUniqueId BuiltInId::packSnorm4x8_Float4;
constexpr const TSymbolUniqueId BuiltInId::unpackUnorm4x8_UInt1;
constexpr const TSymbolUniqueId BuiltInId::unpackSnorm4x8_UInt1;
constexpr const TSymbolUniqueId BuiltInId::length_Float1;
constexpr const TSymbolUniqueId BuiltInId::length_Float2;
constexpr const TSymbolUniqueId BuiltInId::length_Float3;
constexpr const TSymbolUniqueId BuiltInId::length_Float4;
constexpr const TSymbolUniqueId BuiltInId::distance_Float1_Float1;
constexpr const TSymbolUniqueId BuiltInId::distance_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::distance_Float3_Float3;
constexpr const TSymbolUniqueId BuiltInId::distance_Float4_Float4;
constexpr const TSymbolUniqueId BuiltInId::dot_Float1_Float1;
constexpr const TSymbolUniqueId BuiltInId::dot_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::dot_Float3_Float3;
constexpr const TSymbolUniqueId BuiltInId::dot_Float4_Float4;
constexpr const TSymbolUniqueId BuiltInId::cross_Float3_Float3;
constexpr const TSymbolUniqueId BuiltInId::normalize_Float1;
constexpr const TSymbolUniqueId BuiltInId::normalize_Float2;
constexpr const TSymbolUniqueId BuiltInId::normalize_Float3;
constexpr const TSymbolUniqueId BuiltInId::normalize_Float4;
constexpr const TSymbolUniqueId BuiltInId::faceforward_Float1_Float1_Float1;
constexpr const TSymbolUniqueId BuiltInId::faceforward_Float2_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::faceforward_Float3_Float3_Float3;
constexpr const TSymbolUniqueId BuiltInId::faceforward_Float4_Float4_Float4;
constexpr const TSymbolUniqueId BuiltInId::reflect_Float1_Float1;
constexpr const TSymbolUniqueId BuiltInId::reflect_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::reflect_Float3_Float3;
constexpr const TSymbolUniqueId BuiltInId::reflect_Float4_Float4;
constexpr const TSymbolUniqueId BuiltInId::refract_Float1_Float1_Float1;
constexpr const TSymbolUniqueId BuiltInId::refract_Float2_Float2_Float1;
constexpr const TSymbolUniqueId BuiltInId::refract_Float3_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::refract_Float4_Float4_Float1;
constexpr const TSymbolUniqueId BuiltInId::matrixCompMult_Float2x2_Float2x2;
constexpr const TSymbolUniqueId BuiltInId::matrixCompMult_Float3x3_Float3x3;
constexpr const TSymbolUniqueId BuiltInId::matrixCompMult_Float4x4_Float4x4;
constexpr const TSymbolUniqueId BuiltInId::matrixCompMult_Float2x3_Float2x3;
constexpr const TSymbolUniqueId BuiltInId::matrixCompMult_Float3x2_Float3x2;
constexpr const TSymbolUniqueId BuiltInId::matrixCompMult_Float2x4_Float2x4;
constexpr const TSymbolUniqueId BuiltInId::matrixCompMult_Float4x2_Float4x2;
constexpr const TSymbolUniqueId BuiltInId::matrixCompMult_Float3x4_Float3x4;
constexpr const TSymbolUniqueId BuiltInId::matrixCompMult_Float4x3_Float4x3;
constexpr const TSymbolUniqueId BuiltInId::outerProduct_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::outerProduct_Float3_Float3;
constexpr const TSymbolUniqueId BuiltInId::outerProduct_Float4_Float4;
constexpr const TSymbolUniqueId BuiltInId::outerProduct_Float3_Float2;
constexpr const TSymbolUniqueId BuiltInId::outerProduct_Float2_Float3;
constexpr const TSymbolUniqueId BuiltInId::outerProduct_Float4_Float2;
constexpr const TSymbolUniqueId BuiltInId::outerProduct_Float2_Float4;
constexpr const TSymbolUniqueId BuiltInId::outerProduct_Float4_Float3;
constexpr const TSymbolUniqueId BuiltInId::outerProduct_Float3_Float4;
constexpr const TSymbolUniqueId BuiltInId::transpose_Float2x2;
constexpr const TSymbolUniqueId BuiltInId::transpose_Float3x3;
constexpr const TSymbolUniqueId BuiltInId::transpose_Float4x4;
constexpr const TSymbolUniqueId BuiltInId::transpose_Float3x2;
constexpr const TSymbolUniqueId BuiltInId::transpose_Float2x3;
constexpr const TSymbolUniqueId BuiltInId::transpose_Float4x2;
constexpr const TSymbolUniqueId BuiltInId::transpose_Float2x4;
constexpr const TSymbolUniqueId BuiltInId::transpose_Float4x3;
constexpr const TSymbolUniqueId BuiltInId::transpose_Float3x4;
constexpr const TSymbolUniqueId BuiltInId::determinant_Float2x2;
constexpr const TSymbolUniqueId BuiltInId::determinant_Float3x3;
constexpr const TSymbolUniqueId BuiltInId::determinant_Float4x4;
constexpr const TSymbolUniqueId BuiltInId::inverse_Float2x2;
constexpr const TSymbolUniqueId BuiltInId::inverse_Float3x3;
constexpr const TSymbolUniqueId BuiltInId::inverse_Float4x4;
constexpr const TSymbolUniqueId BuiltInId::lessThan_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::lessThan_Float3_Float3;
constexpr const TSymbolUniqueId BuiltInId::lessThan_Float4_Float4;
constexpr const TSymbolUniqueId BuiltInId::lessThan_Int2_Int2;
constexpr const TSymbolUniqueId BuiltInId::lessThan_Int3_Int3;
constexpr const TSymbolUniqueId BuiltInId::lessThan_Int4_Int4;
constexpr const TSymbolUniqueId BuiltInId::lessThan_UInt2_UInt2;
constexpr const TSymbolUniqueId BuiltInId::lessThan_UInt3_UInt3;
constexpr const TSymbolUniqueId BuiltInId::lessThan_UInt4_UInt4;
constexpr const TSymbolUniqueId BuiltInId::lessThanEqual_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::lessThanEqual_Float3_Float3;
constexpr const TSymbolUniqueId BuiltInId::lessThanEqual_Float4_Float4;
constexpr const TSymbolUniqueId BuiltInId::lessThanEqual_Int2_Int2;
constexpr const TSymbolUniqueId BuiltInId::lessThanEqual_Int3_Int3;
constexpr const TSymbolUniqueId BuiltInId::lessThanEqual_Int4_Int4;
constexpr const TSymbolUniqueId BuiltInId::lessThanEqual_UInt2_UInt2;
constexpr const TSymbolUniqueId BuiltInId::lessThanEqual_UInt3_UInt3;
constexpr const TSymbolUniqueId BuiltInId::lessThanEqual_UInt4_UInt4;
constexpr const TSymbolUniqueId BuiltInId::greaterThan_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::greaterThan_Float3_Float3;
constexpr const TSymbolUniqueId BuiltInId::greaterThan_Float4_Float4;
constexpr const TSymbolUniqueId BuiltInId::greaterThan_Int2_Int2;
constexpr const TSymbolUniqueId BuiltInId::greaterThan_Int3_Int3;
constexpr const TSymbolUniqueId BuiltInId::greaterThan_Int4_Int4;
constexpr const TSymbolUniqueId BuiltInId::greaterThan_UInt2_UInt2;
constexpr const TSymbolUniqueId BuiltInId::greaterThan_UInt3_UInt3;
constexpr const TSymbolUniqueId BuiltInId::greaterThan_UInt4_UInt4;
constexpr const TSymbolUniqueId BuiltInId::greaterThanEqual_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::greaterThanEqual_Float3_Float3;
constexpr const TSymbolUniqueId BuiltInId::greaterThanEqual_Float4_Float4;
constexpr const TSymbolUniqueId BuiltInId::greaterThanEqual_Int2_Int2;
constexpr const TSymbolUniqueId BuiltInId::greaterThanEqual_Int3_Int3;
constexpr const TSymbolUniqueId BuiltInId::greaterThanEqual_Int4_Int4;
constexpr const TSymbolUniqueId BuiltInId::greaterThanEqual_UInt2_UInt2;
constexpr const TSymbolUniqueId BuiltInId::greaterThanEqual_UInt3_UInt3;
constexpr const TSymbolUniqueId BuiltInId::greaterThanEqual_UInt4_UInt4;
constexpr const TSymbolUniqueId BuiltInId::equal_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::equal_Float3_Float3;
constexpr const TSymbolUniqueId BuiltInId::equal_Float4_Float4;
constexpr const TSymbolUniqueId BuiltInId::equal_Int2_Int2;
constexpr const TSymbolUniqueId BuiltInId::equal_Int3_Int3;
constexpr const TSymbolUniqueId BuiltInId::equal_Int4_Int4;
constexpr const TSymbolUniqueId BuiltInId::equal_UInt2_UInt2;
constexpr const TSymbolUniqueId BuiltInId::equal_UInt3_UInt3;
constexpr const TSymbolUniqueId BuiltInId::equal_UInt4_UInt4;
constexpr const TSymbolUniqueId BuiltInId::equal_Bool2_Bool2;
constexpr const TSymbolUniqueId BuiltInId::equal_Bool3_Bool3;
constexpr const TSymbolUniqueId BuiltInId::equal_Bool4_Bool4;
constexpr const TSymbolUniqueId BuiltInId::notEqual_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::notEqual_Float3_Float3;
constexpr const TSymbolUniqueId BuiltInId::notEqual_Float4_Float4;
constexpr const TSymbolUniqueId BuiltInId::notEqual_Int2_Int2;
constexpr const TSymbolUniqueId BuiltInId::notEqual_Int3_Int3;
constexpr const TSymbolUniqueId BuiltInId::notEqual_Int4_Int4;
constexpr const TSymbolUniqueId BuiltInId::notEqual_UInt2_UInt2;
constexpr const TSymbolUniqueId BuiltInId::notEqual_UInt3_UInt3;
constexpr const TSymbolUniqueId BuiltInId::notEqual_UInt4_UInt4;
constexpr const TSymbolUniqueId BuiltInId::notEqual_Bool2_Bool2;
constexpr const TSymbolUniqueId BuiltInId::notEqual_Bool3_Bool3;
constexpr const TSymbolUniqueId BuiltInId::notEqual_Bool4_Bool4;
constexpr const TSymbolUniqueId BuiltInId::any_Bool2;
constexpr const TSymbolUniqueId BuiltInId::any_Bool3;
constexpr const TSymbolUniqueId BuiltInId::any_Bool4;
constexpr const TSymbolUniqueId BuiltInId::all_Bool2;
constexpr const TSymbolUniqueId BuiltInId::all_Bool3;
constexpr const TSymbolUniqueId BuiltInId::all_Bool4;
constexpr const TSymbolUniqueId BuiltInId::notFunc_Bool2;
constexpr const TSymbolUniqueId BuiltInId::notFunc_Bool3;
constexpr const TSymbolUniqueId BuiltInId::notFunc_Bool4;
constexpr const TSymbolUniqueId BuiltInId::bitfieldExtract_Int1_Int1_Int1;
constexpr const TSymbolUniqueId BuiltInId::bitfieldExtract_Int2_Int1_Int1;
constexpr const TSymbolUniqueId BuiltInId::bitfieldExtract_Int3_Int1_Int1;
constexpr const TSymbolUniqueId BuiltInId::bitfieldExtract_Int4_Int1_Int1;
constexpr const TSymbolUniqueId BuiltInId::bitfieldExtract_UInt1_Int1_Int1;
constexpr const TSymbolUniqueId BuiltInId::bitfieldExtract_UInt2_Int1_Int1;
constexpr const TSymbolUniqueId BuiltInId::bitfieldExtract_UInt3_Int1_Int1;
constexpr const TSymbolUniqueId BuiltInId::bitfieldExtract_UInt4_Int1_Int1;
constexpr const TSymbolUniqueId BuiltInId::bitfieldInsert_Int1_Int1_Int1_Int1;
constexpr const TSymbolUniqueId BuiltInId::bitfieldInsert_Int2_Int2_Int1_Int1;
constexpr const TSymbolUniqueId BuiltInId::bitfieldInsert_Int3_Int3_Int1_Int1;
constexpr const TSymbolUniqueId BuiltInId::bitfieldInsert_Int4_Int4_Int1_Int1;
constexpr const TSymbolUniqueId BuiltInId::bitfieldInsert_UInt1_UInt1_Int1_Int1;
constexpr const TSymbolUniqueId BuiltInId::bitfieldInsert_UInt2_UInt2_Int1_Int1;
constexpr const TSymbolUniqueId BuiltInId::bitfieldInsert_UInt3_UInt3_Int1_Int1;
constexpr const TSymbolUniqueId BuiltInId::bitfieldInsert_UInt4_UInt4_Int1_Int1;
constexpr const TSymbolUniqueId BuiltInId::bitfieldReverse_Int1;
constexpr const TSymbolUniqueId BuiltInId::bitfieldReverse_Int2;
constexpr const TSymbolUniqueId BuiltInId::bitfieldReverse_Int3;
constexpr const TSymbolUniqueId BuiltInId::bitfieldReverse_Int4;
constexpr const TSymbolUniqueId BuiltInId::bitfieldReverse_UInt1;
constexpr const TSymbolUniqueId BuiltInId::bitfieldReverse_UInt2;
constexpr const TSymbolUniqueId BuiltInId::bitfieldReverse_UInt3;
constexpr const TSymbolUniqueId BuiltInId::bitfieldReverse_UInt4;
constexpr const TSymbolUniqueId BuiltInId::bitCount_Int1;
constexpr const TSymbolUniqueId BuiltInId::bitCount_Int2;
constexpr const TSymbolUniqueId BuiltInId::bitCount_Int3;
constexpr const TSymbolUniqueId BuiltInId::bitCount_Int4;
constexpr const TSymbolUniqueId BuiltInId::bitCount_UInt1;
constexpr const TSymbolUniqueId BuiltInId::bitCount_UInt2;
constexpr const TSymbolUniqueId BuiltInId::bitCount_UInt3;
constexpr const TSymbolUniqueId BuiltInId::bitCount_UInt4;
constexpr const TSymbolUniqueId BuiltInId::findLSB_Int1;
constexpr const TSymbolUniqueId BuiltInId::findLSB_Int2;
constexpr const TSymbolUniqueId BuiltInId::findLSB_Int3;
constexpr const TSymbolUniqueId BuiltInId::findLSB_Int4;
constexpr const TSymbolUniqueId BuiltInId::findLSB_UInt1;
constexpr const TSymbolUniqueId BuiltInId::findLSB_UInt2;
constexpr const TSymbolUniqueId BuiltInId::findLSB_UInt3;
constexpr const TSymbolUniqueId BuiltInId::findLSB_UInt4;
constexpr const TSymbolUniqueId BuiltInId::findMSB_Int1;
constexpr const TSymbolUniqueId BuiltInId::findMSB_Int2;
constexpr const TSymbolUniqueId BuiltInId::findMSB_Int3;
constexpr const TSymbolUniqueId BuiltInId::findMSB_Int4;
constexpr const TSymbolUniqueId BuiltInId::findMSB_UInt1;
constexpr const TSymbolUniqueId BuiltInId::findMSB_UInt2;
constexpr const TSymbolUniqueId BuiltInId::findMSB_UInt3;
constexpr const TSymbolUniqueId BuiltInId::findMSB_UInt4;
constexpr const TSymbolUniqueId BuiltInId::uaddCarry_UInt1_UInt1_UInt1;
constexpr const TSymbolUniqueId BuiltInId::uaddCarry_UInt2_UInt2_UInt2;
constexpr const TSymbolUniqueId BuiltInId::uaddCarry_UInt3_UInt3_UInt3;
constexpr const TSymbolUniqueId BuiltInId::uaddCarry_UInt4_UInt4_UInt4;
constexpr const TSymbolUniqueId BuiltInId::usubBorrow_UInt1_UInt1_UInt1;
constexpr const TSymbolUniqueId BuiltInId::usubBorrow_UInt2_UInt2_UInt2;
constexpr const TSymbolUniqueId BuiltInId::usubBorrow_UInt3_UInt3_UInt3;
constexpr const TSymbolUniqueId BuiltInId::usubBorrow_UInt4_UInt4_UInt4;
constexpr const TSymbolUniqueId BuiltInId::umulExtended_UInt1_UInt1_UInt1_UInt1;
constexpr const TSymbolUniqueId BuiltInId::umulExtended_UInt2_UInt2_UInt2_UInt2;
constexpr const TSymbolUniqueId BuiltInId::umulExtended_UInt3_UInt3_UInt3_UInt3;
constexpr const TSymbolUniqueId BuiltInId::umulExtended_UInt4_UInt4_UInt4_UInt4;
constexpr const TSymbolUniqueId BuiltInId::imulExtended_Int1_Int1_Int1_Int1;
constexpr const TSymbolUniqueId BuiltInId::imulExtended_Int2_Int2_Int2_Int2;
constexpr const TSymbolUniqueId BuiltInId::imulExtended_Int3_Int3_Int3_Int3;
constexpr const TSymbolUniqueId BuiltInId::imulExtended_Int4_Int4_Int4_Int4;
constexpr const TSymbolUniqueId BuiltInId::texture2D_Sampler2D1_Float2;
constexpr const TSymbolUniqueId BuiltInId::texture2DProj_Sampler2D1_Float3;
constexpr const TSymbolUniqueId BuiltInId::texture2DProj_Sampler2D1_Float4;
constexpr const TSymbolUniqueId BuiltInId::textureCube_SamplerCube1_Float3;
constexpr const TSymbolUniqueId BuiltInId::texture2D_SamplerExternalOES1_Float2;
constexpr const TSymbolUniqueId BuiltInId::texture2DProj_SamplerExternalOES1_Float3;
constexpr const TSymbolUniqueId BuiltInId::texture2DProj_SamplerExternalOES1_Float4;
constexpr const TSymbolUniqueId BuiltInId::texture2DRect_Sampler2DRect1_Float2;
constexpr const TSymbolUniqueId BuiltInId::texture2DRectProj_Sampler2DRect1_Float3;
constexpr const TSymbolUniqueId BuiltInId::texture2DRectProj_Sampler2DRect1_Float4;
constexpr const TSymbolUniqueId BuiltInId::texture_Sampler2DRect1_Float2;
constexpr const TSymbolUniqueId BuiltInId::textureProj_Sampler2DRect1_Float3;
constexpr const TSymbolUniqueId BuiltInId::textureProj_Sampler2DRect1_Float4;
constexpr const TSymbolUniqueId BuiltInId::texture2DGradEXT_Sampler2D1_Float2_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::texture2DProjGradEXT_Sampler2D1_Float3_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::texture2DProjGradEXT_Sampler2D1_Float4_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::textureCubeGradEXT_SamplerCube1_Float3_Float3_Float3;
constexpr const TSymbolUniqueId BuiltInId::texture2D_Sampler2D1_Float2_Float1;
constexpr const TSymbolUniqueId BuiltInId::texture2DProj_Sampler2D1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::texture2DProj_Sampler2D1_Float4_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureCube_SamplerCube1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::dFdxExt_Float1;
constexpr const TSymbolUniqueId BuiltInId::dFdxExt_Float2;
constexpr const TSymbolUniqueId BuiltInId::dFdxExt_Float3;
constexpr const TSymbolUniqueId BuiltInId::dFdxExt_Float4;
constexpr const TSymbolUniqueId BuiltInId::dFdyExt_Float1;
constexpr const TSymbolUniqueId BuiltInId::dFdyExt_Float2;
constexpr const TSymbolUniqueId BuiltInId::dFdyExt_Float3;
constexpr const TSymbolUniqueId BuiltInId::dFdyExt_Float4;
constexpr const TSymbolUniqueId BuiltInId::fwidthExt_Float1;
constexpr const TSymbolUniqueId BuiltInId::fwidthExt_Float2;
constexpr const TSymbolUniqueId BuiltInId::fwidthExt_Float3;
constexpr const TSymbolUniqueId BuiltInId::fwidthExt_Float4;
constexpr const TSymbolUniqueId BuiltInId::texture2DLodEXT_Sampler2D1_Float2_Float1;
constexpr const TSymbolUniqueId BuiltInId::texture2DProjLodEXT_Sampler2D1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::texture2DProjLodEXT_Sampler2D1_Float4_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureCubeLodEXT_SamplerCube1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::texture3D_Sampler3D1_Float3;
constexpr const TSymbolUniqueId BuiltInId::texture3D_Sampler3D1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::texture3DProj_Sampler3D1_Float4;
constexpr const TSymbolUniqueId BuiltInId::texture3DProj_Sampler3D1_Float4_Float1;
constexpr const TSymbolUniqueId BuiltInId::texture3DLod_Sampler3D1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::texture3DProjLod_Sampler3D1_Float4_Float1;
constexpr const TSymbolUniqueId BuiltInId::texture2DLod_Sampler2D1_Float2_Float1;
constexpr const TSymbolUniqueId BuiltInId::texture2DProjLod_Sampler2D1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::texture2DProjLod_Sampler2D1_Float4_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureCubeLod_SamplerCube1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::texture_Sampler2D1_Float2;
constexpr const TSymbolUniqueId BuiltInId::texture_ISampler2D1_Float2;
constexpr const TSymbolUniqueId BuiltInId::texture_USampler2D1_Float2;
constexpr const TSymbolUniqueId BuiltInId::texture_Sampler3D1_Float3;
constexpr const TSymbolUniqueId BuiltInId::texture_ISampler3D1_Float3;
constexpr const TSymbolUniqueId BuiltInId::texture_USampler3D1_Float3;
constexpr const TSymbolUniqueId BuiltInId::texture_SamplerCube1_Float3;
constexpr const TSymbolUniqueId BuiltInId::texture_ISamplerCube1_Float3;
constexpr const TSymbolUniqueId BuiltInId::texture_USamplerCube1_Float3;
constexpr const TSymbolUniqueId BuiltInId::texture_Sampler2DArray1_Float3;
constexpr const TSymbolUniqueId BuiltInId::texture_ISampler2DArray1_Float3;
constexpr const TSymbolUniqueId BuiltInId::texture_USampler2DArray1_Float3;
constexpr const TSymbolUniqueId BuiltInId::textureProj_Sampler2D1_Float3;
constexpr const TSymbolUniqueId BuiltInId::textureProj_ISampler2D1_Float3;
constexpr const TSymbolUniqueId BuiltInId::textureProj_USampler2D1_Float3;
constexpr const TSymbolUniqueId BuiltInId::textureProj_Sampler2D1_Float4;
constexpr const TSymbolUniqueId BuiltInId::textureProj_ISampler2D1_Float4;
constexpr const TSymbolUniqueId BuiltInId::textureProj_USampler2D1_Float4;
constexpr const TSymbolUniqueId BuiltInId::textureProj_Sampler3D1_Float4;
constexpr const TSymbolUniqueId BuiltInId::textureProj_ISampler3D1_Float4;
constexpr const TSymbolUniqueId BuiltInId::textureProj_USampler3D1_Float4;
constexpr const TSymbolUniqueId BuiltInId::textureLod_Sampler2D1_Float2_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureLod_ISampler2D1_Float2_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureLod_USampler2D1_Float2_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureLod_Sampler3D1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureLod_ISampler3D1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureLod_USampler3D1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureLod_SamplerCube1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureLod_ISamplerCube1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureLod_USamplerCube1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureLod_Sampler2DArray1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureLod_ISampler2DArray1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureLod_USampler2DArray1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::texture_Sampler2DShadow1_Float3;
constexpr const TSymbolUniqueId BuiltInId::texture_SamplerCubeShadow1_Float4;
constexpr const TSymbolUniqueId BuiltInId::texture_Sampler2DArrayShadow1_Float4;
constexpr const TSymbolUniqueId BuiltInId::textureProj_Sampler2DShadow1_Float4;
constexpr const TSymbolUniqueId BuiltInId::textureLod_Sampler2DShadow1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureSize_Sampler2D1_Int1;
constexpr const TSymbolUniqueId BuiltInId::textureSize_ISampler2D1_Int1;
constexpr const TSymbolUniqueId BuiltInId::textureSize_USampler2D1_Int1;
constexpr const TSymbolUniqueId BuiltInId::textureSize_Sampler3D1_Int1;
constexpr const TSymbolUniqueId BuiltInId::textureSize_ISampler3D1_Int1;
constexpr const TSymbolUniqueId BuiltInId::textureSize_USampler3D1_Int1;
constexpr const TSymbolUniqueId BuiltInId::textureSize_SamplerCube1_Int1;
constexpr const TSymbolUniqueId BuiltInId::textureSize_ISamplerCube1_Int1;
constexpr const TSymbolUniqueId BuiltInId::textureSize_USamplerCube1_Int1;
constexpr const TSymbolUniqueId BuiltInId::textureSize_Sampler2DArray1_Int1;
constexpr const TSymbolUniqueId BuiltInId::textureSize_ISampler2DArray1_Int1;
constexpr const TSymbolUniqueId BuiltInId::textureSize_USampler2DArray1_Int1;
constexpr const TSymbolUniqueId BuiltInId::textureSize_Sampler2DShadow1_Int1;
constexpr const TSymbolUniqueId BuiltInId::textureSize_SamplerCubeShadow1_Int1;
constexpr const TSymbolUniqueId BuiltInId::textureSize_Sampler2DArrayShadow1_Int1;
constexpr const TSymbolUniqueId BuiltInId::textureProjLod_Sampler2D1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureProjLod_ISampler2D1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureProjLod_USampler2D1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureProjLod_Sampler2D1_Float4_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureProjLod_ISampler2D1_Float4_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureProjLod_USampler2D1_Float4_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureProjLod_Sampler3D1_Float4_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureProjLod_ISampler3D1_Float4_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureProjLod_USampler3D1_Float4_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureProjLod_Sampler2DShadow1_Float4_Float1;
constexpr const TSymbolUniqueId BuiltInId::texelFetch_Sampler2D1_Int2_Int1;
constexpr const TSymbolUniqueId BuiltInId::texelFetch_ISampler2D1_Int2_Int1;
constexpr const TSymbolUniqueId BuiltInId::texelFetch_USampler2D1_Int2_Int1;
constexpr const TSymbolUniqueId BuiltInId::texelFetch_Sampler3D1_Int3_Int1;
constexpr const TSymbolUniqueId BuiltInId::texelFetch_ISampler3D1_Int3_Int1;
constexpr const TSymbolUniqueId BuiltInId::texelFetch_USampler3D1_Int3_Int1;
constexpr const TSymbolUniqueId BuiltInId::texelFetch_Sampler2DArray1_Int3_Int1;
constexpr const TSymbolUniqueId BuiltInId::texelFetch_ISampler2DArray1_Int3_Int1;
constexpr const TSymbolUniqueId BuiltInId::texelFetch_USampler2DArray1_Int3_Int1;
constexpr const TSymbolUniqueId BuiltInId::textureGrad_Sampler2D1_Float2_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::textureGrad_ISampler2D1_Float2_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::textureGrad_USampler2D1_Float2_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::textureGrad_Sampler3D1_Float3_Float3_Float3;
constexpr const TSymbolUniqueId BuiltInId::textureGrad_ISampler3D1_Float3_Float3_Float3;
constexpr const TSymbolUniqueId BuiltInId::textureGrad_USampler3D1_Float3_Float3_Float3;
constexpr const TSymbolUniqueId BuiltInId::textureGrad_SamplerCube1_Float3_Float3_Float3;
constexpr const TSymbolUniqueId BuiltInId::textureGrad_ISamplerCube1_Float3_Float3_Float3;
constexpr const TSymbolUniqueId BuiltInId::textureGrad_USamplerCube1_Float3_Float3_Float3;
constexpr const TSymbolUniqueId BuiltInId::textureGrad_Sampler2DShadow1_Float3_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::textureGrad_SamplerCubeShadow1_Float4_Float3_Float3;
constexpr const TSymbolUniqueId BuiltInId::textureGrad_Sampler2DArray1_Float3_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::textureGrad_ISampler2DArray1_Float3_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::textureGrad_USampler2DArray1_Float3_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::textureGrad_Sampler2DArrayShadow1_Float4_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::textureProjGrad_Sampler2D1_Float3_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::textureProjGrad_ISampler2D1_Float3_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::textureProjGrad_USampler2D1_Float3_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::textureProjGrad_Sampler2D1_Float4_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::textureProjGrad_ISampler2D1_Float4_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::textureProjGrad_USampler2D1_Float4_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::textureProjGrad_Sampler3D1_Float4_Float3_Float3;
constexpr const TSymbolUniqueId BuiltInId::textureProjGrad_ISampler3D1_Float4_Float3_Float3;
constexpr const TSymbolUniqueId BuiltInId::textureProjGrad_USampler3D1_Float4_Float3_Float3;
constexpr const TSymbolUniqueId BuiltInId::textureProjGrad_Sampler2DShadow1_Float4_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::textureSize_Sampler2DMS1;
constexpr const TSymbolUniqueId BuiltInId::textureSize_ISampler2DMS1;
constexpr const TSymbolUniqueId BuiltInId::textureSize_USampler2DMS1;
constexpr const TSymbolUniqueId BuiltInId::textureSizeExt_Sampler2DMS1;
constexpr const TSymbolUniqueId BuiltInId::textureSizeExt_ISampler2DMS1;
constexpr const TSymbolUniqueId BuiltInId::textureSizeExt_USampler2DMS1;
constexpr const TSymbolUniqueId BuiltInId::textureSize_Sampler2DMSArray1;
constexpr const TSymbolUniqueId BuiltInId::textureSize_ISampler2DMSArray1;
constexpr const TSymbolUniqueId BuiltInId::textureSize_USampler2DMSArray1;
constexpr const TSymbolUniqueId BuiltInId::textureOffset_Sampler2D1_Float2_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureOffset_ISampler2D1_Float2_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureOffset_USampler2D1_Float2_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureOffset_Sampler3D1_Float3_Int3;
constexpr const TSymbolUniqueId BuiltInId::textureOffset_ISampler3D1_Float3_Int3;
constexpr const TSymbolUniqueId BuiltInId::textureOffset_USampler3D1_Float3_Int3;
constexpr const TSymbolUniqueId BuiltInId::textureOffset_Sampler2DShadow1_Float3_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureOffset_Sampler2DArray1_Float3_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureOffset_ISampler2DArray1_Float3_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureOffset_USampler2DArray1_Float3_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureProjOffset_Sampler2D1_Float3_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureProjOffset_ISampler2D1_Float3_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureProjOffset_USampler2D1_Float3_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureProjOffset_Sampler2D1_Float4_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureProjOffset_ISampler2D1_Float4_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureProjOffset_USampler2D1_Float4_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureProjOffset_Sampler3D1_Float4_Int3;
constexpr const TSymbolUniqueId BuiltInId::textureProjOffset_ISampler3D1_Float4_Int3;
constexpr const TSymbolUniqueId BuiltInId::textureProjOffset_USampler3D1_Float4_Int3;
constexpr const TSymbolUniqueId BuiltInId::textureProjOffset_Sampler2DShadow1_Float4_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureLodOffset_Sampler2D1_Float2_Float1_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureLodOffset_ISampler2D1_Float2_Float1_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureLodOffset_USampler2D1_Float2_Float1_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureLodOffset_Sampler3D1_Float3_Float1_Int3;
constexpr const TSymbolUniqueId BuiltInId::textureLodOffset_ISampler3D1_Float3_Float1_Int3;
constexpr const TSymbolUniqueId BuiltInId::textureLodOffset_USampler3D1_Float3_Float1_Int3;
constexpr const TSymbolUniqueId BuiltInId::textureLodOffset_Sampler2DShadow1_Float3_Float1_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureLodOffset_Sampler2DArray1_Float3_Float1_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureLodOffset_ISampler2DArray1_Float3_Float1_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureLodOffset_USampler2DArray1_Float3_Float1_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureProjLodOffset_Sampler2D1_Float3_Float1_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureProjLodOffset_ISampler2D1_Float3_Float1_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureProjLodOffset_USampler2D1_Float3_Float1_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureProjLodOffset_Sampler2D1_Float4_Float1_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureProjLodOffset_ISampler2D1_Float4_Float1_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureProjLodOffset_USampler2D1_Float4_Float1_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureProjLodOffset_Sampler3D1_Float4_Float1_Int3;
constexpr const TSymbolUniqueId BuiltInId::textureProjLodOffset_ISampler3D1_Float4_Float1_Int3;
constexpr const TSymbolUniqueId BuiltInId::textureProjLodOffset_USampler3D1_Float4_Float1_Int3;
constexpr const TSymbolUniqueId BuiltInId::textureProjLodOffset_Sampler2DShadow1_Float4_Float1_Int2;
constexpr const TSymbolUniqueId BuiltInId::texelFetchOffset_Sampler2D1_Int2_Int1_Int2;
constexpr const TSymbolUniqueId BuiltInId::texelFetchOffset_ISampler2D1_Int2_Int1_Int2;
constexpr const TSymbolUniqueId BuiltInId::texelFetchOffset_USampler2D1_Int2_Int1_Int2;
constexpr const TSymbolUniqueId BuiltInId::texelFetchOffset_Sampler3D1_Int3_Int1_Int3;
constexpr const TSymbolUniqueId BuiltInId::texelFetchOffset_ISampler3D1_Int3_Int1_Int3;
constexpr const TSymbolUniqueId BuiltInId::texelFetchOffset_USampler3D1_Int3_Int1_Int3;
constexpr const TSymbolUniqueId BuiltInId::texelFetchOffset_Sampler2DArray1_Int3_Int1_Int2;
constexpr const TSymbolUniqueId BuiltInId::texelFetchOffset_ISampler2DArray1_Int3_Int1_Int2;
constexpr const TSymbolUniqueId BuiltInId::texelFetchOffset_USampler2DArray1_Int3_Int1_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureGradOffset_Sampler2D1_Float2_Float2_Float2_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureGradOffset_ISampler2D1_Float2_Float2_Float2_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureGradOffset_USampler2D1_Float2_Float2_Float2_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureGradOffset_Sampler3D1_Float3_Float3_Float3_Int3;
constexpr const TSymbolUniqueId BuiltInId::textureGradOffset_ISampler3D1_Float3_Float3_Float3_Int3;
constexpr const TSymbolUniqueId BuiltInId::textureGradOffset_USampler3D1_Float3_Float3_Float3_Int3;
constexpr const TSymbolUniqueId
    BuiltInId::textureGradOffset_Sampler2DShadow1_Float3_Float2_Float2_Int2;
constexpr const TSymbolUniqueId
    BuiltInId::textureGradOffset_Sampler2DArray1_Float3_Float2_Float2_Int2;
constexpr const TSymbolUniqueId
    BuiltInId::textureGradOffset_ISampler2DArray1_Float3_Float2_Float2_Int2;
constexpr const TSymbolUniqueId
    BuiltInId::textureGradOffset_USampler2DArray1_Float3_Float2_Float2_Int2;
constexpr const TSymbolUniqueId
    BuiltInId::textureGradOffset_Sampler2DArrayShadow1_Float4_Float2_Float2_Int2;
constexpr const TSymbolUniqueId
    BuiltInId::textureProjGradOffset_Sampler2D1_Float3_Float2_Float2_Int2;
constexpr const TSymbolUniqueId
    BuiltInId::textureProjGradOffset_ISampler2D1_Float3_Float2_Float2_Int2;
constexpr const TSymbolUniqueId
    BuiltInId::textureProjGradOffset_USampler2D1_Float3_Float2_Float2_Int2;
constexpr const TSymbolUniqueId
    BuiltInId::textureProjGradOffset_Sampler2D1_Float4_Float2_Float2_Int2;
constexpr const TSymbolUniqueId
    BuiltInId::textureProjGradOffset_ISampler2D1_Float4_Float2_Float2_Int2;
constexpr const TSymbolUniqueId
    BuiltInId::textureProjGradOffset_USampler2D1_Float4_Float2_Float2_Int2;
constexpr const TSymbolUniqueId
    BuiltInId::textureProjGradOffset_Sampler3D1_Float4_Float3_Float3_Int3;
constexpr const TSymbolUniqueId
    BuiltInId::textureProjGradOffset_ISampler3D1_Float4_Float3_Float3_Int3;
constexpr const TSymbolUniqueId
    BuiltInId::textureProjGradOffset_USampler3D1_Float4_Float3_Float3_Int3;
constexpr const TSymbolUniqueId
    BuiltInId::textureProjGradOffset_Sampler2DShadow1_Float4_Float2_Float2_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureOffset_Sampler2D1_Float2_Int2_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureOffset_ISampler2D1_Float2_Int2_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureOffset_USampler2D1_Float2_Int2_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureOffset_Sampler3D1_Float3_Int3_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureOffset_ISampler3D1_Float3_Int3_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureOffset_USampler3D1_Float3_Int3_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureOffset_Sampler2DShadow1_Float3_Int2_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureOffset_Sampler2DArray1_Float3_Int2_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureOffset_ISampler2DArray1_Float3_Int2_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureOffset_USampler2DArray1_Float3_Int2_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureProjOffset_Sampler2D1_Float3_Int2_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureProjOffset_ISampler2D1_Float3_Int2_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureProjOffset_USampler2D1_Float3_Int2_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureProjOffset_Sampler2D1_Float4_Int2_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureProjOffset_ISampler2D1_Float4_Int2_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureProjOffset_USampler2D1_Float4_Int2_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureProjOffset_Sampler3D1_Float4_Int3_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureProjOffset_ISampler3D1_Float4_Int3_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureProjOffset_USampler3D1_Float4_Int3_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureProjOffset_Sampler2DShadow1_Float4_Int2_Float1;
constexpr const TSymbolUniqueId BuiltInId::texture_SamplerExternalOES1_Float2;
constexpr const TSymbolUniqueId BuiltInId::textureProj_SamplerExternalOES1_Float3;
constexpr const TSymbolUniqueId BuiltInId::textureProj_SamplerExternalOES1_Float4;
constexpr const TSymbolUniqueId BuiltInId::textureSize_SamplerExternalOES1_Int1;
constexpr const TSymbolUniqueId BuiltInId::texelFetch_SamplerExternalOES1_Int2_Int1;
constexpr const TSymbolUniqueId BuiltInId::texture_SamplerExternal2DY2YEXT1_Float2;
constexpr const TSymbolUniqueId BuiltInId::textureProj_SamplerExternal2DY2YEXT1_Float3;
constexpr const TSymbolUniqueId BuiltInId::textureProj_SamplerExternal2DY2YEXT1_Float4;
constexpr const TSymbolUniqueId BuiltInId::rgb_2_yuv_Float3_YuvCscStandardEXT1;
constexpr const TSymbolUniqueId BuiltInId::yuv_2_rgb_Float3_YuvCscStandardEXT1;
constexpr const TSymbolUniqueId BuiltInId::textureSize_SamplerExternal2DY2YEXT1_Int1;
constexpr const TSymbolUniqueId BuiltInId::texelFetch_SamplerExternal2DY2YEXT1_Int2_Int1;
constexpr const TSymbolUniqueId BuiltInId::texture_Sampler2D1_Float2_Float1;
constexpr const TSymbolUniqueId BuiltInId::texture_ISampler2D1_Float2_Float1;
constexpr const TSymbolUniqueId BuiltInId::texture_USampler2D1_Float2_Float1;
constexpr const TSymbolUniqueId BuiltInId::texture_Sampler3D1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::texture_ISampler3D1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::texture_USampler3D1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::texture_SamplerCube1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::texture_ISamplerCube1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::texture_USamplerCube1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::texture_Sampler2DArray1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::texture_ISampler2DArray1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::texture_USampler2DArray1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureProj_Sampler2D1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureProj_ISampler2D1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureProj_USampler2D1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureProj_Sampler2D1_Float4_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureProj_ISampler2D1_Float4_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureProj_USampler2D1_Float4_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureProj_Sampler3D1_Float4_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureProj_ISampler3D1_Float4_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureProj_USampler3D1_Float4_Float1;
constexpr const TSymbolUniqueId BuiltInId::texture_Sampler2DShadow1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::texture_SamplerCubeShadow1_Float4_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureProj_Sampler2DShadow1_Float4_Float1;
constexpr const TSymbolUniqueId BuiltInId::texture_SamplerExternalOES1_Float2_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureProj_SamplerExternalOES1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureProj_SamplerExternalOES1_Float4_Float1;
constexpr const TSymbolUniqueId BuiltInId::texture_SamplerExternal2DY2YEXT1_Float2_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureProj_SamplerExternal2DY2YEXT1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureProj_SamplerExternal2DY2YEXT1_Float4_Float1;
constexpr const TSymbolUniqueId BuiltInId::texelFetch_Sampler2DMS1_Int2_Int1;
constexpr const TSymbolUniqueId BuiltInId::texelFetch_ISampler2DMS1_Int2_Int1;
constexpr const TSymbolUniqueId BuiltInId::texelFetch_USampler2DMS1_Int2_Int1;
constexpr const TSymbolUniqueId BuiltInId::texelFetchExt_Sampler2DMS1_Int2_Int1;
constexpr const TSymbolUniqueId BuiltInId::texelFetchExt_ISampler2DMS1_Int2_Int1;
constexpr const TSymbolUniqueId BuiltInId::texelFetchExt_USampler2DMS1_Int2_Int1;
constexpr const TSymbolUniqueId BuiltInId::texelFetch_Sampler2DMSArray1_Int3_Int1;
constexpr const TSymbolUniqueId BuiltInId::texelFetch_ISampler2DMSArray1_Int3_Int1;
constexpr const TSymbolUniqueId BuiltInId::texelFetch_USampler2DMSArray1_Int3_Int1;
constexpr const TSymbolUniqueId BuiltInId::textureGather_Sampler2D1_Float2;
constexpr const TSymbolUniqueId BuiltInId::textureGather_ISampler2D1_Float2;
constexpr const TSymbolUniqueId BuiltInId::textureGather_USampler2D1_Float2;
constexpr const TSymbolUniqueId BuiltInId::textureGather_Sampler2D1_Float2_Int1;
constexpr const TSymbolUniqueId BuiltInId::textureGather_ISampler2D1_Float2_Int1;
constexpr const TSymbolUniqueId BuiltInId::textureGather_USampler2D1_Float2_Int1;
constexpr const TSymbolUniqueId BuiltInId::textureGather_Sampler2DArray1_Float3;
constexpr const TSymbolUniqueId BuiltInId::textureGather_ISampler2DArray1_Float3;
constexpr const TSymbolUniqueId BuiltInId::textureGather_USampler2DArray1_Float3;
constexpr const TSymbolUniqueId BuiltInId::textureGather_Sampler2DArray1_Float3_Int1;
constexpr const TSymbolUniqueId BuiltInId::textureGather_ISampler2DArray1_Float3_Int1;
constexpr const TSymbolUniqueId BuiltInId::textureGather_USampler2DArray1_Float3_Int1;
constexpr const TSymbolUniqueId BuiltInId::textureGather_SamplerCube1_Float3;
constexpr const TSymbolUniqueId BuiltInId::textureGather_ISamplerCube1_Float3;
constexpr const TSymbolUniqueId BuiltInId::textureGather_USamplerCube1_Float3;
constexpr const TSymbolUniqueId BuiltInId::textureGather_SamplerCube1_Float3_Int1;
constexpr const TSymbolUniqueId BuiltInId::textureGather_ISamplerCube1_Float3_Int1;
constexpr const TSymbolUniqueId BuiltInId::textureGather_USamplerCube1_Float3_Int1;
constexpr const TSymbolUniqueId BuiltInId::textureGather_Sampler2DShadow1_Float2;
constexpr const TSymbolUniqueId BuiltInId::textureGather_Sampler2DShadow1_Float2_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureGather_Sampler2DArrayShadow1_Float3;
constexpr const TSymbolUniqueId BuiltInId::textureGather_Sampler2DArrayShadow1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureGather_SamplerCubeShadow1_Float3;
constexpr const TSymbolUniqueId BuiltInId::textureGather_SamplerCubeShadow1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureGatherOffset_Sampler2D1_Float2_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureGatherOffset_ISampler2D1_Float2_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureGatherOffset_USampler2D1_Float2_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureGatherOffset_Sampler2D1_Float2_Int2_Int1;
constexpr const TSymbolUniqueId BuiltInId::textureGatherOffset_ISampler2D1_Float2_Int2_Int1;
constexpr const TSymbolUniqueId BuiltInId::textureGatherOffset_USampler2D1_Float2_Int2_Int1;
constexpr const TSymbolUniqueId BuiltInId::textureGatherOffset_Sampler2DArray1_Float3_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureGatherOffset_ISampler2DArray1_Float3_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureGatherOffset_USampler2DArray1_Float3_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureGatherOffset_Sampler2DArray1_Float3_Int2_Int1;
constexpr const TSymbolUniqueId BuiltInId::textureGatherOffset_ISampler2DArray1_Float3_Int2_Int1;
constexpr const TSymbolUniqueId BuiltInId::textureGatherOffset_USampler2DArray1_Float3_Int2_Int1;
constexpr const TSymbolUniqueId BuiltInId::textureGatherOffset_Sampler2DShadow1_Float2_Float1_Int2;
constexpr const TSymbolUniqueId
    BuiltInId::textureGatherOffset_Sampler2DArrayShadow1_Float3_Float1_Int2;
constexpr const TSymbolUniqueId BuiltInId::dFdx_Float1;
constexpr const TSymbolUniqueId BuiltInId::dFdx_Float2;
constexpr const TSymbolUniqueId BuiltInId::dFdx_Float3;
constexpr const TSymbolUniqueId BuiltInId::dFdx_Float4;
constexpr const TSymbolUniqueId BuiltInId::dFdy_Float1;
constexpr const TSymbolUniqueId BuiltInId::dFdy_Float2;
constexpr const TSymbolUniqueId BuiltInId::dFdy_Float3;
constexpr const TSymbolUniqueId BuiltInId::dFdy_Float4;
constexpr const TSymbolUniqueId BuiltInId::fwidth_Float1;
constexpr const TSymbolUniqueId BuiltInId::fwidth_Float2;
constexpr const TSymbolUniqueId BuiltInId::fwidth_Float3;
constexpr const TSymbolUniqueId BuiltInId::fwidth_Float4;
constexpr const TSymbolUniqueId BuiltInId::atomicCounter_AtomicCounter1;
constexpr const TSymbolUniqueId BuiltInId::atomicCounterIncrement_AtomicCounter1;
constexpr const TSymbolUniqueId BuiltInId::atomicCounterDecrement_AtomicCounter1;
constexpr const TSymbolUniqueId BuiltInId::atomicAdd_UInt1_UInt1;
constexpr const TSymbolUniqueId BuiltInId::atomicAdd_Int1_Int1;
constexpr const TSymbolUniqueId BuiltInId::atomicMin_UInt1_UInt1;
constexpr const TSymbolUniqueId BuiltInId::atomicMin_Int1_Int1;
constexpr const TSymbolUniqueId BuiltInId::atomicMax_UInt1_UInt1;
constexpr const TSymbolUniqueId BuiltInId::atomicMax_Int1_Int1;
constexpr const TSymbolUniqueId BuiltInId::atomicAnd_UInt1_UInt1;
constexpr const TSymbolUniqueId BuiltInId::atomicAnd_Int1_Int1;
constexpr const TSymbolUniqueId BuiltInId::atomicOr_UInt1_UInt1;
constexpr const TSymbolUniqueId BuiltInId::atomicOr_Int1_Int1;
constexpr const TSymbolUniqueId BuiltInId::atomicXor_UInt1_UInt1;
constexpr const TSymbolUniqueId BuiltInId::atomicXor_Int1_Int1;
constexpr const TSymbolUniqueId BuiltInId::atomicExchange_UInt1_UInt1;
constexpr const TSymbolUniqueId BuiltInId::atomicExchange_Int1_Int1;
constexpr const TSymbolUniqueId BuiltInId::atomicCompSwap_UInt1_UInt1_UInt1;
constexpr const TSymbolUniqueId BuiltInId::atomicCompSwap_Int1_Int1_Int1;
constexpr const TSymbolUniqueId BuiltInId::imageSize_Image2D1;
constexpr const TSymbolUniqueId BuiltInId::imageSize_IImage2D1;
constexpr const TSymbolUniqueId BuiltInId::imageSize_UImage2D1;
constexpr const TSymbolUniqueId BuiltInId::imageSize_Image3D1;
constexpr const TSymbolUniqueId BuiltInId::imageSize_IImage3D1;
constexpr const TSymbolUniqueId BuiltInId::imageSize_UImage3D1;
constexpr const TSymbolUniqueId BuiltInId::imageSize_Image2DArray1;
constexpr const TSymbolUniqueId BuiltInId::imageSize_IImage2DArray1;
constexpr const TSymbolUniqueId BuiltInId::imageSize_UImage2DArray1;
constexpr const TSymbolUniqueId BuiltInId::imageSize_ImageCube1;
constexpr const TSymbolUniqueId BuiltInId::imageSize_IImageCube1;
constexpr const TSymbolUniqueId BuiltInId::imageSize_UImageCube1;
constexpr const TSymbolUniqueId BuiltInId::imageLoad_Image2D1_Int2;
constexpr const TSymbolUniqueId BuiltInId::imageLoad_IImage2D1_Int2;
constexpr const TSymbolUniqueId BuiltInId::imageLoad_UImage2D1_Int2;
constexpr const TSymbolUniqueId BuiltInId::imageLoad_Image3D1_Int3;
constexpr const TSymbolUniqueId BuiltInId::imageLoad_IImage3D1_Int3;
constexpr const TSymbolUniqueId BuiltInId::imageLoad_UImage3D1_Int3;
constexpr const TSymbolUniqueId BuiltInId::imageLoad_Image2DArray1_Int3;
constexpr const TSymbolUniqueId BuiltInId::imageLoad_IImage2DArray1_Int3;
constexpr const TSymbolUniqueId BuiltInId::imageLoad_UImage2DArray1_Int3;
constexpr const TSymbolUniqueId BuiltInId::imageLoad_ImageCube1_Int3;
constexpr const TSymbolUniqueId BuiltInId::imageLoad_IImageCube1_Int3;
constexpr const TSymbolUniqueId BuiltInId::imageLoad_UImageCube1_Int3;
constexpr const TSymbolUniqueId BuiltInId::imageStore_Image2D1_Int2_Float4;
constexpr const TSymbolUniqueId BuiltInId::imageStore_IImage2D1_Int2_Int4;
constexpr const TSymbolUniqueId BuiltInId::imageStore_UImage2D1_Int2_UInt4;
constexpr const TSymbolUniqueId BuiltInId::imageStore_Image3D1_Int3_Float4;
constexpr const TSymbolUniqueId BuiltInId::imageStore_IImage3D1_Int3_Int4;
constexpr const TSymbolUniqueId BuiltInId::imageStore_UImage3D1_Int3_UInt4;
constexpr const TSymbolUniqueId BuiltInId::imageStore_Image2DArray1_Int3_Float4;
constexpr const TSymbolUniqueId BuiltInId::imageStore_IImage2DArray1_Int3_Int4;
constexpr const TSymbolUniqueId BuiltInId::imageStore_UImage2DArray1_Int3_UInt4;
constexpr const TSymbolUniqueId BuiltInId::imageStore_ImageCube1_Int3_Float4;
constexpr const TSymbolUniqueId BuiltInId::imageStore_IImageCube1_Int3_Int4;
constexpr const TSymbolUniqueId BuiltInId::imageStore_UImageCube1_Int3_UInt4;
constexpr const TSymbolUniqueId BuiltInId::memoryBarrier;
constexpr const TSymbolUniqueId BuiltInId::memoryBarrierAtomicCounter;
constexpr const TSymbolUniqueId BuiltInId::memoryBarrierBuffer;
constexpr const TSymbolUniqueId BuiltInId::memoryBarrierImage;
constexpr const TSymbolUniqueId BuiltInId::barrier;
constexpr const TSymbolUniqueId BuiltInId::memoryBarrierShared;
constexpr const TSymbolUniqueId BuiltInId::groupMemoryBarrier;
constexpr const TSymbolUniqueId BuiltInId::EmitVertex;
constexpr const TSymbolUniqueId BuiltInId::EndPrimitive;
constexpr const TSymbolUniqueId BuiltInId::gl_DepthRangeParameters;
constexpr const TSymbolUniqueId BuiltInId::gl_DepthRange;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxVertexAttribs;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxVertexUniformVectors;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxVertexTextureImageUnits;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxCombinedTextureImageUnits;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxTextureImageUnits;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxFragmentUniformVectors;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxVaryingVectors;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxDrawBuffers;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxDualSourceDrawBuffersEXT;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxVertexOutputVectors;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxFragmentInputVectors;
constexpr const TSymbolUniqueId BuiltInId::gl_MinProgramTexelOffset;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxProgramTexelOffset;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxImageUnits;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxVertexImageUniforms;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxFragmentImageUniforms;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxComputeImageUniforms;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxCombinedImageUniforms;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxCombinedShaderOutputResources;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxComputeWorkGroupCount;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxComputeWorkGroupSize;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxComputeUniformComponents;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxComputeTextureImageUnits;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxComputeAtomicCounters;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxComputeAtomicCounterBuffers;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxVertexAtomicCounters;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxFragmentAtomicCounters;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxCombinedAtomicCounters;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxAtomicCounterBindings;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxVertexAtomicCounterBuffers;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxFragmentAtomicCounterBuffers;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxCombinedAtomicCounterBuffers;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxAtomicCounterBufferSize;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxGeometryInputComponents;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxGeometryOutputComponents;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxGeometryImageUniforms;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxGeometryTextureImageUnits;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxGeometryOutputVertices;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxGeometryTotalOutputComponents;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxGeometryUniformComponents;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxGeometryAtomicCounters;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxGeometryAtomicCounterBuffers;
constexpr const TSymbolUniqueId BuiltInId::gl_FragCoord;
constexpr const TSymbolUniqueId BuiltInId::gl_FrontFacing;
constexpr const TSymbolUniqueId BuiltInId::gl_PointCoord;
constexpr const TSymbolUniqueId BuiltInId::gl_FragColor;
constexpr const TSymbolUniqueId BuiltInId::gl_FragData;
constexpr const TSymbolUniqueId BuiltInId::gl_FragDepth;
constexpr const TSymbolUniqueId BuiltInId::gl_SecondaryFragColorEXT;
constexpr const TSymbolUniqueId BuiltInId::gl_SecondaryFragDataEXT;
constexpr const TSymbolUniqueId BuiltInId::gl_FragDepthEXT;
constexpr const TSymbolUniqueId BuiltInId::gl_LastFragData;
constexpr const TSymbolUniqueId BuiltInId::gl_LastFragColor;
constexpr const TSymbolUniqueId BuiltInId::gl_LastFragDataNV;
constexpr const TSymbolUniqueId BuiltInId::gl_LastFragColorARM;
constexpr const TSymbolUniqueId BuiltInId::gl_PrimitiveID;
constexpr const TSymbolUniqueId BuiltInId::gl_Layer;
constexpr const TSymbolUniqueId BuiltInId::gl_Position;
constexpr const TSymbolUniqueId BuiltInId::gl_PointSize;
constexpr const TSymbolUniqueId BuiltInId::gl_InstanceID;
constexpr const TSymbolUniqueId BuiltInId::gl_VertexID;
constexpr const TSymbolUniqueId BuiltInId::gl_ViewportIndex;
constexpr const TSymbolUniqueId BuiltInId::gl_LayerVS;
constexpr const TSymbolUniqueId BuiltInId::gl_DrawID;
constexpr const TSymbolUniqueId BuiltInId::gl_DrawIDESSL1;
constexpr const TSymbolUniqueId BuiltInId::gl_BaseVertex;
constexpr const TSymbolUniqueId BuiltInId::gl_BaseInstance;
constexpr const TSymbolUniqueId BuiltInId::gl_NumWorkGroups;
constexpr const TSymbolUniqueId BuiltInId::gl_WorkGroupSize;
constexpr const TSymbolUniqueId BuiltInId::gl_WorkGroupID;
constexpr const TSymbolUniqueId BuiltInId::gl_LocalInvocationID;
constexpr const TSymbolUniqueId BuiltInId::gl_GlobalInvocationID;
constexpr const TSymbolUniqueId BuiltInId::gl_LocalInvocationIndex;
constexpr const TSymbolUniqueId BuiltInId::gl_PrimitiveIDIn;
constexpr const TSymbolUniqueId BuiltInId::gl_InvocationID;
constexpr const TSymbolUniqueId BuiltInId::gl_PrimitiveIDGS;
constexpr const TSymbolUniqueId BuiltInId::gl_LayerGS;
constexpr const TSymbolUniqueId BuiltInId::gl_PerVertex;
constexpr const TSymbolUniqueId BuiltInId::gl_in;
constexpr const TSymbolUniqueId BuiltInId::gl_PerVertexOutBlock;
constexpr const TSymbolUniqueId BuiltInId::gl_PositionGS;
constexpr const TSymbolUniqueId BuiltInId::gl_ViewID_OVR;
constexpr const TSymbolUniqueId BuiltInId::gl_ViewID_OVRESSL1;

const int TSymbolTable::kLastBuiltInId = 1033;

namespace BuiltInName
{

constexpr const ImmutableString _empty("");
constexpr const ImmutableString EmitVertex("EmitVertex");
constexpr const ImmutableString EmitVertex_("EmitVertex(");
constexpr const ImmutableString EndPrimitive("EndPrimitive");
constexpr const ImmutableString EndPrimitive_("EndPrimitive(");
constexpr const ImmutableString abs("abs");
constexpr const ImmutableString abs_0B("abs(0B");
constexpr const ImmutableString abs_0C("abs(0C");
constexpr const ImmutableString abs_1B("abs(1B");
constexpr const ImmutableString abs_1C("abs(1C");
constexpr const ImmutableString abs_2B("abs(2B");
constexpr const ImmutableString abs_2C("abs(2C");
constexpr const ImmutableString abs_3B("abs(3B");
constexpr const ImmutableString abs_3C("abs(3C");
constexpr const ImmutableString acos("acos");
constexpr const ImmutableString acos_0B("acos(0B");
constexpr const ImmutableString acos_1B("acos(1B");
constexpr const ImmutableString acos_2B("acos(2B");
constexpr const ImmutableString acos_3B("acos(3B");
constexpr const ImmutableString acosh("acosh");
constexpr const ImmutableString acosh_0B("acosh(0B");
constexpr const ImmutableString acosh_1B("acosh(1B");
constexpr const ImmutableString acosh_2B("acosh(2B");
constexpr const ImmutableString acosh_3B("acosh(3B");
constexpr const ImmutableString all("all");
constexpr const ImmutableString all_1E("all(1E");
constexpr const ImmutableString all_2E("all(2E");
constexpr const ImmutableString all_3E("all(3E");
constexpr const ImmutableString any("any");
constexpr const ImmutableString any_1E("any(1E");
constexpr const ImmutableString any_2E("any(2E");
constexpr const ImmutableString any_3E("any(3E");
constexpr const ImmutableString asin("asin");
constexpr const ImmutableString asin_0B("asin(0B");
constexpr const ImmutableString asin_1B("asin(1B");
constexpr const ImmutableString asin_2B("asin(2B");
constexpr const ImmutableString asin_3B("asin(3B");
constexpr const ImmutableString asinh("asinh");
constexpr const ImmutableString asinh_0B("asinh(0B");
constexpr const ImmutableString asinh_1B("asinh(1B");
constexpr const ImmutableString asinh_2B("asinh(2B");
constexpr const ImmutableString asinh_3B("asinh(3B");
constexpr const ImmutableString atan("atan");
constexpr const ImmutableString atan_0B("atan(0B");
constexpr const ImmutableString atan_0B0B("atan(0B0B");
constexpr const ImmutableString atan_1B("atan(1B");
constexpr const ImmutableString atan_1B1B("atan(1B1B");
constexpr const ImmutableString atan_2B("atan(2B");
constexpr const ImmutableString atan_2B2B("atan(2B2B");
constexpr const ImmutableString atan_3B("atan(3B");
constexpr const ImmutableString atan_3B3B("atan(3B3B");
constexpr const ImmutableString atanh("atanh");
constexpr const ImmutableString atanh_0B("atanh(0B");
constexpr const ImmutableString atanh_1B("atanh(1B");
constexpr const ImmutableString atanh_2B("atanh(2B");
constexpr const ImmutableString atanh_3B("atanh(3B");
constexpr const ImmutableString atomicAdd("atomicAdd");
constexpr const ImmutableString atomicAdd_0C0C("atomicAdd(0C0C");
constexpr const ImmutableString atomicAdd_0D0D("atomicAdd(0D0D");
constexpr const ImmutableString atomicAnd("atomicAnd");
constexpr const ImmutableString atomicAnd_0C0C("atomicAnd(0C0C");
constexpr const ImmutableString atomicAnd_0D0D("atomicAnd(0D0D");
constexpr const ImmutableString atomicCompSwap("atomicCompSwap");
constexpr const ImmutableString atomicCompSwap_0C0C0C("atomicCompSwap(0C0C0C");
constexpr const ImmutableString atomicCompSwap_0D0D0D("atomicCompSwap(0D0D0D");
constexpr const ImmutableString atomicCounter("atomicCounter");
constexpr const ImmutableString atomicCounterDecrement("atomicCounterDecrement");
constexpr const ImmutableString atomicCounterDecrement_0F("atomicCounterDecrement(0F");
constexpr const ImmutableString atomicCounterIncrement("atomicCounterIncrement");
constexpr const ImmutableString atomicCounterIncrement_0F("atomicCounterIncrement(0F");
constexpr const ImmutableString atomicCounter_0F("atomicCounter(0F");
constexpr const ImmutableString atomicExchange("atomicExchange");
constexpr const ImmutableString atomicExchange_0C0C("atomicExchange(0C0C");
constexpr const ImmutableString atomicExchange_0D0D("atomicExchange(0D0D");
constexpr const ImmutableString atomicMax("atomicMax");
constexpr const ImmutableString atomicMax_0C0C("atomicMax(0C0C");
constexpr const ImmutableString atomicMax_0D0D("atomicMax(0D0D");
constexpr const ImmutableString atomicMin("atomicMin");
constexpr const ImmutableString atomicMin_0C0C("atomicMin(0C0C");
constexpr const ImmutableString atomicMin_0D0D("atomicMin(0D0D");
constexpr const ImmutableString atomicOr("atomicOr");
constexpr const ImmutableString atomicOr_0C0C("atomicOr(0C0C");
constexpr const ImmutableString atomicOr_0D0D("atomicOr(0D0D");
constexpr const ImmutableString atomicXor("atomicXor");
constexpr const ImmutableString atomicXor_0C0C("atomicXor(0C0C");
constexpr const ImmutableString atomicXor_0D0D("atomicXor(0D0D");
constexpr const ImmutableString barrier("barrier");
constexpr const ImmutableString barrier_("barrier(");
constexpr const ImmutableString bitCount("bitCount");
constexpr const ImmutableString bitCount_0C("bitCount(0C");
constexpr const ImmutableString bitCount_0D("bitCount(0D");
constexpr const ImmutableString bitCount_1C("bitCount(1C");
constexpr const ImmutableString bitCount_1D("bitCount(1D");
constexpr const ImmutableString bitCount_2C("bitCount(2C");
constexpr const ImmutableString bitCount_2D("bitCount(2D");
constexpr const ImmutableString bitCount_3C("bitCount(3C");
constexpr const ImmutableString bitCount_3D("bitCount(3D");
constexpr const ImmutableString bitfieldExtract("bitfieldExtract");
constexpr const ImmutableString bitfieldExtract_0C0C0C("bitfieldExtract(0C0C0C");
constexpr const ImmutableString bitfieldExtract_0D0C0C("bitfieldExtract(0D0C0C");
constexpr const ImmutableString bitfieldExtract_1C0C0C("bitfieldExtract(1C0C0C");
constexpr const ImmutableString bitfieldExtract_1D0C0C("bitfieldExtract(1D0C0C");
constexpr const ImmutableString bitfieldExtract_2C0C0C("bitfieldExtract(2C0C0C");
constexpr const ImmutableString bitfieldExtract_2D0C0C("bitfieldExtract(2D0C0C");
constexpr const ImmutableString bitfieldExtract_3C0C0C("bitfieldExtract(3C0C0C");
constexpr const ImmutableString bitfieldExtract_3D0C0C("bitfieldExtract(3D0C0C");
constexpr const ImmutableString bitfieldInsert("bitfieldInsert");
constexpr const ImmutableString bitfieldInsert_0C0C0C0C("bitfieldInsert(0C0C0C0C");
constexpr const ImmutableString bitfieldInsert_0D0D0C0C("bitfieldInsert(0D0D0C0C");
constexpr const ImmutableString bitfieldInsert_1C1C0C0C("bitfieldInsert(1C1C0C0C");
constexpr const ImmutableString bitfieldInsert_1D1D0C0C("bitfieldInsert(1D1D0C0C");
constexpr const ImmutableString bitfieldInsert_2C2C0C0C("bitfieldInsert(2C2C0C0C");
constexpr const ImmutableString bitfieldInsert_2D2D0C0C("bitfieldInsert(2D2D0C0C");
constexpr const ImmutableString bitfieldInsert_3C3C0C0C("bitfieldInsert(3C3C0C0C");
constexpr const ImmutableString bitfieldInsert_3D3D0C0C("bitfieldInsert(3D3D0C0C");
constexpr const ImmutableString bitfieldReverse("bitfieldReverse");
constexpr const ImmutableString bitfieldReverse_0C("bitfieldReverse(0C");
constexpr const ImmutableString bitfieldReverse_0D("bitfieldReverse(0D");
constexpr const ImmutableString bitfieldReverse_1C("bitfieldReverse(1C");
constexpr const ImmutableString bitfieldReverse_1D("bitfieldReverse(1D");
constexpr const ImmutableString bitfieldReverse_2C("bitfieldReverse(2C");
constexpr const ImmutableString bitfieldReverse_2D("bitfieldReverse(2D");
constexpr const ImmutableString bitfieldReverse_3C("bitfieldReverse(3C");
constexpr const ImmutableString bitfieldReverse_3D("bitfieldReverse(3D");
constexpr const ImmutableString ceil("ceil");
constexpr const ImmutableString ceil_0B("ceil(0B");
constexpr const ImmutableString ceil_1B("ceil(1B");
constexpr const ImmutableString ceil_2B("ceil(2B");
constexpr const ImmutableString ceil_3B("ceil(3B");
constexpr const ImmutableString clamp("clamp");
constexpr const ImmutableString clamp_0B0B0B("clamp(0B0B0B");
constexpr const ImmutableString clamp_0C0C0C("clamp(0C0C0C");
constexpr const ImmutableString clamp_0D0D0D("clamp(0D0D0D");
constexpr const ImmutableString clamp_1B0B0B("clamp(1B0B0B");
constexpr const ImmutableString clamp_1B1B1B("clamp(1B1B1B");
constexpr const ImmutableString clamp_1C0C0C("clamp(1C0C0C");
constexpr const ImmutableString clamp_1C1C1C("clamp(1C1C1C");
constexpr const ImmutableString clamp_1D0D0D("clamp(1D0D0D");
constexpr const ImmutableString clamp_1D1D1D("clamp(1D1D1D");
constexpr const ImmutableString clamp_2B0B0B("clamp(2B0B0B");
constexpr const ImmutableString clamp_2B2B2B("clamp(2B2B2B");
constexpr const ImmutableString clamp_2C0C0C("clamp(2C0C0C");
constexpr const ImmutableString clamp_2C2C2C("clamp(2C2C2C");
constexpr const ImmutableString clamp_2D0D0D("clamp(2D0D0D");
constexpr const ImmutableString clamp_2D2D2D("clamp(2D2D2D");
constexpr const ImmutableString clamp_3B0B0B("clamp(3B0B0B");
constexpr const ImmutableString clamp_3B3B3B("clamp(3B3B3B");
constexpr const ImmutableString clamp_3C0C0C("clamp(3C0C0C");
constexpr const ImmutableString clamp_3C3C3C("clamp(3C3C3C");
constexpr const ImmutableString clamp_3D0D0D("clamp(3D0D0D");
constexpr const ImmutableString clamp_3D3D3D("clamp(3D3D3D");
constexpr const ImmutableString cos("cos");
constexpr const ImmutableString cos_0B("cos(0B");
constexpr const ImmutableString cos_1B("cos(1B");
constexpr const ImmutableString cos_2B("cos(2B");
constexpr const ImmutableString cos_3B("cos(3B");
constexpr const ImmutableString cosh("cosh");
constexpr const ImmutableString cosh_0B("cosh(0B");
constexpr const ImmutableString cosh_1B("cosh(1B");
constexpr const ImmutableString cosh_2B("cosh(2B");
constexpr const ImmutableString cosh_3B("cosh(3B");
constexpr const ImmutableString cross("cross");
constexpr const ImmutableString cross_2B2B("cross(2B2B");
constexpr const ImmutableString dFdx("dFdx");
constexpr const ImmutableString dFdxExt("dFdx");
constexpr const ImmutableString dFdxExt_0B("dFdx(0B");
constexpr const ImmutableString dFdxExt_1B("dFdx(1B");
constexpr const ImmutableString dFdxExt_2B("dFdx(2B");
constexpr const ImmutableString dFdxExt_3B("dFdx(3B");
constexpr const ImmutableString dFdx_0B("dFdx(0B");
constexpr const ImmutableString dFdx_1B("dFdx(1B");
constexpr const ImmutableString dFdx_2B("dFdx(2B");
constexpr const ImmutableString dFdx_3B("dFdx(3B");
constexpr const ImmutableString dFdy("dFdy");
constexpr const ImmutableString dFdyExt("dFdy");
constexpr const ImmutableString dFdyExt_0B("dFdy(0B");
constexpr const ImmutableString dFdyExt_1B("dFdy(1B");
constexpr const ImmutableString dFdyExt_2B("dFdy(2B");
constexpr const ImmutableString dFdyExt_3B("dFdy(3B");
constexpr const ImmutableString dFdy_0B("dFdy(0B");
constexpr const ImmutableString dFdy_1B("dFdy(1B");
constexpr const ImmutableString dFdy_2B("dFdy(2B");
constexpr const ImmutableString dFdy_3B("dFdy(3B");
constexpr const ImmutableString degrees("degrees");
constexpr const ImmutableString degrees_0B("degrees(0B");
constexpr const ImmutableString degrees_1B("degrees(1B");
constexpr const ImmutableString degrees_2B("degrees(2B");
constexpr const ImmutableString degrees_3B("degrees(3B");
constexpr const ImmutableString determinant("determinant");
constexpr const ImmutableString determinant_5B("determinant(5B");
constexpr const ImmutableString determinant_AB("determinant(AB");
constexpr const ImmutableString determinant_FB("determinant(FB");
constexpr const ImmutableString diff("diff");
constexpr const ImmutableString distance("distance");
constexpr const ImmutableString distance_0B0B("distance(0B0B");
constexpr const ImmutableString distance_1B1B("distance(1B1B");
constexpr const ImmutableString distance_2B2B("distance(2B2B");
constexpr const ImmutableString distance_3B3B("distance(3B3B");
constexpr const ImmutableString dot("dot");
constexpr const ImmutableString dot_0B0B("dot(0B0B");
constexpr const ImmutableString dot_1B1B("dot(1B1B");
constexpr const ImmutableString dot_2B2B("dot(2B2B");
constexpr const ImmutableString dot_3B3B("dot(3B3B");
constexpr const ImmutableString equal("equal");
constexpr const ImmutableString equal_1B1B("equal(1B1B");
constexpr const ImmutableString equal_1C1C("equal(1C1C");
constexpr const ImmutableString equal_1D1D("equal(1D1D");
constexpr const ImmutableString equal_1E1E("equal(1E1E");
constexpr const ImmutableString equal_2B2B("equal(2B2B");
constexpr const ImmutableString equal_2C2C("equal(2C2C");
constexpr const ImmutableString equal_2D2D("equal(2D2D");
constexpr const ImmutableString equal_2E2E("equal(2E2E");
constexpr const ImmutableString equal_3B3B("equal(3B3B");
constexpr const ImmutableString equal_3C3C("equal(3C3C");
constexpr const ImmutableString equal_3D3D("equal(3D3D");
constexpr const ImmutableString equal_3E3E("equal(3E3E");
constexpr const ImmutableString exp("exp");
constexpr const ImmutableString exp2("exp2");
constexpr const ImmutableString exp2_0B("exp2(0B");
constexpr const ImmutableString exp2_1B("exp2(1B");
constexpr const ImmutableString exp2_2B("exp2(2B");
constexpr const ImmutableString exp2_3B("exp2(3B");
constexpr const ImmutableString exp_0B("exp(0B");
constexpr const ImmutableString exp_1B("exp(1B");
constexpr const ImmutableString exp_2B("exp(2B");
constexpr const ImmutableString exp_3B("exp(3B");
constexpr const ImmutableString faceforward("faceforward");
constexpr const ImmutableString faceforward_0B0B0B("faceforward(0B0B0B");
constexpr const ImmutableString faceforward_1B1B1B("faceforward(1B1B1B");
constexpr const ImmutableString faceforward_2B2B2B("faceforward(2B2B2B");
constexpr const ImmutableString faceforward_3B3B3B("faceforward(3B3B3B");
constexpr const ImmutableString far("far");
constexpr const ImmutableString findLSB("findLSB");
constexpr const ImmutableString findLSB_0C("findLSB(0C");
constexpr const ImmutableString findLSB_0D("findLSB(0D");
constexpr const ImmutableString findLSB_1C("findLSB(1C");
constexpr const ImmutableString findLSB_1D("findLSB(1D");
constexpr const ImmutableString findLSB_2C("findLSB(2C");
constexpr const ImmutableString findLSB_2D("findLSB(2D");
constexpr const ImmutableString findLSB_3C("findLSB(3C");
constexpr const ImmutableString findLSB_3D("findLSB(3D");
constexpr const ImmutableString findMSB("findMSB");
constexpr const ImmutableString findMSB_0C("findMSB(0C");
constexpr const ImmutableString findMSB_0D("findMSB(0D");
constexpr const ImmutableString findMSB_1C("findMSB(1C");
constexpr const ImmutableString findMSB_1D("findMSB(1D");
constexpr const ImmutableString findMSB_2C("findMSB(2C");
constexpr const ImmutableString findMSB_2D("findMSB(2D");
constexpr const ImmutableString findMSB_3C("findMSB(3C");
constexpr const ImmutableString findMSB_3D("findMSB(3D");
constexpr const ImmutableString floatBitsToInt("floatBitsToInt");
constexpr const ImmutableString floatBitsToInt_0B("floatBitsToInt(0B");
constexpr const ImmutableString floatBitsToInt_1B("floatBitsToInt(1B");
constexpr const ImmutableString floatBitsToInt_2B("floatBitsToInt(2B");
constexpr const ImmutableString floatBitsToInt_3B("floatBitsToInt(3B");
constexpr const ImmutableString floatBitsToUint("floatBitsToUint");
constexpr const ImmutableString floatBitsToUint_0B("floatBitsToUint(0B");
constexpr const ImmutableString floatBitsToUint_1B("floatBitsToUint(1B");
constexpr const ImmutableString floatBitsToUint_2B("floatBitsToUint(2B");
constexpr const ImmutableString floatBitsToUint_3B("floatBitsToUint(3B");
constexpr const ImmutableString floor("floor");
constexpr const ImmutableString floor_0B("floor(0B");
constexpr const ImmutableString floor_1B("floor(1B");
constexpr const ImmutableString floor_2B("floor(2B");
constexpr const ImmutableString floor_3B("floor(3B");
constexpr const ImmutableString fract("fract");
constexpr const ImmutableString fract_0B("fract(0B");
constexpr const ImmutableString fract_1B("fract(1B");
constexpr const ImmutableString fract_2B("fract(2B");
constexpr const ImmutableString fract_3B("fract(3B");
constexpr const ImmutableString frexp("frexp");
constexpr const ImmutableString frexp_0B0C("frexp(0B0C");
constexpr const ImmutableString frexp_1B1C("frexp(1B1C");
constexpr const ImmutableString frexp_2B2C("frexp(2B2C");
constexpr const ImmutableString frexp_3B3C("frexp(3B3C");
constexpr const ImmutableString fwidth("fwidth");
constexpr const ImmutableString fwidthExt("fwidth");
constexpr const ImmutableString fwidthExt_0B("fwidth(0B");
constexpr const ImmutableString fwidthExt_1B("fwidth(1B");
constexpr const ImmutableString fwidthExt_2B("fwidth(2B");
constexpr const ImmutableString fwidthExt_3B("fwidth(3B");
constexpr const ImmutableString fwidth_0B("fwidth(0B");
constexpr const ImmutableString fwidth_1B("fwidth(1B");
constexpr const ImmutableString fwidth_2B("fwidth(2B");
constexpr const ImmutableString fwidth_3B("fwidth(3B");
constexpr const ImmutableString gl_BaseInstance("gl_BaseInstance");
constexpr const ImmutableString gl_BaseVertex("gl_BaseVertex");
constexpr const ImmutableString gl_DepthRange("gl_DepthRange");
constexpr const ImmutableString gl_DepthRangeParameters("gl_DepthRangeParameters");
constexpr const ImmutableString gl_DrawID("gl_DrawID");
constexpr const ImmutableString gl_FragColor("gl_FragColor");
constexpr const ImmutableString gl_FragCoord("gl_FragCoord");
constexpr const ImmutableString gl_FragData("gl_FragData");
constexpr const ImmutableString gl_FragDepth("gl_FragDepth");
constexpr const ImmutableString gl_FragDepthEXT("gl_FragDepthEXT");
constexpr const ImmutableString gl_FrontFacing("gl_FrontFacing");
constexpr const ImmutableString gl_GlobalInvocationID("gl_GlobalInvocationID");
constexpr const ImmutableString gl_InstanceID("gl_InstanceID");
constexpr const ImmutableString gl_InvocationID("gl_InvocationID");
constexpr const ImmutableString gl_LastFragColor("gl_LastFragColor");
constexpr const ImmutableString gl_LastFragColorARM("gl_LastFragColorARM");
constexpr const ImmutableString gl_LastFragData("gl_LastFragData");
constexpr const ImmutableString gl_Layer("gl_Layer");
constexpr const ImmutableString gl_LocalInvocationID("gl_LocalInvocationID");
constexpr const ImmutableString gl_LocalInvocationIndex("gl_LocalInvocationIndex");
constexpr const ImmutableString gl_MaxAtomicCounterBindings("gl_MaxAtomicCounterBindings");
constexpr const ImmutableString gl_MaxAtomicCounterBufferSize("gl_MaxAtomicCounterBufferSize");
constexpr const ImmutableString gl_MaxCombinedAtomicCounterBuffers(
    "gl_MaxCombinedAtomicCounterBuffers");
constexpr const ImmutableString gl_MaxCombinedAtomicCounters("gl_MaxCombinedAtomicCounters");
constexpr const ImmutableString gl_MaxCombinedImageUniforms("gl_MaxCombinedImageUniforms");
constexpr const ImmutableString gl_MaxCombinedShaderOutputResources(
    "gl_MaxCombinedShaderOutputResources");
constexpr const ImmutableString gl_MaxCombinedTextureImageUnits("gl_MaxCombinedTextureImageUnits");
constexpr const ImmutableString gl_MaxComputeAtomicCounterBuffers(
    "gl_MaxComputeAtomicCounterBuffers");
constexpr const ImmutableString gl_MaxComputeAtomicCounters("gl_MaxComputeAtomicCounters");
constexpr const ImmutableString gl_MaxComputeImageUniforms("gl_MaxComputeImageUniforms");
constexpr const ImmutableString gl_MaxComputeTextureImageUnits("gl_MaxComputeTextureImageUnits");
constexpr const ImmutableString gl_MaxComputeUniformComponents("gl_MaxComputeUniformComponents");
constexpr const ImmutableString gl_MaxComputeWorkGroupCount("gl_MaxComputeWorkGroupCount");
constexpr const ImmutableString gl_MaxComputeWorkGroupSize("gl_MaxComputeWorkGroupSize");
constexpr const ImmutableString gl_MaxDrawBuffers("gl_MaxDrawBuffers");
constexpr const ImmutableString gl_MaxDualSourceDrawBuffersEXT("gl_MaxDualSourceDrawBuffersEXT");
constexpr const ImmutableString gl_MaxFragmentAtomicCounterBuffers(
    "gl_MaxFragmentAtomicCounterBuffers");
constexpr const ImmutableString gl_MaxFragmentAtomicCounters("gl_MaxFragmentAtomicCounters");
constexpr const ImmutableString gl_MaxFragmentImageUniforms("gl_MaxFragmentImageUniforms");
constexpr const ImmutableString gl_MaxFragmentInputVectors("gl_MaxFragmentInputVectors");
constexpr const ImmutableString gl_MaxFragmentUniformVectors("gl_MaxFragmentUniformVectors");
constexpr const ImmutableString gl_MaxGeometryAtomicCounterBuffers(
    "gl_MaxGeometryAtomicCounterBuffers");
constexpr const ImmutableString gl_MaxGeometryAtomicCounters("gl_MaxGeometryAtomicCounters");
constexpr const ImmutableString gl_MaxGeometryImageUniforms("gl_MaxGeometryImageUniforms");
constexpr const ImmutableString gl_MaxGeometryInputComponents("gl_MaxGeometryInputComponents");
constexpr const ImmutableString gl_MaxGeometryOutputComponents("gl_MaxGeometryOutputComponents");
constexpr const ImmutableString gl_MaxGeometryOutputVertices("gl_MaxGeometryOutputVertices");
constexpr const ImmutableString gl_MaxGeometryTextureImageUnits("gl_MaxGeometryTextureImageUnits");
constexpr const ImmutableString gl_MaxGeometryTotalOutputComponents(
    "gl_MaxGeometryTotalOutputComponents");
constexpr const ImmutableString gl_MaxGeometryUniformComponents("gl_MaxGeometryUniformComponents");
constexpr const ImmutableString gl_MaxImageUnits("gl_MaxImageUnits");
constexpr const ImmutableString gl_MaxProgramTexelOffset("gl_MaxProgramTexelOffset");
constexpr const ImmutableString gl_MaxTextureImageUnits("gl_MaxTextureImageUnits");
constexpr const ImmutableString gl_MaxVaryingVectors("gl_MaxVaryingVectors");
constexpr const ImmutableString gl_MaxVertexAtomicCounterBuffers(
    "gl_MaxVertexAtomicCounterBuffers");
constexpr const ImmutableString gl_MaxVertexAtomicCounters("gl_MaxVertexAtomicCounters");
constexpr const ImmutableString gl_MaxVertexAttribs("gl_MaxVertexAttribs");
constexpr const ImmutableString gl_MaxVertexImageUniforms("gl_MaxVertexImageUniforms");
constexpr const ImmutableString gl_MaxVertexOutputVectors("gl_MaxVertexOutputVectors");
constexpr const ImmutableString gl_MaxVertexTextureImageUnits("gl_MaxVertexTextureImageUnits");
constexpr const ImmutableString gl_MaxVertexUniformVectors("gl_MaxVertexUniformVectors");
constexpr const ImmutableString gl_MinProgramTexelOffset("gl_MinProgramTexelOffset");
constexpr const ImmutableString gl_NumWorkGroups("gl_NumWorkGroups");
constexpr const ImmutableString gl_PerVertex("gl_PerVertex");
constexpr const ImmutableString gl_PointCoord("gl_PointCoord");
constexpr const ImmutableString gl_PointSize("gl_PointSize");
constexpr const ImmutableString gl_Position("gl_Position");
constexpr const ImmutableString gl_PrimitiveID("gl_PrimitiveID");
constexpr const ImmutableString gl_PrimitiveIDIn("gl_PrimitiveIDIn");
constexpr const ImmutableString gl_SecondaryFragColorEXT("gl_SecondaryFragColorEXT");
constexpr const ImmutableString gl_SecondaryFragDataEXT("gl_SecondaryFragDataEXT");
constexpr const ImmutableString gl_VertexID("gl_VertexID");
constexpr const ImmutableString gl_ViewID_OVR("gl_ViewID_OVR");
constexpr const ImmutableString gl_ViewportIndex("gl_ViewportIndex");
constexpr const ImmutableString gl_WorkGroupID("gl_WorkGroupID");
constexpr const ImmutableString gl_WorkGroupSize("gl_WorkGroupSize");
constexpr const ImmutableString gl_in("gl_in");
constexpr const ImmutableString greaterThan("greaterThan");
constexpr const ImmutableString greaterThanEqual("greaterThanEqual");
constexpr const ImmutableString greaterThanEqual_1B1B("greaterThanEqual(1B1B");
constexpr const ImmutableString greaterThanEqual_1C1C("greaterThanEqual(1C1C");
constexpr const ImmutableString greaterThanEqual_1D1D("greaterThanEqual(1D1D");
constexpr const ImmutableString greaterThanEqual_2B2B("greaterThanEqual(2B2B");
constexpr const ImmutableString greaterThanEqual_2C2C("greaterThanEqual(2C2C");
constexpr const ImmutableString greaterThanEqual_2D2D("greaterThanEqual(2D2D");
constexpr const ImmutableString greaterThanEqual_3B3B("greaterThanEqual(3B3B");
constexpr const ImmutableString greaterThanEqual_3C3C("greaterThanEqual(3C3C");
constexpr const ImmutableString greaterThanEqual_3D3D("greaterThanEqual(3D3D");
constexpr const ImmutableString greaterThan_1B1B("greaterThan(1B1B");
constexpr const ImmutableString greaterThan_1C1C("greaterThan(1C1C");
constexpr const ImmutableString greaterThan_1D1D("greaterThan(1D1D");
constexpr const ImmutableString greaterThan_2B2B("greaterThan(2B2B");
constexpr const ImmutableString greaterThan_2C2C("greaterThan(2C2C");
constexpr const ImmutableString greaterThan_2D2D("greaterThan(2D2D");
constexpr const ImmutableString greaterThan_3B3B("greaterThan(3B3B");
constexpr const ImmutableString greaterThan_3C3C("greaterThan(3C3C");
constexpr const ImmutableString greaterThan_3D3D("greaterThan(3D3D");
constexpr const ImmutableString groupMemoryBarrier("groupMemoryBarrier");
constexpr const ImmutableString groupMemoryBarrier_("groupMemoryBarrier(");
constexpr const ImmutableString imageLoad("imageLoad");
constexpr const ImmutableString imageLoad_0f1C("imageLoad(0f1C");
constexpr const ImmutableString imageLoad_0g1C("imageLoad(0g1C");
constexpr const ImmutableString imageLoad_0h1C("imageLoad(0h1C");
constexpr const ImmutableString imageLoad_0i2C("imageLoad(0i2C");
constexpr const ImmutableString imageLoad_0j2C("imageLoad(0j2C");
constexpr const ImmutableString imageLoad_0k2C("imageLoad(0k2C");
constexpr const ImmutableString imageLoad_0l2C("imageLoad(0l2C");
constexpr const ImmutableString imageLoad_0m2C("imageLoad(0m2C");
constexpr const ImmutableString imageLoad_0n2C("imageLoad(0n2C");
constexpr const ImmutableString imageLoad_0o2C("imageLoad(0o2C");
constexpr const ImmutableString imageLoad_0p2C("imageLoad(0p2C");
constexpr const ImmutableString imageLoad_0q2C("imageLoad(0q2C");
constexpr const ImmutableString imageSize("imageSize");
constexpr const ImmutableString imageSize_0f("imageSize(0f");
constexpr const ImmutableString imageSize_0g("imageSize(0g");
constexpr const ImmutableString imageSize_0h("imageSize(0h");
constexpr const ImmutableString imageSize_0i("imageSize(0i");
constexpr const ImmutableString imageSize_0j("imageSize(0j");
constexpr const ImmutableString imageSize_0k("imageSize(0k");
constexpr const ImmutableString imageSize_0l("imageSize(0l");
constexpr const ImmutableString imageSize_0m("imageSize(0m");
constexpr const ImmutableString imageSize_0n("imageSize(0n");
constexpr const ImmutableString imageSize_0o("imageSize(0o");
constexpr const ImmutableString imageSize_0p("imageSize(0p");
constexpr const ImmutableString imageSize_0q("imageSize(0q");
constexpr const ImmutableString imageStore("imageStore");
constexpr const ImmutableString imageStore_0f1C3B("imageStore(0f1C3B");
constexpr const ImmutableString imageStore_0g1C3C("imageStore(0g1C3C");
constexpr const ImmutableString imageStore_0h1C3D("imageStore(0h1C3D");
constexpr const ImmutableString imageStore_0i2C3B("imageStore(0i2C3B");
constexpr const ImmutableString imageStore_0j2C3C("imageStore(0j2C3C");
constexpr const ImmutableString imageStore_0k2C3D("imageStore(0k2C3D");
constexpr const ImmutableString imageStore_0l2C3B("imageStore(0l2C3B");
constexpr const ImmutableString imageStore_0m2C3C("imageStore(0m2C3C");
constexpr const ImmutableString imageStore_0n2C3D("imageStore(0n2C3D");
constexpr const ImmutableString imageStore_0o2C3B("imageStore(0o2C3B");
constexpr const ImmutableString imageStore_0p2C3C("imageStore(0p2C3C");
constexpr const ImmutableString imageStore_0q2C3D("imageStore(0q2C3D");
constexpr const ImmutableString imulExtended("imulExtended");
constexpr const ImmutableString imulExtended_0C0C0C0C("imulExtended(0C0C0C0C");
constexpr const ImmutableString imulExtended_1C1C1C1C("imulExtended(1C1C1C1C");
constexpr const ImmutableString imulExtended_2C2C2C2C("imulExtended(2C2C2C2C");
constexpr const ImmutableString imulExtended_3C3C3C3C("imulExtended(3C3C3C3C");
constexpr const ImmutableString intBitsToFloat("intBitsToFloat");
constexpr const ImmutableString intBitsToFloat_0C("intBitsToFloat(0C");
constexpr const ImmutableString intBitsToFloat_1C("intBitsToFloat(1C");
constexpr const ImmutableString intBitsToFloat_2C("intBitsToFloat(2C");
constexpr const ImmutableString intBitsToFloat_3C("intBitsToFloat(3C");
constexpr const ImmutableString inverse("inverse");
constexpr const ImmutableString inverse_5B("inverse(5B");
constexpr const ImmutableString inverse_AB("inverse(AB");
constexpr const ImmutableString inverse_FB("inverse(FB");
constexpr const ImmutableString inversesqrt("inversesqrt");
constexpr const ImmutableString inversesqrt_0B("inversesqrt(0B");
constexpr const ImmutableString inversesqrt_1B("inversesqrt(1B");
constexpr const ImmutableString inversesqrt_2B("inversesqrt(2B");
constexpr const ImmutableString inversesqrt_3B("inversesqrt(3B");
constexpr const ImmutableString isinf("isinf");
constexpr const ImmutableString isinf_0B("isinf(0B");
constexpr const ImmutableString isinf_1B("isinf(1B");
constexpr const ImmutableString isinf_2B("isinf(2B");
constexpr const ImmutableString isinf_3B("isinf(3B");
constexpr const ImmutableString isnan("isnan");
constexpr const ImmutableString isnan_0B("isnan(0B");
constexpr const ImmutableString isnan_1B("isnan(1B");
constexpr const ImmutableString isnan_2B("isnan(2B");
constexpr const ImmutableString isnan_3B("isnan(3B");
constexpr const ImmutableString ldexp("ldexp");
constexpr const ImmutableString ldexp_0B0C("ldexp(0B0C");
constexpr const ImmutableString ldexp_1B1C("ldexp(1B1C");
constexpr const ImmutableString ldexp_2B2C("ldexp(2B2C");
constexpr const ImmutableString ldexp_3B3C("ldexp(3B3C");
constexpr const ImmutableString length("length");
constexpr const ImmutableString length_0B("length(0B");
constexpr const ImmutableString length_1B("length(1B");
constexpr const ImmutableString length_2B("length(2B");
constexpr const ImmutableString length_3B("length(3B");
constexpr const ImmutableString lessThan("lessThan");
constexpr const ImmutableString lessThanEqual("lessThanEqual");
constexpr const ImmutableString lessThanEqual_1B1B("lessThanEqual(1B1B");
constexpr const ImmutableString lessThanEqual_1C1C("lessThanEqual(1C1C");
constexpr const ImmutableString lessThanEqual_1D1D("lessThanEqual(1D1D");
constexpr const ImmutableString lessThanEqual_2B2B("lessThanEqual(2B2B");
constexpr const ImmutableString lessThanEqual_2C2C("lessThanEqual(2C2C");
constexpr const ImmutableString lessThanEqual_2D2D("lessThanEqual(2D2D");
constexpr const ImmutableString lessThanEqual_3B3B("lessThanEqual(3B3B");
constexpr const ImmutableString lessThanEqual_3C3C("lessThanEqual(3C3C");
constexpr const ImmutableString lessThanEqual_3D3D("lessThanEqual(3D3D");
constexpr const ImmutableString lessThan_1B1B("lessThan(1B1B");
constexpr const ImmutableString lessThan_1C1C("lessThan(1C1C");
constexpr const ImmutableString lessThan_1D1D("lessThan(1D1D");
constexpr const ImmutableString lessThan_2B2B("lessThan(2B2B");
constexpr const ImmutableString lessThan_2C2C("lessThan(2C2C");
constexpr const ImmutableString lessThan_2D2D("lessThan(2D2D");
constexpr const ImmutableString lessThan_3B3B("lessThan(3B3B");
constexpr const ImmutableString lessThan_3C3C("lessThan(3C3C");
constexpr const ImmutableString lessThan_3D3D("lessThan(3D3D");
constexpr const ImmutableString log("log");
constexpr const ImmutableString log2("log2");
constexpr const ImmutableString log2_0B("log2(0B");
constexpr const ImmutableString log2_1B("log2(1B");
constexpr const ImmutableString log2_2B("log2(2B");
constexpr const ImmutableString log2_3B("log2(3B");
constexpr const ImmutableString log_0B("log(0B");
constexpr const ImmutableString log_1B("log(1B");
constexpr const ImmutableString log_2B("log(2B");
constexpr const ImmutableString log_3B("log(3B");
constexpr const ImmutableString matrixCompMult("matrixCompMult");
constexpr const ImmutableString matrixCompMult_5B5B("matrixCompMult(5B5B");
constexpr const ImmutableString matrixCompMult_6B6B("matrixCompMult(6B6B");
constexpr const ImmutableString matrixCompMult_7B7B("matrixCompMult(7B7B");
constexpr const ImmutableString matrixCompMult_9B9B("matrixCompMult(9B9B");
constexpr const ImmutableString matrixCompMult_ABAB("matrixCompMult(ABAB");
constexpr const ImmutableString matrixCompMult_BBBB("matrixCompMult(BBBB");
constexpr const ImmutableString matrixCompMult_DBDB("matrixCompMult(DBDB");
constexpr const ImmutableString matrixCompMult_EBEB("matrixCompMult(EBEB");
constexpr const ImmutableString matrixCompMult_FBFB("matrixCompMult(FBFB");
constexpr const ImmutableString max("max");
constexpr const ImmutableString max_0B0B("max(0B0B");
constexpr const ImmutableString max_0C0C("max(0C0C");
constexpr const ImmutableString max_0D0D("max(0D0D");
constexpr const ImmutableString max_1B0B("max(1B0B");
constexpr const ImmutableString max_1B1B("max(1B1B");
constexpr const ImmutableString max_1C0C("max(1C0C");
constexpr const ImmutableString max_1C1C("max(1C1C");
constexpr const ImmutableString max_1D0D("max(1D0D");
constexpr const ImmutableString max_1D1D("max(1D1D");
constexpr const ImmutableString max_2B0B("max(2B0B");
constexpr const ImmutableString max_2B2B("max(2B2B");
constexpr const ImmutableString max_2C0C("max(2C0C");
constexpr const ImmutableString max_2C2C("max(2C2C");
constexpr const ImmutableString max_2D0D("max(2D0D");
constexpr const ImmutableString max_2D2D("max(2D2D");
constexpr const ImmutableString max_3B0B("max(3B0B");
constexpr const ImmutableString max_3B3B("max(3B3B");
constexpr const ImmutableString max_3C0C("max(3C0C");
constexpr const ImmutableString max_3C3C("max(3C3C");
constexpr const ImmutableString max_3D0D("max(3D0D");
constexpr const ImmutableString max_3D3D("max(3D3D");
constexpr const ImmutableString memoryBarrier("memoryBarrier");
constexpr const ImmutableString memoryBarrierAtomicCounter("memoryBarrierAtomicCounter");
constexpr const ImmutableString memoryBarrierAtomicCounter_("memoryBarrierAtomicCounter(");
constexpr const ImmutableString memoryBarrierBuffer("memoryBarrierBuffer");
constexpr const ImmutableString memoryBarrierBuffer_("memoryBarrierBuffer(");
constexpr const ImmutableString memoryBarrierImage("memoryBarrierImage");
constexpr const ImmutableString memoryBarrierImage_("memoryBarrierImage(");
constexpr const ImmutableString memoryBarrierShared("memoryBarrierShared");
constexpr const ImmutableString memoryBarrierShared_("memoryBarrierShared(");
constexpr const ImmutableString memoryBarrier_("memoryBarrier(");
constexpr const ImmutableString min("min");
constexpr const ImmutableString min_0B0B("min(0B0B");
constexpr const ImmutableString min_0C0C("min(0C0C");
constexpr const ImmutableString min_0D0D("min(0D0D");
constexpr const ImmutableString min_1B0B("min(1B0B");
constexpr const ImmutableString min_1B1B("min(1B1B");
constexpr const ImmutableString min_1C0C("min(1C0C");
constexpr const ImmutableString min_1C1C("min(1C1C");
constexpr const ImmutableString min_1D0D("min(1D0D");
constexpr const ImmutableString min_1D1D("min(1D1D");
constexpr const ImmutableString min_2B0B("min(2B0B");
constexpr const ImmutableString min_2B2B("min(2B2B");
constexpr const ImmutableString min_2C0C("min(2C0C");
constexpr const ImmutableString min_2C2C("min(2C2C");
constexpr const ImmutableString min_2D0D("min(2D0D");
constexpr const ImmutableString min_2D2D("min(2D2D");
constexpr const ImmutableString min_3B0B("min(3B0B");
constexpr const ImmutableString min_3B3B("min(3B3B");
constexpr const ImmutableString min_3C0C("min(3C0C");
constexpr const ImmutableString min_3C3C("min(3C3C");
constexpr const ImmutableString min_3D0D("min(3D0D");
constexpr const ImmutableString min_3D3D("min(3D3D");
constexpr const ImmutableString mix("mix");
constexpr const ImmutableString mix_0B0B0B("mix(0B0B0B");
constexpr const ImmutableString mix_0B0B0E("mix(0B0B0E");
constexpr const ImmutableString mix_1B1B0B("mix(1B1B0B");
constexpr const ImmutableString mix_1B1B1B("mix(1B1B1B");
constexpr const ImmutableString mix_1B1B1E("mix(1B1B1E");
constexpr const ImmutableString mix_2B2B0B("mix(2B2B0B");
constexpr const ImmutableString mix_2B2B2B("mix(2B2B2B");
constexpr const ImmutableString mix_2B2B2E("mix(2B2B2E");
constexpr const ImmutableString mix_3B3B0B("mix(3B3B0B");
constexpr const ImmutableString mix_3B3B3B("mix(3B3B3B");
constexpr const ImmutableString mix_3B3B3E("mix(3B3B3E");
constexpr const ImmutableString mod("mod");
constexpr const ImmutableString mod_0B0B("mod(0B0B");
constexpr const ImmutableString mod_1B0B("mod(1B0B");
constexpr const ImmutableString mod_1B1B("mod(1B1B");
constexpr const ImmutableString mod_2B0B("mod(2B0B");
constexpr const ImmutableString mod_2B2B("mod(2B2B");
constexpr const ImmutableString mod_3B0B("mod(3B0B");
constexpr const ImmutableString mod_3B3B("mod(3B3B");
constexpr const ImmutableString modf("modf");
constexpr const ImmutableString modf_0B0B("modf(0B0B");
constexpr const ImmutableString modf_1B1B("modf(1B1B");
constexpr const ImmutableString modf_2B2B("modf(2B2B");
constexpr const ImmutableString modf_3B3B("modf(3B3B");
constexpr const ImmutableString near("near");
constexpr const ImmutableString normalize("normalize");
constexpr const ImmutableString normalize_0B("normalize(0B");
constexpr const ImmutableString normalize_1B("normalize(1B");
constexpr const ImmutableString normalize_2B("normalize(2B");
constexpr const ImmutableString normalize_3B("normalize(3B");
constexpr const ImmutableString notEqual("notEqual");
constexpr const ImmutableString notEqual_1B1B("notEqual(1B1B");
constexpr const ImmutableString notEqual_1C1C("notEqual(1C1C");
constexpr const ImmutableString notEqual_1D1D("notEqual(1D1D");
constexpr const ImmutableString notEqual_1E1E("notEqual(1E1E");
constexpr const ImmutableString notEqual_2B2B("notEqual(2B2B");
constexpr const ImmutableString notEqual_2C2C("notEqual(2C2C");
constexpr const ImmutableString notEqual_2D2D("notEqual(2D2D");
constexpr const ImmutableString notEqual_2E2E("notEqual(2E2E");
constexpr const ImmutableString notEqual_3B3B("notEqual(3B3B");
constexpr const ImmutableString notEqual_3C3C("notEqual(3C3C");
constexpr const ImmutableString notEqual_3D3D("notEqual(3D3D");
constexpr const ImmutableString notEqual_3E3E("notEqual(3E3E");
constexpr const ImmutableString notFunc("not");
constexpr const ImmutableString notFunc_1E("not(1E");
constexpr const ImmutableString notFunc_2E("not(2E");
constexpr const ImmutableString notFunc_3E("not(3E");
constexpr const ImmutableString outerProduct("outerProduct");
constexpr const ImmutableString outerProduct_1B1B("outerProduct(1B1B");
constexpr const ImmutableString outerProduct_1B2B("outerProduct(1B2B");
constexpr const ImmutableString outerProduct_1B3B("outerProduct(1B3B");
constexpr const ImmutableString outerProduct_2B1B("outerProduct(2B1B");
constexpr const ImmutableString outerProduct_2B2B("outerProduct(2B2B");
constexpr const ImmutableString outerProduct_2B3B("outerProduct(2B3B");
constexpr const ImmutableString outerProduct_3B1B("outerProduct(3B1B");
constexpr const ImmutableString outerProduct_3B2B("outerProduct(3B2B");
constexpr const ImmutableString outerProduct_3B3B("outerProduct(3B3B");
constexpr const ImmutableString packHalf2x16("packHalf2x16");
constexpr const ImmutableString packHalf2x16_1B("packHalf2x16(1B");
constexpr const ImmutableString packSnorm2x16("packSnorm2x16");
constexpr const ImmutableString packSnorm2x16_1B("packSnorm2x16(1B");
constexpr const ImmutableString packSnorm4x8("packSnorm4x8");
constexpr const ImmutableString packSnorm4x8_3B("packSnorm4x8(3B");
constexpr const ImmutableString packUnorm2x16("packUnorm2x16");
constexpr const ImmutableString packUnorm2x16_1B("packUnorm2x16(1B");
constexpr const ImmutableString packUnorm4x8("packUnorm4x8");
constexpr const ImmutableString packUnorm4x8_3B("packUnorm4x8(3B");
constexpr const ImmutableString pow("pow");
constexpr const ImmutableString pow_0B0B("pow(0B0B");
constexpr const ImmutableString pow_1B1B("pow(1B1B");
constexpr const ImmutableString pow_2B2B("pow(2B2B");
constexpr const ImmutableString pow_3B3B("pow(3B3B");
constexpr const ImmutableString radians("radians");
constexpr const ImmutableString radians_0B("radians(0B");
constexpr const ImmutableString radians_1B("radians(1B");
constexpr const ImmutableString radians_2B("radians(2B");
constexpr const ImmutableString radians_3B("radians(3B");
constexpr const ImmutableString reflect("reflect");
constexpr const ImmutableString reflect_0B0B("reflect(0B0B");
constexpr const ImmutableString reflect_1B1B("reflect(1B1B");
constexpr const ImmutableString reflect_2B2B("reflect(2B2B");
constexpr const ImmutableString reflect_3B3B("reflect(3B3B");
constexpr const ImmutableString refract("refract");
constexpr const ImmutableString refract_0B0B0B("refract(0B0B0B");
constexpr const ImmutableString refract_1B1B0B("refract(1B1B0B");
constexpr const ImmutableString refract_2B2B0B("refract(2B2B0B");
constexpr const ImmutableString refract_3B3B0B("refract(3B3B0B");
constexpr const ImmutableString rgb_2_yuv("rgb_2_yuv");
constexpr const ImmutableString rgb_2_yuv_2B0G("rgb_2_yuv(2B0G");
constexpr const ImmutableString round("round");
constexpr const ImmutableString roundEven("roundEven");
constexpr const ImmutableString roundEven_0B("roundEven(0B");
constexpr const ImmutableString roundEven_1B("roundEven(1B");
constexpr const ImmutableString roundEven_2B("roundEven(2B");
constexpr const ImmutableString roundEven_3B("roundEven(3B");
constexpr const ImmutableString round_0B("round(0B");
constexpr const ImmutableString round_1B("round(1B");
constexpr const ImmutableString round_2B("round(2B");
constexpr const ImmutableString round_3B("round(3B");
constexpr const ImmutableString sign("sign");
constexpr const ImmutableString sign_0B("sign(0B");
constexpr const ImmutableString sign_0C("sign(0C");
constexpr const ImmutableString sign_1B("sign(1B");
constexpr const ImmutableString sign_1C("sign(1C");
constexpr const ImmutableString sign_2B("sign(2B");
constexpr const ImmutableString sign_2C("sign(2C");
constexpr const ImmutableString sign_3B("sign(3B");
constexpr const ImmutableString sign_3C("sign(3C");
constexpr const ImmutableString sin("sin");
constexpr const ImmutableString sin_0B("sin(0B");
constexpr const ImmutableString sin_1B("sin(1B");
constexpr const ImmutableString sin_2B("sin(2B");
constexpr const ImmutableString sin_3B("sin(3B");
constexpr const ImmutableString sinh("sinh");
constexpr const ImmutableString sinh_0B("sinh(0B");
constexpr const ImmutableString sinh_1B("sinh(1B");
constexpr const ImmutableString sinh_2B("sinh(2B");
constexpr const ImmutableString sinh_3B("sinh(3B");
constexpr const ImmutableString smoothstep("smoothstep");
constexpr const ImmutableString smoothstep_0B0B0B("smoothstep(0B0B0B");
constexpr const ImmutableString smoothstep_0B0B1B("smoothstep(0B0B1B");
constexpr const ImmutableString smoothstep_0B0B2B("smoothstep(0B0B2B");
constexpr const ImmutableString smoothstep_0B0B3B("smoothstep(0B0B3B");
constexpr const ImmutableString smoothstep_1B1B1B("smoothstep(1B1B1B");
constexpr const ImmutableString smoothstep_2B2B2B("smoothstep(2B2B2B");
constexpr const ImmutableString smoothstep_3B3B3B("smoothstep(3B3B3B");
constexpr const ImmutableString sqrt("sqrt");
constexpr const ImmutableString sqrt_0B("sqrt(0B");
constexpr const ImmutableString sqrt_1B("sqrt(1B");
constexpr const ImmutableString sqrt_2B("sqrt(2B");
constexpr const ImmutableString sqrt_3B("sqrt(3B");
constexpr const ImmutableString step("step");
constexpr const ImmutableString step_0B0B("step(0B0B");
constexpr const ImmutableString step_0B1B("step(0B1B");
constexpr const ImmutableString step_0B2B("step(0B2B");
constexpr const ImmutableString step_0B3B("step(0B3B");
constexpr const ImmutableString step_1B1B("step(1B1B");
constexpr const ImmutableString step_2B2B("step(2B2B");
constexpr const ImmutableString step_3B3B("step(3B3B");
constexpr const ImmutableString tan("tan");
constexpr const ImmutableString tan_0B("tan(0B");
constexpr const ImmutableString tan_1B("tan(1B");
constexpr const ImmutableString tan_2B("tan(2B");
constexpr const ImmutableString tan_3B("tan(3B");
constexpr const ImmutableString tanh("tanh");
constexpr const ImmutableString tanh_0B("tanh(0B");
constexpr const ImmutableString tanh_1B("tanh(1B");
constexpr const ImmutableString tanh_2B("tanh(2B");
constexpr const ImmutableString tanh_3B("tanh(3B");
constexpr const ImmutableString texelFetch("texelFetch");
constexpr const ImmutableString texelFetchExt("texelFetch");
constexpr const ImmutableString texelFetchExt_0O1C0C("texelFetch(0O1C0C");
constexpr const ImmutableString texelFetchExt_0U1C0C("texelFetch(0U1C0C");
constexpr const ImmutableString texelFetchExt_0a1C0C("texelFetch(0a1C0C");
constexpr const ImmutableString texelFetchOffset("texelFetchOffset");
constexpr const ImmutableString texelFetchOffset_0H1C0C1C("texelFetchOffset(0H1C0C1C");
constexpr const ImmutableString texelFetchOffset_0I2C0C2C("texelFetchOffset(0I2C0C2C");
constexpr const ImmutableString texelFetchOffset_0K2C0C1C("texelFetchOffset(0K2C0C1C");
constexpr const ImmutableString texelFetchOffset_0Q1C0C1C("texelFetchOffset(0Q1C0C1C");
constexpr const ImmutableString texelFetchOffset_0R2C0C2C("texelFetchOffset(0R2C0C2C");
constexpr const ImmutableString texelFetchOffset_0T2C0C1C("texelFetchOffset(0T2C0C1C");
constexpr const ImmutableString texelFetchOffset_0W1C0C1C("texelFetchOffset(0W1C0C1C");
constexpr const ImmutableString texelFetchOffset_0X2C0C2C("texelFetchOffset(0X2C0C2C");
constexpr const ImmutableString texelFetchOffset_0Z2C0C1C("texelFetchOffset(0Z2C0C1C");
constexpr const ImmutableString texelFetch_0H1C0C("texelFetch(0H1C0C");
constexpr const ImmutableString texelFetch_0I2C0C("texelFetch(0I2C0C");
constexpr const ImmutableString texelFetch_0K2C0C("texelFetch(0K2C0C");
constexpr const ImmutableString texelFetch_0L1C0C("texelFetch(0L1C0C");
constexpr const ImmutableString texelFetch_0M1C0C("texelFetch(0M1C0C");
constexpr const ImmutableString texelFetch_0O1C0C("texelFetch(0O1C0C");
constexpr const ImmutableString texelFetch_0P2C0C("texelFetch(0P2C0C");
constexpr const ImmutableString texelFetch_0Q1C0C("texelFetch(0Q1C0C");
constexpr const ImmutableString texelFetch_0R2C0C("texelFetch(0R2C0C");
constexpr const ImmutableString texelFetch_0T2C0C("texelFetch(0T2C0C");
constexpr const ImmutableString texelFetch_0U1C0C("texelFetch(0U1C0C");
constexpr const ImmutableString texelFetch_0V2C0C("texelFetch(0V2C0C");
constexpr const ImmutableString texelFetch_0W1C0C("texelFetch(0W1C0C");
constexpr const ImmutableString texelFetch_0X2C0C("texelFetch(0X2C0C");
constexpr const ImmutableString texelFetch_0Z2C0C("texelFetch(0Z2C0C");
constexpr const ImmutableString texelFetch_0a1C0C("texelFetch(0a1C0C");
constexpr const ImmutableString texelFetch_0b2C0C("texelFetch(0b2C0C");
constexpr const ImmutableString texture("texture");
constexpr const ImmutableString texture2D("texture2D");
constexpr const ImmutableString texture2DGradEXT("texture2DGradEXT");
constexpr const ImmutableString texture2DGradEXT_0H1B1B1B("texture2DGradEXT(0H1B1B1B");
constexpr const ImmutableString texture2DLod("texture2DLod");
constexpr const ImmutableString texture2DLodEXT("texture2DLodEXT");
constexpr const ImmutableString texture2DLodEXT_0H1B0B("texture2DLodEXT(0H1B0B");
constexpr const ImmutableString texture2DLod_0H1B0B("texture2DLod(0H1B0B");
constexpr const ImmutableString texture2DProj("texture2DProj");
constexpr const ImmutableString texture2DProjGradEXT("texture2DProjGradEXT");
constexpr const ImmutableString texture2DProjGradEXT_0H2B1B1B("texture2DProjGradEXT(0H2B1B1B");
constexpr const ImmutableString texture2DProjGradEXT_0H3B1B1B("texture2DProjGradEXT(0H3B1B1B");
constexpr const ImmutableString texture2DProjLod("texture2DProjLod");
constexpr const ImmutableString texture2DProjLodEXT("texture2DProjLodEXT");
constexpr const ImmutableString texture2DProjLodEXT_0H2B0B("texture2DProjLodEXT(0H2B0B");
constexpr const ImmutableString texture2DProjLodEXT_0H3B0B("texture2DProjLodEXT(0H3B0B");
constexpr const ImmutableString texture2DProjLod_0H2B0B("texture2DProjLod(0H2B0B");
constexpr const ImmutableString texture2DProjLod_0H3B0B("texture2DProjLod(0H3B0B");
constexpr const ImmutableString texture2DProj_0H2B("texture2DProj(0H2B");
constexpr const ImmutableString texture2DProj_0H2B0B("texture2DProj(0H2B0B");
constexpr const ImmutableString texture2DProj_0H3B("texture2DProj(0H3B");
constexpr const ImmutableString texture2DProj_0H3B0B("texture2DProj(0H3B0B");
constexpr const ImmutableString texture2DProj_0L2B("texture2DProj(0L2B");
constexpr const ImmutableString texture2DProj_0L3B("texture2DProj(0L3B");
constexpr const ImmutableString texture2DRect("texture2DRect");
constexpr const ImmutableString texture2DRectProj("texture2DRectProj");
constexpr const ImmutableString texture2DRectProj_0N2B("texture2DRectProj(0N2B");
constexpr const ImmutableString texture2DRectProj_0N3B("texture2DRectProj(0N3B");
constexpr const ImmutableString texture2DRect_0N1B("texture2DRect(0N1B");
constexpr const ImmutableString texture2D_0H1B("texture2D(0H1B");
constexpr const ImmutableString texture2D_0H1B0B("texture2D(0H1B0B");
constexpr const ImmutableString texture2D_0L1B("texture2D(0L1B");
constexpr const ImmutableString texture3D("texture3D");
constexpr const ImmutableString texture3DLod("texture3DLod");
constexpr const ImmutableString texture3DLod_0I2B0B("texture3DLod(0I2B0B");
constexpr const ImmutableString texture3DProj("texture3DProj");
constexpr const ImmutableString texture3DProjLod("texture3DProjLod");
constexpr const ImmutableString texture3DProjLod_0I3B0B("texture3DProjLod(0I3B0B");
constexpr const ImmutableString texture3DProj_0I3B("texture3DProj(0I3B");
constexpr const ImmutableString texture3DProj_0I3B0B("texture3DProj(0I3B0B");
constexpr const ImmutableString texture3D_0I2B("texture3D(0I2B");
constexpr const ImmutableString texture3D_0I2B0B("texture3D(0I2B0B");
constexpr const ImmutableString textureCube("textureCube");
constexpr const ImmutableString textureCubeGradEXT("textureCubeGradEXT");
constexpr const ImmutableString textureCubeGradEXT_0J2B2B2B("textureCubeGradEXT(0J2B2B2B");
constexpr const ImmutableString textureCubeLod("textureCubeLod");
constexpr const ImmutableString textureCubeLodEXT("textureCubeLodEXT");
constexpr const ImmutableString textureCubeLodEXT_0J2B0B("textureCubeLodEXT(0J2B0B");
constexpr const ImmutableString textureCubeLod_0J2B0B("textureCubeLod(0J2B0B");
constexpr const ImmutableString textureCube_0J2B("textureCube(0J2B");
constexpr const ImmutableString textureCube_0J2B0B("textureCube(0J2B0B");
constexpr const ImmutableString textureGather("textureGather");
constexpr const ImmutableString textureGatherOffset("textureGatherOffset");
constexpr const ImmutableString textureGatherOffset_0H1B1C("textureGatherOffset(0H1B1C");
constexpr const ImmutableString textureGatherOffset_0H1B1C0C("textureGatherOffset(0H1B1C0C");
constexpr const ImmutableString textureGatherOffset_0K2B1C("textureGatherOffset(0K2B1C");
constexpr const ImmutableString textureGatherOffset_0K2B1C0C("textureGatherOffset(0K2B1C0C");
constexpr const ImmutableString textureGatherOffset_0Q1B1C("textureGatherOffset(0Q1B1C");
constexpr const ImmutableString textureGatherOffset_0Q1B1C0C("textureGatherOffset(0Q1B1C0C");
constexpr const ImmutableString textureGatherOffset_0T2B1C("textureGatherOffset(0T2B1C");
constexpr const ImmutableString textureGatherOffset_0T2B1C0C("textureGatherOffset(0T2B1C0C");
constexpr const ImmutableString textureGatherOffset_0W1B1C("textureGatherOffset(0W1B1C");
constexpr const ImmutableString textureGatherOffset_0W1B1C0C("textureGatherOffset(0W1B1C0C");
constexpr const ImmutableString textureGatherOffset_0Z2B1C("textureGatherOffset(0Z2B1C");
constexpr const ImmutableString textureGatherOffset_0Z2B1C0C("textureGatherOffset(0Z2B1C0C");
constexpr const ImmutableString textureGatherOffset_0c1B0B1C("textureGatherOffset(0c1B0B1C");
constexpr const ImmutableString textureGatherOffset_0e2B0B1C("textureGatherOffset(0e2B0B1C");
constexpr const ImmutableString textureGather_0H1B("textureGather(0H1B");
constexpr const ImmutableString textureGather_0H1B0C("textureGather(0H1B0C");
constexpr const ImmutableString textureGather_0J2B("textureGather(0J2B");
constexpr const ImmutableString textureGather_0J2B0C("textureGather(0J2B0C");
constexpr const ImmutableString textureGather_0K2B("textureGather(0K2B");
constexpr const ImmutableString textureGather_0K2B0C("textureGather(0K2B0C");
constexpr const ImmutableString textureGather_0Q1B("textureGather(0Q1B");
constexpr const ImmutableString textureGather_0Q1B0C("textureGather(0Q1B0C");
constexpr const ImmutableString textureGather_0S2B("textureGather(0S2B");
constexpr const ImmutableString textureGather_0S2B0C("textureGather(0S2B0C");
constexpr const ImmutableString textureGather_0T2B("textureGather(0T2B");
constexpr const ImmutableString textureGather_0T2B0C("textureGather(0T2B0C");
constexpr const ImmutableString textureGather_0W1B("textureGather(0W1B");
constexpr const ImmutableString textureGather_0W1B0C("textureGather(0W1B0C");
constexpr const ImmutableString textureGather_0Y2B("textureGather(0Y2B");
constexpr const ImmutableString textureGather_0Y2B0C("textureGather(0Y2B0C");
constexpr const ImmutableString textureGather_0Z2B("textureGather(0Z2B");
constexpr const ImmutableString textureGather_0Z2B0C("textureGather(0Z2B0C");
constexpr const ImmutableString textureGather_0c1B("textureGather(0c1B");
constexpr const ImmutableString textureGather_0c1B0B("textureGather(0c1B0B");
constexpr const ImmutableString textureGather_0d2B("textureGather(0d2B");
constexpr const ImmutableString textureGather_0d2B0B("textureGather(0d2B0B");
constexpr const ImmutableString textureGather_0e2B("textureGather(0e2B");
constexpr const ImmutableString textureGather_0e2B0B("textureGather(0e2B0B");
constexpr const ImmutableString textureGrad("textureGrad");
constexpr const ImmutableString textureGradOffset("textureGradOffset");
constexpr const ImmutableString textureGradOffset_0H1B1B1B1C("textureGradOffset(0H1B1B1B1C");
constexpr const ImmutableString textureGradOffset_0I2B2B2B2C("textureGradOffset(0I2B2B2B2C");
constexpr const ImmutableString textureGradOffset_0K2B1B1B1C("textureGradOffset(0K2B1B1B1C");
constexpr const ImmutableString textureGradOffset_0Q1B1B1B1C("textureGradOffset(0Q1B1B1B1C");
constexpr const ImmutableString textureGradOffset_0R2B2B2B2C("textureGradOffset(0R2B2B2B2C");
constexpr const ImmutableString textureGradOffset_0T2B1B1B1C("textureGradOffset(0T2B1B1B1C");
constexpr const ImmutableString textureGradOffset_0W1B1B1B1C("textureGradOffset(0W1B1B1B1C");
constexpr const ImmutableString textureGradOffset_0X2B2B2B2C("textureGradOffset(0X2B2B2B2C");
constexpr const ImmutableString textureGradOffset_0Z2B1B1B1C("textureGradOffset(0Z2B1B1B1C");
constexpr const ImmutableString textureGradOffset_0c2B1B1B1C("textureGradOffset(0c2B1B1B1C");
constexpr const ImmutableString textureGradOffset_0e3B1B1B1C("textureGradOffset(0e3B1B1B1C");
constexpr const ImmutableString textureGrad_0H1B1B1B("textureGrad(0H1B1B1B");
constexpr const ImmutableString textureGrad_0I2B2B2B("textureGrad(0I2B2B2B");
constexpr const ImmutableString textureGrad_0J2B2B2B("textureGrad(0J2B2B2B");
constexpr const ImmutableString textureGrad_0K2B1B1B("textureGrad(0K2B1B1B");
constexpr const ImmutableString textureGrad_0Q1B1B1B("textureGrad(0Q1B1B1B");
constexpr const ImmutableString textureGrad_0R2B2B2B("textureGrad(0R2B2B2B");
constexpr const ImmutableString textureGrad_0S2B2B2B("textureGrad(0S2B2B2B");
constexpr const ImmutableString textureGrad_0T2B1B1B("textureGrad(0T2B1B1B");
constexpr const ImmutableString textureGrad_0W1B1B1B("textureGrad(0W1B1B1B");
constexpr const ImmutableString textureGrad_0X2B2B2B("textureGrad(0X2B2B2B");
constexpr const ImmutableString textureGrad_0Y2B2B2B("textureGrad(0Y2B2B2B");
constexpr const ImmutableString textureGrad_0Z2B1B1B("textureGrad(0Z2B1B1B");
constexpr const ImmutableString textureGrad_0c2B1B1B("textureGrad(0c2B1B1B");
constexpr const ImmutableString textureGrad_0d3B2B2B("textureGrad(0d3B2B2B");
constexpr const ImmutableString textureGrad_0e3B1B1B("textureGrad(0e3B1B1B");
constexpr const ImmutableString textureLod("textureLod");
constexpr const ImmutableString textureLodOffset("textureLodOffset");
constexpr const ImmutableString textureLodOffset_0H1B0B1C("textureLodOffset(0H1B0B1C");
constexpr const ImmutableString textureLodOffset_0I2B0B2C("textureLodOffset(0I2B0B2C");
constexpr const ImmutableString textureLodOffset_0K2B0B1C("textureLodOffset(0K2B0B1C");
constexpr const ImmutableString textureLodOffset_0Q1B0B1C("textureLodOffset(0Q1B0B1C");
constexpr const ImmutableString textureLodOffset_0R2B0B2C("textureLodOffset(0R2B0B2C");
constexpr const ImmutableString textureLodOffset_0T2B0B1C("textureLodOffset(0T2B0B1C");
constexpr const ImmutableString textureLodOffset_0W1B0B1C("textureLodOffset(0W1B0B1C");
constexpr const ImmutableString textureLodOffset_0X2B0B2C("textureLodOffset(0X2B0B2C");
constexpr const ImmutableString textureLodOffset_0Z2B0B1C("textureLodOffset(0Z2B0B1C");
constexpr const ImmutableString textureLodOffset_0c2B0B1C("textureLodOffset(0c2B0B1C");
constexpr const ImmutableString textureLod_0H1B0B("textureLod(0H1B0B");
constexpr const ImmutableString textureLod_0I2B0B("textureLod(0I2B0B");
constexpr const ImmutableString textureLod_0J2B0B("textureLod(0J2B0B");
constexpr const ImmutableString textureLod_0K2B0B("textureLod(0K2B0B");
constexpr const ImmutableString textureLod_0Q1B0B("textureLod(0Q1B0B");
constexpr const ImmutableString textureLod_0R2B0B("textureLod(0R2B0B");
constexpr const ImmutableString textureLod_0S2B0B("textureLod(0S2B0B");
constexpr const ImmutableString textureLod_0T2B0B("textureLod(0T2B0B");
constexpr const ImmutableString textureLod_0W1B0B("textureLod(0W1B0B");
constexpr const ImmutableString textureLod_0X2B0B("textureLod(0X2B0B");
constexpr const ImmutableString textureLod_0Y2B0B("textureLod(0Y2B0B");
constexpr const ImmutableString textureLod_0Z2B0B("textureLod(0Z2B0B");
constexpr const ImmutableString textureLod_0c2B0B("textureLod(0c2B0B");
constexpr const ImmutableString textureOffset("textureOffset");
constexpr const ImmutableString textureOffset_0H1B1C("textureOffset(0H1B1C");
constexpr const ImmutableString textureOffset_0H1B1C0B("textureOffset(0H1B1C0B");
constexpr const ImmutableString textureOffset_0I2B2C("textureOffset(0I2B2C");
constexpr const ImmutableString textureOffset_0I2B2C0B("textureOffset(0I2B2C0B");
constexpr const ImmutableString textureOffset_0K2B1C("textureOffset(0K2B1C");
constexpr const ImmutableString textureOffset_0K2B1C0B("textureOffset(0K2B1C0B");
constexpr const ImmutableString textureOffset_0Q1B1C("textureOffset(0Q1B1C");
constexpr const ImmutableString textureOffset_0Q1B1C0B("textureOffset(0Q1B1C0B");
constexpr const ImmutableString textureOffset_0R2B2C("textureOffset(0R2B2C");
constexpr const ImmutableString textureOffset_0R2B2C0B("textureOffset(0R2B2C0B");
constexpr const ImmutableString textureOffset_0T2B1C("textureOffset(0T2B1C");
constexpr const ImmutableString textureOffset_0T2B1C0B("textureOffset(0T2B1C0B");
constexpr const ImmutableString textureOffset_0W1B1C("textureOffset(0W1B1C");
constexpr const ImmutableString textureOffset_0W1B1C0B("textureOffset(0W1B1C0B");
constexpr const ImmutableString textureOffset_0X2B2C("textureOffset(0X2B2C");
constexpr const ImmutableString textureOffset_0X2B2C0B("textureOffset(0X2B2C0B");
constexpr const ImmutableString textureOffset_0Z2B1C("textureOffset(0Z2B1C");
constexpr const ImmutableString textureOffset_0Z2B1C0B("textureOffset(0Z2B1C0B");
constexpr const ImmutableString textureOffset_0c2B1C("textureOffset(0c2B1C");
constexpr const ImmutableString textureOffset_0c2B1C0B("textureOffset(0c2B1C0B");
constexpr const ImmutableString textureProj("textureProj");
constexpr const ImmutableString textureProjGrad("textureProjGrad");
constexpr const ImmutableString textureProjGradOffset("textureProjGradOffset");
constexpr const ImmutableString textureProjGradOffset_0H2B1B1B1C(
    "textureProjGradOffset(0H2B1B1B1C");
constexpr const ImmutableString textureProjGradOffset_0H3B1B1B1C(
    "textureProjGradOffset(0H3B1B1B1C");
constexpr const ImmutableString textureProjGradOffset_0I3B2B2B2C(
    "textureProjGradOffset(0I3B2B2B2C");
constexpr const ImmutableString textureProjGradOffset_0Q2B1B1B1C(
    "textureProjGradOffset(0Q2B1B1B1C");
constexpr const ImmutableString textureProjGradOffset_0Q3B1B1B1C(
    "textureProjGradOffset(0Q3B1B1B1C");
constexpr const ImmutableString textureProjGradOffset_0R3B2B2B2C(
    "textureProjGradOffset(0R3B2B2B2C");
constexpr const ImmutableString textureProjGradOffset_0W2B1B1B1C(
    "textureProjGradOffset(0W2B1B1B1C");
constexpr const ImmutableString textureProjGradOffset_0W3B1B1B1C(
    "textureProjGradOffset(0W3B1B1B1C");
constexpr const ImmutableString textureProjGradOffset_0X3B2B2B2C(
    "textureProjGradOffset(0X3B2B2B2C");
constexpr const ImmutableString textureProjGradOffset_0c3B1B1B1C(
    "textureProjGradOffset(0c3B1B1B1C");
constexpr const ImmutableString textureProjGrad_0H2B1B1B("textureProjGrad(0H2B1B1B");
constexpr const ImmutableString textureProjGrad_0H3B1B1B("textureProjGrad(0H3B1B1B");
constexpr const ImmutableString textureProjGrad_0I3B2B2B("textureProjGrad(0I3B2B2B");
constexpr const ImmutableString textureProjGrad_0Q2B1B1B("textureProjGrad(0Q2B1B1B");
constexpr const ImmutableString textureProjGrad_0Q3B1B1B("textureProjGrad(0Q3B1B1B");
constexpr const ImmutableString textureProjGrad_0R3B2B2B("textureProjGrad(0R3B2B2B");
constexpr const ImmutableString textureProjGrad_0W2B1B1B("textureProjGrad(0W2B1B1B");
constexpr const ImmutableString textureProjGrad_0W3B1B1B("textureProjGrad(0W3B1B1B");
constexpr const ImmutableString textureProjGrad_0X3B2B2B("textureProjGrad(0X3B2B2B");
constexpr const ImmutableString textureProjGrad_0c3B1B1B("textureProjGrad(0c3B1B1B");
constexpr const ImmutableString textureProjLod("textureProjLod");
constexpr const ImmutableString textureProjLodOffset("textureProjLodOffset");
constexpr const ImmutableString textureProjLodOffset_0H2B0B1C("textureProjLodOffset(0H2B0B1C");
constexpr const ImmutableString textureProjLodOffset_0H3B0B1C("textureProjLodOffset(0H3B0B1C");
constexpr const ImmutableString textureProjLodOffset_0I3B0B2C("textureProjLodOffset(0I3B0B2C");
constexpr const ImmutableString textureProjLodOffset_0Q2B0B1C("textureProjLodOffset(0Q2B0B1C");
constexpr const ImmutableString textureProjLodOffset_0Q3B0B1C("textureProjLodOffset(0Q3B0B1C");
constexpr const ImmutableString textureProjLodOffset_0R3B0B2C("textureProjLodOffset(0R3B0B2C");
constexpr const ImmutableString textureProjLodOffset_0W2B0B1C("textureProjLodOffset(0W2B0B1C");
constexpr const ImmutableString textureProjLodOffset_0W3B0B1C("textureProjLodOffset(0W3B0B1C");
constexpr const ImmutableString textureProjLodOffset_0X3B0B2C("textureProjLodOffset(0X3B0B2C");
constexpr const ImmutableString textureProjLodOffset_0c3B0B1C("textureProjLodOffset(0c3B0B1C");
constexpr const ImmutableString textureProjLod_0H2B0B("textureProjLod(0H2B0B");
constexpr const ImmutableString textureProjLod_0H3B0B("textureProjLod(0H3B0B");
constexpr const ImmutableString textureProjLod_0I3B0B("textureProjLod(0I3B0B");
constexpr const ImmutableString textureProjLod_0Q2B0B("textureProjLod(0Q2B0B");
constexpr const ImmutableString textureProjLod_0Q3B0B("textureProjLod(0Q3B0B");
constexpr const ImmutableString textureProjLod_0R3B0B("textureProjLod(0R3B0B");
constexpr const ImmutableString textureProjLod_0W2B0B("textureProjLod(0W2B0B");
constexpr const ImmutableString textureProjLod_0W3B0B("textureProjLod(0W3B0B");
constexpr const ImmutableString textureProjLod_0X3B0B("textureProjLod(0X3B0B");
constexpr const ImmutableString textureProjLod_0c3B0B("textureProjLod(0c3B0B");
constexpr const ImmutableString textureProjOffset("textureProjOffset");
constexpr const ImmutableString textureProjOffset_0H2B1C("textureProjOffset(0H2B1C");
constexpr const ImmutableString textureProjOffset_0H2B1C0B("textureProjOffset(0H2B1C0B");
constexpr const ImmutableString textureProjOffset_0H3B1C("textureProjOffset(0H3B1C");
constexpr const ImmutableString textureProjOffset_0H3B1C0B("textureProjOffset(0H3B1C0B");
constexpr const ImmutableString textureProjOffset_0I3B2C("textureProjOffset(0I3B2C");
constexpr const ImmutableString textureProjOffset_0I3B2C0B("textureProjOffset(0I3B2C0B");
constexpr const ImmutableString textureProjOffset_0Q2B1C("textureProjOffset(0Q2B1C");
constexpr const ImmutableString textureProjOffset_0Q2B1C0B("textureProjOffset(0Q2B1C0B");
constexpr const ImmutableString textureProjOffset_0Q3B1C("textureProjOffset(0Q3B1C");
constexpr const ImmutableString textureProjOffset_0Q3B1C0B("textureProjOffset(0Q3B1C0B");
constexpr const ImmutableString textureProjOffset_0R3B2C("textureProjOffset(0R3B2C");
constexpr const ImmutableString textureProjOffset_0R3B2C0B("textureProjOffset(0R3B2C0B");
constexpr const ImmutableString textureProjOffset_0W2B1C("textureProjOffset(0W2B1C");
constexpr const ImmutableString textureProjOffset_0W2B1C0B("textureProjOffset(0W2B1C0B");
constexpr const ImmutableString textureProjOffset_0W3B1C("textureProjOffset(0W3B1C");
constexpr const ImmutableString textureProjOffset_0W3B1C0B("textureProjOffset(0W3B1C0B");
constexpr const ImmutableString textureProjOffset_0X3B2C("textureProjOffset(0X3B2C");
constexpr const ImmutableString textureProjOffset_0X3B2C0B("textureProjOffset(0X3B2C0B");
constexpr const ImmutableString textureProjOffset_0c3B1C("textureProjOffset(0c3B1C");
constexpr const ImmutableString textureProjOffset_0c3B1C0B("textureProjOffset(0c3B1C0B");
constexpr const ImmutableString textureProj_0H2B("textureProj(0H2B");
constexpr const ImmutableString textureProj_0H2B0B("textureProj(0H2B0B");
constexpr const ImmutableString textureProj_0H3B("textureProj(0H3B");
constexpr const ImmutableString textureProj_0H3B0B("textureProj(0H3B0B");
constexpr const ImmutableString textureProj_0I3B("textureProj(0I3B");
constexpr const ImmutableString textureProj_0I3B0B("textureProj(0I3B0B");
constexpr const ImmutableString textureProj_0L2B("textureProj(0L2B");
constexpr const ImmutableString textureProj_0L2B0B("textureProj(0L2B0B");
constexpr const ImmutableString textureProj_0L3B("textureProj(0L3B");
constexpr const ImmutableString textureProj_0L3B0B("textureProj(0L3B0B");
constexpr const ImmutableString textureProj_0M2B("textureProj(0M2B");
constexpr const ImmutableString textureProj_0M2B0B("textureProj(0M2B0B");
constexpr const ImmutableString textureProj_0M3B("textureProj(0M3B");
constexpr const ImmutableString textureProj_0M3B0B("textureProj(0M3B0B");
constexpr const ImmutableString textureProj_0N2B("textureProj(0N2B");
constexpr const ImmutableString textureProj_0N3B("textureProj(0N3B");
constexpr const ImmutableString textureProj_0Q2B("textureProj(0Q2B");
constexpr const ImmutableString textureProj_0Q2B0B("textureProj(0Q2B0B");
constexpr const ImmutableString textureProj_0Q3B("textureProj(0Q3B");
constexpr const ImmutableString textureProj_0Q3B0B("textureProj(0Q3B0B");
constexpr const ImmutableString textureProj_0R3B("textureProj(0R3B");
constexpr const ImmutableString textureProj_0R3B0B("textureProj(0R3B0B");
constexpr const ImmutableString textureProj_0W2B("textureProj(0W2B");
constexpr const ImmutableString textureProj_0W2B0B("textureProj(0W2B0B");
constexpr const ImmutableString textureProj_0W3B("textureProj(0W3B");
constexpr const ImmutableString textureProj_0W3B0B("textureProj(0W3B0B");
constexpr const ImmutableString textureProj_0X3B("textureProj(0X3B");
constexpr const ImmutableString textureProj_0X3B0B("textureProj(0X3B0B");
constexpr const ImmutableString textureProj_0c3B("textureProj(0c3B");
constexpr const ImmutableString textureProj_0c3B0B("textureProj(0c3B0B");
constexpr const ImmutableString textureSize("textureSize");
constexpr const ImmutableString textureSizeExt("textureSize");
constexpr const ImmutableString textureSizeExt_0O("textureSize(0O");
constexpr const ImmutableString textureSizeExt_0U("textureSize(0U");
constexpr const ImmutableString textureSizeExt_0a("textureSize(0a");
constexpr const ImmutableString textureSize_0H0C("textureSize(0H0C");
constexpr const ImmutableString textureSize_0I0C("textureSize(0I0C");
constexpr const ImmutableString textureSize_0J0C("textureSize(0J0C");
constexpr const ImmutableString textureSize_0K0C("textureSize(0K0C");
constexpr const ImmutableString textureSize_0L0C("textureSize(0L0C");
constexpr const ImmutableString textureSize_0M0C("textureSize(0M0C");
constexpr const ImmutableString textureSize_0O("textureSize(0O");
constexpr const ImmutableString textureSize_0P("textureSize(0P");
constexpr const ImmutableString textureSize_0Q0C("textureSize(0Q0C");
constexpr const ImmutableString textureSize_0R0C("textureSize(0R0C");
constexpr const ImmutableString textureSize_0S0C("textureSize(0S0C");
constexpr const ImmutableString textureSize_0T0C("textureSize(0T0C");
constexpr const ImmutableString textureSize_0U("textureSize(0U");
constexpr const ImmutableString textureSize_0V("textureSize(0V");
constexpr const ImmutableString textureSize_0W0C("textureSize(0W0C");
constexpr const ImmutableString textureSize_0X0C("textureSize(0X0C");
constexpr const ImmutableString textureSize_0Y0C("textureSize(0Y0C");
constexpr const ImmutableString textureSize_0Z0C("textureSize(0Z0C");
constexpr const ImmutableString textureSize_0a("textureSize(0a");
constexpr const ImmutableString textureSize_0b("textureSize(0b");
constexpr const ImmutableString textureSize_0c0C("textureSize(0c0C");
constexpr const ImmutableString textureSize_0d0C("textureSize(0d0C");
constexpr const ImmutableString textureSize_0e0C("textureSize(0e0C");
constexpr const ImmutableString texture_0H1B("texture(0H1B");
constexpr const ImmutableString texture_0H1B0B("texture(0H1B0B");
constexpr const ImmutableString texture_0I2B("texture(0I2B");
constexpr const ImmutableString texture_0I2B0B("texture(0I2B0B");
constexpr const ImmutableString texture_0J2B("texture(0J2B");
constexpr const ImmutableString texture_0J2B0B("texture(0J2B0B");
constexpr const ImmutableString texture_0K2B("texture(0K2B");
constexpr const ImmutableString texture_0K2B0B("texture(0K2B0B");
constexpr const ImmutableString texture_0L1B("texture(0L1B");
constexpr const ImmutableString texture_0L1B0B("texture(0L1B0B");
constexpr const ImmutableString texture_0M1B("texture(0M1B");
constexpr const ImmutableString texture_0M1B0B("texture(0M1B0B");
constexpr const ImmutableString texture_0N1B("texture(0N1B");
constexpr const ImmutableString texture_0Q1B("texture(0Q1B");
constexpr const ImmutableString texture_0Q1B0B("texture(0Q1B0B");
constexpr const ImmutableString texture_0R2B("texture(0R2B");
constexpr const ImmutableString texture_0R2B0B("texture(0R2B0B");
constexpr const ImmutableString texture_0S2B("texture(0S2B");
constexpr const ImmutableString texture_0S2B0B("texture(0S2B0B");
constexpr const ImmutableString texture_0T2B("texture(0T2B");
constexpr const ImmutableString texture_0T2B0B("texture(0T2B0B");
constexpr const ImmutableString texture_0W1B("texture(0W1B");
constexpr const ImmutableString texture_0W1B0B("texture(0W1B0B");
constexpr const ImmutableString texture_0X2B("texture(0X2B");
constexpr const ImmutableString texture_0X2B0B("texture(0X2B0B");
constexpr const ImmutableString texture_0Y2B("texture(0Y2B");
constexpr const ImmutableString texture_0Y2B0B("texture(0Y2B0B");
constexpr const ImmutableString texture_0Z2B("texture(0Z2B");
constexpr const ImmutableString texture_0Z2B0B("texture(0Z2B0B");
constexpr const ImmutableString texture_0c2B("texture(0c2B");
constexpr const ImmutableString texture_0c2B0B("texture(0c2B0B");
constexpr const ImmutableString texture_0d3B("texture(0d3B");
constexpr const ImmutableString texture_0d3B0B("texture(0d3B0B");
constexpr const ImmutableString texture_0e3B("texture(0e3B");
constexpr const ImmutableString transpose("transpose");
constexpr const ImmutableString transpose_5B("transpose(5B");
constexpr const ImmutableString transpose_6B("transpose(6B");
constexpr const ImmutableString transpose_7B("transpose(7B");
constexpr const ImmutableString transpose_9B("transpose(9B");
constexpr const ImmutableString transpose_AB("transpose(AB");
constexpr const ImmutableString transpose_BB("transpose(BB");
constexpr const ImmutableString transpose_DB("transpose(DB");
constexpr const ImmutableString transpose_EB("transpose(EB");
constexpr const ImmutableString transpose_FB("transpose(FB");
constexpr const ImmutableString trunc("trunc");
constexpr const ImmutableString trunc_0B("trunc(0B");
constexpr const ImmutableString trunc_1B("trunc(1B");
constexpr const ImmutableString trunc_2B("trunc(2B");
constexpr const ImmutableString trunc_3B("trunc(3B");
constexpr const ImmutableString uaddCarry("uaddCarry");
constexpr const ImmutableString uaddCarry_0D0D0D("uaddCarry(0D0D0D");
constexpr const ImmutableString uaddCarry_1D1D1D("uaddCarry(1D1D1D");
constexpr const ImmutableString uaddCarry_2D2D2D("uaddCarry(2D2D2D");
constexpr const ImmutableString uaddCarry_3D3D3D("uaddCarry(3D3D3D");
constexpr const ImmutableString uintBitsToFloat("uintBitsToFloat");
constexpr const ImmutableString uintBitsToFloat_0D("uintBitsToFloat(0D");
constexpr const ImmutableString uintBitsToFloat_1D("uintBitsToFloat(1D");
constexpr const ImmutableString uintBitsToFloat_2D("uintBitsToFloat(2D");
constexpr const ImmutableString uintBitsToFloat_3D("uintBitsToFloat(3D");
constexpr const ImmutableString umulExtended("umulExtended");
constexpr const ImmutableString umulExtended_0D0D0D0D("umulExtended(0D0D0D0D");
constexpr const ImmutableString umulExtended_1D1D1D1D("umulExtended(1D1D1D1D");
constexpr const ImmutableString umulExtended_2D2D2D2D("umulExtended(2D2D2D2D");
constexpr const ImmutableString umulExtended_3D3D3D3D("umulExtended(3D3D3D3D");
constexpr const ImmutableString unpackHalf2x16("unpackHalf2x16");
constexpr const ImmutableString unpackHalf2x16_0D("unpackHalf2x16(0D");
constexpr const ImmutableString unpackSnorm2x16("unpackSnorm2x16");
constexpr const ImmutableString unpackSnorm2x16_0D("unpackSnorm2x16(0D");
constexpr const ImmutableString unpackSnorm4x8("unpackSnorm4x8");
constexpr const ImmutableString unpackSnorm4x8_0D("unpackSnorm4x8(0D");
constexpr const ImmutableString unpackUnorm2x16("unpackUnorm2x16");
constexpr const ImmutableString unpackUnorm2x16_0D("unpackUnorm2x16(0D");
constexpr const ImmutableString unpackUnorm4x8("unpackUnorm4x8");
constexpr const ImmutableString unpackUnorm4x8_0D("unpackUnorm4x8(0D");
constexpr const ImmutableString usubBorrow("usubBorrow");
constexpr const ImmutableString usubBorrow_0D0D0D("usubBorrow(0D0D0D");
constexpr const ImmutableString usubBorrow_1D1D1D("usubBorrow(1D1D1D");
constexpr const ImmutableString usubBorrow_2D2D2D("usubBorrow(2D2D2D");
constexpr const ImmutableString usubBorrow_3D3D3D("usubBorrow(3D3D3D");
constexpr const ImmutableString yuv_2_rgb("yuv_2_rgb");
constexpr const ImmutableString yuv_2_rgb_2B0G("yuv_2_rgb(2B0G");

}  // namespace BuiltInName

// TODO(oetuaho): Would be nice to make this a class instead of a namespace so that we could friend
// this from TVariable. Now symbol constructors taking an id have to be public even though they're
// not supposed to be accessible from outside of here. http://anglebug.com/2390
namespace BuiltInVariable
{

constexpr const TVariable kVar_gl_BaseInstance(
    BuiltInId::gl_BaseInstance,
    BuiltInName::gl_BaseInstance,
    SymbolType::BuiltIn,
    TExtension::ANGLE_base_vertex_base_instance,
    StaticType::Get<EbtInt, EbpHigh, EvqBaseInstance, 1, 1>());
constexpr const TVariable kVar_gl_BaseVertex(
    BuiltInId::gl_BaseVertex,
    BuiltInName::gl_BaseVertex,
    SymbolType::BuiltIn,
    TExtension::ANGLE_base_vertex_base_instance,
    StaticType::Get<EbtInt, EbpHigh, EvqBaseVertex, 1, 1>());
constexpr const TVariable kVar_gl_DrawID(BuiltInId::gl_DrawID,
                                         BuiltInName::gl_DrawID,
                                         SymbolType::BuiltIn,
                                         TExtension::ANGLE_multi_draw,
                                         StaticType::Get<EbtInt, EbpHigh, EvqDrawID, 1, 1>());
constexpr const TVariable kVar_gl_DrawIDESSL1(BuiltInId::gl_DrawIDESSL1,
                                              BuiltInName::gl_DrawID,
                                              SymbolType::BuiltIn,
                                              TExtension::ANGLE_multi_draw,
                                              StaticType::Get<EbtInt, EbpHigh, EvqDrawID, 1, 1>());
constexpr const TVariable kVar_gl_FragColor(
    BuiltInId::gl_FragColor,
    BuiltInName::gl_FragColor,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtFloat, EbpMedium, EvqFragColor, 4, 1>());
constexpr const TVariable kVar_gl_FragCoord(
    BuiltInId::gl_FragCoord,
    BuiltInName::gl_FragCoord,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtFloat, EbpMedium, EvqFragCoord, 4, 1>());
constexpr const TVariable kVar_gl_FragDepth(
    BuiltInId::gl_FragDepth,
    BuiltInName::gl_FragDepth,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtFloat, EbpHigh, EvqFragDepth, 1, 1>());
constexpr const TVariable kVar_gl_FrontFacing(
    BuiltInId::gl_FrontFacing,
    BuiltInName::gl_FrontFacing,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtBool, EbpUndefined, EvqFrontFacing, 1, 1>());
constexpr const TVariable kVar_gl_GlobalInvocationID(
    BuiltInId::gl_GlobalInvocationID,
    BuiltInName::gl_GlobalInvocationID,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobalInvocationID, 3, 1>());
constexpr const TVariable kVar_gl_InstanceID(
    BuiltInId::gl_InstanceID,
    BuiltInName::gl_InstanceID,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtInt, EbpHigh, EvqInstanceID, 1, 1>());
constexpr const TVariable kVar_gl_InvocationID(
    BuiltInId::gl_InvocationID,
    BuiltInName::gl_InvocationID,
    SymbolType::BuiltIn,
    TExtension::EXT_geometry_shader,
    StaticType::Get<EbtInt, EbpHigh, EvqInvocationID, 1, 1>());
constexpr const TVariable kVar_gl_LastFragColor(
    BuiltInId::gl_LastFragColor,
    BuiltInName::gl_LastFragColor,
    SymbolType::BuiltIn,
    TExtension::NV_shader_framebuffer_fetch,
    StaticType::Get<EbtFloat, EbpMedium, EvqLastFragColor, 4, 1>());
constexpr const TVariable kVar_gl_LastFragColorARM(
    BuiltInId::gl_LastFragColorARM,
    BuiltInName::gl_LastFragColorARM,
    SymbolType::BuiltIn,
    TExtension::ARM_shader_framebuffer_fetch,
    StaticType::Get<EbtFloat, EbpMedium, EvqLastFragColor, 4, 1>());
constexpr const TVariable kVar_gl_Layer(BuiltInId::gl_Layer,
                                        BuiltInName::gl_Layer,
                                        SymbolType::BuiltIn,
                                        TExtension::EXT_geometry_shader,
                                        StaticType::Get<EbtInt, EbpHigh, EvqLayer, 1, 1>());
constexpr const TVariable kVar_gl_LayerGS(BuiltInId::gl_LayerGS,
                                          BuiltInName::gl_Layer,
                                          SymbolType::BuiltIn,
                                          TExtension::EXT_geometry_shader,
                                          StaticType::Get<EbtInt, EbpHigh, EvqLayer, 1, 1>());
constexpr const TVariable kVar_gl_LayerVS(BuiltInId::gl_LayerVS,
                                          BuiltInName::gl_Layer,
                                          SymbolType::BuiltIn,
                                          TExtension::UNDEFINED,
                                          StaticType::Get<EbtInt, EbpHigh, EvqLayer, 1, 1>());
constexpr const TVariable kVar_gl_LocalInvocationID(
    BuiltInId::gl_LocalInvocationID,
    BuiltInName::gl_LocalInvocationID,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtUInt, EbpUndefined, EvqLocalInvocationID, 3, 1>());
constexpr const TVariable kVar_gl_LocalInvocationIndex(
    BuiltInId::gl_LocalInvocationIndex,
    BuiltInName::gl_LocalInvocationIndex,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtUInt, EbpUndefined, EvqLocalInvocationIndex, 1, 1>());
constexpr const TVariable kVar_gl_NumWorkGroups(
    BuiltInId::gl_NumWorkGroups,
    BuiltInName::gl_NumWorkGroups,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtUInt, EbpUndefined, EvqNumWorkGroups, 3, 1>());
constexpr const TVariable kVar_gl_PointCoord(
    BuiltInId::gl_PointCoord,
    BuiltInName::gl_PointCoord,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtFloat, EbpMedium, EvqPointCoord, 2, 1>());
constexpr const TVariable kVar_gl_PointSize(
    BuiltInId::gl_PointSize,
    BuiltInName::gl_PointSize,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtFloat, EbpMedium, EvqPointSize, 1, 1>());
constexpr const TVariable kVar_gl_Position(BuiltInId::gl_Position,
                                           BuiltInName::gl_Position,
                                           SymbolType::BuiltIn,
                                           TExtension::UNDEFINED,
                                           StaticType::Get<EbtFloat, EbpHigh, EvqPosition, 4, 1>());
constexpr const TVariable kVar_gl_PrimitiveID(
    BuiltInId::gl_PrimitiveID,
    BuiltInName::gl_PrimitiveID,
    SymbolType::BuiltIn,
    TExtension::EXT_geometry_shader,
    StaticType::Get<EbtInt, EbpHigh, EvqPrimitiveID, 1, 1>());
constexpr const TVariable kVar_gl_PrimitiveIDGS(
    BuiltInId::gl_PrimitiveIDGS,
    BuiltInName::gl_PrimitiveID,
    SymbolType::BuiltIn,
    TExtension::EXT_geometry_shader,
    StaticType::Get<EbtInt, EbpHigh, EvqPrimitiveID, 1, 1>());
constexpr const TVariable kVar_gl_PrimitiveIDIn(
    BuiltInId::gl_PrimitiveIDIn,
    BuiltInName::gl_PrimitiveIDIn,
    SymbolType::BuiltIn,
    TExtension::EXT_geometry_shader,
    StaticType::Get<EbtInt, EbpHigh, EvqPrimitiveIDIn, 1, 1>());
constexpr const TVariable kVar_gl_SecondaryFragColorEXT(
    BuiltInId::gl_SecondaryFragColorEXT,
    BuiltInName::gl_SecondaryFragColorEXT,
    SymbolType::BuiltIn,
    TExtension::EXT_blend_func_extended,
    StaticType::Get<EbtFloat, EbpMedium, EvqSecondaryFragColorEXT, 4, 1>());
constexpr const TVariable kVar_gl_VertexID(BuiltInId::gl_VertexID,
                                           BuiltInName::gl_VertexID,
                                           SymbolType::BuiltIn,
                                           TExtension::UNDEFINED,
                                           StaticType::Get<EbtInt, EbpHigh, EvqVertexID, 1, 1>());
constexpr const TVariable kVar_gl_ViewID_OVR(
    BuiltInId::gl_ViewID_OVR,
    BuiltInName::gl_ViewID_OVR,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtUInt, EbpHigh, EvqViewIDOVR, 1, 1>());
constexpr const TVariable kVar_gl_ViewID_OVRESSL1(
    BuiltInId::gl_ViewID_OVRESSL1,
    BuiltInName::gl_ViewID_OVR,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtInt, EbpHigh, EvqViewIDOVR, 1, 1>());
constexpr const TVariable kVar_gl_ViewportIndex(
    BuiltInId::gl_ViewportIndex,
    BuiltInName::gl_ViewportIndex,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtInt, EbpHigh, EvqViewportIndex, 1, 1>());
constexpr const TVariable kVar_gl_WorkGroupID(
    BuiltInId::gl_WorkGroupID,
    BuiltInName::gl_WorkGroupID,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtUInt, EbpUndefined, EvqWorkGroupID, 3, 1>());
constexpr const TVariable kVar_gl_WorkGroupSize(
    BuiltInId::gl_WorkGroupSize,
    BuiltInName::gl_WorkGroupSize,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtUInt, EbpUndefined, EvqWorkGroupSize, 3, 1>());
constexpr const TVariable kVar_pt0B(BuiltInId::pt0B,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0C(BuiltInId::pt0C,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0D(BuiltInId::pt0D,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0E(BuiltInId::pt0E,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0F(
    BuiltInId::pt0F,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtAtomicCounter, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0G(
    BuiltInId::pt0G,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtYuvCscStandardEXT, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0H(BuiltInId::pt0H,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtSampler2D, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0I(BuiltInId::pt0I,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtSampler3D, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0J(
    BuiltInId::pt0J,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtSamplerCube, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0K(
    BuiltInId::pt0K,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtSampler2DArray, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0L(
    BuiltInId::pt0L,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtSamplerExternalOES, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0M(
    BuiltInId::pt0M,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtSamplerExternal2DY2YEXT, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0N(
    BuiltInId::pt0N,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtSampler2DRect, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0O(
    BuiltInId::pt0O,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtSampler2DMS, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0P(
    BuiltInId::pt0P,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtSampler2DMSArray, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0Q(
    BuiltInId::pt0Q,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtISampler2D, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0R(
    BuiltInId::pt0R,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtISampler3D, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0S(
    BuiltInId::pt0S,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtISamplerCube, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0T(
    BuiltInId::pt0T,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtISampler2DArray, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0U(
    BuiltInId::pt0U,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtISampler2DMS, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0V(
    BuiltInId::pt0V,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtISampler2DMSArray, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0W(
    BuiltInId::pt0W,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtUSampler2D, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0X(
    BuiltInId::pt0X,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtUSampler3D, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0Y(
    BuiltInId::pt0Y,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtUSamplerCube, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0Z(
    BuiltInId::pt0Z,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtUSampler2DArray, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0a(
    BuiltInId::pt0a,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtUSampler2DMS, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0b(
    BuiltInId::pt0b,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtUSampler2DMSArray, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0c(
    BuiltInId::pt0c,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtSampler2DShadow, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0d(
    BuiltInId::pt0d,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtSamplerCubeShadow, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0e(
    BuiltInId::pt0e,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtSampler2DArrayShadow, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0f(BuiltInId::pt0f,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtImage2D, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0g(BuiltInId::pt0g,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtIImage2D, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0h(BuiltInId::pt0h,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtUImage2D, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0i(BuiltInId::pt0i,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtImage3D, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0j(BuiltInId::pt0j,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtIImage3D, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0k(BuiltInId::pt0k,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtUImage3D, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0l(
    BuiltInId::pt0l,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtImage2DArray, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0m(
    BuiltInId::pt0m,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtIImage2DArray, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0n(
    BuiltInId::pt0n,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtUImage2DArray, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0o(BuiltInId::pt0o,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtImageCube, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0p(
    BuiltInId::pt0p,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtIImageCube, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt0q(
    BuiltInId::pt0q,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtUImageCube, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt1B(BuiltInId::pt1B,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>());
constexpr const TVariable kVar_pt1C(BuiltInId::pt1C,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>());
constexpr const TVariable kVar_pt1D(BuiltInId::pt1D,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 2, 1>());
constexpr const TVariable kVar_pt1E(BuiltInId::pt1E,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>());
constexpr const TVariable kVar_pt2B(BuiltInId::pt2B,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>());
constexpr const TVariable kVar_pt2C(BuiltInId::pt2C,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>());
constexpr const TVariable kVar_pt2D(BuiltInId::pt2D,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 3, 1>());
constexpr const TVariable kVar_pt2E(BuiltInId::pt2E,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>());
constexpr const TVariable kVar_pt3B(BuiltInId::pt3B,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>());
constexpr const TVariable kVar_pt3C(BuiltInId::pt3C,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>());
constexpr const TVariable kVar_pt3D(BuiltInId::pt3D,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>());
constexpr const TVariable kVar_pt3E(BuiltInId::pt3E,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>());
constexpr const TVariable kVar_pt5B(BuiltInId::pt5B,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 2>());
constexpr const TVariable kVar_pt6B(BuiltInId::pt6B,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 2>());
constexpr const TVariable kVar_pt7B(BuiltInId::pt7B,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 2>());
constexpr const TVariable kVar_pt9B(BuiltInId::pt9B,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 3>());
constexpr const TVariable kVar_ptAB(BuiltInId::ptAB,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 3>());
constexpr const TVariable kVar_ptBB(BuiltInId::ptBB,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 3>());
constexpr const TVariable kVar_ptDB(BuiltInId::ptDB,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 4>());
constexpr const TVariable kVar_ptEB(BuiltInId::ptEB,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 4>());
constexpr const TVariable kVar_ptFB(BuiltInId::ptFB,
                                    BuiltInName::_empty,
                                    SymbolType::BuiltIn,
                                    TExtension::UNDEFINED,
                                    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 4>());
constexpr const TVariable kVar_pt_io_0C(BuiltInId::pt_io_0C,
                                        BuiltInName::_empty,
                                        SymbolType::BuiltIn,
                                        TExtension::UNDEFINED,
                                        StaticType::Get<EbtInt, EbpUndefined, EvqInOut, 1, 1>());
constexpr const TVariable kVar_pt_io_0D(BuiltInId::pt_io_0D,
                                        BuiltInName::_empty,
                                        SymbolType::BuiltIn,
                                        TExtension::UNDEFINED,
                                        StaticType::Get<EbtUInt, EbpUndefined, EvqInOut, 1, 1>());
constexpr const TVariable kVar_pt_o_0B(BuiltInId::pt_o_0B,
                                       BuiltInName::_empty,
                                       SymbolType::BuiltIn,
                                       TExtension::UNDEFINED,
                                       StaticType::Get<EbtFloat, EbpUndefined, EvqOut, 1, 1>());
constexpr const TVariable kVar_pt_o_0C(BuiltInId::pt_o_0C,
                                       BuiltInName::_empty,
                                       SymbolType::BuiltIn,
                                       TExtension::UNDEFINED,
                                       StaticType::Get<EbtInt, EbpUndefined, EvqOut, 1, 1>());
constexpr const TVariable kVar_pt_o_0D(BuiltInId::pt_o_0D,
                                       BuiltInName::_empty,
                                       SymbolType::BuiltIn,
                                       TExtension::UNDEFINED,
                                       StaticType::Get<EbtUInt, EbpUndefined, EvqOut, 1, 1>());
constexpr const TVariable kVar_pt_o_1B(BuiltInId::pt_o_1B,
                                       BuiltInName::_empty,
                                       SymbolType::BuiltIn,
                                       TExtension::UNDEFINED,
                                       StaticType::Get<EbtFloat, EbpUndefined, EvqOut, 2, 1>());
constexpr const TVariable kVar_pt_o_1C(BuiltInId::pt_o_1C,
                                       BuiltInName::_empty,
                                       SymbolType::BuiltIn,
                                       TExtension::UNDEFINED,
                                       StaticType::Get<EbtInt, EbpUndefined, EvqOut, 2, 1>());
constexpr const TVariable kVar_pt_o_1D(BuiltInId::pt_o_1D,
                                       BuiltInName::_empty,
                                       SymbolType::BuiltIn,
                                       TExtension::UNDEFINED,
                                       StaticType::Get<EbtUInt, EbpUndefined, EvqOut, 2, 1>());
constexpr const TVariable kVar_pt_o_2B(BuiltInId::pt_o_2B,
                                       BuiltInName::_empty,
                                       SymbolType::BuiltIn,
                                       TExtension::UNDEFINED,
                                       StaticType::Get<EbtFloat, EbpUndefined, EvqOut, 3, 1>());
constexpr const TVariable kVar_pt_o_2C(BuiltInId::pt_o_2C,
                                       BuiltInName::_empty,
                                       SymbolType::BuiltIn,
                                       TExtension::UNDEFINED,
                                       StaticType::Get<EbtInt, EbpUndefined, EvqOut, 3, 1>());
constexpr const TVariable kVar_pt_o_2D(BuiltInId::pt_o_2D,
                                       BuiltInName::_empty,
                                       SymbolType::BuiltIn,
                                       TExtension::UNDEFINED,
                                       StaticType::Get<EbtUInt, EbpUndefined, EvqOut, 3, 1>());
constexpr const TVariable kVar_pt_o_3B(BuiltInId::pt_o_3B,
                                       BuiltInName::_empty,
                                       SymbolType::BuiltIn,
                                       TExtension::UNDEFINED,
                                       StaticType::Get<EbtFloat, EbpUndefined, EvqOut, 4, 1>());
constexpr const TVariable kVar_pt_o_3C(BuiltInId::pt_o_3C,
                                       BuiltInName::_empty,
                                       SymbolType::BuiltIn,
                                       TExtension::UNDEFINED,
                                       StaticType::Get<EbtInt, EbpUndefined, EvqOut, 4, 1>());
constexpr const TVariable kVar_pt_o_3D(BuiltInId::pt_o_3D,
                                       BuiltInName::_empty,
                                       SymbolType::BuiltIn,
                                       TExtension::UNDEFINED,
                                       StaticType::Get<EbtUInt, EbpUndefined, EvqOut, 4, 1>());

const TVariable *gl_BaseInstance()
{
    return &kVar_gl_BaseInstance;
}

const TVariable *gl_BaseVertex()
{
    return &kVar_gl_BaseVertex;
}

const TVariable *gl_DrawID()
{
    return &kVar_gl_DrawID;
}

const TVariable *gl_DrawIDESSL1()
{
    return &kVar_gl_DrawIDESSL1;
}

const TVariable *gl_FragColor()
{
    return &kVar_gl_FragColor;
}

const TVariable *gl_FragCoord()
{
    return &kVar_gl_FragCoord;
}

const TVariable *gl_FragDepth()
{
    return &kVar_gl_FragDepth;
}

const TVariable *gl_FrontFacing()
{
    return &kVar_gl_FrontFacing;
}

const TVariable *gl_GlobalInvocationID()
{
    return &kVar_gl_GlobalInvocationID;
}

const TVariable *gl_InstanceID()
{
    return &kVar_gl_InstanceID;
}

const TVariable *gl_InvocationID()
{
    return &kVar_gl_InvocationID;
}

const TVariable *gl_LastFragColor()
{
    return &kVar_gl_LastFragColor;
}

const TVariable *gl_LastFragColorARM()
{
    return &kVar_gl_LastFragColorARM;
}

const TVariable *gl_Layer()
{
    return &kVar_gl_Layer;
}

const TVariable *gl_LayerGS()
{
    return &kVar_gl_LayerGS;
}

const TVariable *gl_LayerVS()
{
    return &kVar_gl_LayerVS;
}

const TVariable *gl_LocalInvocationID()
{
    return &kVar_gl_LocalInvocationID;
}

const TVariable *gl_LocalInvocationIndex()
{
    return &kVar_gl_LocalInvocationIndex;
}

const TVariable *gl_NumWorkGroups()
{
    return &kVar_gl_NumWorkGroups;
}

const TVariable *gl_PointCoord()
{
    return &kVar_gl_PointCoord;
}

const TVariable *gl_PointSize()
{
    return &kVar_gl_PointSize;
}

const TVariable *gl_Position()
{
    return &kVar_gl_Position;
}

const TVariable *gl_PrimitiveID()
{
    return &kVar_gl_PrimitiveID;
}

const TVariable *gl_PrimitiveIDGS()
{
    return &kVar_gl_PrimitiveIDGS;
}

const TVariable *gl_PrimitiveIDIn()
{
    return &kVar_gl_PrimitiveIDIn;
}

const TVariable *gl_SecondaryFragColorEXT()
{
    return &kVar_gl_SecondaryFragColorEXT;
}

const TVariable *gl_VertexID()
{
    return &kVar_gl_VertexID;
}

const TVariable *gl_ViewID_OVR()
{
    return &kVar_gl_ViewID_OVR;
}

const TVariable *gl_ViewID_OVRESSL1()
{
    return &kVar_gl_ViewID_OVRESSL1;
}

const TVariable *gl_ViewportIndex()
{
    return &kVar_gl_ViewportIndex;
}

const TVariable *gl_WorkGroupID()
{
    return &kVar_gl_WorkGroupID;
}

const TVariable *gl_WorkGroupSize()
{
    return &kVar_gl_WorkGroupSize;
}

}  // namespace BuiltInVariable

namespace BuiltInParameters
{

constexpr const TVariable **empty      = nullptr;
constexpr const TVariable *p0B0B0B[3]  = {&BuiltInVariable::kVar_pt0B, &BuiltInVariable::kVar_pt0B,
                                         &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p0B0B0E[3]  = {&BuiltInVariable::kVar_pt0B, &BuiltInVariable::kVar_pt0B,
                                         &BuiltInVariable::kVar_pt0E};
constexpr const TVariable *p0B0B1B[3]  = {&BuiltInVariable::kVar_pt0B, &BuiltInVariable::kVar_pt0B,
                                         &BuiltInVariable::kVar_pt1B};
constexpr const TVariable *p0B0B2B[3]  = {&BuiltInVariable::kVar_pt0B, &BuiltInVariable::kVar_pt0B,
                                         &BuiltInVariable::kVar_pt2B};
constexpr const TVariable *p0B0B3B[3]  = {&BuiltInVariable::kVar_pt0B, &BuiltInVariable::kVar_pt0B,
                                         &BuiltInVariable::kVar_pt3B};
constexpr const TVariable *p0B0C[2]    = {&BuiltInVariable::kVar_pt0B, &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0B1B[2]    = {&BuiltInVariable::kVar_pt0B, &BuiltInVariable::kVar_pt1B};
constexpr const TVariable *p0B2B[2]    = {&BuiltInVariable::kVar_pt0B, &BuiltInVariable::kVar_pt2B};
constexpr const TVariable *p0B3B[2]    = {&BuiltInVariable::kVar_pt0B, &BuiltInVariable::kVar_pt3B};
constexpr const TVariable *p0B_o_0B[2] = {&BuiltInVariable::kVar_pt0B,
                                          &BuiltInVariable::kVar_pt_o_0B};
constexpr const TVariable *p0B_o_0C[2] = {&BuiltInVariable::kVar_pt0B,
                                          &BuiltInVariable::kVar_pt_o_0C};
constexpr const TVariable *p0C0C0C0C[4] = {&BuiltInVariable::kVar_pt0C, &BuiltInVariable::kVar_pt0C,
                                           &BuiltInVariable::kVar_pt0C,
                                           &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0C0C_o_0C_o_0C[4] = {
    &BuiltInVariable::kVar_pt0C, &BuiltInVariable::kVar_pt0C, &BuiltInVariable::kVar_pt_o_0C,
    &BuiltInVariable::kVar_pt_o_0C};
constexpr const TVariable *p0D0C0C[3]   = {&BuiltInVariable::kVar_pt0D, &BuiltInVariable::kVar_pt0C,
                                         &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0D0D0C0C[4] = {&BuiltInVariable::kVar_pt0D, &BuiltInVariable::kVar_pt0D,
                                           &BuiltInVariable::kVar_pt0C,
                                           &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0D0D0D[3]   = {&BuiltInVariable::kVar_pt0D, &BuiltInVariable::kVar_pt0D,
                                         &BuiltInVariable::kVar_pt0D};
constexpr const TVariable *p0D0D_o_0D_o_0D[4] = {
    &BuiltInVariable::kVar_pt0D, &BuiltInVariable::kVar_pt0D, &BuiltInVariable::kVar_pt_o_0D,
    &BuiltInVariable::kVar_pt_o_0D};
constexpr const TVariable *p0F[1]   = {&BuiltInVariable::kVar_pt0F};
constexpr const TVariable *p0H0C[2] = {&BuiltInVariable::kVar_pt0H, &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0H1B0B1C[4] = {&BuiltInVariable::kVar_pt0H, &BuiltInVariable::kVar_pt1B,
                                           &BuiltInVariable::kVar_pt0B,
                                           &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0H1B0C[3]   = {&BuiltInVariable::kVar_pt0H, &BuiltInVariable::kVar_pt1B,
                                         &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0H1B1B1B1C[5] = {
    &BuiltInVariable::kVar_pt0H, &BuiltInVariable::kVar_pt1B, &BuiltInVariable::kVar_pt1B,
    &BuiltInVariable::kVar_pt1B, &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0H1B1C0B[4] = {&BuiltInVariable::kVar_pt0H, &BuiltInVariable::kVar_pt1B,
                                           &BuiltInVariable::kVar_pt1C,
                                           &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p0H1B1C0C[4] = {&BuiltInVariable::kVar_pt0H, &BuiltInVariable::kVar_pt1B,
                                           &BuiltInVariable::kVar_pt1C,
                                           &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0H1C0C1C[4] = {&BuiltInVariable::kVar_pt0H, &BuiltInVariable::kVar_pt1C,
                                           &BuiltInVariable::kVar_pt0C,
                                           &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0H2B0B1C[4] = {&BuiltInVariable::kVar_pt0H, &BuiltInVariable::kVar_pt2B,
                                           &BuiltInVariable::kVar_pt0B,
                                           &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0H2B1B1B1C[5] = {
    &BuiltInVariable::kVar_pt0H, &BuiltInVariable::kVar_pt2B, &BuiltInVariable::kVar_pt1B,
    &BuiltInVariable::kVar_pt1B, &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0H2B1C0B[4] = {&BuiltInVariable::kVar_pt0H, &BuiltInVariable::kVar_pt2B,
                                           &BuiltInVariable::kVar_pt1C,
                                           &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p0H3B0B1C[4] = {&BuiltInVariable::kVar_pt0H, &BuiltInVariable::kVar_pt3B,
                                           &BuiltInVariable::kVar_pt0B,
                                           &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0H3B1B1B1C[5] = {
    &BuiltInVariable::kVar_pt0H, &BuiltInVariable::kVar_pt3B, &BuiltInVariable::kVar_pt1B,
    &BuiltInVariable::kVar_pt1B, &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0H3B1C0B[4] = {&BuiltInVariable::kVar_pt0H, &BuiltInVariable::kVar_pt3B,
                                           &BuiltInVariable::kVar_pt1C,
                                           &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p0I0C[2] = {&BuiltInVariable::kVar_pt0I, &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0I2B0B2C[4] = {&BuiltInVariable::kVar_pt0I, &BuiltInVariable::kVar_pt2B,
                                           &BuiltInVariable::kVar_pt0B,
                                           &BuiltInVariable::kVar_pt2C};
constexpr const TVariable *p0I2B2B2B2C[5] = {
    &BuiltInVariable::kVar_pt0I, &BuiltInVariable::kVar_pt2B, &BuiltInVariable::kVar_pt2B,
    &BuiltInVariable::kVar_pt2B, &BuiltInVariable::kVar_pt2C};
constexpr const TVariable *p0I2B2C0B[4] = {&BuiltInVariable::kVar_pt0I, &BuiltInVariable::kVar_pt2B,
                                           &BuiltInVariable::kVar_pt2C,
                                           &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p0I2C0C2C[4] = {&BuiltInVariable::kVar_pt0I, &BuiltInVariable::kVar_pt2C,
                                           &BuiltInVariable::kVar_pt0C,
                                           &BuiltInVariable::kVar_pt2C};
constexpr const TVariable *p0I3B0B2C[4] = {&BuiltInVariable::kVar_pt0I, &BuiltInVariable::kVar_pt3B,
                                           &BuiltInVariable::kVar_pt0B,
                                           &BuiltInVariable::kVar_pt2C};
constexpr const TVariable *p0I3B2B2B2C[5] = {
    &BuiltInVariable::kVar_pt0I, &BuiltInVariable::kVar_pt3B, &BuiltInVariable::kVar_pt2B,
    &BuiltInVariable::kVar_pt2B, &BuiltInVariable::kVar_pt2C};
constexpr const TVariable *p0I3B2C0B[4] = {&BuiltInVariable::kVar_pt0I, &BuiltInVariable::kVar_pt3B,
                                           &BuiltInVariable::kVar_pt2C,
                                           &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p0J0C[2]   = {&BuiltInVariable::kVar_pt0J, &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0J2B0B[3] = {&BuiltInVariable::kVar_pt0J, &BuiltInVariable::kVar_pt2B,
                                         &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p0J2B0C[3] = {&BuiltInVariable::kVar_pt0J, &BuiltInVariable::kVar_pt2B,
                                         &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0J2B2B2B[4] = {&BuiltInVariable::kVar_pt0J, &BuiltInVariable::kVar_pt2B,
                                           &BuiltInVariable::kVar_pt2B,
                                           &BuiltInVariable::kVar_pt2B};
constexpr const TVariable *p0K0C[2] = {&BuiltInVariable::kVar_pt0K, &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0K2B0B1C[4] = {&BuiltInVariable::kVar_pt0K, &BuiltInVariable::kVar_pt2B,
                                           &BuiltInVariable::kVar_pt0B,
                                           &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0K2B0C[3]   = {&BuiltInVariable::kVar_pt0K, &BuiltInVariable::kVar_pt2B,
                                         &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0K2B1B1B1C[5] = {
    &BuiltInVariable::kVar_pt0K, &BuiltInVariable::kVar_pt2B, &BuiltInVariable::kVar_pt1B,
    &BuiltInVariable::kVar_pt1B, &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0K2B1C0B[4] = {&BuiltInVariable::kVar_pt0K, &BuiltInVariable::kVar_pt2B,
                                           &BuiltInVariable::kVar_pt1C,
                                           &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p0K2B1C0C[4] = {&BuiltInVariable::kVar_pt0K, &BuiltInVariable::kVar_pt2B,
                                           &BuiltInVariable::kVar_pt1C,
                                           &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0K2C0C1C[4] = {&BuiltInVariable::kVar_pt0K, &BuiltInVariable::kVar_pt2C,
                                           &BuiltInVariable::kVar_pt0C,
                                           &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0L0C[2]   = {&BuiltInVariable::kVar_pt0L, &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0L1B0B[3] = {&BuiltInVariable::kVar_pt0L, &BuiltInVariable::kVar_pt1B,
                                         &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p0L1C0C[3] = {&BuiltInVariable::kVar_pt0L, &BuiltInVariable::kVar_pt1C,
                                         &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0L2B0B[3] = {&BuiltInVariable::kVar_pt0L, &BuiltInVariable::kVar_pt2B,
                                         &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p0L3B0B[3] = {&BuiltInVariable::kVar_pt0L, &BuiltInVariable::kVar_pt3B,
                                         &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p0M0C[2]   = {&BuiltInVariable::kVar_pt0M, &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0M1B0B[3] = {&BuiltInVariable::kVar_pt0M, &BuiltInVariable::kVar_pt1B,
                                         &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p0M1C0C[3] = {&BuiltInVariable::kVar_pt0M, &BuiltInVariable::kVar_pt1C,
                                         &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0M2B0B[3] = {&BuiltInVariable::kVar_pt0M, &BuiltInVariable::kVar_pt2B,
                                         &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p0M3B0B[3] = {&BuiltInVariable::kVar_pt0M, &BuiltInVariable::kVar_pt3B,
                                         &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p0N1B[2]   = {&BuiltInVariable::kVar_pt0N, &BuiltInVariable::kVar_pt1B};
constexpr const TVariable *p0N2B[2]   = {&BuiltInVariable::kVar_pt0N, &BuiltInVariable::kVar_pt2B};
constexpr const TVariable *p0N3B[2]   = {&BuiltInVariable::kVar_pt0N, &BuiltInVariable::kVar_pt3B};
constexpr const TVariable *p0O1C0C[3] = {&BuiltInVariable::kVar_pt0O, &BuiltInVariable::kVar_pt1C,
                                         &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0P2C0C[3] = {&BuiltInVariable::kVar_pt0P, &BuiltInVariable::kVar_pt2C,
                                         &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0Q0C[2]   = {&BuiltInVariable::kVar_pt0Q, &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0Q1B0B1C[4] = {&BuiltInVariable::kVar_pt0Q, &BuiltInVariable::kVar_pt1B,
                                           &BuiltInVariable::kVar_pt0B,
                                           &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0Q1B0C[3]   = {&BuiltInVariable::kVar_pt0Q, &BuiltInVariable::kVar_pt1B,
                                         &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0Q1B1B1B1C[5] = {
    &BuiltInVariable::kVar_pt0Q, &BuiltInVariable::kVar_pt1B, &BuiltInVariable::kVar_pt1B,
    &BuiltInVariable::kVar_pt1B, &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0Q1B1C0B[4] = {&BuiltInVariable::kVar_pt0Q, &BuiltInVariable::kVar_pt1B,
                                           &BuiltInVariable::kVar_pt1C,
                                           &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p0Q1B1C0C[4] = {&BuiltInVariable::kVar_pt0Q, &BuiltInVariable::kVar_pt1B,
                                           &BuiltInVariable::kVar_pt1C,
                                           &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0Q1C0C1C[4] = {&BuiltInVariable::kVar_pt0Q, &BuiltInVariable::kVar_pt1C,
                                           &BuiltInVariable::kVar_pt0C,
                                           &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0Q2B0B1C[4] = {&BuiltInVariable::kVar_pt0Q, &BuiltInVariable::kVar_pt2B,
                                           &BuiltInVariable::kVar_pt0B,
                                           &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0Q2B1B1B1C[5] = {
    &BuiltInVariable::kVar_pt0Q, &BuiltInVariable::kVar_pt2B, &BuiltInVariable::kVar_pt1B,
    &BuiltInVariable::kVar_pt1B, &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0Q2B1C0B[4] = {&BuiltInVariable::kVar_pt0Q, &BuiltInVariable::kVar_pt2B,
                                           &BuiltInVariable::kVar_pt1C,
                                           &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p0Q3B0B1C[4] = {&BuiltInVariable::kVar_pt0Q, &BuiltInVariable::kVar_pt3B,
                                           &BuiltInVariable::kVar_pt0B,
                                           &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0Q3B1B1B1C[5] = {
    &BuiltInVariable::kVar_pt0Q, &BuiltInVariable::kVar_pt3B, &BuiltInVariable::kVar_pt1B,
    &BuiltInVariable::kVar_pt1B, &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0Q3B1C0B[4] = {&BuiltInVariable::kVar_pt0Q, &BuiltInVariable::kVar_pt3B,
                                           &BuiltInVariable::kVar_pt1C,
                                           &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p0R0C[2] = {&BuiltInVariable::kVar_pt0R, &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0R2B0B2C[4] = {&BuiltInVariable::kVar_pt0R, &BuiltInVariable::kVar_pt2B,
                                           &BuiltInVariable::kVar_pt0B,
                                           &BuiltInVariable::kVar_pt2C};
constexpr const TVariable *p0R2B2B2B2C[5] = {
    &BuiltInVariable::kVar_pt0R, &BuiltInVariable::kVar_pt2B, &BuiltInVariable::kVar_pt2B,
    &BuiltInVariable::kVar_pt2B, &BuiltInVariable::kVar_pt2C};
constexpr const TVariable *p0R2B2C0B[4] = {&BuiltInVariable::kVar_pt0R, &BuiltInVariable::kVar_pt2B,
                                           &BuiltInVariable::kVar_pt2C,
                                           &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p0R2C0C2C[4] = {&BuiltInVariable::kVar_pt0R, &BuiltInVariable::kVar_pt2C,
                                           &BuiltInVariable::kVar_pt0C,
                                           &BuiltInVariable::kVar_pt2C};
constexpr const TVariable *p0R3B0B2C[4] = {&BuiltInVariable::kVar_pt0R, &BuiltInVariable::kVar_pt3B,
                                           &BuiltInVariable::kVar_pt0B,
                                           &BuiltInVariable::kVar_pt2C};
constexpr const TVariable *p0R3B2B2B2C[5] = {
    &BuiltInVariable::kVar_pt0R, &BuiltInVariable::kVar_pt3B, &BuiltInVariable::kVar_pt2B,
    &BuiltInVariable::kVar_pt2B, &BuiltInVariable::kVar_pt2C};
constexpr const TVariable *p0R3B2C0B[4] = {&BuiltInVariable::kVar_pt0R, &BuiltInVariable::kVar_pt3B,
                                           &BuiltInVariable::kVar_pt2C,
                                           &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p0S0C[2]   = {&BuiltInVariable::kVar_pt0S, &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0S2B0B[3] = {&BuiltInVariable::kVar_pt0S, &BuiltInVariable::kVar_pt2B,
                                         &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p0S2B0C[3] = {&BuiltInVariable::kVar_pt0S, &BuiltInVariable::kVar_pt2B,
                                         &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0S2B2B2B[4] = {&BuiltInVariable::kVar_pt0S, &BuiltInVariable::kVar_pt2B,
                                           &BuiltInVariable::kVar_pt2B,
                                           &BuiltInVariable::kVar_pt2B};
constexpr const TVariable *p0T0C[2] = {&BuiltInVariable::kVar_pt0T, &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0T2B0B1C[4] = {&BuiltInVariable::kVar_pt0T, &BuiltInVariable::kVar_pt2B,
                                           &BuiltInVariable::kVar_pt0B,
                                           &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0T2B0C[3]   = {&BuiltInVariable::kVar_pt0T, &BuiltInVariable::kVar_pt2B,
                                         &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0T2B1B1B1C[5] = {
    &BuiltInVariable::kVar_pt0T, &BuiltInVariable::kVar_pt2B, &BuiltInVariable::kVar_pt1B,
    &BuiltInVariable::kVar_pt1B, &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0T2B1C0B[4] = {&BuiltInVariable::kVar_pt0T, &BuiltInVariable::kVar_pt2B,
                                           &BuiltInVariable::kVar_pt1C,
                                           &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p0T2B1C0C[4] = {&BuiltInVariable::kVar_pt0T, &BuiltInVariable::kVar_pt2B,
                                           &BuiltInVariable::kVar_pt1C,
                                           &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0T2C0C1C[4] = {&BuiltInVariable::kVar_pt0T, &BuiltInVariable::kVar_pt2C,
                                           &BuiltInVariable::kVar_pt0C,
                                           &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0U1C0C[3]   = {&BuiltInVariable::kVar_pt0U, &BuiltInVariable::kVar_pt1C,
                                         &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0V2C0C[3]   = {&BuiltInVariable::kVar_pt0V, &BuiltInVariable::kVar_pt2C,
                                         &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0W0C[2] = {&BuiltInVariable::kVar_pt0W, &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0W1B0B1C[4] = {&BuiltInVariable::kVar_pt0W, &BuiltInVariable::kVar_pt1B,
                                           &BuiltInVariable::kVar_pt0B,
                                           &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0W1B0C[3]   = {&BuiltInVariable::kVar_pt0W, &BuiltInVariable::kVar_pt1B,
                                         &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0W1B1B1B1C[5] = {
    &BuiltInVariable::kVar_pt0W, &BuiltInVariable::kVar_pt1B, &BuiltInVariable::kVar_pt1B,
    &BuiltInVariable::kVar_pt1B, &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0W1B1C0B[4] = {&BuiltInVariable::kVar_pt0W, &BuiltInVariable::kVar_pt1B,
                                           &BuiltInVariable::kVar_pt1C,
                                           &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p0W1B1C0C[4] = {&BuiltInVariable::kVar_pt0W, &BuiltInVariable::kVar_pt1B,
                                           &BuiltInVariable::kVar_pt1C,
                                           &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0W1C0C1C[4] = {&BuiltInVariable::kVar_pt0W, &BuiltInVariable::kVar_pt1C,
                                           &BuiltInVariable::kVar_pt0C,
                                           &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0W2B0B1C[4] = {&BuiltInVariable::kVar_pt0W, &BuiltInVariable::kVar_pt2B,
                                           &BuiltInVariable::kVar_pt0B,
                                           &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0W2B1B1B1C[5] = {
    &BuiltInVariable::kVar_pt0W, &BuiltInVariable::kVar_pt2B, &BuiltInVariable::kVar_pt1B,
    &BuiltInVariable::kVar_pt1B, &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0W2B1C0B[4] = {&BuiltInVariable::kVar_pt0W, &BuiltInVariable::kVar_pt2B,
                                           &BuiltInVariable::kVar_pt1C,
                                           &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p0W3B0B1C[4] = {&BuiltInVariable::kVar_pt0W, &BuiltInVariable::kVar_pt3B,
                                           &BuiltInVariable::kVar_pt0B,
                                           &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0W3B1B1B1C[5] = {
    &BuiltInVariable::kVar_pt0W, &BuiltInVariable::kVar_pt3B, &BuiltInVariable::kVar_pt1B,
    &BuiltInVariable::kVar_pt1B, &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0W3B1C0B[4] = {&BuiltInVariable::kVar_pt0W, &BuiltInVariable::kVar_pt3B,
                                           &BuiltInVariable::kVar_pt1C,
                                           &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p0X0C[2] = {&BuiltInVariable::kVar_pt0X, &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0X2B0B2C[4] = {&BuiltInVariable::kVar_pt0X, &BuiltInVariable::kVar_pt2B,
                                           &BuiltInVariable::kVar_pt0B,
                                           &BuiltInVariable::kVar_pt2C};
constexpr const TVariable *p0X2B2B2B2C[5] = {
    &BuiltInVariable::kVar_pt0X, &BuiltInVariable::kVar_pt2B, &BuiltInVariable::kVar_pt2B,
    &BuiltInVariable::kVar_pt2B, &BuiltInVariable::kVar_pt2C};
constexpr const TVariable *p0X2B2C0B[4] = {&BuiltInVariable::kVar_pt0X, &BuiltInVariable::kVar_pt2B,
                                           &BuiltInVariable::kVar_pt2C,
                                           &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p0X2C0C2C[4] = {&BuiltInVariable::kVar_pt0X, &BuiltInVariable::kVar_pt2C,
                                           &BuiltInVariable::kVar_pt0C,
                                           &BuiltInVariable::kVar_pt2C};
constexpr const TVariable *p0X3B0B2C[4] = {&BuiltInVariable::kVar_pt0X, &BuiltInVariable::kVar_pt3B,
                                           &BuiltInVariable::kVar_pt0B,
                                           &BuiltInVariable::kVar_pt2C};
constexpr const TVariable *p0X3B2B2B2C[5] = {
    &BuiltInVariable::kVar_pt0X, &BuiltInVariable::kVar_pt3B, &BuiltInVariable::kVar_pt2B,
    &BuiltInVariable::kVar_pt2B, &BuiltInVariable::kVar_pt2C};
constexpr const TVariable *p0X3B2C0B[4] = {&BuiltInVariable::kVar_pt0X, &BuiltInVariable::kVar_pt3B,
                                           &BuiltInVariable::kVar_pt2C,
                                           &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p0Y0C[2]   = {&BuiltInVariable::kVar_pt0Y, &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0Y2B0B[3] = {&BuiltInVariable::kVar_pt0Y, &BuiltInVariable::kVar_pt2B,
                                         &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p0Y2B0C[3] = {&BuiltInVariable::kVar_pt0Y, &BuiltInVariable::kVar_pt2B,
                                         &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0Y2B2B2B[4] = {&BuiltInVariable::kVar_pt0Y, &BuiltInVariable::kVar_pt2B,
                                           &BuiltInVariable::kVar_pt2B,
                                           &BuiltInVariable::kVar_pt2B};
constexpr const TVariable *p0Z0C[2] = {&BuiltInVariable::kVar_pt0Z, &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0Z2B0B1C[4] = {&BuiltInVariable::kVar_pt0Z, &BuiltInVariable::kVar_pt2B,
                                           &BuiltInVariable::kVar_pt0B,
                                           &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0Z2B0C[3]   = {&BuiltInVariable::kVar_pt0Z, &BuiltInVariable::kVar_pt2B,
                                         &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0Z2B1B1B1C[5] = {
    &BuiltInVariable::kVar_pt0Z, &BuiltInVariable::kVar_pt2B, &BuiltInVariable::kVar_pt1B,
    &BuiltInVariable::kVar_pt1B, &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0Z2B1C0B[4] = {&BuiltInVariable::kVar_pt0Z, &BuiltInVariable::kVar_pt2B,
                                           &BuiltInVariable::kVar_pt1C,
                                           &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p0Z2B1C0C[4] = {&BuiltInVariable::kVar_pt0Z, &BuiltInVariable::kVar_pt2B,
                                           &BuiltInVariable::kVar_pt1C,
                                           &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0Z2C0C1C[4] = {&BuiltInVariable::kVar_pt0Z, &BuiltInVariable::kVar_pt2C,
                                           &BuiltInVariable::kVar_pt0C,
                                           &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0a1C0C[3]   = {&BuiltInVariable::kVar_pt0a, &BuiltInVariable::kVar_pt1C,
                                         &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0b2C0C[3]   = {&BuiltInVariable::kVar_pt0b, &BuiltInVariable::kVar_pt2C,
                                         &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0c0C[2] = {&BuiltInVariable::kVar_pt0c, &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0c1B0B1C[4] = {&BuiltInVariable::kVar_pt0c, &BuiltInVariable::kVar_pt1B,
                                           &BuiltInVariable::kVar_pt0B,
                                           &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0c2B0B1C[4] = {&BuiltInVariable::kVar_pt0c, &BuiltInVariable::kVar_pt2B,
                                           &BuiltInVariable::kVar_pt0B,
                                           &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0c2B1B1B1C[5] = {
    &BuiltInVariable::kVar_pt0c, &BuiltInVariable::kVar_pt2B, &BuiltInVariable::kVar_pt1B,
    &BuiltInVariable::kVar_pt1B, &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0c2B1C0B[4] = {&BuiltInVariable::kVar_pt0c, &BuiltInVariable::kVar_pt2B,
                                           &BuiltInVariable::kVar_pt1C,
                                           &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p0c3B0B1C[4] = {&BuiltInVariable::kVar_pt0c, &BuiltInVariable::kVar_pt3B,
                                           &BuiltInVariable::kVar_pt0B,
                                           &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0c3B1B1B1C[5] = {
    &BuiltInVariable::kVar_pt0c, &BuiltInVariable::kVar_pt3B, &BuiltInVariable::kVar_pt1B,
    &BuiltInVariable::kVar_pt1B, &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0c3B1C0B[4] = {&BuiltInVariable::kVar_pt0c, &BuiltInVariable::kVar_pt3B,
                                           &BuiltInVariable::kVar_pt1C,
                                           &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p0d0C[2]   = {&BuiltInVariable::kVar_pt0d, &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0d2B0B[3] = {&BuiltInVariable::kVar_pt0d, &BuiltInVariable::kVar_pt2B,
                                         &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p0d3B0B[3] = {&BuiltInVariable::kVar_pt0d, &BuiltInVariable::kVar_pt3B,
                                         &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p0d3B2B2B[4] = {&BuiltInVariable::kVar_pt0d, &BuiltInVariable::kVar_pt3B,
                                           &BuiltInVariable::kVar_pt2B,
                                           &BuiltInVariable::kVar_pt2B};
constexpr const TVariable *p0e0C[2] = {&BuiltInVariable::kVar_pt0e, &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p0e2B0B1C[4] = {&BuiltInVariable::kVar_pt0e, &BuiltInVariable::kVar_pt2B,
                                           &BuiltInVariable::kVar_pt0B,
                                           &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0e3B1B1B1C[5] = {
    &BuiltInVariable::kVar_pt0e, &BuiltInVariable::kVar_pt3B, &BuiltInVariable::kVar_pt1B,
    &BuiltInVariable::kVar_pt1B, &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p0f1C3B[3]  = {&BuiltInVariable::kVar_pt0f, &BuiltInVariable::kVar_pt1C,
                                         &BuiltInVariable::kVar_pt3B};
constexpr const TVariable *p0g1C3C[3]  = {&BuiltInVariable::kVar_pt0g, &BuiltInVariable::kVar_pt1C,
                                         &BuiltInVariable::kVar_pt3C};
constexpr const TVariable *p0h1C3D[3]  = {&BuiltInVariable::kVar_pt0h, &BuiltInVariable::kVar_pt1C,
                                         &BuiltInVariable::kVar_pt3D};
constexpr const TVariable *p0i2C3B[3]  = {&BuiltInVariable::kVar_pt0i, &BuiltInVariable::kVar_pt2C,
                                         &BuiltInVariable::kVar_pt3B};
constexpr const TVariable *p0j2C3C[3]  = {&BuiltInVariable::kVar_pt0j, &BuiltInVariable::kVar_pt2C,
                                         &BuiltInVariable::kVar_pt3C};
constexpr const TVariable *p0k2C3D[3]  = {&BuiltInVariable::kVar_pt0k, &BuiltInVariable::kVar_pt2C,
                                         &BuiltInVariable::kVar_pt3D};
constexpr const TVariable *p0l2C3B[3]  = {&BuiltInVariable::kVar_pt0l, &BuiltInVariable::kVar_pt2C,
                                         &BuiltInVariable::kVar_pt3B};
constexpr const TVariable *p0m2C3C[3]  = {&BuiltInVariable::kVar_pt0m, &BuiltInVariable::kVar_pt2C,
                                         &BuiltInVariable::kVar_pt3C};
constexpr const TVariable *p0n2C3D[3]  = {&BuiltInVariable::kVar_pt0n, &BuiltInVariable::kVar_pt2C,
                                         &BuiltInVariable::kVar_pt3D};
constexpr const TVariable *p0o2C3B[3]  = {&BuiltInVariable::kVar_pt0o, &BuiltInVariable::kVar_pt2C,
                                         &BuiltInVariable::kVar_pt3B};
constexpr const TVariable *p0p2C3C[3]  = {&BuiltInVariable::kVar_pt0p, &BuiltInVariable::kVar_pt2C,
                                         &BuiltInVariable::kVar_pt3C};
constexpr const TVariable *p0q2C3D[3]  = {&BuiltInVariable::kVar_pt0q, &BuiltInVariable::kVar_pt2C,
                                         &BuiltInVariable::kVar_pt3D};
constexpr const TVariable *p1B0B0B[3]  = {&BuiltInVariable::kVar_pt1B, &BuiltInVariable::kVar_pt0B,
                                         &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p1B1B0B[3]  = {&BuiltInVariable::kVar_pt1B, &BuiltInVariable::kVar_pt1B,
                                         &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p1B1B1B[3]  = {&BuiltInVariable::kVar_pt1B, &BuiltInVariable::kVar_pt1B,
                                         &BuiltInVariable::kVar_pt1B};
constexpr const TVariable *p1B1B1E[3]  = {&BuiltInVariable::kVar_pt1B, &BuiltInVariable::kVar_pt1B,
                                         &BuiltInVariable::kVar_pt1E};
constexpr const TVariable *p1B1C[2]    = {&BuiltInVariable::kVar_pt1B, &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p1B2B[2]    = {&BuiltInVariable::kVar_pt1B, &BuiltInVariable::kVar_pt2B};
constexpr const TVariable *p1B3B[2]    = {&BuiltInVariable::kVar_pt1B, &BuiltInVariable::kVar_pt3B};
constexpr const TVariable *p1B_o_1B[2] = {&BuiltInVariable::kVar_pt1B,
                                          &BuiltInVariable::kVar_pt_o_1B};
constexpr const TVariable *p1B_o_1C[2] = {&BuiltInVariable::kVar_pt1B,
                                          &BuiltInVariable::kVar_pt_o_1C};
constexpr const TVariable *p1C0C0C[3]  = {&BuiltInVariable::kVar_pt1C, &BuiltInVariable::kVar_pt0C,
                                         &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p1C1C0C0C[4] = {&BuiltInVariable::kVar_pt1C, &BuiltInVariable::kVar_pt1C,
                                           &BuiltInVariable::kVar_pt0C,
                                           &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p1C1C1C[3]   = {&BuiltInVariable::kVar_pt1C, &BuiltInVariable::kVar_pt1C,
                                         &BuiltInVariable::kVar_pt1C};
constexpr const TVariable *p1C1C_o_1C_o_1C[4] = {
    &BuiltInVariable::kVar_pt1C, &BuiltInVariable::kVar_pt1C, &BuiltInVariable::kVar_pt_o_1C,
    &BuiltInVariable::kVar_pt_o_1C};
constexpr const TVariable *p1D0C0C[3]   = {&BuiltInVariable::kVar_pt1D, &BuiltInVariable::kVar_pt0C,
                                         &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p1D0D0D[3]   = {&BuiltInVariable::kVar_pt1D, &BuiltInVariable::kVar_pt0D,
                                         &BuiltInVariable::kVar_pt0D};
constexpr const TVariable *p1D1D0C0C[4] = {&BuiltInVariable::kVar_pt1D, &BuiltInVariable::kVar_pt1D,
                                           &BuiltInVariable::kVar_pt0C,
                                           &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p1D1D1D[3]   = {&BuiltInVariable::kVar_pt1D, &BuiltInVariable::kVar_pt1D,
                                         &BuiltInVariable::kVar_pt1D};
constexpr const TVariable *p1D1D_o_1D_o_1D[4] = {
    &BuiltInVariable::kVar_pt1D, &BuiltInVariable::kVar_pt1D, &BuiltInVariable::kVar_pt_o_1D,
    &BuiltInVariable::kVar_pt_o_1D};
constexpr const TVariable *p1E1E[2]    = {&BuiltInVariable::kVar_pt1E, &BuiltInVariable::kVar_pt1E};
constexpr const TVariable *p2B0B0B[3]  = {&BuiltInVariable::kVar_pt2B, &BuiltInVariable::kVar_pt0B,
                                         &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p2B0G[2]    = {&BuiltInVariable::kVar_pt2B, &BuiltInVariable::kVar_pt0G};
constexpr const TVariable *p2B1B[2]    = {&BuiltInVariable::kVar_pt2B, &BuiltInVariable::kVar_pt1B};
constexpr const TVariable *p2B2B0B[3]  = {&BuiltInVariable::kVar_pt2B, &BuiltInVariable::kVar_pt2B,
                                         &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p2B2B2B[3]  = {&BuiltInVariable::kVar_pt2B, &BuiltInVariable::kVar_pt2B,
                                         &BuiltInVariable::kVar_pt2B};
constexpr const TVariable *p2B2B2E[3]  = {&BuiltInVariable::kVar_pt2B, &BuiltInVariable::kVar_pt2B,
                                         &BuiltInVariable::kVar_pt2E};
constexpr const TVariable *p2B2C[2]    = {&BuiltInVariable::kVar_pt2B, &BuiltInVariable::kVar_pt2C};
constexpr const TVariable *p2B3B[2]    = {&BuiltInVariable::kVar_pt2B, &BuiltInVariable::kVar_pt3B};
constexpr const TVariable *p2B_o_2B[2] = {&BuiltInVariable::kVar_pt2B,
                                          &BuiltInVariable::kVar_pt_o_2B};
constexpr const TVariable *p2B_o_2C[2] = {&BuiltInVariable::kVar_pt2B,
                                          &BuiltInVariable::kVar_pt_o_2C};
constexpr const TVariable *p2C0C0C[3]  = {&BuiltInVariable::kVar_pt2C, &BuiltInVariable::kVar_pt0C,
                                         &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p2C2C0C0C[4] = {&BuiltInVariable::kVar_pt2C, &BuiltInVariable::kVar_pt2C,
                                           &BuiltInVariable::kVar_pt0C,
                                           &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p2C2C2C[3]   = {&BuiltInVariable::kVar_pt2C, &BuiltInVariable::kVar_pt2C,
                                         &BuiltInVariable::kVar_pt2C};
constexpr const TVariable *p2C2C_o_2C_o_2C[4] = {
    &BuiltInVariable::kVar_pt2C, &BuiltInVariable::kVar_pt2C, &BuiltInVariable::kVar_pt_o_2C,
    &BuiltInVariable::kVar_pt_o_2C};
constexpr const TVariable *p2D0C0C[3]   = {&BuiltInVariable::kVar_pt2D, &BuiltInVariable::kVar_pt0C,
                                         &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p2D0D0D[3]   = {&BuiltInVariable::kVar_pt2D, &BuiltInVariable::kVar_pt0D,
                                         &BuiltInVariable::kVar_pt0D};
constexpr const TVariable *p2D2D0C0C[4] = {&BuiltInVariable::kVar_pt2D, &BuiltInVariable::kVar_pt2D,
                                           &BuiltInVariable::kVar_pt0C,
                                           &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p2D2D2D[3]   = {&BuiltInVariable::kVar_pt2D, &BuiltInVariable::kVar_pt2D,
                                         &BuiltInVariable::kVar_pt2D};
constexpr const TVariable *p2D2D_o_2D_o_2D[4] = {
    &BuiltInVariable::kVar_pt2D, &BuiltInVariable::kVar_pt2D, &BuiltInVariable::kVar_pt_o_2D,
    &BuiltInVariable::kVar_pt_o_2D};
constexpr const TVariable *p2E2E[2]    = {&BuiltInVariable::kVar_pt2E, &BuiltInVariable::kVar_pt2E};
constexpr const TVariable *p3B0B0B[3]  = {&BuiltInVariable::kVar_pt3B, &BuiltInVariable::kVar_pt0B,
                                         &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p3B1B[2]    = {&BuiltInVariable::kVar_pt3B, &BuiltInVariable::kVar_pt1B};
constexpr const TVariable *p3B2B[2]    = {&BuiltInVariable::kVar_pt3B, &BuiltInVariable::kVar_pt2B};
constexpr const TVariable *p3B3B0B[3]  = {&BuiltInVariable::kVar_pt3B, &BuiltInVariable::kVar_pt3B,
                                         &BuiltInVariable::kVar_pt0B};
constexpr const TVariable *p3B3B3B[3]  = {&BuiltInVariable::kVar_pt3B, &BuiltInVariable::kVar_pt3B,
                                         &BuiltInVariable::kVar_pt3B};
constexpr const TVariable *p3B3B3E[3]  = {&BuiltInVariable::kVar_pt3B, &BuiltInVariable::kVar_pt3B,
                                         &BuiltInVariable::kVar_pt3E};
constexpr const TVariable *p3B3C[2]    = {&BuiltInVariable::kVar_pt3B, &BuiltInVariable::kVar_pt3C};
constexpr const TVariable *p3B_o_3B[2] = {&BuiltInVariable::kVar_pt3B,
                                          &BuiltInVariable::kVar_pt_o_3B};
constexpr const TVariable *p3B_o_3C[2] = {&BuiltInVariable::kVar_pt3B,
                                          &BuiltInVariable::kVar_pt_o_3C};
constexpr const TVariable *p3C0C0C[3]  = {&BuiltInVariable::kVar_pt3C, &BuiltInVariable::kVar_pt0C,
                                         &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p3C3C0C0C[4] = {&BuiltInVariable::kVar_pt3C, &BuiltInVariable::kVar_pt3C,
                                           &BuiltInVariable::kVar_pt0C,
                                           &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p3C3C3C[3]   = {&BuiltInVariable::kVar_pt3C, &BuiltInVariable::kVar_pt3C,
                                         &BuiltInVariable::kVar_pt3C};
constexpr const TVariable *p3C3C_o_3C_o_3C[4] = {
    &BuiltInVariable::kVar_pt3C, &BuiltInVariable::kVar_pt3C, &BuiltInVariable::kVar_pt_o_3C,
    &BuiltInVariable::kVar_pt_o_3C};
constexpr const TVariable *p3D0C0C[3]   = {&BuiltInVariable::kVar_pt3D, &BuiltInVariable::kVar_pt0C,
                                         &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p3D0D0D[3]   = {&BuiltInVariable::kVar_pt3D, &BuiltInVariable::kVar_pt0D,
                                         &BuiltInVariable::kVar_pt0D};
constexpr const TVariable *p3D3D0C0C[4] = {&BuiltInVariable::kVar_pt3D, &BuiltInVariable::kVar_pt3D,
                                           &BuiltInVariable::kVar_pt0C,
                                           &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p3D3D3D[3]   = {&BuiltInVariable::kVar_pt3D, &BuiltInVariable::kVar_pt3D,
                                         &BuiltInVariable::kVar_pt3D};
constexpr const TVariable *p3D3D_o_3D_o_3D[4] = {
    &BuiltInVariable::kVar_pt3D, &BuiltInVariable::kVar_pt3D, &BuiltInVariable::kVar_pt_o_3D,
    &BuiltInVariable::kVar_pt_o_3D};
constexpr const TVariable *p3E3E[2] = {&BuiltInVariable::kVar_pt3E, &BuiltInVariable::kVar_pt3E};
constexpr const TVariable *p5B5B[2] = {&BuiltInVariable::kVar_pt5B, &BuiltInVariable::kVar_pt5B};
constexpr const TVariable *p6B6B[2] = {&BuiltInVariable::kVar_pt6B, &BuiltInVariable::kVar_pt6B};
constexpr const TVariable *p7B7B[2] = {&BuiltInVariable::kVar_pt7B, &BuiltInVariable::kVar_pt7B};
constexpr const TVariable *p9B9B[2] = {&BuiltInVariable::kVar_pt9B, &BuiltInVariable::kVar_pt9B};
constexpr const TVariable *pABAB[2] = {&BuiltInVariable::kVar_ptAB, &BuiltInVariable::kVar_ptAB};
constexpr const TVariable *pBBBB[2] = {&BuiltInVariable::kVar_ptBB, &BuiltInVariable::kVar_ptBB};
constexpr const TVariable *pDBDB[2] = {&BuiltInVariable::kVar_ptDB, &BuiltInVariable::kVar_ptDB};
constexpr const TVariable *pEBEB[2] = {&BuiltInVariable::kVar_ptEB, &BuiltInVariable::kVar_ptEB};
constexpr const TVariable *pFBFB[2] = {&BuiltInVariable::kVar_ptFB, &BuiltInVariable::kVar_ptFB};
constexpr const TVariable *p_io_0C0C0C[3] = {
    &BuiltInVariable::kVar_pt_io_0C, &BuiltInVariable::kVar_pt0C, &BuiltInVariable::kVar_pt0C};
constexpr const TVariable *p_io_0D0D0D[3] = {
    &BuiltInVariable::kVar_pt_io_0D, &BuiltInVariable::kVar_pt0D, &BuiltInVariable::kVar_pt0D};

}  // namespace BuiltInParameters

namespace UnmangledBuiltIns
{

constexpr const UnmangledBuiltIn ARB_texture_rectangle(TExtension::ARB_texture_rectangle);
constexpr const UnmangledBuiltIn EXT_YUV_target(TExtension::EXT_YUV_target);
constexpr const UnmangledBuiltIn EXT_geometry_shader(TExtension::EXT_geometry_shader);
constexpr const UnmangledBuiltIn EXT_shader_texture_lod(TExtension::EXT_shader_texture_lod);
constexpr const UnmangledBuiltIn OES_standard_derivatives(TExtension::OES_standard_derivatives);
constexpr const UnmangledBuiltIn OES_texture_3D(TExtension::OES_texture_3D);
constexpr const UnmangledBuiltIn UNDEFINED(TExtension::UNDEFINED);

}  // namespace UnmangledBuiltIns

// TODO(oetuaho): Would be nice to make this a class instead of a namespace so that we could friend
// this from TFunction. Now symbol constructors taking an id have to be public even though they're
// not supposed to be accessible from outside of here. http://anglebug.com/2390
namespace BuiltInFunction
{

constexpr const TFunction kFunction_radians_0B(
    BuiltInId::radians_Float1,
    BuiltInName::radians,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpRadians,
    true);
constexpr const TFunction kFunction_radians_1B(
    BuiltInId::radians_Float2,
    BuiltInName::radians,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpRadians,
    true);
constexpr const TFunction kFunction_radians_2B(
    BuiltInId::radians_Float3,
    BuiltInName::radians,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B_o_2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpRadians,
    true);
constexpr const TFunction kFunction_radians_3B(
    BuiltInId::radians_Float4,
    BuiltInName::radians,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B0B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpRadians,
    true);
constexpr const TFunction kFunction_degrees_0B(
    BuiltInId::degrees_Float1,
    BuiltInName::degrees,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpDegrees,
    true);
constexpr const TFunction kFunction_degrees_1B(
    BuiltInId::degrees_Float2,
    BuiltInName::degrees,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpDegrees,
    true);
constexpr const TFunction kFunction_degrees_2B(
    BuiltInId::degrees_Float3,
    BuiltInName::degrees,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B_o_2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpDegrees,
    true);
constexpr const TFunction kFunction_degrees_3B(
    BuiltInId::degrees_Float4,
    BuiltInName::degrees,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B0B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpDegrees,
    true);
constexpr const TFunction kFunction_sin_0B(
    BuiltInId::sin_Float1,
    BuiltInName::sin,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpSin,
    true);
constexpr const TFunction kFunction_sin_1B(
    BuiltInId::sin_Float2,
    BuiltInName::sin,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpSin,
    true);
constexpr const TFunction kFunction_sin_2B(
    BuiltInId::sin_Float3,
    BuiltInName::sin,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B_o_2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpSin,
    true);
constexpr const TFunction kFunction_sin_3B(
    BuiltInId::sin_Float4,
    BuiltInName::sin,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B0B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpSin,
    true);
constexpr const TFunction kFunction_cos_0B(
    BuiltInId::cos_Float1,
    BuiltInName::cos,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCos,
    true);
constexpr const TFunction kFunction_cos_1B(
    BuiltInId::cos_Float2,
    BuiltInName::cos,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCos,
    true);
constexpr const TFunction kFunction_cos_2B(
    BuiltInId::cos_Float3,
    BuiltInName::cos,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B_o_2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpCos,
    true);
constexpr const TFunction kFunction_cos_3B(
    BuiltInId::cos_Float4,
    BuiltInName::cos,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B0B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCos,
    true);
constexpr const TFunction kFunction_tan_0B(
    BuiltInId::tan_Float1,
    BuiltInName::tan,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpTan,
    true);
constexpr const TFunction kFunction_tan_1B(
    BuiltInId::tan_Float2,
    BuiltInName::tan,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpTan,
    true);
constexpr const TFunction kFunction_tan_2B(
    BuiltInId::tan_Float3,
    BuiltInName::tan,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B_o_2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpTan,
    true);
constexpr const TFunction kFunction_tan_3B(
    BuiltInId::tan_Float4,
    BuiltInName::tan,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B0B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpTan,
    true);
constexpr const TFunction kFunction_asin_0B(
    BuiltInId::asin_Float1,
    BuiltInName::asin,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAsin,
    true);
constexpr const TFunction kFunction_asin_1B(
    BuiltInId::asin_Float2,
    BuiltInName::asin,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpAsin,
    true);
constexpr const TFunction kFunction_asin_2B(
    BuiltInId::asin_Float3,
    BuiltInName::asin,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B_o_2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpAsin,
    true);
constexpr const TFunction kFunction_asin_3B(
    BuiltInId::asin_Float4,
    BuiltInName::asin,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B0B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpAsin,
    true);
constexpr const TFunction kFunction_acos_0B(
    BuiltInId::acos_Float1,
    BuiltInName::acos,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAcos,
    true);
constexpr const TFunction kFunction_acos_1B(
    BuiltInId::acos_Float2,
    BuiltInName::acos,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpAcos,
    true);
constexpr const TFunction kFunction_acos_2B(
    BuiltInId::acos_Float3,
    BuiltInName::acos,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B_o_2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpAcos,
    true);
constexpr const TFunction kFunction_acos_3B(
    BuiltInId::acos_Float4,
    BuiltInName::acos,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B0B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpAcos,
    true);
constexpr const TFunction kFunction_atan_0B0B(
    BuiltInId::atan_Float1_Float1,
    BuiltInName::atan,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0B1B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAtan,
    true);
constexpr const TFunction kFunction_atan_1B1B(
    BuiltInId::atan_Float2_Float2,
    BuiltInName::atan,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpAtan,
    true);
constexpr const TFunction kFunction_atan_2B2B(
    BuiltInId::atan_Float3_Float3,
    BuiltInName::atan,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpAtan,
    true);
constexpr const TFunction kFunction_atan_3B3B(
    BuiltInId::atan_Float4_Float4,
    BuiltInName::atan,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B3B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpAtan,
    true);
constexpr const TFunction kFunction_atan_0B(
    BuiltInId::atan_Float1,
    BuiltInName::atan,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAtan,
    true);
constexpr const TFunction kFunction_atan_1B(
    BuiltInId::atan_Float2,
    BuiltInName::atan,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpAtan,
    true);
constexpr const TFunction kFunction_atan_2B(
    BuiltInId::atan_Float3,
    BuiltInName::atan,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B_o_2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpAtan,
    true);
constexpr const TFunction kFunction_atan_3B(
    BuiltInId::atan_Float4,
    BuiltInName::atan,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B0B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpAtan,
    true);
constexpr const TFunction kFunction_sinh_0B(
    BuiltInId::sinh_Float1,
    BuiltInName::sinh,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpSinh,
    true);
constexpr const TFunction kFunction_sinh_1B(
    BuiltInId::sinh_Float2,
    BuiltInName::sinh,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpSinh,
    true);
constexpr const TFunction kFunction_sinh_2B(
    BuiltInId::sinh_Float3,
    BuiltInName::sinh,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B_o_2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpSinh,
    true);
constexpr const TFunction kFunction_sinh_3B(
    BuiltInId::sinh_Float4,
    BuiltInName::sinh,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B0B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpSinh,
    true);
constexpr const TFunction kFunction_cosh_0B(
    BuiltInId::cosh_Float1,
    BuiltInName::cosh,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCosh,
    true);
constexpr const TFunction kFunction_cosh_1B(
    BuiltInId::cosh_Float2,
    BuiltInName::cosh,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCosh,
    true);
constexpr const TFunction kFunction_cosh_2B(
    BuiltInId::cosh_Float3,
    BuiltInName::cosh,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B_o_2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpCosh,
    true);
constexpr const TFunction kFunction_cosh_3B(
    BuiltInId::cosh_Float4,
    BuiltInName::cosh,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B0B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCosh,
    true);
constexpr const TFunction kFunction_tanh_0B(
    BuiltInId::tanh_Float1,
    BuiltInName::tanh,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpTanh,
    true);
constexpr const TFunction kFunction_tanh_1B(
    BuiltInId::tanh_Float2,
    BuiltInName::tanh,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpTanh,
    true);
constexpr const TFunction kFunction_tanh_2B(
    BuiltInId::tanh_Float3,
    BuiltInName::tanh,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B_o_2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpTanh,
    true);
constexpr const TFunction kFunction_tanh_3B(
    BuiltInId::tanh_Float4,
    BuiltInName::tanh,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B0B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpTanh,
    true);
constexpr const TFunction kFunction_asinh_0B(
    BuiltInId::asinh_Float1,
    BuiltInName::asinh,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAsinh,
    true);
constexpr const TFunction kFunction_asinh_1B(
    BuiltInId::asinh_Float2,
    BuiltInName::asinh,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpAsinh,
    true);
constexpr const TFunction kFunction_asinh_2B(
    BuiltInId::asinh_Float3,
    BuiltInName::asinh,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B_o_2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpAsinh,
    true);
constexpr const TFunction kFunction_asinh_3B(
    BuiltInId::asinh_Float4,
    BuiltInName::asinh,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B0B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpAsinh,
    true);
constexpr const TFunction kFunction_acosh_0B(
    BuiltInId::acosh_Float1,
    BuiltInName::acosh,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAcosh,
    true);
constexpr const TFunction kFunction_acosh_1B(
    BuiltInId::acosh_Float2,
    BuiltInName::acosh,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpAcosh,
    true);
constexpr const TFunction kFunction_acosh_2B(
    BuiltInId::acosh_Float3,
    BuiltInName::acosh,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B_o_2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpAcosh,
    true);
constexpr const TFunction kFunction_acosh_3B(
    BuiltInId::acosh_Float4,
    BuiltInName::acosh,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B0B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpAcosh,
    true);
constexpr const TFunction kFunction_atanh_0B(
    BuiltInId::atanh_Float1,
    BuiltInName::atanh,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAtanh,
    true);
constexpr const TFunction kFunction_atanh_1B(
    BuiltInId::atanh_Float2,
    BuiltInName::atanh,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpAtanh,
    true);
constexpr const TFunction kFunction_atanh_2B(
    BuiltInId::atanh_Float3,
    BuiltInName::atanh,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B_o_2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpAtanh,
    true);
constexpr const TFunction kFunction_atanh_3B(
    BuiltInId::atanh_Float4,
    BuiltInName::atanh,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B0B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpAtanh,
    true);
constexpr const TFunction kFunction_pow_0B0B(
    BuiltInId::pow_Float1_Float1,
    BuiltInName::pow,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0B1B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpPow,
    true);
constexpr const TFunction kFunction_pow_1B1B(
    BuiltInId::pow_Float2_Float2,
    BuiltInName::pow,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpPow,
    true);
constexpr const TFunction kFunction_pow_2B2B(
    BuiltInId::pow_Float3_Float3,
    BuiltInName::pow,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpPow,
    true);
constexpr const TFunction kFunction_pow_3B3B(
    BuiltInId::pow_Float4_Float4,
    BuiltInName::pow,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B3B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpPow,
    true);
constexpr const TFunction kFunction_exp_0B(
    BuiltInId::exp_Float1,
    BuiltInName::exp,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpExp,
    true);
constexpr const TFunction kFunction_exp_1B(
    BuiltInId::exp_Float2,
    BuiltInName::exp,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpExp,
    true);
constexpr const TFunction kFunction_exp_2B(
    BuiltInId::exp_Float3,
    BuiltInName::exp,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B_o_2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpExp,
    true);
constexpr const TFunction kFunction_exp_3B(
    BuiltInId::exp_Float4,
    BuiltInName::exp,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B0B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpExp,
    true);
constexpr const TFunction kFunction_log_0B(
    BuiltInId::log_Float1,
    BuiltInName::log,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpLog,
    true);
constexpr const TFunction kFunction_log_1B(
    BuiltInId::log_Float2,
    BuiltInName::log,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpLog,
    true);
constexpr const TFunction kFunction_log_2B(
    BuiltInId::log_Float3,
    BuiltInName::log,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B_o_2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpLog,
    true);
constexpr const TFunction kFunction_log_3B(
    BuiltInId::log_Float4,
    BuiltInName::log,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B0B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpLog,
    true);
constexpr const TFunction kFunction_exp2_0B(
    BuiltInId::exp2_Float1,
    BuiltInName::exp2,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpExp2,
    true);
constexpr const TFunction kFunction_exp2_1B(
    BuiltInId::exp2_Float2,
    BuiltInName::exp2,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpExp2,
    true);
constexpr const TFunction kFunction_exp2_2B(
    BuiltInId::exp2_Float3,
    BuiltInName::exp2,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B_o_2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpExp2,
    true);
constexpr const TFunction kFunction_exp2_3B(
    BuiltInId::exp2_Float4,
    BuiltInName::exp2,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B0B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpExp2,
    true);
constexpr const TFunction kFunction_log2_0B(
    BuiltInId::log2_Float1,
    BuiltInName::log2,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpLog2,
    true);
constexpr const TFunction kFunction_log2_1B(
    BuiltInId::log2_Float2,
    BuiltInName::log2,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpLog2,
    true);
constexpr const TFunction kFunction_log2_2B(
    BuiltInId::log2_Float3,
    BuiltInName::log2,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B_o_2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpLog2,
    true);
constexpr const TFunction kFunction_log2_3B(
    BuiltInId::log2_Float4,
    BuiltInName::log2,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B0B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpLog2,
    true);
constexpr const TFunction kFunction_sqrt_0B(
    BuiltInId::sqrt_Float1,
    BuiltInName::sqrt,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpSqrt,
    true);
constexpr const TFunction kFunction_sqrt_1B(
    BuiltInId::sqrt_Float2,
    BuiltInName::sqrt,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpSqrt,
    true);
constexpr const TFunction kFunction_sqrt_2B(
    BuiltInId::sqrt_Float3,
    BuiltInName::sqrt,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B_o_2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpSqrt,
    true);
constexpr const TFunction kFunction_sqrt_3B(
    BuiltInId::sqrt_Float4,
    BuiltInName::sqrt,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B0B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpSqrt,
    true);
constexpr const TFunction kFunction_inversesqrt_0B(
    BuiltInId::inversesqrt_Float1,
    BuiltInName::inversesqrt,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpInversesqrt,
    true);
constexpr const TFunction kFunction_inversesqrt_1B(
    BuiltInId::inversesqrt_Float2,
    BuiltInName::inversesqrt,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpInversesqrt,
    true);
constexpr const TFunction kFunction_inversesqrt_2B(
    BuiltInId::inversesqrt_Float3,
    BuiltInName::inversesqrt,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B_o_2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpInversesqrt,
    true);
constexpr const TFunction kFunction_inversesqrt_3B(
    BuiltInId::inversesqrt_Float4,
    BuiltInName::inversesqrt,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B0B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpInversesqrt,
    true);
constexpr const TFunction kFunction_abs_0B(
    BuiltInId::abs_Float1,
    BuiltInName::abs,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAbs,
    true);
constexpr const TFunction kFunction_abs_1B(
    BuiltInId::abs_Float2,
    BuiltInName::abs,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpAbs,
    true);
constexpr const TFunction kFunction_abs_2B(
    BuiltInId::abs_Float3,
    BuiltInName::abs,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B_o_2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpAbs,
    true);
constexpr const TFunction kFunction_abs_3B(
    BuiltInId::abs_Float4,
    BuiltInName::abs,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B0B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpAbs,
    true);
constexpr const TFunction kFunction_abs_0C(BuiltInId::abs_Int1,
                                           BuiltInName::abs,
                                           TExtension::UNDEFINED,
                                           BuiltInParameters::p0C0C_o_0C_o_0C,
                                           1,
                                           StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
                                           EOpAbs,
                                           true);
constexpr const TFunction kFunction_abs_1C(BuiltInId::abs_Int2,
                                           BuiltInName::abs,
                                           TExtension::UNDEFINED,
                                           BuiltInParameters::p1C1C_o_1C_o_1C,
                                           1,
                                           StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
                                           EOpAbs,
                                           true);
constexpr const TFunction kFunction_abs_2C(BuiltInId::abs_Int3,
                                           BuiltInName::abs,
                                           TExtension::UNDEFINED,
                                           BuiltInParameters::p2C2C0C0C,
                                           1,
                                           StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
                                           EOpAbs,
                                           true);
constexpr const TFunction kFunction_abs_3C(BuiltInId::abs_Int4,
                                           BuiltInName::abs,
                                           TExtension::UNDEFINED,
                                           BuiltInParameters::p3C0C0C,
                                           1,
                                           StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
                                           EOpAbs,
                                           true);
constexpr const TFunction kFunction_sign_0B(
    BuiltInId::sign_Float1,
    BuiltInName::sign,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpSign,
    true);
constexpr const TFunction kFunction_sign_1B(
    BuiltInId::sign_Float2,
    BuiltInName::sign,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpSign,
    true);
constexpr const TFunction kFunction_sign_2B(
    BuiltInId::sign_Float3,
    BuiltInName::sign,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B_o_2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpSign,
    true);
constexpr const TFunction kFunction_sign_3B(
    BuiltInId::sign_Float4,
    BuiltInName::sign,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B0B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpSign,
    true);
constexpr const TFunction kFunction_sign_0C(
    BuiltInId::sign_Int1,
    BuiltInName::sign,
    TExtension::UNDEFINED,
    BuiltInParameters::p0C0C_o_0C_o_0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpSign,
    true);
constexpr const TFunction kFunction_sign_1C(
    BuiltInId::sign_Int2,
    BuiltInName::sign,
    TExtension::UNDEFINED,
    BuiltInParameters::p1C1C_o_1C_o_1C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpSign,
    true);
constexpr const TFunction kFunction_sign_2C(
    BuiltInId::sign_Int3,
    BuiltInName::sign,
    TExtension::UNDEFINED,
    BuiltInParameters::p2C2C0C0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpSign,
    true);
constexpr const TFunction kFunction_sign_3C(
    BuiltInId::sign_Int4,
    BuiltInName::sign,
    TExtension::UNDEFINED,
    BuiltInParameters::p3C0C0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpSign,
    true);
constexpr const TFunction kFunction_floor_0B(
    BuiltInId::floor_Float1,
    BuiltInName::floor,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpFloor,
    true);
constexpr const TFunction kFunction_floor_1B(
    BuiltInId::floor_Float2,
    BuiltInName::floor,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpFloor,
    true);
constexpr const TFunction kFunction_floor_2B(
    BuiltInId::floor_Float3,
    BuiltInName::floor,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B_o_2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpFloor,
    true);
constexpr const TFunction kFunction_floor_3B(
    BuiltInId::floor_Float4,
    BuiltInName::floor,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B0B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpFloor,
    true);
constexpr const TFunction kFunction_trunc_0B(
    BuiltInId::trunc_Float1,
    BuiltInName::trunc,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpTrunc,
    true);
constexpr const TFunction kFunction_trunc_1B(
    BuiltInId::trunc_Float2,
    BuiltInName::trunc,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpTrunc,
    true);
constexpr const TFunction kFunction_trunc_2B(
    BuiltInId::trunc_Float3,
    BuiltInName::trunc,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B_o_2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpTrunc,
    true);
constexpr const TFunction kFunction_trunc_3B(
    BuiltInId::trunc_Float4,
    BuiltInName::trunc,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B0B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpTrunc,
    true);
constexpr const TFunction kFunction_round_0B(
    BuiltInId::round_Float1,
    BuiltInName::round,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpRound,
    true);
constexpr const TFunction kFunction_round_1B(
    BuiltInId::round_Float2,
    BuiltInName::round,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpRound,
    true);
constexpr const TFunction kFunction_round_2B(
    BuiltInId::round_Float3,
    BuiltInName::round,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B_o_2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpRound,
    true);
constexpr const TFunction kFunction_round_3B(
    BuiltInId::round_Float4,
    BuiltInName::round,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B0B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpRound,
    true);
constexpr const TFunction kFunction_roundEven_0B(
    BuiltInId::roundEven_Float1,
    BuiltInName::roundEven,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpRoundEven,
    true);
constexpr const TFunction kFunction_roundEven_1B(
    BuiltInId::roundEven_Float2,
    BuiltInName::roundEven,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpRoundEven,
    true);
constexpr const TFunction kFunction_roundEven_2B(
    BuiltInId::roundEven_Float3,
    BuiltInName::roundEven,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B_o_2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpRoundEven,
    true);
constexpr const TFunction kFunction_roundEven_3B(
    BuiltInId::roundEven_Float4,
    BuiltInName::roundEven,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B0B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpRoundEven,
    true);
constexpr const TFunction kFunction_ceil_0B(
    BuiltInId::ceil_Float1,
    BuiltInName::ceil,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCeil,
    true);
constexpr const TFunction kFunction_ceil_1B(
    BuiltInId::ceil_Float2,
    BuiltInName::ceil,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCeil,
    true);
constexpr const TFunction kFunction_ceil_2B(
    BuiltInId::ceil_Float3,
    BuiltInName::ceil,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B_o_2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpCeil,
    true);
constexpr const TFunction kFunction_ceil_3B(
    BuiltInId::ceil_Float4,
    BuiltInName::ceil,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B0B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCeil,
    true);
constexpr const TFunction kFunction_fract_0B(
    BuiltInId::fract_Float1,
    BuiltInName::fract,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpFract,
    true);
constexpr const TFunction kFunction_fract_1B(
    BuiltInId::fract_Float2,
    BuiltInName::fract,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpFract,
    true);
constexpr const TFunction kFunction_fract_2B(
    BuiltInId::fract_Float3,
    BuiltInName::fract,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B_o_2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpFract,
    true);
constexpr const TFunction kFunction_fract_3B(
    BuiltInId::fract_Float4,
    BuiltInName::fract,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B0B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpFract,
    true);
constexpr const TFunction kFunction_mod_0B0B(
    BuiltInId::mod_Float1_Float1,
    BuiltInName::mod,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0B1B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpMod,
    true);
constexpr const TFunction kFunction_mod_1B0B(
    BuiltInId::mod_Float2_Float1,
    BuiltInName::mod,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B0B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpMod,
    true);
constexpr const TFunction kFunction_mod_2B0B(
    BuiltInId::mod_Float3_Float1,
    BuiltInName::mod,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B0B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpMod,
    true);
constexpr const TFunction kFunction_mod_3B0B(
    BuiltInId::mod_Float4_Float1,
    BuiltInName::mod,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B0B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpMod,
    true);
constexpr const TFunction kFunction_mod_1B1B(
    BuiltInId::mod_Float2_Float2,
    BuiltInName::mod,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpMod,
    true);
constexpr const TFunction kFunction_mod_2B2B(
    BuiltInId::mod_Float3_Float3,
    BuiltInName::mod,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpMod,
    true);
constexpr const TFunction kFunction_mod_3B3B(
    BuiltInId::mod_Float4_Float4,
    BuiltInName::mod,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B3B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpMod,
    true);
constexpr const TFunction kFunction_min_0B0B(
    BuiltInId::min_Float1_Float1,
    BuiltInName::min,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0B1B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpMin,
    true);
constexpr const TFunction kFunction_min_1B0B(
    BuiltInId::min_Float2_Float1,
    BuiltInName::min,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B0B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpMin,
    true);
constexpr const TFunction kFunction_min_2B0B(
    BuiltInId::min_Float3_Float1,
    BuiltInName::min,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B0B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpMin,
    true);
constexpr const TFunction kFunction_min_3B0B(
    BuiltInId::min_Float4_Float1,
    BuiltInName::min,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B0B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpMin,
    true);
constexpr const TFunction kFunction_min_1B1B(
    BuiltInId::min_Float2_Float2,
    BuiltInName::min,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpMin,
    true);
constexpr const TFunction kFunction_min_2B2B(
    BuiltInId::min_Float3_Float3,
    BuiltInName::min,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpMin,
    true);
constexpr const TFunction kFunction_min_3B3B(
    BuiltInId::min_Float4_Float4,
    BuiltInName::min,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B3B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpMin,
    true);
constexpr const TFunction kFunction_min_0C0C(
    BuiltInId::min_Int1_Int1,
    BuiltInName::min,
    TExtension::UNDEFINED,
    BuiltInParameters::p0C0C_o_0C_o_0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpMin,
    true);
constexpr const TFunction kFunction_min_1C1C(
    BuiltInId::min_Int2_Int2,
    BuiltInName::min,
    TExtension::UNDEFINED,
    BuiltInParameters::p1C1C_o_1C_o_1C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpMin,
    true);
constexpr const TFunction kFunction_min_2C2C(
    BuiltInId::min_Int3_Int3,
    BuiltInName::min,
    TExtension::UNDEFINED,
    BuiltInParameters::p2C2C0C0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpMin,
    true);
constexpr const TFunction kFunction_min_3C3C(
    BuiltInId::min_Int4_Int4,
    BuiltInName::min,
    TExtension::UNDEFINED,
    BuiltInParameters::p3C3C3C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpMin,
    true);
constexpr const TFunction kFunction_min_1C0C(
    BuiltInId::min_Int2_Int1,
    BuiltInName::min,
    TExtension::UNDEFINED,
    BuiltInParameters::p1C0C0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpMin,
    true);
constexpr const TFunction kFunction_min_2C0C(
    BuiltInId::min_Int3_Int1,
    BuiltInName::min,
    TExtension::UNDEFINED,
    BuiltInParameters::p2C0C0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpMin,
    true);
constexpr const TFunction kFunction_min_3C0C(
    BuiltInId::min_Int4_Int1,
    BuiltInName::min,
    TExtension::UNDEFINED,
    BuiltInParameters::p3C0C0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpMin,
    true);
constexpr const TFunction kFunction_min_0D0D(
    BuiltInId::min_UInt1_UInt1,
    BuiltInName::min,
    TExtension::UNDEFINED,
    BuiltInParameters::p0D0D0C0C,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpMin,
    true);
constexpr const TFunction kFunction_min_1D1D(
    BuiltInId::min_UInt2_UInt2,
    BuiltInName::min,
    TExtension::UNDEFINED,
    BuiltInParameters::p1D1D0C0C,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpMin,
    true);
constexpr const TFunction kFunction_min_2D2D(
    BuiltInId::min_UInt3_UInt3,
    BuiltInName::min,
    TExtension::UNDEFINED,
    BuiltInParameters::p2D2D0C0C,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpMin,
    true);
constexpr const TFunction kFunction_min_3D3D(
    BuiltInId::min_UInt4_UInt4,
    BuiltInName::min,
    TExtension::UNDEFINED,
    BuiltInParameters::p3D3D0C0C,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpMin,
    true);
constexpr const TFunction kFunction_min_1D0D(
    BuiltInId::min_UInt2_UInt1,
    BuiltInName::min,
    TExtension::UNDEFINED,
    BuiltInParameters::p1D0D0D,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpMin,
    true);
constexpr const TFunction kFunction_min_2D0D(
    BuiltInId::min_UInt3_UInt1,
    BuiltInName::min,
    TExtension::UNDEFINED,
    BuiltInParameters::p2D0D0D,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpMin,
    true);
constexpr const TFunction kFunction_min_3D0D(
    BuiltInId::min_UInt4_UInt1,
    BuiltInName::min,
    TExtension::UNDEFINED,
    BuiltInParameters::p3D0D0D,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpMin,
    true);
constexpr const TFunction kFunction_max_0B0B(
    BuiltInId::max_Float1_Float1,
    BuiltInName::max,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0B1B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpMax,
    true);
constexpr const TFunction kFunction_max_1B0B(
    BuiltInId::max_Float2_Float1,
    BuiltInName::max,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B0B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpMax,
    true);
constexpr const TFunction kFunction_max_2B0B(
    BuiltInId::max_Float3_Float1,
    BuiltInName::max,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B0B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpMax,
    true);
constexpr const TFunction kFunction_max_3B0B(
    BuiltInId::max_Float4_Float1,
    BuiltInName::max,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B0B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpMax,
    true);
constexpr const TFunction kFunction_max_1B1B(
    BuiltInId::max_Float2_Float2,
    BuiltInName::max,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpMax,
    true);
constexpr const TFunction kFunction_max_2B2B(
    BuiltInId::max_Float3_Float3,
    BuiltInName::max,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpMax,
    true);
constexpr const TFunction kFunction_max_3B3B(
    BuiltInId::max_Float4_Float4,
    BuiltInName::max,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B3B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpMax,
    true);
constexpr const TFunction kFunction_max_0C0C(
    BuiltInId::max_Int1_Int1,
    BuiltInName::max,
    TExtension::UNDEFINED,
    BuiltInParameters::p0C0C_o_0C_o_0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpMax,
    true);
constexpr const TFunction kFunction_max_1C1C(
    BuiltInId::max_Int2_Int2,
    BuiltInName::max,
    TExtension::UNDEFINED,
    BuiltInParameters::p1C1C_o_1C_o_1C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpMax,
    true);
constexpr const TFunction kFunction_max_2C2C(
    BuiltInId::max_Int3_Int3,
    BuiltInName::max,
    TExtension::UNDEFINED,
    BuiltInParameters::p2C2C0C0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpMax,
    true);
constexpr const TFunction kFunction_max_3C3C(
    BuiltInId::max_Int4_Int4,
    BuiltInName::max,
    TExtension::UNDEFINED,
    BuiltInParameters::p3C3C3C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpMax,
    true);
constexpr const TFunction kFunction_max_1C0C(
    BuiltInId::max_Int2_Int1,
    BuiltInName::max,
    TExtension::UNDEFINED,
    BuiltInParameters::p1C0C0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpMax,
    true);
constexpr const TFunction kFunction_max_2C0C(
    BuiltInId::max_Int3_Int1,
    BuiltInName::max,
    TExtension::UNDEFINED,
    BuiltInParameters::p2C0C0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpMax,
    true);
constexpr const TFunction kFunction_max_3C0C(
    BuiltInId::max_Int4_Int1,
    BuiltInName::max,
    TExtension::UNDEFINED,
    BuiltInParameters::p3C0C0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpMax,
    true);
constexpr const TFunction kFunction_max_0D0D(
    BuiltInId::max_UInt1_UInt1,
    BuiltInName::max,
    TExtension::UNDEFINED,
    BuiltInParameters::p0D0D0C0C,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpMax,
    true);
constexpr const TFunction kFunction_max_1D1D(
    BuiltInId::max_UInt2_UInt2,
    BuiltInName::max,
    TExtension::UNDEFINED,
    BuiltInParameters::p1D1D0C0C,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpMax,
    true);
constexpr const TFunction kFunction_max_2D2D(
    BuiltInId::max_UInt3_UInt3,
    BuiltInName::max,
    TExtension::UNDEFINED,
    BuiltInParameters::p2D2D0C0C,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpMax,
    true);
constexpr const TFunction kFunction_max_3D3D(
    BuiltInId::max_UInt4_UInt4,
    BuiltInName::max,
    TExtension::UNDEFINED,
    BuiltInParameters::p3D3D0C0C,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpMax,
    true);
constexpr const TFunction kFunction_max_1D0D(
    BuiltInId::max_UInt2_UInt1,
    BuiltInName::max,
    TExtension::UNDEFINED,
    BuiltInParameters::p1D0D0D,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpMax,
    true);
constexpr const TFunction kFunction_max_2D0D(
    BuiltInId::max_UInt3_UInt1,
    BuiltInName::max,
    TExtension::UNDEFINED,
    BuiltInParameters::p2D0D0D,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpMax,
    true);
constexpr const TFunction kFunction_max_3D0D(
    BuiltInId::max_UInt4_UInt1,
    BuiltInName::max,
    TExtension::UNDEFINED,
    BuiltInParameters::p3D0D0D,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpMax,
    true);
constexpr const TFunction kFunction_clamp_0B0B0B(
    BuiltInId::clamp_Float1_Float1_Float1,
    BuiltInName::clamp,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0B0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpClamp,
    true);
constexpr const TFunction kFunction_clamp_1B0B0B(
    BuiltInId::clamp_Float2_Float1_Float1,
    BuiltInName::clamp,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B0B0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpClamp,
    true);
constexpr const TFunction kFunction_clamp_2B0B0B(
    BuiltInId::clamp_Float3_Float1_Float1,
    BuiltInName::clamp,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B0B0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpClamp,
    true);
constexpr const TFunction kFunction_clamp_3B0B0B(
    BuiltInId::clamp_Float4_Float1_Float1,
    BuiltInName::clamp,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B0B0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpClamp,
    true);
constexpr const TFunction kFunction_clamp_1B1B1B(
    BuiltInId::clamp_Float2_Float2_Float2,
    BuiltInName::clamp,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B1B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpClamp,
    true);
constexpr const TFunction kFunction_clamp_2B2B2B(
    BuiltInId::clamp_Float3_Float3_Float3,
    BuiltInName::clamp,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2B2B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpClamp,
    true);
constexpr const TFunction kFunction_clamp_3B3B3B(
    BuiltInId::clamp_Float4_Float4_Float4,
    BuiltInName::clamp,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B3B3B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpClamp,
    true);
constexpr const TFunction kFunction_clamp_0C0C0C(
    BuiltInId::clamp_Int1_Int1_Int1,
    BuiltInName::clamp,
    TExtension::UNDEFINED,
    BuiltInParameters::p0C0C0C0C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpClamp,
    true);
constexpr const TFunction kFunction_clamp_1C0C0C(
    BuiltInId::clamp_Int2_Int1_Int1,
    BuiltInName::clamp,
    TExtension::UNDEFINED,
    BuiltInParameters::p1C0C0C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpClamp,
    true);
constexpr const TFunction kFunction_clamp_2C0C0C(
    BuiltInId::clamp_Int3_Int1_Int1,
    BuiltInName::clamp,
    TExtension::UNDEFINED,
    BuiltInParameters::p2C0C0C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpClamp,
    true);
constexpr const TFunction kFunction_clamp_3C0C0C(
    BuiltInId::clamp_Int4_Int1_Int1,
    BuiltInName::clamp,
    TExtension::UNDEFINED,
    BuiltInParameters::p3C0C0C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpClamp,
    true);
constexpr const TFunction kFunction_clamp_1C1C1C(
    BuiltInId::clamp_Int2_Int2_Int2,
    BuiltInName::clamp,
    TExtension::UNDEFINED,
    BuiltInParameters::p1C1C1C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpClamp,
    true);
constexpr const TFunction kFunction_clamp_2C2C2C(
    BuiltInId::clamp_Int3_Int3_Int3,
    BuiltInName::clamp,
    TExtension::UNDEFINED,
    BuiltInParameters::p2C2C2C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpClamp,
    true);
constexpr const TFunction kFunction_clamp_3C3C3C(
    BuiltInId::clamp_Int4_Int4_Int4,
    BuiltInName::clamp,
    TExtension::UNDEFINED,
    BuiltInParameters::p3C3C3C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpClamp,
    true);
constexpr const TFunction kFunction_clamp_0D0D0D(
    BuiltInId::clamp_UInt1_UInt1_UInt1,
    BuiltInName::clamp,
    TExtension::UNDEFINED,
    BuiltInParameters::p0D0D0D,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpClamp,
    true);
constexpr const TFunction kFunction_clamp_1D0D0D(
    BuiltInId::clamp_UInt2_UInt1_UInt1,
    BuiltInName::clamp,
    TExtension::UNDEFINED,
    BuiltInParameters::p1D0D0D,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpClamp,
    true);
constexpr const TFunction kFunction_clamp_2D0D0D(
    BuiltInId::clamp_UInt3_UInt1_UInt1,
    BuiltInName::clamp,
    TExtension::UNDEFINED,
    BuiltInParameters::p2D0D0D,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpClamp,
    true);
constexpr const TFunction kFunction_clamp_3D0D0D(
    BuiltInId::clamp_UInt4_UInt1_UInt1,
    BuiltInName::clamp,
    TExtension::UNDEFINED,
    BuiltInParameters::p3D0D0D,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpClamp,
    true);
constexpr const TFunction kFunction_clamp_1D1D1D(
    BuiltInId::clamp_UInt2_UInt2_UInt2,
    BuiltInName::clamp,
    TExtension::UNDEFINED,
    BuiltInParameters::p1D1D1D,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpClamp,
    true);
constexpr const TFunction kFunction_clamp_2D2D2D(
    BuiltInId::clamp_UInt3_UInt3_UInt3,
    BuiltInName::clamp,
    TExtension::UNDEFINED,
    BuiltInParameters::p2D2D2D,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpClamp,
    true);
constexpr const TFunction kFunction_clamp_3D3D3D(
    BuiltInId::clamp_UInt4_UInt4_UInt4,
    BuiltInName::clamp,
    TExtension::UNDEFINED,
    BuiltInParameters::p3D3D3D,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpClamp,
    true);
constexpr const TFunction kFunction_mix_0B0B0B(
    BuiltInId::mix_Float1_Float1_Float1,
    BuiltInName::mix,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0B0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpMix,
    true);
constexpr const TFunction kFunction_mix_1B1B0B(
    BuiltInId::mix_Float2_Float2_Float1,
    BuiltInName::mix,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpMix,
    true);
constexpr const TFunction kFunction_mix_2B2B0B(
    BuiltInId::mix_Float3_Float3_Float1,
    BuiltInName::mix,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2B0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpMix,
    true);
constexpr const TFunction kFunction_mix_3B3B0B(
    BuiltInId::mix_Float4_Float4_Float1,
    BuiltInName::mix,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B3B0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpMix,
    true);
constexpr const TFunction kFunction_mix_1B1B1B(
    BuiltInId::mix_Float2_Float2_Float2,
    BuiltInName::mix,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B1B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpMix,
    true);
constexpr const TFunction kFunction_mix_2B2B2B(
    BuiltInId::mix_Float3_Float3_Float3,
    BuiltInName::mix,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2B2B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpMix,
    true);
constexpr const TFunction kFunction_mix_3B3B3B(
    BuiltInId::mix_Float4_Float4_Float4,
    BuiltInName::mix,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B3B3B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpMix,
    true);
constexpr const TFunction kFunction_mix_0B0B0E(
    BuiltInId::mix_Float1_Float1_Bool1,
    BuiltInName::mix,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0B0E,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpMix,
    true);
constexpr const TFunction kFunction_mix_1B1B1E(
    BuiltInId::mix_Float2_Float2_Bool2,
    BuiltInName::mix,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B1E,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpMix,
    true);
constexpr const TFunction kFunction_mix_2B2B2E(
    BuiltInId::mix_Float3_Float3_Bool3,
    BuiltInName::mix,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2B2E,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpMix,
    true);
constexpr const TFunction kFunction_mix_3B3B3E(
    BuiltInId::mix_Float4_Float4_Bool4,
    BuiltInName::mix,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B3B3E,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpMix,
    true);
constexpr const TFunction kFunction_step_0B0B(
    BuiltInId::step_Float1_Float1,
    BuiltInName::step,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0B1B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpStep,
    true);
constexpr const TFunction kFunction_step_1B1B(
    BuiltInId::step_Float2_Float2,
    BuiltInName::step,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpStep,
    true);
constexpr const TFunction kFunction_step_2B2B(
    BuiltInId::step_Float3_Float3,
    BuiltInName::step,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpStep,
    true);
constexpr const TFunction kFunction_step_3B3B(
    BuiltInId::step_Float4_Float4,
    BuiltInName::step,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B3B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpStep,
    true);
constexpr const TFunction kFunction_step_0B1B(
    BuiltInId::step_Float1_Float2,
    BuiltInName::step,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B1B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpStep,
    true);
constexpr const TFunction kFunction_step_0B2B(
    BuiltInId::step_Float1_Float3,
    BuiltInName::step,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B2B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpStep,
    true);
constexpr const TFunction kFunction_step_0B3B(
    BuiltInId::step_Float1_Float4,
    BuiltInName::step,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B3B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpStep,
    true);
constexpr const TFunction kFunction_smoothstep_0B0B0B(
    BuiltInId::smoothstep_Float1_Float1_Float1,
    BuiltInName::smoothstep,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0B0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpSmoothstep,
    true);
constexpr const TFunction kFunction_smoothstep_1B1B1B(
    BuiltInId::smoothstep_Float2_Float2_Float2,
    BuiltInName::smoothstep,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B1B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpSmoothstep,
    true);
constexpr const TFunction kFunction_smoothstep_2B2B2B(
    BuiltInId::smoothstep_Float3_Float3_Float3,
    BuiltInName::smoothstep,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2B2B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpSmoothstep,
    true);
constexpr const TFunction kFunction_smoothstep_3B3B3B(
    BuiltInId::smoothstep_Float4_Float4_Float4,
    BuiltInName::smoothstep,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B3B3B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpSmoothstep,
    true);
constexpr const TFunction kFunction_smoothstep_0B0B1B(
    BuiltInId::smoothstep_Float1_Float1_Float2,
    BuiltInName::smoothstep,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0B1B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpSmoothstep,
    true);
constexpr const TFunction kFunction_smoothstep_0B0B2B(
    BuiltInId::smoothstep_Float1_Float1_Float3,
    BuiltInName::smoothstep,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0B2B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpSmoothstep,
    true);
constexpr const TFunction kFunction_smoothstep_0B0B3B(
    BuiltInId::smoothstep_Float1_Float1_Float4,
    BuiltInName::smoothstep,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0B3B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpSmoothstep,
    true);
constexpr const TFunction kFunction_modf_0B0B(
    BuiltInId::modf_Float1_Float1,
    BuiltInName::modf,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B_o_0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpModf,
    false);
constexpr const TFunction kFunction_modf_1B1B(
    BuiltInId::modf_Float2_Float2,
    BuiltInName::modf,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B_o_1B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpModf,
    false);
constexpr const TFunction kFunction_modf_2B2B(
    BuiltInId::modf_Float3_Float3,
    BuiltInName::modf,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B_o_2B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpModf,
    false);
constexpr const TFunction kFunction_modf_3B3B(
    BuiltInId::modf_Float4_Float4,
    BuiltInName::modf,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B_o_3B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpModf,
    false);
constexpr const TFunction kFunction_isnan_0B(
    BuiltInId::isnan_Float1,
    BuiltInName::isnan,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpIsnan,
    true);
constexpr const TFunction kFunction_isnan_1B(
    BuiltInId::isnan_Float2,
    BuiltInName::isnan,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpIsnan,
    true);
constexpr const TFunction kFunction_isnan_2B(
    BuiltInId::isnan_Float3,
    BuiltInName::isnan,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B_o_2C,
    1,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpIsnan,
    true);
constexpr const TFunction kFunction_isnan_3B(
    BuiltInId::isnan_Float4,
    BuiltInName::isnan,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B0B0B,
    1,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpIsnan,
    true);
constexpr const TFunction kFunction_isinf_0B(
    BuiltInId::isinf_Float1,
    BuiltInName::isinf,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpIsinf,
    true);
constexpr const TFunction kFunction_isinf_1B(
    BuiltInId::isinf_Float2,
    BuiltInName::isinf,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpIsinf,
    true);
constexpr const TFunction kFunction_isinf_2B(
    BuiltInId::isinf_Float3,
    BuiltInName::isinf,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B_o_2C,
    1,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpIsinf,
    true);
constexpr const TFunction kFunction_isinf_3B(
    BuiltInId::isinf_Float4,
    BuiltInName::isinf,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B0B0B,
    1,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpIsinf,
    true);
constexpr const TFunction kFunction_floatBitsToInt_0B(
    BuiltInId::floatBitsToInt_Float1,
    BuiltInName::floatBitsToInt,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpFloatBitsToInt,
    true);
constexpr const TFunction kFunction_floatBitsToInt_1B(
    BuiltInId::floatBitsToInt_Float2,
    BuiltInName::floatBitsToInt,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpFloatBitsToInt,
    true);
constexpr const TFunction kFunction_floatBitsToInt_2B(
    BuiltInId::floatBitsToInt_Float3,
    BuiltInName::floatBitsToInt,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B_o_2C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpFloatBitsToInt,
    true);
constexpr const TFunction kFunction_floatBitsToInt_3B(
    BuiltInId::floatBitsToInt_Float4,
    BuiltInName::floatBitsToInt,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B0B0B,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpFloatBitsToInt,
    true);
constexpr const TFunction kFunction_floatBitsToUint_0B(
    BuiltInId::floatBitsToUint_Float1,
    BuiltInName::floatBitsToUint,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpFloatBitsToUint,
    true);
constexpr const TFunction kFunction_floatBitsToUint_1B(
    BuiltInId::floatBitsToUint_Float2,
    BuiltInName::floatBitsToUint,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpFloatBitsToUint,
    true);
constexpr const TFunction kFunction_floatBitsToUint_2B(
    BuiltInId::floatBitsToUint_Float3,
    BuiltInName::floatBitsToUint,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B_o_2C,
    1,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpFloatBitsToUint,
    true);
constexpr const TFunction kFunction_floatBitsToUint_3B(
    BuiltInId::floatBitsToUint_Float4,
    BuiltInName::floatBitsToUint,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B0B0B,
    1,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpFloatBitsToUint,
    true);
constexpr const TFunction kFunction_intBitsToFloat_0C(
    BuiltInId::intBitsToFloat_Int1,
    BuiltInName::intBitsToFloat,
    TExtension::UNDEFINED,
    BuiltInParameters::p0C0C_o_0C_o_0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpIntBitsToFloat,
    true);
constexpr const TFunction kFunction_intBitsToFloat_1C(
    BuiltInId::intBitsToFloat_Int2,
    BuiltInName::intBitsToFloat,
    TExtension::UNDEFINED,
    BuiltInParameters::p1C1C_o_1C_o_1C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpIntBitsToFloat,
    true);
constexpr const TFunction kFunction_intBitsToFloat_2C(
    BuiltInId::intBitsToFloat_Int3,
    BuiltInName::intBitsToFloat,
    TExtension::UNDEFINED,
    BuiltInParameters::p2C2C0C0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpIntBitsToFloat,
    true);
constexpr const TFunction kFunction_intBitsToFloat_3C(
    BuiltInId::intBitsToFloat_Int4,
    BuiltInName::intBitsToFloat,
    TExtension::UNDEFINED,
    BuiltInParameters::p3C0C0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpIntBitsToFloat,
    true);
constexpr const TFunction kFunction_uintBitsToFloat_0D(
    BuiltInId::uintBitsToFloat_UInt1,
    BuiltInName::uintBitsToFloat,
    TExtension::UNDEFINED,
    BuiltInParameters::p0D0C0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpUintBitsToFloat,
    true);
constexpr const TFunction kFunction_uintBitsToFloat_1D(
    BuiltInId::uintBitsToFloat_UInt2,
    BuiltInName::uintBitsToFloat,
    TExtension::UNDEFINED,
    BuiltInParameters::p1D0C0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpUintBitsToFloat,
    true);
constexpr const TFunction kFunction_uintBitsToFloat_2D(
    BuiltInId::uintBitsToFloat_UInt3,
    BuiltInName::uintBitsToFloat,
    TExtension::UNDEFINED,
    BuiltInParameters::p2D2D0C0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpUintBitsToFloat,
    true);
constexpr const TFunction kFunction_uintBitsToFloat_3D(
    BuiltInId::uintBitsToFloat_UInt4,
    BuiltInName::uintBitsToFloat,
    TExtension::UNDEFINED,
    BuiltInParameters::p3D0C0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpUintBitsToFloat,
    true);
constexpr const TFunction kFunction_frexp_0B0C(
    BuiltInId::frexp_Float1_Int1,
    BuiltInName::frexp,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B_o_0C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpFrexp,
    false);
constexpr const TFunction kFunction_frexp_1B1C(
    BuiltInId::frexp_Float2_Int2,
    BuiltInName::frexp,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B_o_1C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpFrexp,
    false);
constexpr const TFunction kFunction_frexp_2B2C(
    BuiltInId::frexp_Float3_Int3,
    BuiltInName::frexp,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B_o_2C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpFrexp,
    false);
constexpr const TFunction kFunction_frexp_3B3C(
    BuiltInId::frexp_Float4_Int4,
    BuiltInName::frexp,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B_o_3C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpFrexp,
    false);
constexpr const TFunction kFunction_ldexp_0B0C(
    BuiltInId::ldexp_Float1_Int1,
    BuiltInName::ldexp,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpLdexp,
    true);
constexpr const TFunction kFunction_ldexp_1B1C(
    BuiltInId::ldexp_Float2_Int2,
    BuiltInName::ldexp,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpLdexp,
    true);
constexpr const TFunction kFunction_ldexp_2B2C(
    BuiltInId::ldexp_Float3_Int3,
    BuiltInName::ldexp,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpLdexp,
    true);
constexpr const TFunction kFunction_ldexp_3B3C(
    BuiltInId::ldexp_Float4_Int4,
    BuiltInName::ldexp,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B3C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpLdexp,
    true);
constexpr const TFunction kFunction_packSnorm2x16_1B(
    BuiltInId::packSnorm2x16_Float2,
    BuiltInName::packSnorm2x16,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpPackSnorm2x16,
    true);
constexpr const TFunction kFunction_packUnorm2x16_1B(
    BuiltInId::packUnorm2x16_Float2,
    BuiltInName::packUnorm2x16,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpPackUnorm2x16,
    true);
constexpr const TFunction kFunction_packHalf2x16_1B(
    BuiltInId::packHalf2x16_Float2,
    BuiltInName::packHalf2x16,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpPackHalf2x16,
    true);
constexpr const TFunction kFunction_unpackSnorm2x16_0D(
    BuiltInId::unpackSnorm2x16_UInt1,
    BuiltInName::unpackSnorm2x16,
    TExtension::UNDEFINED,
    BuiltInParameters::p0D0C0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpUnpackSnorm2x16,
    true);
constexpr const TFunction kFunction_unpackUnorm2x16_0D(
    BuiltInId::unpackUnorm2x16_UInt1,
    BuiltInName::unpackUnorm2x16,
    TExtension::UNDEFINED,
    BuiltInParameters::p0D0C0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpUnpackUnorm2x16,
    true);
constexpr const TFunction kFunction_unpackHalf2x16_0D(
    BuiltInId::unpackHalf2x16_UInt1,
    BuiltInName::unpackHalf2x16,
    TExtension::UNDEFINED,
    BuiltInParameters::p0D0C0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpUnpackHalf2x16,
    true);
constexpr const TFunction kFunction_packUnorm4x8_3B(
    BuiltInId::packUnorm4x8_Float4,
    BuiltInName::packUnorm4x8,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B0B0B,
    1,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpPackUnorm4x8,
    true);
constexpr const TFunction kFunction_packSnorm4x8_3B(
    BuiltInId::packSnorm4x8_Float4,
    BuiltInName::packSnorm4x8,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B0B0B,
    1,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpPackSnorm4x8,
    true);
constexpr const TFunction kFunction_unpackUnorm4x8_0D(
    BuiltInId::unpackUnorm4x8_UInt1,
    BuiltInName::unpackUnorm4x8,
    TExtension::UNDEFINED,
    BuiltInParameters::p0D0C0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpUnpackUnorm4x8,
    true);
constexpr const TFunction kFunction_unpackSnorm4x8_0D(
    BuiltInId::unpackSnorm4x8_UInt1,
    BuiltInName::unpackSnorm4x8,
    TExtension::UNDEFINED,
    BuiltInParameters::p0D0C0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpUnpackSnorm4x8,
    true);
constexpr const TFunction kFunction_length_0B(
    BuiltInId::length_Float1,
    BuiltInName::length,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpLength,
    true);
constexpr const TFunction kFunction_length_1B(
    BuiltInId::length_Float2,
    BuiltInName::length,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpLength,
    true);
constexpr const TFunction kFunction_length_2B(
    BuiltInId::length_Float3,
    BuiltInName::length,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B_o_2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpLength,
    true);
constexpr const TFunction kFunction_length_3B(
    BuiltInId::length_Float4,
    BuiltInName::length,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B0B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpLength,
    true);
constexpr const TFunction kFunction_distance_0B0B(
    BuiltInId::distance_Float1_Float1,
    BuiltInName::distance,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0B1B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpDistance,
    true);
constexpr const TFunction kFunction_distance_1B1B(
    BuiltInId::distance_Float2_Float2,
    BuiltInName::distance,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpDistance,
    true);
constexpr const TFunction kFunction_distance_2B2B(
    BuiltInId::distance_Float3_Float3,
    BuiltInName::distance,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpDistance,
    true);
constexpr const TFunction kFunction_distance_3B3B(
    BuiltInId::distance_Float4_Float4,
    BuiltInName::distance,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B3B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpDistance,
    true);
constexpr const TFunction kFunction_dot_0B0B(
    BuiltInId::dot_Float1_Float1,
    BuiltInName::dot,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0B1B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpDot,
    true);
constexpr const TFunction kFunction_dot_1B1B(
    BuiltInId::dot_Float2_Float2,
    BuiltInName::dot,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpDot,
    true);
constexpr const TFunction kFunction_dot_2B2B(
    BuiltInId::dot_Float3_Float3,
    BuiltInName::dot,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpDot,
    true);
constexpr const TFunction kFunction_dot_3B3B(
    BuiltInId::dot_Float4_Float4,
    BuiltInName::dot,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B3B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpDot,
    true);
constexpr const TFunction kFunction_cross_2B2B(
    BuiltInId::cross_Float3_Float3,
    BuiltInName::cross,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpCross,
    true);
constexpr const TFunction kFunction_normalize_0B(
    BuiltInId::normalize_Float1,
    BuiltInName::normalize,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpNormalize,
    true);
constexpr const TFunction kFunction_normalize_1B(
    BuiltInId::normalize_Float2,
    BuiltInName::normalize,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpNormalize,
    true);
constexpr const TFunction kFunction_normalize_2B(
    BuiltInId::normalize_Float3,
    BuiltInName::normalize,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B_o_2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpNormalize,
    true);
constexpr const TFunction kFunction_normalize_3B(
    BuiltInId::normalize_Float4,
    BuiltInName::normalize,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B0B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpNormalize,
    true);
constexpr const TFunction kFunction_faceforward_0B0B0B(
    BuiltInId::faceforward_Float1_Float1_Float1,
    BuiltInName::faceforward,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0B0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpFaceforward,
    true);
constexpr const TFunction kFunction_faceforward_1B1B1B(
    BuiltInId::faceforward_Float2_Float2_Float2,
    BuiltInName::faceforward,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B1B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpFaceforward,
    true);
constexpr const TFunction kFunction_faceforward_2B2B2B(
    BuiltInId::faceforward_Float3_Float3_Float3,
    BuiltInName::faceforward,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2B2B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpFaceforward,
    true);
constexpr const TFunction kFunction_faceforward_3B3B3B(
    BuiltInId::faceforward_Float4_Float4_Float4,
    BuiltInName::faceforward,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B3B3B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpFaceforward,
    true);
constexpr const TFunction kFunction_reflect_0B0B(
    BuiltInId::reflect_Float1_Float1,
    BuiltInName::reflect,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0B1B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpReflect,
    true);
constexpr const TFunction kFunction_reflect_1B1B(
    BuiltInId::reflect_Float2_Float2,
    BuiltInName::reflect,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpReflect,
    true);
constexpr const TFunction kFunction_reflect_2B2B(
    BuiltInId::reflect_Float3_Float3,
    BuiltInName::reflect,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpReflect,
    true);
constexpr const TFunction kFunction_reflect_3B3B(
    BuiltInId::reflect_Float4_Float4,
    BuiltInName::reflect,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B3B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpReflect,
    true);
constexpr const TFunction kFunction_refract_0B0B0B(
    BuiltInId::refract_Float1_Float1_Float1,
    BuiltInName::refract,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0B0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpRefract,
    true);
constexpr const TFunction kFunction_refract_1B1B0B(
    BuiltInId::refract_Float2_Float2_Float1,
    BuiltInName::refract,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpRefract,
    true);
constexpr const TFunction kFunction_refract_2B2B0B(
    BuiltInId::refract_Float3_Float3_Float1,
    BuiltInName::refract,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2B0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpRefract,
    true);
constexpr const TFunction kFunction_refract_3B3B0B(
    BuiltInId::refract_Float4_Float4_Float1,
    BuiltInName::refract,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B3B0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpRefract,
    true);
constexpr const TFunction kFunction_matrixCompMult_5B5B(
    BuiltInId::matrixCompMult_Float2x2_Float2x2,
    BuiltInName::matrixCompMult,
    TExtension::UNDEFINED,
    BuiltInParameters::p5B5B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 2>(),
    EOpMulMatrixComponentWise,
    true);
constexpr const TFunction kFunction_matrixCompMult_ABAB(
    BuiltInId::matrixCompMult_Float3x3_Float3x3,
    BuiltInName::matrixCompMult,
    TExtension::UNDEFINED,
    BuiltInParameters::pABAB,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 3>(),
    EOpMulMatrixComponentWise,
    true);
constexpr const TFunction kFunction_matrixCompMult_FBFB(
    BuiltInId::matrixCompMult_Float4x4_Float4x4,
    BuiltInName::matrixCompMult,
    TExtension::UNDEFINED,
    BuiltInParameters::pFBFB,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 4>(),
    EOpMulMatrixComponentWise,
    true);
constexpr const TFunction kFunction_matrixCompMult_9B9B(
    BuiltInId::matrixCompMult_Float2x3_Float2x3,
    BuiltInName::matrixCompMult,
    TExtension::UNDEFINED,
    BuiltInParameters::p9B9B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 3>(),
    EOpMulMatrixComponentWise,
    true);
constexpr const TFunction kFunction_matrixCompMult_6B6B(
    BuiltInId::matrixCompMult_Float3x2_Float3x2,
    BuiltInName::matrixCompMult,
    TExtension::UNDEFINED,
    BuiltInParameters::p6B6B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 2>(),
    EOpMulMatrixComponentWise,
    true);
constexpr const TFunction kFunction_matrixCompMult_DBDB(
    BuiltInId::matrixCompMult_Float2x4_Float2x4,
    BuiltInName::matrixCompMult,
    TExtension::UNDEFINED,
    BuiltInParameters::pDBDB,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 4>(),
    EOpMulMatrixComponentWise,
    true);
constexpr const TFunction kFunction_matrixCompMult_7B7B(
    BuiltInId::matrixCompMult_Float4x2_Float4x2,
    BuiltInName::matrixCompMult,
    TExtension::UNDEFINED,
    BuiltInParameters::p7B7B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 2>(),
    EOpMulMatrixComponentWise,
    true);
constexpr const TFunction kFunction_matrixCompMult_EBEB(
    BuiltInId::matrixCompMult_Float3x4_Float3x4,
    BuiltInName::matrixCompMult,
    TExtension::UNDEFINED,
    BuiltInParameters::pEBEB,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 4>(),
    EOpMulMatrixComponentWise,
    true);
constexpr const TFunction kFunction_matrixCompMult_BBBB(
    BuiltInId::matrixCompMult_Float4x3_Float4x3,
    BuiltInName::matrixCompMult,
    TExtension::UNDEFINED,
    BuiltInParameters::pBBBB,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 3>(),
    EOpMulMatrixComponentWise,
    true);
constexpr const TFunction kFunction_outerProduct_1B1B(
    BuiltInId::outerProduct_Float2_Float2,
    BuiltInName::outerProduct,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 2>(),
    EOpOuterProduct,
    true);
constexpr const TFunction kFunction_outerProduct_2B2B(
    BuiltInId::outerProduct_Float3_Float3,
    BuiltInName::outerProduct,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 3>(),
    EOpOuterProduct,
    true);
constexpr const TFunction kFunction_outerProduct_3B3B(
    BuiltInId::outerProduct_Float4_Float4,
    BuiltInName::outerProduct,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B3B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 4>(),
    EOpOuterProduct,
    true);
constexpr const TFunction kFunction_outerProduct_2B1B(
    BuiltInId::outerProduct_Float3_Float2,
    BuiltInName::outerProduct,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B1B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 3>(),
    EOpOuterProduct,
    true);
constexpr const TFunction kFunction_outerProduct_1B2B(
    BuiltInId::outerProduct_Float2_Float3,
    BuiltInName::outerProduct,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B2B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 2>(),
    EOpOuterProduct,
    true);
constexpr const TFunction kFunction_outerProduct_3B1B(
    BuiltInId::outerProduct_Float4_Float2,
    BuiltInName::outerProduct,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B1B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 4>(),
    EOpOuterProduct,
    true);
constexpr const TFunction kFunction_outerProduct_1B3B(
    BuiltInId::outerProduct_Float2_Float4,
    BuiltInName::outerProduct,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B3B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 2>(),
    EOpOuterProduct,
    true);
constexpr const TFunction kFunction_outerProduct_3B2B(
    BuiltInId::outerProduct_Float4_Float3,
    BuiltInName::outerProduct,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B2B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 4>(),
    EOpOuterProduct,
    true);
constexpr const TFunction kFunction_outerProduct_2B3B(
    BuiltInId::outerProduct_Float3_Float4,
    BuiltInName::outerProduct,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B3B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 3>(),
    EOpOuterProduct,
    true);
constexpr const TFunction kFunction_transpose_5B(
    BuiltInId::transpose_Float2x2,
    BuiltInName::transpose,
    TExtension::UNDEFINED,
    BuiltInParameters::p5B5B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 2>(),
    EOpTranspose,
    true);
constexpr const TFunction kFunction_transpose_AB(
    BuiltInId::transpose_Float3x3,
    BuiltInName::transpose,
    TExtension::UNDEFINED,
    BuiltInParameters::pABAB,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 3>(),
    EOpTranspose,
    true);
constexpr const TFunction kFunction_transpose_FB(
    BuiltInId::transpose_Float4x4,
    BuiltInName::transpose,
    TExtension::UNDEFINED,
    BuiltInParameters::pFBFB,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 4>(),
    EOpTranspose,
    true);
constexpr const TFunction kFunction_transpose_6B(
    BuiltInId::transpose_Float3x2,
    BuiltInName::transpose,
    TExtension::UNDEFINED,
    BuiltInParameters::p6B6B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 3>(),
    EOpTranspose,
    true);
constexpr const TFunction kFunction_transpose_9B(
    BuiltInId::transpose_Float2x3,
    BuiltInName::transpose,
    TExtension::UNDEFINED,
    BuiltInParameters::p9B9B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 2>(),
    EOpTranspose,
    true);
constexpr const TFunction kFunction_transpose_7B(
    BuiltInId::transpose_Float4x2,
    BuiltInName::transpose,
    TExtension::UNDEFINED,
    BuiltInParameters::p7B7B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 4>(),
    EOpTranspose,
    true);
constexpr const TFunction kFunction_transpose_DB(
    BuiltInId::transpose_Float2x4,
    BuiltInName::transpose,
    TExtension::UNDEFINED,
    BuiltInParameters::pDBDB,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 2>(),
    EOpTranspose,
    true);
constexpr const TFunction kFunction_transpose_BB(
    BuiltInId::transpose_Float4x3,
    BuiltInName::transpose,
    TExtension::UNDEFINED,
    BuiltInParameters::pBBBB,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 4>(),
    EOpTranspose,
    true);
constexpr const TFunction kFunction_transpose_EB(
    BuiltInId::transpose_Float3x4,
    BuiltInName::transpose,
    TExtension::UNDEFINED,
    BuiltInParameters::pEBEB,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 3>(),
    EOpTranspose,
    true);
constexpr const TFunction kFunction_determinant_5B(
    BuiltInId::determinant_Float2x2,
    BuiltInName::determinant,
    TExtension::UNDEFINED,
    BuiltInParameters::p5B5B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpDeterminant,
    true);
constexpr const TFunction kFunction_determinant_AB(
    BuiltInId::determinant_Float3x3,
    BuiltInName::determinant,
    TExtension::UNDEFINED,
    BuiltInParameters::pABAB,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpDeterminant,
    true);
constexpr const TFunction kFunction_determinant_FB(
    BuiltInId::determinant_Float4x4,
    BuiltInName::determinant,
    TExtension::UNDEFINED,
    BuiltInParameters::pFBFB,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpDeterminant,
    true);
constexpr const TFunction kFunction_inverse_5B(
    BuiltInId::inverse_Float2x2,
    BuiltInName::inverse,
    TExtension::UNDEFINED,
    BuiltInParameters::p5B5B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 2>(),
    EOpInverse,
    true);
constexpr const TFunction kFunction_inverse_AB(
    BuiltInId::inverse_Float3x3,
    BuiltInName::inverse,
    TExtension::UNDEFINED,
    BuiltInParameters::pABAB,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 3>(),
    EOpInverse,
    true);
constexpr const TFunction kFunction_inverse_FB(
    BuiltInId::inverse_Float4x4,
    BuiltInName::inverse,
    TExtension::UNDEFINED,
    BuiltInParameters::pFBFB,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 4>(),
    EOpInverse,
    true);
constexpr const TFunction kFunction_lessThan_1B1B(
    BuiltInId::lessThan_Float2_Float2,
    BuiltInName::lessThan,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpLessThanComponentWise,
    true);
constexpr const TFunction kFunction_lessThan_2B2B(
    BuiltInId::lessThan_Float3_Float3,
    BuiltInName::lessThan,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2B0B,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpLessThanComponentWise,
    true);
constexpr const TFunction kFunction_lessThan_3B3B(
    BuiltInId::lessThan_Float4_Float4,
    BuiltInName::lessThan,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B3B0B,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpLessThanComponentWise,
    true);
constexpr const TFunction kFunction_lessThan_1C1C(
    BuiltInId::lessThan_Int2_Int2,
    BuiltInName::lessThan,
    TExtension::UNDEFINED,
    BuiltInParameters::p1C1C_o_1C_o_1C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpLessThanComponentWise,
    true);
constexpr const TFunction kFunction_lessThan_2C2C(
    BuiltInId::lessThan_Int3_Int3,
    BuiltInName::lessThan,
    TExtension::UNDEFINED,
    BuiltInParameters::p2C2C0C0C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpLessThanComponentWise,
    true);
constexpr const TFunction kFunction_lessThan_3C3C(
    BuiltInId::lessThan_Int4_Int4,
    BuiltInName::lessThan,
    TExtension::UNDEFINED,
    BuiltInParameters::p3C3C3C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpLessThanComponentWise,
    true);
constexpr const TFunction kFunction_lessThan_1D1D(
    BuiltInId::lessThan_UInt2_UInt2,
    BuiltInName::lessThan,
    TExtension::UNDEFINED,
    BuiltInParameters::p1D1D0C0C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpLessThanComponentWise,
    true);
constexpr const TFunction kFunction_lessThan_2D2D(
    BuiltInId::lessThan_UInt3_UInt3,
    BuiltInName::lessThan,
    TExtension::UNDEFINED,
    BuiltInParameters::p2D2D0C0C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpLessThanComponentWise,
    true);
constexpr const TFunction kFunction_lessThan_3D3D(
    BuiltInId::lessThan_UInt4_UInt4,
    BuiltInName::lessThan,
    TExtension::UNDEFINED,
    BuiltInParameters::p3D3D0C0C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpLessThanComponentWise,
    true);
constexpr const TFunction kFunction_lessThanEqual_1B1B(
    BuiltInId::lessThanEqual_Float2_Float2,
    BuiltInName::lessThanEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpLessThanEqualComponentWise,
    true);
constexpr const TFunction kFunction_lessThanEqual_2B2B(
    BuiltInId::lessThanEqual_Float3_Float3,
    BuiltInName::lessThanEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2B0B,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpLessThanEqualComponentWise,
    true);
constexpr const TFunction kFunction_lessThanEqual_3B3B(
    BuiltInId::lessThanEqual_Float4_Float4,
    BuiltInName::lessThanEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B3B0B,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpLessThanEqualComponentWise,
    true);
constexpr const TFunction kFunction_lessThanEqual_1C1C(
    BuiltInId::lessThanEqual_Int2_Int2,
    BuiltInName::lessThanEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p1C1C_o_1C_o_1C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpLessThanEqualComponentWise,
    true);
constexpr const TFunction kFunction_lessThanEqual_2C2C(
    BuiltInId::lessThanEqual_Int3_Int3,
    BuiltInName::lessThanEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p2C2C0C0C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpLessThanEqualComponentWise,
    true);
constexpr const TFunction kFunction_lessThanEqual_3C3C(
    BuiltInId::lessThanEqual_Int4_Int4,
    BuiltInName::lessThanEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p3C3C3C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpLessThanEqualComponentWise,
    true);
constexpr const TFunction kFunction_lessThanEqual_1D1D(
    BuiltInId::lessThanEqual_UInt2_UInt2,
    BuiltInName::lessThanEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p1D1D0C0C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpLessThanEqualComponentWise,
    true);
constexpr const TFunction kFunction_lessThanEqual_2D2D(
    BuiltInId::lessThanEqual_UInt3_UInt3,
    BuiltInName::lessThanEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p2D2D0C0C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpLessThanEqualComponentWise,
    true);
constexpr const TFunction kFunction_lessThanEqual_3D3D(
    BuiltInId::lessThanEqual_UInt4_UInt4,
    BuiltInName::lessThanEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p3D3D0C0C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpLessThanEqualComponentWise,
    true);
constexpr const TFunction kFunction_greaterThan_1B1B(
    BuiltInId::greaterThan_Float2_Float2,
    BuiltInName::greaterThan,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpGreaterThanComponentWise,
    true);
constexpr const TFunction kFunction_greaterThan_2B2B(
    BuiltInId::greaterThan_Float3_Float3,
    BuiltInName::greaterThan,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2B0B,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpGreaterThanComponentWise,
    true);
constexpr const TFunction kFunction_greaterThan_3B3B(
    BuiltInId::greaterThan_Float4_Float4,
    BuiltInName::greaterThan,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B3B0B,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpGreaterThanComponentWise,
    true);
constexpr const TFunction kFunction_greaterThan_1C1C(
    BuiltInId::greaterThan_Int2_Int2,
    BuiltInName::greaterThan,
    TExtension::UNDEFINED,
    BuiltInParameters::p1C1C_o_1C_o_1C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpGreaterThanComponentWise,
    true);
constexpr const TFunction kFunction_greaterThan_2C2C(
    BuiltInId::greaterThan_Int3_Int3,
    BuiltInName::greaterThan,
    TExtension::UNDEFINED,
    BuiltInParameters::p2C2C0C0C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpGreaterThanComponentWise,
    true);
constexpr const TFunction kFunction_greaterThan_3C3C(
    BuiltInId::greaterThan_Int4_Int4,
    BuiltInName::greaterThan,
    TExtension::UNDEFINED,
    BuiltInParameters::p3C3C3C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpGreaterThanComponentWise,
    true);
constexpr const TFunction kFunction_greaterThan_1D1D(
    BuiltInId::greaterThan_UInt2_UInt2,
    BuiltInName::greaterThan,
    TExtension::UNDEFINED,
    BuiltInParameters::p1D1D0C0C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpGreaterThanComponentWise,
    true);
constexpr const TFunction kFunction_greaterThan_2D2D(
    BuiltInId::greaterThan_UInt3_UInt3,
    BuiltInName::greaterThan,
    TExtension::UNDEFINED,
    BuiltInParameters::p2D2D0C0C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpGreaterThanComponentWise,
    true);
constexpr const TFunction kFunction_greaterThan_3D3D(
    BuiltInId::greaterThan_UInt4_UInt4,
    BuiltInName::greaterThan,
    TExtension::UNDEFINED,
    BuiltInParameters::p3D3D0C0C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpGreaterThanComponentWise,
    true);
constexpr const TFunction kFunction_greaterThanEqual_1B1B(
    BuiltInId::greaterThanEqual_Float2_Float2,
    BuiltInName::greaterThanEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpGreaterThanEqualComponentWise,
    true);
constexpr const TFunction kFunction_greaterThanEqual_2B2B(
    BuiltInId::greaterThanEqual_Float3_Float3,
    BuiltInName::greaterThanEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2B0B,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpGreaterThanEqualComponentWise,
    true);
constexpr const TFunction kFunction_greaterThanEqual_3B3B(
    BuiltInId::greaterThanEqual_Float4_Float4,
    BuiltInName::greaterThanEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B3B0B,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpGreaterThanEqualComponentWise,
    true);
constexpr const TFunction kFunction_greaterThanEqual_1C1C(
    BuiltInId::greaterThanEqual_Int2_Int2,
    BuiltInName::greaterThanEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p1C1C_o_1C_o_1C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpGreaterThanEqualComponentWise,
    true);
constexpr const TFunction kFunction_greaterThanEqual_2C2C(
    BuiltInId::greaterThanEqual_Int3_Int3,
    BuiltInName::greaterThanEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p2C2C0C0C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpGreaterThanEqualComponentWise,
    true);
constexpr const TFunction kFunction_greaterThanEqual_3C3C(
    BuiltInId::greaterThanEqual_Int4_Int4,
    BuiltInName::greaterThanEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p3C3C3C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpGreaterThanEqualComponentWise,
    true);
constexpr const TFunction kFunction_greaterThanEqual_1D1D(
    BuiltInId::greaterThanEqual_UInt2_UInt2,
    BuiltInName::greaterThanEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p1D1D0C0C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpGreaterThanEqualComponentWise,
    true);
constexpr const TFunction kFunction_greaterThanEqual_2D2D(
    BuiltInId::greaterThanEqual_UInt3_UInt3,
    BuiltInName::greaterThanEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p2D2D0C0C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpGreaterThanEqualComponentWise,
    true);
constexpr const TFunction kFunction_greaterThanEqual_3D3D(
    BuiltInId::greaterThanEqual_UInt4_UInt4,
    BuiltInName::greaterThanEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p3D3D0C0C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpGreaterThanEqualComponentWise,
    true);
constexpr const TFunction kFunction_equal_1B1B(
    BuiltInId::equal_Float2_Float2,
    BuiltInName::equal,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpEqualComponentWise,
    true);
constexpr const TFunction kFunction_equal_2B2B(
    BuiltInId::equal_Float3_Float3,
    BuiltInName::equal,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2B0B,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpEqualComponentWise,
    true);
constexpr const TFunction kFunction_equal_3B3B(
    BuiltInId::equal_Float4_Float4,
    BuiltInName::equal,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B3B0B,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpEqualComponentWise,
    true);
constexpr const TFunction kFunction_equal_1C1C(
    BuiltInId::equal_Int2_Int2,
    BuiltInName::equal,
    TExtension::UNDEFINED,
    BuiltInParameters::p1C1C_o_1C_o_1C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpEqualComponentWise,
    true);
constexpr const TFunction kFunction_equal_2C2C(
    BuiltInId::equal_Int3_Int3,
    BuiltInName::equal,
    TExtension::UNDEFINED,
    BuiltInParameters::p2C2C0C0C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpEqualComponentWise,
    true);
constexpr const TFunction kFunction_equal_3C3C(
    BuiltInId::equal_Int4_Int4,
    BuiltInName::equal,
    TExtension::UNDEFINED,
    BuiltInParameters::p3C3C3C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpEqualComponentWise,
    true);
constexpr const TFunction kFunction_equal_1D1D(
    BuiltInId::equal_UInt2_UInt2,
    BuiltInName::equal,
    TExtension::UNDEFINED,
    BuiltInParameters::p1D1D0C0C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpEqualComponentWise,
    true);
constexpr const TFunction kFunction_equal_2D2D(
    BuiltInId::equal_UInt3_UInt3,
    BuiltInName::equal,
    TExtension::UNDEFINED,
    BuiltInParameters::p2D2D0C0C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpEqualComponentWise,
    true);
constexpr const TFunction kFunction_equal_3D3D(
    BuiltInId::equal_UInt4_UInt4,
    BuiltInName::equal,
    TExtension::UNDEFINED,
    BuiltInParameters::p3D3D0C0C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpEqualComponentWise,
    true);
constexpr const TFunction kFunction_equal_1E1E(
    BuiltInId::equal_Bool2_Bool2,
    BuiltInName::equal,
    TExtension::UNDEFINED,
    BuiltInParameters::p1E1E,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpEqualComponentWise,
    true);
constexpr const TFunction kFunction_equal_2E2E(
    BuiltInId::equal_Bool3_Bool3,
    BuiltInName::equal,
    TExtension::UNDEFINED,
    BuiltInParameters::p2E2E,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpEqualComponentWise,
    true);
constexpr const TFunction kFunction_equal_3E3E(
    BuiltInId::equal_Bool4_Bool4,
    BuiltInName::equal,
    TExtension::UNDEFINED,
    BuiltInParameters::p3E3E,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpEqualComponentWise,
    true);
constexpr const TFunction kFunction_notEqual_1B1B(
    BuiltInId::notEqual_Float2_Float2,
    BuiltInName::notEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpNotEqualComponentWise,
    true);
constexpr const TFunction kFunction_notEqual_2B2B(
    BuiltInId::notEqual_Float3_Float3,
    BuiltInName::notEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B2B0B,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpNotEqualComponentWise,
    true);
constexpr const TFunction kFunction_notEqual_3B3B(
    BuiltInId::notEqual_Float4_Float4,
    BuiltInName::notEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B3B0B,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpNotEqualComponentWise,
    true);
constexpr const TFunction kFunction_notEqual_1C1C(
    BuiltInId::notEqual_Int2_Int2,
    BuiltInName::notEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p1C1C_o_1C_o_1C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpNotEqualComponentWise,
    true);
constexpr const TFunction kFunction_notEqual_2C2C(
    BuiltInId::notEqual_Int3_Int3,
    BuiltInName::notEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p2C2C0C0C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpNotEqualComponentWise,
    true);
constexpr const TFunction kFunction_notEqual_3C3C(
    BuiltInId::notEqual_Int4_Int4,
    BuiltInName::notEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p3C3C3C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpNotEqualComponentWise,
    true);
constexpr const TFunction kFunction_notEqual_1D1D(
    BuiltInId::notEqual_UInt2_UInt2,
    BuiltInName::notEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p1D1D0C0C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpNotEqualComponentWise,
    true);
constexpr const TFunction kFunction_notEqual_2D2D(
    BuiltInId::notEqual_UInt3_UInt3,
    BuiltInName::notEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p2D2D0C0C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpNotEqualComponentWise,
    true);
constexpr const TFunction kFunction_notEqual_3D3D(
    BuiltInId::notEqual_UInt4_UInt4,
    BuiltInName::notEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p3D3D0C0C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpNotEqualComponentWise,
    true);
constexpr const TFunction kFunction_notEqual_1E1E(
    BuiltInId::notEqual_Bool2_Bool2,
    BuiltInName::notEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p1E1E,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpNotEqualComponentWise,
    true);
constexpr const TFunction kFunction_notEqual_2E2E(
    BuiltInId::notEqual_Bool3_Bool3,
    BuiltInName::notEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p2E2E,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpNotEqualComponentWise,
    true);
constexpr const TFunction kFunction_notEqual_3E3E(
    BuiltInId::notEqual_Bool4_Bool4,
    BuiltInName::notEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p3E3E,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpNotEqualComponentWise,
    true);
constexpr const TFunction kFunction_any_1E(
    BuiltInId::any_Bool2,
    BuiltInName::any,
    TExtension::UNDEFINED,
    BuiltInParameters::p1E1E,
    1,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAny,
    true);
constexpr const TFunction kFunction_any_2E(
    BuiltInId::any_Bool3,
    BuiltInName::any,
    TExtension::UNDEFINED,
    BuiltInParameters::p2E2E,
    1,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAny,
    true);
constexpr const TFunction kFunction_any_3E(
    BuiltInId::any_Bool4,
    BuiltInName::any,
    TExtension::UNDEFINED,
    BuiltInParameters::p3E3E,
    1,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAny,
    true);
constexpr const TFunction kFunction_all_1E(
    BuiltInId::all_Bool2,
    BuiltInName::all,
    TExtension::UNDEFINED,
    BuiltInParameters::p1E1E,
    1,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAll,
    true);
constexpr const TFunction kFunction_all_2E(
    BuiltInId::all_Bool3,
    BuiltInName::all,
    TExtension::UNDEFINED,
    BuiltInParameters::p2E2E,
    1,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAll,
    true);
constexpr const TFunction kFunction_all_3E(
    BuiltInId::all_Bool4,
    BuiltInName::all,
    TExtension::UNDEFINED,
    BuiltInParameters::p3E3E,
    1,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAll,
    true);
constexpr const TFunction kFunction_notFunc_1E(
    BuiltInId::notFunc_Bool2,
    BuiltInName::notFunc,
    TExtension::UNDEFINED,
    BuiltInParameters::p1E1E,
    1,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpLogicalNotComponentWise,
    true);
constexpr const TFunction kFunction_notFunc_2E(
    BuiltInId::notFunc_Bool3,
    BuiltInName::notFunc,
    TExtension::UNDEFINED,
    BuiltInParameters::p2E2E,
    1,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpLogicalNotComponentWise,
    true);
constexpr const TFunction kFunction_notFunc_3E(
    BuiltInId::notFunc_Bool4,
    BuiltInName::notFunc,
    TExtension::UNDEFINED,
    BuiltInParameters::p3E3E,
    1,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpLogicalNotComponentWise,
    true);
constexpr const TFunction kFunction_bitfieldExtract_0C0C0C(
    BuiltInId::bitfieldExtract_Int1_Int1_Int1,
    BuiltInName::bitfieldExtract,
    TExtension::UNDEFINED,
    BuiltInParameters::p0C0C0C0C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpBitfieldExtract,
    true);
constexpr const TFunction kFunction_bitfieldExtract_1C0C0C(
    BuiltInId::bitfieldExtract_Int2_Int1_Int1,
    BuiltInName::bitfieldExtract,
    TExtension::UNDEFINED,
    BuiltInParameters::p1C0C0C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpBitfieldExtract,
    true);
constexpr const TFunction kFunction_bitfieldExtract_2C0C0C(
    BuiltInId::bitfieldExtract_Int3_Int1_Int1,
    BuiltInName::bitfieldExtract,
    TExtension::UNDEFINED,
    BuiltInParameters::p2C0C0C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpBitfieldExtract,
    true);
constexpr const TFunction kFunction_bitfieldExtract_3C0C0C(
    BuiltInId::bitfieldExtract_Int4_Int1_Int1,
    BuiltInName::bitfieldExtract,
    TExtension::UNDEFINED,
    BuiltInParameters::p3C0C0C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpBitfieldExtract,
    true);
constexpr const TFunction kFunction_bitfieldExtract_0D0C0C(
    BuiltInId::bitfieldExtract_UInt1_Int1_Int1,
    BuiltInName::bitfieldExtract,
    TExtension::UNDEFINED,
    BuiltInParameters::p0D0C0C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpBitfieldExtract,
    true);
constexpr const TFunction kFunction_bitfieldExtract_1D0C0C(
    BuiltInId::bitfieldExtract_UInt2_Int1_Int1,
    BuiltInName::bitfieldExtract,
    TExtension::UNDEFINED,
    BuiltInParameters::p1D0C0C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpBitfieldExtract,
    true);
constexpr const TFunction kFunction_bitfieldExtract_2D0C0C(
    BuiltInId::bitfieldExtract_UInt3_Int1_Int1,
    BuiltInName::bitfieldExtract,
    TExtension::UNDEFINED,
    BuiltInParameters::p2D0C0C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpBitfieldExtract,
    true);
constexpr const TFunction kFunction_bitfieldExtract_3D0C0C(
    BuiltInId::bitfieldExtract_UInt4_Int1_Int1,
    BuiltInName::bitfieldExtract,
    TExtension::UNDEFINED,
    BuiltInParameters::p3D0C0C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpBitfieldExtract,
    true);
constexpr const TFunction kFunction_bitfieldInsert_0C0C0C0C(
    BuiltInId::bitfieldInsert_Int1_Int1_Int1_Int1,
    BuiltInName::bitfieldInsert,
    TExtension::UNDEFINED,
    BuiltInParameters::p0C0C0C0C,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpBitfieldInsert,
    true);
constexpr const TFunction kFunction_bitfieldInsert_1C1C0C0C(
    BuiltInId::bitfieldInsert_Int2_Int2_Int1_Int1,
    BuiltInName::bitfieldInsert,
    TExtension::UNDEFINED,
    BuiltInParameters::p1C1C0C0C,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpBitfieldInsert,
    true);
constexpr const TFunction kFunction_bitfieldInsert_2C2C0C0C(
    BuiltInId::bitfieldInsert_Int3_Int3_Int1_Int1,
    BuiltInName::bitfieldInsert,
    TExtension::UNDEFINED,
    BuiltInParameters::p2C2C0C0C,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpBitfieldInsert,
    true);
constexpr const TFunction kFunction_bitfieldInsert_3C3C0C0C(
    BuiltInId::bitfieldInsert_Int4_Int4_Int1_Int1,
    BuiltInName::bitfieldInsert,
    TExtension::UNDEFINED,
    BuiltInParameters::p3C3C0C0C,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpBitfieldInsert,
    true);
constexpr const TFunction kFunction_bitfieldInsert_0D0D0C0C(
    BuiltInId::bitfieldInsert_UInt1_UInt1_Int1_Int1,
    BuiltInName::bitfieldInsert,
    TExtension::UNDEFINED,
    BuiltInParameters::p0D0D0C0C,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpBitfieldInsert,
    true);
constexpr const TFunction kFunction_bitfieldInsert_1D1D0C0C(
    BuiltInId::bitfieldInsert_UInt2_UInt2_Int1_Int1,
    BuiltInName::bitfieldInsert,
    TExtension::UNDEFINED,
    BuiltInParameters::p1D1D0C0C,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpBitfieldInsert,
    true);
constexpr const TFunction kFunction_bitfieldInsert_2D2D0C0C(
    BuiltInId::bitfieldInsert_UInt3_UInt3_Int1_Int1,
    BuiltInName::bitfieldInsert,
    TExtension::UNDEFINED,
    BuiltInParameters::p2D2D0C0C,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpBitfieldInsert,
    true);
constexpr const TFunction kFunction_bitfieldInsert_3D3D0C0C(
    BuiltInId::bitfieldInsert_UInt4_UInt4_Int1_Int1,
    BuiltInName::bitfieldInsert,
    TExtension::UNDEFINED,
    BuiltInParameters::p3D3D0C0C,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpBitfieldInsert,
    true);
constexpr const TFunction kFunction_bitfieldReverse_0C(
    BuiltInId::bitfieldReverse_Int1,
    BuiltInName::bitfieldReverse,
    TExtension::UNDEFINED,
    BuiltInParameters::p0C0C_o_0C_o_0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpBitfieldReverse,
    true);
constexpr const TFunction kFunction_bitfieldReverse_1C(
    BuiltInId::bitfieldReverse_Int2,
    BuiltInName::bitfieldReverse,
    TExtension::UNDEFINED,
    BuiltInParameters::p1C1C_o_1C_o_1C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpBitfieldReverse,
    true);
constexpr const TFunction kFunction_bitfieldReverse_2C(
    BuiltInId::bitfieldReverse_Int3,
    BuiltInName::bitfieldReverse,
    TExtension::UNDEFINED,
    BuiltInParameters::p2C2C0C0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpBitfieldReverse,
    true);
constexpr const TFunction kFunction_bitfieldReverse_3C(
    BuiltInId::bitfieldReverse_Int4,
    BuiltInName::bitfieldReverse,
    TExtension::UNDEFINED,
    BuiltInParameters::p3C0C0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpBitfieldReverse,
    true);
constexpr const TFunction kFunction_bitfieldReverse_0D(
    BuiltInId::bitfieldReverse_UInt1,
    BuiltInName::bitfieldReverse,
    TExtension::UNDEFINED,
    BuiltInParameters::p0D0C0C,
    1,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpBitfieldReverse,
    true);
constexpr const TFunction kFunction_bitfieldReverse_1D(
    BuiltInId::bitfieldReverse_UInt2,
    BuiltInName::bitfieldReverse,
    TExtension::UNDEFINED,
    BuiltInParameters::p1D0C0C,
    1,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpBitfieldReverse,
    true);
constexpr const TFunction kFunction_bitfieldReverse_2D(
    BuiltInId::bitfieldReverse_UInt3,
    BuiltInName::bitfieldReverse,
    TExtension::UNDEFINED,
    BuiltInParameters::p2D2D0C0C,
    1,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpBitfieldReverse,
    true);
constexpr const TFunction kFunction_bitfieldReverse_3D(
    BuiltInId::bitfieldReverse_UInt4,
    BuiltInName::bitfieldReverse,
    TExtension::UNDEFINED,
    BuiltInParameters::p3D0C0C,
    1,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpBitfieldReverse,
    true);
constexpr const TFunction kFunction_bitCount_0C(
    BuiltInId::bitCount_Int1,
    BuiltInName::bitCount,
    TExtension::UNDEFINED,
    BuiltInParameters::p0C0C_o_0C_o_0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpBitCount,
    true);
constexpr const TFunction kFunction_bitCount_1C(
    BuiltInId::bitCount_Int2,
    BuiltInName::bitCount,
    TExtension::UNDEFINED,
    BuiltInParameters::p1C1C_o_1C_o_1C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpBitCount,
    true);
constexpr const TFunction kFunction_bitCount_2C(
    BuiltInId::bitCount_Int3,
    BuiltInName::bitCount,
    TExtension::UNDEFINED,
    BuiltInParameters::p2C2C0C0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpBitCount,
    true);
constexpr const TFunction kFunction_bitCount_3C(
    BuiltInId::bitCount_Int4,
    BuiltInName::bitCount,
    TExtension::UNDEFINED,
    BuiltInParameters::p3C0C0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpBitCount,
    true);
constexpr const TFunction kFunction_bitCount_0D(
    BuiltInId::bitCount_UInt1,
    BuiltInName::bitCount,
    TExtension::UNDEFINED,
    BuiltInParameters::p0D0C0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpBitCount,
    true);
constexpr const TFunction kFunction_bitCount_1D(
    BuiltInId::bitCount_UInt2,
    BuiltInName::bitCount,
    TExtension::UNDEFINED,
    BuiltInParameters::p1D0C0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpBitCount,
    true);
constexpr const TFunction kFunction_bitCount_2D(
    BuiltInId::bitCount_UInt3,
    BuiltInName::bitCount,
    TExtension::UNDEFINED,
    BuiltInParameters::p2D2D0C0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpBitCount,
    true);
constexpr const TFunction kFunction_bitCount_3D(
    BuiltInId::bitCount_UInt4,
    BuiltInName::bitCount,
    TExtension::UNDEFINED,
    BuiltInParameters::p3D0C0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpBitCount,
    true);
constexpr const TFunction kFunction_findLSB_0C(
    BuiltInId::findLSB_Int1,
    BuiltInName::findLSB,
    TExtension::UNDEFINED,
    BuiltInParameters::p0C0C_o_0C_o_0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpFindLSB,
    true);
constexpr const TFunction kFunction_findLSB_1C(
    BuiltInId::findLSB_Int2,
    BuiltInName::findLSB,
    TExtension::UNDEFINED,
    BuiltInParameters::p1C1C_o_1C_o_1C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpFindLSB,
    true);
constexpr const TFunction kFunction_findLSB_2C(
    BuiltInId::findLSB_Int3,
    BuiltInName::findLSB,
    TExtension::UNDEFINED,
    BuiltInParameters::p2C2C0C0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpFindLSB,
    true);
constexpr const TFunction kFunction_findLSB_3C(
    BuiltInId::findLSB_Int4,
    BuiltInName::findLSB,
    TExtension::UNDEFINED,
    BuiltInParameters::p3C0C0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpFindLSB,
    true);
constexpr const TFunction kFunction_findLSB_0D(
    BuiltInId::findLSB_UInt1,
    BuiltInName::findLSB,
    TExtension::UNDEFINED,
    BuiltInParameters::p0D0C0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpFindLSB,
    true);
constexpr const TFunction kFunction_findLSB_1D(
    BuiltInId::findLSB_UInt2,
    BuiltInName::findLSB,
    TExtension::UNDEFINED,
    BuiltInParameters::p1D0C0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpFindLSB,
    true);
constexpr const TFunction kFunction_findLSB_2D(
    BuiltInId::findLSB_UInt3,
    BuiltInName::findLSB,
    TExtension::UNDEFINED,
    BuiltInParameters::p2D2D0C0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpFindLSB,
    true);
constexpr const TFunction kFunction_findLSB_3D(
    BuiltInId::findLSB_UInt4,
    BuiltInName::findLSB,
    TExtension::UNDEFINED,
    BuiltInParameters::p3D0C0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpFindLSB,
    true);
constexpr const TFunction kFunction_findMSB_0C(
    BuiltInId::findMSB_Int1,
    BuiltInName::findMSB,
    TExtension::UNDEFINED,
    BuiltInParameters::p0C0C_o_0C_o_0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpFindMSB,
    true);
constexpr const TFunction kFunction_findMSB_1C(
    BuiltInId::findMSB_Int2,
    BuiltInName::findMSB,
    TExtension::UNDEFINED,
    BuiltInParameters::p1C1C_o_1C_o_1C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpFindMSB,
    true);
constexpr const TFunction kFunction_findMSB_2C(
    BuiltInId::findMSB_Int3,
    BuiltInName::findMSB,
    TExtension::UNDEFINED,
    BuiltInParameters::p2C2C0C0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpFindMSB,
    true);
constexpr const TFunction kFunction_findMSB_3C(
    BuiltInId::findMSB_Int4,
    BuiltInName::findMSB,
    TExtension::UNDEFINED,
    BuiltInParameters::p3C0C0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpFindMSB,
    true);
constexpr const TFunction kFunction_findMSB_0D(
    BuiltInId::findMSB_UInt1,
    BuiltInName::findMSB,
    TExtension::UNDEFINED,
    BuiltInParameters::p0D0C0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpFindMSB,
    true);
constexpr const TFunction kFunction_findMSB_1D(
    BuiltInId::findMSB_UInt2,
    BuiltInName::findMSB,
    TExtension::UNDEFINED,
    BuiltInParameters::p1D0C0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpFindMSB,
    true);
constexpr const TFunction kFunction_findMSB_2D(
    BuiltInId::findMSB_UInt3,
    BuiltInName::findMSB,
    TExtension::UNDEFINED,
    BuiltInParameters::p2D2D0C0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpFindMSB,
    true);
constexpr const TFunction kFunction_findMSB_3D(
    BuiltInId::findMSB_UInt4,
    BuiltInName::findMSB,
    TExtension::UNDEFINED,
    BuiltInParameters::p3D0C0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpFindMSB,
    true);
constexpr const TFunction kFunction_uaddCarry_0D0D0D(
    BuiltInId::uaddCarry_UInt1_UInt1_UInt1,
    BuiltInName::uaddCarry,
    TExtension::UNDEFINED,
    BuiltInParameters::p0D0D_o_0D_o_0D,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpUaddCarry,
    false);
constexpr const TFunction kFunction_uaddCarry_1D1D1D(
    BuiltInId::uaddCarry_UInt2_UInt2_UInt2,
    BuiltInName::uaddCarry,
    TExtension::UNDEFINED,
    BuiltInParameters::p1D1D_o_1D_o_1D,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpUaddCarry,
    false);
constexpr const TFunction kFunction_uaddCarry_2D2D2D(
    BuiltInId::uaddCarry_UInt3_UInt3_UInt3,
    BuiltInName::uaddCarry,
    TExtension::UNDEFINED,
    BuiltInParameters::p2D2D_o_2D_o_2D,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpUaddCarry,
    false);
constexpr const TFunction kFunction_uaddCarry_3D3D3D(
    BuiltInId::uaddCarry_UInt4_UInt4_UInt4,
    BuiltInName::uaddCarry,
    TExtension::UNDEFINED,
    BuiltInParameters::p3D3D_o_3D_o_3D,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpUaddCarry,
    false);
constexpr const TFunction kFunction_usubBorrow_0D0D0D(
    BuiltInId::usubBorrow_UInt1_UInt1_UInt1,
    BuiltInName::usubBorrow,
    TExtension::UNDEFINED,
    BuiltInParameters::p0D0D_o_0D_o_0D,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpUsubBorrow,
    false);
constexpr const TFunction kFunction_usubBorrow_1D1D1D(
    BuiltInId::usubBorrow_UInt2_UInt2_UInt2,
    BuiltInName::usubBorrow,
    TExtension::UNDEFINED,
    BuiltInParameters::p1D1D_o_1D_o_1D,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpUsubBorrow,
    false);
constexpr const TFunction kFunction_usubBorrow_2D2D2D(
    BuiltInId::usubBorrow_UInt3_UInt3_UInt3,
    BuiltInName::usubBorrow,
    TExtension::UNDEFINED,
    BuiltInParameters::p2D2D_o_2D_o_2D,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpUsubBorrow,
    false);
constexpr const TFunction kFunction_usubBorrow_3D3D3D(
    BuiltInId::usubBorrow_UInt4_UInt4_UInt4,
    BuiltInName::usubBorrow,
    TExtension::UNDEFINED,
    BuiltInParameters::p3D3D_o_3D_o_3D,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpUsubBorrow,
    false);
constexpr const TFunction kFunction_umulExtended_0D0D0D0D(
    BuiltInId::umulExtended_UInt1_UInt1_UInt1_UInt1,
    BuiltInName::umulExtended,
    TExtension::UNDEFINED,
    BuiltInParameters::p0D0D_o_0D_o_0D,
    4,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpUmulExtended,
    false);
constexpr const TFunction kFunction_umulExtended_1D1D1D1D(
    BuiltInId::umulExtended_UInt2_UInt2_UInt2_UInt2,
    BuiltInName::umulExtended,
    TExtension::UNDEFINED,
    BuiltInParameters::p1D1D_o_1D_o_1D,
    4,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpUmulExtended,
    false);
constexpr const TFunction kFunction_umulExtended_2D2D2D2D(
    BuiltInId::umulExtended_UInt3_UInt3_UInt3_UInt3,
    BuiltInName::umulExtended,
    TExtension::UNDEFINED,
    BuiltInParameters::p2D2D_o_2D_o_2D,
    4,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpUmulExtended,
    false);
constexpr const TFunction kFunction_umulExtended_3D3D3D3D(
    BuiltInId::umulExtended_UInt4_UInt4_UInt4_UInt4,
    BuiltInName::umulExtended,
    TExtension::UNDEFINED,
    BuiltInParameters::p3D3D_o_3D_o_3D,
    4,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpUmulExtended,
    false);
constexpr const TFunction kFunction_imulExtended_0C0C0C0C(
    BuiltInId::imulExtended_Int1_Int1_Int1_Int1,
    BuiltInName::imulExtended,
    TExtension::UNDEFINED,
    BuiltInParameters::p0C0C_o_0C_o_0C,
    4,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpImulExtended,
    false);
constexpr const TFunction kFunction_imulExtended_1C1C1C1C(
    BuiltInId::imulExtended_Int2_Int2_Int2_Int2,
    BuiltInName::imulExtended,
    TExtension::UNDEFINED,
    BuiltInParameters::p1C1C_o_1C_o_1C,
    4,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpImulExtended,
    false);
constexpr const TFunction kFunction_imulExtended_2C2C2C2C(
    BuiltInId::imulExtended_Int3_Int3_Int3_Int3,
    BuiltInName::imulExtended,
    TExtension::UNDEFINED,
    BuiltInParameters::p2C2C_o_2C_o_2C,
    4,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpImulExtended,
    false);
constexpr const TFunction kFunction_imulExtended_3C3C3C3C(
    BuiltInId::imulExtended_Int4_Int4_Int4_Int4,
    BuiltInName::imulExtended,
    TExtension::UNDEFINED,
    BuiltInParameters::p3C3C_o_3C_o_3C,
    4,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpImulExtended,
    false);
constexpr const TFunction kFunction_texture2D_0H1B(
    BuiltInId::texture2D_Sampler2D1_Float2,
    BuiltInName::texture2D,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H1B1B1B1C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture2DProj_0H2B(
    BuiltInId::texture2DProj_Sampler2D1_Float3,
    BuiltInName::texture2DProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H2B0B1C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture2DProj_0H3B(
    BuiltInId::texture2DProj_Sampler2D1_Float4,
    BuiltInName::texture2DProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H3B0B1C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureCube_0J2B(
    BuiltInId::textureCube_SamplerCube1_Float3,
    BuiltInName::textureCube,
    TExtension::UNDEFINED,
    BuiltInParameters::p0J2B2B2B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture2D_0L1B(
    BuiltInId::texture2D_SamplerExternalOES1_Float2,
    BuiltInName::texture2D,
    TExtension::UNDEFINED,
    BuiltInParameters::p0L1B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture2DProj_0L2B(
    BuiltInId::texture2DProj_SamplerExternalOES1_Float3,
    BuiltInName::texture2DProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p0L2B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture2DProj_0L3B(
    BuiltInId::texture2DProj_SamplerExternalOES1_Float4,
    BuiltInName::texture2DProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p0L3B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture2DRect_0N1B(
    BuiltInId::texture2DRect_Sampler2DRect1_Float2,
    BuiltInName::texture2DRect,
    TExtension::ARB_texture_rectangle,
    BuiltInParameters::p0N1B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture2DRectProj_0N2B(
    BuiltInId::texture2DRectProj_Sampler2DRect1_Float3,
    BuiltInName::texture2DRectProj,
    TExtension::ARB_texture_rectangle,
    BuiltInParameters::p0N2B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture2DRectProj_0N3B(
    BuiltInId::texture2DRectProj_Sampler2DRect1_Float4,
    BuiltInName::texture2DRectProj,
    TExtension::ARB_texture_rectangle,
    BuiltInParameters::p0N3B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0N1B(
    BuiltInId::texture_Sampler2DRect1_Float2,
    BuiltInName::texture,
    TExtension::ARB_texture_rectangle,
    BuiltInParameters::p0N1B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_0N2B(
    BuiltInId::textureProj_Sampler2DRect1_Float3,
    BuiltInName::textureProj,
    TExtension::ARB_texture_rectangle,
    BuiltInParameters::p0N2B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_0N3B(
    BuiltInId::textureProj_Sampler2DRect1_Float4,
    BuiltInName::textureProj,
    TExtension::ARB_texture_rectangle,
    BuiltInParameters::p0N3B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture2DGradEXT_0H1B1B1B(
    BuiltInId::texture2DGradEXT_Sampler2D1_Float2_Float2_Float2,
    BuiltInName::texture2DGradEXT,
    TExtension::EXT_shader_texture_lod,
    BuiltInParameters::p0H1B1B1B1C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture2DProjGradEXT_0H2B1B1B(
    BuiltInId::texture2DProjGradEXT_Sampler2D1_Float3_Float2_Float2,
    BuiltInName::texture2DProjGradEXT,
    TExtension::EXT_shader_texture_lod,
    BuiltInParameters::p0H2B1B1B1C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture2DProjGradEXT_0H3B1B1B(
    BuiltInId::texture2DProjGradEXT_Sampler2D1_Float4_Float2_Float2,
    BuiltInName::texture2DProjGradEXT,
    TExtension::EXT_shader_texture_lod,
    BuiltInParameters::p0H3B1B1B1C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureCubeGradEXT_0J2B2B2B(
    BuiltInId::textureCubeGradEXT_SamplerCube1_Float3_Float3_Float3,
    BuiltInName::textureCubeGradEXT,
    TExtension::EXT_shader_texture_lod,
    BuiltInParameters::p0J2B2B2B,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture2D_0H1B0B(
    BuiltInId::texture2D_Sampler2D1_Float2_Float1,
    BuiltInName::texture2D,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H1B0B1C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture2DProj_0H2B0B(
    BuiltInId::texture2DProj_Sampler2D1_Float3_Float1,
    BuiltInName::texture2DProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H2B0B1C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture2DProj_0H3B0B(
    BuiltInId::texture2DProj_Sampler2D1_Float4_Float1,
    BuiltInName::texture2DProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H3B0B1C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureCube_0J2B0B(
    BuiltInId::textureCube_SamplerCube1_Float3_Float1,
    BuiltInName::textureCube,
    TExtension::UNDEFINED,
    BuiltInParameters::p0J2B0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_dFdxExt_0B(
    BuiltInId::dFdxExt_Float1,
    BuiltInName::dFdxExt,
    TExtension::OES_standard_derivatives,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpDFdx,
    false);
constexpr const TFunction kFunction_dFdxExt_1B(
    BuiltInId::dFdxExt_Float2,
    BuiltInName::dFdxExt,
    TExtension::OES_standard_derivatives,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpDFdx,
    false);
constexpr const TFunction kFunction_dFdxExt_2B(
    BuiltInId::dFdxExt_Float3,
    BuiltInName::dFdxExt,
    TExtension::OES_standard_derivatives,
    BuiltInParameters::p2B_o_2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpDFdx,
    false);
constexpr const TFunction kFunction_dFdxExt_3B(
    BuiltInId::dFdxExt_Float4,
    BuiltInName::dFdxExt,
    TExtension::OES_standard_derivatives,
    BuiltInParameters::p3B0B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpDFdx,
    false);
constexpr const TFunction kFunction_dFdyExt_0B(
    BuiltInId::dFdyExt_Float1,
    BuiltInName::dFdyExt,
    TExtension::OES_standard_derivatives,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpDFdy,
    false);
constexpr const TFunction kFunction_dFdyExt_1B(
    BuiltInId::dFdyExt_Float2,
    BuiltInName::dFdyExt,
    TExtension::OES_standard_derivatives,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpDFdy,
    false);
constexpr const TFunction kFunction_dFdyExt_2B(
    BuiltInId::dFdyExt_Float3,
    BuiltInName::dFdyExt,
    TExtension::OES_standard_derivatives,
    BuiltInParameters::p2B_o_2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpDFdy,
    false);
constexpr const TFunction kFunction_dFdyExt_3B(
    BuiltInId::dFdyExt_Float4,
    BuiltInName::dFdyExt,
    TExtension::OES_standard_derivatives,
    BuiltInParameters::p3B0B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpDFdy,
    false);
constexpr const TFunction kFunction_fwidthExt_0B(
    BuiltInId::fwidthExt_Float1,
    BuiltInName::fwidthExt,
    TExtension::OES_standard_derivatives,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpFwidth,
    false);
constexpr const TFunction kFunction_fwidthExt_1B(
    BuiltInId::fwidthExt_Float2,
    BuiltInName::fwidthExt,
    TExtension::OES_standard_derivatives,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpFwidth,
    false);
constexpr const TFunction kFunction_fwidthExt_2B(
    BuiltInId::fwidthExt_Float3,
    BuiltInName::fwidthExt,
    TExtension::OES_standard_derivatives,
    BuiltInParameters::p2B_o_2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpFwidth,
    false);
constexpr const TFunction kFunction_fwidthExt_3B(
    BuiltInId::fwidthExt_Float4,
    BuiltInName::fwidthExt,
    TExtension::OES_standard_derivatives,
    BuiltInParameters::p3B0B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpFwidth,
    false);
constexpr const TFunction kFunction_texture2DLodEXT_0H1B0B(
    BuiltInId::texture2DLodEXT_Sampler2D1_Float2_Float1,
    BuiltInName::texture2DLodEXT,
    TExtension::EXT_shader_texture_lod,
    BuiltInParameters::p0H1B0B1C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture2DProjLodEXT_0H2B0B(
    BuiltInId::texture2DProjLodEXT_Sampler2D1_Float3_Float1,
    BuiltInName::texture2DProjLodEXT,
    TExtension::EXT_shader_texture_lod,
    BuiltInParameters::p0H2B0B1C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture2DProjLodEXT_0H3B0B(
    BuiltInId::texture2DProjLodEXT_Sampler2D1_Float4_Float1,
    BuiltInName::texture2DProjLodEXT,
    TExtension::EXT_shader_texture_lod,
    BuiltInParameters::p0H3B0B1C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureCubeLodEXT_0J2B0B(
    BuiltInId::textureCubeLodEXT_SamplerCube1_Float3_Float1,
    BuiltInName::textureCubeLodEXT,
    TExtension::EXT_shader_texture_lod,
    BuiltInParameters::p0J2B0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture3D_0I2B(
    BuiltInId::texture3D_Sampler3D1_Float3,
    BuiltInName::texture3D,
    TExtension::OES_texture_3D,
    BuiltInParameters::p0I2B0B2C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture3D_0I2B0B(
    BuiltInId::texture3D_Sampler3D1_Float3_Float1,
    BuiltInName::texture3D,
    TExtension::OES_texture_3D,
    BuiltInParameters::p0I2B0B2C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture3DProj_0I3B(
    BuiltInId::texture3DProj_Sampler3D1_Float4,
    BuiltInName::texture3DProj,
    TExtension::OES_texture_3D,
    BuiltInParameters::p0I3B2C0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture3DProj_0I3B0B(
    BuiltInId::texture3DProj_Sampler3D1_Float4_Float1,
    BuiltInName::texture3DProj,
    TExtension::OES_texture_3D,
    BuiltInParameters::p0I3B0B2C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture3DLod_0I2B0B(
    BuiltInId::texture3DLod_Sampler3D1_Float3_Float1,
    BuiltInName::texture3DLod,
    TExtension::OES_texture_3D,
    BuiltInParameters::p0I2B0B2C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture3DProjLod_0I3B0B(
    BuiltInId::texture3DProjLod_Sampler3D1_Float4_Float1,
    BuiltInName::texture3DProjLod,
    TExtension::OES_texture_3D,
    BuiltInParameters::p0I3B0B2C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture2DLod_0H1B0B(
    BuiltInId::texture2DLod_Sampler2D1_Float2_Float1,
    BuiltInName::texture2DLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H1B0B1C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture2DProjLod_0H2B0B(
    BuiltInId::texture2DProjLod_Sampler2D1_Float3_Float1,
    BuiltInName::texture2DProjLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H2B0B1C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture2DProjLod_0H3B0B(
    BuiltInId::texture2DProjLod_Sampler2D1_Float4_Float1,
    BuiltInName::texture2DProjLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H3B0B1C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureCubeLod_0J2B0B(
    BuiltInId::textureCubeLod_SamplerCube1_Float3_Float1,
    BuiltInName::textureCubeLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p0J2B0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0H1B(
    BuiltInId::texture_Sampler2D1_Float2,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H1B1B1B1C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0Q1B(
    BuiltInId::texture_ISampler2D1_Float2,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Q1B1B1B1C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0W1B(
    BuiltInId::texture_USampler2D1_Float2,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p0W1B1C0C,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0I2B(
    BuiltInId::texture_Sampler3D1_Float3,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p0I2B0B2C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0R2B(
    BuiltInId::texture_ISampler3D1_Float3,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p0R2B0B2C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0X2B(
    BuiltInId::texture_USampler3D1_Float3,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p0X2B0B2C,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0J2B(
    BuiltInId::texture_SamplerCube1_Float3,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p0J2B2B2B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0S2B(
    BuiltInId::texture_ISamplerCube1_Float3,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p0S2B0B,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0Y2B(
    BuiltInId::texture_USamplerCube1_Float3,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Y2B0B,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0K2B(
    BuiltInId::texture_Sampler2DArray1_Float3,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p0K2B0B1C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0T2B(
    BuiltInId::texture_ISampler2DArray1_Float3,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p0T2B1B1B1C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0Z2B(
    BuiltInId::texture_USampler2DArray1_Float3,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Z2B1B1B1C,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_0H2B(
    BuiltInId::textureProj_Sampler2D1_Float3,
    BuiltInName::textureProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H2B0B1C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_0Q2B(
    BuiltInId::textureProj_ISampler2D1_Float3,
    BuiltInName::textureProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Q2B1B1B1C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_0W2B(
    BuiltInId::textureProj_USampler2D1_Float3,
    BuiltInName::textureProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p0W2B1C0B,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_0H3B(
    BuiltInId::textureProj_Sampler2D1_Float4,
    BuiltInName::textureProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H3B0B1C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_0Q3B(
    BuiltInId::textureProj_ISampler2D1_Float4,
    BuiltInName::textureProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Q3B1B1B1C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_0W3B(
    BuiltInId::textureProj_USampler2D1_Float4,
    BuiltInName::textureProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p0W3B1B1B1C,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_0I3B(
    BuiltInId::textureProj_Sampler3D1_Float4,
    BuiltInName::textureProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p0I3B2C0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_0R3B(
    BuiltInId::textureProj_ISampler3D1_Float4,
    BuiltInName::textureProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p0R3B0B2C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_0X3B(
    BuiltInId::textureProj_USampler3D1_Float4,
    BuiltInName::textureProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p0X3B2B2B2C,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLod_0H1B0B(
    BuiltInId::textureLod_Sampler2D1_Float2_Float1,
    BuiltInName::textureLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H1B0B1C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLod_0Q1B0B(
    BuiltInId::textureLod_ISampler2D1_Float2_Float1,
    BuiltInName::textureLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Q1B0B1C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLod_0W1B0B(
    BuiltInId::textureLod_USampler2D1_Float2_Float1,
    BuiltInName::textureLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p0W1B0B1C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLod_0I2B0B(
    BuiltInId::textureLod_Sampler3D1_Float3_Float1,
    BuiltInName::textureLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p0I2B0B2C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLod_0R2B0B(
    BuiltInId::textureLod_ISampler3D1_Float3_Float1,
    BuiltInName::textureLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p0R2B0B2C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLod_0X2B0B(
    BuiltInId::textureLod_USampler3D1_Float3_Float1,
    BuiltInName::textureLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p0X2B0B2C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLod_0J2B0B(
    BuiltInId::textureLod_SamplerCube1_Float3_Float1,
    BuiltInName::textureLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p0J2B0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLod_0S2B0B(
    BuiltInId::textureLod_ISamplerCube1_Float3_Float1,
    BuiltInName::textureLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p0S2B0B,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLod_0Y2B0B(
    BuiltInId::textureLod_USamplerCube1_Float3_Float1,
    BuiltInName::textureLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Y2B0B,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLod_0K2B0B(
    BuiltInId::textureLod_Sampler2DArray1_Float3_Float1,
    BuiltInName::textureLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p0K2B0B1C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLod_0T2B0B(
    BuiltInId::textureLod_ISampler2DArray1_Float3_Float1,
    BuiltInName::textureLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p0T2B0B1C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLod_0Z2B0B(
    BuiltInId::textureLod_USampler2DArray1_Float3_Float1,
    BuiltInName::textureLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Z2B0B1C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0c2B(
    BuiltInId::texture_Sampler2DShadow1_Float3,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p0c2B1B1B1C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0d3B(
    BuiltInId::texture_SamplerCubeShadow1_Float4,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p0d3B2B2B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0e3B(
    BuiltInId::texture_Sampler2DArrayShadow1_Float4,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p0e3B1B1B1C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_0c3B(
    BuiltInId::textureProj_Sampler2DShadow1_Float4,
    BuiltInName::textureProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p0c3B0B1C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLod_0c2B0B(
    BuiltInId::textureLod_Sampler2DShadow1_Float3_Float1,
    BuiltInName::textureLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p0c2B0B1C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSize_0H0C(
    BuiltInId::textureSize_Sampler2D1_Int1,
    BuiltInName::textureSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSize_0Q0C(
    BuiltInId::textureSize_ISampler2D1_Int1,
    BuiltInName::textureSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Q0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSize_0W0C(
    BuiltInId::textureSize_USampler2D1_Int1,
    BuiltInName::textureSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p0W0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSize_0I0C(
    BuiltInId::textureSize_Sampler3D1_Int1,
    BuiltInName::textureSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p0I0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSize_0R0C(
    BuiltInId::textureSize_ISampler3D1_Int1,
    BuiltInName::textureSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p0R0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSize_0X0C(
    BuiltInId::textureSize_USampler3D1_Int1,
    BuiltInName::textureSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p0X0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSize_0J0C(
    BuiltInId::textureSize_SamplerCube1_Int1,
    BuiltInName::textureSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p0J0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSize_0S0C(
    BuiltInId::textureSize_ISamplerCube1_Int1,
    BuiltInName::textureSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p0S0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSize_0Y0C(
    BuiltInId::textureSize_USamplerCube1_Int1,
    BuiltInName::textureSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Y0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSize_0K0C(
    BuiltInId::textureSize_Sampler2DArray1_Int1,
    BuiltInName::textureSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p0K0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSize_0T0C(
    BuiltInId::textureSize_ISampler2DArray1_Int1,
    BuiltInName::textureSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p0T0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSize_0Z0C(
    BuiltInId::textureSize_USampler2DArray1_Int1,
    BuiltInName::textureSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Z0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSize_0c0C(
    BuiltInId::textureSize_Sampler2DShadow1_Int1,
    BuiltInName::textureSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p0c0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSize_0d0C(
    BuiltInId::textureSize_SamplerCubeShadow1_Int1,
    BuiltInName::textureSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p0d0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSize_0e0C(
    BuiltInId::textureSize_Sampler2DArrayShadow1_Int1,
    BuiltInName::textureSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p0e0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjLod_0H2B0B(
    BuiltInId::textureProjLod_Sampler2D1_Float3_Float1,
    BuiltInName::textureProjLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H2B0B1C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjLod_0Q2B0B(
    BuiltInId::textureProjLod_ISampler2D1_Float3_Float1,
    BuiltInName::textureProjLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Q2B0B1C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjLod_0W2B0B(
    BuiltInId::textureProjLod_USampler2D1_Float3_Float1,
    BuiltInName::textureProjLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p0W2B0B1C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjLod_0H3B0B(
    BuiltInId::textureProjLod_Sampler2D1_Float4_Float1,
    BuiltInName::textureProjLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H3B0B1C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjLod_0Q3B0B(
    BuiltInId::textureProjLod_ISampler2D1_Float4_Float1,
    BuiltInName::textureProjLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Q3B0B1C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjLod_0W3B0B(
    BuiltInId::textureProjLod_USampler2D1_Float4_Float1,
    BuiltInName::textureProjLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p0W3B0B1C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjLod_0I3B0B(
    BuiltInId::textureProjLod_Sampler3D1_Float4_Float1,
    BuiltInName::textureProjLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p0I3B0B2C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjLod_0R3B0B(
    BuiltInId::textureProjLod_ISampler3D1_Float4_Float1,
    BuiltInName::textureProjLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p0R3B0B2C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjLod_0X3B0B(
    BuiltInId::textureProjLod_USampler3D1_Float4_Float1,
    BuiltInName::textureProjLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p0X3B0B2C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjLod_0c3B0B(
    BuiltInId::textureProjLod_Sampler2DShadow1_Float4_Float1,
    BuiltInName::textureProjLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p0c3B0B1C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetch_0H1C0C(
    BuiltInId::texelFetch_Sampler2D1_Int2_Int1,
    BuiltInName::texelFetch,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H1C0C1C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetch_0Q1C0C(
    BuiltInId::texelFetch_ISampler2D1_Int2_Int1,
    BuiltInName::texelFetch,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Q1C0C1C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetch_0W1C0C(
    BuiltInId::texelFetch_USampler2D1_Int2_Int1,
    BuiltInName::texelFetch,
    TExtension::UNDEFINED,
    BuiltInParameters::p0W1C0C1C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetch_0I2C0C(
    BuiltInId::texelFetch_Sampler3D1_Int3_Int1,
    BuiltInName::texelFetch,
    TExtension::UNDEFINED,
    BuiltInParameters::p0I2C0C2C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetch_0R2C0C(
    BuiltInId::texelFetch_ISampler3D1_Int3_Int1,
    BuiltInName::texelFetch,
    TExtension::UNDEFINED,
    BuiltInParameters::p0R2C0C2C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetch_0X2C0C(
    BuiltInId::texelFetch_USampler3D1_Int3_Int1,
    BuiltInName::texelFetch,
    TExtension::UNDEFINED,
    BuiltInParameters::p0X2C0C2C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetch_0K2C0C(
    BuiltInId::texelFetch_Sampler2DArray1_Int3_Int1,
    BuiltInName::texelFetch,
    TExtension::UNDEFINED,
    BuiltInParameters::p0K2C0C1C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetch_0T2C0C(
    BuiltInId::texelFetch_ISampler2DArray1_Int3_Int1,
    BuiltInName::texelFetch,
    TExtension::UNDEFINED,
    BuiltInParameters::p0T2C0C1C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetch_0Z2C0C(
    BuiltInId::texelFetch_USampler2DArray1_Int3_Int1,
    BuiltInName::texelFetch,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Z2C0C1C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGrad_0H1B1B1B(
    BuiltInId::textureGrad_Sampler2D1_Float2_Float2_Float2,
    BuiltInName::textureGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H1B1B1B1C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGrad_0Q1B1B1B(
    BuiltInId::textureGrad_ISampler2D1_Float2_Float2_Float2,
    BuiltInName::textureGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Q1B1B1B1C,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGrad_0W1B1B1B(
    BuiltInId::textureGrad_USampler2D1_Float2_Float2_Float2,
    BuiltInName::textureGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0W1B1B1B1C,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGrad_0I2B2B2B(
    BuiltInId::textureGrad_Sampler3D1_Float3_Float3_Float3,
    BuiltInName::textureGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0I2B2B2B2C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGrad_0R2B2B2B(
    BuiltInId::textureGrad_ISampler3D1_Float3_Float3_Float3,
    BuiltInName::textureGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0R2B2B2B2C,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGrad_0X2B2B2B(
    BuiltInId::textureGrad_USampler3D1_Float3_Float3_Float3,
    BuiltInName::textureGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0X2B2B2B2C,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGrad_0J2B2B2B(
    BuiltInId::textureGrad_SamplerCube1_Float3_Float3_Float3,
    BuiltInName::textureGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0J2B2B2B,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGrad_0S2B2B2B(
    BuiltInId::textureGrad_ISamplerCube1_Float3_Float3_Float3,
    BuiltInName::textureGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0S2B2B2B,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGrad_0Y2B2B2B(
    BuiltInId::textureGrad_USamplerCube1_Float3_Float3_Float3,
    BuiltInName::textureGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Y2B2B2B,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGrad_0c2B1B1B(
    BuiltInId::textureGrad_Sampler2DShadow1_Float3_Float2_Float2,
    BuiltInName::textureGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0c2B1B1B1C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGrad_0d3B2B2B(
    BuiltInId::textureGrad_SamplerCubeShadow1_Float4_Float3_Float3,
    BuiltInName::textureGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0d3B2B2B,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGrad_0K2B1B1B(
    BuiltInId::textureGrad_Sampler2DArray1_Float3_Float2_Float2,
    BuiltInName::textureGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0K2B1B1B1C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGrad_0T2B1B1B(
    BuiltInId::textureGrad_ISampler2DArray1_Float3_Float2_Float2,
    BuiltInName::textureGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0T2B1B1B1C,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGrad_0Z2B1B1B(
    BuiltInId::textureGrad_USampler2DArray1_Float3_Float2_Float2,
    BuiltInName::textureGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Z2B1B1B1C,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGrad_0e3B1B1B(
    BuiltInId::textureGrad_Sampler2DArrayShadow1_Float4_Float2_Float2,
    BuiltInName::textureGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0e3B1B1B1C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjGrad_0H2B1B1B(
    BuiltInId::textureProjGrad_Sampler2D1_Float3_Float2_Float2,
    BuiltInName::textureProjGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H2B1B1B1C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjGrad_0Q2B1B1B(
    BuiltInId::textureProjGrad_ISampler2D1_Float3_Float2_Float2,
    BuiltInName::textureProjGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Q2B1B1B1C,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjGrad_0W2B1B1B(
    BuiltInId::textureProjGrad_USampler2D1_Float3_Float2_Float2,
    BuiltInName::textureProjGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0W2B1B1B1C,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjGrad_0H3B1B1B(
    BuiltInId::textureProjGrad_Sampler2D1_Float4_Float2_Float2,
    BuiltInName::textureProjGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H3B1B1B1C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjGrad_0Q3B1B1B(
    BuiltInId::textureProjGrad_ISampler2D1_Float4_Float2_Float2,
    BuiltInName::textureProjGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Q3B1B1B1C,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjGrad_0W3B1B1B(
    BuiltInId::textureProjGrad_USampler2D1_Float4_Float2_Float2,
    BuiltInName::textureProjGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0W3B1B1B1C,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjGrad_0I3B2B2B(
    BuiltInId::textureProjGrad_Sampler3D1_Float4_Float3_Float3,
    BuiltInName::textureProjGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0I3B2B2B2C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjGrad_0R3B2B2B(
    BuiltInId::textureProjGrad_ISampler3D1_Float4_Float3_Float3,
    BuiltInName::textureProjGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0R3B2B2B2C,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjGrad_0X3B2B2B(
    BuiltInId::textureProjGrad_USampler3D1_Float4_Float3_Float3,
    BuiltInName::textureProjGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0X3B2B2B2C,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjGrad_0c3B1B1B(
    BuiltInId::textureProjGrad_Sampler2DShadow1_Float4_Float2_Float2,
    BuiltInName::textureProjGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0c3B1B1B1C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSize_0O(
    BuiltInId::textureSize_Sampler2DMS1,
    BuiltInName::textureSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p0O1C0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSize_0U(
    BuiltInId::textureSize_ISampler2DMS1,
    BuiltInName::textureSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p0U1C0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSize_0a(
    BuiltInId::textureSize_USampler2DMS1,
    BuiltInName::textureSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p0a1C0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSizeExt_0O(
    BuiltInId::textureSizeExt_Sampler2DMS1,
    BuiltInName::textureSizeExt,
    TExtension::ANGLE_texture_multisample,
    BuiltInParameters::p0O1C0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSizeExt_0U(
    BuiltInId::textureSizeExt_ISampler2DMS1,
    BuiltInName::textureSizeExt,
    TExtension::ANGLE_texture_multisample,
    BuiltInParameters::p0U1C0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSizeExt_0a(
    BuiltInId::textureSizeExt_USampler2DMS1,
    BuiltInName::textureSizeExt,
    TExtension::ANGLE_texture_multisample,
    BuiltInParameters::p0a1C0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSize_0P(
    BuiltInId::textureSize_Sampler2DMSArray1,
    BuiltInName::textureSize,
    TExtension::OES_texture_storage_multisample_2d_array,
    BuiltInParameters::p0P2C0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSize_0V(
    BuiltInId::textureSize_ISampler2DMSArray1,
    BuiltInName::textureSize,
    TExtension::OES_texture_storage_multisample_2d_array,
    BuiltInParameters::p0V2C0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSize_0b(
    BuiltInId::textureSize_USampler2DMSArray1,
    BuiltInName::textureSize,
    TExtension::OES_texture_storage_multisample_2d_array,
    BuiltInParameters::p0b2C0C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureOffset_0H1B1C(
    BuiltInId::textureOffset_Sampler2D1_Float2_Int2,
    BuiltInName::textureOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H1B1C0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureOffset_0Q1B1C(
    BuiltInId::textureOffset_ISampler2D1_Float2_Int2,
    BuiltInName::textureOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Q1B1C0C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureOffset_0W1B1C(
    BuiltInId::textureOffset_USampler2D1_Float2_Int2,
    BuiltInName::textureOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0W1B1C0C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureOffset_0I2B2C(
    BuiltInId::textureOffset_Sampler3D1_Float3_Int3,
    BuiltInName::textureOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0I2B2C0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureOffset_0R2B2C(
    BuiltInId::textureOffset_ISampler3D1_Float3_Int3,
    BuiltInName::textureOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0R2B2C0B,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureOffset_0X2B2C(
    BuiltInId::textureOffset_USampler3D1_Float3_Int3,
    BuiltInName::textureOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0X2B2C0B,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureOffset_0c2B1C(
    BuiltInId::textureOffset_Sampler2DShadow1_Float3_Int2,
    BuiltInName::textureOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0c2B1C0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureOffset_0K2B1C(
    BuiltInId::textureOffset_Sampler2DArray1_Float3_Int2,
    BuiltInName::textureOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0K2B1C0C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureOffset_0T2B1C(
    BuiltInId::textureOffset_ISampler2DArray1_Float3_Int2,
    BuiltInName::textureOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0T2B1C0C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureOffset_0Z2B1C(
    BuiltInId::textureOffset_USampler2DArray1_Float3_Int2,
    BuiltInName::textureOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Z2B1C0C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjOffset_0H2B1C(
    BuiltInId::textureProjOffset_Sampler2D1_Float3_Int2,
    BuiltInName::textureProjOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H2B1C0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjOffset_0Q2B1C(
    BuiltInId::textureProjOffset_ISampler2D1_Float3_Int2,
    BuiltInName::textureProjOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Q2B1C0B,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjOffset_0W2B1C(
    BuiltInId::textureProjOffset_USampler2D1_Float3_Int2,
    BuiltInName::textureProjOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0W2B1C0B,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjOffset_0H3B1C(
    BuiltInId::textureProjOffset_Sampler2D1_Float4_Int2,
    BuiltInName::textureProjOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H3B1C0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjOffset_0Q3B1C(
    BuiltInId::textureProjOffset_ISampler2D1_Float4_Int2,
    BuiltInName::textureProjOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Q3B1C0B,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjOffset_0W3B1C(
    BuiltInId::textureProjOffset_USampler2D1_Float4_Int2,
    BuiltInName::textureProjOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0W3B1C0B,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjOffset_0I3B2C(
    BuiltInId::textureProjOffset_Sampler3D1_Float4_Int3,
    BuiltInName::textureProjOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0I3B2C0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjOffset_0R3B2C(
    BuiltInId::textureProjOffset_ISampler3D1_Float4_Int3,
    BuiltInName::textureProjOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0R3B2C0B,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjOffset_0X3B2C(
    BuiltInId::textureProjOffset_USampler3D1_Float4_Int3,
    BuiltInName::textureProjOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0X3B2C0B,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjOffset_0c3B1C(
    BuiltInId::textureProjOffset_Sampler2DShadow1_Float4_Int2,
    BuiltInName::textureProjOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0c3B1C0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLodOffset_0H1B0B1C(
    BuiltInId::textureLodOffset_Sampler2D1_Float2_Float1_Int2,
    BuiltInName::textureLodOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H1B0B1C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLodOffset_0Q1B0B1C(
    BuiltInId::textureLodOffset_ISampler2D1_Float2_Float1_Int2,
    BuiltInName::textureLodOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Q1B0B1C,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLodOffset_0W1B0B1C(
    BuiltInId::textureLodOffset_USampler2D1_Float2_Float1_Int2,
    BuiltInName::textureLodOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0W1B0B1C,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLodOffset_0I2B0B2C(
    BuiltInId::textureLodOffset_Sampler3D1_Float3_Float1_Int3,
    BuiltInName::textureLodOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0I2B0B2C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLodOffset_0R2B0B2C(
    BuiltInId::textureLodOffset_ISampler3D1_Float3_Float1_Int3,
    BuiltInName::textureLodOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0R2B0B2C,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLodOffset_0X2B0B2C(
    BuiltInId::textureLodOffset_USampler3D1_Float3_Float1_Int3,
    BuiltInName::textureLodOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0X2B0B2C,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLodOffset_0c2B0B1C(
    BuiltInId::textureLodOffset_Sampler2DShadow1_Float3_Float1_Int2,
    BuiltInName::textureLodOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0c2B0B1C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLodOffset_0K2B0B1C(
    BuiltInId::textureLodOffset_Sampler2DArray1_Float3_Float1_Int2,
    BuiltInName::textureLodOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0K2B0B1C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLodOffset_0T2B0B1C(
    BuiltInId::textureLodOffset_ISampler2DArray1_Float3_Float1_Int2,
    BuiltInName::textureLodOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0T2B0B1C,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLodOffset_0Z2B0B1C(
    BuiltInId::textureLodOffset_USampler2DArray1_Float3_Float1_Int2,
    BuiltInName::textureLodOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Z2B0B1C,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjLodOffset_0H2B0B1C(
    BuiltInId::textureProjLodOffset_Sampler2D1_Float3_Float1_Int2,
    BuiltInName::textureProjLodOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H2B0B1C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjLodOffset_0Q2B0B1C(
    BuiltInId::textureProjLodOffset_ISampler2D1_Float3_Float1_Int2,
    BuiltInName::textureProjLodOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Q2B0B1C,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjLodOffset_0W2B0B1C(
    BuiltInId::textureProjLodOffset_USampler2D1_Float3_Float1_Int2,
    BuiltInName::textureProjLodOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0W2B0B1C,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjLodOffset_0H3B0B1C(
    BuiltInId::textureProjLodOffset_Sampler2D1_Float4_Float1_Int2,
    BuiltInName::textureProjLodOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H3B0B1C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjLodOffset_0Q3B0B1C(
    BuiltInId::textureProjLodOffset_ISampler2D1_Float4_Float1_Int2,
    BuiltInName::textureProjLodOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Q3B0B1C,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjLodOffset_0W3B0B1C(
    BuiltInId::textureProjLodOffset_USampler2D1_Float4_Float1_Int2,
    BuiltInName::textureProjLodOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0W3B0B1C,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjLodOffset_0I3B0B2C(
    BuiltInId::textureProjLodOffset_Sampler3D1_Float4_Float1_Int3,
    BuiltInName::textureProjLodOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0I3B0B2C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjLodOffset_0R3B0B2C(
    BuiltInId::textureProjLodOffset_ISampler3D1_Float4_Float1_Int3,
    BuiltInName::textureProjLodOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0R3B0B2C,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjLodOffset_0X3B0B2C(
    BuiltInId::textureProjLodOffset_USampler3D1_Float4_Float1_Int3,
    BuiltInName::textureProjLodOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0X3B0B2C,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjLodOffset_0c3B0B1C(
    BuiltInId::textureProjLodOffset_Sampler2DShadow1_Float4_Float1_Int2,
    BuiltInName::textureProjLodOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0c3B0B1C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetchOffset_0H1C0C1C(
    BuiltInId::texelFetchOffset_Sampler2D1_Int2_Int1_Int2,
    BuiltInName::texelFetchOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H1C0C1C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetchOffset_0Q1C0C1C(
    BuiltInId::texelFetchOffset_ISampler2D1_Int2_Int1_Int2,
    BuiltInName::texelFetchOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Q1C0C1C,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetchOffset_0W1C0C1C(
    BuiltInId::texelFetchOffset_USampler2D1_Int2_Int1_Int2,
    BuiltInName::texelFetchOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0W1C0C1C,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetchOffset_0I2C0C2C(
    BuiltInId::texelFetchOffset_Sampler3D1_Int3_Int1_Int3,
    BuiltInName::texelFetchOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0I2C0C2C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetchOffset_0R2C0C2C(
    BuiltInId::texelFetchOffset_ISampler3D1_Int3_Int1_Int3,
    BuiltInName::texelFetchOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0R2C0C2C,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetchOffset_0X2C0C2C(
    BuiltInId::texelFetchOffset_USampler3D1_Int3_Int1_Int3,
    BuiltInName::texelFetchOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0X2C0C2C,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetchOffset_0K2C0C1C(
    BuiltInId::texelFetchOffset_Sampler2DArray1_Int3_Int1_Int2,
    BuiltInName::texelFetchOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0K2C0C1C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetchOffset_0T2C0C1C(
    BuiltInId::texelFetchOffset_ISampler2DArray1_Int3_Int1_Int2,
    BuiltInName::texelFetchOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0T2C0C1C,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetchOffset_0Z2C0C1C(
    BuiltInId::texelFetchOffset_USampler2DArray1_Int3_Int1_Int2,
    BuiltInName::texelFetchOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Z2C0C1C,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGradOffset_0H1B1B1B1C(
    BuiltInId::textureGradOffset_Sampler2D1_Float2_Float2_Float2_Int2,
    BuiltInName::textureGradOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H1B1B1B1C,
    5,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGradOffset_0Q1B1B1B1C(
    BuiltInId::textureGradOffset_ISampler2D1_Float2_Float2_Float2_Int2,
    BuiltInName::textureGradOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Q1B1B1B1C,
    5,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGradOffset_0W1B1B1B1C(
    BuiltInId::textureGradOffset_USampler2D1_Float2_Float2_Float2_Int2,
    BuiltInName::textureGradOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0W1B1B1B1C,
    5,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGradOffset_0I2B2B2B2C(
    BuiltInId::textureGradOffset_Sampler3D1_Float3_Float3_Float3_Int3,
    BuiltInName::textureGradOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0I2B2B2B2C,
    5,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGradOffset_0R2B2B2B2C(
    BuiltInId::textureGradOffset_ISampler3D1_Float3_Float3_Float3_Int3,
    BuiltInName::textureGradOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0R2B2B2B2C,
    5,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGradOffset_0X2B2B2B2C(
    BuiltInId::textureGradOffset_USampler3D1_Float3_Float3_Float3_Int3,
    BuiltInName::textureGradOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0X2B2B2B2C,
    5,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGradOffset_0c2B1B1B1C(
    BuiltInId::textureGradOffset_Sampler2DShadow1_Float3_Float2_Float2_Int2,
    BuiltInName::textureGradOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0c2B1B1B1C,
    5,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGradOffset_0K2B1B1B1C(
    BuiltInId::textureGradOffset_Sampler2DArray1_Float3_Float2_Float2_Int2,
    BuiltInName::textureGradOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0K2B1B1B1C,
    5,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGradOffset_0T2B1B1B1C(
    BuiltInId::textureGradOffset_ISampler2DArray1_Float3_Float2_Float2_Int2,
    BuiltInName::textureGradOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0T2B1B1B1C,
    5,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGradOffset_0Z2B1B1B1C(
    BuiltInId::textureGradOffset_USampler2DArray1_Float3_Float2_Float2_Int2,
    BuiltInName::textureGradOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Z2B1B1B1C,
    5,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGradOffset_0e3B1B1B1C(
    BuiltInId::textureGradOffset_Sampler2DArrayShadow1_Float4_Float2_Float2_Int2,
    BuiltInName::textureGradOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0e3B1B1B1C,
    5,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjGradOffset_0H2B1B1B1C(
    BuiltInId::textureProjGradOffset_Sampler2D1_Float3_Float2_Float2_Int2,
    BuiltInName::textureProjGradOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H2B1B1B1C,
    5,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjGradOffset_0Q2B1B1B1C(
    BuiltInId::textureProjGradOffset_ISampler2D1_Float3_Float2_Float2_Int2,
    BuiltInName::textureProjGradOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Q2B1B1B1C,
    5,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjGradOffset_0W2B1B1B1C(
    BuiltInId::textureProjGradOffset_USampler2D1_Float3_Float2_Float2_Int2,
    BuiltInName::textureProjGradOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0W2B1B1B1C,
    5,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjGradOffset_0H3B1B1B1C(
    BuiltInId::textureProjGradOffset_Sampler2D1_Float4_Float2_Float2_Int2,
    BuiltInName::textureProjGradOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H3B1B1B1C,
    5,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjGradOffset_0Q3B1B1B1C(
    BuiltInId::textureProjGradOffset_ISampler2D1_Float4_Float2_Float2_Int2,
    BuiltInName::textureProjGradOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Q3B1B1B1C,
    5,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjGradOffset_0W3B1B1B1C(
    BuiltInId::textureProjGradOffset_USampler2D1_Float4_Float2_Float2_Int2,
    BuiltInName::textureProjGradOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0W3B1B1B1C,
    5,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjGradOffset_0I3B2B2B2C(
    BuiltInId::textureProjGradOffset_Sampler3D1_Float4_Float3_Float3_Int3,
    BuiltInName::textureProjGradOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0I3B2B2B2C,
    5,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjGradOffset_0R3B2B2B2C(
    BuiltInId::textureProjGradOffset_ISampler3D1_Float4_Float3_Float3_Int3,
    BuiltInName::textureProjGradOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0R3B2B2B2C,
    5,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjGradOffset_0X3B2B2B2C(
    BuiltInId::textureProjGradOffset_USampler3D1_Float4_Float3_Float3_Int3,
    BuiltInName::textureProjGradOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0X3B2B2B2C,
    5,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjGradOffset_0c3B1B1B1C(
    BuiltInId::textureProjGradOffset_Sampler2DShadow1_Float4_Float2_Float2_Int2,
    BuiltInName::textureProjGradOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0c3B1B1B1C,
    5,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureOffset_0H1B1C0B(
    BuiltInId::textureOffset_Sampler2D1_Float2_Int2_Float1,
    BuiltInName::textureOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H1B1C0B,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureOffset_0Q1B1C0B(
    BuiltInId::textureOffset_ISampler2D1_Float2_Int2_Float1,
    BuiltInName::textureOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Q1B1C0B,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureOffset_0W1B1C0B(
    BuiltInId::textureOffset_USampler2D1_Float2_Int2_Float1,
    BuiltInName::textureOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0W1B1C0B,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureOffset_0I2B2C0B(
    BuiltInId::textureOffset_Sampler3D1_Float3_Int3_Float1,
    BuiltInName::textureOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0I2B2C0B,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureOffset_0R2B2C0B(
    BuiltInId::textureOffset_ISampler3D1_Float3_Int3_Float1,
    BuiltInName::textureOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0R2B2C0B,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureOffset_0X2B2C0B(
    BuiltInId::textureOffset_USampler3D1_Float3_Int3_Float1,
    BuiltInName::textureOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0X2B2C0B,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureOffset_0c2B1C0B(
    BuiltInId::textureOffset_Sampler2DShadow1_Float3_Int2_Float1,
    BuiltInName::textureOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0c2B1C0B,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureOffset_0K2B1C0B(
    BuiltInId::textureOffset_Sampler2DArray1_Float3_Int2_Float1,
    BuiltInName::textureOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0K2B1C0B,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureOffset_0T2B1C0B(
    BuiltInId::textureOffset_ISampler2DArray1_Float3_Int2_Float1,
    BuiltInName::textureOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0T2B1C0B,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureOffset_0Z2B1C0B(
    BuiltInId::textureOffset_USampler2DArray1_Float3_Int2_Float1,
    BuiltInName::textureOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Z2B1C0B,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjOffset_0H2B1C0B(
    BuiltInId::textureProjOffset_Sampler2D1_Float3_Int2_Float1,
    BuiltInName::textureProjOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H2B1C0B,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjOffset_0Q2B1C0B(
    BuiltInId::textureProjOffset_ISampler2D1_Float3_Int2_Float1,
    BuiltInName::textureProjOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Q2B1C0B,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjOffset_0W2B1C0B(
    BuiltInId::textureProjOffset_USampler2D1_Float3_Int2_Float1,
    BuiltInName::textureProjOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0W2B1C0B,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjOffset_0H3B1C0B(
    BuiltInId::textureProjOffset_Sampler2D1_Float4_Int2_Float1,
    BuiltInName::textureProjOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H3B1C0B,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjOffset_0Q3B1C0B(
    BuiltInId::textureProjOffset_ISampler2D1_Float4_Int2_Float1,
    BuiltInName::textureProjOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Q3B1C0B,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjOffset_0W3B1C0B(
    BuiltInId::textureProjOffset_USampler2D1_Float4_Int2_Float1,
    BuiltInName::textureProjOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0W3B1C0B,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjOffset_0I3B2C0B(
    BuiltInId::textureProjOffset_Sampler3D1_Float4_Int3_Float1,
    BuiltInName::textureProjOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0I3B2C0B,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjOffset_0R3B2C0B(
    BuiltInId::textureProjOffset_ISampler3D1_Float4_Int3_Float1,
    BuiltInName::textureProjOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0R3B2C0B,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjOffset_0X3B2C0B(
    BuiltInId::textureProjOffset_USampler3D1_Float4_Int3_Float1,
    BuiltInName::textureProjOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0X3B2C0B,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjOffset_0c3B1C0B(
    BuiltInId::textureProjOffset_Sampler2DShadow1_Float4_Int2_Float1,
    BuiltInName::textureProjOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0c3B1C0B,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0L1B(
    BuiltInId::texture_SamplerExternalOES1_Float2,
    BuiltInName::texture,
    TExtension::OES_EGL_image_external_essl3,
    BuiltInParameters::p0L1B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_0L2B(
    BuiltInId::textureProj_SamplerExternalOES1_Float3,
    BuiltInName::textureProj,
    TExtension::OES_EGL_image_external_essl3,
    BuiltInParameters::p0L2B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_0L3B(
    BuiltInId::textureProj_SamplerExternalOES1_Float4,
    BuiltInName::textureProj,
    TExtension::OES_EGL_image_external_essl3,
    BuiltInParameters::p0L3B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSize_0L0C(
    BuiltInId::textureSize_SamplerExternalOES1_Int1,
    BuiltInName::textureSize,
    TExtension::OES_EGL_image_external_essl3,
    BuiltInParameters::p0L0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetch_0L1C0C(
    BuiltInId::texelFetch_SamplerExternalOES1_Int2_Int1,
    BuiltInName::texelFetch,
    TExtension::OES_EGL_image_external_essl3,
    BuiltInParameters::p0L1C0C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0M1B(
    BuiltInId::texture_SamplerExternal2DY2YEXT1_Float2,
    BuiltInName::texture,
    TExtension::EXT_YUV_target,
    BuiltInParameters::p0M1B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_0M2B(
    BuiltInId::textureProj_SamplerExternal2DY2YEXT1_Float3,
    BuiltInName::textureProj,
    TExtension::EXT_YUV_target,
    BuiltInParameters::p0M2B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_0M3B(
    BuiltInId::textureProj_SamplerExternal2DY2YEXT1_Float4,
    BuiltInName::textureProj,
    TExtension::EXT_YUV_target,
    BuiltInParameters::p0M3B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_rgb_2_yuv_2B0G(
    BuiltInId::rgb_2_yuv_Float3_YuvCscStandardEXT1,
    BuiltInName::rgb_2_yuv,
    TExtension::EXT_YUV_target,
    BuiltInParameters::p2B0G,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_yuv_2_rgb_2B0G(
    BuiltInId::yuv_2_rgb_Float3_YuvCscStandardEXT1,
    BuiltInName::yuv_2_rgb,
    TExtension::EXT_YUV_target,
    BuiltInParameters::p2B0G,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSize_0M0C(
    BuiltInId::textureSize_SamplerExternal2DY2YEXT1_Int1,
    BuiltInName::textureSize,
    TExtension::EXT_YUV_target,
    BuiltInParameters::p0M0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetch_0M1C0C(
    BuiltInId::texelFetch_SamplerExternal2DY2YEXT1_Int2_Int1,
    BuiltInName::texelFetch,
    TExtension::EXT_YUV_target,
    BuiltInParameters::p0M1C0C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0H1B0B(
    BuiltInId::texture_Sampler2D1_Float2_Float1,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H1B0B1C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0Q1B0B(
    BuiltInId::texture_ISampler2D1_Float2_Float1,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Q1B0B1C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0W1B0B(
    BuiltInId::texture_USampler2D1_Float2_Float1,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p0W1B0B1C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0I2B0B(
    BuiltInId::texture_Sampler3D1_Float3_Float1,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p0I2B0B2C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0R2B0B(
    BuiltInId::texture_ISampler3D1_Float3_Float1,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p0R2B0B2C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0X2B0B(
    BuiltInId::texture_USampler3D1_Float3_Float1,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p0X2B0B2C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0J2B0B(
    BuiltInId::texture_SamplerCube1_Float3_Float1,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p0J2B0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0S2B0B(
    BuiltInId::texture_ISamplerCube1_Float3_Float1,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p0S2B0B,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0Y2B0B(
    BuiltInId::texture_USamplerCube1_Float3_Float1,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Y2B0B,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0K2B0B(
    BuiltInId::texture_Sampler2DArray1_Float3_Float1,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p0K2B0B1C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0T2B0B(
    BuiltInId::texture_ISampler2DArray1_Float3_Float1,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p0T2B0B1C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0Z2B0B(
    BuiltInId::texture_USampler2DArray1_Float3_Float1,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Z2B0B1C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_0H2B0B(
    BuiltInId::textureProj_Sampler2D1_Float3_Float1,
    BuiltInName::textureProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H2B0B1C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_0Q2B0B(
    BuiltInId::textureProj_ISampler2D1_Float3_Float1,
    BuiltInName::textureProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Q2B0B1C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_0W2B0B(
    BuiltInId::textureProj_USampler2D1_Float3_Float1,
    BuiltInName::textureProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p0W2B0B1C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_0H3B0B(
    BuiltInId::textureProj_Sampler2D1_Float4_Float1,
    BuiltInName::textureProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H3B0B1C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_0Q3B0B(
    BuiltInId::textureProj_ISampler2D1_Float4_Float1,
    BuiltInName::textureProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Q3B0B1C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_0W3B0B(
    BuiltInId::textureProj_USampler2D1_Float4_Float1,
    BuiltInName::textureProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p0W3B0B1C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_0I3B0B(
    BuiltInId::textureProj_Sampler3D1_Float4_Float1,
    BuiltInName::textureProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p0I3B0B2C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_0R3B0B(
    BuiltInId::textureProj_ISampler3D1_Float4_Float1,
    BuiltInName::textureProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p0R3B0B2C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_0X3B0B(
    BuiltInId::textureProj_USampler3D1_Float4_Float1,
    BuiltInName::textureProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p0X3B0B2C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0c2B0B(
    BuiltInId::texture_Sampler2DShadow1_Float3_Float1,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p0c2B0B1C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0d3B0B(
    BuiltInId::texture_SamplerCubeShadow1_Float4_Float1,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p0d3B0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_0c3B0B(
    BuiltInId::textureProj_Sampler2DShadow1_Float4_Float1,
    BuiltInName::textureProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p0c3B0B1C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0L1B0B(
    BuiltInId::texture_SamplerExternalOES1_Float2_Float1,
    BuiltInName::texture,
    TExtension::OES_EGL_image_external_essl3,
    BuiltInParameters::p0L1B0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_0L2B0B(
    BuiltInId::textureProj_SamplerExternalOES1_Float3_Float1,
    BuiltInName::textureProj,
    TExtension::OES_EGL_image_external_essl3,
    BuiltInParameters::p0L2B0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_0L3B0B(
    BuiltInId::textureProj_SamplerExternalOES1_Float4_Float1,
    BuiltInName::textureProj,
    TExtension::OES_EGL_image_external_essl3,
    BuiltInParameters::p0L3B0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_0M1B0B(
    BuiltInId::texture_SamplerExternal2DY2YEXT1_Float2_Float1,
    BuiltInName::texture,
    TExtension::EXT_YUV_target,
    BuiltInParameters::p0M1B0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_0M2B0B(
    BuiltInId::textureProj_SamplerExternal2DY2YEXT1_Float3_Float1,
    BuiltInName::textureProj,
    TExtension::EXT_YUV_target,
    BuiltInParameters::p0M2B0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_0M3B0B(
    BuiltInId::textureProj_SamplerExternal2DY2YEXT1_Float4_Float1,
    BuiltInName::textureProj,
    TExtension::EXT_YUV_target,
    BuiltInParameters::p0M3B0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetch_0O1C0C(
    BuiltInId::texelFetch_Sampler2DMS1_Int2_Int1,
    BuiltInName::texelFetch,
    TExtension::UNDEFINED,
    BuiltInParameters::p0O1C0C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetch_0U1C0C(
    BuiltInId::texelFetch_ISampler2DMS1_Int2_Int1,
    BuiltInName::texelFetch,
    TExtension::UNDEFINED,
    BuiltInParameters::p0U1C0C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetch_0a1C0C(
    BuiltInId::texelFetch_USampler2DMS1_Int2_Int1,
    BuiltInName::texelFetch,
    TExtension::UNDEFINED,
    BuiltInParameters::p0a1C0C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetchExt_0O1C0C(
    BuiltInId::texelFetchExt_Sampler2DMS1_Int2_Int1,
    BuiltInName::texelFetchExt,
    TExtension::ANGLE_texture_multisample,
    BuiltInParameters::p0O1C0C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetchExt_0U1C0C(
    BuiltInId::texelFetchExt_ISampler2DMS1_Int2_Int1,
    BuiltInName::texelFetchExt,
    TExtension::ANGLE_texture_multisample,
    BuiltInParameters::p0U1C0C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetchExt_0a1C0C(
    BuiltInId::texelFetchExt_USampler2DMS1_Int2_Int1,
    BuiltInName::texelFetchExt,
    TExtension::ANGLE_texture_multisample,
    BuiltInParameters::p0a1C0C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetch_0P2C0C(
    BuiltInId::texelFetch_Sampler2DMSArray1_Int3_Int1,
    BuiltInName::texelFetch,
    TExtension::OES_texture_storage_multisample_2d_array,
    BuiltInParameters::p0P2C0C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetch_0V2C0C(
    BuiltInId::texelFetch_ISampler2DMSArray1_Int3_Int1,
    BuiltInName::texelFetch,
    TExtension::OES_texture_storage_multisample_2d_array,
    BuiltInParameters::p0V2C0C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetch_0b2C0C(
    BuiltInId::texelFetch_USampler2DMSArray1_Int3_Int1,
    BuiltInName::texelFetch,
    TExtension::OES_texture_storage_multisample_2d_array,
    BuiltInParameters::p0b2C0C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_0H1B(
    BuiltInId::textureGather_Sampler2D1_Float2,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H1B1B1B1C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_0Q1B(
    BuiltInId::textureGather_ISampler2D1_Float2,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Q1B1B1B1C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_0W1B(
    BuiltInId::textureGather_USampler2D1_Float2,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p0W1B1C0C,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_0H1B0C(
    BuiltInId::textureGather_Sampler2D1_Float2_Int1,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H1B0C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_0Q1B0C(
    BuiltInId::textureGather_ISampler2D1_Float2_Int1,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Q1B0C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_0W1B0C(
    BuiltInId::textureGather_USampler2D1_Float2_Int1,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p0W1B0C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_0K2B(
    BuiltInId::textureGather_Sampler2DArray1_Float3,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p0K2B0B1C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_0T2B(
    BuiltInId::textureGather_ISampler2DArray1_Float3,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p0T2B1B1B1C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_0Z2B(
    BuiltInId::textureGather_USampler2DArray1_Float3,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Z2B1B1B1C,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_0K2B0C(
    BuiltInId::textureGather_Sampler2DArray1_Float3_Int1,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p0K2B0C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_0T2B0C(
    BuiltInId::textureGather_ISampler2DArray1_Float3_Int1,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p0T2B0C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_0Z2B0C(
    BuiltInId::textureGather_USampler2DArray1_Float3_Int1,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Z2B0C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_0J2B(
    BuiltInId::textureGather_SamplerCube1_Float3,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p0J2B2B2B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_0S2B(
    BuiltInId::textureGather_ISamplerCube1_Float3,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p0S2B0B,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_0Y2B(
    BuiltInId::textureGather_USamplerCube1_Float3,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Y2B0B,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_0J2B0C(
    BuiltInId::textureGather_SamplerCube1_Float3_Int1,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p0J2B0C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_0S2B0C(
    BuiltInId::textureGather_ISamplerCube1_Float3_Int1,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p0S2B0C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_0Y2B0C(
    BuiltInId::textureGather_USamplerCube1_Float3_Int1,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Y2B0C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_0c1B(
    BuiltInId::textureGather_Sampler2DShadow1_Float2,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p0c1B0B1C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_0c1B0B(
    BuiltInId::textureGather_Sampler2DShadow1_Float2_Float1,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p0c1B0B1C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_0e2B(
    BuiltInId::textureGather_Sampler2DArrayShadow1_Float3,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p0e2B0B1C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_0e2B0B(
    BuiltInId::textureGather_Sampler2DArrayShadow1_Float3_Float1,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p0e2B0B1C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_0d2B(
    BuiltInId::textureGather_SamplerCubeShadow1_Float3,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p0d2B0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_0d2B0B(
    BuiltInId::textureGather_SamplerCubeShadow1_Float3_Float1,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p0d2B0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGatherOffset_0H1B1C(
    BuiltInId::textureGatherOffset_Sampler2D1_Float2_Int2,
    BuiltInName::textureGatherOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H1B1C0B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGatherOffset_0Q1B1C(
    BuiltInId::textureGatherOffset_ISampler2D1_Float2_Int2,
    BuiltInName::textureGatherOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Q1B1C0C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGatherOffset_0W1B1C(
    BuiltInId::textureGatherOffset_USampler2D1_Float2_Int2,
    BuiltInName::textureGatherOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0W1B1C0C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGatherOffset_0H1B1C0C(
    BuiltInId::textureGatherOffset_Sampler2D1_Float2_Int2_Int1,
    BuiltInName::textureGatherOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0H1B1C0C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGatherOffset_0Q1B1C0C(
    BuiltInId::textureGatherOffset_ISampler2D1_Float2_Int2_Int1,
    BuiltInName::textureGatherOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Q1B1C0C,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGatherOffset_0W1B1C0C(
    BuiltInId::textureGatherOffset_USampler2D1_Float2_Int2_Int1,
    BuiltInName::textureGatherOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0W1B1C0C,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGatherOffset_0K2B1C(
    BuiltInId::textureGatherOffset_Sampler2DArray1_Float3_Int2,
    BuiltInName::textureGatherOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0K2B1C0C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGatherOffset_0T2B1C(
    BuiltInId::textureGatherOffset_ISampler2DArray1_Float3_Int2,
    BuiltInName::textureGatherOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0T2B1C0C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGatherOffset_0Z2B1C(
    BuiltInId::textureGatherOffset_USampler2DArray1_Float3_Int2,
    BuiltInName::textureGatherOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Z2B1C0C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGatherOffset_0K2B1C0C(
    BuiltInId::textureGatherOffset_Sampler2DArray1_Float3_Int2_Int1,
    BuiltInName::textureGatherOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0K2B1C0C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGatherOffset_0T2B1C0C(
    BuiltInId::textureGatherOffset_ISampler2DArray1_Float3_Int2_Int1,
    BuiltInName::textureGatherOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0T2B1C0C,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGatherOffset_0Z2B1C0C(
    BuiltInId::textureGatherOffset_USampler2DArray1_Float3_Int2_Int1,
    BuiltInName::textureGatherOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0Z2B1C0C,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGatherOffset_0c1B0B1C(
    BuiltInId::textureGatherOffset_Sampler2DShadow1_Float2_Float1_Int2,
    BuiltInName::textureGatherOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0c1B0B1C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGatherOffset_0e2B0B1C(
    BuiltInId::textureGatherOffset_Sampler2DArrayShadow1_Float3_Float1_Int2,
    BuiltInName::textureGatherOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p0e2B0B1C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_dFdx_0B(
    BuiltInId::dFdx_Float1,
    BuiltInName::dFdx,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpDFdx,
    false);
constexpr const TFunction kFunction_dFdx_1B(
    BuiltInId::dFdx_Float2,
    BuiltInName::dFdx,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpDFdx,
    false);
constexpr const TFunction kFunction_dFdx_2B(
    BuiltInId::dFdx_Float3,
    BuiltInName::dFdx,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B_o_2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpDFdx,
    false);
constexpr const TFunction kFunction_dFdx_3B(
    BuiltInId::dFdx_Float4,
    BuiltInName::dFdx,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B0B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpDFdx,
    false);
constexpr const TFunction kFunction_dFdy_0B(
    BuiltInId::dFdy_Float1,
    BuiltInName::dFdy,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpDFdy,
    false);
constexpr const TFunction kFunction_dFdy_1B(
    BuiltInId::dFdy_Float2,
    BuiltInName::dFdy,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpDFdy,
    false);
constexpr const TFunction kFunction_dFdy_2B(
    BuiltInId::dFdy_Float3,
    BuiltInName::dFdy,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B_o_2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpDFdy,
    false);
constexpr const TFunction kFunction_dFdy_3B(
    BuiltInId::dFdy_Float4,
    BuiltInName::dFdy,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B0B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpDFdy,
    false);
constexpr const TFunction kFunction_fwidth_0B(
    BuiltInId::fwidth_Float1,
    BuiltInName::fwidth,
    TExtension::UNDEFINED,
    BuiltInParameters::p0B0C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpFwidth,
    false);
constexpr const TFunction kFunction_fwidth_1B(
    BuiltInId::fwidth_Float2,
    BuiltInName::fwidth,
    TExtension::UNDEFINED,
    BuiltInParameters::p1B1B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpFwidth,
    false);
constexpr const TFunction kFunction_fwidth_2B(
    BuiltInId::fwidth_Float3,
    BuiltInName::fwidth,
    TExtension::UNDEFINED,
    BuiltInParameters::p2B_o_2C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpFwidth,
    false);
constexpr const TFunction kFunction_fwidth_3B(
    BuiltInId::fwidth_Float4,
    BuiltInName::fwidth,
    TExtension::UNDEFINED,
    BuiltInParameters::p3B0B0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpFwidth,
    false);
constexpr const TFunction kFunction_atomicCounter_0F(
    BuiltInId::atomicCounter_AtomicCounter1,
    BuiltInName::atomicCounter,
    TExtension::UNDEFINED,
    BuiltInParameters::p0F,
    1,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_atomicCounterIncrement_0F(
    BuiltInId::atomicCounterIncrement_AtomicCounter1,
    BuiltInName::atomicCounterIncrement,
    TExtension::UNDEFINED,
    BuiltInParameters::p0F,
    1,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_atomicCounterDecrement_0F(
    BuiltInId::atomicCounterDecrement_AtomicCounter1,
    BuiltInName::atomicCounterDecrement,
    TExtension::UNDEFINED,
    BuiltInParameters::p0F,
    1,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_atomicAdd_0D0D(
    BuiltInId::atomicAdd_UInt1_UInt1,
    BuiltInName::atomicAdd,
    TExtension::UNDEFINED,
    BuiltInParameters::p_io_0D0D0D,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAtomicAdd,
    false);
constexpr const TFunction kFunction_atomicAdd_0C0C(
    BuiltInId::atomicAdd_Int1_Int1,
    BuiltInName::atomicAdd,
    TExtension::UNDEFINED,
    BuiltInParameters::p_io_0C0C0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAtomicAdd,
    false);
constexpr const TFunction kFunction_atomicMin_0D0D(
    BuiltInId::atomicMin_UInt1_UInt1,
    BuiltInName::atomicMin,
    TExtension::UNDEFINED,
    BuiltInParameters::p_io_0D0D0D,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAtomicMin,
    false);
constexpr const TFunction kFunction_atomicMin_0C0C(
    BuiltInId::atomicMin_Int1_Int1,
    BuiltInName::atomicMin,
    TExtension::UNDEFINED,
    BuiltInParameters::p_io_0C0C0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAtomicMin,
    false);
constexpr const TFunction kFunction_atomicMax_0D0D(
    BuiltInId::atomicMax_UInt1_UInt1,
    BuiltInName::atomicMax,
    TExtension::UNDEFINED,
    BuiltInParameters::p_io_0D0D0D,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAtomicMax,
    false);
constexpr const TFunction kFunction_atomicMax_0C0C(
    BuiltInId::atomicMax_Int1_Int1,
    BuiltInName::atomicMax,
    TExtension::UNDEFINED,
    BuiltInParameters::p_io_0C0C0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAtomicMax,
    false);
constexpr const TFunction kFunction_atomicAnd_0D0D(
    BuiltInId::atomicAnd_UInt1_UInt1,
    BuiltInName::atomicAnd,
    TExtension::UNDEFINED,
    BuiltInParameters::p_io_0D0D0D,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAtomicAnd,
    false);
constexpr const TFunction kFunction_atomicAnd_0C0C(
    BuiltInId::atomicAnd_Int1_Int1,
    BuiltInName::atomicAnd,
    TExtension::UNDEFINED,
    BuiltInParameters::p_io_0C0C0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAtomicAnd,
    false);
constexpr const TFunction kFunction_atomicOr_0D0D(
    BuiltInId::atomicOr_UInt1_UInt1,
    BuiltInName::atomicOr,
    TExtension::UNDEFINED,
    BuiltInParameters::p_io_0D0D0D,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAtomicOr,
    false);
constexpr const TFunction kFunction_atomicOr_0C0C(
    BuiltInId::atomicOr_Int1_Int1,
    BuiltInName::atomicOr,
    TExtension::UNDEFINED,
    BuiltInParameters::p_io_0C0C0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAtomicOr,
    false);
constexpr const TFunction kFunction_atomicXor_0D0D(
    BuiltInId::atomicXor_UInt1_UInt1,
    BuiltInName::atomicXor,
    TExtension::UNDEFINED,
    BuiltInParameters::p_io_0D0D0D,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAtomicXor,
    false);
constexpr const TFunction kFunction_atomicXor_0C0C(
    BuiltInId::atomicXor_Int1_Int1,
    BuiltInName::atomicXor,
    TExtension::UNDEFINED,
    BuiltInParameters::p_io_0C0C0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAtomicXor,
    false);
constexpr const TFunction kFunction_atomicExchange_0D0D(
    BuiltInId::atomicExchange_UInt1_UInt1,
    BuiltInName::atomicExchange,
    TExtension::UNDEFINED,
    BuiltInParameters::p_io_0D0D0D,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAtomicExchange,
    false);
constexpr const TFunction kFunction_atomicExchange_0C0C(
    BuiltInId::atomicExchange_Int1_Int1,
    BuiltInName::atomicExchange,
    TExtension::UNDEFINED,
    BuiltInParameters::p_io_0C0C0C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAtomicExchange,
    false);
constexpr const TFunction kFunction_atomicCompSwap_0D0D0D(
    BuiltInId::atomicCompSwap_UInt1_UInt1_UInt1,
    BuiltInName::atomicCompSwap,
    TExtension::UNDEFINED,
    BuiltInParameters::p_io_0D0D0D,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAtomicCompSwap,
    false);
constexpr const TFunction kFunction_atomicCompSwap_0C0C0C(
    BuiltInId::atomicCompSwap_Int1_Int1_Int1,
    BuiltInName::atomicCompSwap,
    TExtension::UNDEFINED,
    BuiltInParameters::p_io_0C0C0C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAtomicCompSwap,
    false);
constexpr const TFunction kFunction_imageSize_0f(
    BuiltInId::imageSize_Image2D1,
    BuiltInName::imageSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p0f1C3B,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageSize_0g(
    BuiltInId::imageSize_IImage2D1,
    BuiltInName::imageSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p0g1C3C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageSize_0h(
    BuiltInId::imageSize_UImage2D1,
    BuiltInName::imageSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p0h1C3D,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageSize_0i(
    BuiltInId::imageSize_Image3D1,
    BuiltInName::imageSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p0i2C3B,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageSize_0j(
    BuiltInId::imageSize_IImage3D1,
    BuiltInName::imageSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p0j2C3C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageSize_0k(
    BuiltInId::imageSize_UImage3D1,
    BuiltInName::imageSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p0k2C3D,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageSize_0l(
    BuiltInId::imageSize_Image2DArray1,
    BuiltInName::imageSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p0l2C3B,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageSize_0m(
    BuiltInId::imageSize_IImage2DArray1,
    BuiltInName::imageSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p0m2C3C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageSize_0n(
    BuiltInId::imageSize_UImage2DArray1,
    BuiltInName::imageSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p0n2C3D,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageSize_0o(
    BuiltInId::imageSize_ImageCube1,
    BuiltInName::imageSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p0o2C3B,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageSize_0p(
    BuiltInId::imageSize_IImageCube1,
    BuiltInName::imageSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p0p2C3C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageSize_0q(
    BuiltInId::imageSize_UImageCube1,
    BuiltInName::imageSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p0q2C3D,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageLoad_0f1C(
    BuiltInId::imageLoad_Image2D1_Int2,
    BuiltInName::imageLoad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0f1C3B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageLoad_0g1C(
    BuiltInId::imageLoad_IImage2D1_Int2,
    BuiltInName::imageLoad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0g1C3C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageLoad_0h1C(
    BuiltInId::imageLoad_UImage2D1_Int2,
    BuiltInName::imageLoad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0h1C3D,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageLoad_0i2C(
    BuiltInId::imageLoad_Image3D1_Int3,
    BuiltInName::imageLoad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0i2C3B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageLoad_0j2C(
    BuiltInId::imageLoad_IImage3D1_Int3,
    BuiltInName::imageLoad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0j2C3C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageLoad_0k2C(
    BuiltInId::imageLoad_UImage3D1_Int3,
    BuiltInName::imageLoad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0k2C3D,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageLoad_0l2C(
    BuiltInId::imageLoad_Image2DArray1_Int3,
    BuiltInName::imageLoad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0l2C3B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageLoad_0m2C(
    BuiltInId::imageLoad_IImage2DArray1_Int3,
    BuiltInName::imageLoad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0m2C3C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageLoad_0n2C(
    BuiltInId::imageLoad_UImage2DArray1_Int3,
    BuiltInName::imageLoad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0n2C3D,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageLoad_0o2C(
    BuiltInId::imageLoad_ImageCube1_Int3,
    BuiltInName::imageLoad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0o2C3B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageLoad_0p2C(
    BuiltInId::imageLoad_IImageCube1_Int3,
    BuiltInName::imageLoad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0p2C3C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageLoad_0q2C(
    BuiltInId::imageLoad_UImageCube1_Int3,
    BuiltInName::imageLoad,
    TExtension::UNDEFINED,
    BuiltInParameters::p0q2C3D,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageStore_0f1C3B(
    BuiltInId::imageStore_Image2D1_Int2_Float4,
    BuiltInName::imageStore,
    TExtension::UNDEFINED,
    BuiltInParameters::p0f1C3B,
    3,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageStore_0g1C3C(
    BuiltInId::imageStore_IImage2D1_Int2_Int4,
    BuiltInName::imageStore,
    TExtension::UNDEFINED,
    BuiltInParameters::p0g1C3C,
    3,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageStore_0h1C3D(
    BuiltInId::imageStore_UImage2D1_Int2_UInt4,
    BuiltInName::imageStore,
    TExtension::UNDEFINED,
    BuiltInParameters::p0h1C3D,
    3,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageStore_0i2C3B(
    BuiltInId::imageStore_Image3D1_Int3_Float4,
    BuiltInName::imageStore,
    TExtension::UNDEFINED,
    BuiltInParameters::p0i2C3B,
    3,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageStore_0j2C3C(
    BuiltInId::imageStore_IImage3D1_Int3_Int4,
    BuiltInName::imageStore,
    TExtension::UNDEFINED,
    BuiltInParameters::p0j2C3C,
    3,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageStore_0k2C3D(
    BuiltInId::imageStore_UImage3D1_Int3_UInt4,
    BuiltInName::imageStore,
    TExtension::UNDEFINED,
    BuiltInParameters::p0k2C3D,
    3,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageStore_0l2C3B(
    BuiltInId::imageStore_Image2DArray1_Int3_Float4,
    BuiltInName::imageStore,
    TExtension::UNDEFINED,
    BuiltInParameters::p0l2C3B,
    3,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageStore_0m2C3C(
    BuiltInId::imageStore_IImage2DArray1_Int3_Int4,
    BuiltInName::imageStore,
    TExtension::UNDEFINED,
    BuiltInParameters::p0m2C3C,
    3,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageStore_0n2C3D(
    BuiltInId::imageStore_UImage2DArray1_Int3_UInt4,
    BuiltInName::imageStore,
    TExtension::UNDEFINED,
    BuiltInParameters::p0n2C3D,
    3,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageStore_0o2C3B(
    BuiltInId::imageStore_ImageCube1_Int3_Float4,
    BuiltInName::imageStore,
    TExtension::UNDEFINED,
    BuiltInParameters::p0o2C3B,
    3,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageStore_0p2C3C(
    BuiltInId::imageStore_IImageCube1_Int3_Int4,
    BuiltInName::imageStore,
    TExtension::UNDEFINED,
    BuiltInParameters::p0p2C3C,
    3,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageStore_0q2C3D(
    BuiltInId::imageStore_UImageCube1_Int3_UInt4,
    BuiltInName::imageStore,
    TExtension::UNDEFINED,
    BuiltInParameters::p0q2C3D,
    3,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_memoryBarrier_(
    BuiltInId::memoryBarrier,
    BuiltInName::memoryBarrier,
    TExtension::UNDEFINED,
    BuiltInParameters::empty,
    0,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpMemoryBarrier,
    false);
constexpr const TFunction kFunction_memoryBarrierAtomicCounter_(
    BuiltInId::memoryBarrierAtomicCounter,
    BuiltInName::memoryBarrierAtomicCounter,
    TExtension::UNDEFINED,
    BuiltInParameters::empty,
    0,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpMemoryBarrierAtomicCounter,
    false);
constexpr const TFunction kFunction_memoryBarrierBuffer_(
    BuiltInId::memoryBarrierBuffer,
    BuiltInName::memoryBarrierBuffer,
    TExtension::UNDEFINED,
    BuiltInParameters::empty,
    0,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpMemoryBarrierBuffer,
    false);
constexpr const TFunction kFunction_memoryBarrierImage_(
    BuiltInId::memoryBarrierImage,
    BuiltInName::memoryBarrierImage,
    TExtension::UNDEFINED,
    BuiltInParameters::empty,
    0,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpMemoryBarrierImage,
    false);
constexpr const TFunction kFunction_barrier_(
    BuiltInId::barrier,
    BuiltInName::barrier,
    TExtension::UNDEFINED,
    BuiltInParameters::empty,
    0,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpBarrier,
    false);
constexpr const TFunction kFunction_memoryBarrierShared_(
    BuiltInId::memoryBarrierShared,
    BuiltInName::memoryBarrierShared,
    TExtension::UNDEFINED,
    BuiltInParameters::empty,
    0,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpMemoryBarrierShared,
    false);
constexpr const TFunction kFunction_groupMemoryBarrier_(
    BuiltInId::groupMemoryBarrier,
    BuiltInName::groupMemoryBarrier,
    TExtension::UNDEFINED,
    BuiltInParameters::empty,
    0,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpGroupMemoryBarrier,
    false);
constexpr const TFunction kFunction_EmitVertex_(
    BuiltInId::EmitVertex,
    BuiltInName::EmitVertex,
    TExtension::EXT_geometry_shader,
    BuiltInParameters::empty,
    0,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpEmitVertex,
    false);
constexpr const TFunction kFunction_EndPrimitive_(
    BuiltInId::EndPrimitive,
    BuiltInName::EndPrimitive,
    TExtension::EXT_geometry_shader,
    BuiltInParameters::empty,
    0,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpEndPrimitive,
    false);

}  // namespace BuiltInFunction

void TSymbolTable::initializeBuiltInVariables(sh::GLenum shaderType,
                                              ShShaderSpec spec,
                                              const ShBuiltInResources &resources)
{
    const TSourceLoc zeroSourceLoc             = {0, 0, 0, 0};
    TFieldList *fields_gl_DepthRangeParameters = new TFieldList();
    fields_gl_DepthRangeParameters->push_back(
        new TField(new TType(EbtFloat, EbpHigh, EvqGlobal, 1, 1), BuiltInName::near, zeroSourceLoc,
                   SymbolType::BuiltIn));
    fields_gl_DepthRangeParameters->push_back(
        new TField(new TType(EbtFloat, EbpHigh, EvqGlobal, 1, 1), BuiltInName::far, zeroSourceLoc,
                   SymbolType::BuiltIn));
    fields_gl_DepthRangeParameters->push_back(
        new TField(new TType(EbtFloat, EbpHigh, EvqGlobal, 1, 1), BuiltInName::diff, zeroSourceLoc,
                   SymbolType::BuiltIn));
    TStructure *gl_DepthRangeParameters =
        new TStructure(BuiltInId::gl_DepthRangeParameters, BuiltInName::gl_DepthRangeParameters,
                       TExtension::UNDEFINED, fields_gl_DepthRangeParameters);
    mVar_gl_DepthRangeParameters = gl_DepthRangeParameters;
    TType *type_gl_DepthRange    = new TType(gl_DepthRangeParameters, false);
    type_gl_DepthRange->setQualifier(EvqUniform);
    type_gl_DepthRange->realize();
    mVar_gl_DepthRange =
        new TVariable(BuiltInId::gl_DepthRange, BuiltInName::gl_DepthRange, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, type_gl_DepthRange);
    mVar_gl_MaxVertexAttribs = new TVariable(
        BuiltInId::gl_MaxVertexAttribs, BuiltInName::gl_MaxVertexAttribs, SymbolType::BuiltIn,
        TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxVertexAttribs);
        mVar_gl_MaxVertexAttribs->shareConstPointer(unionArray);
    }
    mVar_gl_MaxVertexUniformVectors =
        new TVariable(BuiltInId::gl_MaxVertexUniformVectors,
                      BuiltInName::gl_MaxVertexUniformVectors, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxVertexUniformVectors);
        mVar_gl_MaxVertexUniformVectors->shareConstPointer(unionArray);
    }
    mVar_gl_MaxVertexTextureImageUnits =
        new TVariable(BuiltInId::gl_MaxVertexTextureImageUnits,
                      BuiltInName::gl_MaxVertexTextureImageUnits, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxVertexTextureImageUnits);
        mVar_gl_MaxVertexTextureImageUnits->shareConstPointer(unionArray);
    }
    mVar_gl_MaxCombinedTextureImageUnits =
        new TVariable(BuiltInId::gl_MaxCombinedTextureImageUnits,
                      BuiltInName::gl_MaxCombinedTextureImageUnits, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxCombinedTextureImageUnits);
        mVar_gl_MaxCombinedTextureImageUnits->shareConstPointer(unionArray);
    }
    mVar_gl_MaxTextureImageUnits =
        new TVariable(BuiltInId::gl_MaxTextureImageUnits, BuiltInName::gl_MaxTextureImageUnits,
                      SymbolType::BuiltIn, TExtension::UNDEFINED,
                      StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxTextureImageUnits);
        mVar_gl_MaxTextureImageUnits->shareConstPointer(unionArray);
    }
    mVar_gl_MaxFragmentUniformVectors =
        new TVariable(BuiltInId::gl_MaxFragmentUniformVectors,
                      BuiltInName::gl_MaxFragmentUniformVectors, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxFragmentUniformVectors);
        mVar_gl_MaxFragmentUniformVectors->shareConstPointer(unionArray);
    }
    mVar_gl_MaxVaryingVectors = new TVariable(
        BuiltInId::gl_MaxVaryingVectors, BuiltInName::gl_MaxVaryingVectors, SymbolType::BuiltIn,
        TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxVaryingVectors);
        mVar_gl_MaxVaryingVectors->shareConstPointer(unionArray);
    }
    mVar_gl_MaxDrawBuffers = new TVariable(
        BuiltInId::gl_MaxDrawBuffers, BuiltInName::gl_MaxDrawBuffers, SymbolType::BuiltIn,
        TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxDrawBuffers);
        mVar_gl_MaxDrawBuffers->shareConstPointer(unionArray);
    }
    mVar_gl_MaxDualSourceDrawBuffersEXT = new TVariable(
        BuiltInId::gl_MaxDualSourceDrawBuffersEXT, BuiltInName::gl_MaxDualSourceDrawBuffersEXT,
        SymbolType::BuiltIn, TExtension::EXT_blend_func_extended,
        StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxDualSourceDrawBuffers);
        mVar_gl_MaxDualSourceDrawBuffersEXT->shareConstPointer(unionArray);
    }
    mVar_gl_MaxVertexOutputVectors =
        new TVariable(BuiltInId::gl_MaxVertexOutputVectors, BuiltInName::gl_MaxVertexOutputVectors,
                      SymbolType::BuiltIn, TExtension::UNDEFINED,
                      StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxVertexOutputVectors);
        mVar_gl_MaxVertexOutputVectors->shareConstPointer(unionArray);
    }
    mVar_gl_MaxFragmentInputVectors =
        new TVariable(BuiltInId::gl_MaxFragmentInputVectors,
                      BuiltInName::gl_MaxFragmentInputVectors, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxFragmentInputVectors);
        mVar_gl_MaxFragmentInputVectors->shareConstPointer(unionArray);
    }
    mVar_gl_MinProgramTexelOffset =
        new TVariable(BuiltInId::gl_MinProgramTexelOffset, BuiltInName::gl_MinProgramTexelOffset,
                      SymbolType::BuiltIn, TExtension::UNDEFINED,
                      StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MinProgramTexelOffset);
        mVar_gl_MinProgramTexelOffset->shareConstPointer(unionArray);
    }
    mVar_gl_MaxProgramTexelOffset =
        new TVariable(BuiltInId::gl_MaxProgramTexelOffset, BuiltInName::gl_MaxProgramTexelOffset,
                      SymbolType::BuiltIn, TExtension::UNDEFINED,
                      StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxProgramTexelOffset);
        mVar_gl_MaxProgramTexelOffset->shareConstPointer(unionArray);
    }
    mVar_gl_MaxImageUnits = new TVariable(
        BuiltInId::gl_MaxImageUnits, BuiltInName::gl_MaxImageUnits, SymbolType::BuiltIn,
        TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxImageUnits);
        mVar_gl_MaxImageUnits->shareConstPointer(unionArray);
    }
    mVar_gl_MaxVertexImageUniforms =
        new TVariable(BuiltInId::gl_MaxVertexImageUniforms, BuiltInName::gl_MaxVertexImageUniforms,
                      SymbolType::BuiltIn, TExtension::UNDEFINED,
                      StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxVertexImageUniforms);
        mVar_gl_MaxVertexImageUniforms->shareConstPointer(unionArray);
    }
    mVar_gl_MaxFragmentImageUniforms =
        new TVariable(BuiltInId::gl_MaxFragmentImageUniforms,
                      BuiltInName::gl_MaxFragmentImageUniforms, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxFragmentImageUniforms);
        mVar_gl_MaxFragmentImageUniforms->shareConstPointer(unionArray);
    }
    mVar_gl_MaxComputeImageUniforms =
        new TVariable(BuiltInId::gl_MaxComputeImageUniforms,
                      BuiltInName::gl_MaxComputeImageUniforms, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxComputeImageUniforms);
        mVar_gl_MaxComputeImageUniforms->shareConstPointer(unionArray);
    }
    mVar_gl_MaxCombinedImageUniforms =
        new TVariable(BuiltInId::gl_MaxCombinedImageUniforms,
                      BuiltInName::gl_MaxCombinedImageUniforms, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxCombinedImageUniforms);
        mVar_gl_MaxCombinedImageUniforms->shareConstPointer(unionArray);
    }
    mVar_gl_MaxCombinedShaderOutputResources =
        new TVariable(BuiltInId::gl_MaxCombinedShaderOutputResources,
                      BuiltInName::gl_MaxCombinedShaderOutputResources, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxCombinedShaderOutputResources);
        mVar_gl_MaxCombinedShaderOutputResources->shareConstPointer(unionArray);
    }
    mVar_gl_MaxComputeWorkGroupCount =
        new TVariable(BuiltInId::gl_MaxComputeWorkGroupCount,
                      BuiltInName::gl_MaxComputeWorkGroupCount, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpHigh, EvqConst, 3, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[3];
        for (size_t index = 0u; index < 3; ++index)
        {
            unionArray[index].setIConst(resources.MaxComputeWorkGroupCount[index]);
        }
        mVar_gl_MaxComputeWorkGroupCount->shareConstPointer(unionArray);
    }
    mVar_gl_MaxComputeWorkGroupSize =
        new TVariable(BuiltInId::gl_MaxComputeWorkGroupSize,
                      BuiltInName::gl_MaxComputeWorkGroupSize, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpHigh, EvqConst, 3, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[3];
        for (size_t index = 0u; index < 3; ++index)
        {
            unionArray[index].setIConst(resources.MaxComputeWorkGroupSize[index]);
        }
        mVar_gl_MaxComputeWorkGroupSize->shareConstPointer(unionArray);
    }
    mVar_gl_MaxComputeUniformComponents =
        new TVariable(BuiltInId::gl_MaxComputeUniformComponents,
                      BuiltInName::gl_MaxComputeUniformComponents, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxComputeUniformComponents);
        mVar_gl_MaxComputeUniformComponents->shareConstPointer(unionArray);
    }
    mVar_gl_MaxComputeTextureImageUnits =
        new TVariable(BuiltInId::gl_MaxComputeTextureImageUnits,
                      BuiltInName::gl_MaxComputeTextureImageUnits, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxComputeTextureImageUnits);
        mVar_gl_MaxComputeTextureImageUnits->shareConstPointer(unionArray);
    }
    mVar_gl_MaxComputeAtomicCounters =
        new TVariable(BuiltInId::gl_MaxComputeAtomicCounters,
                      BuiltInName::gl_MaxComputeAtomicCounters, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxComputeAtomicCounters);
        mVar_gl_MaxComputeAtomicCounters->shareConstPointer(unionArray);
    }
    mVar_gl_MaxComputeAtomicCounterBuffers =
        new TVariable(BuiltInId::gl_MaxComputeAtomicCounterBuffers,
                      BuiltInName::gl_MaxComputeAtomicCounterBuffers, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxComputeAtomicCounterBuffers);
        mVar_gl_MaxComputeAtomicCounterBuffers->shareConstPointer(unionArray);
    }
    mVar_gl_MaxVertexAtomicCounters =
        new TVariable(BuiltInId::gl_MaxVertexAtomicCounters,
                      BuiltInName::gl_MaxVertexAtomicCounters, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxVertexAtomicCounters);
        mVar_gl_MaxVertexAtomicCounters->shareConstPointer(unionArray);
    }
    mVar_gl_MaxFragmentAtomicCounters =
        new TVariable(BuiltInId::gl_MaxFragmentAtomicCounters,
                      BuiltInName::gl_MaxFragmentAtomicCounters, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxFragmentAtomicCounters);
        mVar_gl_MaxFragmentAtomicCounters->shareConstPointer(unionArray);
    }
    mVar_gl_MaxCombinedAtomicCounters =
        new TVariable(BuiltInId::gl_MaxCombinedAtomicCounters,
                      BuiltInName::gl_MaxCombinedAtomicCounters, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxCombinedAtomicCounters);
        mVar_gl_MaxCombinedAtomicCounters->shareConstPointer(unionArray);
    }
    mVar_gl_MaxAtomicCounterBindings =
        new TVariable(BuiltInId::gl_MaxAtomicCounterBindings,
                      BuiltInName::gl_MaxAtomicCounterBindings, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxAtomicCounterBindings);
        mVar_gl_MaxAtomicCounterBindings->shareConstPointer(unionArray);
    }
    mVar_gl_MaxVertexAtomicCounterBuffers =
        new TVariable(BuiltInId::gl_MaxVertexAtomicCounterBuffers,
                      BuiltInName::gl_MaxVertexAtomicCounterBuffers, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxVertexAtomicCounterBuffers);
        mVar_gl_MaxVertexAtomicCounterBuffers->shareConstPointer(unionArray);
    }
    mVar_gl_MaxFragmentAtomicCounterBuffers =
        new TVariable(BuiltInId::gl_MaxFragmentAtomicCounterBuffers,
                      BuiltInName::gl_MaxFragmentAtomicCounterBuffers, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxFragmentAtomicCounterBuffers);
        mVar_gl_MaxFragmentAtomicCounterBuffers->shareConstPointer(unionArray);
    }
    mVar_gl_MaxCombinedAtomicCounterBuffers =
        new TVariable(BuiltInId::gl_MaxCombinedAtomicCounterBuffers,
                      BuiltInName::gl_MaxCombinedAtomicCounterBuffers, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxCombinedAtomicCounterBuffers);
        mVar_gl_MaxCombinedAtomicCounterBuffers->shareConstPointer(unionArray);
    }
    mVar_gl_MaxAtomicCounterBufferSize =
        new TVariable(BuiltInId::gl_MaxAtomicCounterBufferSize,
                      BuiltInName::gl_MaxAtomicCounterBufferSize, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxAtomicCounterBufferSize);
        mVar_gl_MaxAtomicCounterBufferSize->shareConstPointer(unionArray);
    }
    mVar_gl_MaxGeometryInputComponents = new TVariable(
        BuiltInId::gl_MaxGeometryInputComponents, BuiltInName::gl_MaxGeometryInputComponents,
        SymbolType::BuiltIn, TExtension::EXT_geometry_shader,
        StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxGeometryInputComponents);
        mVar_gl_MaxGeometryInputComponents->shareConstPointer(unionArray);
    }
    mVar_gl_MaxGeometryOutputComponents = new TVariable(
        BuiltInId::gl_MaxGeometryOutputComponents, BuiltInName::gl_MaxGeometryOutputComponents,
        SymbolType::BuiltIn, TExtension::EXT_geometry_shader,
        StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxGeometryOutputComponents);
        mVar_gl_MaxGeometryOutputComponents->shareConstPointer(unionArray);
    }
    mVar_gl_MaxGeometryImageUniforms = new TVariable(
        BuiltInId::gl_MaxGeometryImageUniforms, BuiltInName::gl_MaxGeometryImageUniforms,
        SymbolType::BuiltIn, TExtension::EXT_geometry_shader,
        StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxGeometryImageUniforms);
        mVar_gl_MaxGeometryImageUniforms->shareConstPointer(unionArray);
    }
    mVar_gl_MaxGeometryTextureImageUnits = new TVariable(
        BuiltInId::gl_MaxGeometryTextureImageUnits, BuiltInName::gl_MaxGeometryTextureImageUnits,
        SymbolType::BuiltIn, TExtension::EXT_geometry_shader,
        StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxGeometryTextureImageUnits);
        mVar_gl_MaxGeometryTextureImageUnits->shareConstPointer(unionArray);
    }
    mVar_gl_MaxGeometryOutputVertices = new TVariable(
        BuiltInId::gl_MaxGeometryOutputVertices, BuiltInName::gl_MaxGeometryOutputVertices,
        SymbolType::BuiltIn, TExtension::EXT_geometry_shader,
        StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxGeometryOutputVertices);
        mVar_gl_MaxGeometryOutputVertices->shareConstPointer(unionArray);
    }
    mVar_gl_MaxGeometryTotalOutputComponents = new TVariable(
        BuiltInId::gl_MaxGeometryTotalOutputComponents,
        BuiltInName::gl_MaxGeometryTotalOutputComponents, SymbolType::BuiltIn,
        TExtension::EXT_geometry_shader, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxGeometryTotalOutputComponents);
        mVar_gl_MaxGeometryTotalOutputComponents->shareConstPointer(unionArray);
    }
    mVar_gl_MaxGeometryUniformComponents = new TVariable(
        BuiltInId::gl_MaxGeometryUniformComponents, BuiltInName::gl_MaxGeometryUniformComponents,
        SymbolType::BuiltIn, TExtension::EXT_geometry_shader,
        StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxGeometryUniformComponents);
        mVar_gl_MaxGeometryUniformComponents->shareConstPointer(unionArray);
    }
    mVar_gl_MaxGeometryAtomicCounters = new TVariable(
        BuiltInId::gl_MaxGeometryAtomicCounters, BuiltInName::gl_MaxGeometryAtomicCounters,
        SymbolType::BuiltIn, TExtension::EXT_geometry_shader,
        StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxGeometryAtomicCounters);
        mVar_gl_MaxGeometryAtomicCounters->shareConstPointer(unionArray);
    }
    mVar_gl_MaxGeometryAtomicCounterBuffers = new TVariable(
        BuiltInId::gl_MaxGeometryAtomicCounterBuffers,
        BuiltInName::gl_MaxGeometryAtomicCounterBuffers, SymbolType::BuiltIn,
        TExtension::EXT_geometry_shader, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxGeometryAtomicCounterBuffers);
        mVar_gl_MaxGeometryAtomicCounterBuffers->shareConstPointer(unionArray);
    }
    if (shaderType == GL_FRAGMENT_SHADER)
    {
        TType *type_gl_FragData = new TType(EbtFloat, EbpMedium, EvqFragData, 4);
        if (spec != SH_WEBGL2_SPEC && spec != SH_WEBGL3_SPEC)
        {
            type_gl_FragData->makeArray(resources.MaxDrawBuffers);
        }
        else
        {
            type_gl_FragData->makeArray(1u);
        }
        type_gl_FragData->realize();
        mVar_gl_FragData =
            new TVariable(BuiltInId::gl_FragData, BuiltInName::gl_FragData, SymbolType::BuiltIn,
                          TExtension::UNDEFINED, type_gl_FragData);
    }
    if ((shaderType == GL_FRAGMENT_SHADER) && (mResources.EXT_blend_func_extended))
    {
        TType *type_gl_SecondaryFragDataEXT =
            new TType(EbtFloat, EbpMedium, EvqSecondaryFragDataEXT, 4, 1);
        type_gl_SecondaryFragDataEXT->makeArray(resources.MaxDualSourceDrawBuffers);
        type_gl_SecondaryFragDataEXT->realize();
        mVar_gl_SecondaryFragDataEXT = new TVariable(
            BuiltInId::gl_SecondaryFragDataEXT, BuiltInName::gl_SecondaryFragDataEXT,
            SymbolType::BuiltIn, TExtension::EXT_blend_func_extended, type_gl_SecondaryFragDataEXT);
    }
    if ((shaderType == GL_FRAGMENT_SHADER) && (mResources.EXT_frag_depth))
    {
        TType *type_gl_FragDepthEXT = new TType(
            EbtFloat, resources.FragmentPrecisionHigh ? EbpHigh : EbpMedium, EvqFragDepthEXT, 1);
        type_gl_FragDepthEXT->realize();
        mVar_gl_FragDepthEXT =
            new TVariable(BuiltInId::gl_FragDepthEXT, BuiltInName::gl_FragDepthEXT,
                          SymbolType::BuiltIn, TExtension::EXT_frag_depth, type_gl_FragDepthEXT);
    }
    TType *type_gl_LastFragData = new TType(EbtFloat, EbpMedium, EvqLastFragData, 4, 1);
    type_gl_LastFragData->makeArray(resources.MaxDrawBuffers);
    type_gl_LastFragData->realize();
    mVar_gl_LastFragData =
        new TVariable(BuiltInId::gl_LastFragData, BuiltInName::gl_LastFragData, SymbolType::BuiltIn,
                      TExtension::EXT_shader_framebuffer_fetch, type_gl_LastFragData);
    TType *type_gl_LastFragDataNV = new TType(EbtFloat, EbpMedium, EvqLastFragData, 4, 1);
    type_gl_LastFragDataNV->makeArray(resources.MaxDrawBuffers);
    type_gl_LastFragDataNV->realize();
    mVar_gl_LastFragDataNV = new TVariable(
        BuiltInId::gl_LastFragDataNV, BuiltInName::gl_LastFragData, SymbolType::BuiltIn,
        TExtension::NV_shader_framebuffer_fetch, type_gl_LastFragDataNV);
    TFieldList *fields_gl_PerVertex = new TFieldList();
    fields_gl_PerVertex->push_back(new TField(new TType(EbtFloat, EbpHigh, EvqPosition, 4, 1),
                                              BuiltInName::gl_Position, zeroSourceLoc,
                                              SymbolType::BuiltIn));
    TInterfaceBlock *gl_PerVertex =
        new TInterfaceBlock(BuiltInId::gl_PerVertex, BuiltInName::gl_PerVertex,
                            TExtension::EXT_geometry_shader, fields_gl_PerVertex);
    mVar_gl_PerVertex = gl_PerVertex;
    if (shaderType == GL_GEOMETRY_SHADER_EXT)
    {
        TType *type_gl_in = new TType(gl_PerVertex, EvqPerVertexIn, TLayoutQualifier::Create());
        type_gl_in->makeArray(0u);
        type_gl_in->realize();
        mVar_gl_in = new TVariable(BuiltInId::gl_in, BuiltInName::gl_in, SymbolType::BuiltIn,
                                   TExtension::EXT_geometry_shader, type_gl_in);
    }
    TFieldList *fields_gl_PerVertexOutBlock = new TFieldList();
    fields_gl_PerVertexOutBlock->push_back(
        new TField(new TType(EbtFloat, EbpHigh, EvqPosition, 4, 1), BuiltInName::gl_Position,
                   zeroSourceLoc, SymbolType::BuiltIn));
    TInterfaceBlock *gl_PerVertexOutBlock =
        new TInterfaceBlock(BuiltInId::gl_PerVertexOutBlock, BuiltInName::gl_PerVertex,
                            TExtension::EXT_geometry_shader, fields_gl_PerVertexOutBlock);
    TType *type_gl_PositionGS = new TType(EbtFloat, EbpHigh, EvqPosition, 4);
    type_gl_PositionGS->setInterfaceBlock(gl_PerVertexOutBlock);
    type_gl_PositionGS->realize();
    mVar_gl_PositionGS =
        new TVariable(BuiltInId::gl_PositionGS, BuiltInName::gl_Position, SymbolType::BuiltIn,
                      TExtension::EXT_geometry_shader, type_gl_PositionGS);
}

const TSymbol *TSymbolTable::findBuiltIn(const ImmutableString &name, int shaderVersion) const
{
    if (name.length() > 35)
    {
        return nullptr;
    }
    uint32_t nameHash = name.mangledNameHash();
    if (shaderVersion >= 310)
    {
        switch (nameHash)
        {
            case 0x00000005u:
            {
                if (name == BuiltInName::textureGather_0W1B0C)
                {
                    return &BuiltInFunction::kFunction_textureGather_0W1B0C;
                }
                break;
            }
            case 0x0000000bu:
            {
                if (name == BuiltInName::gl_MaxAtomicCounterBindings)
                {
                    return mVar_gl_MaxAtomicCounterBindings;
                }
                break;
            }
            case 0x00000011u:
            {
                if (name == BuiltInName::findMSB_0C)
                {
                    return &BuiltInFunction::kFunction_findMSB_0C;
                }
                break;
            }
            case 0x00000013u:
            {
                if (name == BuiltInName::findMSB_0D)
                {
                    return &BuiltInFunction::kFunction_findMSB_0D;
                }
                break;
            }
            case 0x00000017u:
            {
                if (name == BuiltInName::bitCount_2D)
                {
                    return &BuiltInFunction::kFunction_bitCount_2D;
                }
                break;
            }
            case 0x00000018u:
            {
                if (name == BuiltInName::bitCount_2C)
                {
                    return &BuiltInFunction::kFunction_bitCount_2C;
                }
                break;
            }
            case 0x0000001au:
            {
                if (name == BuiltInName::atomicExchange_0C0C)
                {
                    return &BuiltInFunction::kFunction_atomicExchange_0C0C;
                }
                break;
            }
            case 0x00000024u:
            {
                if (name == BuiltInName::textureGather_0J2B)
                {
                    return &BuiltInFunction::kFunction_textureGather_0J2B;
                }
                break;
            }
            case 0x0000002cu:
            {
                if (name == BuiltInName::bitfieldExtract_3C0C0C)
                {
                    return &BuiltInFunction::kFunction_bitfieldExtract_3C0C0C;
                }
                break;
            }
            case 0x0000002fu:
            {
                if (name == BuiltInName::bitfieldReverse_0C)
                {
                    return &BuiltInFunction::kFunction_bitfieldReverse_0C;
                }
                break;
            }
            case 0x0000003bu:
            {
                if (name == BuiltInName::imageSize_0o)
                {
                    return &BuiltInFunction::kFunction_imageSize_0o;
                }
                break;
            }
            case 0x0000003cu:
            {
                if (name == BuiltInName::frexp_2B2C)
                {
                    return &BuiltInFunction::kFunction_frexp_2B2C;
                }
                break;
            }
            case 0x0000003eu:
            {
                if (name == BuiltInName::gl_MaxComputeImageUniforms)
                {
                    return mVar_gl_MaxComputeImageUniforms;
                }
                break;
            }
            case 0x00000041u:
            {
                if (name == BuiltInName::gl_MaxFragmentAtomicCounterBuffers)
                {
                    return mVar_gl_MaxFragmentAtomicCounterBuffers;
                }
                break;
            }
            case 0x00000048u:
            {
                if (name == BuiltInName::gl_MaxGeometryInputComponents)
                {
                    return mVar_gl_MaxGeometryInputComponents;
                }
                break;
            }
            case 0x00000049u:
            {
                if (name == BuiltInName::textureGather_0S2B)
                {
                    return &BuiltInFunction::kFunction_textureGather_0S2B;
                }
                break;
            }
            case 0x0000004bu:
            {
                if (name == BuiltInName::bitfieldInsert_3D3D0C0C)
                {
                    return &BuiltInFunction::kFunction_bitfieldInsert_3D3D0C0C;
                }
                break;
            }
            case 0x0000004du:
            {
                if (name == BuiltInName::textureGatherOffset_0H1B1C)
                {
                    return &BuiltInFunction::kFunction_textureGatherOffset_0H1B1C;
                }
                break;
            }
            case 0x0000004eu:
            {
                if (name == BuiltInName::textureGather_0Z2B0C)
                {
                    return &BuiltInFunction::kFunction_textureGather_0Z2B0C;
                }
                break;
            }
            case 0x00000053u:
            {
                if (name == BuiltInName::bitfieldExtract_0C0C0C)
                {
                    return &BuiltInFunction::kFunction_bitfieldExtract_0C0C0C;
                }
                break;
            }
            case 0x00000054u:
            {
                if (name == BuiltInName::gl_MaxGeometryImageUniforms)
                {
                    return mVar_gl_MaxGeometryImageUniforms;
                }
                break;
            }
            case 0x00000061u:
            {
                if (name == BuiltInName::atomicCounter_0F)
                {
                    return &BuiltInFunction::kFunction_atomicCounter_0F;
                }
                break;
            }
            case 0x00000072u:
            {
                if (name == BuiltInName::textureGather_0Y2B)
                {
                    return &BuiltInFunction::kFunction_textureGather_0Y2B;
                }
                break;
            }
            case 0x00000073u:
            {
                if (name == BuiltInName::ldexp_2B2C)
                {
                    return &BuiltInFunction::kFunction_ldexp_2B2C;
                }
                break;
            }
            case 0x00000079u:
            {
                if (name == BuiltInName::gl_MaxVertexAtomicCounterBuffers)
                {
                    return mVar_gl_MaxVertexAtomicCounterBuffers;
                }
                break;
            }
            case 0x0000007cu:
            {
                if (name == BuiltInName::bitfieldInsert_2C2C0C0C)
                {
                    return &BuiltInFunction::kFunction_bitfieldInsert_2C2C0C0C;
                }
                break;
            }
            case 0x00000081u:
            {
                if (name == BuiltInName::memoryBarrierAtomicCounter_)
                {
                    return &BuiltInFunction::kFunction_memoryBarrierAtomicCounter_;
                }
                break;
            }
            case 0x00000083u:
            {
                if (name == BuiltInName::textureGather_0c1B)
                {
                    return &BuiltInFunction::kFunction_textureGather_0c1B;
                }
                break;
            }
            case 0x0000008cu:
            {
                if (name == BuiltInName::texelFetch_0P2C0C)
                {
                    return &BuiltInFunction::kFunction_texelFetch_0P2C0C;
                }
                break;
            }
            case 0x0000008fu:
            {
                if (name == BuiltInName::imulExtended_1C1C1C1C)
                {
                    return &BuiltInFunction::kFunction_imulExtended_1C1C1C1C;
                }
                break;
            }
            case 0x00000090u:
            {
                if (name == BuiltInName::textureGatherOffset_0T2B1C0C)
                {
                    return &BuiltInFunction::kFunction_textureGatherOffset_0T2B1C0C;
                }
                break;
            }
            case 0x0000009cu:
            {
                if (name == BuiltInName::gl_MaxAtomicCounterBufferSize)
                {
                    return mVar_gl_MaxAtomicCounterBufferSize;
                }
                break;
            }
            case 0x000000a1u:
            {
                if (name == BuiltInName::usubBorrow_3D3D3D)
                {
                    return &BuiltInFunction::kFunction_usubBorrow_3D3D3D;
                }
                break;
            }
            case 0x000000a3u:
            {
                if (name == BuiltInName::atomicCompSwap_0D0D0D)
                {
                    return &BuiltInFunction::kFunction_atomicCompSwap_0D0D0D;
                }
                break;
            }
            case 0x000000a6u:
            {
                if (name == BuiltInName::textureGather_0H1B)
                {
                    return &BuiltInFunction::kFunction_textureGather_0H1B;
                }
                break;
            }
            case 0x000000aau:
            {
                if (name == BuiltInName::bitfieldReverse_3D)
                {
                    return &BuiltInFunction::kFunction_bitfieldReverse_3D;
                }
                break;
            }
            case 0x000000acu:
            {
                if (name == BuiltInName::bitfieldReverse_3C)
                {
                    return &BuiltInFunction::kFunction_bitfieldReverse_3C;
                }
                break;
            }
            case 0x000000afu:
            {
                if (name == BuiltInName::textureGatherOffset_0Z2B1C0C)
                {
                    return &BuiltInFunction::kFunction_textureGatherOffset_0Z2B1C0C;
                }
                break;
            }
            case 0x000000b5u:
            {
                if (name == BuiltInName::gl_MaxImageUnits)
                {
                    return mVar_gl_MaxImageUnits;
                }
                break;
            }
            case 0x000000b9u:
            {
                if (name == BuiltInName::atomicCompSwap_0C0C0C)
                {
                    return &BuiltInFunction::kFunction_atomicCompSwap_0C0C0C;
                }
                break;
            }
            case 0x000000c3u:
            {
                if (name == BuiltInName::imageStore_0q2C3D)
                {
                    return &BuiltInFunction::kFunction_imageStore_0q2C3D;
                }
                break;
            }
            case 0x000000c6u:
            {
                if (name == BuiltInName::textureGatherOffset_0e2B0B1C)
                {
                    return &BuiltInFunction::kFunction_textureGatherOffset_0e2B0B1C;
                }
                break;
            }
            case 0x000000c7u:
            {
                if (name == BuiltInName::bitfieldInsert_2D2D0C0C)
                {
                    return &BuiltInFunction::kFunction_bitfieldInsert_2D2D0C0C;
                }
                break;
            }
            case 0x000000d0u:
            {
                if (name == BuiltInName::textureGatherOffset_0T2B1C)
                {
                    return &BuiltInFunction::kFunction_textureGatherOffset_0T2B1C;
                }
                break;
            }
            case 0x000000d3u:
            {
                if (name == BuiltInName::imageStore_0i2C3B)
                {
                    return &BuiltInFunction::kFunction_imageStore_0i2C3B;
                }
                break;
            }
            case 0x000000d7u:
            {
                if (name == BuiltInName::gl_MaxCombinedShaderOutputResources)
                {
                    return mVar_gl_MaxCombinedShaderOutputResources;
                }
                break;
            }
            case 0x000000dfu:
            {
                if (name == BuiltInName::findLSB_2C)
                {
                    return &BuiltInFunction::kFunction_findLSB_2C;
                }
                break;
            }
            case 0x000000e8u:
            {
                if (name == BuiltInName::textureGatherOffset_0K2B1C0C)
                {
                    return &BuiltInFunction::kFunction_textureGatherOffset_0K2B1C0C;
                }
                break;
            }
            case 0x000000eeu:
            {
                if (name == BuiltInName::findLSB_2D)
                {
                    return &BuiltInFunction::kFunction_findLSB_2D;
                }
                break;
            }
            case 0x000000f0u:
            {
                if (name == BuiltInName::gl_MaxComputeWorkGroupSize)
                {
                    return mVar_gl_MaxComputeWorkGroupSize;
                }
                break;
            }
            case 0x000000f4u:
            {
                if (name == BuiltInName::imageStore_0j2C3C)
                {
                    return &BuiltInFunction::kFunction_imageStore_0j2C3C;
                }
                break;
            }
            case 0x000000f7u:
            {
                if (name == BuiltInName::bitfieldInsert_0D0D0C0C)
                {
                    return &BuiltInFunction::kFunction_bitfieldInsert_0D0D0C0C;
                }
                break;
            }
            case 0x000000fcu:
            {
                if (name == BuiltInName::imageLoad_0g1C)
                {
                    return &BuiltInFunction::kFunction_imageLoad_0g1C;
                }
                break;
            }
            case 0x000000fdu:
            {
                if (name == BuiltInName::bitfieldInsert_3C3C0C0C)
                {
                    return &BuiltInFunction::kFunction_bitfieldInsert_3C3C0C0C;
                }
                break;
            }
            case 0x000000feu:
            {
                if (name == BuiltInName::usubBorrow_1D1D1D)
                {
                    return &BuiltInFunction::kFunction_usubBorrow_1D1D1D;
                }
                break;
            }
            case 0x00000104u:
            {
                if (name == BuiltInName::umulExtended_2D2D2D2D)
                {
                    return &BuiltInFunction::kFunction_umulExtended_2D2D2D2D;
                }
                break;
            }
            case 0x00000105u:
            {
                if (name == BuiltInName::imageStore_0p2C3C)
                {
                    return &BuiltInFunction::kFunction_imageStore_0p2C3C;
                }
                break;
            }
            case 0x0000010bu:
            {
                if (name == BuiltInName::imulExtended_0C0C0C0C)
                {
                    return &BuiltInFunction::kFunction_imulExtended_0C0C0C0C;
                }
                break;
            }
            case 0x00000114u:
            {
                if (name == BuiltInName::textureGather_0S2B0C)
                {
                    return &BuiltInFunction::kFunction_textureGather_0S2B0C;
                }
                break;
            }
            case 0x0000011eu:
            {
                if (name == BuiltInName::imageLoad_0k2C)
                {
                    return &BuiltInFunction::kFunction_imageLoad_0k2C;
                }
                break;
            }
            case 0x0000011fu:
            {
                if (name == BuiltInName::gl_MaxComputeWorkGroupCount)
                {
                    return mVar_gl_MaxComputeWorkGroupCount;
                }
                break;
            }
            case 0x00000125u:
            {
                if (name == BuiltInName::textureGather_0d2B0B)
                {
                    return &BuiltInFunction::kFunction_textureGather_0d2B0B;
                }
                break;
            }
            case 0x00000128u:
            {
                if (name == BuiltInName::gl_MaxComputeUniformComponents)
                {
                    return mVar_gl_MaxComputeUniformComponents;
                }
                break;
            }
            case 0x0000012au:
            {
                if (name == BuiltInName::gl_MaxGeometryOutputVertices)
                {
                    return mVar_gl_MaxGeometryOutputVertices;
                }
                break;
            }
            case 0x0000012cu:
            {
                if (name == BuiltInName::packSnorm4x8_3B)
                {
                    return &BuiltInFunction::kFunction_packSnorm4x8_3B;
                }
                break;
            }
            case 0x00000130u:
            {
                if (name == BuiltInName::imageLoad_0h1C)
                {
                    return &BuiltInFunction::kFunction_imageLoad_0h1C;
                }
                break;
            }
            case 0x00000134u:
            {
                if (name == BuiltInName::uaddCarry_2D2D2D)
                {
                    return &BuiltInFunction::kFunction_uaddCarry_2D2D2D;
                }
                break;
            }
            case 0x00000138u:
            {
                if (name == BuiltInName::imageSize_0n)
                {
                    return &BuiltInFunction::kFunction_imageSize_0n;
                }
                break;
            }
            case 0x0000013au:
            {
                if (name == BuiltInName::atomicCounterIncrement_0F)
                {
                    return &BuiltInFunction::kFunction_atomicCounterIncrement_0F;
                }
                break;
            }
            case 0x0000013fu:
            {
                if (name == BuiltInName::bitfieldReverse_0D)
                {
                    return &BuiltInFunction::kFunction_bitfieldReverse_0D;
                }
                break;
            }
            case 0x00000145u:
            {
                if (name == BuiltInName::gl_MaxComputeAtomicCounterBuffers)
                {
                    return mVar_gl_MaxComputeAtomicCounterBuffers;
                }
                break;
            }
            case 0x00000147u:
            {
                if (name == BuiltInName::atomicExchange_0D0D)
                {
                    return &BuiltInFunction::kFunction_atomicExchange_0D0D;
                }
                break;
            }
            case 0x00000148u:
            {
                if (name == BuiltInName::frexp_3B3C)
                {
                    return &BuiltInFunction::kFunction_frexp_3B3C;
                }
                break;
            }
            case 0x0000014au:
            {
                if (name == BuiltInName::atomicAdd_0D0D)
                {
                    return &BuiltInFunction::kFunction_atomicAdd_0D0D;
                }
                break;
            }
            case 0x0000014bu:
            {
                if (name == BuiltInName::imageSize_0j)
                {
                    return &BuiltInFunction::kFunction_imageSize_0j;
                }
                break;
            }
            case 0x00000153u:
            {
                if (name == BuiltInName::textureGather_0K2B0C)
                {
                    return &BuiltInFunction::kFunction_textureGather_0K2B0C;
                }
                break;
            }
            case 0x0000015eu:
            {
                if (name == BuiltInName::imageSize_0k)
                {
                    return &BuiltInFunction::kFunction_imageSize_0k;
                }
                break;
            }
            case 0x00000166u:
            {
                if (name == BuiltInName::gl_MaxGeometryTextureImageUnits)
                {
                    return mVar_gl_MaxGeometryTextureImageUnits;
                }
                break;
            }
            case 0x0000016du:
            {
                if (name == BuiltInName::imageSize_0p)
                {
                    return &BuiltInFunction::kFunction_imageSize_0p;
                }
                break;
            }
            case 0x0000016eu:
            {
                if (name == BuiltInName::imageSize_0q)
                {
                    return &BuiltInFunction::kFunction_imageSize_0q;
                }
                break;
            }
            case 0x0000017au:
            {
                if (name == BuiltInName::imageSize_0f)
                {
                    return &BuiltInFunction::kFunction_imageSize_0f;
                }
                break;
            }
            case 0x0000017bu:
            {
                if (name == BuiltInName::imageSize_0g)
                {
                    return &BuiltInFunction::kFunction_imageSize_0g;
                }
                break;
            }
            case 0x0000017cu:
            {
                if (name == BuiltInName::imageSize_0h)
                {
                    return &BuiltInFunction::kFunction_imageSize_0h;
                }
                break;
            }
            case 0x0000017du:
            {
                if (name == BuiltInName::imageSize_0i)
                {
                    return &BuiltInFunction::kFunction_imageSize_0i;
                }
                break;
            }
            case 0x00000180u:
            {
                if (name == BuiltInName::imageSize_0l)
                {
                    return &BuiltInFunction::kFunction_imageSize_0l;
                }
                break;
            }
            case 0x00000184u:
            {
                if (name == BuiltInName::imageSize_0m)
                {
                    return &BuiltInFunction::kFunction_imageSize_0m;
                }
                break;
            }
            case 0x00000190u:
            {
                if (name == BuiltInName::textureGatherOffset_0K2B1C)
                {
                    return &BuiltInFunction::kFunction_textureGatherOffset_0K2B1C;
                }
                break;
            }
            case 0x00000191u:
            {
                if (name == BuiltInName::findMSB_3D)
                {
                    return &BuiltInFunction::kFunction_findMSB_3D;
                }
                break;
            }
            case 0x00000193u:
            {
                if (name == BuiltInName::textureGather_0e2B0B)
                {
                    return &BuiltInFunction::kFunction_textureGather_0e2B0B;
                }
                break;
            }
            case 0x00000195u:
            {
                if (name == BuiltInName::textureGatherOffset_0W1B1C0C)
                {
                    return &BuiltInFunction::kFunction_textureGatherOffset_0W1B1C0C;
                }
                break;
            }
            case 0x00000197u:
            {
                if (name == BuiltInName::findMSB_3C)
                {
                    return &BuiltInFunction::kFunction_findMSB_3C;
                }
                break;
            }
            case 0x00000198u:
            {
                if (name == BuiltInName::imageLoad_0n2C)
                {
                    return &BuiltInFunction::kFunction_imageLoad_0n2C;
                }
                break;
            }
            case 0x0000019au:
            {
                if (name == BuiltInName::bitfieldInsert_0C0C0C0C)
                {
                    return &BuiltInFunction::kFunction_bitfieldInsert_0C0C0C0C;
                }
                break;
            }
            case 0x0000019du:
            {
                if (name == BuiltInName::atomicXor_0C0C)
                {
                    return &BuiltInFunction::kFunction_atomicXor_0C0C;
                }
                break;
            }
            case 0x0000019fu:
            {
                if (name == BuiltInName::bitCount_3D)
                {
                    return &BuiltInFunction::kFunction_bitCount_3D;
                }
                break;
            }
            case 0x000001a1u:
            {
                if (name == BuiltInName::umulExtended_1D1D1D1D)
                {
                    return &BuiltInFunction::kFunction_umulExtended_1D1D1D1D;
                }
                break;
            }
            case 0x000001a4u:
            {
                if (name == BuiltInName::bitCount_3C)
                {
                    return &BuiltInFunction::kFunction_bitCount_3C;
                }
                break;
            }
            case 0x000001a6u:
            {
                if (name == BuiltInName::findLSB_3D)
                {
                    return &BuiltInFunction::kFunction_findLSB_3D;
                }
                break;
            }
            case 0x000001b1u:
            {
                if (name == BuiltInName::imulExtended_2C2C2C2C)
                {
                    return &BuiltInFunction::kFunction_imulExtended_2C2C2C2C;
                }
                break;
            }
            case 0x000001b9u:
            {
                if (name == BuiltInName::imageLoad_0m2C)
                {
                    return &BuiltInFunction::kFunction_imageLoad_0m2C;
                }
                break;
            }
            case 0x000001c3u:
            {
                if (name == BuiltInName::textureGather_0K2B)
                {
                    return &BuiltInFunction::kFunction_textureGather_0K2B;
                }
                break;
            }
            case 0x000001c8u:
            {
                if (name == BuiltInName::bitfieldExtract_1D0C0C)
                {
                    return &BuiltInFunction::kFunction_bitfieldExtract_1D0C0C;
                }
                break;
            }
            case 0x000001c9u:
            {
                if (name == BuiltInName::atomicAnd_0D0D)
                {
                    return &BuiltInFunction::kFunction_atomicAnd_0D0D;
                }
                break;
            }
            case 0x000001d9u:
            {
                if (name == BuiltInName::atomicMin_0D0D)
                {
                    return &BuiltInFunction::kFunction_atomicMin_0D0D;
                }
                break;
            }
            case 0x000001dcu:
            {
                if (name == BuiltInName::usubBorrow_2D2D2D)
                {
                    return &BuiltInFunction::kFunction_usubBorrow_2D2D2D;
                }
                break;
            }
            case 0x000001e8u:
            {
                if (name == BuiltInName::texelFetch_0U1C0C)
                {
                    return &BuiltInFunction::kFunction_texelFetch_0U1C0C;
                }
                break;
            }
            case 0x000001edu:
            {
                if (name == BuiltInName::memoryBarrier_)
                {
                    return &BuiltInFunction::kFunction_memoryBarrier_;
                }
                break;
            }
            case 0x000001feu:
            {
                if (name == BuiltInName::memoryBarrierBuffer_)
                {
                    return &BuiltInFunction::kFunction_memoryBarrierBuffer_;
                }
                break;
            }
            case 0x00000201u:
            {
                if (name == BuiltInName::usubBorrow_0D0D0D)
                {
                    return &BuiltInFunction::kFunction_usubBorrow_0D0D0D;
                }
                break;
            }
            case 0x00000204u:
            {
                if (name == BuiltInName::imageStore_0l2C3B)
                {
                    return &BuiltInFunction::kFunction_imageStore_0l2C3B;
                }
                break;
            }
            case 0x00000207u:
            {
                if (name == BuiltInName::gl_MaxCombinedImageUniforms)
                {
                    return mVar_gl_MaxCombinedImageUniforms;
                }
                break;
            }
            case 0x0000020cu:
            {
                if (name == BuiltInName::umulExtended_0D0D0D0D)
                {
                    return &BuiltInFunction::kFunction_umulExtended_0D0D0D0D;
                }
                break;
            }
            case 0x00000220u:
            {
                if (name == BuiltInName::ldexp_3B3C)
                {
                    return &BuiltInFunction::kFunction_ldexp_3B3C;
                }
                break;
            }
            case 0x00000224u:
            {
                if (name == BuiltInName::bitfieldReverse_2D)
                {
                    return &BuiltInFunction::kFunction_bitfieldReverse_2D;
                }
                break;
            }
            case 0x0000022cu:
            {
                if (name == BuiltInName::imageStore_0k2C3D)
                {
                    return &BuiltInFunction::kFunction_imageStore_0k2C3D;
                }
                break;
            }
            case 0x00000234u:
            {
                if (name == BuiltInName::textureGather_0H1B0C)
                {
                    return &BuiltInFunction::kFunction_textureGather_0H1B0C;
                }
                break;
            }
            case 0x00000235u:
            {
                if (name == BuiltInName::gl_in)
                {
                    // Only initialized if shaderType == GL_GEOMETRY_SHADER_EXT
                    return mVar_gl_in;
                }
                break;
            }
            case 0x0000024fu:
            {
                if (name == BuiltInName::ldexp_1B1C)
                {
                    return &BuiltInFunction::kFunction_ldexp_1B1C;
                }
                break;
            }
            case 0x00000250u:
            {
                if (name == BuiltInName::textureGatherOffset_0Q1B1C)
                {
                    return &BuiltInFunction::kFunction_textureGatherOffset_0Q1B1C;
                }
                break;
            }
            case 0x0000025cu:
            {
                if (name == BuiltInName::textureGather_0Z2B)
                {
                    return &BuiltInFunction::kFunction_textureGather_0Z2B;
                }
                break;
            }
            case 0x00000260u:
            {
                if (name == BuiltInName::imulExtended_3C3C3C3C)
                {
                    return &BuiltInFunction::kFunction_imulExtended_3C3C3C3C;
                }
                break;
            }
            case 0x00000264u:
            {
                if (name == BuiltInName::texelFetch_0a1C0C)
                {
                    return &BuiltInFunction::kFunction_texelFetch_0a1C0C;
                }
                break;
            }
            case 0x0000026au:
            {
                if (name == BuiltInName::findLSB_3C)
                {
                    return &BuiltInFunction::kFunction_findLSB_3C;
                }
                break;
            }
            case 0x0000026du:
            {
                if (name == BuiltInName::textureGatherOffset_0Z2B1C)
                {
                    return &BuiltInFunction::kFunction_textureGatherOffset_0Z2B1C;
                }
                break;
            }
            case 0x0000026eu:
            {
                if (name == BuiltInName::bitfieldExtract_0D0C0C)
                {
                    return &BuiltInFunction::kFunction_bitfieldExtract_0D0C0C;
                }
                break;
            }
            case 0x00000278u:
            {
                if (name == BuiltInName::gl_MaxGeometryAtomicCounterBuffers)
                {
                    return mVar_gl_MaxGeometryAtomicCounterBuffers;
                }
                break;
            }
            case 0x00000279u:
            {
                if (name == BuiltInName::findMSB_2C)
                {
                    return &BuiltInFunction::kFunction_findMSB_2C;
                }
                break;
            }
            case 0x0000027cu:
            {
                if (name == BuiltInName::atomicOr_0D0D)
                {
                    return &BuiltInFunction::kFunction_atomicOr_0D0D;
                }
                break;
            }
            case 0x0000027du:
            {
                if (name == BuiltInName::textureGather_0Y2B0C)
                {
                    return &BuiltInFunction::kFunction_textureGather_0Y2B0C;
                }
                break;
            }
            case 0x0000027eu:
            {
                if (name == BuiltInName::findMSB_2D)
                {
                    return &BuiltInFunction::kFunction_findMSB_2D;
                }
                break;
            }
            case 0x00000280u:
            {
                if (name == BuiltInName::atomicMin_0C0C)
                {
                    return &BuiltInFunction::kFunction_atomicMin_0C0C;
                }
                break;
            }
            case 0x00000286u:
            {
                if (name == BuiltInName::bitfieldExtract_1C0C0C)
                {
                    return &BuiltInFunction::kFunction_bitfieldExtract_1C0C0C;
                }
                break;
            }
            case 0x00000290u:
            {
                if (name == BuiltInName::ldexp_0B0C)
                {
                    return &BuiltInFunction::kFunction_ldexp_0B0C;
                }
                break;
            }
            case 0x0000029fu:
            {
                if (name == BuiltInName::gl_MaxFragmentImageUniforms)
                {
                    return mVar_gl_MaxFragmentImageUniforms;
                }
                break;
            }
            case 0x000002aau:
            {
                if (name == BuiltInName::gl_MaxComputeTextureImageUnits)
                {
                    return mVar_gl_MaxComputeTextureImageUnits;
                }
                break;
            }
            case 0x000002adu:
            {
                if (name == BuiltInName::unpackSnorm4x8_0D)
                {
                    return &BuiltInFunction::kFunction_unpackSnorm4x8_0D;
                }
                break;
            }
            case 0x000002afu:
            {
                if (name == BuiltInName::gl_MaxCombinedAtomicCounterBuffers)
                {
                    return mVar_gl_MaxCombinedAtomicCounterBuffers;
                }
                break;
            }
            case 0x000002b3u:
            {
                if (name == BuiltInName::textureSize_0V)
                {
                    return &BuiltInFunction::kFunction_textureSize_0V;
                }
                break;
            }
            case 0x000002b4u:
            {
                if (name == BuiltInName::textureSize_0P)
                {
                    return &BuiltInFunction::kFunction_textureSize_0P;
                }
                break;
            }
            case 0x000002b5u:
            {
                if (name == BuiltInName::atomicAdd_0C0C)
                {
                    return &BuiltInFunction::kFunction_atomicAdd_0C0C;
                }
                break;
            }
            case 0x000002b6u:
            {
                if (name == BuiltInName::textureSize_0O)
                {
                    return &BuiltInFunction::kFunction_textureSize_0O;
                }
                break;
            }
            case 0x000002bdu:
            {
                if (name == BuiltInName::findLSB_0C)
                {
                    return &BuiltInFunction::kFunction_findLSB_0C;
                }
                break;
            }
            case 0x000002c0u:
            {
                if (name == BuiltInName::findLSB_0D)
                {
                    return &BuiltInFunction::kFunction_findLSB_0D;
                }
                break;
            }
            case 0x000002c1u:
            {
                if (name == BuiltInName::uaddCarry_1D1D1D)
                {
                    return &BuiltInFunction::kFunction_uaddCarry_1D1D1D;
                }
                break;
            }
            case 0x000002ccu:
            {
                if (name == BuiltInName::textureSize_0a)
                {
                    return &BuiltInFunction::kFunction_textureSize_0a;
                }
                break;
            }
            case 0x000002cdu:
            {
                if (name == BuiltInName::textureSize_0b)
                {
                    return &BuiltInFunction::kFunction_textureSize_0b;
                }
                break;
            }
            case 0x000002d0u:
            {
                if (name == BuiltInName::gl_MaxVertexAtomicCounters)
                {
                    return mVar_gl_MaxVertexAtomicCounters;
                }
                break;
            }
            case 0x000002d1u:
            {
                if (name == BuiltInName::atomicAnd_0C0C)
                {
                    return &BuiltInFunction::kFunction_atomicAnd_0C0C;
                }
                break;
            }
            case 0x000002d2u:
            {
                if (name == BuiltInName::bitCount_0C)
                {
                    return &BuiltInFunction::kFunction_bitCount_0C;
                }
                break;
            }
            case 0x000002d6u:
            {
                if (name == BuiltInName::atomicCounterDecrement_0F)
                {
                    return &BuiltInFunction::kFunction_atomicCounterDecrement_0F;
                }
                break;
            }
            case 0x000002fbu:
            {
                if (name == BuiltInName::bitfieldReverse_1C)
                {
                    return &BuiltInFunction::kFunction_bitfieldReverse_1C;
                }
                break;
            }
            case 0x000002fcu:
            {
                if (name == BuiltInName::bitfieldReverse_1D)
                {
                    return &BuiltInFunction::kFunction_bitfieldReverse_1D;
                }
                break;
            }
            case 0x00000301u:
            {
                if (name == BuiltInName::bitfieldInsert_1C1C0C0C)
                {
                    return &BuiltInFunction::kFunction_bitfieldInsert_1C1C0C0C;
                }
                break;
            }
            case 0x00000303u:
            {
                if (name == BuiltInName::gl_MaxFragmentAtomicCounters)
                {
                    return mVar_gl_MaxFragmentAtomicCounters;
                }
                break;
            }
            case 0x00000307u:
            {
                if (name == BuiltInName::textureGather_0Q1B0C)
                {
                    return &BuiltInFunction::kFunction_textureGather_0Q1B0C;
                }
                break;
            }
            case 0x0000031bu:
            {
                if (name == BuiltInName::gl_MaxGeometryTotalOutputComponents)
                {
                    return mVar_gl_MaxGeometryTotalOutputComponents;
                }
                break;
            }
            case 0x0000031du:
            {
                if (name == BuiltInName::bitfieldInsert_1D1D0C0C)
                {
                    return &BuiltInFunction::kFunction_bitfieldInsert_1D1D0C0C;
                }
                break;
            }
            case 0x00000321u:
            {
                if (name == BuiltInName::uaddCarry_0D0D0D)
                {
                    return &BuiltInFunction::kFunction_uaddCarry_0D0D0D;
                }
                break;
            }
            case 0x00000323u:
            {
                if (name == BuiltInName::textureGather_0d2B)
                {
                    return &BuiltInFunction::kFunction_textureGather_0d2B;
                }
                break;
            }
            case 0x0000032du:
            {
                if (name == BuiltInName::gl_MaxVertexImageUniforms)
                {
                    return mVar_gl_MaxVertexImageUniforms;
                }
                break;
            }
            case 0x00000337u:
            {
                if (name == BuiltInName::uaddCarry_3D3D3D)
                {
                    return &BuiltInFunction::kFunction_uaddCarry_3D3D3D;
                }
                break;
            }
            case 0x00000338u:
            {
                if (name == BuiltInName::textureGather_0T2B)
                {
                    return &BuiltInFunction::kFunction_textureGather_0T2B;
                }
                break;
            }
            case 0x0000033eu:
            {
                if (name == BuiltInName::textureGather_0T2B0C)
                {
                    return &BuiltInFunction::kFunction_textureGather_0T2B0C;
                }
                break;
            }
            case 0x00000343u:
            {
                if (name == BuiltInName::textureSize_0U)
                {
                    return &BuiltInFunction::kFunction_textureSize_0U;
                }
                break;
            }
            case 0x00000353u:
            {
                if (name == BuiltInName::findMSB_1C)
                {
                    return &BuiltInFunction::kFunction_findMSB_1C;
                }
                break;
            }
            case 0x00000356u:
            {
                if (name == BuiltInName::bitfieldExtract_2D0C0C)
                {
                    return &BuiltInFunction::kFunction_bitfieldExtract_2D0C0C;
                }
                break;
            }
            case 0x00000357u:
            {
                if (name == BuiltInName::findMSB_1D)
                {
                    return &BuiltInFunction::kFunction_findMSB_1D;
                }
                break;
            }
            case 0x0000035au:
            {
                if (name == BuiltInName::imageStore_0h1C3D)
                {
                    return &BuiltInFunction::kFunction_imageStore_0h1C3D;
                }
                break;
            }
            case 0x00000361u:
            {
                if (name == BuiltInName::imageStore_0m2C3C)
                {
                    return &BuiltInFunction::kFunction_imageStore_0m2C3C;
                }
                break;
            }
            case 0x00000378u:
            {
                if (name == BuiltInName::bitfieldExtract_3D0C0C)
                {
                    return &BuiltInFunction::kFunction_bitfieldExtract_3D0C0C;
                }
                break;
            }
            case 0x00000387u:
            {
                if (name == BuiltInName::gl_MaxGeometryUniformComponents)
                {
                    return mVar_gl_MaxGeometryUniformComponents;
                }
                break;
            }
            case 0x0000038au:
            {
                if (name == BuiltInName::textureGather_0Q1B)
                {
                    return &BuiltInFunction::kFunction_textureGather_0Q1B;
                }
                break;
            }
            case 0x0000038cu:
            {
                if (name == BuiltInName::imageLoad_0f1C)
                {
                    return &BuiltInFunction::kFunction_imageLoad_0f1C;
                }
                break;
            }
            case 0x00000394u:
            {
                if (name == BuiltInName::imageStore_0n2C3D)
                {
                    return &BuiltInFunction::kFunction_imageStore_0n2C3D;
                }
                break;
            }
            case 0x0000039eu:
            {
                if (name == BuiltInName::texelFetch_0V2C0C)
                {
                    return &BuiltInFunction::kFunction_texelFetch_0V2C0C;
                }
                break;
            }
            case 0x000003a1u:
            {
                if (name == BuiltInName::frexp_0B0C)
                {
                    return &BuiltInFunction::kFunction_frexp_0B0C;
                }
                break;
            }
            case 0x000003a5u:
            {
                if (name == BuiltInName::frexp_1B1C)
                {
                    return &BuiltInFunction::kFunction_frexp_1B1C;
                }
                break;
            }
            case 0x000003aau:
            {
                if (name == BuiltInName::imageStore_0f1C3B)
                {
                    return &BuiltInFunction::kFunction_imageStore_0f1C3B;
                }
                break;
            }
            case 0x000003b3u:
            {
                if (name == BuiltInName::gl_MaxCombinedAtomicCounters)
                {
                    return mVar_gl_MaxCombinedAtomicCounters;
                }
                break;
            }
            case 0x000003b5u:
            {
                if (name == BuiltInName::bitCount_1D)
                {
                    return &BuiltInFunction::kFunction_bitCount_1D;
                }
                break;
            }
            case 0x000003b7u:
            {
                if (name == BuiltInName::bitCount_1C)
                {
                    return &BuiltInFunction::kFunction_bitCount_1C;
                }
                break;
            }
            case 0x000003b8u:
            {
                if (name == BuiltInName::imageLoad_0p2C)
                {
                    return &BuiltInFunction::kFunction_imageLoad_0p2C;
                }
                break;
            }
            case 0x000003bfu:
            {
                if (name == BuiltInName::atomicOr_0C0C)
                {
                    return &BuiltInFunction::kFunction_atomicOr_0C0C;
                }
                break;
            }
            case 0x000003c0u:
            {
                if (name == BuiltInName::imageStore_0g1C3C)
                {
                    return &BuiltInFunction::kFunction_imageStore_0g1C3C;
                }
                break;
            }
            case 0x000003c3u:
            {
                if (name == BuiltInName::atomicXor_0D0D)
                {
                    return &BuiltInFunction::kFunction_atomicXor_0D0D;
                }
                break;
            }
            case 0x000003c7u:
            {
                if (name == BuiltInName::imageLoad_0l2C)
                {
                    return &BuiltInFunction::kFunction_imageLoad_0l2C;
                }
                break;
            }
            case 0x000003c8u:
            {
                if (name == BuiltInName::texelFetch_0b2C0C)
                {
                    return &BuiltInFunction::kFunction_texelFetch_0b2C0C;
                }
                break;
            }
            case 0x000003cau:
            {
                if (name == BuiltInName::textureGatherOffset_0W1B1C)
                {
                    return &BuiltInFunction::kFunction_textureGatherOffset_0W1B1C;
                }
                break;
            }
            case 0x000003cbu:
            {
                if (name == BuiltInName::imageLoad_0j2C)
                {
                    return &BuiltInFunction::kFunction_imageLoad_0j2C;
                }
                break;
            }
            case 0x000003cfu:
            {
                if (name == BuiltInName::gl_MaxGeometryOutputComponents)
                {
                    return mVar_gl_MaxGeometryOutputComponents;
                }
                break;
            }
            case 0x000003d3u:
            {
                if (name == BuiltInName::textureGatherOffset_0Q1B1C0C)
                {
                    return &BuiltInFunction::kFunction_textureGatherOffset_0Q1B1C0C;
                }
                break;
            }
            case 0x000003d4u:
            {
                if (name == BuiltInName::imageLoad_0q2C)
                {
                    return &BuiltInFunction::kFunction_imageLoad_0q2C;
                }
                break;
            }
            case 0x000003d6u:
            {
                if (name == BuiltInName::imageLoad_0o2C)
                {
                    return &BuiltInFunction::kFunction_imageLoad_0o2C;
                }
                break;
            }
            case 0x000003dbu:
            {
                if (name == BuiltInName::atomicMax_0C0C)
                {
                    return &BuiltInFunction::kFunction_atomicMax_0C0C;
                }
                break;
            }
            case 0x000003ddu:
            {
                if (name == BuiltInName::textureGather_0e2B)
                {
                    return &BuiltInFunction::kFunction_textureGather_0e2B;
                }
                break;
            }
            case 0x000003dfu:
            {
                if (name == BuiltInName::umulExtended_3D3D3D3D)
                {
                    return &BuiltInFunction::kFunction_umulExtended_3D3D3D3D;
                }
                break;
            }
            case 0x000003e1u:
            {
                if (name == BuiltInName::textureGatherOffset_0c1B0B1C)
                {
                    return &BuiltInFunction::kFunction_textureGatherOffset_0c1B0B1C;
                }
                break;
            }
            case 0x000003e3u:
            {
                if (name == BuiltInName::memoryBarrierImage_)
                {
                    return &BuiltInFunction::kFunction_memoryBarrierImage_;
                }
                break;
            }
            case 0x000003e6u:
            {
                if (name == BuiltInName::texelFetch_0O1C0C)
                {
                    return &BuiltInFunction::kFunction_texelFetch_0O1C0C;
                }
                break;
            }
            case 0x000003edu:
            {
                if (name == BuiltInName::packUnorm4x8_3B)
                {
                    return &BuiltInFunction::kFunction_packUnorm4x8_3B;
                }
                break;
            }
            case 0x000003f1u:
            {
                if (name == BuiltInName::imageLoad_0i2C)
                {
                    return &BuiltInFunction::kFunction_imageLoad_0i2C;
                }
                break;
            }
            case 0x000003fcu:
            {
                if (name == BuiltInName::textureGather_0W1B)
                {
                    return &BuiltInFunction::kFunction_textureGather_0W1B;
                }
                break;
            }
            case 0x000003fdu:
            {
                if (name == BuiltInName::imageStore_0o2C3B)
                {
                    return &BuiltInFunction::kFunction_imageStore_0o2C3B;
                }
                break;
            }
            case 0x0000040au:
            {
                if (name == BuiltInName::gl_MaxComputeAtomicCounters)
                {
                    return mVar_gl_MaxComputeAtomicCounters;
                }
                break;
            }
            case 0x0000040bu:
            {
                if (name == BuiltInName::textureGather_0c1B0B)
                {
                    return &BuiltInFunction::kFunction_textureGather_0c1B0B;
                }
                break;
            }
            case 0x0000041cu:
            {
                if (name == BuiltInName::textureGatherOffset_0H1B1C0C)
                {
                    return &BuiltInFunction::kFunction_textureGatherOffset_0H1B1C0C;
                }
                break;
            }
            case 0x0000041eu:
            {
                if (name == BuiltInName::atomicMax_0D0D)
                {
                    return &BuiltInFunction::kFunction_atomicMax_0D0D;
                }
                break;
            }
            case 0x0000041fu:
            {
                if (name == BuiltInName::bitCount_0D)
                {
                    return &BuiltInFunction::kFunction_bitCount_0D;
                }
                break;
            }
            case 0x00000423u:
            {
                if (name == BuiltInName::gl_MaxGeometryAtomicCounters)
                {
                    return mVar_gl_MaxGeometryAtomicCounters;
                }
                break;
            }
            case 0x00000427u:
            {
                if (name == BuiltInName::bitfieldExtract_2C0C0C)
                {
                    return &BuiltInFunction::kFunction_bitfieldExtract_2C0C0C;
                }
                break;
            }
            case 0x0000042bu:
            {
                if (name == BuiltInName::findLSB_1C)
                {
                    return &BuiltInFunction::kFunction_findLSB_1C;
                }
                break;
            }
            case 0x0000042du:
            {
                if (name == BuiltInName::findLSB_1D)
                {
                    return &BuiltInFunction::kFunction_findLSB_1D;
                }
                break;
            }
            case 0x0000042fu:
            {
                if (name == BuiltInName::textureGather_0J2B0C)
                {
                    return &BuiltInFunction::kFunction_textureGather_0J2B0C;
                }
                break;
            }
            case 0x00000434u:
            {
                if (name == BuiltInName::unpackUnorm4x8_0D)
                {
                    return &BuiltInFunction::kFunction_unpackUnorm4x8_0D;
                }
                break;
            }
            case 0x00000435u:
            {
                if (name == BuiltInName::bitfieldReverse_2C)
                {
                    return &BuiltInFunction::kFunction_bitfieldReverse_2C;
                }
                break;
            }
        }
        if (mShaderType == GL_COMPUTE_SHADER)
        {
            switch (nameHash)
            {
                case 0x0000006du:
                {
                    if (name == BuiltInName::groupMemoryBarrier_)
                    {
                        return &BuiltInFunction::kFunction_groupMemoryBarrier_;
                    }
                    break;
                }
                case 0x0000006eu:
                {
                    if (name == BuiltInName::gl_NumWorkGroups)
                    {
                        return &BuiltInVariable::kVar_gl_NumWorkGroups;
                    }
                    break;
                }
                case 0x0000016fu:
                {
                    if (name == BuiltInName::barrier_)
                    {
                        return &BuiltInFunction::kFunction_barrier_;
                    }
                    break;
                }
                case 0x00000249u:
                {
                    if (name == BuiltInName::gl_WorkGroupID)
                    {
                        return &BuiltInVariable::kVar_gl_WorkGroupID;
                    }
                    break;
                }
                case 0x0000028fu:
                {
                    if (name == BuiltInName::gl_WorkGroupSize)
                    {
                        return &BuiltInVariable::kVar_gl_WorkGroupSize;
                    }
                    break;
                }
                case 0x00000322u:
                {
                    if (name == BuiltInName::gl_LocalInvocationIndex)
                    {
                        return &BuiltInVariable::kVar_gl_LocalInvocationIndex;
                    }
                    break;
                }
                case 0x0000036fu:
                {
                    if (name == BuiltInName::gl_GlobalInvocationID)
                    {
                        return &BuiltInVariable::kVar_gl_GlobalInvocationID;
                    }
                    break;
                }
                case 0x00000419u:
                {
                    if (name == BuiltInName::memoryBarrierShared_)
                    {
                        return &BuiltInFunction::kFunction_memoryBarrierShared_;
                    }
                    break;
                }
                case 0x0000041du:
                {
                    if (name == BuiltInName::gl_LocalInvocationID)
                    {
                        return &BuiltInVariable::kVar_gl_LocalInvocationID;
                    }
                    break;
                }
            }
        }
        if (mShaderType == GL_GEOMETRY_SHADER_EXT)
        {
            switch (nameHash)
            {
                case 0x00000016u:
                {
                    if (name == BuiltInName::gl_Layer)
                    {
                        return &BuiltInVariable::kVar_gl_LayerGS;
                    }
                    break;
                }
                case 0x000000a5u:
                {
                    if (name == BuiltInName::gl_PerVertex)
                    {
                        return mVar_gl_PerVertex;
                    }
                    break;
                }
                case 0x0000019bu:
                {
                    if (name == BuiltInName::gl_InvocationID)
                    {
                        return &BuiltInVariable::kVar_gl_InvocationID;
                    }
                    break;
                }
                case 0x00000263u:
                {
                    if (name == BuiltInName::gl_PrimitiveID)
                    {
                        return &BuiltInVariable::kVar_gl_PrimitiveIDGS;
                    }
                    break;
                }
                case 0x000002deu:
                {
                    if (name == BuiltInName::gl_PrimitiveIDIn)
                    {
                        return &BuiltInVariable::kVar_gl_PrimitiveIDIn;
                    }
                    break;
                }
                case 0x00000310u:
                {
                    if (name == BuiltInName::EndPrimitive_)
                    {
                        return &BuiltInFunction::kFunction_EndPrimitive_;
                    }
                    break;
                }
                case 0x00000397u:
                {
                    if (name == BuiltInName::gl_Position)
                    {
                        return mVar_gl_PositionGS;
                    }
                    break;
                }
                case 0x000003e5u:
                {
                    if (name == BuiltInName::EmitVertex_)
                    {
                        return &BuiltInFunction::kFunction_EmitVertex_;
                    }
                    break;
                }
            }
        }
        if ((mShaderType == GL_FRAGMENT_SHADER) && (mResources.EXT_geometry_shader))
        {
            switch (nameHash)
            {
                case 0x00000016u:
                {
                    if (name == BuiltInName::gl_Layer)
                    {
                        return &BuiltInVariable::kVar_gl_Layer;
                    }
                    break;
                }
                case 0x00000263u:
                {
                    if (name == BuiltInName::gl_PrimitiveID)
                    {
                        return &BuiltInVariable::kVar_gl_PrimitiveID;
                    }
                    break;
                }
            }
        }
    }
    if (shaderVersion >= 300)
    {
        switch (nameHash)
        {
            case 0x00000003u:
            {
                if (name == BuiltInName::textureProjLod_0W2B0B)
                {
                    return &BuiltInFunction::kFunction_textureProjLod_0W2B0B;
                }
                break;
            }
            case 0x00000007u:
            {
                if (name == BuiltInName::texture_0J2B)
                {
                    return &BuiltInFunction::kFunction_texture_0J2B;
                }
                break;
            }
            case 0x0000000au:
            {
                if (name == BuiltInName::textureGrad_0K2B1B1B)
                {
                    return &BuiltInFunction::kFunction_textureGrad_0K2B1B1B;
                }
                break;
            }
            case 0x0000000cu:
            {
                if (name == BuiltInName::lessThan_2D2D)
                {
                    return &BuiltInFunction::kFunction_lessThan_2D2D;
                }
                break;
            }
            case 0x0000000du:
            {
                if (name == BuiltInName::equal_3D3D)
                {
                    return &BuiltInFunction::kFunction_equal_3D3D;
                }
                break;
            }
            case 0x00000014u:
            {
                if (name == BuiltInName::textureGradOffset_0e3B1B1B1C)
                {
                    return &BuiltInFunction::kFunction_textureGradOffset_0e3B1B1B1C;
                }
                break;
            }
            case 0x00000019u:
            {
                if (name == BuiltInName::textureGradOffset_0W1B1B1B1C)
                {
                    return &BuiltInFunction::kFunction_textureGradOffset_0W1B1B1B1C;
                }
                break;
            }
            case 0x0000001fu:
            {
                if (name == BuiltInName::outerProduct_1B1B)
                {
                    return &BuiltInFunction::kFunction_outerProduct_1B1B;
                }
                break;
            }
            case 0x00000022u:
            {
                if (name == BuiltInName::max_2D2D)
                {
                    return &BuiltInFunction::kFunction_max_2D2D;
                }
                break;
            }
            case 0x00000026u:
            {
                if (name == BuiltInName::tanh_3B)
                {
                    return &BuiltInFunction::kFunction_tanh_3B;
                }
                break;
            }
            case 0x00000027u:
            {
                if (name == BuiltInName::textureGradOffset_0Z2B1B1B1C)
                {
                    return &BuiltInFunction::kFunction_textureGradOffset_0Z2B1B1B1C;
                }
                break;
            }
            case 0x00000028u:
            {
                if (name == BuiltInName::textureProjGradOffset_0R3B2B2B2C)
                {
                    return &BuiltInFunction::kFunction_textureProjGradOffset_0R3B2B2B2C;
                }
                break;
            }
            case 0x00000029u:
            {
                if (name == BuiltInName::round_1B)
                {
                    return &BuiltInFunction::kFunction_round_1B;
                }
                break;
            }
            case 0x0000002eu:
            {
                if (name == BuiltInName::matrixCompMult_EBEB)
                {
                    return &BuiltInFunction::kFunction_matrixCompMult_EBEB;
                }
                break;
            }
            case 0x00000030u:
            {
                if (name == BuiltInName::textureLod_0X2B0B)
                {
                    return &BuiltInFunction::kFunction_textureLod_0X2B0B;
                }
                break;
            }
            case 0x00000031u:
            {
                if (name == BuiltInName::clamp_1D1D1D)
                {
                    return &BuiltInFunction::kFunction_clamp_1D1D1D;
                }
                break;
            }
            case 0x00000033u:
            {
                if (name == BuiltInName::texelFetch_0W1C0C)
                {
                    return &BuiltInFunction::kFunction_texelFetch_0W1C0C;
                }
                break;
            }
            case 0x00000034u:
            {
                if (name == BuiltInName::texture_0S2B)
                {
                    return &BuiltInFunction::kFunction_texture_0S2B;
                }
                break;
            }
            case 0x00000035u:
            {
                if (name == BuiltInName::textureGrad_0R2B2B2B)
                {
                    return &BuiltInFunction::kFunction_textureGrad_0R2B2B2B;
                }
                break;
            }
            case 0x00000037u:
            {
                if (name == BuiltInName::textureProjGrad_0W2B1B1B)
                {
                    return &BuiltInFunction::kFunction_textureProjGrad_0W2B1B1B;
                }
                break;
            }
            case 0x00000038u:
            {
                if (name == BuiltInName::min_0C0C)
                {
                    return &BuiltInFunction::kFunction_min_0C0C;
                }
                break;
            }
            case 0x00000040u:
            {
                if (name == BuiltInName::texelFetchOffset_0H1C0C1C)
                {
                    return &BuiltInFunction::kFunction_texelFetchOffset_0H1C0C1C;
                }
                break;
            }
            case 0x00000042u:
            {
                if (name == BuiltInName::textureLodOffset_0X2B0B2C)
                {
                    return &BuiltInFunction::kFunction_textureLodOffset_0X2B0B2C;
                }
                break;
            }
            case 0x00000050u:
            {
                if (name == BuiltInName::texture_0Z2B)
                {
                    return &BuiltInFunction::kFunction_texture_0Z2B;
                }
                break;
            }
            case 0x00000051u:
            {
                if (name == BuiltInName::textureProjLodOffset_0W2B0B1C)
                {
                    return &BuiltInFunction::kFunction_textureProjLodOffset_0W2B0B1C;
                }
                break;
            }
            case 0x00000055u:
            {
                if (name == BuiltInName::textureOffset_0K2B1C)
                {
                    return &BuiltInFunction::kFunction_textureOffset_0K2B1C;
                }
                break;
            }
            case 0x00000057u:
            {
                if (name == BuiltInName::isinf_1B)
                {
                    return &BuiltInFunction::kFunction_isinf_1B;
                }
                break;
            }
            case 0x0000005bu:
            {
                if (name == BuiltInName::min_1D1D)
                {
                    return &BuiltInFunction::kFunction_min_1D1D;
                }
                break;
            }
            case 0x0000005cu:
            {
                if (name == BuiltInName::packSnorm2x16_1B)
                {
                    return &BuiltInFunction::kFunction_packSnorm2x16_1B;
                }
                break;
            }
            case 0x0000005eu:
            {
                if (name == BuiltInName::floatBitsToUint_3B)
                {
                    return &BuiltInFunction::kFunction_floatBitsToUint_3B;
                }
                break;
            }
            case 0x0000005fu:
            {
                if (name == BuiltInName::max_0D0D)
                {
                    return &BuiltInFunction::kFunction_max_0D0D;
                }
                break;
            }
            case 0x00000063u:
            {
                if (name == BuiltInName::textureProjGrad_0H3B1B1B)
                {
                    return &BuiltInFunction::kFunction_textureProjGrad_0H3B1B1B;
                }
                break;
            }
            case 0x00000065u:
            {
                if (name == BuiltInName::atanh_0B)
                {
                    return &BuiltInFunction::kFunction_atanh_0B;
                }
                break;
            }
            case 0x00000066u:
            {
                if (name == BuiltInName::trunc_3B)
                {
                    return &BuiltInFunction::kFunction_trunc_3B;
                }
                break;
            }
            case 0x00000069u:
            {
                if (name == BuiltInName::roundEven_2B)
                {
                    return &BuiltInFunction::kFunction_roundEven_2B;
                }
                break;
            }
            case 0x0000006cu:
            {
                if (name == BuiltInName::modf_3B3B)
                {
                    return &BuiltInFunction::kFunction_modf_3B3B;
                }
                break;
            }
            case 0x00000071u:
            {
                if (name == BuiltInName::textureSize_0X0C)
                {
                    return &BuiltInFunction::kFunction_textureSize_0X0C;
                }
                break;
            }
            case 0x00000075u:
            {
                if (name == BuiltInName::asinh_0B)
                {
                    return &BuiltInFunction::kFunction_asinh_0B;
                }
                break;
            }
            case 0x00000077u:
            {
                if (name == BuiltInName::greaterThanEqual_1D1D)
                {
                    return &BuiltInFunction::kFunction_greaterThanEqual_1D1D;
                }
                break;
            }
            case 0x00000078u:
            {
                if (name == BuiltInName::texture_0N1B)
                {
                    return &BuiltInFunction::kFunction_texture_0N1B;
                }
                break;
            }
            case 0x0000007au:
            {
                if (name == BuiltInName::textureGrad_0J2B2B2B)
                {
                    return &BuiltInFunction::kFunction_textureGrad_0J2B2B2B;
                }
                break;
            }
            case 0x0000007bu:
            {
                if (name == BuiltInName::transpose_9B)
                {
                    return &BuiltInFunction::kFunction_transpose_9B;
                }
                break;
            }
            case 0x0000007eu:
            {
                if (name == BuiltInName::uintBitsToFloat_1D)
                {
                    return &BuiltInFunction::kFunction_uintBitsToFloat_1D;
                }
                break;
            }
            case 0x00000080u:
            {
                if (name == BuiltInName::textureGrad_0Q1B1B1B)
                {
                    return &BuiltInFunction::kFunction_textureGrad_0Q1B1B1B;
                }
                break;
            }
            case 0x00000082u:
            {
                if (name == BuiltInName::unpackHalf2x16_0D)
                {
                    return &BuiltInFunction::kFunction_unpackHalf2x16_0D;
                }
                break;
            }
            case 0x00000086u:
            {
                if (name == BuiltInName::sinh_3B)
                {
                    return &BuiltInFunction::kFunction_sinh_3B;
                }
                break;
            }
            case 0x0000008au:
            {
                if (name == BuiltInName::clamp_3C0C0C)
                {
                    return &BuiltInFunction::kFunction_clamp_3C0C0C;
                }
                break;
            }
            case 0x0000008bu:
            {
                if (name == BuiltInName::determinant_5B)
                {
                    return &BuiltInFunction::kFunction_determinant_5B;
                }
                break;
            }
            case 0x0000008du:
            {
                if (name == BuiltInName::textureLodOffset_0I2B0B2C)
                {
                    return &BuiltInFunction::kFunction_textureLodOffset_0I2B0B2C;
                }
                break;
            }
            case 0x00000093u:
            {
                if (name == BuiltInName::textureLodOffset_0W1B0B1C)
                {
                    return &BuiltInFunction::kFunction_textureLodOffset_0W1B0B1C;
                }
                break;
            }
            case 0x00000095u:
            {
                if (name == BuiltInName::texelFetchOffset_0W1C0C1C)
                {
                    return &BuiltInFunction::kFunction_texelFetchOffset_0W1C0C1C;
                }
                break;
            }
            case 0x00000098u:
            {
                if (name == BuiltInName::min_3D3D)
                {
                    return &BuiltInFunction::kFunction_min_3D3D;
                }
                break;
            }
            case 0x000000a2u:
            {
                if (name == BuiltInName::textureProj_0Q2B)
                {
                    return &BuiltInFunction::kFunction_textureProj_0Q2B;
                }
                break;
            }
            case 0x000000a4u:
            {
                if (name == BuiltInName::textureSize_0H0C)
                {
                    return &BuiltInFunction::kFunction_textureSize_0H0C;
                }
                break;
            }
            case 0x000000a8u:
            {
                if (name == BuiltInName::textureLodOffset_0Z2B0B1C)
                {
                    return &BuiltInFunction::kFunction_textureLodOffset_0Z2B0B1C;
                }
                break;
            }
            case 0x000000abu:
            {
                if (name == BuiltInName::texelFetch_0T2C0C)
                {
                    return &BuiltInFunction::kFunction_texelFetch_0T2C0C;
                }
                break;
            }
            case 0x000000b3u:
            {
                if (name == BuiltInName::acosh_1B)
                {
                    return &BuiltInFunction::kFunction_acosh_1B;
                }
                break;
            }
            case 0x000000b6u:
            {
                if (name == BuiltInName::floatBitsToInt_0B)
                {
                    return &BuiltInFunction::kFunction_floatBitsToInt_0B;
                }
                break;
            }
            case 0x000000bbu:
            {
                if (name == BuiltInName::outerProduct_3B2B)
                {
                    return &BuiltInFunction::kFunction_outerProduct_3B2B;
                }
                break;
            }
            case 0x000000bcu:
            {
                if (name == BuiltInName::textureSize_0c0C)
                {
                    return &BuiltInFunction::kFunction_textureSize_0c0C;
                }
                break;
            }
            case 0x000000bfu:
            {
                if (name == BuiltInName::intBitsToFloat_2C)
                {
                    return &BuiltInFunction::kFunction_intBitsToFloat_2C;
                }
                break;
            }
            case 0x000000c0u:
            {
                if (name == BuiltInName::matrixCompMult_BBBB)
                {
                    return &BuiltInFunction::kFunction_matrixCompMult_BBBB;
                }
                break;
            }
            case 0x000000c1u:
            {
                if (name == BuiltInName::textureSize_0e0C)
                {
                    return &BuiltInFunction::kFunction_textureSize_0e0C;
                }
                break;
            }
            case 0x000000c5u:
            {
                if (name == BuiltInName::textureLod_0Z2B0B)
                {
                    return &BuiltInFunction::kFunction_textureLod_0Z2B0B;
                }
                break;
            }
            case 0x000000ccu:
            {
                if (name == BuiltInName::textureLod_0R2B0B)
                {
                    return &BuiltInFunction::kFunction_textureLod_0R2B0B;
                }
                break;
            }
            case 0x000000ceu:
            {
                if (name == BuiltInName::asinh_3B)
                {
                    return &BuiltInFunction::kFunction_asinh_3B;
                }
                break;
            }
            case 0x000000cfu:
            {
                if (name == BuiltInName::textureLod_0W1B0B)
                {
                    return &BuiltInFunction::kFunction_textureLod_0W1B0B;
                }
                break;
            }
            case 0x000000d2u:
            {
                if (name == BuiltInName::textureProjGradOffset_0c3B1B1B1C)
                {
                    return &BuiltInFunction::kFunction_textureProjGradOffset_0c3B1B1B1C;
                }
                break;
            }
            case 0x000000d4u:
            {
                if (name == BuiltInName::textureProjGradOffset_0W3B1B1B1C)
                {
                    return &BuiltInFunction::kFunction_textureProjGradOffset_0W3B1B1B1C;
                }
                break;
            }
            case 0x000000d6u:
            {
                if (name == BuiltInName::texelFetch_0L1C0C)
                {
                    return &BuiltInFunction::kFunction_texelFetch_0L1C0C;
                }
                break;
            }
            case 0x000000e1u:
            {
                if (name == BuiltInName::min_0D0D)
                {
                    return &BuiltInFunction::kFunction_min_0D0D;
                }
                break;
            }
            case 0x000000e3u:
            {
                if (name == BuiltInName::texelFetchOffset_0T2C0C1C)
                {
                    return &BuiltInFunction::kFunction_texelFetchOffset_0T2C0C1C;
                }
                break;
            }
            case 0x000000edu:
            {
                if (name == BuiltInName::texture_0c2B)
                {
                    return &BuiltInFunction::kFunction_texture_0c2B;
                }
                break;
            }
            case 0x000000efu:
            {
                if (name == BuiltInName::textureSize_0R0C)
                {
                    return &BuiltInFunction::kFunction_textureSize_0R0C;
                }
                break;
            }
            case 0x000000f5u:
            {
                if (name == BuiltInName::floatBitsToUint_0B)
                {
                    return &BuiltInFunction::kFunction_floatBitsToUint_0B;
                }
                break;
            }
            case 0x000000fbu:
            {
                if (name == BuiltInName::transpose_FB)
                {
                    return &BuiltInFunction::kFunction_transpose_FB;
                }
                break;
            }
            case 0x00000106u:
            {
                if (name == BuiltInName::isnan_2B)
                {
                    return &BuiltInFunction::kFunction_isnan_2B;
                }
                break;
            }
            case 0x00000109u:
            {
                if (name == BuiltInName::textureGradOffset_0K2B1B1B1C)
                {
                    return &BuiltInFunction::kFunction_textureGradOffset_0K2B1B1B1C;
                }
                break;
            }
            case 0x0000010au:
            {
                if (name == BuiltInName::textureProjLodOffset_0I3B0B2C)
                {
                    return &BuiltInFunction::kFunction_textureProjLodOffset_0I3B0B2C;
                }
                break;
            }
            case 0x0000010cu:
            {
                if (name == BuiltInName::textureProjLod_0H2B0B)
                {
                    return &BuiltInFunction::kFunction_textureProjLod_0H2B0B;
                }
                break;
            }
            case 0x0000010fu:
            {
                if (name == BuiltInName::textureProjLod_0Q3B0B)
                {
                    return &BuiltInFunction::kFunction_textureProjLod_0Q3B0B;
                }
                break;
            }
            case 0x00000115u:
            {
                if (name == BuiltInName::textureProjGradOffset_0Q2B1B1B1C)
                {
                    return &BuiltInFunction::kFunction_textureProjGradOffset_0Q2B1B1B1C;
                }
                break;
            }
            case 0x00000118u:
            {
                if (name == BuiltInName::cosh_0B)
                {
                    return &BuiltInFunction::kFunction_cosh_0B;
                }
                break;
            }
            case 0x00000119u:
            {
                if (name == BuiltInName::sign_0C)
                {
                    return &BuiltInFunction::kFunction_sign_0C;
                }
                break;
            }
            case 0x0000011au:
            {
                if (name == BuiltInName::textureProjGradOffset_0H3B1B1B1C)
                {
                    return &BuiltInFunction::kFunction_textureProjGradOffset_0H3B1B1B1C;
                }
                break;
            }
            case 0x00000120u:
            {
                if (name == BuiltInName::equal_2D2D)
                {
                    return &BuiltInFunction::kFunction_equal_2D2D;
                }
                break;
            }
            case 0x00000121u:
            {
                if (name == BuiltInName::tanh_2B)
                {
                    return &BuiltInFunction::kFunction_tanh_2B;
                }
                break;
            }
            case 0x00000123u:
            {
                if (name == BuiltInName::textureProjLodOffset_0W3B0B1C)
                {
                    return &BuiltInFunction::kFunction_textureProjLodOffset_0W3B0B1C;
                }
                break;
            }
            case 0x00000124u:
            {
                if (name == BuiltInName::round_2B)
                {
                    return &BuiltInFunction::kFunction_round_2B;
                }
                break;
            }
            case 0x0000012bu:
            {
                if (name == BuiltInName::textureGrad_0W1B1B1B)
                {
                    return &BuiltInFunction::kFunction_textureGrad_0W1B1B1B;
                }
                break;
            }
            case 0x0000012du:
            {
                if (name == BuiltInName::clamp_3D3D3D)
                {
                    return &BuiltInFunction::kFunction_clamp_3D3D3D;
                }
                break;
            }
            case 0x0000012eu:
            {
                if (name == BuiltInName::yuv_2_rgb_2B0G)
                {
                    return &BuiltInFunction::kFunction_yuv_2_rgb_2B0G;
                }
                break;
            }
            case 0x00000132u:
            {
                if (name == BuiltInName::textureSize_0T0C)
                {
                    return &BuiltInFunction::kFunction_textureSize_0T0C;
                }
                break;
            }
            case 0x00000137u:
            {
                if (name == BuiltInName::matrixCompMult_9B9B)
                {
                    return &BuiltInFunction::kFunction_matrixCompMult_9B9B;
                }
                break;
            }
            case 0x00000139u:
            {
                if (name == BuiltInName::transpose_7B)
                {
                    return &BuiltInFunction::kFunction_transpose_7B;
                }
                break;
            }
            case 0x0000013cu:
            {
                if (name == BuiltInName::abs_1C)
                {
                    return &BuiltInFunction::kFunction_abs_1C;
                }
                break;
            }
            case 0x00000149u:
            {
                if (name == BuiltInName::greaterThan_2D2D)
                {
                    return &BuiltInFunction::kFunction_greaterThan_2D2D;
                }
                break;
            }
            case 0x0000014cu:
            {
                if (name == BuiltInName::texelFetchOffset_0I2C0C2C)
                {
                    return &BuiltInFunction::kFunction_texelFetchOffset_0I2C0C2C;
                }
                break;
            }
            case 0x00000151u:
            {
                if (name == BuiltInName::textureProj_0L2B)
                {
                    return &BuiltInFunction::kFunction_textureProj_0L2B;
                }
                break;
            }
            case 0x00000152u:
            {
                if (name == BuiltInName::acosh_2B)
                {
                    return &BuiltInFunction::kFunction_acosh_2B;
                }
                break;
            }
            case 0x00000157u:
            {
                if (name == BuiltInName::textureSize_0Q0C)
                {
                    return &BuiltInFunction::kFunction_textureSize_0Q0C;
                }
                break;
            }
            case 0x0000015cu:
            {
                if (name == BuiltInName::matrixCompMult_7B7B)
                {
                    return &BuiltInFunction::kFunction_matrixCompMult_7B7B;
                }
                break;
            }
            case 0x00000162u:
            {
                if (name == BuiltInName::roundEven_3B)
                {
                    return &BuiltInFunction::kFunction_roundEven_3B;
                }
                break;
            }
            case 0x00000163u:
            {
                if (name == BuiltInName::trunc_0B)
                {
                    return &BuiltInFunction::kFunction_trunc_0B;
                }
                break;
            }
            case 0x00000164u:
            {
                if (name == BuiltInName::atanh_1B)
                {
                    return &BuiltInFunction::kFunction_atanh_1B;
                }
                break;
            }
            case 0x00000169u:
            {
                if (name == BuiltInName::textureProjGradOffset_0W2B1B1B1C)
                {
                    return &BuiltInFunction::kFunction_textureProjGradOffset_0W2B1B1B1C;
                }
                break;
            }
            case 0x0000016au:
            {
                if (name == BuiltInName::textureLodOffset_0c2B0B1C)
                {
                    return &BuiltInFunction::kFunction_textureLodOffset_0c2B0B1C;
                }
                break;
            }
            case 0x0000016bu:
            {
                if (name == BuiltInName::transpose_EB)
                {
                    return &BuiltInFunction::kFunction_transpose_EB;
                }
                break;
            }
            case 0x00000170u:
            {
                if (name == BuiltInName::max_0C0C)
                {
                    return &BuiltInFunction::kFunction_max_0C0C;
                }
                break;
            }
            case 0x00000174u:
            {
                if (name == BuiltInName::textureLod_0S2B0B)
                {
                    return &BuiltInFunction::kFunction_textureLod_0S2B0B;
                }
                break;
            }
            case 0x00000175u:
            {
                if (name == BuiltInName::inverse_AB)
                {
                    return &BuiltInFunction::kFunction_inverse_AB;
                }
                break;
            }
            case 0x00000179u:
            {
                if (name == BuiltInName::textureLod_0I2B0B)
                {
                    return &BuiltInFunction::kFunction_textureLod_0I2B0B;
                }
                break;
            }
            case 0x0000017eu:
            {
                if (name == BuiltInName::greaterThanEqual_3D3D)
                {
                    return &BuiltInFunction::kFunction_greaterThanEqual_3D3D;
                }
                break;
            }
            case 0x0000017fu:
            {
                if (name == BuiltInName::sinh_0B)
                {
                    return &BuiltInFunction::kFunction_sinh_0B;
                }
                break;
            }
            case 0x00000183u:
            {
                if (name == BuiltInName::uintBitsToFloat_0D)
                {
                    return &BuiltInFunction::kFunction_uintBitsToFloat_0D;
                }
                break;
            }
            case 0x0000018au:
            {
                if (name == BuiltInName::max_2C2C)
                {
                    return &BuiltInFunction::kFunction_max_2C2C;
                }
                break;
            }
            case 0x0000018eu:
            {
                if (name == BuiltInName::textureProjOffset_0R3B2C)
                {
                    return &BuiltInFunction::kFunction_textureProjOffset_0R3B2C;
                }
                break;
            }
            case 0x0000018fu:
            {
                if (name == BuiltInName::min_2D2D)
                {
                    return &BuiltInFunction::kFunction_min_2D2D;
                }
                break;
            }
            case 0x00000194u:
            {
                if (name == BuiltInName::gl_MaxFragmentInputVectors)
                {
                    return mVar_gl_MaxFragmentInputVectors;
                }
                break;
            }
            case 0x00000196u:
            {
                if (name == BuiltInName::notEqual_2D2D)
                {
                    return &BuiltInFunction::kFunction_notEqual_2D2D;
                }
                break;
            }
            case 0x0000019cu:
            {
                if (name == BuiltInName::transpose_BB)
                {
                    return &BuiltInFunction::kFunction_transpose_BB;
                }
                break;
            }
            case 0x000001a3u:
            {
                if (name == BuiltInName::textureGrad_0I2B2B2B)
                {
                    return &BuiltInFunction::kFunction_textureGrad_0I2B2B2B;
                }
                break;
            }
            case 0x000001a8u:
            {
                if (name == BuiltInName::textureLod_0T2B0B)
                {
                    return &BuiltInFunction::kFunction_textureLod_0T2B0B;
                }
                break;
            }
            case 0x000001abu:
            {
                if (name == BuiltInName::outerProduct_3B1B)
                {
                    return &BuiltInFunction::kFunction_outerProduct_3B1B;
                }
                break;
            }
            case 0x000001adu:
            {
                if (name == BuiltInName::determinant_AB)
                {
                    return &BuiltInFunction::kFunction_determinant_AB;
                }
                break;
            }
            case 0x000001aeu:
            {
                if (name == BuiltInName::texture_0H1B)
                {
                    return &BuiltInFunction::kFunction_texture_0H1B;
                }
                break;
            }
            case 0x000001b3u:
            {
                if (name == BuiltInName::floatBitsToInt_1B)
                {
                    return &BuiltInFunction::kFunction_floatBitsToInt_1B;
                }
                break;
            }
            case 0x000001bau:
            {
                if (name == BuiltInName::greaterThan_1D1D)
                {
                    return &BuiltInFunction::kFunction_greaterThan_1D1D;
                }
                break;
            }
            case 0x000001bbu:
            {
                if (name == BuiltInName::intBitsToFloat_3C)
                {
                    return &BuiltInFunction::kFunction_intBitsToFloat_3C;
                }
                break;
            }
            case 0x000001bcu:
            {
                if (name == BuiltInName::textureLod_0K2B0B)
                {
                    return &BuiltInFunction::kFunction_textureLod_0K2B0B;
                }
                break;
            }
            case 0x000001bdu:
            {
                if (name == BuiltInName::mix_3B3B3E)
                {
                    return &BuiltInFunction::kFunction_mix_3B3B3E;
                }
                break;
            }
            case 0x000001c5u:
            {
                if (name == BuiltInName::sign_3C)
                {
                    return &BuiltInFunction::kFunction_sign_3C;
                }
                break;
            }
            case 0x000001c6u:
            {
                if (name == BuiltInName::cosh_3B)
                {
                    return &BuiltInFunction::kFunction_cosh_3B;
                }
                break;
            }
            case 0x000001c7u:
            {
                if (name == BuiltInName::textureGrad_0d3B2B2B)
                {
                    return &BuiltInFunction::kFunction_textureGrad_0d3B2B2B;
                }
                break;
            }
            case 0x000001cbu:
            {
                if (name == BuiltInName::min_1C1C)
                {
                    return &BuiltInFunction::kFunction_min_1C1C;
                }
                break;
            }
            case 0x000001ccu:
            {
                if (name == BuiltInName::textureLodOffset_0Q1B0B1C)
                {
                    return &BuiltInFunction::kFunction_textureLodOffset_0Q1B0B1C;
                }
                break;
            }
            case 0x000001ceu:
            {
                if (name == BuiltInName::determinant_FB)
                {
                    return &BuiltInFunction::kFunction_determinant_FB;
                }
                break;
            }
            case 0x000001d1u:
            {
                if (name == BuiltInName::textureGradOffset_0c2B1B1B1C)
                {
                    return &BuiltInFunction::kFunction_textureGradOffset_0c2B1B1B1C;
                }
                break;
            }
            case 0x000001d2u:
            {
                if (name == BuiltInName::texture_0d3B)
                {
                    return &BuiltInFunction::kFunction_texture_0d3B;
                }
                break;
            }
            case 0x000001d3u:
            {
                if (name == BuiltInName::clamp_3D0D0D)
                {
                    return &BuiltInFunction::kFunction_clamp_3D0D0D;
                }
                break;
            }
            case 0x000001d8u:
            {
                if (name == BuiltInName::textureLod_0J2B0B)
                {
                    return &BuiltInFunction::kFunction_textureLod_0J2B0B;
                }
                break;
            }
            case 0x000001dbu:
            {
                if (name == BuiltInName::isinf_0B)
                {
                    return &BuiltInFunction::kFunction_isinf_0B;
                }
                break;
            }
            case 0x000001e0u:
            {
                if (name == BuiltInName::min_1D0D)
                {
                    return &BuiltInFunction::kFunction_min_1D0D;
                }
                break;
            }
            case 0x000001e1u:
            {
                if (name == BuiltInName::lessThanEqual_1D1D)
                {
                    return &BuiltInFunction::kFunction_lessThanEqual_1D1D;
                }
                break;
            }
            case 0x000001e2u:
            {
                if (name == BuiltInName::textureSize_0M0C)
                {
                    return &BuiltInFunction::kFunction_textureSize_0M0C;
                }
                break;
            }
            case 0x000001e3u:
            {
                if (name == BuiltInName::floatBitsToUint_2B)
                {
                    return &BuiltInFunction::kFunction_floatBitsToUint_2B;
                }
                break;
            }
            case 0x000001e4u:
            {
                if (name == BuiltInName::texelFetchOffset_0K2C0C1C)
                {
                    return &BuiltInFunction::kFunction_texelFetchOffset_0K2C0C1C;
                }
                break;
            }
            case 0x000001e7u:
            {
                if (name == BuiltInName::texelFetch_0Z2C0C)
                {
                    return &BuiltInFunction::kFunction_texelFetch_0Z2C0C;
                }
                break;
            }
            case 0x000001e8u:
            {
                if (name == BuiltInName::texelFetchExt_0U1C0C)
                {
                    return &BuiltInFunction::kFunction_texelFetchExt_0U1C0C;
                }
                break;
            }
            case 0x000001e9u:
            {
                if (name == BuiltInName::texture_0K2B)
                {
                    return &BuiltInFunction::kFunction_texture_0K2B;
                }
                break;
            }
            case 0x000001eau:
            {
                if (name == BuiltInName::texelFetch_0M1C0C)
                {
                    return &BuiltInFunction::kFunction_texelFetch_0M1C0C;
                }
                break;
            }
            case 0x000001ebu:
            {
                if (name == BuiltInName::clamp_2D0D0D)
                {
                    return &BuiltInFunction::kFunction_clamp_2D0D0D;
                }
                break;
            }
            case 0x000001ecu:
            {
                if (name == BuiltInName::transpose_AB)
                {
                    return &BuiltInFunction::kFunction_transpose_AB;
                }
                break;
            }
            case 0x000001efu:
            {
                if (name == BuiltInName::texture_0M1B)
                {
                    return &BuiltInFunction::kFunction_texture_0M1B;
                }
                break;
            }
            case 0x000001f0u:
            {
                if (name == BuiltInName::min_2C0C)
                {
                    return &BuiltInFunction::kFunction_min_2C0C;
                }
                break;
            }
            case 0x000001f4u:
            {
                if (name == BuiltInName::clamp_3C3C3C)
                {
                    return &BuiltInFunction::kFunction_clamp_3C3C3C;
                }
                break;
            }
            case 0x000001f5u:
            {
                if (name == BuiltInName::textureSize_0K0C)
                {
                    return &BuiltInFunction::kFunction_textureSize_0K0C;
                }
                break;
            }
            case 0x000001f7u:
            {
                if (name == BuiltInName::textureGrad_0S2B2B2B)
                {
                    return &BuiltInFunction::kFunction_textureGrad_0S2B2B2B;
                }
                break;
            }
            case 0x000001fcu:
            {
                if (name == BuiltInName::outerProduct_2B1B)
                {
                    return &BuiltInFunction::kFunction_outerProduct_2B1B;
                }
                break;
            }
            case 0x00000200u:
            {
                if (name == BuiltInName::roundEven_0B)
                {
                    return &BuiltInFunction::kFunction_roundEven_0B;
                }
                break;
            }
            case 0x00000203u:
            {
                if (name == BuiltInName::atanh_2B)
                {
                    return &BuiltInFunction::kFunction_atanh_2B;
                }
                break;
            }
            case 0x0000020au:
            {
                if (name == BuiltInName::mix_2B2B2E)
                {
                    return &BuiltInFunction::kFunction_mix_2B2B2E;
                }
                break;
            }
            case 0x0000020bu:
            {
                if (name == BuiltInName::textureGradOffset_0Q1B1B1B1C)
                {
                    return &BuiltInFunction::kFunction_textureGradOffset_0Q1B1B1B1C;
                }
                break;
            }
            case 0x0000020eu:
            {
                if (name == BuiltInName::max_2D0D)
                {
                    return &BuiltInFunction::kFunction_max_2D0D;
                }
                break;
            }
            case 0x00000210u:
            {
                if (name == BuiltInName::unpackUnorm2x16_0D)
                {
                    return &BuiltInFunction::kFunction_unpackUnorm2x16_0D;
                }
                break;
            }
            case 0x00000217u:
            {
                if (name == BuiltInName::max_1D1D)
                {
                    return &BuiltInFunction::kFunction_max_1D1D;
                }
                break;
            }
            case 0x00000218u:
            {
                if (name == BuiltInName::textureProjLod_0H3B0B)
                {
                    return &BuiltInFunction::kFunction_textureProjLod_0H3B0B;
                }
                break;
            }
            case 0x0000021au:
            {
                if (name == BuiltInName::textureSize_0d0C)
                {
                    return &BuiltInFunction::kFunction_textureSize_0d0C;
                }
                break;
            }
            case 0x00000221u:
            {
                if (name == BuiltInName::texture_0W1B)
                {
                    return &BuiltInFunction::kFunction_texture_0W1B;
                }
                break;
            }
            case 0x00000222u:
            {
                if (name == BuiltInName::cosh_2B)
                {
                    return &BuiltInFunction::kFunction_cosh_2B;
                }
                break;
            }
            case 0x00000225u:
            {
                if (name == BuiltInName::textureProjGrad_0R3B2B2B)
                {
                    return &BuiltInFunction::kFunction_textureProjGrad_0R3B2B2B;
                }
                break;
            }
            case 0x00000227u:
            {
                if (name == BuiltInName::textureGrad_0e3B1B1B)
                {
                    return &BuiltInFunction::kFunction_textureGrad_0e3B1B1B;
                }
                break;
            }
            case 0x00000228u:
            {
                if (name == BuiltInName::texelFetchOffset_0Q1C0C1C)
                {
                    return &BuiltInFunction::kFunction_texelFetchOffset_0Q1C0C1C;
                }
                break;
            }
            case 0x0000022au:
            {
                if (name == BuiltInName::textureProjGradOffset_0Q3B1B1B1C)
                {
                    return &BuiltInFunction::kFunction_textureProjGradOffset_0Q3B1B1B1C;
                }
                break;
            }
            case 0x0000022bu:
            {
                if (name == BuiltInName::transpose_6B)
                {
                    return &BuiltInFunction::kFunction_transpose_6B;
                }
                break;
            }
            case 0x0000022eu:
            {
                if (name == BuiltInName::abs_2C)
                {
                    return &BuiltInFunction::kFunction_abs_2C;
                }
                break;
            }
            case 0x0000022fu:
            {
                if (name == BuiltInName::unpackSnorm2x16_0D)
                {
                    return &BuiltInFunction::kFunction_unpackSnorm2x16_0D;
                }
                break;
            }
            case 0x00000230u:
            {
                if (name == BuiltInName::textureProj_0M3B)
                {
                    return &BuiltInFunction::kFunction_textureProj_0M3B;
                }
                break;
            }
            case 0x00000231u:
            {
                if (name == BuiltInName::texelFetch_0R2C0C)
                {
                    return &BuiltInFunction::kFunction_texelFetch_0R2C0C;
                }
                break;
            }
            case 0x00000238u:
            {
                if (name == BuiltInName::textureProjLod_0W3B0B)
                {
                    return &BuiltInFunction::kFunction_textureProjLod_0W3B0B;
                }
                break;
            }
            case 0x00000239u:
            {
                if (name == BuiltInName::inverse_5B)
                {
                    return &BuiltInFunction::kFunction_inverse_5B;
                }
                break;
            }
            case 0x0000023bu:
            {
                if (name == BuiltInName::textureOffset_0c2B1C)
                {
                    return &BuiltInFunction::kFunction_textureOffset_0c2B1C;
                }
                break;
            }
            case 0x0000023fu:
            {
                if (name == BuiltInName::lessThan_1D1D)
                {
                    return &BuiltInFunction::kFunction_lessThan_1D1D;
                }
                break;
            }
            case 0x00000242u:
            {
                if (name == BuiltInName::acosh_3B)
                {
                    return &BuiltInFunction::kFunction_acosh_3B;
                }
                break;
            }
            case 0x00000243u:
            {
                if (name == BuiltInName::max_3D0D)
                {
                    return &BuiltInFunction::kFunction_max_3D0D;
                }
                break;
            }
            case 0x00000244u:
            {
                if (name == BuiltInName::floatBitsToUint_1B)
                {
                    return &BuiltInFunction::kFunction_floatBitsToUint_1B;
                }
                break;
            }
            case 0x00000245u:
            {
                if (name == BuiltInName::textureProj_0L3B)
                {
                    return &BuiltInFunction::kFunction_textureProj_0L3B;
                }
                break;
            }
            case 0x00000246u:
            {
                if (name == BuiltInName::textureGradOffset_0R2B2B2B2C)
                {
                    return &BuiltInFunction::kFunction_textureGradOffset_0R2B2B2B2C;
                }
                break;
            }
            case 0x00000247u:
            {
                if (name == BuiltInName::textureGrad_0c2B1B1B)
                {
                    return &BuiltInFunction::kFunction_textureGrad_0c2B1B1B;
                }
                break;
            }
            case 0x0000024bu:
            {
                if (name == BuiltInName::modf_1B1B)
                {
                    return &BuiltInFunction::kFunction_modf_1B1B;
                }
                break;
            }
            case 0x0000024du:
            {
                if (name == BuiltInName::asinh_2B)
                {
                    return &BuiltInFunction::kFunction_asinh_2B;
                }
                break;
            }
            case 0x0000024eu:
            {
                if (name == BuiltInName::textureGrad_0Y2B2B2B)
                {
                    return &BuiltInFunction::kFunction_textureGrad_0Y2B2B2B;
                }
                break;
            }
            case 0x00000252u:
            {
                if (name == BuiltInName::greaterThan_3D3D)
                {
                    return &BuiltInFunction::kFunction_greaterThan_3D3D;
                }
                break;
            }
            case 0x00000255u:
            {
                if (name == BuiltInName::textureProj_0W3B)
                {
                    return &BuiltInFunction::kFunction_textureProj_0W3B;
                }
                break;
            }
            case 0x00000257u:
            {
                if (name == BuiltInName::texelFetch_0I2C0C)
                {
                    return &BuiltInFunction::kFunction_texelFetch_0I2C0C;
                }
                break;
            }
            case 0x0000025au:
            {
                if (name == BuiltInName::inverse_FB)
                {
                    return &BuiltInFunction::kFunction_inverse_FB;
                }
                break;
            }
            case 0x0000025du:
            {
                if (name == BuiltInName::gl_MinProgramTexelOffset)
                {
                    return mVar_gl_MinProgramTexelOffset;
                }
                break;
            }
            case 0x00000261u:
            {
                if (name == BuiltInName::clamp_0C0C0C)
                {
                    return &BuiltInFunction::kFunction_clamp_0C0C0C;
                }
                break;
            }
            case 0x00000262u:
            {
                if (name == BuiltInName::textureProj_0c3B)
                {
                    return &BuiltInFunction::kFunction_textureProj_0c3B;
                }
                break;
            }
            case 0x00000264u:
            {
                if (name == BuiltInName::texelFetchExt_0a1C0C)
                {
                    return &BuiltInFunction::kFunction_texelFetchExt_0a1C0C;
                }
                break;
            }
            case 0x00000265u:
            {
                if (name == BuiltInName::textureProjOffset_0W3B1C)
                {
                    return &BuiltInFunction::kFunction_textureProjOffset_0W3B1C;
                }
                break;
            }
            case 0x00000268u:
            {
                if (name == BuiltInName::uintBitsToFloat_3D)
                {
                    return &BuiltInFunction::kFunction_uintBitsToFloat_3D;
                }
                break;
            }
            case 0x0000026cu:
            {
                if (name == BuiltInName::textureProj_0N2B)
                {
                    return &BuiltInFunction::kFunction_textureProj_0N2B;
                }
                break;
            }
            case 0x0000026fu:
            {
                if (name == BuiltInName::textureProj_0R3B)
                {
                    return &BuiltInFunction::kFunction_textureProj_0R3B;
                }
                break;
            }
            case 0x00000271u:
            {
                if (name == BuiltInName::mix_1B1B1E)
                {
                    return &BuiltInFunction::kFunction_mix_1B1B1E;
                }
                break;
            }
            case 0x00000274u:
            {
                if (name == BuiltInName::lessThanEqual_3D3D)
                {
                    return &BuiltInFunction::kFunction_lessThanEqual_3D3D;
                }
                break;
            }
            case 0x0000027au:
            {
                if (name == BuiltInName::texture_0L1B)
                {
                    return &BuiltInFunction::kFunction_texture_0L1B;
                }
                break;
            }
            case 0x0000027bu:
            {
                if (name == BuiltInName::textureLodOffset_0H1B0B1C)
                {
                    return &BuiltInFunction::kFunction_textureLodOffset_0H1B0B1C;
                }
                break;
            }
            case 0x0000027fu:
            {
                if (name == BuiltInName::texelFetch_0X2C0C)
                {
                    return &BuiltInFunction::kFunction_texelFetch_0X2C0C;
                }
                break;
            }
            case 0x00000281u:
            {
                if (name == BuiltInName::notEqual_3D3D)
                {
                    return &BuiltInFunction::kFunction_notEqual_3D3D;
                }
                break;
            }
            case 0x00000282u:
            {
                if (name == BuiltInName::texelFetch_0K2C0C)
                {
                    return &BuiltInFunction::kFunction_texelFetch_0K2C0C;
                }
                break;
            }
            case 0x00000283u:
            {
                if (name == BuiltInName::outerProduct_1B3B)
                {
                    return &BuiltInFunction::kFunction_outerProduct_1B3B;
                }
                break;
            }
            case 0x00000284u:
            {
                if (name == BuiltInName::max_3C3C)
                {
                    return &BuiltInFunction::kFunction_max_3C3C;
                }
                break;
            }
            case 0x00000292u:
            {
                if (name == BuiltInName::texture_0X2B)
                {
                    return &BuiltInFunction::kFunction_texture_0X2B;
                }
                break;
            }
            case 0x00000294u:
            {
                if (name == BuiltInName::textureOffset_0W1B1C)
                {
                    return &BuiltInFunction::kFunction_textureOffset_0W1B1C;
                }
                break;
            }
            case 0x00000297u:
            {
                if (name == BuiltInName::greaterThanEqual_2D2D)
                {
                    return &BuiltInFunction::kFunction_greaterThanEqual_2D2D;
                }
                break;
            }
            case 0x0000029bu:
            {
                if (name == BuiltInName::tanh_1B)
                {
                    return &BuiltInFunction::kFunction_tanh_1B;
                }
                break;
            }
            case 0x0000029eu:
            {
                if (name == BuiltInName::min_3D0D)
                {
                    return &BuiltInFunction::kFunction_min_3D0D;
                }
                break;
            }
            case 0x000002a1u:
            {
                if (name == BuiltInName::gl_MaxProgramTexelOffset)
                {
                    return mVar_gl_MaxProgramTexelOffset;
                }
                break;
            }
            case 0x000002a3u:
            {
                if (name == BuiltInName::textureLodOffset_0R2B0B2C)
                {
                    return &BuiltInFunction::kFunction_textureLodOffset_0R2B0B2C;
                }
                break;
            }
            case 0x000002a7u:
            {
                if (name == BuiltInName::textureProjOffset_0W2B1C)
                {
                    return &BuiltInFunction::kFunction_textureProjOffset_0W2B1C;
                }
                break;
            }
            case 0x000002a8u:
            {
                if (name == BuiltInName::round_3B)
                {
                    return &BuiltInFunction::kFunction_round_3B;
                }
                break;
            }
            case 0x000002a9u:
            {
                if (name == BuiltInName::texture_0R2B)
                {
                    return &BuiltInFunction::kFunction_texture_0R2B;
                }
                break;
            }
            case 0x000002abu:
            {
                if (name == BuiltInName::texelFetch_0Q1C0C)
                {
                    return &BuiltInFunction::kFunction_texelFetch_0Q1C0C;
                }
                break;
            }
            case 0x000002b0u:
            {
                if (name == BuiltInName::sinh_1B)
                {
                    return &BuiltInFunction::kFunction_sinh_1B;
                }
                break;
            }
            case 0x000002b1u:
            {
                if (name == BuiltInName::textureProjLod_0c3B0B)
                {
                    return &BuiltInFunction::kFunction_textureProjLod_0c3B0B;
                }
                break;
            }
            case 0x000002b6u:
            {
                if (name == BuiltInName::textureSizeExt_0O)
                {
                    return &BuiltInFunction::kFunction_textureSizeExt_0O;
                }
                break;
            }
            case 0x000002bcu:
            {
                if (name == BuiltInName::textureLodOffset_0K2B0B1C)
                {
                    return &BuiltInFunction::kFunction_textureLodOffset_0K2B0B1C;
                }
                break;
            }
            case 0x000002bfu:
            {
                if (name == BuiltInName::textureProjGrad_0W3B1B1B)
                {
                    return &BuiltInFunction::kFunction_textureProjGrad_0W3B1B1B;
                }
                break;
            }
            case 0x000002c2u:
            {
                if (name == BuiltInName::textureSize_0Z0C)
                {
                    return &BuiltInFunction::kFunction_textureSize_0Z0C;
                }
                break;
            }
            case 0x000002c3u:
            {
                if (name == BuiltInName::isinf_3B)
                {
                    return &BuiltInFunction::kFunction_isinf_3B;
                }
                break;
            }
            case 0x000002c6u:
            {
                if (name == BuiltInName::textureProjGrad_0H2B1B1B)
                {
                    return &BuiltInFunction::kFunction_textureProjGrad_0H2B1B1B;
                }
                break;
            }
            case 0x000002cbu:
            {
                if (name == BuiltInName::rgb_2_yuv_2B0G)
                {
                    return &BuiltInFunction::kFunction_rgb_2_yuv_2B0G;
                }
                break;
            }
            case 0x000002ccu:
            {
                if (name == BuiltInName::textureSizeExt_0a)
                {
                    return &BuiltInFunction::kFunction_textureSizeExt_0a;
                }
                break;
            }
            case 0x000002cfu:
            {
                if (name == BuiltInName::trunc_1B)
                {
                    return &BuiltInFunction::kFunction_trunc_1B;
                }
                break;
            }
            case 0x000002d5u:
            {
                if (name == BuiltInName::textureProjLodOffset_0X3B0B2C)
                {
                    return &BuiltInFunction::kFunction_textureProjLodOffset_0X3B0B2C;
                }
                break;
            }
            case 0x000002dau:
            {
                if (name == BuiltInName::textureOffset_0R2B2C)
                {
                    return &BuiltInFunction::kFunction_textureOffset_0R2B2C;
                }
                break;
            }
            case 0x000002dbu:
            {
                if (name == BuiltInName::transpose_DB)
                {
                    return &BuiltInFunction::kFunction_transpose_DB;
                }
                break;
            }
            case 0x000002ddu:
            {
                if (name == BuiltInName::textureSize_0J0C)
                {
                    return &BuiltInFunction::kFunction_textureSize_0J0C;
                }
                break;
            }
            case 0x000002e2u:
            {
                if (name == BuiltInName::texelFetch_0H1C0C)
                {
                    return &BuiltInFunction::kFunction_texelFetch_0H1C0C;
                }
                break;
            }
            case 0x000002e3u:
            {
                if (name == BuiltInName::textureSize_0W0C)
                {
                    return &BuiltInFunction::kFunction_textureSize_0W0C;
                }
                break;
            }
            case 0x000002e4u:
            {
                if (name == BuiltInName::matrixCompMult_6B6B)
                {
                    return &BuiltInFunction::kFunction_matrixCompMult_6B6B;
                }
                break;
            }
            case 0x000002e5u:
            {
                if (name == BuiltInName::texelFetchOffset_0X2C0C2C)
                {
                    return &BuiltInFunction::kFunction_texelFetchOffset_0X2C0C2C;
                }
                break;
            }
            case 0x000002e6u:
            {
                if (name == BuiltInName::textureProj_0H3B)
                {
                    return &BuiltInFunction::kFunction_textureProj_0H3B;
                }
                break;
            }
            case 0x000002e8u:
            {
                if (name == BuiltInName::textureProjLodOffset_0Q3B0B1C)
                {
                    return &BuiltInFunction::kFunction_textureProjLodOffset_0Q3B0B1C;
                }
                break;
            }
            case 0x000002edu:
            {
                if (name == BuiltInName::texture_0I2B)
                {
                    return &BuiltInFunction::kFunction_texture_0I2B;
                }
                break;
            }
            case 0x000002f2u:
            {
                if (name == BuiltInName::texelFetchOffset_0R2C0C2C)
                {
                    return &BuiltInFunction::kFunction_texelFetchOffset_0R2C0C2C;
                }
                break;
            }
            case 0x000002f3u:
            {
                if (name == BuiltInName::clamp_1C1C1C)
                {
                    return &BuiltInFunction::kFunction_clamp_1C1C1C;
                }
                break;
            }
            case 0x000002f4u:
            {
                if (name == BuiltInName::textureOffset_0X2B2C)
                {
                    return &BuiltInFunction::kFunction_textureOffset_0X2B2C;
                }
                break;
            }
            case 0x000002f6u:
            {
                if (name == BuiltInName::max_1D0D)
                {
                    return &BuiltInFunction::kFunction_max_1D0D;
                }
                break;
            }
            case 0x000002f7u:
            {
                if (name == BuiltInName::round_0B)
                {
                    return &BuiltInFunction::kFunction_round_0B;
                }
                break;
            }
            case 0x000002f8u:
            {
                if (name == BuiltInName::textureProjLodOffset_0Q2B0B1C)
                {
                    return &BuiltInFunction::kFunction_textureProjLodOffset_0Q2B0B1C;
                }
                break;
            }
            case 0x000002f9u:
            {
                if (name == BuiltInName::textureOffset_0Z2B1C)
                {
                    return &BuiltInFunction::kFunction_textureOffset_0Z2B1C;
                }
                break;
            }
            case 0x00000302u:
            {
                if (name == BuiltInName::max_2C0C)
                {
                    return &BuiltInFunction::kFunction_max_2C0C;
                }
                break;
            }
            case 0x00000304u:
            {
                if (name == BuiltInName::textureProjOffset_0H2B1C)
                {
                    return &BuiltInFunction::kFunction_textureProjOffset_0H2B1C;
                }
                break;
            }
            case 0x0000030bu:
            {
                if (name == BuiltInName::min_1C0C)
                {
                    return &BuiltInFunction::kFunction_min_1C0C;
                }
                break;
            }
            case 0x0000030du:
            {
                if (name == BuiltInName::transpose_5B)
                {
                    return &BuiltInFunction::kFunction_transpose_5B;
                }
                break;
            }
            case 0x0000030eu:
            {
                if (name == BuiltInName::min_3C3C)
                {
                    return &BuiltInFunction::kFunction_min_3C3C;
                }
                break;
            }
            case 0x0000030fu:
            {
                if (name == BuiltInName::max_1C0C)
                {
                    return &BuiltInFunction::kFunction_max_1C0C;
                }
                break;
            }
            case 0x00000312u:
            {
                if (name == BuiltInName::floatBitsToInt_2B)
                {
                    return &BuiltInFunction::kFunction_floatBitsToInt_2B;
                }
                break;
            }
            case 0x00000315u:
            {
                if (name == BuiltInName::textureSize_0Y0C)
                {
                    return &BuiltInFunction::kFunction_textureSize_0Y0C;
                }
                break;
            }
            case 0x00000317u:
            {
                if (name == BuiltInName::intBitsToFloat_0C)
                {
                    return &BuiltInFunction::kFunction_intBitsToFloat_0C;
                }
                break;
            }
            case 0x00000319u:
            {
                if (name == BuiltInName::textureLodOffset_0T2B0B1C)
                {
                    return &BuiltInFunction::kFunction_textureLodOffset_0T2B0B1C;
                }
                break;
            }
            case 0x0000031au:
            {
                if (name == BuiltInName::textureGradOffset_0X2B2B2B2C)
                {
                    return &BuiltInFunction::kFunction_textureGradOffset_0X2B2B2B2C;
                }
                break;
            }
            case 0x00000327u:
            {
                if (name == BuiltInName::sign_2C)
                {
                    return &BuiltInFunction::kFunction_sign_2C;
                }
                break;
            }
            case 0x0000032bu:
            {
                if (name == BuiltInName::textureProjOffset_0I3B2C)
                {
                    return &BuiltInFunction::kFunction_textureProjOffset_0I3B2C;
                }
                break;
            }
            case 0x0000032eu:
            {
                if (name == BuiltInName::trunc_2B)
                {
                    return &BuiltInFunction::kFunction_trunc_2B;
                }
                break;
            }
            case 0x00000332u:
            {
                if (name == BuiltInName::textureOffset_0Q1B1C)
                {
                    return &BuiltInFunction::kFunction_textureOffset_0Q1B1C;
                }
                break;
            }
            case 0x00000333u:
            {
                if (name == BuiltInName::texture_0Y2B)
                {
                    return &BuiltInFunction::kFunction_texture_0Y2B;
                }
                break;
            }
            case 0x00000335u:
            {
                if (name == BuiltInName::textureProj_0W2B)
                {
                    return &BuiltInFunction::kFunction_textureProj_0W2B;
                }
                break;
            }
            case 0x00000336u:
            {
                if (name == BuiltInName::asinh_1B)
                {
                    return &BuiltInFunction::kFunction_asinh_1B;
                }
                break;
            }
            case 0x0000033cu:
            {
                if (name == BuiltInName::textureGradOffset_0H1B1B1B1C)
                {
                    return &BuiltInFunction::kFunction_textureGradOffset_0H1B1B1B1C;
                }
                break;
            }
            case 0x0000033fu:
            {
                if (name == BuiltInName::textureGradOffset_0I2B2B2B2C)
                {
                    return &BuiltInFunction::kFunction_textureGradOffset_0I2B2B2B2C;
                }
                break;
            }
            case 0x00000341u:
            {
                if (name == BuiltInName::uintBitsToFloat_2D)
                {
                    return &BuiltInFunction::kFunction_uintBitsToFloat_2D;
                }
                break;
            }
            case 0x00000342u:
            {
                if (name == BuiltInName::textureGrad_0H1B1B1B)
                {
                    return &BuiltInFunction::kFunction_textureGrad_0H1B1B1B;
                }
                break;
            }
            case 0x00000343u:
            {
                if (name == BuiltInName::textureSizeExt_0U)
                {
                    return &BuiltInFunction::kFunction_textureSizeExt_0U;
                }
                break;
            }
            case 0x00000344u:
            {
                if (name == BuiltInName::textureProj_0N3B)
                {
                    return &BuiltInFunction::kFunction_textureProj_0N3B;
                }
                break;
            }
            case 0x00000346u:
            {
                if (name == BuiltInName::sinh_2B)
                {
                    return &BuiltInFunction::kFunction_sinh_2B;
                }
                break;
            }
            case 0x00000348u:
            {
                if (name == BuiltInName::textureProj_0X3B)
                {
                    return &BuiltInFunction::kFunction_textureProj_0X3B;
                }
                break;
            }
            case 0x0000034eu:
            {
                if (name == BuiltInName::textureProjLod_0X3B0B)
                {
                    return &BuiltInFunction::kFunction_textureProjLod_0X3B0B;
                }
                break;
            }
            case 0x0000034fu:
            {
                if (name == BuiltInName::isnan_1B)
                {
                    return &BuiltInFunction::kFunction_isnan_1B;
                }
                break;
            }
            case 0x00000351u:
            {
                if (name == BuiltInName::textureProjGrad_0X3B2B2B)
                {
                    return &BuiltInFunction::kFunction_textureProjGrad_0X3B2B2B;
                }
                break;
            }
            case 0x00000355u:
            {
                if (name == BuiltInName::lessThan_3D3D)
                {
                    return &BuiltInFunction::kFunction_lessThan_3D3D;
                }
                break;
            }
            case 0x00000359u:
            {
                if (name == BuiltInName::mix_0B0B0E)
                {
                    return &BuiltInFunction::kFunction_mix_0B0B0E;
                }
                break;
            }
            case 0x0000035bu:
            {
                if (name == BuiltInName::cosh_1B)
                {
                    return &BuiltInFunction::kFunction_cosh_1B;
                }
                break;
            }
            case 0x00000360u:
            {
                if (name == BuiltInName::max_3C0C)
                {
                    return &BuiltInFunction::kFunction_max_3C0C;
                }
                break;
            }
            case 0x00000364u:
            {
                if (name == BuiltInName::roundEven_1B)
                {
                    return &BuiltInFunction::kFunction_roundEven_1B;
                }
                break;
            }
            case 0x00000367u:
            {
                if (name == BuiltInName::atanh_3B)
                {
                    return &BuiltInFunction::kFunction_atanh_3B;
                }
                break;
            }
            case 0x00000368u:
            {
                if (name == BuiltInName::textureProjLod_0I3B0B)
                {
                    return &BuiltInFunction::kFunction_textureProjLod_0I3B0B;
                }
                break;
            }
            case 0x0000036bu:
            {
                if (name == BuiltInName::textureProjLodOffset_0c3B0B1C)
                {
                    return &BuiltInFunction::kFunction_textureProjLodOffset_0c3B0B1C;
                }
                break;
            }
            case 0x0000036cu:
            {
                if (name == BuiltInName::isnan_0B)
                {
                    return &BuiltInFunction::kFunction_isnan_0B;
                }
                break;
            }
            case 0x0000036du:
            {
                if (name == BuiltInName::clamp_1C0C0C)
                {
                    return &BuiltInFunction::kFunction_clamp_1C0C0C;
                }
                break;
            }
            case 0x0000036eu:
            {
                if (name == BuiltInName::packUnorm2x16_1B)
                {
                    return &BuiltInFunction::kFunction_packUnorm2x16_1B;
                }
                break;
            }
            case 0x00000370u:
            {
                if (name == BuiltInName::gl_MaxVertexOutputVectors)
                {
                    return mVar_gl_MaxVertexOutputVectors;
                }
                break;
            }
            case 0x00000371u:
            {
                if (name == BuiltInName::outerProduct_2B2B)
                {
                    return &BuiltInFunction::kFunction_outerProduct_2B2B;
                }
                break;
            }
            case 0x00000374u:
            {
                if (name == BuiltInName::max_3D3D)
                {
                    return &BuiltInFunction::kFunction_max_3D3D;
                }
                break;
            }
            case 0x00000375u:
            {
                if (name == BuiltInName::lessThanEqual_2D2D)
                {
                    return &BuiltInFunction::kFunction_lessThanEqual_2D2D;
                }
                break;
            }
            case 0x00000376u:
            {
                if (name == BuiltInName::textureProjLod_0Q2B0B)
                {
                    return &BuiltInFunction::kFunction_textureProjLod_0Q2B0B;
                }
                break;
            }
            case 0x0000037au:
            {
                if (name == BuiltInName::tanh_0B)
                {
                    return &BuiltInFunction::kFunction_tanh_0B;
                }
                break;
            }
            case 0x0000037bu:
            {
                if (name == BuiltInName::textureLod_0c2B0B)
                {
                    return &BuiltInFunction::kFunction_textureLod_0c2B0B;
                }
                break;
            }
            case 0x0000037cu:
            {
                if (name == BuiltInName::outerProduct_3B3B)
                {
                    return &BuiltInFunction::kFunction_outerProduct_3B3B;
                }
                break;
            }
            case 0x0000037eu:
            {
                if (name == BuiltInName::textureProjGradOffset_0X3B2B2B2C)
                {
                    return &BuiltInFunction::kFunction_textureProjGradOffset_0X3B2B2B2C;
                }
                break;
            }
            case 0x0000037fu:
            {
                if (name == BuiltInName::clamp_2C0C0C)
                {
                    return &BuiltInFunction::kFunction_clamp_2C0C0C;
                }
                break;
            }
            case 0x00000380u:
            {
                if (name == BuiltInName::textureProjOffset_0c3B1C)
                {
                    return &BuiltInFunction::kFunction_textureProjOffset_0c3B1C;
                }
                break;
            }
            case 0x00000381u:
            {
                if (name == BuiltInName::textureLod_0Y2B0B)
                {
                    return &BuiltInFunction::kFunction_textureLod_0Y2B0B;
                }
                break;
            }
            case 0x00000382u:
            {
                if (name == BuiltInName::textureGrad_0Z2B1B1B)
                {
                    return &BuiltInFunction::kFunction_textureGrad_0Z2B1B1B;
                }
                break;
            }
            case 0x00000383u:
            {
                if (name == BuiltInName::textureLod_0H1B0B)
                {
                    return &BuiltInFunction::kFunction_textureLod_0H1B0B;
                }
                break;
            }
            case 0x00000385u:
            {
                if (name == BuiltInName::textureProj_0Q3B)
                {
                    return &BuiltInFunction::kFunction_textureProj_0Q3B;
                }
                break;
            }
            case 0x00000386u:
            {
                if (name == BuiltInName::textureProjGrad_0c3B1B1B)
                {
                    return &BuiltInFunction::kFunction_textureProjGrad_0c3B1B1B;
                }
                break;
            }
            case 0x0000038eu:
            {
                if (name == BuiltInName::clamp_2D2D2D)
                {
                    return &BuiltInFunction::kFunction_clamp_2D2D2D;
                }
                break;
            }
            case 0x0000038fu:
            {
                if (name == BuiltInName::texelFetchOffset_0Z2C0C1C)
                {
                    return &BuiltInFunction::kFunction_texelFetchOffset_0Z2C0C1C;
                }
                break;
            }
            case 0x00000390u:
            {
                if (name == BuiltInName::textureProjOffset_0Q3B1C)
                {
                    return &BuiltInFunction::kFunction_textureProjOffset_0Q3B1C;
                }
                break;
            }
            case 0x00000395u:
            {
                if (name == BuiltInName::matrixCompMult_DBDB)
                {
                    return &BuiltInFunction::kFunction_matrixCompMult_DBDB;
                }
                break;
            }
            case 0x00000396u:
            {
                if (name == BuiltInName::textureProj_0M2B)
                {
                    return &BuiltInFunction::kFunction_textureProj_0M2B;
                }
                break;
            }
            case 0x00000398u:
            {
                if (name == BuiltInName::textureLod_0Q1B0B)
                {
                    return &BuiltInFunction::kFunction_textureLod_0Q1B0B;
                }
                break;
            }
            case 0x0000039bu:
            {
                if (name == BuiltInName::texture_0T2B)
                {
                    return &BuiltInFunction::kFunction_texture_0T2B;
                }
                break;
            }
            case 0x0000039cu:
            {
                if (name == BuiltInName::abs_3C)
                {
                    return &BuiltInFunction::kFunction_abs_3C;
                }
                break;
            }
            case 0x000003a0u:
            {
                if (name == BuiltInName::textureGrad_0T2B1B1B)
                {
                    return &BuiltInFunction::kFunction_textureGrad_0T2B1B1B;
                }
                break;
            }
            case 0x000003a7u:
            {
                if (name == BuiltInName::textureProjLodOffset_0R3B0B2C)
                {
                    return &BuiltInFunction::kFunction_textureProjLodOffset_0R3B0B2C;
                }
                break;
            }
            case 0x000003a8u:
            {
                if (name == BuiltInName::textureOffset_0I2B2C)
                {
                    return &BuiltInFunction::kFunction_textureOffset_0I2B2C;
                }
                break;
            }
            case 0x000003a9u:
            {
                if (name == BuiltInName::textureSize_0I0C)
                {
                    return &BuiltInFunction::kFunction_textureSize_0I0C;
                }
                break;
            }
            case 0x000003abu:
            {
                if (name == BuiltInName::acosh_0B)
                {
                    return &BuiltInFunction::kFunction_acosh_0B;
                }
                break;
            }
            case 0x000003acu:
            {
                if (name == BuiltInName::clamp_0D0D0D)
                {
                    return &BuiltInFunction::kFunction_clamp_0D0D0D;
                }
                break;
            }
            case 0x000003aeu:
            {
                if (name == BuiltInName::texture_0e3B)
                {
                    return &BuiltInFunction::kFunction_texture_0e3B;
                }
                break;
            }
            case 0x000003afu:
            {
                if (name == BuiltInName::min_2C2C)
                {
                    return &BuiltInFunction::kFunction_min_2C2C;
                }
                break;
            }
            case 0x000003b1u:
            {
                if (name == BuiltInName::textureProjGrad_0I3B2B2B)
                {
                    return &BuiltInFunction::kFunction_textureProjGrad_0I3B2B2B;
                }
                break;
            }
            case 0x000003b6u:
            {
                if (name == BuiltInName::textureProjLodOffset_0H2B0B1C)
                {
                    return &BuiltInFunction::kFunction_textureProjLodOffset_0H2B0B1C;
                }
                break;
            }
            case 0x000003beu:
            {
                if (name == BuiltInName::textureGrad_0X2B2B2B)
                {
                    return &BuiltInFunction::kFunction_textureGrad_0X2B2B2B;
                }
                break;
            }
            case 0x000003c1u:
            {
                if (name == BuiltInName::textureProjGrad_0Q3B1B1B)
                {
                    return &BuiltInFunction::kFunction_textureProjGrad_0Q3B1B1B;
                }
                break;
            }
            case 0x000003c5u:
            {
                if (name == BuiltInName::isnan_3B)
                {
                    return &BuiltInFunction::kFunction_isnan_3B;
                }
                break;
            }
            case 0x000003d0u:
            {
                if (name == BuiltInName::textureProjLodOffset_0H3B0B1C)
                {
                    return &BuiltInFunction::kFunction_textureProjLodOffset_0H3B0B1C;
                }
                break;
            }
            case 0x000003d2u:
            {
                if (name == BuiltInName::modf_2B2B)
                {
                    return &BuiltInFunction::kFunction_modf_2B2B;
                }
                break;
            }
            case 0x000003d5u:
            {
                if (name == BuiltInName::textureGradOffset_0T2B1B1B1C)
                {
                    return &BuiltInFunction::kFunction_textureGradOffset_0T2B1B1B1C;
                }
                break;
            }
            case 0x000003d9u:
            {
                if (name == BuiltInName::textureProj_0H2B)
                {
                    return &BuiltInFunction::kFunction_textureProj_0H2B;
                }
                break;
            }
            case 0x000003dcu:
            {
                if (name == BuiltInName::packHalf2x16_1B)
                {
                    return &BuiltInFunction::kFunction_packHalf2x16_1B;
                }
                break;
            }
            case 0x000003deu:
            {
                if (name == BuiltInName::min_2D0D)
                {
                    return &BuiltInFunction::kFunction_min_2D0D;
                }
                break;
            }
            case 0x000003e6u:
            {
                if (name == BuiltInName::texelFetchExt_0O1C0C)
                {
                    return &BuiltInFunction::kFunction_texelFetchExt_0O1C0C;
                }
                break;
            }
            case 0x000003e8u:
            {
                if (name == BuiltInName::equal_1D1D)
                {
                    return &BuiltInFunction::kFunction_equal_1D1D;
                }
                break;
            }
            case 0x000003ebu:
            {
                if (name == BuiltInName::outerProduct_1B2B)
                {
                    return &BuiltInFunction::kFunction_outerProduct_1B2B;
                }
                break;
            }
            case 0x000003ecu:
            {
                if (name == BuiltInName::modf_0B0B)
                {
                    return &BuiltInFunction::kFunction_modf_0B0B;
                }
                break;
            }
            case 0x000003efu:
            {
                if (name == BuiltInName::textureSize_0L0C)
                {
                    return &BuiltInFunction::kFunction_textureSize_0L0C;
                }
                break;
            }
            case 0x000003f0u:
            {
                if (name == BuiltInName::textureProjLod_0R3B0B)
                {
                    return &BuiltInFunction::kFunction_textureProjLod_0R3B0B;
                }
                break;
            }
            case 0x000003f2u:
            {
                if (name == BuiltInName::textureProjGradOffset_0I3B2B2B2C)
                {
                    return &BuiltInFunction::kFunction_textureProjGradOffset_0I3B2B2B2C;
                }
                break;
            }
            case 0x000003f4u:
            {
                if (name == BuiltInName::textureOffset_0H1B1C)
                {
                    return &BuiltInFunction::kFunction_textureOffset_0H1B1C;
                }
                break;
            }
            case 0x000003f7u:
            {
                if (name == BuiltInName::textureOffset_0T2B1C)
                {
                    return &BuiltInFunction::kFunction_textureOffset_0T2B1C;
                }
                break;
            }
            case 0x000003ffu:
            {
                if (name == BuiltInName::abs_0C)
                {
                    return &BuiltInFunction::kFunction_abs_0C;
                }
                break;
            }
            case 0x00000402u:
            {
                if (name == BuiltInName::texture_0Q1B)
                {
                    return &BuiltInFunction::kFunction_texture_0Q1B;
                }
                break;
            }
            case 0x00000403u:
            {
                if (name == BuiltInName::min_3C0C)
                {
                    return &BuiltInFunction::kFunction_min_3C0C;
                }
                break;
            }
            case 0x00000404u:
            {
                if (name == BuiltInName::max_1C1C)
                {
                    return &BuiltInFunction::kFunction_max_1C1C;
                }
                break;
            }
            case 0x00000405u:
            {
                if (name == BuiltInName::textureProjOffset_0X3B2C)
                {
                    return &BuiltInFunction::kFunction_textureProjOffset_0X3B2C;
                }
                break;
            }
            case 0x00000407u:
            {
                if (name == BuiltInName::clamp_1D0D0D)
                {
                    return &BuiltInFunction::kFunction_clamp_1D0D0D;
                }
                break;
            }
            case 0x00000408u:
            {
                if (name == BuiltInName::floatBitsToInt_3B)
                {
                    return &BuiltInFunction::kFunction_floatBitsToInt_3B;
                }
                break;
            }
            case 0x0000040fu:
            {
                if (name == BuiltInName::intBitsToFloat_1C)
                {
                    return &BuiltInFunction::kFunction_intBitsToFloat_1C;
                }
                break;
            }
            case 0x00000411u:
            {
                if (name == BuiltInName::clamp_2C2C2C)
                {
                    return &BuiltInFunction::kFunction_clamp_2C2C2C;
                }
                break;
            }
            case 0x00000412u:
            {
                if (name == BuiltInName::outerProduct_2B3B)
                {
                    return &BuiltInFunction::kFunction_outerProduct_2B3B;
                }
                break;
            }
            case 0x00000413u:
            {
                if (name == BuiltInName::textureProjGradOffset_0H2B1B1B1C)
                {
                    return &BuiltInFunction::kFunction_textureProjGradOffset_0H2B1B1B1C;
                }
                break;
            }
            case 0x00000416u:
            {
                if (name == BuiltInName::sign_1C)
                {
                    return &BuiltInFunction::kFunction_sign_1C;
                }
                break;
            }
            case 0x00000418u:
            {
                if (name == BuiltInName::textureProj_0I3B)
                {
                    return &BuiltInFunction::kFunction_textureProj_0I3B;
                }
                break;
            }
            case 0x0000041bu:
            {
                if (name == BuiltInName::textureProjGrad_0Q2B1B1B)
                {
                    return &BuiltInFunction::kFunction_textureProjGrad_0Q2B1B1B;
                }
                break;
            }
            case 0x00000420u:
            {
                if (name == BuiltInName::textureProjOffset_0Q2B1C)
                {
                    return &BuiltInFunction::kFunction_textureProjOffset_0Q2B1C;
                }
                break;
            }
            case 0x0000042cu:
            {
                if (name == BuiltInName::isinf_2B)
                {
                    return &BuiltInFunction::kFunction_isinf_2B;
                }
                break;
            }
            case 0x0000042eu:
            {
                if (name == BuiltInName::notEqual_1D1D)
                {
                    return &BuiltInFunction::kFunction_notEqual_1D1D;
                }
                break;
            }
            case 0x00000432u:
            {
                if (name == BuiltInName::textureSize_0S0C)
                {
                    return &BuiltInFunction::kFunction_textureSize_0S0C;
                }
                break;
            }
            case 0x00000437u:
            {
                if (name == BuiltInName::textureProjOffset_0H3B1C)
                {
                    return &BuiltInFunction::kFunction_textureProjOffset_0H3B1C;
                }
                break;
            }
        }
        if (mShaderType == GL_FRAGMENT_SHADER)
        {
            switch (nameHash)
            {
                case 0x00000012u:
                {
                    if (name == BuiltInName::textureOffset_0K2B1C0B)
                    {
                        return &BuiltInFunction::kFunction_textureOffset_0K2B1C0B;
                    }
                    break;
                }
                case 0x0000002du:
                {
                    if (name == BuiltInName::textureProj_0L3B0B)
                    {
                        return &BuiltInFunction::kFunction_textureProj_0L3B0B;
                    }
                    break;
                }
                case 0x0000003au:
                {
                    if (name == BuiltInName::texture_0H1B0B)
                    {
                        return &BuiltInFunction::kFunction_texture_0H1B0B;
                    }
                    break;
                }
                case 0x0000004cu:
                {
                    if (name == BuiltInName::textureProjOffset_0H2B1C0B)
                    {
                        return &BuiltInFunction::kFunction_textureProjOffset_0H2B1C0B;
                    }
                    break;
                }
                case 0x00000060u:
                {
                    if (name == BuiltInName::textureProj_0W2B0B)
                    {
                        return &BuiltInFunction::kFunction_textureProj_0W2B0B;
                    }
                    break;
                }
                case 0x00000064u:
                {
                    if (name == BuiltInName::dFdy_1B)
                    {
                        return &BuiltInFunction::kFunction_dFdy_1B;
                    }
                    break;
                }
                case 0x00000076u:
                {
                    if (name == BuiltInName::textureOffset_0Q1B1C0B)
                    {
                        return &BuiltInFunction::kFunction_textureOffset_0Q1B1C0B;
                    }
                    break;
                }
                case 0x00000091u:
                {
                    if (name == BuiltInName::textureProjOffset_0Q2B1C0B)
                    {
                        return &BuiltInFunction::kFunction_textureProjOffset_0Q2B1C0B;
                    }
                    break;
                }
                case 0x00000092u:
                {
                    if (name == BuiltInName::textureProjOffset_0W2B1C0B)
                    {
                        return &BuiltInFunction::kFunction_textureProjOffset_0W2B1C0B;
                    }
                    break;
                }
                case 0x00000099u:
                {
                    if (name == BuiltInName::textureProj_0W3B0B)
                    {
                        return &BuiltInFunction::kFunction_textureProj_0W3B0B;
                    }
                    break;
                }
                case 0x000000a0u:
                {
                    if (name == BuiltInName::textureProjOffset_0H3B1C0B)
                    {
                        return &BuiltInFunction::kFunction_textureProjOffset_0H3B1C0B;
                    }
                    break;
                }
                case 0x000000a7u:
                {
                    if (name == BuiltInName::fwidth_1B)
                    {
                        return &BuiltInFunction::kFunction_fwidth_1B;
                    }
                    break;
                }
                case 0x000000b4u:
                {
                    if (name == BuiltInName::textureProj_0M3B0B)
                    {
                        return &BuiltInFunction::kFunction_textureProj_0M3B0B;
                    }
                    break;
                }
                case 0x000000beu:
                {
                    if (name == BuiltInName::textureProj_0L2B0B)
                    {
                        return &BuiltInFunction::kFunction_textureProj_0L2B0B;
                    }
                    break;
                }
                case 0x000000c4u:
                {
                    if (name == BuiltInName::texture_0M1B0B)
                    {
                        return &BuiltInFunction::kFunction_texture_0M1B0B;
                    }
                    break;
                }
                case 0x000000c8u:
                {
                    if (name == BuiltInName::textureProjOffset_0W3B1C0B)
                    {
                        return &BuiltInFunction::kFunction_textureProjOffset_0W3B1C0B;
                    }
                    break;
                }
                case 0x000000cau:
                {
                    if (name == BuiltInName::texture_0S2B0B)
                    {
                        return &BuiltInFunction::kFunction_texture_0S2B0B;
                    }
                    break;
                }
                case 0x000000cbu:
                {
                    if (name == BuiltInName::dFdx_2B)
                    {
                        return &BuiltInFunction::kFunction_dFdx_2B;
                    }
                    break;
                }
                case 0x000000f9u:
                {
                    if (name == BuiltInName::gl_FragDepth)
                    {
                        return &BuiltInVariable::kVar_gl_FragDepth;
                    }
                    break;
                }
                case 0x00000127u:
                {
                    if (name == BuiltInName::texture_0c2B0B)
                    {
                        return &BuiltInFunction::kFunction_texture_0c2B0B;
                    }
                    break;
                }
                case 0x00000133u:
                {
                    if (name == BuiltInName::textureOffset_0X2B2C0B)
                    {
                        return &BuiltInFunction::kFunction_textureOffset_0X2B2C0B;
                    }
                    break;
                }
                case 0x00000141u:
                {
                    if (name == BuiltInName::texture_0J2B0B)
                    {
                        return &BuiltInFunction::kFunction_texture_0J2B0B;
                    }
                    break;
                }
                case 0x00000144u:
                {
                    if (name == BuiltInName::texture_0Q1B0B)
                    {
                        return &BuiltInFunction::kFunction_texture_0Q1B0B;
                    }
                    break;
                }
                case 0x00000146u:
                {
                    if (name == BuiltInName::texture_0R2B0B)
                    {
                        return &BuiltInFunction::kFunction_texture_0R2B0B;
                    }
                    break;
                }
                case 0x00000154u:
                {
                    if (name == BuiltInName::textureProj_0Q2B0B)
                    {
                        return &BuiltInFunction::kFunction_textureProj_0Q2B0B;
                    }
                    break;
                }
                case 0x0000015au:
                {
                    if (name == BuiltInName::textureOffset_0H1B1C0B)
                    {
                        return &BuiltInFunction::kFunction_textureOffset_0H1B1C0B;
                    }
                    break;
                }
                case 0x0000015bu:
                {
                    if (name == BuiltInName::texture_0I2B0B)
                    {
                        return &BuiltInFunction::kFunction_texture_0I2B0B;
                    }
                    break;
                }
                case 0x000001dau:
                {
                    if (name == BuiltInName::texture_0W1B0B)
                    {
                        return &BuiltInFunction::kFunction_texture_0W1B0B;
                    }
                    break;
                }
                case 0x000001e6u:
                {
                    if (name == BuiltInName::textureOffset_0I2B2C0B)
                    {
                        return &BuiltInFunction::kFunction_textureOffset_0I2B2C0B;
                    }
                    break;
                }
                case 0x000001f6u:
                {
                    if (name == BuiltInName::textureOffset_0R2B2C0B)
                    {
                        return &BuiltInFunction::kFunction_textureOffset_0R2B2C0B;
                    }
                    break;
                }
                case 0x00000202u:
                {
                    if (name == BuiltInName::textureProj_0R3B0B)
                    {
                        return &BuiltInFunction::kFunction_textureProj_0R3B0B;
                    }
                    break;
                }
                case 0x00000206u:
                {
                    if (name == BuiltInName::dFdy_3B)
                    {
                        return &BuiltInFunction::kFunction_dFdy_3B;
                    }
                    break;
                }
                case 0x0000021cu:
                {
                    if (name == BuiltInName::textureProjOffset_0Q3B1C0B)
                    {
                        return &BuiltInFunction::kFunction_textureProjOffset_0Q3B1C0B;
                    }
                    break;
                }
                case 0x0000021du:
                {
                    if (name == BuiltInName::textureProj_0I3B0B)
                    {
                        return &BuiltInFunction::kFunction_textureProj_0I3B0B;
                    }
                    break;
                }
                case 0x00000232u:
                {
                    if (name == BuiltInName::textureProj_0X3B0B)
                    {
                        return &BuiltInFunction::kFunction_textureProj_0X3B0B;
                    }
                    break;
                }
                case 0x00000233u:
                {
                    if (name == BuiltInName::textureProj_0Q3B0B)
                    {
                        return &BuiltInFunction::kFunction_textureProj_0Q3B0B;
                    }
                    break;
                }
                case 0x0000023eu:
                {
                    if (name == BuiltInName::textureProjOffset_0R3B2C0B)
                    {
                        return &BuiltInFunction::kFunction_textureProjOffset_0R3B2C0B;
                    }
                    break;
                }
                case 0x0000024au:
                {
                    if (name == BuiltInName::dFdx_3B)
                    {
                        return &BuiltInFunction::kFunction_dFdx_3B;
                    }
                    break;
                }
                case 0x00000256u:
                {
                    if (name == BuiltInName::fwidth_3B)
                    {
                        return &BuiltInFunction::kFunction_fwidth_3B;
                    }
                    break;
                }
                case 0x0000028bu:
                {
                    if (name == BuiltInName::dFdx_1B)
                    {
                        return &BuiltInFunction::kFunction_dFdx_1B;
                    }
                    break;
                }
                case 0x00000293u:
                {
                    if (name == BuiltInName::textureProjOffset_0X3B2C0B)
                    {
                        return &BuiltInFunction::kFunction_textureProjOffset_0X3B2C0B;
                    }
                    break;
                }
                case 0x00000296u:
                {
                    if (name == BuiltInName::textureProj_0c3B0B)
                    {
                        return &BuiltInFunction::kFunction_textureProj_0c3B0B;
                    }
                    break;
                }
                case 0x00000298u:
                {
                    if (name == BuiltInName::texture_0T2B0B)
                    {
                        return &BuiltInFunction::kFunction_texture_0T2B0B;
                    }
                    break;
                }
                case 0x0000029cu:
                {
                    if (name == BuiltInName::texture_0d3B0B)
                    {
                        return &BuiltInFunction::kFunction_texture_0d3B0B;
                    }
                    break;
                }
                case 0x000002a2u:
                {
                    if (name == BuiltInName::textureOffset_0c2B1C0B)
                    {
                        return &BuiltInFunction::kFunction_textureOffset_0c2B1C0B;
                    }
                    break;
                }
                case 0x000002beu:
                {
                    if (name == BuiltInName::textureProjOffset_0c3B1C0B)
                    {
                        return &BuiltInFunction::kFunction_textureProjOffset_0c3B1C0B;
                    }
                    break;
                }
                case 0x000002dcu:
                {
                    if (name == BuiltInName::textureOffset_0Z2B1C0B)
                    {
                        return &BuiltInFunction::kFunction_textureOffset_0Z2B1C0B;
                    }
                    break;
                }
                case 0x000002e9u:
                {
                    if (name == BuiltInName::texture_0L1B0B)
                    {
                        return &BuiltInFunction::kFunction_texture_0L1B0B;
                    }
                    break;
                }
                case 0x000002efu:
                {
                    if (name == BuiltInName::textureProjOffset_0I3B2C0B)
                    {
                        return &BuiltInFunction::kFunction_textureProjOffset_0I3B2C0B;
                    }
                    break;
                }
                case 0x00000308u:
                {
                    if (name == BuiltInName::fwidth_2B)
                    {
                        return &BuiltInFunction::kFunction_fwidth_2B;
                    }
                    break;
                }
                case 0x00000309u:
                {
                    if (name == BuiltInName::textureOffset_0T2B1C0B)
                    {
                        return &BuiltInFunction::kFunction_textureOffset_0T2B1C0B;
                    }
                    break;
                }
                case 0x00000324u:
                {
                    if (name == BuiltInName::textureProj_0H2B0B)
                    {
                        return &BuiltInFunction::kFunction_textureProj_0H2B0B;
                    }
                    break;
                }
                case 0x00000331u:
                {
                    if (name == BuiltInName::dFdx_0B)
                    {
                        return &BuiltInFunction::kFunction_dFdx_0B;
                    }
                    break;
                }
                case 0x0000034au:
                {
                    if (name == BuiltInName::texture_0Z2B0B)
                    {
                        return &BuiltInFunction::kFunction_texture_0Z2B0B;
                    }
                    break;
                }
                case 0x00000362u:
                {
                    if (name == BuiltInName::textureOffset_0W1B1C0B)
                    {
                        return &BuiltInFunction::kFunction_textureOffset_0W1B1C0B;
                    }
                    break;
                }
                case 0x0000036au:
                {
                    if (name == BuiltInName::dFdy_2B)
                    {
                        return &BuiltInFunction::kFunction_dFdy_2B;
                    }
                    break;
                }
                case 0x00000372u:
                {
                    if (name == BuiltInName::textureProj_0H3B0B)
                    {
                        return &BuiltInFunction::kFunction_textureProj_0H3B0B;
                    }
                    break;
                }
                case 0x0000038bu:
                {
                    if (name == BuiltInName::texture_0X2B0B)
                    {
                        return &BuiltInFunction::kFunction_texture_0X2B0B;
                    }
                    break;
                }
                case 0x00000399u:
                {
                    if (name == BuiltInName::texture_0K2B0B)
                    {
                        return &BuiltInFunction::kFunction_texture_0K2B0B;
                    }
                    break;
                }
                case 0x000003a2u:
                {
                    if (name == BuiltInName::textureProj_0M2B0B)
                    {
                        return &BuiltInFunction::kFunction_textureProj_0M2B0B;
                    }
                    break;
                }
                case 0x000003b0u:
                {
                    if (name == BuiltInName::dFdy_0B)
                    {
                        return &BuiltInFunction::kFunction_dFdy_0B;
                    }
                    break;
                }
                case 0x000003eau:
                {
                    if (name == BuiltInName::texture_0Y2B0B)
                    {
                        return &BuiltInFunction::kFunction_texture_0Y2B0B;
                    }
                    break;
                }
                case 0x000003f8u:
                {
                    if (name == BuiltInName::fwidth_0B)
                    {
                        return &BuiltInFunction::kFunction_fwidth_0B;
                    }
                    break;
                }
            }
        }
        if (mShaderType == GL_VERTEX_SHADER)
        {
            switch (nameHash)
            {
                case 0x00000043u:
                {
                    if (name == BuiltInName::gl_InstanceID)
                    {
                        return &BuiltInVariable::kVar_gl_InstanceID;
                    }
                    break;
                }
                case 0x0000021eu:
                {
                    if (name == BuiltInName::gl_VertexID)
                    {
                        return &BuiltInVariable::kVar_gl_VertexID;
                    }
                    break;
                }
            }
        }
        if ((mShaderType == GL_VERTEX_SHADER) && (mResources.ANGLE_multi_draw))
        {
            switch (nameHash)
            {
                case 0x00000436u:
                {
                    if (name == BuiltInName::gl_DrawID)
                    {
                        return &BuiltInVariable::kVar_gl_DrawID;
                    }
                    break;
                }
            }
        }
        if ((mShaderType == GL_VERTEX_SHADER) && (mResources.ANGLE_base_vertex_base_instance))
        {
            switch (nameHash)
            {
                case 0x00000009u:
                {
                    if (name == BuiltInName::gl_BaseInstance)
                    {
                        return &BuiltInVariable::kVar_gl_BaseInstance;
                    }
                    break;
                }
                case 0x00000311u:
                {
                    if (name == BuiltInName::gl_BaseVertex)
                    {
                        return &BuiltInVariable::kVar_gl_BaseVertex;
                    }
                    break;
                }
            }
        }
        if ((mResources.OVR_multiview || mResources.OVR_multiview2) &&
            mShaderType != GL_COMPUTE_SHADER)
        {
            switch (nameHash)
            {
                case 0x000000fau:
                {
                    if (name == BuiltInName::gl_ViewID_OVR)
                    {
                        return &BuiltInVariable::kVar_gl_ViewID_OVR;
                    }
                    break;
                }
            }
        }
    }
    if (shaderVersion == 100)
    {
        switch (nameHash)
        {
            case 0x00000059u:
            {
                if (name == BuiltInName::gl_SecondaryFragDataEXT)
                {
                    // Only initialized if (shaderType == GL_FRAGMENT_SHADER) &&
                    // (mResources.EXT_blend_func_extended)
                    return mVar_gl_SecondaryFragDataEXT;
                }
                break;
            }
            case 0x000000d5u:
            {
                if (name == BuiltInName::texture2DProj_0L2B)
                {
                    return &BuiltInFunction::kFunction_texture2DProj_0L2B;
                }
                break;
            }
            case 0x000000d9u:
            {
                if (name == BuiltInName::texture2DProj_0H3B)
                {
                    return &BuiltInFunction::kFunction_texture2DProj_0H3B;
                }
                break;
            }
            case 0x0000012fu:
            {
                if (name == BuiltInName::textureCube_0J2B)
                {
                    return &BuiltInFunction::kFunction_textureCube_0J2B;
                }
                break;
            }
            case 0x00000158u:
            {
                if (name == BuiltInName::texture2DRectProj_0N3B)
                {
                    return &BuiltInFunction::kFunction_texture2DRectProj_0N3B;
                }
                break;
            }
            case 0x00000181u:
            {
                if (name == BuiltInName::texture2D_0H1B)
                {
                    return &BuiltInFunction::kFunction_texture2D_0H1B;
                }
                break;
            }
            case 0x000001c4u:
            {
                if (name == BuiltInName::gl_FragDepthEXT)
                {
                    // Only initialized if (shaderType == GL_FRAGMENT_SHADER) &&
                    // (mResources.EXT_frag_depth)
                    return mVar_gl_FragDepthEXT;
                }
                break;
            }
            case 0x000001f1u:
            {
                if (name == BuiltInName::textureCubeGradEXT_0J2B2B2B)
                {
                    return &BuiltInFunction::kFunction_textureCubeGradEXT_0J2B2B2B;
                }
                break;
            }
            case 0x0000021fu:
            {
                if (name == BuiltInName::texture2DProjGradEXT_0H3B1B1B)
                {
                    return &BuiltInFunction::kFunction_texture2DProjGradEXT_0H3B1B1B;
                }
                break;
            }
            case 0x0000025bu:
            {
                if (name == BuiltInName::texture2DProj_0L3B)
                {
                    return &BuiltInFunction::kFunction_texture2DProj_0L3B;
                }
                break;
            }
            case 0x0000028au:
            {
                if (name == BuiltInName::gl_MaxVaryingVectors)
                {
                    return mVar_gl_MaxVaryingVectors;
                }
                break;
            }
            case 0x00000320u:
            {
                if (name == BuiltInName::texture2DGradEXT_0H1B1B1B)
                {
                    return &BuiltInFunction::kFunction_texture2DGradEXT_0H1B1B1B;
                }
                break;
            }
            case 0x0000034bu:
            {
                if (name == BuiltInName::texture2DRect_0N1B)
                {
                    return &BuiltInFunction::kFunction_texture2DRect_0N1B;
                }
                break;
            }
            case 0x00000354u:
            {
                if (name == BuiltInName::texture2D_0L1B)
                {
                    return &BuiltInFunction::kFunction_texture2D_0L1B;
                }
                break;
            }
            case 0x000003a4u:
            {
                if (name == BuiltInName::gl_FragData)
                {
                    // Only initialized if shaderType == GL_FRAGMENT_SHADER
                    return mVar_gl_FragData;
                }
                break;
            }
            case 0x00000414u:
            {
                if (name == BuiltInName::texture2DProjGradEXT_0H2B1B1B)
                {
                    return &BuiltInFunction::kFunction_texture2DProjGradEXT_0H2B1B1B;
                }
                break;
            }
            case 0x00000415u:
            {
                if (name == BuiltInName::texture2DRectProj_0N2B)
                {
                    return &BuiltInFunction::kFunction_texture2DRectProj_0N2B;
                }
                break;
            }
            case 0x00000424u:
            {
                if (name == BuiltInName::texture2DProj_0H2B)
                {
                    return &BuiltInFunction::kFunction_texture2DProj_0H2B;
                }
                break;
            }
        }
        if (mShaderType == GL_FRAGMENT_SHADER)
        {
            switch (nameHash)
            {
                case 0x0000002au:
                {
                    if (name == BuiltInName::texture2D_0H1B0B)
                    {
                        return &BuiltInFunction::kFunction_texture2D_0H1B0B;
                    }
                    break;
                }
                case 0x00000044u:
                {
                    if (name == BuiltInName::texture2DProjLodEXT_0H3B0B)
                    {
                        return &BuiltInFunction::kFunction_texture2DProjLodEXT_0H3B0B;
                    }
                    break;
                }
                case 0x00000064u:
                {
                    if (name == BuiltInName::dFdyExt_1B)
                    {
                        return &BuiltInFunction::kFunction_dFdyExt_1B;
                    }
                    break;
                }
                case 0x00000097u:
                {
                    if (name == BuiltInName::texture2DProjLodEXT_0H2B0B)
                    {
                        return &BuiltInFunction::kFunction_texture2DProjLodEXT_0H2B0B;
                    }
                    break;
                }
                case 0x0000009au:
                {
                    if (name == BuiltInName::texture2DProj_0H2B0B)
                    {
                        return &BuiltInFunction::kFunction_texture2DProj_0H2B0B;
                    }
                    break;
                }
                case 0x0000009bu:
                {
                    if (name == BuiltInName::gl_FragColor)
                    {
                        return &BuiltInVariable::kVar_gl_FragColor;
                    }
                    break;
                }
                case 0x000000a7u:
                {
                    if (name == BuiltInName::fwidthExt_1B)
                    {
                        return &BuiltInFunction::kFunction_fwidthExt_1B;
                    }
                    break;
                }
                case 0x000000bdu:
                {
                    if (name == BuiltInName::texture3D_0I2B0B)
                    {
                        return &BuiltInFunction::kFunction_texture3D_0I2B0B;
                    }
                    break;
                }
                case 0x000000cbu:
                {
                    if (name == BuiltInName::dFdxExt_2B)
                    {
                        return &BuiltInFunction::kFunction_dFdxExt_2B;
                    }
                    break;
                }
                case 0x00000126u:
                {
                    if (name == BuiltInName::texture3DProj_0I3B0B)
                    {
                        return &BuiltInFunction::kFunction_texture3DProj_0I3B0B;
                    }
                    break;
                }
                case 0x00000186u:
                {
                    if (name == BuiltInName::texture3DProj_0I3B)
                    {
                        return &BuiltInFunction::kFunction_texture3DProj_0I3B;
                    }
                    break;
                }
                case 0x00000206u:
                {
                    if (name == BuiltInName::dFdyExt_3B)
                    {
                        return &BuiltInFunction::kFunction_dFdyExt_3B;
                    }
                    break;
                }
                case 0x00000208u:
                {
                    if (name == BuiltInName::texture3D_0I2B)
                    {
                        return &BuiltInFunction::kFunction_texture3D_0I2B;
                    }
                    break;
                }
                case 0x00000215u:
                {
                    if (name == BuiltInName::texture2DProj_0H3B0B)
                    {
                        return &BuiltInFunction::kFunction_texture2DProj_0H3B0B;
                    }
                    break;
                }
                case 0x0000024au:
                {
                    if (name == BuiltInName::dFdxExt_3B)
                    {
                        return &BuiltInFunction::kFunction_dFdxExt_3B;
                    }
                    break;
                }
                case 0x00000256u:
                {
                    if (name == BuiltInName::fwidthExt_3B)
                    {
                        return &BuiltInFunction::kFunction_fwidthExt_3B;
                    }
                    break;
                }
                case 0x0000026bu:
                {
                    if (name == BuiltInName::texture3DProjLod_0I3B0B)
                    {
                        return &BuiltInFunction::kFunction_texture3DProjLod_0I3B0B;
                    }
                    break;
                }
                case 0x00000277u:
                {
                    if (name == BuiltInName::texture3DLod_0I2B0B)
                    {
                        return &BuiltInFunction::kFunction_texture3DLod_0I2B0B;
                    }
                    break;
                }
                case 0x0000028bu:
                {
                    if (name == BuiltInName::dFdxExt_1B)
                    {
                        return &BuiltInFunction::kFunction_dFdxExt_1B;
                    }
                    break;
                }
                case 0x00000308u:
                {
                    if (name == BuiltInName::fwidthExt_2B)
                    {
                        return &BuiltInFunction::kFunction_fwidthExt_2B;
                    }
                    break;
                }
                case 0x00000328u:
                {
                    if (name == BuiltInName::textureCubeLodEXT_0J2B0B)
                    {
                        return &BuiltInFunction::kFunction_textureCubeLodEXT_0J2B0B;
                    }
                    break;
                }
                case 0x00000331u:
                {
                    if (name == BuiltInName::dFdxExt_0B)
                    {
                        return &BuiltInFunction::kFunction_dFdxExt_0B;
                    }
                    break;
                }
                case 0x0000036au:
                {
                    if (name == BuiltInName::dFdyExt_2B)
                    {
                        return &BuiltInFunction::kFunction_dFdyExt_2B;
                    }
                    break;
                }
                case 0x0000037du:
                {
                    if (name == BuiltInName::textureCube_0J2B0B)
                    {
                        return &BuiltInFunction::kFunction_textureCube_0J2B0B;
                    }
                    break;
                }
                case 0x00000392u:
                {
                    if (name == BuiltInName::texture2DLodEXT_0H1B0B)
                    {
                        return &BuiltInFunction::kFunction_texture2DLodEXT_0H1B0B;
                    }
                    break;
                }
                case 0x000003b0u:
                {
                    if (name == BuiltInName::dFdyExt_0B)
                    {
                        return &BuiltInFunction::kFunction_dFdyExt_0B;
                    }
                    break;
                }
                case 0x000003f8u:
                {
                    if (name == BuiltInName::fwidthExt_0B)
                    {
                        return &BuiltInFunction::kFunction_fwidthExt_0B;
                    }
                    break;
                }
            }
        }
        if (mShaderType == GL_VERTEX_SHADER)
        {
            switch (nameHash)
            {
                case 0x00000010u:
                {
                    if (name == BuiltInName::texture2DLod_0H1B0B)
                    {
                        return &BuiltInFunction::kFunction_texture2DLod_0H1B0B;
                    }
                    break;
                }
                case 0x00000285u:
                {
                    if (name == BuiltInName::texture2DProjLod_0H3B0B)
                    {
                        return &BuiltInFunction::kFunction_texture2DProjLod_0H3B0B;
                    }
                    break;
                }
                case 0x000003b4u:
                {
                    if (name == BuiltInName::textureCubeLod_0J2B0B)
                    {
                        return &BuiltInFunction::kFunction_textureCubeLod_0J2B0B;
                    }
                    break;
                }
                case 0x000003bau:
                {
                    if (name == BuiltInName::texture2DProjLod_0H2B0B)
                    {
                        return &BuiltInFunction::kFunction_texture2DProjLod_0H2B0B;
                    }
                    break;
                }
            }
        }
        if ((mShaderType == GL_FRAGMENT_SHADER) && (mResources.EXT_blend_func_extended))
        {
            switch (nameHash)
            {
                case 0x00000431u:
                {
                    if (name == BuiltInName::gl_SecondaryFragColorEXT)
                    {
                        return &BuiltInVariable::kVar_gl_SecondaryFragColorEXT;
                    }
                    break;
                }
            }
        }
        if ((mShaderType == GL_FRAGMENT_SHADER) && (mResources.EXT_shader_framebuffer_fetch))
        {
            switch (nameHash)
            {
                case 0x000000ecu:
                {
                    if (name == BuiltInName::gl_LastFragData)
                    {
                        return mVar_gl_LastFragData;
                    }
                    break;
                }
            }
        }
        if ((mShaderType == GL_FRAGMENT_SHADER) && (mResources.NV_shader_framebuffer_fetch))
        {
            switch (nameHash)
            {
                case 0x000000ecu:
                {
                    if (name == BuiltInName::gl_LastFragData)
                    {
                        return mVar_gl_LastFragDataNV;
                    }
                    break;
                }
                case 0x00000389u:
                {
                    if (name == BuiltInName::gl_LastFragColor)
                    {
                        return &BuiltInVariable::kVar_gl_LastFragColor;
                    }
                    break;
                }
            }
        }
        if ((mShaderType == GL_FRAGMENT_SHADER) &&
            (!mResources.EXT_shader_framebuffer_fetch && !mResources.NV_shader_framebuffer_fetch &&
             mResources.ARM_shader_framebuffer_fetch))
        {
            switch (nameHash)
            {
                case 0x00000377u:
                {
                    if (name == BuiltInName::gl_LastFragColorARM)
                    {
                        return &BuiltInVariable::kVar_gl_LastFragColorARM;
                    }
                    break;
                }
            }
        }
        if ((mShaderType == GL_VERTEX_SHADER) && (mResources.ANGLE_multi_draw))
        {
            switch (nameHash)
            {
                case 0x00000436u:
                {
                    if (name == BuiltInName::gl_DrawID)
                    {
                        return &BuiltInVariable::kVar_gl_DrawIDESSL1;
                    }
                    break;
                }
            }
        }
        if ((mResources.OVR_multiview || mResources.OVR_multiview2) &&
            mShaderType != GL_COMPUTE_SHADER)
        {
            switch (nameHash)
            {
                case 0x000000fau:
                {
                    if (name == BuiltInName::gl_ViewID_OVR)
                    {
                        return &BuiltInVariable::kVar_gl_ViewID_OVRESSL1;
                    }
                    break;
                }
            }
        }
    }
    switch (nameHash)
    {
        case 0x00000004u:
        {
            if (name == BuiltInName::length_2B)
            {
                return &BuiltInFunction::kFunction_length_2B;
            }
            break;
        }
        case 0x00000006u:
        {
            if (name == BuiltInName::tan_1B)
            {
                return &BuiltInFunction::kFunction_tan_1B;
            }
            break;
        }
        case 0x00000008u:
        {
            if (name == BuiltInName::equal_3C3C)
            {
                return &BuiltInFunction::kFunction_equal_3C3C;
            }
            break;
        }
        case 0x00000015u:
        {
            if (name == BuiltInName::dot_1B1B)
            {
                return &BuiltInFunction::kFunction_dot_1B1B;
            }
            break;
        }
        case 0x0000001bu:
        {
            if (name == BuiltInName::max_2B0B)
            {
                return &BuiltInFunction::kFunction_max_2B0B;
            }
            break;
        }
        case 0x0000001du:
        {
            if (name == BuiltInName::mod_2B0B)
            {
                return &BuiltInFunction::kFunction_mod_2B0B;
            }
            break;
        }
        case 0x0000001eu:
        {
            if (name == BuiltInName::mix_2B2B0B)
            {
                return &BuiltInFunction::kFunction_mix_2B2B0B;
            }
            break;
        }
        case 0x00000020u:
        {
            if (name == BuiltInName::lessThanEqual_2B2B)
            {
                return &BuiltInFunction::kFunction_lessThanEqual_2B2B;
            }
            break;
        }
        case 0x00000021u:
        {
            if (name == BuiltInName::faceforward_1B1B1B)
            {
                return &BuiltInFunction::kFunction_faceforward_1B1B1B;
            }
            break;
        }
        case 0x00000023u:
        {
            if (name == BuiltInName::faceforward_2B2B2B)
            {
                return &BuiltInFunction::kFunction_faceforward_2B2B2B;
            }
            break;
        }
        case 0x00000036u:
        {
            if (name == BuiltInName::cross_2B2B)
            {
                return &BuiltInFunction::kFunction_cross_2B2B;
            }
            break;
        }
        case 0x00000039u:
        {
            if (name == BuiltInName::equal_2C2C)
            {
                return &BuiltInFunction::kFunction_equal_2C2C;
            }
            break;
        }
        case 0x00000046u:
        {
            if (name == BuiltInName::mod_2B2B)
            {
                return &BuiltInFunction::kFunction_mod_2B2B;
            }
            break;
        }
        case 0x0000004fu:
        {
            if (name == BuiltInName::floor_1B)
            {
                return &BuiltInFunction::kFunction_floor_1B;
            }
            break;
        }
        case 0x0000005du:
        {
            if (name == BuiltInName::atan_1B)
            {
                return &BuiltInFunction::kFunction_atan_1B;
            }
            break;
        }
        case 0x00000067u:
        {
            if (name == BuiltInName::max_1B1B)
            {
                return &BuiltInFunction::kFunction_max_1B1B;
            }
            break;
        }
        case 0x00000068u:
        {
            if (name == BuiltInName::dot_3B3B)
            {
                return &BuiltInFunction::kFunction_dot_3B3B;
            }
            break;
        }
        case 0x0000006au:
        {
            if (name == BuiltInName::step_0B1B)
            {
                return &BuiltInFunction::kFunction_step_0B1B;
            }
            break;
        }
        case 0x0000006bu:
        {
            if (name == BuiltInName::smoothstep_2B2B2B)
            {
                return &BuiltInFunction::kFunction_smoothstep_2B2B2B;
            }
            break;
        }
        case 0x00000074u:
        {
            if (name == BuiltInName::notEqual_2B2B)
            {
                return &BuiltInFunction::kFunction_notEqual_2B2B;
            }
            break;
        }
        case 0x0000007du:
        {
            if (name == BuiltInName::atan_3B)
            {
                return &BuiltInFunction::kFunction_atan_3B;
            }
            break;
        }
        case 0x0000007fu:
        {
            if (name == BuiltInName::clamp_1B0B0B)
            {
                return &BuiltInFunction::kFunction_clamp_1B0B0B;
            }
            break;
        }
        case 0x00000084u:
        {
            if (name == BuiltInName::notEqual_1E1E)
            {
                return &BuiltInFunction::kFunction_notEqual_1E1E;
            }
            break;
        }
        case 0x00000085u:
        {
            if (name == BuiltInName::ceil_3B)
            {
                return &BuiltInFunction::kFunction_ceil_3B;
            }
            break;
        }
        case 0x0000008eu:
        {
            if (name == BuiltInName::sin_3B)
            {
                return &BuiltInFunction::kFunction_sin_3B;
            }
            break;
        }
        case 0x00000096u:
        {
            if (name == BuiltInName::acos_0B)
            {
                return &BuiltInFunction::kFunction_acos_0B;
            }
            break;
        }
        case 0x0000009du:
        {
            if (name == BuiltInName::lessThan_1B1B)
            {
                return &BuiltInFunction::kFunction_lessThan_1B1B;
            }
            break;
        }
        case 0x0000009fu:
        {
            if (name == BuiltInName::lessThan_2B2B)
            {
                return &BuiltInFunction::kFunction_lessThan_2B2B;
            }
            break;
        }
        case 0x000000a9u:
        {
            if (name == BuiltInName::gl_MaxDualSourceDrawBuffersEXT)
            {
                return mVar_gl_MaxDualSourceDrawBuffersEXT;
            }
            break;
        }
        case 0x000000adu:
        {
            if (name == BuiltInName::greaterThanEqual_2C2C)
            {
                return &BuiltInFunction::kFunction_greaterThanEqual_2C2C;
            }
            break;
        }
        case 0x000000aeu:
        {
            if (name == BuiltInName::fract_2B)
            {
                return &BuiltInFunction::kFunction_fract_2B;
            }
            break;
        }
        case 0x000000b0u:
        {
            if (name == BuiltInName::matrixCompMult_ABAB)
            {
                return &BuiltInFunction::kFunction_matrixCompMult_ABAB;
            }
            break;
        }
        case 0x000000b1u:
        {
            if (name == BuiltInName::mod_0B0B)
            {
                return &BuiltInFunction::kFunction_mod_0B0B;
            }
            break;
        }
        case 0x000000b2u:
        {
            if (name == BuiltInName::mod_1B1B)
            {
                return &BuiltInFunction::kFunction_mod_1B1B;
            }
            break;
        }
        case 0x000000b8u:
        {
            if (name == BuiltInName::all_3E)
            {
                return &BuiltInFunction::kFunction_all_3E;
            }
            break;
        }
        case 0x000000bau:
        {
            if (name == BuiltInName::clamp_2B2B2B)
            {
                return &BuiltInFunction::kFunction_clamp_2B2B2B;
            }
            break;
        }
        case 0x000000d1u:
        {
            if (name == BuiltInName::pow_1B1B)
            {
                return &BuiltInFunction::kFunction_pow_1B1B;
            }
            break;
        }
        case 0x000000dau:
        {
            if (name == BuiltInName::sqrt_1B)
            {
                return &BuiltInFunction::kFunction_sqrt_1B;
            }
            break;
        }
        case 0x000000dbu:
        {
            if (name == BuiltInName::smoothstep_0B0B3B)
            {
                return &BuiltInFunction::kFunction_smoothstep_0B0B3B;
            }
            break;
        }
        case 0x000000deu:
        {
            if (name == BuiltInName::log2_3B)
            {
                return &BuiltInFunction::kFunction_log2_3B;
            }
            break;
        }
        case 0x000000e2u:
        {
            if (name == BuiltInName::smoothstep_3B3B3B)
            {
                return &BuiltInFunction::kFunction_smoothstep_3B3B3B;
            }
            break;
        }
        case 0x000000e5u:
        {
            if (name == BuiltInName::notEqual_2C2C)
            {
                return &BuiltInFunction::kFunction_notEqual_2C2C;
            }
            break;
        }
        case 0x000000e6u:
        {
            if (name == BuiltInName::exp2_2B)
            {
                return &BuiltInFunction::kFunction_exp2_2B;
            }
            break;
        }
        case 0x000000e7u:
        {
            if (name == BuiltInName::lessThanEqual_2C2C)
            {
                return &BuiltInFunction::kFunction_lessThanEqual_2C2C;
            }
            break;
        }
        case 0x000000e9u:
        {
            if (name == BuiltInName::gl_MaxDrawBuffers)
            {
                return mVar_gl_MaxDrawBuffers;
            }
            break;
        }
        case 0x000000ebu:
        {
            if (name == BuiltInName::equal_3B3B)
            {
                return &BuiltInFunction::kFunction_equal_3B3B;
            }
            break;
        }
        case 0x000000f2u:
        {
            if (name == BuiltInName::greaterThan_3C3C)
            {
                return &BuiltInFunction::kFunction_greaterThan_3C3C;
            }
            break;
        }
        case 0x000000f6u:
        {
            if (name == BuiltInName::greaterThanEqual_3C3C)
            {
                return &BuiltInFunction::kFunction_greaterThanEqual_3C3C;
            }
            break;
        }
        case 0x00000100u:
        {
            if (name == BuiltInName::greaterThanEqual_1B1B)
            {
                return &BuiltInFunction::kFunction_greaterThanEqual_1B1B;
            }
            break;
        }
        case 0x00000101u:
        {
            if (name == BuiltInName::refract_0B0B0B)
            {
                return &BuiltInFunction::kFunction_refract_0B0B0B;
            }
            break;
        }
        case 0x00000102u:
        {
            if (name == BuiltInName::inversesqrt_1B)
            {
                return &BuiltInFunction::kFunction_inversesqrt_1B;
            }
            break;
        }
        case 0x00000107u:
        {
            if (name == BuiltInName::all_1E)
            {
                return &BuiltInFunction::kFunction_all_1E;
            }
            break;
        }
        case 0x0000010eu:
        {
            if (name == BuiltInName::cos_3B)
            {
                return &BuiltInFunction::kFunction_cos_3B;
            }
            break;
        }
        case 0x00000110u:
        {
            if (name == BuiltInName::greaterThanEqual_3B3B)
            {
                return &BuiltInFunction::kFunction_greaterThanEqual_3B3B;
            }
            break;
        }
        case 0x00000116u:
        {
            if (name == BuiltInName::faceforward_3B3B3B)
            {
                return &BuiltInFunction::kFunction_faceforward_3B3B3B;
            }
            break;
        }
        case 0x0000011bu:
        {
            if (name == BuiltInName::notFunc_3E)
            {
                return &BuiltInFunction::kFunction_notFunc_3E;
            }
            break;
        }
        case 0x00000135u:
        {
            if (name == BuiltInName::gl_MaxTextureImageUnits)
            {
                return mVar_gl_MaxTextureImageUnits;
            }
            break;
        }
        case 0x00000136u:
        {
            if (name == BuiltInName::floor_2B)
            {
                return &BuiltInFunction::kFunction_floor_2B;
            }
            break;
        }
        case 0x0000013bu:
        {
            if (name == BuiltInName::length_1B)
            {
                return &BuiltInFunction::kFunction_length_1B;
            }
            break;
        }
        case 0x0000013du:
        {
            if (name == BuiltInName::abs_1B)
            {
                return &BuiltInFunction::kFunction_abs_1B;
            }
            break;
        }
        case 0x0000013eu:
        {
            if (name == BuiltInName::radians_1B)
            {
                return &BuiltInFunction::kFunction_radians_1B;
            }
            break;
        }
        case 0x00000142u:
        {
            if (name == BuiltInName::equal_2E2E)
            {
                return &BuiltInFunction::kFunction_equal_2E2E;
            }
            break;
        }
        case 0x0000014du:
        {
            if (name == BuiltInName::degrees_2B)
            {
                return &BuiltInFunction::kFunction_degrees_2B;
            }
            break;
        }
        case 0x00000150u:
        {
            if (name == BuiltInName::normalize_2B)
            {
                return &BuiltInFunction::kFunction_normalize_2B;
            }
            break;
        }
        case 0x00000156u:
        {
            if (name == BuiltInName::asin_3B)
            {
                return &BuiltInFunction::kFunction_asin_3B;
            }
            break;
        }
        case 0x0000015du:
        {
            if (name == BuiltInName::min_2B2B)
            {
                return &BuiltInFunction::kFunction_min_2B2B;
            }
            break;
        }
        case 0x0000015fu:
        {
            if (name == BuiltInName::gl_MaxVertexUniformVectors)
            {
                return mVar_gl_MaxVertexUniformVectors;
            }
            break;
        }
        case 0x00000161u:
        {
            if (name == BuiltInName::max_1B0B)
            {
                return &BuiltInFunction::kFunction_max_1B0B;
            }
            break;
        }
        case 0x00000167u:
        {
            if (name == BuiltInName::step_0B2B)
            {
                return &BuiltInFunction::kFunction_step_0B2B;
            }
            break;
        }
        case 0x0000016cu:
        {
            if (name == BuiltInName::lessThan_2C2C)
            {
                return &BuiltInFunction::kFunction_lessThan_2C2C;
            }
            break;
        }
        case 0x00000171u:
        {
            if (name == BuiltInName::inversesqrt_2B)
            {
                return &BuiltInFunction::kFunction_inversesqrt_2B;
            }
            break;
        }
        case 0x00000172u:
        {
            if (name == BuiltInName::atan_0B)
            {
                return &BuiltInFunction::kFunction_atan_0B;
            }
            break;
        }
        case 0x00000178u:
        {
            if (name == BuiltInName::log_3B)
            {
                return &BuiltInFunction::kFunction_log_3B;
            }
            break;
        }
        case 0x00000182u:
        {
            if (name == BuiltInName::ceil_2B)
            {
                return &BuiltInFunction::kFunction_ceil_2B;
            }
            break;
        }
        case 0x00000185u:
        {
            if (name == BuiltInName::mix_1B1B0B)
            {
                return &BuiltInFunction::kFunction_mix_1B1B0B;
            }
            break;
        }
        case 0x00000188u:
        {
            if (name == BuiltInName::exp_3B)
            {
                return &BuiltInFunction::kFunction_exp_3B;
            }
            break;
        }
        case 0x0000018du:
        {
            if (name == BuiltInName::tan_0B)
            {
                return &BuiltInFunction::kFunction_tan_0B;
            }
            break;
        }
        case 0x00000192u:
        {
            if (name == BuiltInName::greaterThanEqual_1C1C)
            {
                return &BuiltInFunction::kFunction_greaterThanEqual_1C1C;
            }
            break;
        }
        case 0x00000199u:
        {
            if (name == BuiltInName::inversesqrt_0B)
            {
                return &BuiltInFunction::kFunction_inversesqrt_0B;
            }
            break;
        }
        case 0x0000019eu:
        {
            if (name == BuiltInName::notEqual_3E3E)
            {
                return &BuiltInFunction::kFunction_notEqual_3E3E;
            }
            break;
        }
        case 0x000001a7u:
        {
            if (name == BuiltInName::min_0B0B)
            {
                return &BuiltInFunction::kFunction_min_0B0B;
            }
            break;
        }
        case 0x000001aau:
        {
            if (name == BuiltInName::normalize_0B)
            {
                return &BuiltInFunction::kFunction_normalize_0B;
            }
            break;
        }
        case 0x000001acu:
        {
            if (name == BuiltInName::gl_MaxCombinedTextureImageUnits)
            {
                return mVar_gl_MaxCombinedTextureImageUnits;
            }
            break;
        }
        case 0x000001afu:
        {
            if (name == BuiltInName::fract_3B)
            {
                return &BuiltInFunction::kFunction_fract_3B;
            }
            break;
        }
        case 0x000001b0u:
        {
            if (name == BuiltInName::gl_DepthRangeParameters)
            {
                return mVar_gl_DepthRangeParameters;
            }
            break;
        }
        case 0x000001b2u:
        {
            if (name == BuiltInName::mod_1B0B)
            {
                return &BuiltInFunction::kFunction_mod_1B0B;
            }
            break;
        }
        case 0x000001b6u:
        {
            if (name == BuiltInName::normalize_1B)
            {
                return &BuiltInFunction::kFunction_normalize_1B;
            }
            break;
        }
        case 0x000001b7u:
        {
            if (name == BuiltInName::radians_2B)
            {
                return &BuiltInFunction::kFunction_radians_2B;
            }
            break;
        }
        case 0x000001b8u:
        {
            if (name == BuiltInName::all_2E)
            {
                return &BuiltInFunction::kFunction_all_2E;
            }
            break;
        }
        case 0x000001bfu:
        {
            if (name == BuiltInName::mix_3B3B3B)
            {
                return &BuiltInFunction::kFunction_mix_3B3B3B;
            }
            break;
        }
        case 0x000001c0u:
        {
            if (name == BuiltInName::atan_1B1B)
            {
                return &BuiltInFunction::kFunction_atan_1B1B;
            }
            break;
        }
        case 0x000001c2u:
        {
            if (name == BuiltInName::any_1E)
            {
                return &BuiltInFunction::kFunction_any_1E;
            }
            break;
        }
        case 0x000001cdu:
        {
            if (name == BuiltInName::lessThanEqual_1C1C)
            {
                return &BuiltInFunction::kFunction_lessThanEqual_1C1C;
            }
            break;
        }
        case 0x000001cfu:
        {
            if (name == BuiltInName::sqrt_2B)
            {
                return &BuiltInFunction::kFunction_sqrt_2B;
            }
            break;
        }
        case 0x000001d0u:
        {
            if (name == BuiltInName::smoothstep_0B0B0B)
            {
                return &BuiltInFunction::kFunction_smoothstep_0B0B0B;
            }
            break;
        }
        case 0x000001d5u:
        {
            if (name == BuiltInName::log2_0B)
            {
                return &BuiltInFunction::kFunction_log2_0B;
            }
            break;
        }
        case 0x000001d6u:
        {
            if (name == BuiltInName::distance_2B2B)
            {
                return &BuiltInFunction::kFunction_distance_2B2B;
            }
            break;
        }
        case 0x000001ddu:
        {
            if (name == BuiltInName::sign_3B)
            {
                return &BuiltInFunction::kFunction_sign_3B;
            }
            break;
        }
        case 0x000001deu:
        {
            if (name == BuiltInName::exp2_1B)
            {
                return &BuiltInFunction::kFunction_exp2_1B;
            }
            break;
        }
        case 0x000001dfu:
        {
            if (name == BuiltInName::refract_1B1B0B)
            {
                return &BuiltInFunction::kFunction_refract_1B1B0B;
            }
            break;
        }
        case 0x000001e5u:
        {
            if (name == BuiltInName::exp_2B)
            {
                return &BuiltInFunction::kFunction_exp_2B;
            }
            break;
        }
        case 0x000001eeu:
        {
            if (name == BuiltInName::mod_3B0B)
            {
                return &BuiltInFunction::kFunction_mod_3B0B;
            }
            break;
        }
        case 0x000001f8u:
        {
            if (name == BuiltInName::max_2B2B)
            {
                return &BuiltInFunction::kFunction_max_2B2B;
            }
            break;
        }
        case 0x000001fau:
        {
            if (name == BuiltInName::greaterThan_1B1B)
            {
                return &BuiltInFunction::kFunction_greaterThan_1B1B;
            }
            break;
        }
        case 0x000001fbu:
        {
            if (name == BuiltInName::clamp_3B0B0B)
            {
                return &BuiltInFunction::kFunction_clamp_3B0B0B;
            }
            break;
        }
        case 0x00000205u:
        {
            if (name == BuiltInName::mix_2B2B2B)
            {
                return &BuiltInFunction::kFunction_mix_2B2B2B;
            }
            break;
        }
        case 0x00000209u:
        {
            if (name == BuiltInName::cos_2B)
            {
                return &BuiltInFunction::kFunction_cos_2B;
            }
            break;
        }
        case 0x00000212u:
        {
            if (name == BuiltInName::acos_1B)
            {
                return &BuiltInFunction::kFunction_acos_1B;
            }
            break;
        }
        case 0x00000214u:
        {
            if (name == BuiltInName::sin_0B)
            {
                return &BuiltInFunction::kFunction_sin_0B;
            }
            break;
        }
        case 0x00000219u:
        {
            if (name == BuiltInName::max_3B0B)
            {
                return &BuiltInFunction::kFunction_max_3B0B;
            }
            break;
        }
        case 0x00000229u:
        {
            if (name == BuiltInName::floor_3B)
            {
                return &BuiltInFunction::kFunction_floor_3B;
            }
            break;
        }
        case 0x0000022du:
        {
            if (name == BuiltInName::abs_2B)
            {
                return &BuiltInFunction::kFunction_abs_2B;
            }
            break;
        }
        case 0x00000236u:
        {
            if (name == BuiltInName::dot_2B2B)
            {
                return &BuiltInFunction::kFunction_dot_2B2B;
            }
            break;
        }
        case 0x00000237u:
        {
            if (name == BuiltInName::sign_0B)
            {
                return &BuiltInFunction::kFunction_sign_0B;
            }
            break;
        }
        case 0x0000023du:
        {
            if (name == BuiltInName::gl_MaxVertexAttribs)
            {
                return mVar_gl_MaxVertexAttribs;
            }
            break;
        }
        case 0x00000240u:
        {
            if (name == BuiltInName::degrees_1B)
            {
                return &BuiltInFunction::kFunction_degrees_1B;
            }
            break;
        }
        case 0x00000241u:
        {
            if (name == BuiltInName::asin_2B)
            {
                return &BuiltInFunction::kFunction_asin_2B;
            }
            break;
        }
        case 0x00000248u:
        {
            if (name == BuiltInName::min_1B1B)
            {
                return &BuiltInFunction::kFunction_min_1B1B;
            }
            break;
        }
        case 0x00000251u:
        {
            if (name == BuiltInName::equal_3E3E)
            {
                return &BuiltInFunction::kFunction_equal_3E3E;
            }
            break;
        }
        case 0x00000253u:
        {
            if (name == BuiltInName::max_0B0B)
            {
                return &BuiltInFunction::kFunction_max_0B0B;
            }
            break;
        }
        case 0x00000258u:
        {
            if (name == BuiltInName::matrixCompMult_5B5B)
            {
                return &BuiltInFunction::kFunction_matrixCompMult_5B5B;
            }
            break;
        }
        case 0x00000259u:
        {
            if (name == BuiltInName::lessThanEqual_1B1B)
            {
                return &BuiltInFunction::kFunction_lessThanEqual_1B1B;
            }
            break;
        }
        case 0x0000025eu:
        {
            if (name == BuiltInName::reflect_2B2B)
            {
                return &BuiltInFunction::kFunction_reflect_2B2B;
            }
            break;
        }
        case 0x0000025fu:
        {
            if (name == BuiltInName::greaterThan_2B2B)
            {
                return &BuiltInFunction::kFunction_greaterThan_2B2B;
            }
            break;
        }
        case 0x00000266u:
        {
            if (name == BuiltInName::step_0B0B)
            {
                return &BuiltInFunction::kFunction_step_0B0B;
            }
            break;
        }
        case 0x00000267u:
        {
            if (name == BuiltInName::reflect_3B3B)
            {
                return &BuiltInFunction::kFunction_reflect_3B3B;
            }
            break;
        }
        case 0x00000269u:
        {
            if (name == BuiltInName::lessThan_3C3C)
            {
                return &BuiltInFunction::kFunction_lessThan_3C3C;
            }
            break;
        }
        case 0x00000270u:
        {
            if (name == BuiltInName::lessThan_3B3B)
            {
                return &BuiltInFunction::kFunction_lessThan_3B3B;
            }
            break;
        }
        case 0x00000272u:
        {
            if (name == BuiltInName::mix_1B1B1B)
            {
                return &BuiltInFunction::kFunction_mix_1B1B1B;
            }
            break;
        }
        case 0x00000275u:
        {
            if (name == BuiltInName::acos_2B)
            {
                return &BuiltInFunction::kFunction_acos_2B;
            }
            break;
        }
        case 0x00000276u:
        {
            if (name == BuiltInName::tan_3B)
            {
                return &BuiltInFunction::kFunction_tan_3B;
            }
            break;
        }
        case 0x00000287u:
        {
            if (name == BuiltInName::smoothstep_1B1B1B)
            {
                return &BuiltInFunction::kFunction_smoothstep_1B1B1B;
            }
            break;
        }
        case 0x00000288u:
        {
            if (name == BuiltInName::max_3B3B)
            {
                return &BuiltInFunction::kFunction_max_3B3B;
            }
            break;
        }
        case 0x00000289u:
        {
            if (name == BuiltInName::greaterThan_1C1C)
            {
                return &BuiltInFunction::kFunction_greaterThan_1C1C;
            }
            break;
        }
        case 0x0000028cu:
        {
            if (name == BuiltInName::notEqual_1B1B)
            {
                return &BuiltInFunction::kFunction_notEqual_1B1B;
            }
            break;
        }
        case 0x0000028eu:
        {
            if (name == BuiltInName::exp_1B)
            {
                return &BuiltInFunction::kFunction_exp_1B;
            }
            break;
        }
        case 0x00000295u:
        {
            if (name == BuiltInName::notFunc_2E)
            {
                return &BuiltInFunction::kFunction_notFunc_2E;
            }
            break;
        }
        case 0x0000029au:
        {
            if (name == BuiltInName::fract_0B)
            {
                return &BuiltInFunction::kFunction_fract_0B;
            }
            break;
        }
        case 0x0000029du:
        {
            if (name == BuiltInName::refract_3B3B0B)
            {
                return &BuiltInFunction::kFunction_refract_3B3B0B;
            }
            break;
        }
        case 0x000002a6u:
        {
            if (name == BuiltInName::any_2E)
            {
                return &BuiltInFunction::kFunction_any_2E;
            }
            break;
        }
        case 0x000002acu:
        {
            if (name == BuiltInName::notEqual_3B3B)
            {
                return &BuiltInFunction::kFunction_notEqual_3B3B;
            }
            break;
        }
        case 0x000002aeu:
        {
            if (name == BuiltInName::step_1B1B)
            {
                return &BuiltInFunction::kFunction_step_1B1B;
            }
            break;
        }
        case 0x000002b7u:
        {
            if (name == BuiltInName::smoothstep_0B0B1B)
            {
                return &BuiltInFunction::kFunction_smoothstep_0B0B1B;
            }
            break;
        }
        case 0x000002b8u:
        {
            if (name == BuiltInName::sqrt_3B)
            {
                return &BuiltInFunction::kFunction_sqrt_3B;
            }
            break;
        }
        case 0x000002bau:
        {
            if (name == BuiltInName::equal_1C1C)
            {
                return &BuiltInFunction::kFunction_equal_1C1C;
            }
            break;
        }
        case 0x000002bbu:
        {
            if (name == BuiltInName::log2_1B)
            {
                return &BuiltInFunction::kFunction_log2_1B;
            }
            break;
        }
        case 0x000002c4u:
        {
            if (name == BuiltInName::min_3B0B)
            {
                return &BuiltInFunction::kFunction_min_3B0B;
            }
            break;
        }
        case 0x000002c5u:
        {
            if (name == BuiltInName::atan_2B2B)
            {
                return &BuiltInFunction::kFunction_atan_2B2B;
            }
            break;
        }
        case 0x000002c8u:
        {
            if (name == BuiltInName::exp2_0B)
            {
                return &BuiltInFunction::kFunction_exp2_0B;
            }
            break;
        }
        case 0x000002d3u:
        {
            if (name == BuiltInName::notEqual_3C3C)
            {
                return &BuiltInFunction::kFunction_notEqual_3C3C;
            }
            break;
        }
        case 0x000002e0u:
        {
            if (name == BuiltInName::step_0B3B)
            {
                return &BuiltInFunction::kFunction_step_0B3B;
            }
            break;
        }
        case 0x000002e1u:
        {
            if (name == BuiltInName::inversesqrt_3B)
            {
                return &BuiltInFunction::kFunction_inversesqrt_3B;
            }
            break;
        }
        case 0x000002e7u:
        {
            if (name == BuiltInName::cos_1B)
            {
                return &BuiltInFunction::kFunction_cos_1B;
            }
            break;
        }
        case 0x000002eau:
        {
            if (name == BuiltInName::ceil_1B)
            {
                return &BuiltInFunction::kFunction_ceil_1B;
            }
            break;
        }
        case 0x000002ebu:
        {
            if (name == BuiltInName::log_0B)
            {
                return &BuiltInFunction::kFunction_log_0B;
            }
            break;
        }
        case 0x000002f1u:
        {
            if (name == BuiltInName::sin_1B)
            {
                return &BuiltInFunction::kFunction_sin_1B;
            }
            break;
        }
        case 0x000002fau:
        {
            if (name == BuiltInName::log_2B)
            {
                return &BuiltInFunction::kFunction_log_2B;
            }
            break;
        }
        case 0x00000306u:
        {
            if (name == BuiltInName::refract_2B2B0B)
            {
                return &BuiltInFunction::kFunction_refract_2B2B0B;
            }
            break;
        }
        case 0x0000030au:
        {
            if (name == BuiltInName::dot_0B0B)
            {
                return &BuiltInFunction::kFunction_dot_0B0B;
            }
            break;
        }
        case 0x00000313u:
        {
            if (name == BuiltInName::clamp_1B1B1B)
            {
                return &BuiltInFunction::kFunction_clamp_1B1B1B;
            }
            break;
        }
        case 0x00000314u:
        {
            if (name == BuiltInName::radians_3B)
            {
                return &BuiltInFunction::kFunction_radians_3B;
            }
            break;
        }
        case 0x00000316u:
        {
            if (name == BuiltInName::mix_3B3B0B)
            {
                return &BuiltInFunction::kFunction_mix_3B3B0B;
            }
            break;
        }
        case 0x0000031cu:
        {
            if (name == BuiltInName::asin_1B)
            {
                return &BuiltInFunction::kFunction_asin_1B;
            }
            break;
        }
        case 0x0000031eu:
        {
            if (name == BuiltInName::notEqual_1C1C)
            {
                return &BuiltInFunction::kFunction_notEqual_1C1C;
            }
            break;
        }
        case 0x00000325u:
        {
            if (name == BuiltInName::greaterThanEqual_2B2B)
            {
                return &BuiltInFunction::kFunction_greaterThanEqual_2B2B;
            }
            break;
        }
        case 0x00000326u:
        {
            if (name == BuiltInName::sign_2B)
            {
                return &BuiltInFunction::kFunction_sign_2B;
            }
            break;
        }
        case 0x00000329u:
        {
            if (name == BuiltInName::min_2B0B)
            {
                return &BuiltInFunction::kFunction_min_2B0B;
            }
            break;
        }
        case 0x0000032cu:
        {
            if (name == BuiltInName::min_1B0B)
            {
                return &BuiltInFunction::kFunction_min_1B0B;
            }
            break;
        }
        case 0x0000032fu:
        {
            if (name == BuiltInName::step_2B2B)
            {
                return &BuiltInFunction::kFunction_step_2B2B;
            }
            break;
        }
        case 0x00000330u:
        {
            if (name == BuiltInName::pow_0B0B)
            {
                return &BuiltInFunction::kFunction_pow_0B0B;
            }
            break;
        }
        case 0x00000334u:
        {
            if (name == BuiltInName::atan_3B3B)
            {
                return &BuiltInFunction::kFunction_atan_3B3B;
            }
            break;
        }
        case 0x00000339u:
        {
            if (name == BuiltInName::equal_1B1B)
            {
                return &BuiltInFunction::kFunction_equal_1B1B;
            }
            break;
        }
        case 0x0000033bu:
        {
            if (name == BuiltInName::greaterThan_3B3B)
            {
                return &BuiltInFunction::kFunction_greaterThan_3B3B;
            }
            break;
        }
        case 0x0000033du:
        {
            if (name == BuiltInName::atan_2B)
            {
                return &BuiltInFunction::kFunction_atan_2B;
            }
            break;
        }
        case 0x00000340u:
        {
            if (name == BuiltInName::equal_2B2B)
            {
                return &BuiltInFunction::kFunction_equal_2B2B;
            }
            break;
        }
        case 0x00000347u:
        {
            if (name == BuiltInName::notFunc_1E)
            {
                return &BuiltInFunction::kFunction_notFunc_1E;
            }
            break;
        }
        case 0x0000034cu:
        {
            if (name == BuiltInName::gl_MaxVertexTextureImageUnits)
            {
                return mVar_gl_MaxVertexTextureImageUnits;
            }
            break;
        }
        case 0x0000034du:
        {
            if (name == BuiltInName::gl_MaxFragmentUniformVectors)
            {
                return mVar_gl_MaxFragmentUniformVectors;
            }
            break;
        }
        case 0x00000350u:
        {
            if (name == BuiltInName::notEqual_2E2E)
            {
                return &BuiltInFunction::kFunction_notEqual_2E2E;
            }
            break;
        }
        case 0x0000035cu:
        {
            if (name == BuiltInName::pow_2B2B)
            {
                return &BuiltInFunction::kFunction_pow_2B2B;
            }
            break;
        }
        case 0x0000035du:
        {
            if (name == BuiltInName::mix_0B0B0B)
            {
                return &BuiltInFunction::kFunction_mix_0B0B0B;
            }
            break;
        }
        case 0x0000035eu:
        {
            if (name == BuiltInName::mod_3B3B)
            {
                return &BuiltInFunction::kFunction_mod_3B3B;
            }
            break;
        }
        case 0x0000035fu:
        {
            if (name == BuiltInName::pow_3B3B)
            {
                return &BuiltInFunction::kFunction_pow_3B3B;
            }
            break;
        }
        case 0x00000363u:
        {
            if (name == BuiltInName::reflect_1B1B)
            {
                return &BuiltInFunction::kFunction_reflect_1B1B;
            }
            break;
        }
        case 0x00000373u:
        {
            if (name == BuiltInName::fract_1B)
            {
                return &BuiltInFunction::kFunction_fract_1B;
            }
            break;
        }
        case 0x00000379u:
        {
            if (name == BuiltInName::matrixCompMult_FBFB)
            {
                return &BuiltInFunction::kFunction_matrixCompMult_FBFB;
            }
            break;
        }
        case 0x00000384u:
        {
            if (name == BuiltInName::any_3E)
            {
                return &BuiltInFunction::kFunction_any_3E;
            }
            break;
        }
        case 0x00000388u:
        {
            if (name == BuiltInName::lessThanEqual_3B3B)
            {
                return &BuiltInFunction::kFunction_lessThanEqual_3B3B;
            }
            break;
        }
        case 0x0000038du:
        {
            if (name == BuiltInName::lessThanEqual_3C3C)
            {
                return &BuiltInFunction::kFunction_lessThanEqual_3C3C;
            }
            break;
        }
        case 0x00000391u:
        {
            if (name == BuiltInName::floor_0B)
            {
                return &BuiltInFunction::kFunction_floor_0B;
            }
            break;
        }
        case 0x00000393u:
        {
            if (name == BuiltInName::length_3B)
            {
                return &BuiltInFunction::kFunction_length_3B;
            }
            break;
        }
        case 0x0000039du:
        {
            if (name == BuiltInName::abs_3B)
            {
                return &BuiltInFunction::kFunction_abs_3B;
            }
            break;
        }
        case 0x0000039fu:
        {
            if (name == BuiltInName::atan_0B0B)
            {
                return &BuiltInFunction::kFunction_atan_0B0B;
            }
            break;
        }
        case 0x000003a3u:
        {
            if (name == BuiltInName::degrees_0B)
            {
                return &BuiltInFunction::kFunction_degrees_0B;
            }
            break;
        }
        case 0x000003a6u:
        {
            if (name == BuiltInName::gl_DepthRange)
            {
                return mVar_gl_DepthRange;
            }
            break;
        }
        case 0x000003c9u:
        {
            if (name == BuiltInName::distance_1B1B)
            {
                return &BuiltInFunction::kFunction_distance_1B1B;
            }
            break;
        }
        case 0x000003ccu:
        {
            if (name == BuiltInName::cos_0B)
            {
                return &BuiltInFunction::kFunction_cos_0B;
            }
            break;
        }
        case 0x000003cdu:
        {
            if (name == BuiltInName::clamp_3B3B3B)
            {
                return &BuiltInFunction::kFunction_clamp_3B3B3B;
            }
            break;
        }
        case 0x000003ceu:
        {
            if (name == BuiltInName::log_1B)
            {
                return &BuiltInFunction::kFunction_log_1B;
            }
            break;
        }
        case 0x000003d1u:
        {
            if (name == BuiltInName::distance_0B0B)
            {
                return &BuiltInFunction::kFunction_distance_0B0B;
            }
            break;
        }
        case 0x000003d7u:
        {
            if (name == BuiltInName::faceforward_0B0B0B)
            {
                return &BuiltInFunction::kFunction_faceforward_0B0B0B;
            }
            break;
        }
        case 0x000003d8u:
        {
            if (name == BuiltInName::sin_2B)
            {
                return &BuiltInFunction::kFunction_sin_2B;
            }
            break;
        }
        case 0x000003dau:
        {
            if (name == BuiltInName::acos_3B)
            {
                return &BuiltInFunction::kFunction_acos_3B;
            }
            break;
        }
        case 0x000003e0u:
        {
            if (name == BuiltInName::tan_2B)
            {
                return &BuiltInFunction::kFunction_tan_2B;
            }
            break;
        }
        case 0x000003e2u:
        {
            if (name == BuiltInName::lessThan_1C1C)
            {
                return &BuiltInFunction::kFunction_lessThan_1C1C;
            }
            break;
        }
        case 0x000003e7u:
        {
            if (name == BuiltInName::clamp_0B0B0B)
            {
                return &BuiltInFunction::kFunction_clamp_0B0B0B;
            }
            break;
        }
        case 0x000003e9u:
        {
            if (name == BuiltInName::clamp_2B0B0B)
            {
                return &BuiltInFunction::kFunction_clamp_2B0B0B;
            }
            break;
        }
        case 0x000003f5u:
        {
            if (name == BuiltInName::distance_3B3B)
            {
                return &BuiltInFunction::kFunction_distance_3B3B;
            }
            break;
        }
        case 0x000003f6u:
        {
            if (name == BuiltInName::exp_0B)
            {
                return &BuiltInFunction::kFunction_exp_0B;
            }
            break;
        }
        case 0x000003fau:
        {
            if (name == BuiltInName::reflect_0B0B)
            {
                return &BuiltInFunction::kFunction_reflect_0B0B;
            }
            break;
        }
        case 0x000003feu:
        {
            if (name == BuiltInName::abs_0B)
            {
                return &BuiltInFunction::kFunction_abs_0B;
            }
            break;
        }
        case 0x00000400u:
        {
            if (name == BuiltInName::length_0B)
            {
                return &BuiltInFunction::kFunction_length_0B;
            }
            break;
        }
        case 0x00000401u:
        {
            if (name == BuiltInName::normalize_3B)
            {
                return &BuiltInFunction::kFunction_normalize_3B;
            }
            break;
        }
        case 0x00000409u:
        {
            if (name == BuiltInName::radians_0B)
            {
                return &BuiltInFunction::kFunction_radians_0B;
            }
            break;
        }
        case 0x0000040du:
        {
            if (name == BuiltInName::degrees_3B)
            {
                return &BuiltInFunction::kFunction_degrees_3B;
            }
            break;
        }
        case 0x0000040eu:
        {
            if (name == BuiltInName::asin_0B)
            {
                return &BuiltInFunction::kFunction_asin_0B;
            }
            break;
        }
        case 0x00000417u:
        {
            if (name == BuiltInName::sign_1B)
            {
                return &BuiltInFunction::kFunction_sign_1B;
            }
            break;
        }
        case 0x0000041au:
        {
            if (name == BuiltInName::ceil_0B)
            {
                return &BuiltInFunction::kFunction_ceil_0B;
            }
            break;
        }
        case 0x00000421u:
        {
            if (name == BuiltInName::sqrt_0B)
            {
                return &BuiltInFunction::kFunction_sqrt_0B;
            }
            break;
        }
        case 0x00000425u:
        {
            if (name == BuiltInName::smoothstep_0B0B2B)
            {
                return &BuiltInFunction::kFunction_smoothstep_0B0B2B;
            }
            break;
        }
        case 0x00000426u:
        {
            if (name == BuiltInName::log2_2B)
            {
                return &BuiltInFunction::kFunction_log2_2B;
            }
            break;
        }
        case 0x00000428u:
        {
            if (name == BuiltInName::step_3B3B)
            {
                return &BuiltInFunction::kFunction_step_3B3B;
            }
            break;
        }
        case 0x00000429u:
        {
            if (name == BuiltInName::min_3B3B)
            {
                return &BuiltInFunction::kFunction_min_3B3B;
            }
            break;
        }
        case 0x00000430u:
        {
            if (name == BuiltInName::greaterThan_2C2C)
            {
                return &BuiltInFunction::kFunction_greaterThan_2C2C;
            }
            break;
        }
        case 0x00000433u:
        {
            if (name == BuiltInName::equal_1E1E)
            {
                return &BuiltInFunction::kFunction_equal_1E1E;
            }
            break;
        }
        case 0x00000439u:
        {
            if (name == BuiltInName::exp2_3B)
            {
                return &BuiltInFunction::kFunction_exp2_3B;
            }
            break;
        }
    }
    if (mShaderType == GL_FRAGMENT_SHADER)
    {
        switch (nameHash)
        {
            case 0x000000c9u:
            {
                if (name == BuiltInName::gl_FragCoord)
                {
                    return &BuiltInVariable::kVar_gl_FragCoord;
                }
                break;
            }
            case 0x00000165u:
            {
                if (name == BuiltInName::gl_PointCoord)
                {
                    return &BuiltInVariable::kVar_gl_PointCoord;
                }
                break;
            }
            case 0x00000352u:
            {
                if (name == BuiltInName::gl_FrontFacing)
                {
                    return &BuiltInVariable::kVar_gl_FrontFacing;
                }
                break;
            }
        }
    }
    if (mShaderType == GL_VERTEX_SHADER)
    {
        switch (nameHash)
        {
            case 0x000002ecu:
            {
                if (name == BuiltInName::gl_PointSize)
                {
                    return &BuiltInVariable::kVar_gl_PointSize;
                }
                break;
            }
            case 0x00000397u:
            {
                if (name == BuiltInName::gl_Position)
                {
                    return &BuiltInVariable::kVar_gl_Position;
                }
                break;
            }
        }
    }
    return nullptr;
}

const UnmangledBuiltIn *TSymbolTable::getUnmangledBuiltInForShaderVersion(
    const ImmutableString &name,
    int shaderVersion)
{
    if (name.length() > 26)
    {
        return nullptr;
    }
    uint32_t nameHash = name.mangledNameHash();
    if (shaderVersion >= 310)
    {
        switch (nameHash)
        {
            case 0x0000001cu:
            {
                if (name == BuiltInName::imulExtended)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000025u:
            {
                if (name == BuiltInName::bitfieldReverse)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000032u:
            {
                if (name == BuiltInName::usubBorrow)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000045u:
            {
                if (name == BuiltInName::findLSB)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x0000004au:
            {
                if (name == BuiltInName::uaddCarry)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000088u:
            {
                if (name == BuiltInName::unpackUnorm4x8)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x0000009eu:
            {
                if (name == BuiltInName::frexp)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000000ffu:
            {
                if (name == BuiltInName::atomicCompSwap)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000112u:
            {
                if (name == BuiltInName::atomicMin)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x0000011du:
            {
                if (name == BuiltInName::atomicExchange)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000129u:
            {
                if (name == BuiltInName::bitCount)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000140u:
            {
                if (name == BuiltInName::atomicOr)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x0000018cu:
            {
                if (name == BuiltInName::memoryBarrierAtomicCounter)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000001a2u:
            {
                if (name == BuiltInName::textureSize)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000001a5u:
            {
                if (name == BuiltInName::texelFetch)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000001a9u:
            {
                if (name == BuiltInName::ldexp)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000001cau:
            {
                if (name == BuiltInName::textureGather)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000001f3u:
            {
                if (name == BuiltInName::atomicXor)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x0000020du:
            {
                if (name == BuiltInName::atomicMax)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x0000023cu:
            {
                if (name == BuiltInName::packSnorm4x8)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000273u:
            {
                if (name == BuiltInName::findMSB)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000291u:
            {
                if (name == BuiltInName::atomicCounterDecrement)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000002b9u:
            {
                if (name == BuiltInName::imageStore)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000002c9u:
            {
                if (name == BuiltInName::atomicAdd)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000002d7u:
            {
                if (name == BuiltInName::bitfieldInsert)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000002d9u:
            {
                if (name == BuiltInName::packUnorm4x8)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000002f0u:
            {
                if (name == BuiltInName::memoryBarrierBuffer)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000305u:
            {
                if (name == BuiltInName::atomicAnd)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x0000030cu:
            {
                if (name == BuiltInName::imageLoad)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000318u:
            {
                if (name == BuiltInName::imageSize)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x0000033au:
            {
                if (name == BuiltInName::memoryBarrierImage)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000369u:
            {
                if (name == BuiltInName::unpackSnorm4x8)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000003b2u:
            {
                if (name == BuiltInName::umulExtended)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000003bdu:
            {
                if (name == BuiltInName::textureGatherOffset)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000003c6u:
            {
                if (name == BuiltInName::atomicCounterIncrement)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000003eeu:
            {
                if (name == BuiltInName::memoryBarrier)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000003f9u:
            {
                if (name == BuiltInName::atomicCounter)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000003fbu:
            {
                if (name == BuiltInName::bitfieldExtract)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
        }
        if (mShaderType == GL_COMPUTE_SHADER)
        {
            switch (nameHash)
            {
                case 0x0000000eu:
                {
                    if (name == BuiltInName::memoryBarrierShared)
                    {
                        return &UnmangledBuiltIns::UNDEFINED;
                    }
                    break;
                }
                case 0x00000111u:
                {
                    if (name == BuiltInName::groupMemoryBarrier)
                    {
                        return &UnmangledBuiltIns::UNDEFINED;
                    }
                    break;
                }
                case 0x00000189u:
                {
                    if (name == BuiltInName::barrier)
                    {
                        return &UnmangledBuiltIns::UNDEFINED;
                    }
                    break;
                }
            }
        }
        if (mShaderType == GL_GEOMETRY_SHADER_EXT)
        {
            switch (nameHash)
            {
                case 0x000001c1u:
                {
                    if (name == BuiltInName::EmitVertex)
                    {
                        return &UnmangledBuiltIns::EXT_geometry_shader;
                    }
                    break;
                }
                case 0x00000406u:
                {
                    if (name == BuiltInName::EndPrimitive)
                    {
                        return &UnmangledBuiltIns::EXT_geometry_shader;
                    }
                    break;
                }
            }
        }
    }
    if (shaderVersion >= 300)
    {
        switch (nameHash)
        {
            case 0x00000001u:
            {
                if (name == BuiltInName::inverse)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x0000000fu:
            {
                if (name == BuiltInName::acosh)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x0000003du:
            {
                if (name == BuiltInName::round)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x0000003fu:
            {
                if (name == BuiltInName::unpackHalf2x16)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000047u:
            {
                if (name == BuiltInName::cosh)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x0000005au:
            {
                if (name == BuiltInName::abs)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000062u:
            {
                if (name == BuiltInName::lessThanEqual)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x0000006fu:
            {
                if (name == BuiltInName::sinh)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000070u:
            {
                if (name == BuiltInName::textureProjOffset)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000087u:
            {
                if (name == BuiltInName::packUnorm2x16)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000089u:
            {
                if (name == BuiltInName::matrixCompMult)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000094u:
            {
                if (name == BuiltInName::texture)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000000b7u:
            {
                if (name == BuiltInName::greaterThan)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000000c2u:
            {
                if (name == BuiltInName::textureGrad)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000000dcu:
            {
                if (name == BuiltInName::roundEven)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000000e0u:
            {
                if (name == BuiltInName::atanh)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000000f3u:
            {
                if (name == BuiltInName::max)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000103u:
            {
                if (name == BuiltInName::outerProduct)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000108u:
            {
                if (name == BuiltInName::uintBitsToFloat)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000113u:
            {
                if (name == BuiltInName::packHalf2x16)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000117u:
            {
                if (name == BuiltInName::rgb_2_yuv)
                {
                    return &UnmangledBuiltIns::EXT_YUV_target;
                }
                break;
            }
            case 0x00000155u:
            {
                if (name == BuiltInName::modf)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000159u:
            {
                if (name == BuiltInName::clamp)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000168u:
            {
                if (name == BuiltInName::textureProjGrad)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000173u:
            {
                if (name == BuiltInName::lessThan)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000176u:
            {
                if (name == BuiltInName::textureLod)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x0000018bu:
            {
                if (name == BuiltInName::unpackSnorm2x16)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000001a2u:
            {
                if (name == BuiltInName::textureSize)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000001a5u:
            {
                if (name == BuiltInName::texelFetch)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000001b4u:
            {
                if (name == BuiltInName::floatBitsToUint)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000001b5u:
            {
                if (name == BuiltInName::textureOffset)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000001d4u:
            {
                if (name == BuiltInName::sign)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000001f9u:
            {
                if (name == BuiltInName::min)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000001fdu:
            {
                if (name == BuiltInName::yuv_2_rgb)
                {
                    return &UnmangledBuiltIns::EXT_YUV_target;
                }
                break;
            }
            case 0x000001ffu:
            {
                if (name == BuiltInName::mix)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x0000020fu:
            {
                if (name == BuiltInName::unpackUnorm2x16)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000211u:
            {
                if (name == BuiltInName::isnan)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000216u:
            {
                if (name == BuiltInName::textureGradOffset)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x0000024cu:
            {
                if (name == BuiltInName::textureLodOffset)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000299u:
            {
                if (name == BuiltInName::transpose)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000002a4u:
            {
                if (name == BuiltInName::equal)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000002cau:
            {
                if (name == BuiltInName::trunc)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000002ceu:
            {
                if (name == BuiltInName::asinh)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000002d4u:
            {
                if (name == BuiltInName::greaterThanEqual)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000002dfu:
            {
                if (name == BuiltInName::tanh)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000002eeu:
            {
                if (name == BuiltInName::intBitsToFloat)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000002fdu:
            {
                if (name == BuiltInName::texelFetchOffset)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000002feu:
            {
                if (name == BuiltInName::determinant)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x0000031fu:
            {
                if (name == BuiltInName::packSnorm2x16)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x0000032au:
            {
                if (name == BuiltInName::textureProj)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000349u:
            {
                if (name == BuiltInName::textureProjGradOffset)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000003bbu:
            {
                if (name == BuiltInName::textureProjLod)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000003c2u:
            {
                if (name == BuiltInName::textureProjLodOffset)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000410u:
            {
                if (name == BuiltInName::floatBitsToInt)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000422u:
            {
                if (name == BuiltInName::isinf)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x0000042au:
            {
                if (name == BuiltInName::notEqual)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
        }
        if (mShaderType == GL_FRAGMENT_SHADER)
        {
            switch (nameHash)
            {
                case 0x0000011cu:
                {
                    if (name == BuiltInName::fwidth)
                    {
                        return &UnmangledBuiltIns::UNDEFINED;
                    }
                    break;
                }
                case 0x00000365u:
                {
                    if (name == BuiltInName::dFdx)
                    {
                        return &UnmangledBuiltIns::UNDEFINED;
                    }
                    break;
                }
                case 0x00000366u:
                {
                    if (name == BuiltInName::dFdy)
                    {
                        return &UnmangledBuiltIns::UNDEFINED;
                    }
                    break;
                }
            }
        }
    }
    if (shaderVersion == 100)
    {
        switch (nameHash)
        {
            case 0x0000002bu:
            {
                if (name == BuiltInName::texture2DRectProj)
                {
                    return &UnmangledBuiltIns::ARB_texture_rectangle;
                }
                break;
            }
            case 0x00000056u:
            {
                if (name == BuiltInName::texture2DGradEXT)
                {
                    return &UnmangledBuiltIns::EXT_shader_texture_lod;
                }
                break;
            }
            case 0x00000058u:
            {
                if (name == BuiltInName::textureCubeGradEXT)
                {
                    return &UnmangledBuiltIns::EXT_shader_texture_lod;
                }
                break;
            }
            case 0x0000010du:
            {
                if (name == BuiltInName::textureCube)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000122u:
            {
                if (name == BuiltInName::texture2DProj)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000160u:
            {
                if (name == BuiltInName::texture2DRect)
                {
                    return &UnmangledBuiltIns::ARB_texture_rectangle;
                }
                break;
            }
            case 0x000002f5u:
            {
                if (name == BuiltInName::texture2D)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000345u:
            {
                if (name == BuiltInName::texture2DProjGradEXT)
                {
                    return &UnmangledBuiltIns::EXT_shader_texture_lod;
                }
                break;
            }
        }
        if (mShaderType == GL_FRAGMENT_SHADER)
        {
            switch (nameHash)
            {
                case 0x000000cdu:
                {
                    if (name == BuiltInName::texture3DProjLod)
                    {
                        return &UnmangledBuiltIns::OES_texture_3D;
                    }
                    break;
                }
                case 0x0000011cu:
                {
                    if (name == BuiltInName::fwidthExt)
                    {
                        return &UnmangledBuiltIns::OES_standard_derivatives;
                    }
                    break;
                }
                case 0x00000213u:
                {
                    if (name == BuiltInName::texture3D)
                    {
                        return &UnmangledBuiltIns::OES_texture_3D;
                    }
                    break;
                }
                case 0x0000023au:
                {
                    if (name == BuiltInName::texture3DLod)
                    {
                        return &UnmangledBuiltIns::OES_texture_3D;
                    }
                    break;
                }
                case 0x0000028du:
                {
                    if (name == BuiltInName::texture2DProjLodEXT)
                    {
                        return &UnmangledBuiltIns::EXT_shader_texture_lod;
                    }
                    break;
                }
                case 0x000002a5u:
                {
                    if (name == BuiltInName::texture2DLodEXT)
                    {
                        return &UnmangledBuiltIns::EXT_shader_texture_lod;
                    }
                    break;
                }
                case 0x000002d8u:
                {
                    if (name == BuiltInName::texture3DProj)
                    {
                        return &UnmangledBuiltIns::OES_texture_3D;
                    }
                    break;
                }
                case 0x00000365u:
                {
                    if (name == BuiltInName::dFdxExt)
                    {
                        return &UnmangledBuiltIns::OES_standard_derivatives;
                    }
                    break;
                }
                case 0x00000366u:
                {
                    if (name == BuiltInName::dFdyExt)
                    {
                        return &UnmangledBuiltIns::OES_standard_derivatives;
                    }
                    break;
                }
                case 0x000003bcu:
                {
                    if (name == BuiltInName::textureCubeLodEXT)
                    {
                        return &UnmangledBuiltIns::EXT_shader_texture_lod;
                    }
                    break;
                }
            }
        }
        if (mShaderType == GL_VERTEX_SHADER)
        {
            switch (nameHash)
            {
                case 0x000000e4u:
                {
                    if (name == BuiltInName::textureCubeLod)
                    {
                        return &UnmangledBuiltIns::UNDEFINED;
                    }
                    break;
                }
                case 0x000003b9u:
                {
                    if (name == BuiltInName::texture2DProjLod)
                    {
                        return &UnmangledBuiltIns::UNDEFINED;
                    }
                    break;
                }
                case 0x00000438u:
                {
                    if (name == BuiltInName::texture2DLod)
                    {
                        return &UnmangledBuiltIns::UNDEFINED;
                    }
                    break;
                }
            }
        }
    }
    switch (nameHash)
    {
        case 0x00000002u:
        {
            if (name == BuiltInName::all)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x00000052u:
        {
            if (name == BuiltInName::asin)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x0000005au:
        {
            if (name == BuiltInName::abs)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x00000062u:
        {
            if (name == BuiltInName::lessThanEqual)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x00000089u:
        {
            if (name == BuiltInName::matrixCompMult)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x000000b7u:
        {
            if (name == BuiltInName::greaterThan)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x000000d8u:
        {
            if (name == BuiltInName::tan)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x000000ddu:
        {
            if (name == BuiltInName::normalize)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x000000eau:
        {
            if (name == BuiltInName::sin)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x000000f1u:
        {
            if (name == BuiltInName::atan)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x000000f3u:
        {
            if (name == BuiltInName::max)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x000000f8u:
        {
            if (name == BuiltInName::reflect)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x00000131u:
        {
            if (name == BuiltInName::degrees)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x00000143u:
        {
            if (name == BuiltInName::notFunc)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x0000014eu:
        {
            if (name == BuiltInName::radians)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x0000014fu:
        {
            if (name == BuiltInName::smoothstep)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x00000159u:
        {
            if (name == BuiltInName::clamp)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x00000173u:
        {
            if (name == BuiltInName::lessThan)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x00000177u:
        {
            if (name == BuiltInName::faceforward)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x00000187u:
        {
            if (name == BuiltInName::log2)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x000001a0u:
        {
            if (name == BuiltInName::length)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x000001beu:
        {
            if (name == BuiltInName::exp2)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x000001d4u:
        {
            if (name == BuiltInName::sign)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x000001d7u:
        {
            if (name == BuiltInName::distance)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x000001f2u:
        {
            if (name == BuiltInName::any)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x000001f9u:
        {
            if (name == BuiltInName::min)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x000001ffu:
        {
            if (name == BuiltInName::mix)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x0000021bu:
        {
            if (name == BuiltInName::refract)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x00000223u:
        {
            if (name == BuiltInName::exp)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x00000226u:
        {
            if (name == BuiltInName::dot)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x00000254u:
        {
            if (name == BuiltInName::ceil)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x000002a0u:
        {
            if (name == BuiltInName::cos)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x000002a4u:
        {
            if (name == BuiltInName::equal)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x000002b2u:
        {
            if (name == BuiltInName::pow)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x000002c7u:
        {
            if (name == BuiltInName::fract)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x000002d4u:
        {
            if (name == BuiltInName::greaterThanEqual)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x000002ffu:
        {
            if (name == BuiltInName::cross)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x00000300u:
        {
            if (name == BuiltInName::sqrt)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x00000358u:
        {
            if (name == BuiltInName::mod)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x0000039au:
        {
            if (name == BuiltInName::step)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x000003adu:
        {
            if (name == BuiltInName::acos)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x000003c4u:
        {
            if (name == BuiltInName::log)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x000003e4u:
        {
            if (name == BuiltInName::inversesqrt)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x0000040cu:
        {
            if (name == BuiltInName::floor)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x0000042au:
        {
            if (name == BuiltInName::notEqual)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
    }
    return nullptr;
}

}  // namespace sh
