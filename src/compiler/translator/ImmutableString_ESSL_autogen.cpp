// GENERATED FILE - DO NOT EDIT.
// Generated by gen_builtin_symbols.py using data from builtin_variables.json and
// builtin_function_declarations.txt.
//
// Copyright 2019 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// ImmutableString_ESSL_autogen.cpp: Wrapper for static or pool allocated char arrays, that are
// guaranteed to be valid and unchanged for the duration of the compilation. Implements
// mangledNameHash using perfect hash function from gen_builtin_symbols.py

#include "compiler/translator/ImmutableString.h"

std::ostream &operator<<(std::ostream &os, const sh::ImmutableString &str)
{
    return os.write(str.data(), str.length());
}

#if defined(_MSC_VER)
#    pragma warning(disable : 4309)  // truncation of constant value
#endif

namespace
{

constexpr int mangledkT1[] = {1565, 313,  287,  949,  1140, 1423, 508, 548,  1149, 1607,
                              810,  340,  1456, 1143, 1562, 1788, 172, 1529, 1200, 1567,
                              56,   1802, 216,  1101, 1543, 1842, 75,  732,  732,  474,
                              903,  1146, 792,  329,  101,  1318, 1200};
constexpr int mangledkT2[] = {1578, 1819, 453,  619,  1394, 30,  646, 34,   1060, 790,
                              1071, 30,   1008, 1597, 1733, 413, 119, 1557, 912,  548,
                              98,   237,  1013, 1863, 886,  599, 76,  674,  729,  550,
                              1426, 1318, 233,  1220, 1858, 584, 1130};
constexpr int mangledkG[]  = {
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    454,  0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    1905, 0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    472,  0,    0,    0,    0,    0,    0,    0,    0,    0,    526,  0,    0,    0,
    0,    172,  369,  0,    430,  925,  0,    0,    0,    0,    0,    110,  108,  165,  0,    0,
    0,    0,    0,    0,    1185, 293,  0,    0,    0,    0,    0,    425,  0,    0,    1713, 0,
    0,    0,    0,    711,  0,    0,    0,    0,    0,    40,   1877, 0,    1918, 863,  0,    0,
    0,    0,    223,  0,    0,    871,  0,    0,    0,    0,    0,    0,    0,    1492, 1066, 0,
    0,    0,    1611, 1627, 0,    764,  0,    657,  179,  1758, 0,    0,    0,    0,    0,    0,
    0,    0,    576,  0,    0,    0,    0,    0,    0,    0,    0,    198,  0,    0,    0,    1784,
    0,    1552, 0,    0,    690,  0,    730,  0,    254,  0,    0,    0,    793,  1273, 0,    0,
    204,  0,    0,    0,    0,    0,    1739, 0,    238,  321,  0,    240,  189,  0,    239,  0,
    0,    0,    970,  0,    681,  0,    0,    0,    680,  0,    541,  1832, 0,    0,    0,    1083,
    1725, 0,    0,    0,    0,    0,    837,  156,  0,    0,    0,    1112, 0,    358,  108,  0,
    0,    0,    187,  821,  0,    105,  0,    0,    514,  54,   1739, 1588, 504,  1533, 0,    0,
    1737, 0,    0,    0,    0,    309,  0,    1710, 902,  0,    0,    1567, 0,    1570, 0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    45,   790,  0,    967,  0,    818,  77,   0,
    975,  0,    1063, 0,    0,    0,    0,    0,    0,    387,  1862, 0,    0,    0,    0,    0,
    0,    0,    797,  0,    1138, 0,    31,   1457, 0,    0,    1077, 0,    0,    315,  0,    0,
    0,    0,    236,  0,    897,  0,    0,    0,    0,    0,    492,  0,    0,    710,  1414, 0,
    175,  0,    0,    0,    47,   0,    74,   210,  0,    629,  1564, 473,  0,    177,  1867, 1630,
    355,  0,    0,    153,  357,  0,    852,  0,    0,    0,    1244, 0,    0,    0,    0,    967,
    0,    0,    68,   0,    0,    0,    0,    1502, 1837, 0,    0,    1086, 228,  0,    0,    964,
    0,    0,    0,    0,    0,    0,    0,    973,  0,    402,  382,  0,    725,  0,    1097, 0,
    0,    760,  0,    81,   0,    1610, 402,  0,    457,  0,    0,    83,   0,    515,  176,  0,
    331,  0,    0,    1754, 374,  1888, 0,    0,    0,    0,    1378, 0,    0,    178,  118,  0,
    0,    899,  0,    822,  832,  0,    0,    14,   0,    0,    0,    0,    515,  630,  0,    0,
    0,    0,    0,    0,    0,    146,  684,  0,    0,    1269, 1785, 0,    627,  0,    1622, 587,
    152,  659,  0,    958,  0,    1491, 1036, 147,  697,  1081, 0,    0,    0,    0,    0,    0,
    327,  0,    0,    1174, 811,  0,    0,    0,    0,    294,  0,    1584, 626,  0,    0,    0,
    0,    90,   0,    857,  0,    0,    309,  1652, 0,    1759, 0,    655,  0,    1864, 0,    337,
    0,    0,    0,    0,    796,  220,  0,    0,    297,  234,  0,    0,    163,  0,    0,    0,
    0,    1723, 848,  0,    0,    0,    0,    0,    0,    0,    889,  1667, 127,  0,    0,    856,
    698,  0,    0,    0,    0,    708,  0,    672,  118,  0,    0,    0,    0,    1676, 0,    0,
    0,    0,    121,  0,    0,    337,  0,    701,  0,    0,    0,    0,    0,    282,  254,  0,
    559,  1714, 1555, 556,  650,  0,    0,    1439, 0,    51,   0,    0,    1112, 309,  85,   0,
    987,  965,  0,    711,  0,    443,  1613, 0,    378,  378,  646,  0,    0,    476,  744,  1755,
    0,    0,    451,  79,   0,    140,  0,    0,    0,    0,    150,  477,  0,    0,    0,    0,
    0,    0,    1921, 0,    0,    0,    684,  0,    0,    226,  0,    1281, 332,  67,   225,  1415,
    1471, 0,    243,  0,    0,    0,    140,  1622, 0,    238,  0,    432,  425,  109,  397,  0,
    1803, 602,  631,  0,    59,   1642, 0,    824,  1500, 643,  0,    0,    1659, 190,  0,    0,
    144,  0,    18,   766,  0,    120,  0,    0,    0,    0,    477,  0,    854,  409,  0,    1632,
    203,  0,    286,  679,  375,  0,    0,    201,  1575, 0,    173,  0,    0,    0,    626,  0,
    0,    802,  0,    0,    0,    799,  0,    0,    0,    736,  0,    568,  480,  0,    0,    0,
    988,  1406, 1831, 0,    0,    452,  363,  0,    0,    905,  1191, 592,  594,  0,    0,    581,
    39,   489,  0,    70,   1637, 364,  385,  0,    399,  0,    1816, 0,    0,    0,    0,    0,
    0,    0,    254,  531,  1000, 1355, 1727, 0,    238,  0,    0,    832,  847,  1883, 1836, 0,
    0,    328,  365,  11,   0,    0,    0,    0,    0,    0,    0,    277,  0,    0,    750,  75,
    0,    72,   260,  0,    0,    0,    0,    1489, 669,  0,    299,  0,    236,  918,  0,    0,
    0,    1575, 0,    691,  0,    0,    0,    467,  0,    0,    0,    0,    0,    209,  1140, 586,
    183,  0,    0,    552,  0,    113,  83,   0,    1901, 0,    0,    1557, 714,  1865, 223,  1439,
    177,  0,    261,  862,  1834, 437,  0,    0,    0,    0,    0,    0,    0,    366,  0,    560,
    0,    1810, 0,    1416, 515,  0,    47,   1037, 892,  213,  569,  1734, 0,    571,  1614, 0,
    414,  1687, 276,  0,    0,    0,    0,    548,  541,  1489, 0,    0,    0,    1437, 0,    1097,
    0,    552,  1359, 0,    0,    0,    60,   174,  0,    0,    0,    0,    707,  0,    221,  0,
    0,    807,  0,    0,    816,  0,    96,   0,    953,  1803, 843,  32,   1586, 872,  212,  1922,
    0,    0,    0,    0,    746,  0,    1356, 1921, 154,  0,    71,   162,  0,    0,    0,    398,
    438,  0,    577,  620,  0,    550,  1724, 916,  816,  371,  0,    903,  204,  0,    0,    0,
    0,    0,    0,    913,  0,    0,    535,  1641, 1777, 432,  0,    550,  0,    0,    618,  0,
    0,    0,    0,    0,    0,    0,    0,    0,    827,  0,    0,    0,    622,  607,  0,    1336,
    34,   36,   0,    455,  187,  1323, 316,  0,    0,    347,  333,  39,   782,  1747, 0,    0,
    0,    1191, 0,    1237, 424,  250,  1887, 0,    1706, 0,    621,  1657, 362,  0,    0,    667,
    0,    0,    133,  223,  891,  0,    0,    0,    902,  354,  1242, 0,    0,    0,    0,    0,
    485,  555,  720,  558,  0,    229,  373,  573,  0,    0,    0,    0,    1779, 4,    0,    0,
    0,    120,  0,    0,    58,   440,  1918, 830,  0,    0,    1510, 272,  0,    351,  0,    0,
    321,  0,    1683, 262,  0,    459,  0,    0,    0,    1259, 728,  0,    23,   502,  15,   0,
    707,  0,    0,    772,  268,  1875, 0,    0,    0,    1246, 53,   0,    988,  88,   475,  0,
    0,    496,  0,    781,  338,  78,   0,    0,    0,    0,    464,  0,    446,  510,  1862, 347,
    740,  865,  147,  0,    0,    514,  908,  97,   508,  0,    0,    573,  0,    0,    1260, 0,
    0,    0,    0,    616,  1870, 103,  1828, 842,  1104, 0,    0,    0,    1850, 303,  420,  760,
    0,    0,    0,    0,    0,    0,    2,    1877, 0,    878,  1867, 0,    0,    439,  0,    0,
    201,  165,  400,  0,    1084, 0,    1100, 0,    597,  0,    22,   278,  460,  0,    1058, 920,
    1586, 0,    0,    131,  475,  596,  0,    0,    602,  0,    0,    1562, 0,    873,  42,   0,
    380,  376,  345,  1785, 0,    474,  0,    0,    0,    1189, 1680, 263,  0,    1904, 0,    99,
    0,    0,    36,   513,  0,    117,  821,  0,    341,  733,  1293, 86,   191,  1669, 448,  0,
    588,  673,  0,    95,   0,    0,    0,    649,  1192, 0,    0,    0,    0,    0,    504,  0,
    647,  1350, 398,  0,    1594, 0,    0,    557,  0,    726,  0,    1675, 0,    0,    0,    1672,
    733,  0,    1773, 0,    853,  0,    0,    0,    0,    0,    28,   1540, 0,    0,    0,    379,
    149,  809,  763,  0,    0,    964,  0,    504,  247,  130,  0,    0,    188,  396,  0,    1193,
    0,    0,    556,  511,  0,    0,    0,    0,    3,    417,  0,    171,  0,    0,    0,    0,
    0,    340,  1358, 644,  923,  750,  0,    0,    238,  66,   320,  278,  1706, 0,    805,  0,
    447,  523,  74,   465,  540,  1896, 466,  0,    0,    207,  0,    633,  78,   0,    0,    753,
    0,    0,    0,    410,  0,    0,    0,    1512, 0,    224,  728,  557,  0,    0,    1752, 1727,
    822,  0,    0,    0,    0,    0,    1841, 683,  590,  1914, 0,    0,    979,  795,  1290, 333,
    0,    0,    1410, 0,    0,    238,  0,    1453, 0,    617,  0,    1879, 1827, 0,    1820, 659,
    0,    345,  770,  325,  0,    0,    800,  253,  0,    0,    514,  158,  0,    1417, 100,  329,
    1869, 0,    917,  609,  0,    0,    0,    856,  1751, 277,  123,  0,    0,    889,  544,  0,
    0,    1719, 353,  525,  402,  1366, 1289, 0,    0,    0,    0,    721,  241,  1564, 0,    422,
    0,    0,    1557, 0,    1686, 106,  373,  0,    313,  1479, 386,  0,    746,  655,  0,    454,
    1547, 0,    0,    0,    0,    0,    0,    86,   0,    696,  189,  0,    163,  405,  719,  1267,
    0,    66,   1477, 0,    2,    1159, 1539, 0,    1915, 132,  0,    51,   0,    625,  0,    697,
    575,  0,    782,  0,    0,    0,    0,    0,    299,  284,  726,  206,  0,    266,  0,    0,
    0,    21,   0,    737,  0,    0,    1806, 1780, 699,  0,    740,  0,    195,  0,    1550, 1716,
    0,    350,  0,    0,    295,  87,   0,    0,    1798, 1860, 316,  0,    200,  670,  0,    1879,
    352,  0,    910,  0,    0,    1475, 1740, 0,    1875, 27,   0,    534,  0,    703,  0,    0,
    1900, 0,    0,    0,    0,    0,    415,  0,    163,  1778, 106,  1291, 664,  0,    1207, 1315,
    182,  387,  0,    168,  84,   0,    0,    0,    458,  0,    0,    656,  237,  264,  307,  0,
    0,    1604, 1086, 228,  1788, 0,    0,    1049, 0,    1734, 0,    1859, 0,    416,  0,    531,
    0,    202,  0,    204,  0,    0,    0,    0,    708,  0,    196,  1923, 0,    0,    1037, 1464,
    359,  86,   0,    1856, 0,    97,   882,  0,    1741, 734,  0,    0,    0,    0,    0,    828,
    0,    0,    0,    925,  0,    737,  390,  0,    362,  363,  967,  889,  550,  457,  0,    42,
    0,    705,  0,    1655, 875,  649,  0,    0,    1822, 0,    0,    0,    1347, 1689, 0,    412,
    0,    0,    715,  0,    269,  0,    235,  1076, 0,    578,  280,  193,  396,  748,  0,    149,
    0,    894,  0,    1311, 7,    0,    856,  0,    0,    0,    601,  1878, 0,    0,    411,  0,
    176,  1407, 0,    223,  1732, 0,    194,  411,  0,    0,    167,  342,  0,    0,    18,   269,
    515,  357,  456,  615,  0,    673,  756,  1283, 841,  259,  702,  556,  0,    0,    0,    388,
    0,    748,  220,  0,    0,    1772, 0,    0,    0,    763,  751,  158,  0,    0,    532,  692,
    178,  0,    0,    1635, 0,    0,    835,  0,    0,    810,  0,    1876, 0,    0,    1869, 1673,
    0,    0,    683,  425,  0,    432,  378,  57,   427,  289,  0,    0,    742,  0,    0,    736,
    16,   1189, 680,  0,    630,  282,  1084, 168,  151,  0,    909,  0,    0,    0,    617,  113,
    0,    0,    0,    863,  1829, 367,  0,    89,   0,    348,  0,    1554, 0,    545,  427,  0,
    0,    0,    417,  0,    0,    17,   0,    0,    518,  56,   436,  20,   143,  429,  25,   345,
    557,  0,    645,  724,  328,  0,    0,    312,  1295, 0,    0,    563,  0,    212,  0,    0,
    430,  1733, 398,  1697, 0,    1861, 1558, 1763, 469,  847,  0,    0,    505,  0,    0,    0,
    217,  0,    675,  0,    661,  1351, 443,  0,    1857, 157,  579,  0,    1798, 0,    428,  658,
    1502, 463,  249,  193,  0,    0,    118,  0,    299,  0,    0,    788,  0,    841,  271,  0,
    1335, 0,    229,  831,  0,    677,  1158, 0,    0,    1855, 605,  482,  1210, 0,    1780, 1468,
    0,    0,    415,  652,  0,    1887, 442,  1481, 1239, 0,    294,  0,    0,    0,    1766, 0,
    159,  172,  0,    0,    96,   876,  218,  0,    1153, 171,  0,    0,    0,    1267, 1810, 15,
    0,    156,  230,  0,    735,  0,    0,    1478, 342,  0,    722,  304,  393,  0,    578,  1886,
    0,    1163, 0,    1877, 794};

int MangledHashG(const char *key, const int *T)
{
    int sum = 0;

    for (int i = 0; key[i] != '\0'; i++)
    {
        sum += T[i] * key[i];
        sum %= 1925;
    }
    return mangledkG[sum];
}

int MangledPerfectHash(const char *key)
{
    if (strlen(key) > 37)
        return 0;

    return (MangledHashG(key, mangledkT1) + MangledHashG(key, mangledkT2)) % 1925;
}

constexpr int unmangledkT1[] = {104, 115, 230, 189, 197, 210, 40,  117, 33,  19,  181, 77,  107,
                                245, 52,  101, 9,   54,  143, 164, 147, 179, 128, 95,  103, 208};
constexpr int unmangledkT2[] = {84, 175, 47,  86,  124, 216, 4,  84,  180, 105, 242, 139, 223,
                                26, 238, 229, 223, 88,  240, 48, 210, 76,  78,  73,  73,  57};
constexpr int unmangledkG[]  = {
    0,   0,   0,   0,   0,   0,   107, 0,   0,   0,   94,  36,  239, 0,   1,   116, 0,   217,
    0,   0,   0,   0,   0,   0,   0,   242, 0,   19,  11,  101, 0,   0,   193, 37,  0,   0,
    0,   0,   0,   0,   242, 0,   69,  37,  0,   100, 0,   0,   136, 0,   64,  10,  0,   0,
    119, 0,   0,   0,   0,   0,   121, 0,   0,   19,  36,  0,   0,   0,   63,  191, 80,  14,
    44,  18,  67,  0,   52,  132, 189, 0,   102, 209, 0,   20,  168, 231, 189, 0,   88,  24,
    0,   0,   0,   101, 40,  0,   183, 111, 0,   109, 68,  0,   235, 88,  0,   0,   0,   0,
    0,   0,   0,   9,   0,   220, 18,  139, 55,  88,  79,  0,   0,   56,  130, 0,   114, 22,
    230, 0,   86,  203, 0,   216, 0,   0,   0,   0,   153, 28,  193, 124, 95,  72,  60,  0,
    0,   32,  0,   0,   233, 149, 110, 137, 12,  0,   35,  0,   141, 152, 112, 0,   49,  246,
    80,  0,   33,  0,   83,  82,  118, 0,   16,  31,  116, 166, 0,   136, 156, 5,   0,   26,
    166, 34,  156, 0,   71,  134, 238, 0,   81,  0,   121, 27,  128, 0,   41,  0,   51,  0,
    63,  212, 104, 200, 94,  142, 89,  0,   0,   0,   1,   214, 0,   90,  131, 146, 113, 5,
    209, 115, 0,   39,  218, 1,   133, 85,  60,  214, 0,   94,  0,   235, 1,   227, 69,  0,
    69,  161, 0,   151, 120, 1,   42,  167, 72,  17,  0,   0,   40,  162, 36};

int UnmangledHashG(const char *key, const int *T)
{
    int sum = 0;

    for (int i = 0; key[i] != '\0'; i++)
    {
        sum += T[i] * key[i];
        sum %= 249;
    }
    return unmangledkG[sum];
}

int UnmangledPerfectHash(const char *key)
{
    if (strlen(key) > 26)
        return 0;

    return (UnmangledHashG(key, unmangledkT1) + UnmangledHashG(key, unmangledkT2)) % 249;
}

}  // namespace

namespace sh
{

template <>
const size_t ImmutableString::FowlerNollVoHash<4>::kFnvPrime = 16777619u;

template <>
const size_t ImmutableString::FowlerNollVoHash<4>::kFnvOffsetBasis = 0x811c9dc5u;

template <>
const size_t ImmutableString::FowlerNollVoHash<8>::kFnvPrime =
    static_cast<size_t>(1099511628211ull);

template <>
const size_t ImmutableString::FowlerNollVoHash<8>::kFnvOffsetBasis =
    static_cast<size_t>(0xcbf29ce484222325ull);

uint32_t ImmutableString::mangledNameHash() const
{
    return MangledPerfectHash(data());
}

uint32_t ImmutableString::unmangledNameHash() const
{
    return UnmangledPerfectHash(data());
}

}  // namespace sh
