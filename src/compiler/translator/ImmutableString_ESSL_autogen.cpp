// GENERATED FILE - DO NOT EDIT.
// Generated by gen_builtin_symbols.py using data from builtin_variables.json and
// builtin_function_declarations.txt.
//
// Copyright 2020 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// ImmutableString_ESSL_autogen.cpp: Wrapper for static or pool allocated char arrays, that are
// guaranteed to be valid and unchanged for the duration of the compilation. Implements
// mangledNameHash using perfect hash function from gen_builtin_symbols.py

#include "compiler/translator/ImmutableString.h"

std::ostream &operator<<(std::ostream &os, const sh::ImmutableString &str)
{
    return os.write(str.data(), str.length());
}

#if defined(_MSC_VER)
#    pragma warning(disable : 4309)  // truncation of constant value
#endif

namespace
{

constexpr int mangledkT1[] = {1745, 1960, 1305, 645,  86,   518,  1611, 1559, 300,  542,
                              294,  1077, 96,   363,  557,  1994, 256,  1531, 1835, 1848,
                              1778, 1708, 995,  899,  1634, 1663, 785,  1531, 412,  1201,
                              610,  1880, 685,  1676, 1977, 1435, 72};
constexpr int mangledkT2[] = {1619, 26,   1523, 1171, 167,  1152, 1187, 1598, 1083, 744,
                              1988, 1459, 385,  1667, 2018, 1638, 933,  754,  1352, 950,
                              875,  814,  1919, 281,  790,  868,  71,   1626, 296,  1959,
                              1138, 851,  134,  373,  898,  1967, 23};
constexpr int mangledkG[]  = {
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    1041, 0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    1832,
    310,  0,    0,    0,    0,    0,    0,    0,    0,    1663, 814,  0,    0,    0,    0,    63,
    0,    0,    0,    532,  0,    0,    0,    0,    505,  0,    0,    0,    0,    723,  0,    0,
    0,    0,    0,    801,  0,    473,  0,    0,    0,    0,    742,  0,    0,    0,    0,    1599,
    0,    557,  0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    1989, 0,    0,    0,    0,    525,  0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    606,  0,    0,    0,    0,    0,    0,    0,    0,    1786, 1535,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    1973, 0,    0,    0,    0,    0,
    1567, 0,    0,    985,  0,    0,    0,    329,  0,    123,  0,    0,    1662, 462,  911,  0,
    0,    1052, 1207, 201,  227,  333,  0,    0,    0,    0,    0,    1152, 0,    485,  0,    0,
    0,    8,    0,    0,    0,    0,    0,    0,    0,    0,    257,  0,    0,    0,    0,    0,
    186,  132,  0,    319,  0,    0,    1560, 0,    0,    0,    0,    1104, 1559, 401,  480,  0,
    0,    0,    0,    0,    0,    0,    0,    2009, 0,    0,    519,  0,    0,    515,  0,    0,
    448,  0,    0,    818,  0,    0,    0,    0,    0,    0,    1759, 33,   0,    0,    468,  0,
    0,    0,    0,    0,    0,    0,    0,    0,    527,  0,    1388, 0,    0,    0,    637,  0,
    104,  0,    0,    0,    0,    50,   0,    317,  0,    0,    0,    856,  0,    0,    0,    798,
    0,    0,    1150, 1160, 0,    1719, 411,  0,    0,    0,    368,  0,    0,    777,  1791, 0,
    300,  897,  0,    0,    854,  388,  703,  0,    0,    1854, 0,    0,    0,    1479, 0,    7,
    382,  0,    261,  0,    1019, 318,  0,    821,  499,  0,    0,    0,    0,    0,    0,    140,
    95,   0,    1291, 824,  0,    835,  0,    0,    0,    893,  1251, 0,    0,    0,    0,    0,
    0,    902,  0,    1747, 0,    0,    0,    0,    0,    1104, 427,  610,  0,    0,    0,    0,
    304,  0,    0,    0,    629,  137,  0,    0,    0,    773,  0,    666,  0,    1315, 0,    1859,
    0,    0,    0,    0,    1581, 901,  0,    0,    1420, 744,  224,  0,    498,  0,    0,    0,
    0,    0,    1809, 828,  0,    0,    0,    0,    0,    0,    1765, 648,  0,    0,    403,  1136,
    307,  534,  21,   0,    953,  694,  0,    1365, 560,  0,    0,    620,  385,  0,    0,    0,
    1932, 792,  616,  1882, 1107, 315,  186,  1406, 0,    206,  0,    202,  0,    0,    180,  1327,
    0,    1902, 0,    1147, 0,    0,    0,    0,    0,    0,    0,    0,    855,  0,    0,    0,
    0,    1726, 0,    0,    833,  0,    1555, 0,    0,    0,    0,    0,    397,  112,  333,  1000,
    525,  58,   0,    0,    1428, 592,  0,    0,    1816, 1853, 0,    0,    0,    1600, 0,    862,
    744,  0,    0,    0,    121,  0,    0,    979,  309,  1098, 0,    0,    0,    0,    1404, 275,
    0,    0,    582,  1551, 0,    779,  243,  669,  0,    0,    1909, 0,    509,  0,    698,  0,
    0,    0,    218,  1134, 0,    1695, 239,  783,  1925, 0,    641,  0,    190,  0,    0,    63,
    0,    0,    0,    597,  1209, 0,    0,    0,    0,    784,  0,    0,    34,   991,  0,    0,
    0,    0,    1856, 0,    240,  957,  1839, 0,    517,  29,   1822, 334,  0,    1976, 120,  1793,
    0,    365,  0,    0,    0,    399,  1976, 1263, 842,  0,    1767, 20,   494,  0,    1092, 321,
    0,    1686, 38,   0,    299,  0,    484,  0,    0,    0,    318,  932,  0,    156,  0,    1986,
    1627, 111,  0,    1977, 0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    1796,
    113,  1712, 943,  1093, 719,  0,    0,    0,    13,   0,    0,    1078, 0,    399,  0,    476,
    0,    0,    0,    244,  194,  408,  0,    961,  1562, 913,  1786, 138,  736,  646,  1646, 1768,
    0,    0,    0,    0,    43,   151,  0,    0,    0,    0,    311,  0,    305,  438,  0,    0,
    0,    735,  243,  1437, 603,  1206, 879,  403,  0,    258,  1760, 0,    0,    476,  1809, 0,
    0,    565,  1453, 905,  0,    1674, 409,  29,   0,    0,    0,    116,  0,    0,    672,  1332,
    236,  559,  0,    268,  1812, 0,    0,    1033, 0,    1614, 0,    0,    0,    0,    0,    0,
    0,    1420, 1634, 0,    289,  208,  692,  0,    1226, 1826, 392,  0,    0,    138,  636,  0,
    1992, 0,    0,    1973, 593,  1618, 0,    0,    506,  424,  0,    1304, 0,    1511, 1111, 245,
    0,    807,  0,    0,    424,  567,  0,    0,    0,    963,  0,    30,   0,    2003, 988,  0,
    1719, 1914, 1422, 303,  0,    1271, 97,   0,    0,    0,    0,    1338, 0,    921,  0,    0,
    0,    0,    0,    0,    1981, 0,    1457, 0,    0,    552,  283,  0,    964,  434,  0,    0,
    1895, 368,  583,  1826, 0,    0,    0,    353,  0,    0,    819,  127,  0,    0,    822,  115,
    1129, 0,    1497, 566,  608,  0,    903,  386,  846,  0,    642,  0,    338,  0,    1791, 0,
    0,    0,    1058, 0,    1885, 0,    671,  52,   336,  0,    311,  1751, 536,  0,    0,    0,
    7,    0,    781,  2010, 260,  768,  0,    0,    225,  0,    557,  444,  0,    353,  1384, 276,
    209,  544,  1862, 0,    929,  161,  0,    1113, 634,  0,    1724, 1896, 1009, 0,    1983, 328,
    507,  0,    0,    906,  0,    456,  0,    0,    0,    129,  0,    1976, 772,  508,  556,  0,
    165,  1406, 0,    915,  0,    0,    732,  267,  321,  0,    0,    0,    446,  0,    1334, 0,
    705,  1111, 0,    153,  118,  845,  1809, 2007, 0,    363,  0,    170,  0,    310,  0,    8,
    486,  585,  665,  0,    0,    405,  0,    1166, 132,  0,    361,  0,    0,    0,    395,  0,
    843,  966,  24,   1991, 0,    602,  407,  1999, 99,   124,  1251, 82,   217,  0,    0,    0,
    510,  0,    0,    537,  0,    0,    0,    803,  1784, 0,    0,    0,    1829, 0,    0,    0,
    0,    770,  0,    0,    0,    0,    1730, 61,   0,    0,    0,    0,    1459, 0,    0,    0,
    0,    0,    0,    0,    0,    0,    1537, 0,    0,    935,  0,    0,    1018, 0,    0,    108,
    363,  560,  185,  1665, 0,    0,    0,    0,    167,  683,  0,    1363, 647,  43,   0,    1793,
    931,  0,    0,    0,    537,  326,  416,  667,  227,  0,    1383, 731,  667,  1226, 0,    872,
    0,    0,    619,  0,    0,    0,    422,  1481, 0,    1031, 22,   653,  0,    881,  193,  0,
    828,  0,    328,  1525, 0,    0,    186,  401,  0,    0,    0,    1205, 0,    587,  0,    0,
    812,  0,    0,    906,  340,  0,    0,    0,    0,    0,    344,  328,  0,    45,   675,  675,
    1964, 0,    1286, 0,    600,  450,  0,    0,    1815, 221,  0,    0,    0,    0,    1005, 418,
    0,    1694, 0,    363,  181,  0,    1958, 0,    0,    122,  760,  513,  0,    465,  0,    889,
    0,    251,  0,    458,  524,  531,  1930, 55,   0,    528,  1699, 674,  1779, 849,  752,  0,
    1809, 180,  0,    222,  1327, 1645, 839,  178,  0,    1836, 258,  0,    371,  0,    641,  1435,
    215,  656,  804,  0,    1161, 0,    81,   0,    0,    1969, 1900, 40,   0,    0,    0,    0,
    0,    146,  405,  679,  493,  761,  498,  762,  0,    800,  428,  4,    0,    0,    388,  0,
    323,  0,    1573, 578,  911,  878,  1131, 902,  0,    944,  215,  0,    160,  1977, 743,  1171,
    204,  0,    259,  429,  172,  0,    0,    102,  697,  0,    1364, 305,  662,  0,    695,  769,
    0,    0,    1986, 0,    1949, 0,    593,  0,    161,  0,    1406, 177,  111,  0,    0,    0,
    386,  0,    0,    0,    1023, 0,    0,    802,  0,    995,  0,    0,    305,  0,    799,  0,
    108,  287,  58,   1359, 655,  101,  0,    0,    0,    860,  0,    0,    0,    532,  1814, 786,
    0,    359,  241,  785,  0,    1746, 730,  1213, 1887, 378,  0,    469,  1152, 39,   382,  538,
    18,   0,    734,  227,  0,    0,    1731, 0,    0,    0,    186,  768,  1447, 157,  0,    0,
    409,  1817, 982,  0,    141,  367,  0,    510,  0,    252,  1813, 0,    0,    0,    0,    0,
    0,    919,  1197, 0,    385,  362,  0,    0,    1886, 0,    0,    88,   0,    414,  0,    0,
    653,  182,  0,    1396, 637,  0,    229,  0,    1865, 0,    0,    0,    0,    0,    56,   61,
    383,  0,    374,  1705, 1894, 0,    0,    205,  809,  806,  0,    14,   899,  0,    959,  0,
    0,    0,    11,   0,    0,    0,    1460, 0,    0,    0,    0,    32,   910,  0,    0,    1173,
    113,  0,    0,    1590, 0,    1829, 997,  1860, 0,    0,    0,    971,  1386, 0,    0,    639,
    910,  281,  475,  0,    0,    159,  419,  468,  1215, 0,    196,  562,  0,    326,  0,    179,
    0,    0,    0,    0,    281,  1658, 706,  0,    197,  749,  1925, 0,    0,    218,  0,    1295,
    59,   0,    153,  1771, 1532, 0,    0,    0,    109,  1204, 0,    0,    110,  1949, 1972, 1736,
    720,  544,  1031, 0,    985,  1972, 34,   0,    1285, 0,    0,    0,    1952, 0,    0,    499,
    894,  912,  737,  196,  197,  470,  0,    0,    0,    0,    525,  0,    282,  763,  0,    1756,
    0,    0,    1573, 821,  453,  235,  603,  0,    1722, 0,    0,    0,    0,    0,    313,  0,
    791,  786,  684,  0,    0,    1046, 289,  0,    0,    814,  621,  0,    396,  119,  0,    808,
    1818, 1628, 990,  733,  272,  0,    0,    999,  646,  0,    154,  1123, 0,    0,    0,    0,
    357,  0,    692,  834,  0,    278,  974,  30,   385,  332,  0,    155,  1516, 1764, 1607, 1839,
    1986, 0,    1022, 0,    922,  0,    491,  0,    0,    0,    0,    632,  0,    0,    958,  154,
    676,  1917, 1012, 977,  1274, 0,    0,    0,    331,  0,    678,  364,  0,    0,    927,  298,
    0,    0,    71,   1005, 0,    487,  0,    0,    0,    1337, 106,  29,   834,  413,  592,  135,
    1418, 0,    565,  0,    915,  0,    0,    162,  588,  0,    0,    204,  0,    1023, 876,  301,
    0,    0,    433,  524,  0,    1773, 772,  471,  0,    0,    178,  0,    173,  0,    0,    420,
    495,  617,  0,    0,    980,  970,  622,  93,   0,    0,    389,  242,  1740, 1160, 1609, 594,
    936,  908,  882,  1021, 892,  835,  302,  378,  133,  1620, 1917, 432,  556,  734,  919,  0,
    562,  506,  768,  839,  0,    0,    751,  953,  145,  638,  599,  1826, 213,  1316, 0,    0,
    203,  1553, 1555, 0,    1182, 460,  670,  0,    816,  1909, 939,  0,    498,  0,    1755, 0,
    0,    0,    794,  1829, 0,    474,  441,  472,  1951, 1891, 0,    162,  0,    365,  0,    0,
    648,  0,    1630, 0,    686,  0,    0,    0,    0,    0,    526,  0,    778,  0,    1606, 0,
    0,    0,    0,    0,    1847, 35,   1675, 501,  983,  269,  1866, 479,  0,    1717, 635,  0,
    965,  0,    0,    250,  1925, 702,  1819, 0,    1816, 0,    1933, 356,  36,   0,    0,    15,
    488,  0,    816,  0,    0,    659,  1728, 123,  608,  10,   210,  0,    0,    0,    1348, 0,
    0,    533,  0,    0,    756,  1696, 0,    751,  0,    0,    452,  942,  997,  0,    585,  630,
    1884, 0,    680,  909,  806,  1254, 1104, 0,    1307, 0,    1711, 0,    1976, 15,   130,  0,
    0,    0,    0,    1937, 360,  459,  0,    598,  0,    1153, 1555, 0,    402,  0,    605,  149,
    0,    0,    286,  1439, 604,  22,   279,  0,    0,    0,    0,    0,    377,  1807, 0,    0,
    715,  291,  0,    0,    919,  445,  189,  796,  1203, 0,    496,  770,  0,    376,  0,    0,
    93,   0,    276,  1556, 0,    0,    0,    0,    0,    591,  1533, 786,  1563, 957,  488,  751,
    0,    0,    481,  0,    0,    0,    1420, 1720, 70,   0,    434,  290,  550,  0,    891,  319,
    315,  0,    32,   1771, 701,  1309, 1586, 719,  0,    560,  0,    960,  0,    554,  0,    1019,
    1052, 1974, 1865, 0,    74,   505,  0,    0,    0,    1997, 0,    77,   0,    1003, 441,  933,
    69,   265,  70,   0,    0,    37,   0,    0,    1980, 0,    390,  351,  0,    887,  0,    0,
    1704, 376,  0,    708,  1013, 1831, 493,  0,    909,  1523, 0,    25,   262,  1412, 0,    0,
    0,    0,    0,    183,  0,    0,    26,   612,  1747, 6,    1894, 1284, 854,  0,    430,  487,
    636,  1521, 0,    1756, 1733, 134,  888,  828,  2000, 781,  1641, 0,    0,    575,  540,  1872,
    1649, 0,    753,  749,  0,    923,  249,  1930, 0,    0,    958,  1570, 33,   1796, 511,  358,
    1615, 0,    0,    1841, 0,    0,    0,    1661, 1610, 657,  19,   572,  231,  1523, 0,    502,
    1197, 237,  0,    972,  1800, 0,    1809, 0,    305,  0,    512,  756,  0,    451,  1457, 0,
    1007, 714,  1909};

int MangledHashG(const char *key, const int *T)
{
    int sum = 0;

    for (int i = 0; key[i] != '\0'; i++)
    {
        sum += T[i] * key[i];
        sum %= 2019;
    }
    return mangledkG[sum];
}

int MangledPerfectHash(const char *key)
{
    if (strlen(key) > 37)
        return 0;

    return (MangledHashG(key, mangledkT1) + MangledHashG(key, mangledkT2)) % 2019;
}

constexpr int unmangledkT1[] = {147, 71,  125, 205, 242, 112, 15,  207, 60,  177, 225, 230, 67,
                                192, 179, 189, 73,  51,  130, 119, 17,  158, 119, 3,   179, 193};
constexpr int unmangledkT2[] = {228, 195, 147, 235, 12, 194, 182, 96, 158, 44, 52,  141, 15,
                                156, 29,  249, 187, 52, 90,  22,  35, 171, 56, 197, 131, 56};
constexpr int unmangledkG[]  = {
    0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   116, 0,   0,   0,   93,  158, 0,   205, 0,
    0,   52,  0,   0,   0,   0,   32,  0,   0,   71,  215, 129, 153, 0,   0,   241, 0,   191, 104,
    95,  0,   0,   123, 149, 0,   81,  35,  0,   0,   235, 8,   0,   28,  0,   0,   0,   0,   69,
    0,   0,   5,   193, 200, 0,   53,  0,   48,  248, 256, 200, 0,   91,  143, 0,   89,  0,   55,
    0,   55,  123, 231, 0,   133, 98,  0,   31,  0,   218, 181, 0,   0,   0,   0,   0,   90,  0,
    0,   131, 1,   0,   225, 118, 1,   0,   0,   0,   93,  0,   0,   108, 0,   66,  183, 0,   0,
    0,   0,   0,   73,  238, 70,  138, 51,  29,  0,   0,   0,   224, 216, 167, 68,  222, 30,  30,
    256, 224, 215, 0,   76,  6,   8,   223, 154, 110, 59,  0,   61,  142, 115, 149, 0,   250, 219,
    167, 156, 0,   4,   131, 38,  127, 0,   64,  0,   42,  152, 18,  47,  132, 196, 169, 0,   0,
    15,  107, 23,  58,  0,   224, 0,   98,  0,   0,   15,  92,  0,   0,   128, 175, 0,   180, 149,
    150, 51,  0,   68,  247, 0,   0,   140, 91,  244, 66,  125, 260, 143, 172, 0,   0,   178, 102,
    0,   0,   245, 233, 117, 91,  105, 239, 0,   60,  135, 0,   79,  251, 79,  38,  43,  213, 55,
    146, 65,  0,   0,   110, 80,  93,  0,   0,   225, 0,   0,   0,   249, 3,   0,   224, 47,  57,
    257, 70,  0,   208, 73,  88,  154, 0,   0,   0,   0,   104, 260, 126, 101};

int UnmangledHashG(const char *key, const int *T)
{
    int sum = 0;

    for (int i = 0; key[i] != '\0'; i++)
    {
        sum += T[i] * key[i];
        sum %= 262;
    }
    return unmangledkG[sum];
}

int UnmangledPerfectHash(const char *key)
{
    if (strlen(key) > 26)
        return 0;

    return (UnmangledHashG(key, unmangledkT1) + UnmangledHashG(key, unmangledkT2)) % 262;
}

}  // namespace

namespace sh
{

template <>
const size_t ImmutableString::FowlerNollVoHash<4>::kFnvPrime = 16777619u;

template <>
const size_t ImmutableString::FowlerNollVoHash<4>::kFnvOffsetBasis = 0x811c9dc5u;

template <>
const size_t ImmutableString::FowlerNollVoHash<8>::kFnvPrime =
    static_cast<size_t>(1099511628211ull);

template <>
const size_t ImmutableString::FowlerNollVoHash<8>::kFnvOffsetBasis =
    static_cast<size_t>(0xcbf29ce484222325ull);

uint32_t ImmutableString::mangledNameHash() const
{
    return MangledPerfectHash(data());
}

uint32_t ImmutableString::unmangledNameHash() const
{
    return UnmangledPerfectHash(data());
}

}  // namespace sh
