// GENERATED FILE - DO NOT EDIT.
// Generated by gen_builtin_symbols.py using data from builtin_variables.json and
// builtin_function_declarations.txt.
//
// Copyright 2019 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// ImmutableString_ESSL_autogen.cpp: Wrapper for static or pool allocated char arrays, that are
// guaranteed to be valid and unchanged for the duration of the compilation. Implements
// mangledNameHash using perfect hash function from gen_builtin_symbols.py

#include "compiler/translator/ImmutableString.h"

std::ostream &operator<<(std::ostream &os, const sh::ImmutableString &str)
{
    return os.write(str.data(), str.length());
}

#if defined(_MSC_VER)
#    pragma warning(disable : 4309)  // truncation of constant value
#endif

namespace
{

constexpr int mangledkT1[] = {1371, 1214, 1028, 1076, 1622, 316,  491,  185,  1338, 378,
                              1471, 1619, 743,  1462, 58,   1656, 1796, 77,   895,  1048,
                              782,  500,  1906, 1166, 1416, 193,  1788, 1921, 1526, 1308,
                              1650, 455,  1595, 456,  265,  48,   381};
constexpr int mangledkT2[] = {160,  1287, 1429, 1850, 299,  1813, 1618, 125, 1167, 1943,
                              1304, 19,   1558, 448,  1269, 529,  1882, 819, 334,  552,
                              1636, 1743, 1913, 1897, 1514, 679,  997,  74,  1185, 1808,
                              985,  26,   1651, 423,  1109, 1542, 1145};
constexpr int mangledkG[]  = {
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    1229, 0,    0,    1928, 0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    1477, 1093, 0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    289,  0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    1203, 0,    0,    0,    0,    0,    0,    351,  0,    333,
    1157, 0,    0,    505,  0,    0,    1129, 0,    0,    0,    102,  0,    842,  0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    1679, 1351, 130,  0,    0,    827,  1236, 0,    21,
    0,    405,  0,    0,    0,    1686, 0,    0,    1572, 0,    1640, 1833, 0,    0,    0,    0,
    718,  0,    524,  0,    0,    0,    0,    1302, 0,    0,    0,    0,    0,    863,  0,    320,
    0,    0,    0,    0,    0,    0,    0,    1827, 0,    0,    0,    0,    0,    1010, 679,  0,
    0,    0,    0,    0,    0,    636,  0,    0,    0,    0,    789,  275,  315,  0,    0,    0,
    618,  712,  0,    0,    0,    1875, 0,    0,    558,  1288, 0,    0,    254,  339,  0,    0,
    0,    0,    0,    0,    0,    755,  1669, 0,    0,    0,    0,    0,    0,    595,  0,    0,
    0,    0,    223,  0,    1724, 0,    773,  0,    0,    0,    1063, 0,    0,    448,  0,    0,
    0,    122,  0,    0,    846,  0,    0,    0,    0,    0,    0,    0,    835,  1106, 0,    0,
    488,  0,    1245, 0,    0,    1824, 0,    326,  0,    0,    0,    1846, 0,    572,  196,  0,
    0,    0,    702,  0,    0,    0,    635,  1619, 0,    0,    0,    0,    705,  0,    873,  542,
    15,   0,    0,    713,  0,    0,    0,    0,    0,    0,    0,    0,    0,    180,  0,    0,
    0,    0,    0,    0,    5,    0,    0,    0,    770,  152,  0,    0,    0,    844,  523,  523,
    1098, 0,    0,    0,    673,  0,    0,    0,    0,    844,  0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    532,  569,  0,    10,   0,    0,    0,    0,    0,    0,
    0,    0,    0,    1112, 0,    0,    0,    1199, 0,    978,  0,    0,    65,   767,  0,    0,
    0,    0,    1744, 0,    1974, 0,    0,    675,  0,    0,    228,  1497, 0,    1273, 974,  0,
    0,    1369, 0,    297,  1328, 0,    538,  0,    670,  0,    0,    1549, 0,    1376, 0,    0,
    1493, 0,    0,    0,    0,    0,    916,  60,   0,    0,    0,    1202, 494,  0,    764,  0,
    1857, 0,    0,    0,    0,    487,  857,  0,    1807, 362,  0,    0,    470,  0,    771,  0,
    862,  0,    0,    306,  0,    1734, 534,  0,    0,    0,    0,    0,    403,  0,    0,    0,
    0,    229,  1679, 0,    0,    0,    495,  0,    0,    624,  0,    0,    1120, 1226, 439,  0,
    0,    1675, 1081, 8,    0,    0,    0,    0,    0,    0,    136,  0,    0,    0,    0,    0,
    0,    0,    1069, 600,  1366, 192,  0,    1298, 1453, 1550, 0,    681,  0,    1491, 1594, 0,
    0,    283,  377,  0,    0,    1238, 0,    0,    0,    0,    5,    0,    0,    0,    79,   0,
    0,    480,  0,    0,    856,  0,    258,  444,  0,    0,    339,  0,    564,  565,  0,    0,
    0,    0,    1486, 0,    1174, 1716, 1700, 0,    0,    0,    0,    0,    364,  0,    0,    669,
    0,    1298, 0,    0,    104,  1885, 0,    0,    0,    265,  535,  0,    0,    1040, 1034, 857,
    1471, 0,    469,  1338, 98,   478,  0,    797,  372,  0,    0,    0,    677,  0,    0,    0,
    0,    1006, 0,    814,  1970, 0,    818,  1079, 79,   0,    0,    189,  0,    0,    0,    0,
    0,    57,   165,  0,    0,    1967, 1829, 0,    0,    0,    1694, 1929, 0,    0,    0,    399,
    0,    0,    0,    0,    0,    632,  7,    423,  817,  0,    0,    0,    0,    899,  0,    0,
    0,    190,  952,  628,  0,    0,    0,    607,  838,  260,  0,    1781, 98,   0,    631,  480,
    0,    371,  0,    1264, 0,    254,  1570, 0,    962,  0,    0,    0,    0,    0,    0,    0,
    139,  850,  663,  896,  123,  343,  0,    0,    0,    0,    82,   0,    0,    0,    0,    0,
    0,    0,    0,    693,  483,  772,  805,  713,  0,    1591, 0,    0,    278,  96,   275,  489,
    0,    0,    1365, 0,    0,    1088, 684,  0,    0,    54,   545,  0,    415,  1184, 0,    1976,
    774,  0,    585,  0,    465,  0,    0,    56,   793,  95,   912,  1393, 1824, 381,  478,  0,
    1397, 1458, 0,    189,  0,    0,    699,  924,  944,  0,    0,    1317, 191,  0,    0,    0,
    0,    0,    0,    848,  0,    0,    0,    1392, 0,    38,   940,  0,    1210, 0,    1491, 0,
    0,    229,  0,    1511, 0,    0,    0,    1246, 113,  0,    982,  0,    0,    1150, 0,    147,
    0,    0,    262,  1747, 0,    0,    0,    0,    0,    799,  0,    333,  786,  910,  841,  0,
    753,  437,  0,    950,  0,    251,  0,    0,    90,   894,  395,  0,    325,  1246, 0,    1525,
    0,    0,    0,    0,    0,    778,  0,    819,  611,  0,    0,    0,    222,  0,    649,  695,
    0,    0,    892,  155,  454,  141,  1,    0,    577,  427,  1146, 509,  1104, 376,  0,    945,
    0,    378,  0,    766,  0,    97,   0,    0,    1976, 0,    538,  230,  297,  0,    1555, 22,
    0,    0,    0,    1551, 0,    1400, 0,    338,  1837, 0,    1391, 0,    1733, 0,    0,    878,
    0,    0,    199,  0,    617,  398,  1896, 214,  568,  0,    0,    822,  0,    0,    884,  0,
    1801, 54,   449,  452,  1897, 0,    0,    557,  1831, 0,    386,  1774, 0,    718,  0,    0,
    0,    0,    34,   0,    0,    1457, 0,    129,  443,  0,    436,  1258, 529,  0,    0,    0,
    0,    0,    598,  829,  501,  0,    482,  1249, 744,  869,  0,    282,  404,  1443, 942,  0,
    0,    296,  836,  1754, 1964, 0,    1678, 1171, 0,    267,  0,    0,    20,   685,  0,    372,
    0,    0,    546,  130,  0,    0,    0,    0,    0,    1925, 0,    328,  0,    1000, 0,    709,
    678,  1878, 660,  0,    496,  636,  0,    248,  0,    0,    494,  1265, 0,    454,  408,  0,
    658,  947,  0,    0,    0,    782,  0,    0,    0,    346,  1713, 0,    757,  0,    33,   302,
    652,  0,    0,    0,    0,    888,  353,  0,    1967, 1600, 0,    955,  151,  1387, 0,    0,
    285,  579,  0,    811,  0,    0,    336,  1076, 0,    1078, 0,    92,   1833, 0,    0,    1709,
    304,  828,  332,  0,    1034, 0,    20,   0,    0,    1081, 0,    1258, 41,   399,  0,    0,
    119,  0,    272,  688,  843,  0,    1759, 0,    0,    0,    328,  1679, 0,    1521, 57,   1507,
    0,    847,  0,    1779, 0,    600,  0,    0,    0,    1532, 306,  1068, 826,  269,  1923, 0,
    0,    1714, 0,    0,    0,    0,    44,   0,    34,   1949, 1434, 0,    19,   0,    42,   0,
    861,  89,   72,   0,    0,    294,  385,  164,  1428, 1029, 0,    186,  0,    0,    1874, 0,
    1634, 1782, 793,  636,  274,  0,    0,    0,    0,    1895, 859,  861,  0,    0,    0,    0,
    0,    0,    1552, 0,    686,  0,    0,    0,    0,    0,    180,  710,  604,  0,    178,  0,
    0,    0,    0,    424,  568,  0,    481,  0,    1562, 743,  0,    0,    1637, 0,    531,  550,
    702,  681,  0,    762,  86,   0,    0,    760,  0,    0,    0,    0,    0,    0,    1555, 18,
    33,   0,    561,  320,  1680, 830,  0,    25,   1896, 217,  0,    0,    107,  338,  0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    234,  88,   0,    0,    0,    167,
    0,    700,  809,  242,  0,    0,    304,  1265, 0,    0,    36,   0,    1372, 668,  1567, 1612,
    0,    0,    778,  794,  890,  0,    0,    0,    0,    6,    383,  0,    379,  612,  659,  0,
    0,    0,    546,  871,  874,  155,  0,    209,  0,    0,    461,  0,    692,  0,    0,    0,
    0,    0,    247,  14,   0,    760,  0,    1400, 0,    414,  852,  897,  239,  53,   1660, 1485,
    0,    0,    0,    933,  479,  0,    680,  0,    75,   1891, 408,  368,  0,    0,    515,  465,
    0,    1134, 939,  1703, 20,   1761, 0,    0,    568,  1315, 0,    1129, 84,   1814, 0,    97,
    699,  780,  1688, 0,    1111, 598,  0,    1704, 1226, 856,  0,    0,    907,  181,  564,  50,
    580,  0,    383,  0,    0,    716,  458,  317,  170,  692,  0,    266,  1604, 70,   0,    76,
    0,    576,  134,  0,    220,  0,    125,  0,    365,  373,  0,    0,    326,  0,    162,  1941,
    0,    525,  0,    505,  0,    528,  21,   915,  523,  0,    0,    1538, 0,    1412, 584,  0,
    0,    604,  1679, 195,  283,  441,  0,    1047, 0,    0,    949,  0,    0,    1052, 459,  291,
    459,  0,    0,    473,  0,    109,  0,    0,    645,  0,    2,    632,  1532, 920,  68,   857,
    192,  0,    0,    0,    0,    0,    1415, 592,  0,    1675, 0,    0,    164,  0,    861,  0,
    882,  0,    0,    0,    0,    1608, 0,    0,    0,    0,    0,    531,  163,  1548, 0,    1419,
    1425, 653,  0,    172,  1677, 570,  1629, 1729, 510,  0,    214,  1712, 310,  0,    0,    427,
    109,  0,    358,  0,    110,  1807, 0,    0,    363,  0,    810,  1272, 1231, 1619, 0,    222,
    733,  440,  616,  0,    0,    0,    0,    0,    356,  170,  0,    0,    0,    0,    897,  0,
    1635, 0,    720,  349,  802,  0,    0,    1360, 0,    0,    0,    0,    295,  179,  1209, 0,
    0,    0,    551,  423,  169,  1628, 0,    0,    0,    176,  35,   89,   5,    952,  0,    902,
    0,    0,    0,    1450, 1835, 0,    540,  0,    240,  732,  307,  532,  1761, 0,    0,    0,
    191,  418,  1253, 0,    0,    0,    467,  651,  429,  1002, 1793, 0,    1304, 1407, 231,  0,
    70,   1197, 485,  1177, 65,   0,    928,  93,   206,  505,  1927, 0,    1783, 868,  1184, 0,
    0,    0,    154,  124,  621,  177,  16,   101,  1751, 153,  0,    612,  91,   0,    0,    1688,
    347,  0,    0,    491,  0,    581,  78,   526,  0,    43,   880,  302,  732,  0,    0,    804,
    0,    198,  354,  0,    528,  919,  1910, 1731, 0,    548,  642,  0,    286,  919,  631,  3,
    0,    0,    0,    1825, 225,  0,    1142, 608,  1070, 0,    0,    1643, 108,  921,  734,  0,
    0,    0,    1718, 0,    610,  275,  0,    305,  0,    23,   1828, 891,  249,  0,    1120, 589,
    0,    0,    177,  0,    1455, 0,    735,  155,  0,    390,  575,  390,  908,  808,  0,    0,
    877,  0,    587,  68,   112,  0,    986,  0,    693,  0,    1403, 0,    0,    0,    19,   0,
    0,    0,    752,  298,  0,    0,    1753, 0,    515,  1020, 1605, 569,  747,  301,  0,    239,
    0,    345,  1376, 0,    0,    0,    43,   0,    199,  650,  0,    0,    0,    891,  0,    422,
    0,    0,    270,  0,    639,  0,    885,  27,   1549, 0,    402,  0,    1185, 192,  1778, 0,
    1559, 252,  185,  1613, 1707, 1895, 1688, 300,  190,  0,    238,  0,    1820, 0,    590,  0,
    1938, 0,    0,    0,    1582, 0,    1470, 1025, 325,  0,    644,  0,    0,    0,    1919, 193,
    0,    116,  1130, 19,   133,  0,    364,  691,  0,    1265, 300,  0,    685,  750,  0,    24,
    1184, 0,    0,    0,    0,    0,    1350, 0,    1143, 1101, 0,    389,  0,    0,    1809, 0,
    7,    967,  0,    741,  0,    1157, 25,   0,    686,  0,    0,    0,    0,    806,  1633, 1938,
    0,    0,    563,  1320, 0,    0,    836,  0,    0,    694,  944,  0,    466,  0,    1642, 438,
    1371, 0,    1209, 0,    0,    0,    864,  31,   0,    752,  0,    0,    603,  0,    674,  1646,
    480,  0,    0,    0,    637,  0,    1858, 827,  658,  234,  1014, 923,  0,    32,   163,  0,
    1796, 90,   291,  1646, 629,  1624, 0,    0,    566,  1386, 494,  1898, 0,    867,  743,  340,
    1670, 0,    0,    1421, 0,    242,  0,    0,    1361, 961,  178,  199,  0,    146,  1362, 0,
    0,    14,   825,  330,  243,  0,    100,  488,  21,   0,    0,    823,  662,  1759, 0,    1389,
    232,  1949, 0,    39,   1927, 508,  0,    156,  0,    585,  1430, 256,  744,  189,  788,  407,
    708,  48,   52,   578,  0,    0,    0,    1768, 683,  0,    382,  0,    0,    1023, 934,  798,
    0,    0,    0,    1703, 210,  0,    47,   0,    0,    0,    0,    512,  731,  0,    386,  0,
    566,  0,    0,    0,    0,    1804, 0,    237,  1291, 817,  291,  71,   736,  0,    0,    431,
    1004, 331,  143,  4,    723,  1567, 0,    140,  356,  348,  594,  0,    677,  0,    607,  1255,
    1738, 0,    0,    1604, 893,  195,  614,  1028, 0};

int MangledHashG(const char *key, const int *T)
{
    int sum = 0;

    for (int i = 0; key[i] != '\0'; i++)
    {
        sum += T[i] * key[i];
        sum %= 1977;
    }
    return mangledkG[sum];
}

int MangledPerfectHash(const char *key)
{
    if (strlen(key) > 37)
        return 0;

    return (MangledHashG(key, mangledkT1) + MangledHashG(key, mangledkT2)) % 1977;
}

constexpr int unmangledkT1[] = {130, 88,  218, 50,  232, 224, 189, 241, 126, 226, 164, 51,  24,
                                14,  217, 181, 114, 184, 154, 192, 68,  12,  139, 35,  153, 160};
constexpr int unmangledkT2[] = {76,  220, 83, 9,   117, 230, 211, 225, 87,  243, 68, 154, 111,
                                241, 174, 60, 102, 57,  266, 71,  240, 175, 184, 45, 131, 226};
constexpr int unmangledkG[]  = {
    0,   0,   0,   0,   97,  0,   0,   0,   0,   36,  0,   0,   0,   0,   95,  88,  0,   0,
    0,   124, 0,   0,   107, 130, 0,   148, 0,   0,   0,   130, 0,   0,   0,   0,   0,   248,
    0,   265, 0,   81,  0,   21,  224, 118, 231, 121, 89,  59,  0,   86,  48,  151, 109, 0,
    0,   0,   0,   9,   40,  0,   0,   44,  0,   0,   62,  0,   31,  72,  243, 0,   22,  49,
    204, 0,   0,   101, 52,  0,   0,   143, 229, 266, 245, 0,   252, 0,   0,   0,   1,   0,
    265, 81,  0,   30,  72,  12,  249, 122, 64,  163, 26,  0,   0,   80,  50,  0,   0,   54,
    168, 136, 29,  44,  44,  0,   0,   0,   0,   257, 0,   7,   0,   0,   57,  0,   0,   81,
    13,  252, 17,  53,  0,   1,   0,   0,   84,  0,   0,   0,   36,  185, 0,   45,  0,   0,
    116, 4,   0,   100, 8,   3,   201, 141, 50,  251, 105, 69,  84,  65,  100, 0,   18,  7,
    0,   0,   204, 0,   0,   0,   66,  0,   256, 120, 90,  89,  6,   0,   32,  115, 27,  0,
    143, 16,  37,  0,   0,   0,   34,  0,   57,  0,   0,   254, 0,   0,   98,  69,  0,   242,
    155, 149, 44,  101, 126, 0,   0,   0,   0,   252, 70,  11,  0,   86,  37,  0,   13,  33,
    78,  238, 216, 220, 48,  58,  55,  0,   63,  83,  0,   265, 61,  4,   68,  0,   0,   107,
    242, 181, 0,   25,  151, 170, 0,   0,   28,  0,   0,   0,   263, 252, 150, 122, 0,   0,
    0,   64,  56,  0,   47,  240, 192, 31,  0,   0,   45,  28,  0,   3,   12,  0};

int UnmangledHashG(const char *key, const int *T)
{
    int sum = 0;

    for (int i = 0; key[i] != '\0'; i++)
    {
        sum += T[i] * key[i];
        sum %= 268;
    }
    return unmangledkG[sum];
}

int UnmangledPerfectHash(const char *key)
{
    if (strlen(key) > 26)
        return 0;

    return (UnmangledHashG(key, unmangledkT1) + UnmangledHashG(key, unmangledkT2)) % 268;
}

}  // namespace

namespace sh
{

template <>
const size_t ImmutableString::FowlerNollVoHash<4>::kFnvPrime = 16777619u;

template <>
const size_t ImmutableString::FowlerNollVoHash<4>::kFnvOffsetBasis = 0x811c9dc5u;

template <>
const size_t ImmutableString::FowlerNollVoHash<8>::kFnvPrime =
    static_cast<size_t>(1099511628211ull);

template <>
const size_t ImmutableString::FowlerNollVoHash<8>::kFnvOffsetBasis =
    static_cast<size_t>(0xcbf29ce484222325ull);

uint32_t ImmutableString::mangledNameHash() const
{
    return MangledPerfectHash(data());
}

uint32_t ImmutableString::unmangledNameHash() const
{
    return UnmangledPerfectHash(data());
}

}  // namespace sh
