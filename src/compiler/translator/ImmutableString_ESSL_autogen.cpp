// GENERATED FILE - DO NOT EDIT.
// Generated by gen_builtin_symbols.py using data from builtin_variables.json and
// builtin_function_declarations.txt.
//
// Copyright 2020 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// ImmutableString_ESSL_autogen.cpp: Wrapper for static or pool allocated char arrays, that are
// guaranteed to be valid and unchanged for the duration of the compilation. Implements
// mangledNameHash using perfect hash function from gen_builtin_symbols.py

#include "compiler/translator/ImmutableString.h"

std::ostream &operator<<(std::ostream &os, const sh::ImmutableString &str)
{
    return os.write(str.data(), str.length());
}

#if defined(_MSC_VER)
#    pragma warning(disable : 4309)  // truncation of constant value
#endif

namespace
{

constexpr int mangledkT1[] = {82,   1308, 1002, 423, 804,  378, 724,  1115, 240,  965,
                              1547, 386,  1615, 799, 1282, 834, 1721, 346,  1664, 623,
                              1030, 734,  1126, 877, 50,   170, 1539, 1247, 524,  1402,
                              1657, 1702, 1753, 889, 1856, 382, 1035};
constexpr int mangledkT2[] = {1460, 1503, 1538, 608,  623,  1572, 910,  749,  542,  470,
                              1265, 1338, 1154, 302,  1150, 1168, 1705, 1060, 965,  566,
                              1382, 832,  1143, 1183, 875,  1765, 69,   234,  1316, 692,
                              527,  1213, 617,  291,  882,  1497, 476};
constexpr int mangledkG[]  = {
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    1058, 0,    0,    0,    0,    0,    394,  0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    1278, 0,    208,  0,    0,    1429, 0,    1536, 0,    221,  1411, 0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    883,  12,   0,    0,    0,    320,  0,
    0,    0,    1875, 0,    898,  0,    0,    1907, 125,  265,  0,    0,    0,    0,    0,    0,
    0,    0,    1385, 0,    1801, 0,    0,    0,    0,    0,    400,  767,  0,    914,  1842, 919,
    820,  0,    0,    0,    0,    0,    1130, 0,    403,  0,    292,  0,    1145, 0,    0,    0,
    0,    1447, 0,    745,  473,  517,  0,    0,    717,  1133, 0,    913,  0,    944,  0,    0,
    0,    0,    222,  0,    1888, 0,    0,    0,    0,    129,  0,    899,  398,  1448, 1441, 0,
    0,    0,    0,    0,    0,    0,    0,    990,  1331, 0,    1330, 0,    0,    0,    0,    0,
    1376, 0,    0,    0,    0,    279,  149,  0,    0,    0,    0,    1231, 171,  0,    186,  0,
    0,    420,  1437, 0,    0,    0,    477,  0,    0,    0,    1719, 0,    0,    1214, 0,    0,
    601,  156,  0,    764,  1646, 0,    393,  0,    0,    0,    0,    0,    0,    1178, 0,    902,
    1222, 0,    941,  0,    0,    1567, 1667, 421,  0,    0,    0,    0,    0,    1859, 0,    0,
    252,  0,    0,    0,    52,   51,   0,    0,    0,    487,  1439, 25,   441,  1656, 63,   1532,
    0,    0,    0,    0,    0,    1596, 0,    0,    0,    0,    0,    1352, 270,  0,    1662, 0,
    0,    0,    620,  0,    0,    0,    0,    0,    0,    1020, 0,    0,    0,    0,    734,  0,
    0,    162,  0,    1726, 0,    0,    742,  0,    1627, 953,  0,    11,   0,    0,    560,  0,
    0,    0,    531,  628,  0,    0,    0,    765,  0,    0,    1097, 0,    0,    1873, 206,  78,
    0,    1262, 0,    1117, 753,  0,    0,    0,    462,  0,    1819, 0,    421,  1649, 0,    539,
    1327, 1094, 0,    0,    0,    227,  0,    0,    0,    0,    0,    915,  460,  0,    0,    0,
    11,   0,    1296, 1356, 0,    0,    0,    260,  0,    567,  1335, 0,    272,  0,    0,    0,
    0,    1216, 1375, 1399, 1689, 215,  1417, 1307, 0,    0,    0,    544,  0,    0,    0,    0,
    0,    1225, 0,    0,    0,    1557, 0,    1875, 0,    195,  0,    0,    0,    25,   0,    0,
    0,    0,    814,  0,    0,    695,  561,  626,  0,    0,    350,  0,    1421, 0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    723,  0,    0,    302,  1622, 711,  0,    963,  0,
    0,    953,  396,  0,    0,    1663, 378,  0,    0,    0,    1482, 0,    22,   0,    0,    20,
    0,    0,    0,    1668, 24,   0,    0,    8,    1398, 283,  0,    1864, 0,    0,    1729, 0,
    823,  0,    1847, 1479, 236,  0,    0,    0,    0,    0,    100,  953,  0,    0,    658,  0,
    479,  65,   0,    0,    0,    0,    1523, 0,    1769, 0,    316,  0,    0,    0,    557,  0,
    0,    519,  947,  1096, 0,    529,  303,  0,    381,  177,  0,    816,  293,  102,  0,    0,
    0,    499,  131,  0,    0,    0,    0,    597,  0,    0,    0,    0,    0,    0,    0,    840,
    1234, 457,  0,    0,    1595, 771,  1564, 1020, 0,    0,    1430, 0,    0,    972,  68,   0,
    0,    0,    0,    94,   1827, 840,  0,    0,    1515, 0,    0,    473,  0,    0,    0,    0,
    1254, 1438, 637,  1403, 0,    0,    857,  0,    0,    0,    916,  14,   0,    0,    0,    817,
    0,    0,    0,    547,  0,    595,  0,    0,    0,    1373, 848,  0,    0,    240,  338,  0,
    379,  0,    0,    373,  0,    452,  844,  0,    0,    0,    722,  476,  492,  629,  0,    0,
    1850, 0,    1888, 0,    12,   0,    401,  94,   0,    486,  0,    1715, 174,  0,    0,    0,
    0,    261,  0,    8,    0,    0,    0,    0,    657,  0,    0,    234,  585,  240,  0,    0,
    1782, 0,    0,    219,  452,  0,    0,    781,  1588, 892,  0,    0,    0,    580,  48,   604,
    938,  164,  0,    625,  0,    1739, 103,  0,    1526, 603,  1351, 0,    1875, 0,    0,    0,
    1480, 1451, 966,  0,    0,    0,    1204, 0,    0,    1884, 0,    0,    250,  0,    0,    596,
    1626, 88,   442,  309,  0,    1685, 0,    0,    1585, 1364, 664,  0,    0,    0,    588,  0,
    1254, 0,    574,  0,    0,    0,    124,  0,    857,  0,    1066, 489,  4,    0,    1297, 1796,
    1172, 107,  0,    29,   0,    315,  452,  0,    0,    827,  26,   0,    758,  277,  619,  0,
    0,    0,    294,  0,    459,  0,    0,    0,    0,    0,    0,    1788, 123,  0,    370,  903,
    882,  1695, 0,    0,    168,  0,    1909, 1750, 206,  0,    0,    0,    681,  326,  1204, 1244,
    0,    30,   0,    395,  0,    0,    0,    1349, 0,    0,    1492, 0,    0,    0,    0,    0,
    944,  376,  0,    0,    1371, 0,    0,    0,    0,    0,    0,    334,  933,  0,    0,    638,
    0,    414,  0,    943,  436,  1343, 858,  543,  564,  0,    0,    0,    720,  730,  0,    779,
    1628, 944,  0,    0,    703,  474,  608,  60,   472,  31,   0,    326,  0,    159,  90,   0,
    16,   222,  414,  304,  0,    1876, 1529, 923,  1896, 1349, 0,    0,    0,    0,    0,    0,
    143,  892,  1516, 313,  0,    0,    0,    0,    0,    0,    1065, 0,    0,    0,    972,  77,
    1857, 1702, 0,    1084, 130,  0,    0,    0,    0,    194,  0,    1545, 1703, 1250, 256,  0,
    163,  1538, 871,  93,   101,  0,    0,    1279, 880,  262,  0,    228,  1698, 1829, 0,    88,
    0,    721,  0,    0,    536,  0,    0,    0,    1466, 411,  544,  0,    0,    0,    61,   0,
    864,  1858, 0,    1133, 0,    0,    478,  0,    0,    156,  390,  0,    0,    41,   1354, 0,
    0,    1056, 462,  0,    1597, 0,    393,  1331, 0,    565,  0,    845,  0,    95,   0,    1647,
    0,    0,    906,  0,    901,  55,   0,    644,  0,    0,    481,  1620, 1658, 0,    394,  923,
    489,  1702, 0,    1658, 0,    964,  877,  1142, 0,    1855, 35,   162,  699,  0,    606,  523,
    0,    0,    0,    1713, 0,    1094, 521,  0,    1783, 1487, 46,   1382, 1449, 0,    1890, 1,
    0,    0,    1753, 710,  0,    783,  1476, 0,    0,    555,  702,  0,    1265, 1597, 351,  0,
    0,    410,  0,    1020, 0,    0,    0,    1588, 512,  1054, 0,    49,   0,    1855, 1827, 296,
    0,    0,    111,  427,  310,  141,  549,  0,    566,  564,  680,  1177, 853,  0,    1690, 90,
    0,    611,  0,    0,    1255, 1442, 750,  808,  0,    163,  1530, 1902, 0,    0,    0,    1345,
    500,  654,  1547, 0,    1316, 0,    0,    61,   742,  221,  1396, 0,    0,    1755, 237,  0,
    1748, 5,    0,    0,    18,   1731, 246,  0,    3,    937,  1387, 0,    786,  158,  222,  562,
    0,    0,    906,  0,    104,  0,    0,    1863, 0,    0,    170,  0,    0,    0,    372,  716,
    0,    0,    0,    476,  699,  0,    0,    1500, 0,    173,  837,  634,  0,    954,  314,  0,
    983,  0,    1560, 0,    0,    0,    710,  0,    1734, 1224, 206,  550,  0,    354,  0,    0,
    0,    0,    128,  0,    256,  0,    0,    0,    0,    0,    522,  0,    1900, 1881, 1099, 272,
    0,    485,  0,    0,    303,  0,    0,    313,  1436, 0,    0,    896,  0,    0,    310,  0,
    1402, 0,    334,  0,    172,  0,    1654, 1770, 0,    1453, 1459, 0,    0,    0,    0,    0,
    1860, 1218, 1234, 0,    678,  0,    0,    184,  273,  0,    1208, 0,    494,  0,    119,  0,
    0,    0,    0,    1815, 426,  0,    1652, 1221, 0,    987,  0,    0,    90,   743,  926,  0,
    608,  0,    1433, 586,  1664, 0,    0,    0,    0,    498,  907,  237,  590,  0,    0,    577,
    1375, 470,  0,    640,  0,    0,    0,    282,  919,  0,    0,    0,    322,  0,    959,  793,
    0,    0,    0,    0,    421,  494,  893,  0,    1276, 0,    1788, 819,  0,    478,  518,  90,
    1301, 0,    0,    1897, 407,  761,  0,    0,    134,  0,    0,    0,    718,  1162, 358,  610,
    1027, 1626, 1560, 767,  0,    1661, 1280, 1399, 0,    0,    182,  1815, 0,    1592, 0,    0,
    654,  0,    1237, 0,    1155, 0,    0,    119,  1368, 1573, 0,    84,   20,   0,    1516, 0,
    121,  0,    712,  0,    65,   531,  637,  0,    0,    0,    1643, 1695, 1868, 0,    0,    136,
    0,    871,  0,    457,  836,  934,  0,    171,  0,    798,  525,  704,  890,  0,    0,    0,
    0,    0,    1593, 84,   656,  1555, 0,    400,  554,  708,  1508, 0,    450,  531,  776,  128,
    0,    899,  0,    0,    397,  616,  0,    0,    281,  0,    0,    25,   0,    0,    86,   328,
    571,  0,    235,  784,  855,  0,    0,    0,    0,    0,    1600, 1845, 6,    43,   0,    0,
    0,    423,  1533, 1656, 57,   1090, 0,    307,  0,    424,  0,    1462, 0,    76,   608,  0,
    0,    127,  446,  0,    1708, 0,    753,  0,    0,    0,    0,    0,    132,  0,    157,  0,
    0,    991,  0,    1477, 825,  1528, 178,  399,  1774, 0,    203,  947,  439,  1406, 0,    1809,
    428,  0,    466,  0,    1599, 0,    1767, 605,  11,   1154, 0,    369,  127,  1837, 866,  0,
    163,  0,    623,  0,    255,  0,    0,    728,  0,    0,    0,    563,  493,  1288, 151,  0,
    1849, 0,    0,    297,  865,  581,  155,  608,  1179, 252,  1361, 955,  648,  774,  884,  21,
    1762, 171,  0,    863,  0,    298,  554,  148,  1350, 269,  380,  821,  82,   775,  841,  378,
    1092, 1537, 0,    614,  658,  623,  1730, 106,  1811, 136,  805,  517,  5,    0,    0,    683,
    1154, 754,  486,  0,    0,    0,    1619, 0,    210,  0,    851,  719,  0,    1801, 503,  0,
    0,    1651, 0,    0,    0,    1902, 1004, 648,  806,  636,  0,    1641, 0,    272,  0,    0,
    958,  0,    28,   1831, 0,    0,    0,    0,    0,    260,  0,    661,  1828, 810,  0,    44,
    520,  0,    192,  697,  705,  0,    0,    851,  780,  505,  1815, 0,    0,    0,    0,    0,
    754,  0,    0,    261,  0,    0,    0,    0,    44,   778,  82,   27,   260,  0,    959,  0,
    0,    0,    1302, 0,    0,    0,    485,  62,   380,  0,    0,    0,    1319, 0,    259,  0,
    0,    0,    437,  0,    1737, 0,    1492, 1222, 108,  655,  826,  58,   0,    238,  776,  0,
    0,    241,  943,  0,    715,  0,    853,  1366, 483,  0,    0,    0,    1140, 0,    0,    0,
    361,  300,  398,  0,    0,    727,  510,  725,  426,  1822, 1785, 0,    367,  1399, 0,    157,
    0,    0,    1398, 0,    559,  1741, 551,  0,    0,    307,  0,    679,  850,  1239, 418,  0,
    1321, 0,    718,  338,  361,  0,    620,  822,  212,  0,    879,  755,  15,   0,    489,  468,
    1474, 700,  0,    392,  0,    0,    0,    0,    0,    894,  922,  0,    458,  35,   1776, 240,
    1674, 102,  1393, 0,    32,   97,   0,    872,  761,  0,    912,  0,    156,  803,  1314, 118,
    0,    1722, 0,    0,    0,    0,    236,  241,  0,    0,    1823, 0,    0,    1201, 922,  0,
    0,    598,  1853, 1067, 0,    0,    936,  1395, 0,    0,    404,  0,    709,  0,    1475, 653,
    0,    0,    1580, 480,  258,  0,    1226, 0,    0,    1466, 1827, 0,    239,  0,    763,  0,
    627,  0,    146,  0,    0,    0,    1887, 0,    1798, 0,    674,  225,  0,    831,  0,    417,
    0,    1773, 213,  873,  0,    175,  956,  643,  342,  1423, 0,    820,  273,  0,    0,    523,
    666,  0,    1522, 1826, 0,    0,    0,    84,   657,  767,  0,    0,    415,  1809, 1738, 328,
    0,    98,   498,  830,  889,  1484, 401,  943,  1403, 1084, 795,  0,    0,    0,    527,  169,
    572,  517,  0,    1552, 0,    0,    274,  1818, 0,    1033, 1772, 294,  991,  675,  75,   0,
    288,  0,    773,  0,    838,  746,  591,  0,    743,  470,  0,    0,    0,    727,  0,    642,
    1713, 522,  0,    537,  0,    0,    0,    749,  0,    197,  557,  1815, 0,    0,    0,    0,
    337,  0,    0,    0,    331,  368,  357,  1171, 1867, 1670, 245,  0,    0,    0,    242,  1331,
    1745, 240,  0,    321,  0,    434,  1069, 610,  1689, 783,  0,    777,  872,  0,    1706, 555,
    0,    47,   0,    87,   356,  583,  126,  0};

int MangledHashG(const char *key, const int *T)
{
    int sum = 0;

    for (int i = 0; key[i] != '\0'; i++)
    {
        sum += T[i] * key[i];
        sum %= 1912;
    }
    return mangledkG[sum];
}

int MangledPerfectHash(const char *key)
{
    if (strlen(key) > 37)
        return 0;

    return (MangledHashG(key, mangledkT1) + MangledHashG(key, mangledkT2)) % 1912;
}

constexpr int unmangledkT1[] = {170, 147, 191, 35,  147, 67, 255, 69,  233, 75,  4,   219, 119,
                                138, 0,   188, 154, 143, 35, 55,  251, 151, 173, 241, 211, 28};
constexpr int unmangledkT2[] = {197, 80,  236, 182, 76,  45,  137, 73,  162, 84,  102, 157, 175,
                                204, 223, 255, 169, 216, 234, 124, 120, 81,  164, 97,  113, 25};
constexpr int unmangledkG[]  = {
    0,   0,   103, 227, 0,   5,   0,   0,   0,   0,   0,   153, 0,   0,   0,   142, 149, 244, 0,
    0,   0,   0,   38,  0,   199, 27,  0,   8,   0,   0,   197, 0,   94,  103, 15,  0,   0,   10,
    140, 0,   102, 0,   96,  0,   20,  0,   0,   76,  70,  0,   196, 0,   67,  0,   0,   81,  0,
    0,   0,   0,   41,  0,   0,   0,   0,   0,   0,   107, 72,  0,   238, 119, 0,   0,   77,  0,
    56,  58,  0,   0,   0,   127, 69,  0,   55,  43,  64,  0,   11,  37,  0,   155, 219, 137, 0,
    126, 85,  0,   121, 0,   239, 124, 111, 0,   0,   115, 216, 17,  0,   55,  153, 200, 0,   35,
    193, 161, 30,  169, 0,   158, 236, 45,  76,  30,  0,   53,  0,   0,   211, 0,   244, 36,  96,
    187, 104, 254, 197, 129, 102, 110, 201, 29,  18,  246, 0,   128, 255, 134, 111, 0,   0,   0,
    0,   112, 52,  0,   0,   245, 249, 124, 100, 0,   0,   0,   0,   33,  33,  61,  0,   66,  0,
    13,  55,  34,  66,  9,   62,  41,  72,  253, 0,   0,   129, 134, 0,   120, 0,   250, 0,   32,
    0,   117, 88,  33,  0,   45,  0,   0,   0,   125, 0,   0,   15,  26,  207, 61,  243, 0,   50,
    65,  0,   87,  44,  0,   0,   0,   24,  0,   6,   246, 59,  0,   112, 47,  145, 68,  4,   67,
    23,  0,   224, 221, 183, 0,   107, 70,  101, 165, 0,   230, 12,  0,   43,  3,   144, 153, 32,
    0,   0,   0,   23,  75,  56,  158, 89,  0};

int UnmangledHashG(const char *key, const int *T)
{
    int sum = 0;

    for (int i = 0; key[i] != '\0'; i++)
    {
        sum += T[i] * key[i];
        sum %= 256;
    }
    return unmangledkG[sum];
}

int UnmangledPerfectHash(const char *key)
{
    if (strlen(key) > 26)
        return 0;

    return (UnmangledHashG(key, unmangledkT1) + UnmangledHashG(key, unmangledkT2)) % 256;
}

}  // namespace

namespace sh
{

template <>
const size_t ImmutableString::FowlerNollVoHash<4>::kFnvPrime = 16777619u;

template <>
const size_t ImmutableString::FowlerNollVoHash<4>::kFnvOffsetBasis = 0x811c9dc5u;

template <>
const size_t ImmutableString::FowlerNollVoHash<8>::kFnvPrime =
    static_cast<size_t>(1099511628211ull);

template <>
const size_t ImmutableString::FowlerNollVoHash<8>::kFnvOffsetBasis =
    static_cast<size_t>(0xcbf29ce484222325ull);

uint32_t ImmutableString::mangledNameHash() const
{
    return MangledPerfectHash(data());
}

uint32_t ImmutableString::unmangledNameHash() const
{
    return UnmangledPerfectHash(data());
}

}  // namespace sh
