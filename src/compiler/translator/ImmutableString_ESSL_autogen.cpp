// GENERATED FILE - DO NOT EDIT.
// Generated by gen_builtin_symbols.py using data from builtin_variables.json and
// builtin_function_declarations.txt.
//
// Copyright 2019 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// ImmutableString_ESSL_autogen.cpp: Wrapper for static or pool allocated char arrays, that are
// guaranteed to be valid and unchanged for the duration of the compilation. Implements
// mangledNameHash using perfect hash function from gen_builtin_symbols.py

#include "compiler/translator/ImmutableString.h"

std::ostream &operator<<(std::ostream &os, const sh::ImmutableString &str)
{
    return os.write(str.data(), str.length());
}

#if defined(_MSC_VER)
#    pragma warning(disable : 4309)  // truncation of constant value
#endif

namespace
{

constexpr int mangledkT1[] = {1616, 414,  259,  1086, 47,   372,  1510, 1121, 1817, 1694,
                              611,  1912, 571,  1669, 1374, 13,   1356, 835,  123,  1789,
                              1114, 1125, 616,  523,  238,  1604, 564,  1502, 1877, 1343,
                              42,   139,  1499, 126,  1473, 1310, 779};
constexpr int mangledkT2[] = {1705, 1702, 1688, 1631, 85,   472,  530, 941,  467,  1539,
                              357,  836,  1278, 910,  1666, 1119, 562, 106,  1314, 551,
                              1113, 1905, 1691, 100,  468,  1192, 726, 1434, 701,  1518,
                              108,  727,  1611, 655,  1917, 1734, 543};
constexpr int mangledkG[]  = {
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    402,  296,  0,    0,
    1889, 0,    0,    0,    0,    0,    0,    182,  0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    865,  0,    0,    0,    0,    0,    813,  0,    784,
    0,    0,    0,    0,    0,    1934, 0,    267,  903,  0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    515,  0,    242,  0,    0,    0,    1016, 0,    0,    522,  0,    0,    0,
    0,    504,  0,    0,    1575, 545,  0,    0,    0,    0,    0,    0,    0,    0,    0,    380,
    0,    0,    0,    0,    0,    355,  0,    0,    0,    0,    0,    1363, 0,    0,    0,    0,
    0,    619,  0,    0,    0,    733,  0,    1192, 768,  0,    0,    0,    0,    0,    202,  0,
    714,  0,    0,    0,    0,    0,    0,    0,    0,    0,    170,  0,    697,  0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    9,    0,    0,    0,
    0,    0,    1028, 1888, 258,  751,  0,    0,    1336, 366,  144,  0,    83,   718,  0,    0,
    0,    0,    0,    866,  0,    0,    0,    0,    0,    0,    0,    0,    0,    575,  0,    406,
    0,    0,    0,    0,    0,    350,  1343, 0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    1105, 0,    630,  700,  0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    577,  0,    0,    0,    0,    0,    0,    0,    0,    625,  150,  0,    1749,
    1177, 380,  0,    0,    0,    1073, 313,  0,    0,    659,  0,    915,  0,    0,    0,    0,
    1866, 871,  547,  70,   0,    0,    0,    0,    437,  0,    0,    582,  150,  1578, 0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    791,  0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    1534, 0,    1033, 0,    0,    0,    0,    1445, 0,
    0,    0,    1268, 0,    116,  196,  0,    0,    534,  1169, 0,    0,    0,    0,    134,  0,
    686,  0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    493,  0,    0,    772,  327,
    0,    210,  261,  1280, 0,    442,  0,    0,    0,    0,    394,  0,    461,  428,  1700, 196,
    0,    0,    855,  0,    801,  0,    0,    368,  185,  1707, 46,   0,    627,  1215, 0,    151,
    0,    0,    0,    0,    1503, 0,    647,  0,    1847, 0,    1663, 0,    0,    0,    0,    0,
    0,    0,    0,    199,  0,    0,    0,    0,    910,  0,    0,    0,    1558, 261,  1912, 393,
    330,  770,  788,  0,    0,    0,    0,    1338, 0,    0,    0,    1301, 0,    0,    704,  0,
    356,  0,    0,    165,  0,    0,    0,    0,    0,    462,  0,    0,    0,    1314, 429,  0,
    410,  346,  999,  0,    1793, 0,    1514, 0,    45,   1161, 0,    890,  0,    971,  0,    0,
    0,    0,    259,  0,    518,  1836, 742,  0,    0,    0,    417,  0,    65,   62,   0,    870,
    0,    0,    0,    0,    904,  0,    167,  451,  0,    0,    0,    1659, 960,  0,    720,  0,
    0,    0,    1656, 1430, 0,    69,   671,  329,  0,    0,    0,    858,  0,    0,    174,  1651,
    495,  0,    564,  0,    0,    603,  0,    0,    251,  113,  0,    0,    0,    0,    173,  0,
    1435, 569,  0,    0,    0,    131,  1767, 0,    642,  1725, 0,    402,  0,    852,  1269, 1488,
    0,    0,    0,    1358, 0,    0,    419,  0,    214,  0,    326,  104,  1655, 0,    701,  0,
    0,    0,    0,    0,    0,    0,    0,    104,  0,    0,    0,    0,    0,    0,    0,    0,
    148,  355,  867,  915,  1641, 280,  0,    1491, 0,    0,    211,  381,  0,    763,  0,    0,
    342,  440,  658,  0,    0,    505,  311,  181,  0,    42,   270,  0,    591,  0,    0,    421,
    0,    226,  0,    0,    0,    1871, 811,  123,  180,  0,    321,  0,    719,  0,    0,    0,
    56,   0,    0,    47,   0,    112,  849,  0,    1892, 893,  1504, 0,    334,  0,    0,    0,
    0,    1839, 18,   0,    346,  0,    0,    1554, 660,  0,    471,  337,  0,    0,    111,  0,
    767,  0,    0,    1060, 0,    1448, 718,  0,    0,    0,    0,    1418, 0,    741,  1150, 1048,
    309,  0,    586,  0,    1812, 1413, 827,  1931, 0,    0,    200,  0,    36,   1336, 0,    0,
    902,  298,  338,  415,  1879, 0,    572,  0,    0,    146,  1684, 0,    0,    52,   0,    352,
    0,    1525, 0,    0,    0,    139,  1849, 477,  0,    149,  1929, 114,  0,    675,  261,  966,
    578,  400,  873,  0,    0,    0,    1827, 0,    0,    0,    0,    0,    153,  0,    520,  521,
    1425, 0,    52,   0,    283,  0,    0,    778,  1217, 0,    438,  0,    0,    0,    1656, 311,
    274,  45,   466,  0,    0,    204,  0,    457,  525,  682,  0,    1647, 0,    240,  558,  250,
    0,    0,    0,    0,    202,  0,    0,    439,  204,  1087, 0,    48,   0,    0,    96,   922,
    0,    0,    0,    848,  0,    0,    0,    1859, 854,  516,  0,    0,    0,    0,    0,    21,
    620,  0,    0,    0,    0,    1737, 264,  0,    0,    0,    697,  0,    0,    319,  1562, 861,
    384,  0,    61,   595,  0,    1104, 216,  0,    1396, 759,  269,  78,   65,   0,    367,  637,
    1900, 0,    1764, 1217, 0,    0,    877,  629,  330,  0,    1062, 830,  0,    0,    0,    0,
    0,    0,    443,  190,  0,    1398, 73,   419,  0,    0,    1912, 1254, 343,  532,  299,  354,
    623,  933,  716,  0,    558,  0,    0,    199,  0,    0,    1539, 0,    416,  0,    0,    0,
    1623, 626,  0,    0,    0,    1642, 0,    0,    851,  715,  0,    0,    0,    706,  0,    165,
    0,    648,  608,  0,    51,   0,    712,  823,  681,  0,    0,    665,  622,  0,    0,    0,
    578,  0,    0,    0,    712,  1774, 0,    1828, 0,    1748, 0,    0,    43,   0,    0,    1901,
    584,  0,    0,    0,    0,    430,  97,   73,   0,    904,  0,    889,  499,  0,    19,   0,
    0,    1934, 811,  1239, 8,    0,    1589, 653,  1076, 1661, 219,  1447, 0,    711,  995,  0,
    0,    0,    487,  507,  530,  336,  0,    0,    95,   427,  53,   564,  0,    621,  0,    1811,
    301,  677,  843,  143,  1779, 0,    465,  0,    0,    0,    1683, 496,  0,    705,  0,    452,
    0,    0,    1669, 0,    0,    1386, 1911, 0,    0,    74,   0,    329,  0,    0,    0,    220,
    0,    409,  0,    0,    0,    0,    0,    0,    0,    792,  319,  0,    0,    328,  1791, 245,
    1533, 626,  553,  467,  0,    0,    12,   376,  1720, 1390, 247,  392,  970,  0,    0,    0,
    0,    0,    978,  45,   0,    661,  0,    0,    874,  0,    0,    1469, 0,    442,  1925, 0,
    299,  459,  433,  1541, 291,  0,    0,    0,    0,    81,   0,    1579, 0,    0,    0,    0,
    267,  0,    1330, 691,  0,    0,    345,  534,  0,    473,  0,    1712, 450,  169,  99,   1826,
    846,  1565, 0,    559,  567,  1569, 0,    766,  333,  0,    1406, 313,  0,    1531, 0,    0,
    840,  0,    0,    1080, 0,    509,  217,  0,    420,  0,    0,    42,   1580, 841,  197,  0,
    0,    0,    0,    361,  0,    0,    0,    1769, 130,  0,    324,  758,  630,  0,    1705, 0,
    1136, 0,    0,    1422, 0,    0,    924,  125,  0,    0,    14,   0,    0,    0,    874,  0,
    0,    0,    0,    1922, 598,  0,    303,  0,    1356, 0,    1413, 0,    236,  244,  0,    0,
    0,    0,    878,  0,    0,    0,    1178, 30,   0,    350,  0,    0,    0,    0,    0,    0,
    5,    389,  149,  63,   0,    506,  1646, 0,    857,  0,    229,  0,    508,  0,    0,    0,
    1421, 0,    1872, 0,    184,  0,    1662, 0,    0,    0,    0,    549,  0,    5,    397,  621,
    365,  1235, 0,    1622, 252,  0,    299,  1355, 0,    375,  1399, 1520, 287,  0,    0,    625,
    0,    456,  932,  0,    0,    0,    571,  462,  0,    800,  1219, 0,    0,    193,  0,    339,
    0,    1915, 181,  595,  562,  632,  833,  0,    0,    0,    1893, 0,    1131, 524,  0,    0,
    808,  0,    552,  121,  0,    735,  0,    1693, 0,    872,  1933, 616,  933,  908,  11,   0,
    1512, 0,    705,  0,    1769, 1544, 1604, 0,    0,    0,    0,    615,  1910, 724,  0,    865,
    1301, 1868, 0,    398,  0,    271,  227,  802,  0,    1,    746,  0,    674,  0,    185,  26,
    0,    907,  809,  0,    771,  0,    887,  0,    249,  815,  0,    476,  1881, 1312, 1669, 0,
    43,   0,    1886, 0,    0,    0,    0,    353,  0,    0,    0,    6,    0,    0,    0,    17,
    813,  454,  0,    896,  822,  1905, 1834, 0,    61,   163,  0,    1282, 1588, 875,  157,  53,
    0,    0,    0,    33,   0,    1406, 0,    210,  1202, 0,    608,  1680, 0,    216,  1789, 737,
    1314, 0,    465,  0,    1899, 1895, 0,    0,    0,    487,  1165, 0,    354,  101,  292,  1785,
    261,  708,  0,    268,  1339, 0,    248,  1151, 786,  284,  0,    410,  0,    1081, 0,    1815,
    647,  0,    0,    1708, 0,    842,  734,  0,    327,  1652, 0,    0,    1365, 463,  0,    0,
    220,  0,    546,  331,  0,    0,    1334, 0,    1366, 19,   0,    621,  0,    262,  0,    8,
    0,    0,    0,    1138, 0,    0,    0,    235,  0,    0,    499,  0,    1500, 132,  1509, 1721,
    1658, 0,    0,    359,  614,  94,   0,    0,    1345, 347,  39,   0,    98,   0,    205,  585,
    0,    151,  736,  0,    122,  409,  0,    0,    76,   310,  0,    0,    475,  418,  792,  192,
    533,  1628, 0,    861,  660,  0,    0,    0,    0,    1179, 1178, 0,    372,  846,  1470, 0,
    0,    0,    0,    0,    274,  0,    817,  1746, 340,  123,  420,  0,    1457, 1630, 839,  168,
    0,    0,    0,    0,    550,  0,    0,    1033, 0,    180,  850,  1741, 693,  1134, 294,  0,
    482,  0,    859,  0,    553,  0,    0,    332,  862,  0,    0,    936,  861,  511,  777,  0,
    0,    1849, 0,    1934, 518,  65,   1117, 1833, 0,    1497, 360,  110,  0,    16,   1919, 0,
    22,   591,  0,    9,    0,    266,  0,    0,    67,   524,  1262, 359,  0,    0,    19,   0,
    201,  1597, 680,  0,    0,    492,  0,    1206, 0,    484,  0,    135,  0,    765,  0,    1122,
    267,  0,    755,  0,    0,    0,    0,    1743, 221,  1340, 0,    521,  0,    0,    142,  32,
    1074, 0,    1659, 0,    0,    0,    971,  827,  387,  1864, 217,  656,  55,   0,    1843, 731,
    0,    1890, 881,  0,    490,  151,  126,  748,  0,    366,  1429, 1644, 0,    396,  0,    1625,
    312,  0,    0,    0,    315,  1235, 608,  574,  0,    474,  336,  0,    1625, 867,  730,  0,
    0,    361,  416,  0,    1407, 0,    0,    65,   0,    0,    0,    419,  0,    0,    155,  0,
    0,    0,    374,  134,  0,    319,  858,  962,  1016, 0,    310,  898,  1766, 1032, 141,  508,
    977,  0,    138,  594,  605,  957,  0,    166,  0,    0,    0,    667,  0,    54,   694,  0,
    424,  923,  1633, 60,   449,  0,    0,    797,  2,    772,  334,  0,    80,   0,    1211, 1841,
    0,    0,    522,  0,    1875, 218,  0,    0,    294,  0,    0,    426,  591,  614,  522,  184,
    364,  1197, 541,  120,  0,    0,    0,    0,    1108, 0,    89,   249,  0,    0,    1571, 669,
    0,    1794, 1434, 740,  1362, 0,    0,    853,  539,  0,    0,    580,  0,    1525, 218,  153,
    0,    0,    320,  0,    331,  0,    0,    0,    117,  561,  1579, 49,   0,    828,  290,  198,
    247,  425,  1612, 0,    65,   0,    435,  673,  0,    0,    905,  228,  0,    482,  0,    92,
    0,    717,  504,  0,    477,  0,    0,    0,    1025, 0,    1911, 169,  601,  0,    113,  0,
    1423, 37,   400,  0,    0,    183,  1205, 0,    377,  251,  0,    494,  0,    747,  0,    0,
    134,  574,  1841, 1657, 1893, 554,  96,   0,    0,    0,    931,  0,    0,    103,  0,    99,
    77,   0,    1343, 1534, 0,    112,  413,  281,  1851, 1188, 454,  0,    0,    547,  798,  553,
    0,    68,   0,    0,    924,  0,    661,  1842, 1719, 0,    0,    120,  559,  880,  381,  0,
    0,    886,  905,  1713, 0,    215,  0,    0,    489,  93,   638,  0,    0,    469,  148,  378,
    0,    0,    0,    688,  785,  408,  0,    1649, 0,    450,  389,  1697, 821,  1537, 892,  0,
    0,    312,  487,  368,  328,  333,  0,    133,  108,  0,    0,    63,   602,  1875, 53};

int MangledHashG(const char *key, const int *T)
{
    int sum = 0;

    for (int i = 0; key[i] != '\0'; i++)
    {
        sum += T[i] * key[i];
        sum %= 1935;
    }
    return mangledkG[sum];
}

int MangledPerfectHash(const char *key)
{
    if (strlen(key) > 37)
        return 0;

    return (MangledHashG(key, mangledkT1) + MangledHashG(key, mangledkT2)) % 1935;
}

constexpr int unmangledkT1[] = {252, 28, 163, 98,  168, 79, 178, 111, 177, 21, 63, 172, 122,
                                99,  69, 149, 107, 186, 21, 233, 71,  212, 25, 37, 216, 201};
constexpr int unmangledkT2[] = {68,  93,  131, 187, 244, 188, 1,   147, 4,  242, 68, 136, 225,
                                218, 121, 56,  161, 30,  76,  113, 34,  93, 197, 43, 109, 197};
constexpr int unmangledkG[]  = {
    0,   0,   0,   0,   0,   0,   0,   0,   0,   87,  0,   0,   180, 35,  0,   44,  0,   66,  249,
    0,   0,   0,   26,  194, 0,   0,   0,   224, 117, 165, 56,  223, 159, 19,  57,  0,   0,   84,
    0,   0,   0,   132, 0,   33,  243, 56,  0,   46,  0,   0,   0,   4,   0,   0,   0,   0,   99,
    72,  0,   0,   0,   0,   0,   0,   0,   0,   17,  0,   260, 0,   165, 0,   106, 0,   0,   0,
    0,   4,   65,  195, 0,   0,   0,   219, 0,   245, 68,  51,  232, 148, 57,  83,  80,  51,  89,
    129, 0,   0,   72,  0,   0,   0,   104, 202, 0,   70,  194, 122, 0,   43,  86,  199, 112, 232,
    30,  185, 0,   0,   0,   87,  223, 96,  149, 118, 173, 0,   71,  23,  0,   47,  10,  0,   0,
    0,   0,   0,   0,   234, 0,   42,  0,   43,  0,   151, 229, 15,  0,   132, 198, 241, 23,  0,
    35,  107, 0,   217, 178, 0,   162, 0,   0,   78,  84,  71,  0,   151, 253, 179, 0,   98,  174,
    0,   7,   134, 233, 29,  168, 0,   0,   99,  18,  184, 0,   47,  137, 10,  66,  0,   255, 65,
    0,   101, 258, 229, 0,   123, 45,  124, 100, 0,   48,  260, 0,   4,   0,   10,  60,  0,   0,
    0,   0,   67,  233, 58,  42,  96,  0,   75,  3,   0,   51,  28,  110, 248, 0,   2,   251, 0,
    0,   50,  0,   0,   84,  40,  11,  52,  164, 0,   30,  0,   105, 0,   0,   121, 254, 0,   0,
    0,   0,   22,  259, 100, 82,  19,  8,   118, 0,   119, 0,   0,   146, 143};

int UnmangledHashG(const char *key, const int *T)
{
    int sum = 0;

    for (int i = 0; key[i] != '\0'; i++)
    {
        sum += T[i] * key[i];
        sum %= 262;
    }
    return unmangledkG[sum];
}

int UnmangledPerfectHash(const char *key)
{
    if (strlen(key) > 26)
        return 0;

    return (UnmangledHashG(key, unmangledkT1) + UnmangledHashG(key, unmangledkT2)) % 262;
}

}  // namespace

namespace sh
{

template <>
const size_t ImmutableString::FowlerNollVoHash<4>::kFnvPrime = 16777619u;

template <>
const size_t ImmutableString::FowlerNollVoHash<4>::kFnvOffsetBasis = 0x811c9dc5u;

template <>
const size_t ImmutableString::FowlerNollVoHash<8>::kFnvPrime =
    static_cast<size_t>(1099511628211ull);

template <>
const size_t ImmutableString::FowlerNollVoHash<8>::kFnvOffsetBasis =
    static_cast<size_t>(0xcbf29ce484222325ull);

uint32_t ImmutableString::mangledNameHash() const
{
    return MangledPerfectHash(data());
}

uint32_t ImmutableString::unmangledNameHash() const
{
    return UnmangledPerfectHash(data());
}

}  // namespace sh
