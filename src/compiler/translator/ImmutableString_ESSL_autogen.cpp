// GENERATED FILE - DO NOT EDIT.
// Generated by gen_builtin_symbols.py using data from builtin_variables.json and
// builtin_function_declarations.txt.
//
// Copyright 2019 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// ImmutableString_ESSL_autogen.cpp: Wrapper for static or pool allocated char arrays, that are
// guaranteed to be valid and unchanged for the duration of the compilation. Implements
// mangledNameHash using perfect hash function from gen_builtin_symbols.py

#include "compiler/translator/ImmutableString.h"

std::ostream &operator<<(std::ostream &os, const sh::ImmutableString &str)
{
    return os.write(str.data(), str.length());
}

#if defined(_MSC_VER)
#    pragma warning(disable : 4309)  // truncation of constant value
#endif

namespace
{

constexpr int mangledkT1[] = {365,  857,  1669, 1861, 924,  1356, 1461, 1263, 402,  68,
                              1616, 582,  248,  1281, 1022, 1069, 987,  419,  1147, 47,
                              926,  1243, 288,  1614, 462,  1582, 46,   340,  1311, 1775,
                              1508, 420,  1493, 1430, 806,  1673, 592};
constexpr int mangledkT2[] = {2,    1079, 454, 1579, 1742, 70,   1276, 1772, 1319, 125,
                              1241, 126,  295, 1259, 1318, 62,   1122, 1697, 1219, 1244,
                              423,  1150, 643, 583,  1178, 472,  1892, 1057, 597,  851,
                              1082, 47,   589, 1528, 841,  1509, 1409};
constexpr int mangledkG[]  = {
    0,    0,    0,    0,    0,    0,    0,    0,    0,    922,  0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    1606, 0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    173,  0,    611,  0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    434,  0,    0,    0,    0,    0,    0,    0,    311,  0,    0,
    0,    0,    0,    0,    36,   0,    0,    0,    0,    0,    0,    0,    0,    0,    215,  0,
    0,    0,    794,  1725, 393,  812,  0,    0,    0,    0,    467,  0,    49,   0,    0,    492,
    0,    0,    0,    0,    0,    0,    0,    509,  0,    0,    0,    0,    1176, 0,    0,    0,
    0,    0,    0,    0,    0,    299,  302,  0,    0,    0,    0,    0,    0,    0,    0,    1840,
    0,    0,    0,    0,    0,    0,    0,    1666, 0,    0,    0,    0,    0,    111,  0,    0,
    376,  1784, 0,    285,  0,    0,    0,    0,    58,   0,    728,  0,    0,    565,  0,    474,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    793,  0,
    0,    0,    0,    0,    1487, 779,  0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    1622, 0,    0,    0,    0,    398,  211,  1051, 0,    0,    0,    0,    1480, 0,    1885, 0,
    0,    0,    785,  0,    615,  678,  0,    1732, 0,    0,    770,  1201, 0,    395,  0,    0,
    1859, 0,    1215, 0,    0,    0,    514,  0,    0,    0,    828,  923,  611,  0,    0,    0,
    0,    1050, 0,    0,    0,    0,    0,    0,    598,  0,    649,  0,    0,    0,    254,  0,
    0,    0,    0,    167,  0,    37,   150,  0,    1341, 0,    469,  0,    707,  0,    1537, 0,
    0,    416,  0,    0,    0,    811,  117,  494,  0,    0,    752,  1313, 945,  331,  0,    0,
    0,    98,   0,    182,  0,    436,  493,  750,  1628, 405,  1054, 0,    1390, 0,    0,    0,
    0,    0,    1505, 893,  0,    892,  0,    1784, 1128, 0,    1150, 878,  0,    0,    0,    0,
    0,    0,    658,  0,    544,  0,    969,  0,    0,    637,  0,    1149, 857,  707,  1843, 250,
    30,   563,  0,    0,    0,    557,  1547, 41,   0,    1914, 818,  360,  833,  0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    263,  0,    0,    0,    0,    603,  0,    0,
    0,    0,    81,   0,    0,    528,  1278, 0,    0,    0,    0,    0,    140,  0,    0,    1096,
    0,    0,    710,  0,    1548, 0,    1028, 1857, 270,  99,   0,    0,    0,    612,  0,    0,
    0,    0,    0,    846,  0,    748,  597,  0,    0,    0,    460,  0,    0,    0,    157,  620,
    0,    1855, 0,    0,    583,  0,    0,    0,    386,  0,    0,    0,    0,    395,  0,    0,
    0,    0,    0,    601,  449,  1225, 0,    0,    1852, 0,    0,    0,    689,  1067, 589,  0,
    78,   1831, 0,    778,  0,    0,    265,  154,  0,    384,  441,  0,    856,  0,    548,  1711,
    0,    0,    0,    0,    0,    0,    0,    0,    545,  54,   0,    219,  485,  0,    812,  1119,
    512,  0,    0,    1343, 0,    506,  0,    0,    1639, 0,    188,  0,    1599, 0,    1888, 838,
    0,    0,    277,  182,  0,    0,    0,    0,    0,    256,  0,    223,  537,  0,    0,    0,
    1342, 0,    0,    0,    720,  1595, 0,    0,    1052, 687,  1009, 924,  0,    0,    0,    0,
    1240, 0,    177,  137,  0,    0,    1266, 0,    330,  0,    350,  0,    283,  0,    0,    442,
    0,    438,  0,    1170, 600,  73,   0,    595,  0,    0,    0,    0,    0,    659,  227,  0,
    0,    1822, 0,    0,    0,    0,    36,   0,    0,    0,    1535, 1481, 59,   1853, 0,    507,
    19,   0,    1451, 0,    628,  0,    0,    1131, 1324, 12,   0,    107,  633,  27,   0,    0,
    0,    1535, 1650, 261,  0,    0,    794,  1698, 0,    1298, 0,    0,    0,    0,    791,  1336,
    1730, 0,    0,    0,    222,  0,    118,  0,    788,  734,  0,    0,    0,    0,    210,  0,
    0,    0,    1361, 0,    0,    0,    8,    0,    0,    0,    0,    0,    116,  1781, 1444, 562,
    0,    1754, 113,  0,    176,  312,  0,    0,    795,  0,    0,    0,    0,    0,    0,    546,
    310,  0,    0,    0,    1181, 0,    0,    0,    317,  524,  0,    0,    864,  1688, 0,    0,
    0,    104,  849,  0,    704,  0,    0,    0,    1195, 251,  90,   149,  193,  0,    348,  0,
    0,    0,    0,    742,  198,  0,    157,  721,  0,    0,    0,    0,    1591, 0,    461,  0,
    0,    447,  0,    115,  581,  804,  0,    3,    1423, 0,    75,   1460, 0,    0,    0,    0,
    91,   351,  0,    0,    1933, 716,  230,  0,    30,   860,  0,    0,    0,    0,    0,    0,
    1059, 0,    45,   0,    737,  0,    872,  0,    422,  1732, 582,  0,    0,    0,    0,    773,
    1406, 851,  1529, 109,  0,    593,  540,  1529, 0,    0,    0,    652,  98,   0,    51,   350,
    0,    277,  0,    624,  0,    125,  0,    1643, 192,  317,  1917, 0,    0,    0,    233,  919,
    0,    0,    0,    297,  737,  761,  0,    0,    1726, 1831, 0,    0,    1652, 1620, 574,  118,
    364,  390,  699,  0,    0,    0,    1439, 0,    844,  79,   45,   0,    0,    0,    0,    0,
    408,  830,  0,    0,    0,    1798, 0,    0,    0,    0,    0,    0,    586,  489,  0,    0,
    1529, 0,    0,    237,  0,    0,    0,    1499, 0,    1820, 0,    0,    0,    603,  102,  0,
    0,    675,  37,   0,    1672, 0,    0,    319,  514,  369,  0,    0,    4,    550,  745,  222,
    0,    269,  1529, 1400, 0,    603,  417,  0,    0,    0,    319,  0,    0,    0,    309,  779,
    785,  0,    1495, 535,  0,    772,  169,  0,    0,    1912, 0,    0,    280,  487,  0,    1266,
    0,    0,    433,  0,    167,  0,    183,  806,  0,    914,  889,  1760, 1509, 0,    127,  0,
    0,    130,  0,    0,    0,    0,    0,    1899, 0,    0,    463,  1673, 0,    0,    0,    0,
    683,  1523, 1441, 1174, 279,  0,    0,    0,    1846, 515,  499,  0,    556,  1795, 377,  1714,
    572,  324,  0,    1689, 654,  1821, 811,  0,    223,  1107, 0,    0,    1600, 120,  0,    0,
    0,    153,  0,    71,   108,  0,    1287, 0,    1640, 0,    0,    0,    816,  1660, 1758, 1393,
    1669, 0,    1850, 442,  0,    0,    0,    117,  0,    0,    0,    416,  824,  0,    0,    0,
    0,    577,  1716, 0,    0,    472,  1621, 0,    1110, 0,    0,    76,   0,    0,    161,  0,
    286,  0,    711,  0,    562,  1552, 8,    0,    0,    703,  437,  278,  1715, 167,  1102, 0,
    0,    52,   408,  0,    0,    1878, 180,  0,    368,  295,  654,  1734, 0,    0,    539,  0,
    21,   10,   376,  0,    1614, 792,  168,  124,  1466, 0,    815,  459,  606,  0,    0,    0,
    885,  0,    0,    182,  0,    0,    1405, 98,   0,    423,  0,    1865, 0,    1824, 0,    0,
    175,  0,    0,    0,    379,  1606, 0,    0,    0,    1456, 578,  1703, 0,    0,    1861, 0,
    569,  638,  0,    795,  0,    0,    0,    1331, 169,  0,    162,  528,  0,    741,  0,    0,
    0,    0,    1846, 1873, 0,    0,    0,    0,    344,  0,    281,  0,    92,   746,  0,    0,
    0,    0,    907,  0,    114,  0,    0,    1846, 180,  0,    0,    243,  15,   669,  0,    726,
    559,  0,    0,    516,  552,  375,  399,  0,    0,    0,    1638, 0,    414,  0,    1677, 1544,
    731,  67,   1063, 0,    788,  766,  1581, 728,  683,  886,  451,  0,    0,    611,  1595, 0,
    1410, 827,  188,  0,    1678, 0,    171,  0,    136,  933,  0,    1,    0,    0,    0,    1826,
    878,  1066, 470,  0,    0,    0,    0,    542,  115,  0,    0,    1779, 0,    0,    1303, 122,
    0,    688,  490,  0,    0,    0,    0,    282,  0,    0,    39,   0,    145,  0,    1515, 927,
    0,    585,  0,    94,   0,    0,    755,  0,    0,    0,    534,  1817, 0,    0,    0,    261,
    0,    0,    0,    777,  51,   116,  749,  0,    1079, 613,  116,  0,    683,  141,  241,  0,
    0,    1421, 382,  1673, 0,    0,    1005, 771,  0,    0,    229,  0,    0,    890,  0,    0,
    861,  0,    0,    60,   0,    765,  0,    514,  1037, 349,  522,  0,    528,  1520, 248,  871,
    668,  0,    1131, 819,  701,  0,    0,    215,  0,    0,    0,    0,    182,  1756, 82,   835,
    0,    0,    718,  0,    0,    542,  222,  1157, 0,    0,    0,    0,    380,  0,    0,    1433,
    416,  1340, 0,    0,    673,  0,    73,   0,    1771, 0,    133,  1393, 0,    48,   928,  492,
    602,  320,  1689, 840,  0,    0,    589,  349,  0,    122,  0,    0,    0,    0,    0,    1728,
    0,    0,    0,    0,    0,    1406, 1496, 522,  0,    592,  507,  0,    917,  0,    0,    0,
    0,    904,  148,  598,  0,    361,  0,    394,  0,    269,  330,  0,    0,    0,    0,    0,
    724,  0,    1923, 0,    0,    870,  882,  0,    0,    935,  1869, 211,  0,    46,   0,    530,
    0,    0,    910,  1357, 0,    497,  895,  56,   757,  541,  170,  914,  400,  0,    0,    241,
    0,    736,  0,    551,  0,    1228, 0,    0,    108,  0,    0,    1262, 662,  0,    206,  1049,
    1928, 343,  738,  0,    0,    0,    0,    0,    1827, 906,  217,  1600, 1127, 0,    0,    0,
    1198, 0,    0,    625,  0,    789,  1310, 74,   0,    0,    0,    228,  0,    151,  1036, 0,
    0,    0,    0,    0,    384,  0,    147,  1267, 1478, 1239, 0,    1095, 0,    1425, 59,   1771,
    1606, 0,    62,   0,    1684, 0,    0,    0,    619,  0,    708,  0,    7,    1808, 780,  0,
    813,  0,    0,    1425, 428,  492,  524,  1520, 0,    340,  0,    0,    0,    0,    389,  1437,
    0,    0,    815,  28,   0,    928,  700,  769,  0,    165,  140,  188,  0,    93,   314,  500,
    84,   909,  646,  348,  1671, 1903, 644,  13,   0,    1494, 437,  226,  1430, 272,  0,    243,
    0,    0,    1630, 807,  519,  435,  704,  189,  1479, 38,   35,   0,    357,  74,   1791, 0,
    0,    0,    0,    271,  1907, 0,    929,  0,    0,    423,  439,  797,  218,  0,    820,  448,
    0,    0,    212,  1516, 66,   533,  1211, 437,  0,    680,  1360, 608,  205,  781,  202,  1824,
    556,  0,    0,    0,    516,  0,    1381, 38,   1101, 1721, 0,    393,  0,    913,  0,    220,
    493,  319,  1849, 518,  512,  712,  234,  0,    580,  1486, 31,   0,    0,    0,    1922, 744,
    0,    0,    0,    787,  59,   254,  1233, 81,   0,    699,  0,    0,    0,    854,  0,    16,
    0,    226,  0,    20,   0,    0,    749,  660,  132,  0,    573,  0,    0,    483,  69,   0,
    931,  0,    1427, 0,    385,  0,    107,  819,  264,  725,  712,  16,   76,   64,   0,    751,
    22,   1527, 381,  477,  457,  0,    47,   750,  277,  743,  886,  318,  1887, 0,    258,  1084,
    636,  471,  0,    475,  0,    776,  0,    0,    197,  0,    0,    0,    0,    713,  0,    0,
    0,    448,  0,    0,    485,  1295, 384,  1471, 0,    188,  1073, 0,    1330, 35,   738,  970,
    163,  1227, 0,    235,  0,    1826, 503,  0,    13,   1597, 187,  294,  786,  1740, 0,    0,
    0,    0,    0,    693,  0,    107,  418,  1073, 483,  0,    0,    0,    1182, 279,  11,   0,
    633,  0,    767,  0,    0,    888,  237,  1672, 0,    0,    671,  822,  858,  547,  0,    0,
    0,    0,    307,  0,    488,  0,    1314, 1842, 826,  482,  1218, 0,    1466, 534,  0,    0,
    0,    1636, 1116, 278,  0,    846,  456,  0,    21,   979,  108,  137,  190,  664,  0,    476,
    1122, 0,    776,  244,  0,    706,  0,    0,    0,    829,  332,  42,   33,   0,    193,  606,
    0,    431,  580,  682,  591,  0,    1809, 535,  0,    600,  0,    14,   0,    0,    0,    677,
    0,    719,  0,    0,    658,  0,    407,  0,    263,  838,  1799, 1704, 256,  753,  0,    841,
    1017, 199,  430,  515,  0,    918,  1782, 708,  570,  475,  259,  937,  0,    695,  1383, 390,
    1931, 373,  0,    581,  0,    103,  0,    0,    838,  209,  1090, 29,   0,    330,  0,    1667,
    0,    0,    463,  351,  0,    782,  409,  405,  525,  1033, 604,  0,    58,   1683, 571,  667,
    265,  14,   0,    1687, 1329, 150,  0,    0,    0,    1155, 197,  0,    70,   1724, 0,    0,
    0,    726,  0,    0,    0,    635,  1774, 227,  508,  0,    232,  470,  1504, 1632};

int MangledHashG(const char *key, const int *T)
{
    int sum = 0;

    for (int i = 0; key[i] != '\0'; i++)
    {
        sum += T[i] * key[i];
        sum %= 1934;
    }
    return mangledkG[sum];
}

int MangledPerfectHash(const char *key)
{
    if (strlen(key) > 37)
        return 0;

    return (MangledHashG(key, mangledkT1) + MangledHashG(key, mangledkT2)) % 1934;
}

constexpr int unmangledkT1[] = {242, 98,  218, 97,  58,  73,  177, 63, 131, 35,  231, 131, 127,
                                157, 113, 198, 116, 223, 103, 130, 23, 180, 113, 150, 244, 206};
constexpr int unmangledkT2[] = {45, 125, 56,  165, 228, 195, 145, 107, 100, 223, 102, 180, 163,
                                90, 253, 116, 146, 156, 238, 163, 27,  93,  130, 69,  13,  171};
constexpr int unmangledkG[]  = {
    0,   0,   0,   0,   0,   250, 0,   0,   69,  198, 0,   0,   0,   0,   0,   0,   0,   0,   202,
    0,   0,   0,   184, 0,   0,   0,   16,  246, 0,   0,   0,   134, 117, 124, 0,   197, 0,   0,
    255, 110, 0,   0,   0,   80,  234, 212, 140, 90,  0,   0,   88,  87,  126, 0,   201, 0,   9,
    57,  0,   201, 0,   105, 0,   0,   210, 0,   0,   0,   0,   49,  0,   0,   258, 0,   0,   22,
    127, 191, 0,   176, 70,  0,   209, 135, 0,   0,   0,   211, 0,   0,   0,   0,   76,  0,   205,
    0,   45,  0,   0,   0,   0,   195, 0,   115, 107, 0,   0,   26,  0,   109, 0,   0,   166, 144,
    0,   0,   0,   127, 200, 4,   0,   238, 242, 0,   147, 0,   17,  215, 150, 5,   249, 183, 104,
    123, 5,   106, 100, 20,  0,   222, 0,   112, 0,   237, 0,   74,  24,  9,   0,   50,  0,   0,
    86,  104, 39,  2,   0,   36,  85,  0,   0,   0,   0,   203, 142, 13,  175, 86,  37,  0,   162,
    64,  0,   141, 109, 0,   197, 0,   96,  115, 0,   0,   0,   243, 120, 0,   0,   44,  234, 71,
    0,   91,  145, 189, 148, 222, 71,  106, 240, 222, 211, 0,   148, 0,   0,   55,  102, 0,   17,
    77,  260, 21,  138, 95,  253, 0,   151, 260, 69,  0,   0,   0,   152, 114, 89,  253, 0,   61,
    0,   0,   87,  119, 29,  154, 0,   154, 46,  218, 147, 144, 78,  0,   108, 81,  185, 12,  148,
    0,   233, 194, 0,   117, 255, 208, 46,  0,   183, 0,   59,  38,  9};

int UnmangledHashG(const char *key, const int *T)
{
    int sum = 0;

    for (int i = 0; key[i] != '\0'; i++)
    {
        sum += T[i] * key[i];
        sum %= 261;
    }
    return unmangledkG[sum];
}

int UnmangledPerfectHash(const char *key)
{
    if (strlen(key) > 26)
        return 0;

    return (UnmangledHashG(key, unmangledkT1) + UnmangledHashG(key, unmangledkT2)) % 261;
}

}  // namespace

namespace sh
{

template <>
const size_t ImmutableString::FowlerNollVoHash<4>::kFnvPrime = 16777619u;

template <>
const size_t ImmutableString::FowlerNollVoHash<4>::kFnvOffsetBasis = 0x811c9dc5u;

template <>
const size_t ImmutableString::FowlerNollVoHash<8>::kFnvPrime =
    static_cast<size_t>(1099511628211ull);

template <>
const size_t ImmutableString::FowlerNollVoHash<8>::kFnvOffsetBasis =
    static_cast<size_t>(0xcbf29ce484222325ull);

uint32_t ImmutableString::mangledNameHash() const
{
    return MangledPerfectHash(data());
}

uint32_t ImmutableString::unmangledNameHash() const
{
    return UnmangledPerfectHash(data());
}

}  // namespace sh
