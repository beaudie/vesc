// GENERATED FILE - DO NOT EDIT.
// Generated by gen_builtin_symbols.py using data from builtin_variables.json and
// builtin_function_declarations.txt.
//
// Copyright 2020 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// ImmutableString_ESSL_autogen.cpp: Wrapper for static or pool allocated char arrays, that are
// guaranteed to be valid and unchanged for the duration of the compilation. Implements
// mangledNameHash using perfect hash function from gen_builtin_symbols.py

#include "compiler/translator/ImmutableString.h"

std::ostream &operator<<(std::ostream &os, const sh::ImmutableString &str)
{
    return os.write(str.data(), str.length());
}

#if defined(_MSC_VER)
#    pragma warning(disable : 4309)  // truncation of constant value
#endif

namespace
{

constexpr int mangledkT1[] = {306,  1721, 437, 1750, 299, 1795, 725,  925,  1451, 106,
                              79,   1092, 138, 1301, 40,  215,  845,  1410, 1160, 823,
                              1622, 1953, 767, 1560, 637, 535,  1919, 226,  437,  65,
                              1618, 613,  763, 596,  877, 1017, 741};
constexpr int mangledkT2[] = {1383, 327,  170,  135,  895,  1756, 1662, 773,  729, 93,
                              489,  1738, 455,  1556, 1006, 1109, 1898, 104,  45,  844,
                              1837, 570,  1010, 575,  1582, 977,  519,  1466, 462, 1917,
                              376,  1580, 1,    831,  950,  741,  40};
constexpr int mangledkG[]  = {
    0,    0,    0,    0,    1893, 0,    0,    0,    0,    0,    0,    1647, 0,    0,    0,    0,
    498,  0,    761,  0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    1164, 0,    472,  0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    1134, 1689,
    0,    187,  0,    0,    0,    0,    508,  0,    0,    0,    0,    0,    780,  187,  0,    1214,
    959,  0,    436,  754,  1,    0,    17,   0,    532,  151,  0,    1382, 0,    0,    0,    0,
    0,    0,    0,    15,   0,    0,    971,  0,    773,  0,    0,    0,    318,  1948, 0,    146,
    0,    224,  0,    0,    0,    679,  0,    0,    0,    0,    950,  0,    806,  1148, 0,    846,
    386,  519,  0,    0,    0,    0,    0,    503,  0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    652,  0,    0,    0,    0,    0,    0,    0,    0,    50,   359,  0,    0,
    0,    0,    0,    1933, 0,    0,    0,    0,    1047, 1690, 0,    0,    0,    346,  152,  0,
    0,    0,    0,    0,    0,    0,    0,    0,    1356, 0,    0,    0,    0,    107,  0,    0,
    1953, 1849, 0,    0,    0,    53,   0,    239,  1321, 107,  0,    0,    669,  501,  0,    0,
    1439, 1670, 0,    0,    1098, 459,  0,    0,    1939, 0,    1826, 0,    1855, 0,    0,    0,
    0,    0,    0,    0,    1947, 0,    0,    741,  136,  0,    0,    0,    0,    0,    0,    0,
    0,    1949, 0,    0,    0,    0,    0,    0,    372,  0,    0,    0,    0,    1438, 1899, 1342,
    74,   0,    695,  0,    0,    1947, 0,    704,  0,    213,  0,    528,  0,    0,    0,    1449,
    207,  0,    57,   1353, 224,  0,    0,    0,    0,    26,   1789, 1351, 0,    823,  34,   0,
    0,    0,    1059, 1298, 861,  1518, 0,    0,    0,    0,    1884, 0,    851,  0,    0,    0,
    1840, 0,    0,    861,  1811, 43,   1167, 0,    0,    1434, 0,    0,    0,    0,    0,    0,
    1341, 505,  0,    0,    0,    0,    0,    836,  225,  0,    702,  1366, 941,  0,    263,  629,
    1558, 0,    0,    0,    0,    0,    911,  0,    0,    1070, 0,    120,  1735, 739,  0,    0,
    989,  0,    0,    0,    72,   179,  0,    0,    0,    0,    0,    0,    0,    0,    0,    1609,
    0,    0,    0,    0,    0,    0,    0,    0,    391,  0,    0,    0,    0,    0,    0,    1810,
    0,    1685, 0,    990,  1146, 0,    1947, 570,  0,    15,   1662, 633,  0,    0,    0,    39,
    790,  1099, 0,    0,    0,    0,    0,    0,    254,  0,    153,  0,    0,    0,    679,  0,
    0,    0,    1624, 10,   0,    1799, 0,    0,    1688, 205,  688,  0,    1872, 0,    725,  0,
    1185, 969,  0,    0,    0,    0,    0,    525,  0,    622,  865,  0,    0,    385,  0,    859,
    662,  0,    0,    1908, 0,    514,  0,    1912, 1702, 0,    0,    0,    0,    0,    100,  0,
    409,  769,  0,    0,    0,    115,  0,    0,    461,  0,    0,    0,    0,    425,  0,    885,
    1632, 484,  910,  0,    0,    0,    0,    0,    1663, 0,    0,    0,    0,    0,    296,  0,
    0,    151,  0,    0,    774,  60,   180,  1732, 0,    0,    1005, 1837, 0,    0,    1781, 0,
    1658, 195,  0,    0,    0,    1326, 0,    0,    0,    594,  1359, 1931, 1703, 0,    1458, 644,
    0,    0,    1305, 1519, 48,   0,    1577, 0,    0,    0,    0,    0,    1622, 0,    1872, 0,
    595,  1871, 38,   0,    1611, 0,    0,    1659, 115,  679,  648,  0,    577,  0,    58,   0,
    161,  0,    82,   0,    20,   537,  0,    1231, 0,    438,  0,    0,    387,  0,    0,    0,
    0,    0,    0,    0,    934,  0,    1741, 0,    0,    0,    393,  0,    0,    734,  1871, 0,
    0,    105,  129,  686,  873,  536,  1839, 0,    438,  0,    242,  0,    0,    0,    0,    1387,
    700,  1502, 0,    0,    0,    133,  371,  1290, 0,    0,    0,    1587, 0,    1864, 0,    0,
    0,    0,    920,  0,    999,  1810, 1031, 0,    0,    1052, 0,    0,    756,  1598, 59,   956,
    721,  1832, 864,  1821, 390,  21,   0,    0,    1645, 1354, 370,  727,  0,    0,    0,    721,
    582,  0,    0,    0,    1872, 0,    1084, 1864, 1269, 0,    183,  872,  0,    663,  137,  554,
    1247, 34,   467,  0,    0,    476,  434,  432,  0,    0,    142,  0,    1764, 772,  1482, 1031,
    0,    830,  0,    0,    0,    0,    28,   586,  1457, 0,    0,    0,    342,  0,    0,    0,
    0,    0,    282,  0,    336,  4,    158,  83,   667,  385,  0,    0,    0,    268,  0,    68,
    538,  406,  0,    0,    1762, 446,  0,    0,    777,  1546, 1346, 1793, 0,    0,    606,  0,
    0,    0,    0,    0,    0,    406,  157,  0,    1312, 790,  1742, 0,    52,   0,    643,  0,
    215,  0,    215,  1833, 795,  1495, 1059, 495,  979,  0,    0,    0,    0,    295,  0,    0,
    569,  0,    636,  1537, 1719, 987,  0,    0,    0,    1757, 0,    0,    1517, 22,   0,    579,
    0,    1583, 0,    0,    0,    0,    0,    0,    1,    0,    0,    0,    0,    1608, 822,  0,
    231,  709,  347,  346,  0,    0,    0,    408,  0,    1601, 1698, 0,    694,  978,  0,    0,
    505,  853,  0,    321,  1411, 0,    0,    366,  0,    0,    0,    125,  0,    0,    364,  0,
    379,  798,  0,    0,    0,    691,  1394, 441,  725,  915,  241,  184,  0,    0,    1921, 752,
    888,  1769, 924,  0,    0,    412,  0,    1751, 0,    0,    1288, 1887, 251,  0,    0,    0,
    0,    0,    0,    524,  0,    420,  0,    0,    0,    77,   732,  0,    0,    0,    572,  1282,
    460,  488,  0,    0,    0,    358,  0,    427,  1139, 0,    18,   0,    0,    0,    0,    316,
    0,    0,    500,  603,  0,    0,    0,    0,    0,    1906, 1178, 115,  755,  670,  308,  431,
    911,  0,    890,  1879, 0,    0,    1655, 831,  1736, 0,    0,    0,    0,    0,    0,    0,
    432,  57,   621,  0,    961,  0,    0,    131,  0,    1360, 0,    465,  1654, 557,  0,    0,
    138,  84,   270,  0,    0,    826,  0,    0,    0,    1870, 0,    1367, 224,  0,    0,    413,
    0,    0,    809,  1028, 0,    0,    211,  25,   0,    0,    871,  0,    230,  0,    0,    0,
    630,  26,   0,    207,  482,  0,    279,  0,    0,    0,    932,  1082, 501,  0,    0,    0,
    1878, 185,  513,  0,    1622, 510,  0,    951,  156,  821,  0,    549,  457,  0,    0,    0,
    0,    0,    511,  0,    0,    244,  949,  0,    0,    0,    0,    0,    797,  0,    207,  0,
    114,  1121, 615,  260,  1806, 0,    0,    0,    260,  0,    0,    1683, 300,  0,    1706, 0,
    214,  0,    792,  581,  1353, 1849, 0,    0,    576,  0,    0,    0,    0,    470,  1190, 324,
    1782, 384,  0,    337,  0,    0,    0,    0,    0,    40,   0,    805,  0,    1821, 284,  1624,
    0,    0,    1470, 0,    897,  0,    0,    94,   0,    0,    0,    1416, 0,    0,    1790, 0,
    0,    302,  145,  0,    531,  1937, 661,  743,  842,  862,  0,    0,    0,    850,  1916, 0,
    0,    0,    0,    527,  697,  19,   295,  0,    1888, 0,    0,    1427, 0,    0,    0,    0,
    0,    0,    78,   0,    868,  1685, 0,    703,  0,    0,    0,    530,  0,    275,  1574, 235,
    334,  84,   1404, 0,    0,    0,    859,  1162, 159,  42,   1218, 596,  716,  1551, 0,    978,
    972,  0,    810,  527,  0,    0,    1672, 1354, 0,    1658, 710,  1537, 558,  311,  442,  0,
    1267, 0,    191,  110,  375,  439,  0,    0,    0,    754,  0,    256,  0,    690,  326,  0,
    926,  0,    539,  1386, 96,   0,    612,  0,    1858, 286,  0,    67,   830,  1294, 0,    1219,
    189,  720,  0,    1642, 770,  0,    0,    475,  1076, 0,    1349, 1747, 565,  0,    807,  0,
    1466, 215,  327,  0,    316,  0,    72,   811,  972,  0,    1096, 0,    1507, 0,    268,  535,
    1383, 237,  1396, 59,   604,  1874, 159,  989,  1496, 132,  222,  1363, 839,  937,  547,  0,
    0,    0,    539,  0,    45,   164,  162,  1740, 166,  714,  136,  0,    265,  197,  1752, 0,
    0,    763,  534,  254,  0,    0,    0,    958,  367,  263,  0,    387,  0,    0,    0,    0,
    635,  345,  1208, 0,    0,    0,    0,    605,  388,  678,  55,   119,  0,    0,    0,    1165,
    0,    1678, 941,  943,  0,    0,    141,  0,    393,  0,    0,    754,  0,    0,    957,  1928,
    0,    339,  634,  1833, 0,    0,    483,  0,    0,    0,    0,    253,  1628, 472,  587,  0,
    247,  1901, 43,   1174, 1370, 0,    538,  430,  0,    479,  0,    340,  253,  291,  651,  580,
    1918, 1755, 1128, 0,    650,  0,    497,  0,    601,  801,  866,  1133, 322,  0,    816,  0,
    0,    0,    436,  0,    785,  414,  116,  0,    624,  0,    0,    0,    0,    1752, 0,    767,
    979,  175,  380,  0,    375,  0,    0,    406,  774,  0,    100,  0,    0,    504,  0,    234,
    1573, 735,  0,    232,  0,    638,  1071, 1840, 0,    646,  0,    650,  616,  38,   85,   1528,
    591,  666,  0,    0,    1941, 36,   0,    50,   0,    276,  0,    0,    420,  0,    861,  342,
    772,  0,    662,  119,  278,  0,    548,  1939, 0,    0,    30,   0,    813,  715,  487,  391,
    1193, 1949, 239,  0,    644,  0,    1327, 196,  1501, 0,    617,  188,  1055, 936,  0,    285,
    1560, 1947, 267,  636,  1083, 382,  404,  771,  620,  811,  1239, 1420, 927,  0,    580,  0,
    0,    1881, 0,    0,    181,  0,    0,    776,  0,    1827, 0,    36,   910,  0,    0,    854,
    0,    177,  420,  904,  352,  1792, 0,    528,  254,  1293, 491,  498,  0,    0,    163,  468,
    245,  887,  0,    693,  0,    1778, 168,  1781, 811,  366,  0,    1681, 1861, 0,    973,  0,
    0,    0,    109,  0,    883,  1462, 1585, 0,    0,    0,    0,    777,  1479, 704,  305,  0,
    172,  1619, 0,    1663, 0,    1302, 0,    0,    0,    0,    0,    458,  0,    0,    26,   0,
    726,  0,    160,  12,   0,    1218, 0,    0,    486,  547,  0,    0,    781,  0,    75,   0,
    0,    1146, 64,   0,    948,  1414, 985,  1402, 0,    0,    989,  940,  1847, 1935, 1918, 0,
    890,  1828, 0,    1445, 598,  0,    289,  0,    529,  0,    676,  0,    0,    0,    1344, 455,
    0,    1044, 13,   0,    0,    488,  943,  1198, 0,    0,    0,    1912, 1875, 0,    0,    0,
    0,    270,  439,  0,    591,  1825, 959,  0,    958,  0,    0,    0,    742,  1852, 0,    0,
    674,  1750, 0,    0,    0,    349,  93,   364,  690,  722,  1852, 0,    1131, 292,  454,  34,
    0,    869,  184,  1669, 0,    0,    125,  775,  221,  495,  304,  1832, 691,  573,  564,  0,
    0,    1509, 0,    321,  1573, 716,  0,    0,    311,  0,    0,    0,    0,    0,    756,  1471,
    0,    0,    0,    1004, 74,   0,    227,  0,    276,  0,    1423, 1178, 1825, 159,  0,    0,
    183,  702,  0,    986,  1752, 0,    0,    0,    968,  0,    0,    982,  700,  639,  474,  858,
    1884, 0,    660,  0,    696,  0,    0,    298,  0,    1947, 1392, 167,  0,    0,    713,  53,
    0,    813,  4,    1357, 869,  395,  0,    0,    0,    0,    852,  0,    906,  0,    0,    1603,
    0,    1771, 425,  1743, 0,    93,   975,  312,  0,    693,  1268, 368,  0,    0,    2,    0,
    817,  891,  722,  435,  0,    63,   802,  702,  0,    257,  1422, 1289, 736,  1678, 0,    0,
    0,    254,  600,  0,    1593, 299,  0,    392,  0,    1654, 858,  785,  109,  0,    919,  0,
    403,  1283, 393,  1459, 0,    492,  0,    0,    297,  1451, 673,  297,  938,  0,    1242, 0,
    358,  530,  668,  0,    65,   0,    1140, 918,  201,  63,   1629, 0,    1437, 1554, 1380, 0,
    737,  0,    1452, 738,  398,  0,    1724, 0,    752,  0,    0,    0,    875,  128,  20,   10,
    0,    250,  0,    73,   323,  762,  0,    264,  360,  1625, 808,  117,  1119, 230,  772,  419,
    0,    0,    744,  1578, 0,    88,   0,    167,  999,  0,    0,    0,    509,  0,    380,  455,
    0,    0,    0,    396,  0,    1575, 640,  0,    697,  761,  0,    644,  608,  344,  0,    0,
    1495, 1784, 173,  1889, 123,  209,  0,    1923, 0,    363,  148,  1935, 0,    0,    592,  0,
    395,  103,  739,  601,  1903, 140,  621,  0,    0,    0,    1158, 0,    0,    0,    0,    1491,
    1625, 0,    485,  552,  0,    209,  0,    83,   0,    0,    881,  0,    1227, 599,  1737, 0,
    0,    325,  869,  0,    1417, 0,    381,  0,    0,    2,    590,  194,  190,  483,  1845, 659,
    1775, 0,    1173};

int MangledHashG(const char *key, const int *T)
{
    int sum = 0;

    for (int i = 0; key[i] != '\0'; i++)
    {
        sum += T[i] * key[i];
        sum %= 1955;
    }
    return mangledkG[sum];
}

int MangledPerfectHash(const char *key)
{
    if (strlen(key) > 37)
        return 0;

    return (MangledHashG(key, mangledkT1) + MangledHashG(key, mangledkT2)) % 1955;
}

constexpr int unmangledkT1[] = {2,   168, 254, 142, 172, 265, 234, 75,  12, 207, 24, 6,  274,
                                198, 50,  100, 90,  85,  204, 173, 264, 1,  183, 76, 15, 242};
constexpr int unmangledkT2[] = {78,  138, 215, 117, 105, 263, 119, 78,  178, 239, 3,   262, 203,
                                141, 93,  66,  174, 36,  253, 100, 207, 109, 166, 200, 86,  215};
constexpr int unmangledkG[]  = {
    0,   0,   0,   0,   0,   192, 0,   212, 0,   0,   52,  0,   100, 235, 0,   0,   0,   132, 38,
    0,   0,   0,   0,   0,   69,  0,   0,   24,  33,  0,   243, 0,   4,   239, 0,   0,   0,   153,
    0,   0,   90,  0,   0,   0,   135, 232, 149, 0,   0,   0,   114, 127, 89,  137, 0,   9,   0,
    65,  53,  0,   0,   53,  115, 0,   124, 234, 0,   16,  0,   21,  117, 0,   85,  0,   0,   66,
    0,   66,  32,  13,  79,  0,   142, 0,   88,  31,  137, 0,   0,   0,   136, 0,   0,   0,   181,
    0,   0,   246, 0,   0,   74,  0,   0,   0,   217, 210, 0,   151, 0,   226, 86,  0,   128, 0,
    0,   206, 157, 111, 30,  0,   0,   209, 3,   0,   165, 31,  0,   0,   0,   0,   0,   0,   17,
    0,   0,   135, 0,   0,   0,   0,   3,   98,  56,  0,   142, 0,   0,   0,   166, 14,  0,   261,
    125, 10,  13,  12,  31,  0,   0,   217, 61,  244, 79,  0,   0,   0,   0,   92,  37,  114, 0,
    55,  237, 6,   24,  232, 0,   0,   0,   127, 0,   16,  203, 197, 129, 0,   139, 70,  0,   0,
    0,   58,  37,  0,   241, 0,   111, 8,   16,  38,  174, 72,  21,  195, 163, 267, 181, 0,   0,
    132, 80,  34,  18,  0,   0,   195, 22,  169, 0,   115, 143, 94,  110, 117, 95,  25,  75,  248,
    259, 0,   0,   46,  0,   233, 251, 0,   0,   50,  203, 244, 23,  0,   0,   0,   33,  0,   131,
    0,   244, 0,   44,  222, 0,   0,   0,   46,  131, 0,   0,   230, 63,  221, 0,   149, 26,  200,
    0,   0,   64,  104, 2,   0,   236, 38,  140, 0,   156, 269, 0,   130, 0};

int UnmangledHashG(const char *key, const int *T)
{
    int sum = 0;

    for (int i = 0; key[i] != '\0'; i++)
    {
        sum += T[i] * key[i];
        sum %= 281;
    }
    return unmangledkG[sum];
}

int UnmangledPerfectHash(const char *key)
{
    if (strlen(key) > 26)
        return 0;

    return (UnmangledHashG(key, unmangledkT1) + UnmangledHashG(key, unmangledkT2)) % 281;
}

}  // namespace

namespace sh
{

template <>
const size_t ImmutableString::FowlerNollVoHash<4>::kFnvPrime = 16777619u;

template <>
const size_t ImmutableString::FowlerNollVoHash<4>::kFnvOffsetBasis = 0x811c9dc5u;

template <>
const size_t ImmutableString::FowlerNollVoHash<8>::kFnvPrime =
    static_cast<size_t>(1099511628211ull);

template <>
const size_t ImmutableString::FowlerNollVoHash<8>::kFnvOffsetBasis =
    static_cast<size_t>(0xcbf29ce484222325ull);

uint32_t ImmutableString::mangledNameHash() const
{
    return MangledPerfectHash(data());
}

uint32_t ImmutableString::unmangledNameHash() const
{
    return UnmangledPerfectHash(data());
}

}  // namespace sh
