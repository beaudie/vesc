// GENERATED FILE - DO NOT EDIT.
// Generated by gen_builtin_symbols.py using data from builtin_variables.json and
// builtin_function_declarations.txt.
//
// Copyright 2019 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// ImmutableString_ESSL_autogen.cpp: Wrapper for static or pool allocated char arrays, that are
// guaranteed to be valid and unchanged for the duration of the compilation. Implements
// mangledNameHash using perfect hash function from gen_builtin_symbols.py

#include "compiler/translator/ImmutableString.h"

std::ostream &operator<<(std::ostream &os, const sh::ImmutableString &str)
{
    return os.write(str.data(), str.length());
}

#if defined(_MSC_VER)
#    pragma warning(disable : 4309)  // truncation of constant value
#endif

namespace
{

constexpr int mangledkT1[] = {217, 929,  1709, 812,  549,  70,   671,  618,  671, 668,
                              434, 828,  1051, 504,  1307, 1208, 726,  302,  214, 1119,
                              93,  1418, 849,  1074, 587,  1050, 1042, 1045, 173, 698,
                              551, 1254, 1405, 1612, 1317, 997,  1229};
constexpr int mangledkT2[] = {1703, 1209, 1100, 536,  1036, 417,  1032, 694,  1592, 1701,
                              1352, 1446, 1389, 1728, 192,  1394, 1600, 896,  1539, 1413,
                              49,   260,  883,  321,  1171, 90,   630,  1691, 272,  1457,
                              228,  1185, 605,  475,  703,  536,  1322};
constexpr int mangledkG[]  = {
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    345,  0,    390,  0,    1531,
    0,    0,    0,    653,  0,    0,    0,    0,    0,    0,    1699, 0,    0,    79,   0,    0,
    0,    0,    0,    0,    457,  606,  0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    620,  0,    0,    0,    0,    0,    668,  0,    0,    0,    0,    0,    0,    1189, 0,    0,
    1282, 0,    0,    0,    0,    0,    0,    172,  0,    0,    0,    0,    1086, 230,  0,    0,
    0,    0,    737,  0,    0,    0,    86,   461,  1579, 0,    0,    0,    870,  0,    1522, 926,
    0,    730,  0,    0,    625,  0,    0,    334,  1166, 0,    0,    0,    45,   0,    0,    0,
    0,    1103, 0,    0,    0,    0,    0,    0,    0,    655,  0,    0,    0,    1339, 0,    0,
    0,    1527, 0,    0,    425,  0,    0,    0,    0,    0,    1633, 0,    1481, 0,    0,    0,
    0,    0,    0,    506,  480,  1751, 0,    0,    0,    244,  1595, 0,    0,    1735, 0,    0,
    0,    41,   1406, 906,  0,    1388, 460,  503,  0,    0,    0,    0,    0,    0,    889,  0,
    0,    0,    1463, 0,    0,    0,    0,    32,   18,   0,    0,    0,    0,    0,    285,  749,
    455,  215,  1507, 0,    1698, 0,    0,    432,  624,  0,    0,    900,  0,    1562, 1625, 1372,
    0,    0,    1473, 1736, 0,    0,    132,  0,    936,  1734, 0,    0,    107,  256,  1005, 0,
    0,    1411, 0,    458,  286,  0,    582,  497,  178,  1253, 0,    0,    0,    1579, 0,    0,
    0,    319,  757,  0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    1215, 987,  0,
    0,    0,    303,  656,  0,    1607, 1124, 0,    0,    1096, 973,  0,    362,  5,    0,    363,
    1674, 1571, 557,  0,    96,   0,    0,    332,  0,    1218, 0,    846,  323,  0,    0,    0,
    0,    0,    0,    0,    67,   0,    0,    0,    0,    0,    0,    0,    821,  1347, 0,    0,
    0,    519,  165,  0,    0,    0,    1680, 0,    715,  0,    903,  0,    1680, 0,    290,  0,
    896,  315,  511,  0,    281,  732,  0,    1050, 0,    923,  0,    47,   0,    749,  548,  1150,
    0,    1073, 667,  0,    0,    0,    0,    1005, 705,  0,    1003, 0,    0,    958,  0,    0,
    0,    498,  0,    0,    0,    0,    1261, 1189, 0,    0,    1182, 0,    0,    0,    722,  91,
    1199, 0,    0,    0,    24,   231,  0,    682,  1613, 0,    0,    0,    0,    0,    1470, 823,
    296,  0,    0,    814,  417,  1012, 345,  252,  0,    0,    588,  0,    0,    44,   0,    542,
    0,    534,  1676, 464,  259,  1490, 0,    0,    0,    0,    833,  873,  658,  0,    0,    586,
    0,    1124, 0,    0,    47,   0,    0,    689,  0,    604,  1209, 0,    1196, 0,    121,  0,
    0,    0,    0,    0,    0,    909,  759,  143,  0,    0,    0,    0,    1650, 770,  0,    1252,
    0,    824,  0,    0,    0,    847,  0,    1431, 1370, 212,  438,  0,    0,    0,    217,  0,
    1405, 0,    0,    0,    1074, 0,    0,    1653, 0,    0,    0,    0,    0,    375,  0,    446,
    621,  0,    45,   1528, 1460, 0,    0,    0,    53,   0,    793,  0,    1512, 173,  0,    0,
    189,  0,    1643, 1596, 1363, 1031, 0,    0,    0,    1286, 914,  642,  631,  1208, 444,  845,
    0,    0,    0,    403,  0,    134,  0,    0,    328,  0,    0,    1071, 535,  0,    0,    0,
    1619, 0,    0,    1126, 0,    0,    0,    1530, 1321, 0,    0,    1717, 402,  0,    0,    348,
    0,    0,    236,  0,    0,    0,    859,  1267, 1239, 181,  0,    420,  0,    1127, 0,    0,
    992,  0,    0,    279,  0,    1014, 0,    0,    596,  1201, 0,    1548, 0,    38,   342,  519,
    0,    348,  0,    0,    0,    0,    0,    0,    293,  0,    0,    375,  0,    0,    0,    808,
    0,    1240, 305,  0,    0,    0,    853,  0,    0,    1623, 1435, 0,    551,  326,  374,  0,
    96,   1659, 0,    0,    708,  0,    681,  904,  0,    0,    1414, 773,  834,  1553, 719,  0,
    288,  721,  101,  0,    0,    1240, 0,    356,  0,    384,  169,  0,    879,  0,    98,   807,
    0,    341,  1308, 0,    538,  0,    0,    0,    1669, 0,    0,    0,    94,   1589, 578,  983,
    863,  0,    0,    397,  0,    412,  406,  27,   1462, 0,    0,    515,  0,    0,    97,   320,
    0,    1574, 0,    807,  744,  0,    134,  0,    0,    0,    1642, 0,    208,  0,    406,  833,
    661,  0,    660,  650,  0,    0,    0,    0,    673,  0,    1238, 873,  0,    0,    0,    0,
    0,    0,    228,  260,  0,    693,  1627, 0,    0,    0,    0,    0,    0,    779,  1487, 1148,
    888,  850,  0,    0,    0,    698,  0,    0,    0,    0,    0,    0,    1612, 0,    1670, 0,
    0,    620,  446,  0,    0,    0,    307,  0,    929,  0,    0,    591,  616,  552,  0,    59,
    0,    0,    0,    0,    0,    140,  0,    809,  1427, 0,    0,    0,    424,  1592, 0,    745,
    0,    604,  1176, 950,  0,    73,   62,   1727, 0,    822,  749,  1285, 0,    0,    947,  0,
    0,    588,  0,    1249, 671,  8,    0,    0,    0,    0,    0,    1392, 1421, 919,  1231, 357,
    0,    0,    432,  904,  1580, 0,    1421, 0,    85,   0,    516,  278,  0,    415,  640,  0,
    225,  1030, 1437, 366,  1146, 0,    1144, 0,    0,    1495, 442,  0,    0,    267,  0,    1431,
    1763, 152,  1420, 1062, 0,    308,  194,  1581, 1308, 1299, 0,    168,  0,    1577, 0,    530,
    0,    649,  35,   788,  0,    642,  247,  0,    0,    600,  143,  708,  673,  826,  914,  1270,
    157,  0,    151,  0,    1683, 208,  1295, 0,    844,  763,  908,  133,  698,  159,  1292, 0,
    0,    1621, 867,  382,  682,  0,    0,    126,  1306, 303,  1740, 1404, 0,    140,  0,    329,
    1752, 0,    0,    1272, 0,    0,    0,    343,  676,  7,    70,   182,  226,  770,  0,    217,
    0,    0,    1403, 552,  17,   1480, 579,  1404, 136,  0,    47,   0,    750,  0,    0,    0,
    0,    1406, 0,    1367, 729,  771,  0,    0,    1377, 784,  827,  426,  0,    0,    334,  0,
    365,  0,    875,  1355, 0,    0,    0,    628,  0,    0,    123,  0,    0,    0,    848,  92,
    0,    417,  0,    0,    132,  682,  257,  229,  0,    1617, 225,  0,    1224, 554,  101,  0,
    0,    771,  770,  185,  1266, 401,  0,    0,    0,    0,    818,  0,    0,    0,    1547, 0,
    740,  293,  722,  0,    544,  363,  398,  0,    0,    910,  0,    0,    0,    0,    924,  0,
    0,    1091, 347,  0,    922,  198,  606,  0,    1117, 0,    1352, 292,  0,    0,    0,    457,
    0,    746,  163,  1347, 1625, 1091, 591,  0,    512,  810,  858,  749,  0,    135,  458,  219,
    274,  1575, 116,  0,    330,  1264, 0,    1410, 609,  0,    1483, 104,  1191, 0,    0,    890,
    0,    144,  0,    1694, 0,    0,    0,    328,  39,   1682, 0,    0,    1523, 1366, 900,  0,
    691,  0,    808,  832,  0,    1740, 0,    398,  0,    77,   0,    165,  1628, 490,  618,  685,
    0,    97,   1304, 1678, 44,   0,    1617, 0,    0,    984,  450,  1318, 663,  1343, 0,    0,
    360,  236,  1488, 1281, 1664, 855,  1597, 1110, 547,  1633, 0,    828,  0,    50,   0,    35,
    445,  0,    0,    0,    429,  1751, 0,    0,    784,  0,    0,    768,  262,  0,    149,  29,
    0,    0,    0,    1486, 0,    1413, 198,  0,    0,    0,    535,  784,  0,    0,    1407, 759,
    486,  338,  1703, 1401, 0,    0,    0,    213,  1755, 660,  1406, 0,    563,  469,  1735, 0,
    0,    328,  1367, 0,    1481, 250,  0,    0,    0,    106,  0,    0,    1338, 0,    456,  509,
    0,    541,  189,  0,    0,    1599, 0,    0,    1576, 740,  0,    829,  0,    1604, 536,  0,
    0,    0,    0,    0,    137,  0,    0,    0,    0,    0,    331,  875,  0,    384,  0,    0,
    1613, 1076, 0,    344,  0,    1412, 0,    835,  0,    211,  0,    720,  0,    0,    458,  0,
    0,    0,    866,  1412, 0,    799,  858,  0,    391,  646,  149,  0,    783,  370,  692,  751,
    0,    0,    1380, 1173, 1688, 370,  549,  0,    1201, 604,  1082, 0,    0,    0,    22,   579,
    0,    28,   1523, 377,  1575, 6,    0,    0,    248,  0,    933,  1124, 1018, 767,  0,    716,
    913,  0,    0,    568,  444,  0,    1295, 26,   180,  0,    605,  1272, 706,  574,  0,    782,
    39,   0,    627,  0,    0,    937,  341,  573,  0,    661,  520,  589,  1661, 1457, 0,    14,
    0,    0,    1438, 1298, 482,  1732, 0,    0,    392,  0,    0,    667,  1123, 0,    0,    814,
    0,    0,    273,  483,  0,    311,  0,    218,  0,    1376, 0,    753,  556,  1753, 934,  0,
    0,    672,  1659, 1289, 1470, 1577, 4,    338,  230,  0,    496,  765,  505,  650,  0,    1119,
    1529, 841,  534,  65,   213,  0,    436,  0,    836,  1473, 0,    157,  726,  0,    195,  565,
    0,    1762, 63,   0,    510,  0,    754,  484,  242,  543,  513,  0,    254,  549,  0,    570,
    0,    0,    634,  127,  495,  383,  22,   1096, 789,  0,    1590, 367,  814,  0,    0,    677,
    1359, 463,  172,  1186, 0,    0,    1403, 1433, 190,  1228, 301,  1456, 402,  0,    923,  86,
    0,    608,  1172, 401,  206,  0,    1121, 49,   0,    697,  521,  399,  407,  465,  1001, 0,
    824,  356,  652,  1164, 1019, 0,    1439, 878,  0,    0,    0,    291,  1675, 0,    214,  0,
    0,    0,    376,  616,  253,  0,    757,  1564, 0,    0,    464,  845,  0,    53,   537,  177,
    111,  1492, 0,    300,  0,    1672, 945,  0,    474,  267,  0,    561,  818,  0,    1754, 957,
    0,    12,   0,    490,  0,    0,    0,    0,    1372, 629,  294,  0,    1488, 1472, 78,   0,
    1616, 0,    639,  146,  0,    0,    480,  0,    0,    501,  0,    288,  176,  233,  0,    1343,
    531,  0,    104,  1743, 372,  0,    0,    313,  551,  1488, 0,    0,    265,  0,    0,    277,
    1149, 0,    0,    633,  435,  12,   624,  0,    631,  176,  640,  0,    0,    1707, 734,  1284,
    897,  1395, 1602, 0,    638,  1096, 1668, 0,    182,  1439, 0,    0,    743,  202,  0,    0,
    1263, 1204, 452,  618,  0,    0,    0,    811,  886,  79,   20,   242,  262,  801,  0,    988,
    0,    0,    392,  246,  0,    0,    0,    0,    0,    885,  0,    1729, 869,  766,  0,    1622,
    0,    0,    459,  0,    714,  1225, 1703, 963,  0,    0,    0,    0,    1302, 0,    0,    0,
    602,  1309, 262,  25,   0,    184,  622,  0,    820,  0,    0,    0,    0,    61,   780,  0,
    1418, 378,  118,  0,    0,    0,    0,    209,  1420, 1344, 370,  0,    1616, 553,  1749, 638,
    239,  816,  0,    0,    641,  0,    0,    244,  0,    0,    99,   350,  1501, 0,    0,    0,
    840,  547,  1724, 33,   276,  882,  767,  1407, 418,  284,  381,  218,  0,    439,  0,    0,
    895,  946,  103,  580,  16,   62,   282,  428,  0,    868,  1520, 0,    611,  1432, 1521, 700,
    792,  0,    242,  0,    655,  115,  0,    236,  0,    0,    187,  1681, 0,    690,  0,    208,
    1232, 0,    497,  339,  1517, 666,  0,    488,  0,    860,  644,  159,  0,    0,    1438, 540,
    483,  876,  642,  84,   1528, 625,  0,    0,    1162, 328,  1307, 0,    147,  1575, 1746, 281,
    0,    74,   36,   606,  0,    0,    1713, 37,   917,  0,    0,    1067, 49,   919,  0,    745,
    790,  1463, 0,    569,  393};

int MangledHashG(const char *key, const int *T)
{
    int sum = 0;

    for (int i = 0; key[i] != '\0'; i++)
    {
        sum += T[i] * key[i];
        sum %= 1765;
    }
    return mangledkG[sum];
}

int MangledPerfectHash(const char *key)
{
    if (strlen(key) > 37)
        return 0;

    return (MangledHashG(key, mangledkT1) + MangledHashG(key, mangledkT2)) % 1765;
}

constexpr int unmangledkT1[] = {78, 73, 73,  6,   81,  114, 117, 17,  27, 185, 12,  150, 157,
                                57, 88, 206, 100, 167, 33,  244, 152, 21, 93,  220, 144, 231};
constexpr int unmangledkT2[] = {57, 67, 175, 26, 46, 46,  142, 194, 66,  201, 32,  107, 223,
                                58, 72, 42,  58, 86, 198, 70,  102, 140, 0,   141, 47,  130};
constexpr int unmangledkG[]  = {
    0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   188, 177, 127, 136, 0,   108, 0,   0,
    0,   0,   0,   8,   13,  172, 27,  63,  0,   234, 249, 0,   76,  0,   0,   0,   196, 115,
    0,   0,   0,   6,   0,   0,   0,   247, 57,  50,  23,  169, 0,   31,  104, 0,   33,  31,
    0,   0,   0,   7,   224, 0,   67,  0,   0,   1,   72,  105, 68,  0,   0,   0,   0,   0,
    29,  0,   0,   10,  0,   0,   15,  28,  0,   0,   0,   0,   138, 134, 73,  248, 35,  79,
    15,  16,  0,   48,  27,  0,   147, 223, 0,   94,  26,  11,  51,  114, 202, 73,  0,   31,
    83,  0,   141, 102, 0,   203, 18,  10,  34,  74,  65,  0,   12,  0,   0,   16,  0,   66,
    37,  0,   100, 83,  0,   124, 0,   204, 202, 241, 66,  0,   0,   50,  0,   0,   82,  0,
    194, 0,   78,  73,  131, 130, 0,   24,  121, 0,   244, 26,  130, 0,   225, 14,  3,   0,
    110, 22,  7,   112, 0,   60,  158, 0,   0,   0,   58,  29,  114, 0,   0,   56,  102, 117,
    109, 230, 0,   0,   154, 24,  32,  150, 34,  33,  0,   145, 48,  134, 0,   192, 62,  72,
    124, 123, 79,  0,   0,   0,   0,   24,  50,  33,  0,   0,   113, 82,  5,   0,   232, 0,
    0,   0,   91,  43,  42,  249, 0,   128, 26,  30,  120, 136, 0,   70,  11,  0,   98,  55,
    180, 0,   3,   125, 100, 0,   0,   107, 54,  0,   94,  121, 0,   42,  70,  236};

int UnmangledHashG(const char *key, const int *T)
{
    int sum = 0;

    for (int i = 0; key[i] != '\0'; i++)
    {
        sum += T[i] * key[i];
        sum %= 250;
    }
    return unmangledkG[sum];
}

int UnmangledPerfectHash(const char *key)
{
    if (strlen(key) > 26)
        return 0;

    return (UnmangledHashG(key, unmangledkT1) + UnmangledHashG(key, unmangledkT2)) % 250;
}

}  // namespace

namespace sh
{

template <>
const size_t ImmutableString::FowlerNollVoHash<4>::kFnvPrime = 16777619u;

template <>
const size_t ImmutableString::FowlerNollVoHash<4>::kFnvOffsetBasis = 0x811c9dc5u;

template <>
const size_t ImmutableString::FowlerNollVoHash<8>::kFnvPrime =
    static_cast<size_t>(1099511628211ull);

template <>
const size_t ImmutableString::FowlerNollVoHash<8>::kFnvOffsetBasis =
    static_cast<size_t>(0xcbf29ce484222325ull);

uint32_t ImmutableString::mangledNameHash() const
{
    return MangledPerfectHash(data());
}

uint32_t ImmutableString::unmangledNameHash() const
{
    return UnmangledPerfectHash(data());
}

}  // namespace sh
