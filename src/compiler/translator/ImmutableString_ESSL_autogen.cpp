// GENERATED FILE - DO NOT EDIT.
// Generated by gen_builtin_symbols.py using data from builtin_variables.json and
// builtin_function_declarations.txt.
//
// Copyright 2019 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// ImmutableString_ESSL_autogen.cpp: Wrapper for static or pool allocated char arrays, that are
// guaranteed to be valid and unchanged for the duration of the compilation. Implements
// mangledNameHash using perfect hash function from gen_builtin_symbols.py

#include "compiler/translator/ImmutableString.h"

std::ostream &operator<<(std::ostream &os, const sh::ImmutableString &str)
{
    return os.write(str.data(), str.length());
}

#if defined(_MSC_VER)
#    pragma warning(disable : 4309)  // truncation of constant value
#endif

namespace
{

constexpr int mangledkT1[] = {1820, 1697, 612,  1915, 572,  1672, 1376, 13,  1358, 836,
                              123,  1792, 1116, 1707, 1705, 1691, 1633, 85,  473,  531,
                              943,  100,  469,  1194, 727,  1504, 1436, 108, 1501, 1614,
                              656,  1475, 1737, 544,  653,  721,  1816};
constexpr int mangledkT2[] = {467,  1541, 357,  837,  1280, 911,  1668, 1121, 563, 106,
                              1316, 552,  1115, 1126, 617,  523,  238,  1607, 565, 1908,
                              1694, 1880, 702,  1345, 42,   139,  1521, 728,  127, 1920,
                              1312, 780,  435,  914,  1751, 1113, 118};
constexpr int mangledkG[]  = {
    0,    0,    0,    0,    0,    0,    0,    0,    0,    1218, 0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    444,
    0,    0,    0,    0,    0,    0,    0,    1674, 0,    0,    0,    0,    0,    0,    0,    0,
    0,    174,  0,    1368, 0,    0,    0,    0,    0,    0,    0,    0,    1572, 0,    0,    0,
    971,  0,    0,    0,    0,    0,    0,    0,    0,    1378, 0,    0,    0,    0,    0,    0,
    0,    0,    0,    866,  1291, 0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    1280, 0,    0,    0,    0,    1337, 0,    0,    0,    1130,
    0,    1754, 0,    0,    0,    0,    0,    0,    0,    1694, 1636, 808,  0,    0,    0,    0,
    0,    0,    156,  0,    0,    0,    0,    1212, 0,    160,  253,  0,    0,    555,  0,    0,
    127,  1819, 0,    0,    1858, 0,    1127, 515,  1719, 0,    0,    0,    0,    0,    0,    0,
    290,  0,    602,  574,  0,    0,    144,  0,    0,    0,    0,    0,    0,    0,    0,    413,
    0,    0,    1404, 626,  537,  0,    339,  0,    604,  0,    1850, 0,    0,    0,    308,  0,
    630,  0,    0,    1808, 676,  0,    0,    117,  0,    0,    507,  0,    389,  0,    0,    0,
    0,    0,    0,    0,    241,  0,    0,    0,    0,    1448, 0,    0,    0,    1891, 0,    0,
    0,    0,    1445, 0,    0,    0,    147,  0,    0,    0,    0,    1715, 0,    0,    0,    0,
    0,    219,  0,    0,    0,    0,    0,    0,    128,  0,    0,    0,    0,    0,    0,    0,
    183,  0,    961,  0,    566,  1055, 0,    1422, 1773, 0,    1779, 0,    336,  0,    0,    0,
    0,    833,  0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    1355, 430,  1244, 158,
    0,    1581, 1815, 620,  0,    0,    0,    0,    0,    0,    0,    737,  0,    1878, 618,  0,
    0,    119,  0,    0,    1830, 0,    0,    1551, 0,    0,    375,  0,    530,  0,    0,    0,
    0,    1552, 237,  928,  1892, 586,  304,  0,    970,  0,    731,  0,    772,  0,    0,    135,
    0,    734,  1928, 0,    361,  0,    711,  0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    702,  1226, 0,    0,    0,    1554, 0,    0,    0,    1075, 813,  236,  371,  586,
    1499, 0,    332,  0,    1495, 0,    0,    334,  0,    0,    103,  0,    0,    970,  0,    781,
    0,    0,    0,    750,  0,    497,  0,    1623, 0,    0,    0,    0,    0,    845,  0,    0,
    0,    35,   1369, 1600, 0,    0,    0,    0,    0,    1013, 575,  462,  372,  0,    402,  343,
    839,  0,    0,    0,    869,  301,  0,    0,    1837, 0,    206,  130,  0,    0,    0,    0,
    1625, 0,    0,    31,   0,    0,    0,    0,    211,  267,  229,  1201, 0,    0,    335,  177,
    0,    0,    0,    1527, 0,    1870, 0,    761,  0,    534,  0,    0,    0,    0,    0,    1068,
    0,    0,    509,  0,    0,    0,    0,    0,    977,  0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    853,  0,    0,    0,    0,    0,    1730, 0,    0,    0,    0,    755,  722,
    344,  661,  0,    246,  0,    0,    0,    0,    0,    0,    95,   1526, 0,    151,  0,    364,
    567,  0,    0,    0,    1059, 0,    504,  429,  0,    1869, 0,    1857, 0,    0,    307,  0,
    0,    78,   0,    0,    570,  0,    0,    0,    0,    0,    0,    0,    623,  0,    274,  0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    1431, 0,    0,    703,  0,    775,  100,
    0,    762,  439,  0,    217,  706,  0,    696,  0,    1875, 124,  1700, 0,    699,  0,    0,
    0,    0,    425,  890,  329,  211,  0,    0,    0,    0,    33,   0,    0,    234,  0,    0,
    48,   487,  0,    1427, 0,    0,    0,    70,   0,    1842, 0,    0,    502,  779,  0,    0,
    283,  1838, 670,  1161, 0,    1133, 145,  0,    1580, 0,    936,  276,  230,  294,  0,    0,
    0,    217,  0,    806,  720,  0,    1666, 473,  593,  577,  0,    0,    1505, 201,  0,    0,
    0,    0,    1476, 0,    0,    1868, 0,    0,    275,  1902, 0,    0,    739,  0,    0,    0,
    0,    0,    726,  157,  1354, 657,  54,   250,  0,    0,    0,    0,    0,    0,    1647, 0,
    1786, 198,  0,    341,  0,    0,    0,    0,    0,    352,  1181, 10,   758,  0,    459,  394,
    0,    0,    0,    434,  1180, 0,    0,    44,   1356, 0,    0,    1817, 1795, 895,  142,  0,
    0,    0,    153,  0,    557,  0,    0,    0,    0,    0,    0,    0,    0,    621,  1542, 887,
    1446, 121,  0,    0,    711,  0,    395,  0,    0,    0,    1559, 0,    1861, 458,  0,    0,
    701,  399,  98,   1392, 0,    0,    0,    0,    1919, 0,    0,    210,  0,    563,  0,    1522,
    0,    0,    0,    1283, 967,  178,  0,    1091, 456,  239,  61,   1293, 0,    997,  1643, 788,
    1422, 0,    0,    291,  0,    556,  0,    0,    0,    0,    1816, 677,  189,  795,  0,    0,
    0,    882,  0,    0,    0,    1815, 0,    1102, 1407, 160,  0,    614,  1884, 0,    256,  0,
    1527, 0,    0,    1095, 0,    0,    0,    687,  0,    1404, 0,    0,    0,    0,    1216, 0,
    732,  317,  0,    826,  724,  1906, 805,  0,    1633, 0,    1219, 0,    0,    1100, 673,  1119,
    918,  566,  14,   0,    699,  0,    0,    828,  0,    0,    0,    146,  0,    131,  395,  21,
    0,    0,    0,    1062, 1548, 0,    1921, 1506, 488,  0,    859,  0,    0,    665,  101,  0,
    0,    0,    468,  0,    0,    0,    729,  1932, 0,    1710, 441,  0,    718,  0,    0,    925,
    1689, 48,   0,    0,    228,  0,    1433, 0,    94,   0,    179,  482,  66,   546,  134,  1714,
    0,    841,  1228, 0,    831,  1389, 0,    535,  0,    655,  411,  0,    1792, 0,    0,    0,
    0,    0,    847,  1522, 271,  1319, 454,  172,  360,  102,  1465, 0,    641,  0,    920,  0,
    834,  0,    0,    0,    392,  1890, 102,  396,  0,    0,    0,    0,    594,  0,    806,  0,
    51,   0,    196,  0,    0,    694,  358,  533,  149,  0,    0,    1154, 0,    0,    190,  0,
    597,  1777, 46,   0,    208,  1760, 758,  0,    0,    782,  1920, 451,  610,  328,  0,    0,
    257,  265,  1327, 1006, 0,    338,  234,  0,    205,  143,  0,    0,    423,  0,    167,  618,
    0,    245,  0,    885,  0,    1036, 0,    0,    558,  737,  891,  670,  1076, 1423, 597,  858,
    1657, 0,    1467, 0,    0,    38,   107,  734,  1750, 0,    0,    297,  0,    0,    827,  121,
    1645, 1823, 0,    0,    0,    156,  0,    389,  748,  0,    451,  0,    0,    0,    598,  66,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    1729, 376,  241,  343,  744,  0,    271,
    718,  0,    0,    1912, 110,  0,    1072, 846,  0,    0,    0,    0,    604,  199,  0,    0,
    0,    537,  0,    0,    0,    213,  1061, 0,    0,    0,    0,    0,    703,  303,  1717, 0,
    0,    0,    733,  0,    0,    82,   0,    0,    1802, 852,  0,    113,  0,    1035, 0,    1778,
    1643, 0,    0,    903,  402,  1659, 1001, 0,    463,  709,  65,   0,    1707, 0,    0,    0,
    0,    1277, 0,    617,  0,    0,    394,  1191, 0,    0,    0,    12,   0,    95,   0,    94,
    65,   1910, 1877, 78,   1385, 1201, 1811, 0,    0,    0,    252,  181,  418,  0,    1639, 0,
    0,    712,  1668, 840,  269,  440,  0,    1594, 204,  34,   216,  0,    182,  0,    0,    713,
    0,    701,  67,   49,   745,  0,    799,  1420, 1162, 0,    39,   902,  79,   0,    1550, 0,
    134,  516,  0,    0,    0,    181,  244,  0,    0,    1319, 1655, 0,    1788, 332,  0,    0,
    1074, 1312, 1358, 0,    1660, 800,  817,  1817, 989,  564,  140,  126,  555,  121,  0,    0,
    0,    128,  0,    566,  592,  731,  0,    1855, 257,  583,  865,  993,  0,    0,    0,    1379,
    0,    474,  0,    177,  547,  252,  1881, 0,    1367, 493,  0,    337,  0,    671,  24,   26,
    660,  0,    725,  0,    622,  716,  1420, 0,    217,  535,  0,    0,    141,  0,    0,    0,
    0,    0,    666,  0,    0,    441,  0,    501,  0,    376,  651,  0,    0,    0,    1049, 0,
    92,   99,   0,    39,   0,    533,  0,    33,   0,    855,  527,  0,    1759, 0,    699,  0,
    1454, 77,   0,    863,  0,    0,    0,    0,    516,  467,  0,    882,  605,  931,  1072, 0,
    0,    0,    0,    1719, 734,  55,   1460, 189,  1678, 387,  354,  1532, 0,    1374, 0,    534,
    320,  538,  492,  1656, 896,  1823, 0,    1177, 0,    1676, 1205, 10,   253,  520,  0,    0,
    1866, 0,    225,  0,    0,    0,    407,  0,    0,    237,  0,    0,    0,    13,   1681, 0,
    0,    739,  0,    694,  411,  0,    0,    0,    0,    14,   0,    222,  302,  0,    0,    135,
    0,    0,    52,   0,    462,  0,    299,  158,  0,    0,    720,  1248, 0,    93,   404,  277,
    0,    482,  0,    0,    191,  1929, 0,    1793, 133,  119,  572,  109,  919,  0,    598,  0,
    66,   1829, 415,  633,  0,    0,    694,  1088, 0,    0,    929,  1328, 0,    72,   0,    688,
    0,    375,  302,  153,  1418, 683,  382,  140,  771,  0,    0,    0,    1840, 704,  16,   0,
    752,  561,  0,    787,  817,  1773, 1452, 0,    1305, 15,   96,   0,    0,    1820, 117,  0,
    131,  897,  482,  0,    850,  0,    870,  70,   0,    1248, 662,  982,  1834, 669,  0,    0,
    1849, 593,  680,  541,  0,    694,  273,  1917, 763,  0,    303,  356,  546,  454,  857,  589,
    0,    94,   244,  540,  0,    0,    515,  66,   270,  1809, 495,  0,    0,    0,    0,    881,
    627,  0,    0,    0,    76,   417,  519,  258,  84,   719,  0,    0,    364,  245,  0,    0,
    940,  0,    396,  528,  1794, 0,    45,   0,    0,    0,    667,  570,  0,    0,    0,    0,
    0,    0,    148,  730,  29,   818,  0,    19,   427,  177,  0,    0,    0,    817,  1884, 0,
    304,  1692, 0,    0,    1632, 299,  263,  278,  302,  0,    147,  0,    1878, 430,  793,  0,
    369,  848,  1418, 0,    751,  1824, 171,  1440, 0,    0,    0,    892,  0,    0,    465,  0,
    0,    0,    596,  0,    682,  576,  596,  1586, 0,    838,  766,  0,    837,  1920, 0,    0,
    0,    1709, 311,  0,    280,  226,  826,  620,  1769, 0,    539,  0,    0,    0,    0,    1373,
    0,    1465, 481,  0,    0,    0,    58,   0,    0,    0,    115,  0,    698,  0,    543,  0,
    0,    1098, 0,    173,  0,    0,    1895, 225,  499,  0,    54,   0,    0,    406,  0,    1516,
    130,  0,    978,  287,  0,    686,  654,  778,  0,    0,    779,  774,  887,  0,    198,  2,
    0,    85,   6,    0,    0,    1240, 41,   0,    313,  759,  602,  0,    0,    1528, 0,    0,
    246,  275,  803,  0,    1864, 87,   450,  439,  253,  838,  75,   336,  574,  0,    0,    0,
    1582, 568,  0,    723,  0,    0,    0,    0,    132,  228,  0,    0,    1432, 1648, 0,    284,
    0,    203,  0,    1792, 0,    0,    0,    750,  0,    0,    0,    312,  4,    221,  0,    1153,
    1534, 470,  636,  0,    488,  0,    0,    0,    0,    416,  3,    1774, 689,  508,  1885, 87,
    745,  0,    229,  1373, 0,    731,  1720, 1502, 0,    602,  0,    0,    443,  0,    0,    1168,
    559,  495,  1121, 236,  0,    0,    544,  0,    912,  1658, 0,    0,    0,    1091, 906,  1833,
    0,    0,    1824, 705,  400,  1785, 498,  397,  0,    240,  1363, 1475, 635,  402,  248,  659,
    0,    0,    1311, 0,    653,  0,    1508, 867,  0,    1847, 69,   0,    623,  1809, 0,    0,
    197,  425,  0,    0,    402,  1806, 460,  327,  1232, 246,  314,  612,  0,    0,    0,    0,
    658,  853,  242,  73,   996,  0,    700,  405,  0,    0,    0,    9,    0,    54,   0,    0,
    0,    478,  0,    326,  1725, 100,  0,    319,  0,    0,    880,  289,  177,  0,    90,   744,
    899,  1675, 0,    0,    1777, 639,  0,    894,  0,    1817, 0,    603,  0,    0,    354,  106,
    0,    683,  0,    0,    0,    480,  889,  924,  0,    0,    675,  697,  1848, 1923, 0,    0,
    0,    1176, 0,    0,    413,  342,  919,  0,    774,  22,   0,    467,  405,  360,  317,  451,
    930,  930,  0,    0,    742,  195,  0,    0,    0,    0,    0,    1261, 913,  0,    0,    103,
    225,  607,  0,    552,  0,    0,    626,  67,   0,    0,    0,    192,  1829, 757,  0,    67,
    233,  1609};

int MangledHashG(const char *key, const int *T)
{
    int sum = 0;

    for (int i = 0; key[i] != '\0'; i++)
    {
        sum += T[i] * key[i];
        sum %= 1938;
    }
    return mangledkG[sum];
}

int MangledPerfectHash(const char *key)
{
    if (strlen(key) > 37)
        return 0;

    return (MangledHashG(key, mangledkT1) + MangledHashG(key, mangledkT2)) % 1938;
}

constexpr int unmangledkT1[] = {66, 79,  135, 35,  114, 94,  124, 70, 90,  105, 129, 184, 83,
                                66, 139, 48,  229, 79,  144, 79,  48, 235, 236, 220, 40,  241};
constexpr int unmangledkT2[] = {131, 165, 51, 244, 138, 186, 43,  13, 37,  33,  105, 44, 100,
                                189, 19,  79, 123, 5,   57,  225, 95, 122, 186, 249, 16, 239};
constexpr int unmangledkG[]  = {
    0,   0,   0,   161, 0,   0,   231, 0,   0,   0,   0,   0,   80,  0,   140, 223, 14,  63,
    0,   0,   0,   0,   0,   0,   15,  137, 75,  0,   80,  0,   46,  0,   55,  92,  0,   110,
    0,   0,   0,   0,   0,   211, 101, 108, 0,   83,  0,   18,  0,   0,   189, 188, 93,  97,
    26,  0,   0,   0,   109, 146, 204, 167, 0,   0,   0,   153, 38,  0,   0,   0,   57,  0,
    0,   73,  0,   0,   49,  184, 5,   0,   2,   150, 192, 33,  212, 158, 29,  72,  1,   23,
    151, 119, 219, 0,   160, 111, 0,   0,   0,   36,  0,   0,   0,   201, 145, 0,   35,  0,
    71,  0,   154, 117, 195, 86,  0,   18,  0,   73,  0,   0,   181, 86,  0,   209, 61,  0,
    64,  214, 0,   65,  62,  221, 0,   20,  129, 0,   80,  3,   0,   207, 27,  3,   0,   0,
    113, 0,   127, 17,  0,   62,  102, 191, 0,   0,   54,  141, 0,   72,  138, 58,  192, 241,
    1,   61,  0,   207, 213, 0,   132, 198, 0,   0,   0,   110, 230, 0,   4,   36,  0,   0,
    2,   0,   130, 19,  167, 0,   0,   208, 106, 22,  147, 0,   21,  76,  230, 0,   0,   208,
    0,   0,   29,  0,   14,  155, 0,   0,   180, 48,  0,   124, 0,   8,   0,   47,  119, 0,
    245, 119, 155, 112, 105, 138, 181, 69,  103, 66,  79,  76,  195, 112, 94,  26,  0,   74,
    185, 126, 49,  145, 59,  0,   31,  99,  105, 131, 38,  87,  0,   0,   0,   175};

int UnmangledHashG(const char *key, const int *T)
{
    int sum = 0;

    for (int i = 0; key[i] != '\0'; i++)
    {
        sum += T[i] * key[i];
        sum %= 250;
    }
    return unmangledkG[sum];
}

int UnmangledPerfectHash(const char *key)
{
    if (strlen(key) > 26)
        return 0;

    return (UnmangledHashG(key, unmangledkT1) + UnmangledHashG(key, unmangledkT2)) % 250;
}

}  // namespace

namespace sh
{

template <>
const size_t ImmutableString::FowlerNollVoHash<4>::kFnvPrime = 16777619u;

template <>
const size_t ImmutableString::FowlerNollVoHash<4>::kFnvOffsetBasis = 0x811c9dc5u;

template <>
const size_t ImmutableString::FowlerNollVoHash<8>::kFnvPrime =
    static_cast<size_t>(1099511628211ull);

template <>
const size_t ImmutableString::FowlerNollVoHash<8>::kFnvOffsetBasis =
    static_cast<size_t>(0xcbf29ce484222325ull);

uint32_t ImmutableString::mangledNameHash() const
{
    return MangledPerfectHash(data());
}

uint32_t ImmutableString::unmangledNameHash() const
{
    return UnmangledPerfectHash(data());
}

}  // namespace sh
