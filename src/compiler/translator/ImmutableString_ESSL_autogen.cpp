// GENERATED FILE - DO NOT EDIT.
// Generated by gen_builtin_symbols.py using data from builtin_variables.json and
// builtin_function_declarations.txt.
//
// Copyright 2020 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// ImmutableString_ESSL_autogen.cpp: Wrapper for static or pool allocated char arrays, that are
// guaranteed to be valid and unchanged for the duration of the compilation. Implements
// mangledNameHash using perfect hash function from gen_builtin_symbols.py

#include "compiler/translator/ImmutableString.h"

std::ostream &operator<<(std::ostream &os, const sh::ImmutableString &str)
{
    return os.write(str.data(), str.length());
}

#if defined(_MSC_VER)
#    pragma warning(disable : 4309)  // truncation of constant value
#endif

namespace
{

constexpr int mangledkT1[] = {943,  525,  1696, 650,  1223, 173,  1692, 335,  747, 356,
                              1767, 312,  517,  715,  1374, 1512, 1694, 421,  116, 687,
                              554,  47,   186,  715,  440,  1802, 1087, 1514, 64,  358,
                              1546, 1417, 781,  1341, 1458, 1496, 376};
constexpr int mangledkT2[] = {1385, 191,  1111, 418,  537,  914,  1754, 1004, 80,  488,
                              205,  1873, 670,  1655, 1258, 1759, 758,  1703, 437, 1213,
                              1909, 391,  274,  150,  1263, 1676, 79,   813,  630, 972,
                              1848, 1657, 1407, 1168, 915,  568,  1350};
constexpr int mangledkG[]  = {
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    781,  209,  1072, 0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    1516, 0,    1685, 0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    569,  456,  0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    1509, 474,  0,    0,    341,  0,
    0,    0,    0,    1752, 483,  59,   0,    0,    0,    570,  0,    0,    0,    0,    0,    0,
    704,  0,    0,    0,    1723, 468,  0,    0,    848,  0,    0,    0,    0,    626,  0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    1322, 0,    1751, 575,  7,    0,    0,
    0,    0,    0,    0,    402,  0,    0,    0,    0,    0,    0,    0,    0,    58,   0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    1623, 139,  0,    0,    550,  0,    0,    0,
    0,    0,    0,    0,    0,    536,  1338, 0,    0,    0,    0,    1749, 0,    0,    0,    1671,
    0,    0,    135,  0,    0,    1536, 0,    0,    1082, 14,   0,    598,  274,  0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    145,  1663, 0,    0,    0,    0,    0,    0,    659,
    0,    0,    0,    0,    0,    371,  0,    0,    0,    0,    0,    0,    378,  0,    0,    0,
    653,  1714, 0,    0,    0,    673,  0,    0,    0,    0,    0,    0,    0,    0,    1864, 0,
    0,    126,  0,    0,    1359, 0,    305,  377,  140,  0,    284,  797,  0,    0,    0,    322,
    0,    0,    0,    0,    1727, 0,    0,    0,    0,    0,    403,  1057, 386,  801,  0,    0,
    0,    528,  0,    0,    0,    0,    0,    344,  812,  0,    0,    0,    0,    315,  0,    1148,
    573,  0,    0,    41,   0,    0,    0,    0,    0,    0,    674,  0,    397,  0,    0,    0,
    917,  1385, 0,    0,    0,    1659, 0,    0,    682,  0,    1835, 0,    82,   909,  0,    0,
    0,    369,  0,    0,    0,    542,  58,   0,    0,    0,    0,    1486, 601,  0,    0,    534,
    1250, 0,    0,    1153, 0,    0,    0,    0,    10,   0,    0,    0,    561,  0,    0,    1258,
    0,    0,    0,    0,    0,    0,    0,    1915, 0,    0,    0,    342,  0,    0,    1765, 0,
    1218, 0,    144,  500,  0,    1742, 56,   0,    478,  93,   0,    0,    761,  0,    0,    0,
    0,    0,    918,  1060, 0,    0,    0,    715,  1546, 140,  0,    531,  0,    0,    482,  747,
    17,   1175, 0,    563,  234,  0,    603,  535,  1234, 0,    980,  0,    0,    0,    0,    0,
    0,    0,    0,    219,  419,  1295, 27,   0,    0,    0,    1470, 1745, 0,    0,    0,    83,
    0,    0,    0,    0,    0,    0,    704,  1280, 1352, 0,    0,    585,  0,    97,   0,    93,
    935,  0,    455,  0,    0,    0,    0,    0,    0,    367,  0,    384,  0,    0,    0,    0,
    0,    568,  0,    0,    857,  0,    1431, 357,  0,    583,  53,   1064, 0,    0,    0,    0,
    0,    0,    671,  0,    228,  633,  0,    1309, 1506, 1172, 1572, 0,    64,   450,  0,    263,
    0,    1717, 0,    0,    124,  0,    0,    0,    0,    0,    0,    404,  815,  1387, 474,  0,
    553,  0,    638,  506,  344,  0,    0,    0,    1896, 771,  0,    0,    0,    729,  988,  0,
    0,    0,    0,    1913, 0,    509,  915,  1636, 595,  136,  0,    0,    0,    428,  0,    0,
    574,  0,    0,    1899, 0,    0,    1614, 187,  0,    0,    374,  0,    0,    0,    0,    0,
    0,    0,    649,  1265, 0,    472,  837,  981,  1604, 657,  104,  0,    0,    0,    945,  0,
    279,  776,  209,  175,  421,  0,    303,  37,   255,  552,  0,    0,    317,  225,  58,   0,
    489,  0,    0,    0,    710,  1674, 318,  0,    1789, 0,    0,    905,  0,    393,  1486, 0,
    342,  0,    764,  272,  643,  605,  0,    0,    848,  700,  0,    229,  0,    0,    1773, 214,
    152,  0,    0,    0,    0,    0,    771,  1835, 1757, 1845, 0,    1419, 214,  967,  0,    1525,
    0,    0,    879,  0,    0,    0,    1157, 0,    0,    573,  0,    381,  1054, 535,  724,  740,
    1088, 579,  1421, 0,    468,  0,    443,  162,  0,    519,  0,    1523, 0,    1198, 554,  0,
    0,    0,    0,    1634, 31,   0,    77,   0,    10,   0,    470,  416,  1208, 0,    0,    0,
    0,    342,  0,    0,    0,    582,  0,    0,    1215, 0,    0,    0,    430,  21,   1153, 706,
    340,  0,    0,    0,    607,  0,    0,    0,    0,    147,  0,    438,  0,    309,  0,    1899,
    0,    118,  837,  121,  522,  318,  234,  0,    0,    642,  0,    0,    0,    23,   146,  0,
    709,  0,    517,  580,  1007, 0,    0,    0,    0,    501,  1627, 0,    1382, 1462, 0,    1250,
    0,    45,   0,    0,    0,    1467, 0,    1446, 515,  1157, 757,  0,    1186, 1740, 596,  0,
    0,    1349, 0,    0,    0,    447,  0,    0,    503,  807,  1407, 0,    1617, 34,   0,    0,
    931,  0,    0,    1828, 0,    0,    0,    0,    902,  760,  0,    453,  0,    364,  0,    0,
    0,    0,    0,    868,  0,    0,    0,    828,  1378, 156,  0,    0,    1244, 1405, 0,    0,
    0,    696,  755,  463,  828,  0,    0,    1501, 0,    148,  0,    0,    0,    1861, 0,    0,
    0,    165,  0,    133,  1645, 0,    0,    1107, 0,    1322, 962,  796,  459,  941,  211,  695,
    0,    0,    915,  0,    0,    1766, 205,  383,  90,   1163, 0,    0,    0,    507,  1638, 0,
    0,    0,    0,    259,  38,   1613, 536,  1592, 309,  0,    0,    417,  0,    0,    0,    251,
    0,    0,    1349, 0,    168,  1839, 1697, 0,    0,    0,    1812, 0,    1521, 1608, 1128, 0,
    392,  0,    0,    512,  0,    0,    0,    0,    623,  0,    441,  0,    1820, 0,    648,  0,
    458,  927,  0,    0,    0,    1530, 13,   341,  0,    1832, 545,  0,    250,  522,  0,    1040,
    0,    624,  1766, 593,  993,  0,    1127, 135,  76,   749,  408,  0,    1823, 1537, 0,    0,
    980,  0,    0,    0,    0,    0,    321,  653,  0,    0,    0,    0,    308,  331,  594,  0,
    0,    378,  1802, 0,    0,    0,    352,  0,    564,  244,  0,    0,    0,    371,  118,  891,
    415,  0,    960,  0,    0,    151,  0,    0,    186,  299,  0,    11,   1790, 144,  368,  0,
    0,    64,   0,    0,    237,  637,  849,  1007, 603,  0,    125,  0,    4,    0,    339,  187,
    925,  1409, 479,  1573, 25,   0,    311,  690,  0,    602,  1822, 0,    928,  0,    750,  468,
    987,  0,    61,   0,    887,  1078, 853,  252,  1834, 0,    0,    258,  0,    419,  0,    667,
    8,    0,    0,    1708, 0,    0,    0,    0,    0,    0,    1722, 977,  0,    69,   1813, 199,
    0,    989,  955,  1812, 1334, 560,  0,    0,    0,    0,    924,  584,  0,    697,  692,  0,
    0,    0,    733,  0,    842,  497,  0,    0,    1465, 0,    0,    0,    0,    0,    1009, 604,
    0,    1407, 0,    0,    457,  0,    0,    0,    475,  1409, 0,    69,   0,    0,    0,    0,
    759,  0,    0,    0,    0,    54,   0,    524,  316,  1333, 1161, 49,   588,  0,    177,  970,
    723,  97,   0,    1409, 0,    1791, 285,  734,  0,    1770, 577,  0,    933,  0,    104,  0,
    2,    415,  983,  0,    967,  0,    0,    0,    569,  30,   419,  0,    0,    1049, 1514, 247,
    614,  0,    0,    1347, 0,    881,  0,    0,    350,  368,  516,  547,  207,  1436, 168,  0,
    1358, 0,    0,    796,  1192, 768,  1092, 964,  0,    1252, 1202, 0,    1057, 486,  300,  0,
    0,    0,    0,    120,  0,    1558, 649,  891,  0,    0,    248,  0,    0,    445,  0,    0,
    0,    499,  1057, 551,  346,  56,   1895, 0,    0,    561,  0,    320,  461,  581,  0,    0,
    790,  527,  270,  0,    1150, 1812, 968,  1749, 707,  744,  167,  0,    1485, 549,  0,    1654,
    979,  0,    213,  466,  415,  447,  190,  298,  0,    0,    0,    500,  0,    43,   641,  183,
    0,    1232, 0,    0,    0,    0,    1504, 534,  0,    1374, 997,  0,    609,  0,    215,  654,
    0,    1700, 493,  1585, 241,  1937, 0,    0,    138,  395,  203,  597,  707,  670,  1943, 1771,
    1612, 0,    688,  767,  1006, 0,    385,  785,  360,  0,    117,  795,  118,  0,    1535, 413,
    495,  884,  551,  0,    0,    775,  347,  1000, 898,  594,  229,  436,  660,  262,  669,  31,
    0,    166,  0,    863,  0,    1241, 0,    1883, 0,    122,  91,   0,    0,    0,    410,  396,
    0,    787,  656,  912,  570,  0,    530,  0,    324,  1757, 0,    0,    0,    259,  0,    1926,
    0,    819,  818,  66,   814,  1364, 167,  0,    0,    321,  586,  1704, 0,    248,  463,  160,
    1281, 306,  0,    1212, 1124, 0,    0,    0,    0,    0,    1788, 1451, 0,    0,    1007, 1780,
    203,  694,  0,    0,    678,  1689, 451,  1319, 932,  147,  270,  267,  65,   599,  91,   405,
    0,    587,  438,  0,    0,    87,   744,  0,    1822, 1654, 773,  0,    0,    1450, 0,    0,
    124,  1064, 1301, 0,    0,    937,  742,  0,    1276, 0,    312,  0,    351,  882,  334,  185,
    0,    225,  1270, 687,  590,  0,    0,    0,    486,  899,  127,  0,    0,    0,    1102, 796,
    1016, 0,    0,    139,  982,  0,    206,  0,    961,  1227, 1742, 423,  0,    0,    1503, 1229,
    288,  0,    13,   1782, 0,    0,    0,    1250, 0,    0,    0,    0,    0,    3,    0,    0,
    0,    0,    938,  893,  831,  1642, 0,    0,    908,  653,  782,  6,    1294, 320,  946,  943,
    175,  0,    807,  337,  0,    297,  0,    1066, 0,    918,  481,  0,    1776, 0,    729,  1658,
    0,    282,  142,  0,    0,    46,   0,    0,    363,  197,  1513, 329,  1337, 0,    706,  0,
    0,    1265, 1308, 161,  256,  760,  0,    1772, 1540, 84,   102,  427,  0,    635,  0,    1929,
    357,  0,    0,    307,  310,  830,  107,  390,  515,  261,  0,    0,    1331, 1209, 1865, 0,
    134,  0,    0,    0,    0,    323,  213,  648,  237,  933,  838,  1265, 0,    1901, 0,    1736,
    1708, 0,    959,  0,    0,    0,    901,  0,    867,  0,    1752, 0,    624,  0,    0,    1582,
    0,    302,  27,   0,    795,  0,    1061, 0,    72,   0,    1495, 0,    0,    1639, 386,  0,
    432,  0,    364,  623,  0,    911,  160,  0,    972,  91,   639,  0,    824,  0,    0,    1437,
    569,  573,  0,    375,  0,    294,  317,  0,    607,  1741, 0,    356,  1812, 0,    1487, 813,
    703,  586,  0,    762,  70,   1755, 0,    108,  713,  0,    219,  748,  1724, 0,    751,  1551,
    180,  1400, 0,    785,  172,  0,    0,    0,    268,  178,  0,    402,  63,   384,  612,  292,
    0,    680,  0,    0,    0,    78,   754,  890,  1289, 145,  0,    407,  0,    446,  853,  0,
    0,    1686, 907,  965,  269,  1128, 0,    780,  1649, 715,  293,  1843, 324,  0,    1570, 0,
    103,  0,    779,  65,   601,  47,   0,    854,  284,  235,  0,    0,    0,    454,  454,  1815,
    680,  822,  929,  1224, 0,    898,  483,  990,  394,  742,  0,    0,    0,    0,    0,    1732,
    0,    0,    0,    0,    534,  0,    0,    625,  0,    0,    0,    301,  0,    173,  0,    0,
    919,  0,    878,  0,    751,  0,    439,  328,  966,  0,    1619, 1137, 0,    137,  1264, 527,
    0,    0,    1355, 22,   638,  671,  27,   1250, 0,    672,  669,  0,    1892, 141,  280,  892,
    0,    268,  1284, 325,  352,  0,    1513, 427,  1568, 0,    0,    173,  438,  0,    310,  368,
    1239, 0,    0,    222,  570,  678,  1606, 0,    0,    807,  0,    0,    0,    265,  1366, 308,
    0,    0,    1844, 567,  0,    259,  1059, 0,    288,  1749, 1679, 0,    727,  20,   894,  0,
    926,  1846, 692,  1879, 1849, 1204, 0,    0,    0,    0,    0,    0,    260,  430,  0,    153,
    0,    436,  857,  421,  698,  0,    1598, 826,  0,    28,   1700, 1526, 62,   1684, 0,    0,
    0,    565,  203,  520,  0,    164,  68,   1542, 0,    0,    0,    0,    1590, 1441, 0,    301,
    0,    950,  825,  0,    631,  0,    0,    0,    11,   0,    0,    1512, 0,    1731, 833,  856,
    602,  1292, 438,  505,  83,   1865, 516,  0,    596,  600,  845,  668,  0,    0,    0,    515,
    0,    870,  0,    22,   624,  513,  646,  261,  408,  142,  615,  0,    0,    0,    188,  1022,
    0,    0,    443,  50,   0,    0,    974,  52,   1340, 1349, 460,  0,    0,    1,    632,  337,
    232,  1158, 0,    1707, 424,  0,    222,  0,    1622, 0,    65};

int MangledHashG(const char *key, const int *T)
{
    int sum = 0;

    for (int i = 0; key[i] != '\0'; i++)
    {
        sum += T[i] * key[i];
        sum %= 1947;
    }
    return mangledkG[sum];
}

int MangledPerfectHash(const char *key)
{
    if (strlen(key) > 37)
        return 0;

    return (MangledHashG(key, mangledkT1) + MangledHashG(key, mangledkT2)) % 1947;
}

constexpr int unmangledkT1[] = {166, 74,  101, 56,  124, 213, 154, 172, 8,   92, 58,  217, 168,
                                111, 182, 122, 135, 29,  1,   29,  179, 111, 93, 123, 52,  5};
constexpr int unmangledkT2[] = {218, 49,  103, 86,  58, 0,  106, 163, 66,  146, 99,  182, 151,
                                115, 191, 174, 170, 91, 35, 129, 94,  115, 9,   200, 121, 229};
constexpr int unmangledkG[]  = {
    0,   0,   135, 0,   0,   0,   25,  148, 0,   0,   38,  130, 151, 0,   0,   0,   0,   13,  72,
    0,   0,   72,  233, 0,   0,   22,  0,   0,   226, 0,   0,   68,  233, 0,   164, 0,   14,  112,
    97,  0,   0,   0,   21,  66,  154, 0,   0,   214, 0,   0,   242, 68,  23,  0,   14,  86,  107,
    24,  68,  0,   36,  0,   31,  0,   182, 140, 0,   0,   0,   232, 8,   142, 0,   89,  0,   0,
    120, 49,  0,   0,   25,  209, 0,   0,   179, 20,  171, 136, 31,  202, 52,  201, 0,   11,  125,
    218, 92,  83,  0,   153, 87,  0,   75,  41,  95,  113, 0,   0,   32,  126, 222, 25,  0,   59,
    159, 0,   154, 224, 123, 20,  0,   0,   63,  26,  0,   0,   173, 18,  27,  0,   0,   96,  229,
    0,   224, 93,  29,  158, 146, 221, 1,   235, 47,  0,   79,  0,   0,   27,  0,   0,   232, 59,
    93,  0,   0,   227, 96,  0,   50,  85,  217, 133, 0,   217, 59,  154, 57,  0,   13,  0,   57,
    0,   0,   112, 125, 208, 86,  0,   139, 0,   38,  156, 147, 78,  229, 110, 160, 0,   0,   150,
    0,   172, 0,   92,  0,   0,   0,   85,  0,   0,   0,   117, 0,   118, 0,   185, 65,  0,   53,
    98,  93,  0,   24,  180, 62,  191, 56,  4,   0,   96,  46,  144, 48,  100, 5,   185, 0,   195,
    182, 44,  22,  77,  210, 104, 0,   103, 68,  60,  10,  46,  0,   96,  0,   0};

int UnmangledHashG(const char *key, const int *T)
{
    int sum = 0;

    for (int i = 0; key[i] != '\0'; i++)
    {
        sum += T[i] * key[i];
        sum %= 244;
    }
    return unmangledkG[sum];
}

int UnmangledPerfectHash(const char *key)
{
    if (strlen(key) > 26)
        return 0;

    return (UnmangledHashG(key, unmangledkT1) + UnmangledHashG(key, unmangledkT2)) % 244;
}

}  // namespace

namespace sh
{

template <>
const size_t ImmutableString::FowlerNollVoHash<4>::kFnvPrime = 16777619u;

template <>
const size_t ImmutableString::FowlerNollVoHash<4>::kFnvOffsetBasis = 0x811c9dc5u;

template <>
const size_t ImmutableString::FowlerNollVoHash<8>::kFnvPrime =
    static_cast<size_t>(1099511628211ull);

template <>
const size_t ImmutableString::FowlerNollVoHash<8>::kFnvOffsetBasis =
    static_cast<size_t>(0xcbf29ce484222325ull);

uint32_t ImmutableString::mangledNameHash() const
{
    return MangledPerfectHash(data());
}

uint32_t ImmutableString::unmangledNameHash() const
{
    return UnmangledPerfectHash(data());
}

}  // namespace sh
