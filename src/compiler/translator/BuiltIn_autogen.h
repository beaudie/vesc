// GENERATED FILE - DO NOT EDIT.
// Generated by gen_builtin_symbols.py using data from builtin_variables.json.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// BuiltIn_autogen.h:
//   Compile-time initialized built-ins.

#ifndef COMPILER_TRANSLATOR_BUILTIN_AUTOGEN_H_
#define COMPILER_TRANSLATOR_BUILTIN_AUTOGEN_H_

#include "compiler/translator/ImmutableString.h"
#include "compiler/translator/StaticType.h"
#include "compiler/translator/Symbol.h"
#include "compiler/translator/SymbolUniqueId.h"

namespace sh
{

// This is a class instead of a namespace so that we can restrict access to TSymbolUniqueId
// constructor taking an integer to here.
class BuiltInId
{
  public:
    static constexpr const TSymbolUniqueId gl_FragCoord             = TSymbolUniqueId(0);
    static constexpr const TSymbolUniqueId gl_FrontFacing           = TSymbolUniqueId(1);
    static constexpr const TSymbolUniqueId gl_PointCoord            = TSymbolUniqueId(2);
    static constexpr const TSymbolUniqueId gl_FragColor             = TSymbolUniqueId(3);
    static constexpr const TSymbolUniqueId gl_FragDepth             = TSymbolUniqueId(4);
    static constexpr const TSymbolUniqueId gl_SecondaryFragColorEXT = TSymbolUniqueId(5);
    static constexpr const TSymbolUniqueId gl_LastFragColor         = TSymbolUniqueId(6);
    static constexpr const TSymbolUniqueId gl_LastFragColorARM      = TSymbolUniqueId(7);
    static constexpr const TSymbolUniqueId gl_PrimitiveID           = TSymbolUniqueId(8);
    static constexpr const TSymbolUniqueId gl_Layer                 = TSymbolUniqueId(9);
    static constexpr const TSymbolUniqueId gl_Position              = TSymbolUniqueId(10);
    static constexpr const TSymbolUniqueId gl_PointSize             = TSymbolUniqueId(11);
    static constexpr const TSymbolUniqueId gl_InstanceID            = TSymbolUniqueId(12);
    static constexpr const TSymbolUniqueId gl_VertexID              = TSymbolUniqueId(13);
    static constexpr const TSymbolUniqueId gl_ViewportIndex         = TSymbolUniqueId(14);
    static constexpr const TSymbolUniqueId gl_LayerVS               = TSymbolUniqueId(15);
    static constexpr const TSymbolUniqueId gl_NumWorkGroups         = TSymbolUniqueId(16);
    static constexpr const TSymbolUniqueId gl_WorkGroupSize         = TSymbolUniqueId(17);
    static constexpr const TSymbolUniqueId gl_WorkGroupID           = TSymbolUniqueId(18);
    static constexpr const TSymbolUniqueId gl_LocalInvocationID     = TSymbolUniqueId(19);
    static constexpr const TSymbolUniqueId gl_GlobalInvocationID    = TSymbolUniqueId(20);
    static constexpr const TSymbolUniqueId gl_LocalInvocationIndex  = TSymbolUniqueId(21);
    static constexpr const TSymbolUniqueId gl_PrimitiveIDIn         = TSymbolUniqueId(22);
    static constexpr const TSymbolUniqueId gl_InvocationID          = TSymbolUniqueId(23);
    static constexpr const TSymbolUniqueId gl_PrimitiveIDGS         = TSymbolUniqueId(24);
    static constexpr const TSymbolUniqueId gl_LayerGS               = TSymbolUniqueId(25);
    static constexpr const TSymbolUniqueId gl_ViewID_OVR            = TSymbolUniqueId(26);
    static constexpr const TSymbolUniqueId gl_ViewID_OVRESSL1       = TSymbolUniqueId(27);
};

constexpr const int kLastStaticBuiltInId = 27;

namespace BuiltInName
{

constexpr const ImmutableString gl_FragDepth("gl_FragDepth");
constexpr const ImmutableString gl_WorkGroupSize("gl_WorkGroupSize");
constexpr const ImmutableString gl_NumWorkGroups("gl_NumWorkGroups");
constexpr const ImmutableString gl_Position("gl_Position");
constexpr const ImmutableString gl_Layer("gl_Layer");
constexpr const ImmutableString gl_LocalInvocationID("gl_LocalInvocationID");
constexpr const ImmutableString gl_PrimitiveIDIn("gl_PrimitiveIDIn");
constexpr const ImmutableString gl_LastFragColor("gl_LastFragColor");
constexpr const ImmutableString gl_FrontFacing("gl_FrontFacing");
constexpr const ImmutableString gl_VertexID("gl_VertexID");
constexpr const ImmutableString gl_PrimitiveID("gl_PrimitiveID");
constexpr const ImmutableString gl_WorkGroupID("gl_WorkGroupID");
constexpr const ImmutableString gl_LocalInvocationIndex("gl_LocalInvocationIndex");
constexpr const ImmutableString gl_GlobalInvocationID("gl_GlobalInvocationID");
constexpr const ImmutableString gl_FragColor("gl_FragColor");
constexpr const ImmutableString gl_InvocationID("gl_InvocationID");
constexpr const ImmutableString gl_ViewID_OVR("gl_ViewID_OVR");
constexpr const ImmutableString gl_FragCoord("gl_FragCoord");
constexpr const ImmutableString gl_PointCoord("gl_PointCoord");
constexpr const ImmutableString gl_InstanceID("gl_InstanceID");
constexpr const ImmutableString gl_LastFragColorARM("gl_LastFragColorARM");
constexpr const ImmutableString gl_PointSize("gl_PointSize");
constexpr const ImmutableString gl_ViewportIndex("gl_ViewportIndex");
constexpr const ImmutableString gl_SecondaryFragColorEXT("gl_SecondaryFragColorEXT");

}  // namespace BuiltInName

// TODO: Would be nice to make this a class instead of a namespace so that we could friend this
// from TVariable. Now symbol constructors taking an id have to be public even though they're not
// supposed to be accessible from outside of here.
namespace BuiltInVariable
{

constexpr const TVariable gl_FragCoord(BuiltInId::gl_FragCoord,
                                       BuiltInName::gl_FragCoord,
                                       SymbolType::BuiltIn,
                                       TExtension::UNDEFINED,
                                       StaticType::Get<EbtFloat, EbpMedium, EvqFragCoord, 4, 1>());
constexpr const TVariable gl_FrontFacing(
    BuiltInId::gl_FrontFacing,
    BuiltInName::gl_FrontFacing,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtBool, EbpUndefined, EvqFrontFacing, 1, 1>());
constexpr const TVariable gl_PointCoord(
    BuiltInId::gl_PointCoord,
    BuiltInName::gl_PointCoord,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtFloat, EbpMedium, EvqPointCoord, 2, 1>());
constexpr const TVariable gl_FragColor(BuiltInId::gl_FragColor,
                                       BuiltInName::gl_FragColor,
                                       SymbolType::BuiltIn,
                                       TExtension::UNDEFINED,
                                       StaticType::Get<EbtFloat, EbpMedium, EvqFragColor, 4, 1>());
constexpr const TVariable gl_FragDepth(BuiltInId::gl_FragDepth,
                                       BuiltInName::gl_FragDepth,
                                       SymbolType::BuiltIn,
                                       TExtension::UNDEFINED,
                                       StaticType::Get<EbtFloat, EbpHigh, EvqFragDepth, 1, 1>());
constexpr const TVariable gl_SecondaryFragColorEXT(
    BuiltInId::gl_SecondaryFragColorEXT,
    BuiltInName::gl_SecondaryFragColorEXT,
    SymbolType::BuiltIn,
    TExtension::EXT_blend_func_extended,
    StaticType::Get<EbtFloat, EbpMedium, EvqSecondaryFragColorEXT, 4, 1>());
constexpr const TVariable gl_LastFragColor(
    BuiltInId::gl_LastFragColor,
    BuiltInName::gl_LastFragColor,
    SymbolType::BuiltIn,
    TExtension::NV_shader_framebuffer_fetch,
    StaticType::Get<EbtFloat, EbpMedium, EvqLastFragColor, 4, 1>());
constexpr const TVariable gl_LastFragColorARM(
    BuiltInId::gl_LastFragColorARM,
    BuiltInName::gl_LastFragColorARM,
    SymbolType::BuiltIn,
    TExtension::ARM_shader_framebuffer_fetch,
    StaticType::Get<EbtFloat, EbpMedium, EvqLastFragColor, 4, 1>());
constexpr const TVariable gl_PrimitiveID(BuiltInId::gl_PrimitiveID,
                                         BuiltInName::gl_PrimitiveID,
                                         SymbolType::BuiltIn,
                                         TExtension::EXT_geometry_shader,
                                         StaticType::Get<EbtInt, EbpHigh, EvqPrimitiveID, 1, 1>());
constexpr const TVariable gl_Layer(BuiltInId::gl_Layer,
                                   BuiltInName::gl_Layer,
                                   SymbolType::BuiltIn,
                                   TExtension::EXT_geometry_shader,
                                   StaticType::Get<EbtInt, EbpHigh, EvqLayer, 1, 1>());
constexpr const TVariable gl_Position(BuiltInId::gl_Position,
                                      BuiltInName::gl_Position,
                                      SymbolType::BuiltIn,
                                      TExtension::UNDEFINED,
                                      StaticType::Get<EbtFloat, EbpHigh, EvqPosition, 4, 1>());
constexpr const TVariable gl_PointSize(BuiltInId::gl_PointSize,
                                       BuiltInName::gl_PointSize,
                                       SymbolType::BuiltIn,
                                       TExtension::UNDEFINED,
                                       StaticType::Get<EbtFloat, EbpMedium, EvqPointSize, 1, 1>());
constexpr const TVariable gl_InstanceID(BuiltInId::gl_InstanceID,
                                        BuiltInName::gl_InstanceID,
                                        SymbolType::BuiltIn,
                                        TExtension::UNDEFINED,
                                        StaticType::Get<EbtInt, EbpHigh, EvqInstanceID, 1, 1>());
constexpr const TVariable gl_VertexID(BuiltInId::gl_VertexID,
                                      BuiltInName::gl_VertexID,
                                      SymbolType::BuiltIn,
                                      TExtension::UNDEFINED,
                                      StaticType::Get<EbtInt, EbpHigh, EvqVertexID, 1, 1>());
constexpr const TVariable gl_ViewportIndex(
    BuiltInId::gl_ViewportIndex,
    BuiltInName::gl_ViewportIndex,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtInt, EbpHigh, EvqViewportIndex, 1, 1>());
constexpr const TVariable gl_LayerVS(BuiltInId::gl_LayerVS,
                                     BuiltInName::gl_Layer,
                                     SymbolType::BuiltIn,
                                     TExtension::UNDEFINED,
                                     StaticType::Get<EbtInt, EbpHigh, EvqLayer, 1, 1>());
constexpr const TVariable gl_NumWorkGroups(
    BuiltInId::gl_NumWorkGroups,
    BuiltInName::gl_NumWorkGroups,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtUInt, EbpUndefined, EvqNumWorkGroups, 3, 1>());
constexpr const TVariable gl_WorkGroupSize(
    BuiltInId::gl_WorkGroupSize,
    BuiltInName::gl_WorkGroupSize,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtUInt, EbpUndefined, EvqWorkGroupSize, 3, 1>());
constexpr const TVariable gl_WorkGroupID(
    BuiltInId::gl_WorkGroupID,
    BuiltInName::gl_WorkGroupID,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtUInt, EbpUndefined, EvqWorkGroupID, 3, 1>());
constexpr const TVariable gl_LocalInvocationID(
    BuiltInId::gl_LocalInvocationID,
    BuiltInName::gl_LocalInvocationID,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtUInt, EbpUndefined, EvqLocalInvocationID, 3, 1>());
constexpr const TVariable gl_GlobalInvocationID(
    BuiltInId::gl_GlobalInvocationID,
    BuiltInName::gl_GlobalInvocationID,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobalInvocationID, 3, 1>());
constexpr const TVariable gl_LocalInvocationIndex(
    BuiltInId::gl_LocalInvocationIndex,
    BuiltInName::gl_LocalInvocationIndex,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtUInt, EbpUndefined, EvqLocalInvocationIndex, 1, 1>());
constexpr const TVariable gl_PrimitiveIDIn(
    BuiltInId::gl_PrimitiveIDIn,
    BuiltInName::gl_PrimitiveIDIn,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtInt, EbpHigh, EvqPrimitiveIDIn, 1, 1>());
constexpr const TVariable gl_InvocationID(
    BuiltInId::gl_InvocationID,
    BuiltInName::gl_InvocationID,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtInt, EbpHigh, EvqInvocationID, 1, 1>());
constexpr const TVariable gl_PrimitiveIDGS(
    BuiltInId::gl_PrimitiveIDGS,
    BuiltInName::gl_PrimitiveID,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtInt, EbpHigh, EvqPrimitiveID, 1, 1>());
constexpr const TVariable gl_LayerGS(BuiltInId::gl_LayerGS,
                                     BuiltInName::gl_Layer,
                                     SymbolType::BuiltIn,
                                     TExtension::UNDEFINED,
                                     StaticType::Get<EbtInt, EbpHigh, EvqLayer, 1, 1>());
constexpr const TVariable gl_ViewID_OVR(BuiltInId::gl_ViewID_OVR,
                                        BuiltInName::gl_ViewID_OVR,
                                        SymbolType::BuiltIn,
                                        TExtension::OVR_multiview,
                                        StaticType::Get<EbtUInt, EbpHigh, EvqViewIDOVR, 1, 1>());
constexpr const TVariable gl_ViewID_OVRESSL1(
    BuiltInId::gl_ViewID_OVRESSL1,
    BuiltInName::gl_ViewID_OVR,
    SymbolType::BuiltIn,
    TExtension::OVR_multiview,
    StaticType::Get<EbtInt, EbpHigh, EvqViewIDOVR, 1, 1>());

};  // namespace BuiltInVariable

}  // namespace sh

#endif  // COMPILER_TRANSLATOR_BUILTIN_AUTOGEN_H_
