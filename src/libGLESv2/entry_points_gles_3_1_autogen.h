// GENERATED FILE - DO NOT EDIT.
// Generated by generate_entry_points.py using data from gl.xml.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// entry_points_gles_3_1_autogen.h:
//   Defines the GLES 3.1 entry points.

#ifndef LIBGLESV2_ENTRY_POINTS_GLES_3_1_AUTOGEN_H_
#define LIBGLESV2_ENTRY_POINTS_GLES_3_1_AUTOGEN_H_

#if defined(GL_GLES_PROTOTYPES) && GL_GLES_PROTOTYPES
#    error Function prototypes multiple defined.
#endif  // defined(GL_GLES_PROTOTYPES) && GL_GLES_PROTOTYPES

#if defined(GL_GLEXT_PROTOTYPES)
#    error Function prototypes multiple defined.
#endif  // defined(GL_GLEXT_PROTOTYPES)

#include <GLES3/gl31.h>
#include <export.h>
#include "common/platform.h"

extern "C" {
ANGLE_EXPORT void GL_APIENTRY glActiveShaderProgram(GLuint pipeline, GLuint program);
ANGLE_EXPORT void GL_APIENTRY glBindImageTexture(GLuint unit,
                                                 GLuint texture,
                                                 GLint level,
                                                 GLboolean layered,
                                                 GLint layer,
                                                 GLenum access,
                                                 GLenum format);
ANGLE_EXPORT void GL_APIENTRY glBindProgramPipeline(GLuint pipeline);
ANGLE_EXPORT void GL_APIENTRY glBindVertexBuffer(GLuint bindingindex,
                                                 GLuint buffer,
                                                 GLintptr offset,
                                                 GLsizei stride);
ANGLE_EXPORT GLuint GL_APIENTRY glCreateShaderProgramv(GLenum type,
                                                       GLsizei count,
                                                       const GLchar *const *strings);
ANGLE_EXPORT void GL_APIENTRY glDeleteProgramPipelines(GLsizei n, const GLuint *pipelines);
ANGLE_EXPORT void GL_APIENTRY glDispatchCompute(GLuint num_groups_x,
                                                GLuint num_groups_y,
                                                GLuint num_groups_z);
ANGLE_EXPORT void GL_APIENTRY glDispatchComputeIndirect(GLintptr indirect);
ANGLE_EXPORT void GL_APIENTRY glDrawArraysIndirect(GLenum mode, const void *indirect);
ANGLE_EXPORT void GL_APIENTRY glDrawElementsIndirect(GLenum mode,
                                                     GLenum type,
                                                     const void *indirect);
ANGLE_EXPORT void GL_APIENTRY glFramebufferParameteri(GLenum target, GLenum pname, GLint param);
ANGLE_EXPORT void GL_APIENTRY glGenProgramPipelines(GLsizei n, GLuint *pipelines);
ANGLE_EXPORT void GL_APIENTRY glGetBooleani_v(GLenum target, GLuint index, GLboolean *data);
ANGLE_EXPORT void GL_APIENTRY glGetFramebufferParameteriv(GLenum target,
                                                          GLenum pname,
                                                          GLint *params);
ANGLE_EXPORT void GL_APIENTRY glGetMultisamplefv(GLenum pname, GLuint index, GLfloat *val);
ANGLE_EXPORT void GL_APIENTRY glGetProgramInterfaceiv(GLuint program,
                                                      GLenum programInterface,
                                                      GLenum pname,
                                                      GLint *params);
ANGLE_EXPORT void GL_APIENTRY glGetProgramPipelineInfoLog(GLuint pipeline,
                                                          GLsizei bufSize,
                                                          GLsizei *length,
                                                          GLchar *infoLog);
ANGLE_EXPORT void GL_APIENTRY glGetProgramPipelineiv(GLuint pipeline, GLenum pname, GLint *params);
ANGLE_EXPORT GLuint GL_APIENTRY glGetProgramResourceIndex(GLuint program,
                                                          GLenum programInterface,
                                                          const GLchar *name);
ANGLE_EXPORT GLint GL_APIENTRY glGetProgramResourceLocation(GLuint program,
                                                            GLenum programInterface,
                                                            const GLchar *name);
ANGLE_EXPORT void GL_APIENTRY glGetProgramResourceName(GLuint program,
                                                       GLenum programInterface,
                                                       GLuint index,
                                                       GLsizei bufSize,
                                                       GLsizei *length,
                                                       GLchar *name);
ANGLE_EXPORT void GL_APIENTRY glGetProgramResourceiv(GLuint program,
                                                     GLenum programInterface,
                                                     GLuint index,
                                                     GLsizei propCount,
                                                     const GLenum *props,
                                                     GLsizei bufSize,
                                                     GLsizei *length,
                                                     GLint *params);
ANGLE_EXPORT void GL_APIENTRY glGetTexLevelParameterfv(GLenum target,
                                                       GLint level,
                                                       GLenum pname,
                                                       GLfloat *params);
ANGLE_EXPORT void GL_APIENTRY glGetTexLevelParameteriv(GLenum target,
                                                       GLint level,
                                                       GLenum pname,
                                                       GLint *params);
ANGLE_EXPORT GLboolean GL_APIENTRY glIsProgramPipeline(GLuint pipeline);
ANGLE_EXPORT void GL_APIENTRY glMemoryBarrier(GLbitfield barriers);
ANGLE_EXPORT void GL_APIENTRY glMemoryBarrierByRegion(GLbitfield barriers);
ANGLE_EXPORT void GL_APIENTRY glProgramUniform1f(GLuint program, GLint location, GLfloat v0);
ANGLE_EXPORT void GL_APIENTRY glProgramUniform1fv(GLuint program,
                                                  GLint location,
                                                  GLsizei count,
                                                  const GLfloat *value);
ANGLE_EXPORT void GL_APIENTRY glProgramUniform1i(GLuint program, GLint location, GLint v0);
ANGLE_EXPORT void GL_APIENTRY glProgramUniform1iv(GLuint program,
                                                  GLint location,
                                                  GLsizei count,
                                                  const GLint *value);
ANGLE_EXPORT void GL_APIENTRY glProgramUniform1ui(GLuint program, GLint location, GLuint v0);
ANGLE_EXPORT void GL_APIENTRY glProgramUniform1uiv(GLuint program,
                                                   GLint location,
                                                   GLsizei count,
                                                   const GLuint *value);
ANGLE_EXPORT void GL_APIENTRY glProgramUniform2f(GLuint program,
                                                 GLint location,
                                                 GLfloat v0,
                                                 GLfloat v1);
ANGLE_EXPORT void GL_APIENTRY glProgramUniform2fv(GLuint program,
                                                  GLint location,
                                                  GLsizei count,
                                                  const GLfloat *value);
ANGLE_EXPORT void GL_APIENTRY glProgramUniform2i(GLuint program,
                                                 GLint location,
                                                 GLint v0,
                                                 GLint v1);
ANGLE_EXPORT void GL_APIENTRY glProgramUniform2iv(GLuint program,
                                                  GLint location,
                                                  GLsizei count,
                                                  const GLint *value);
ANGLE_EXPORT void GL_APIENTRY glProgramUniform2ui(GLuint program,
                                                  GLint location,
                                                  GLuint v0,
                                                  GLuint v1);
ANGLE_EXPORT void GL_APIENTRY glProgramUniform2uiv(GLuint program,
                                                   GLint location,
                                                   GLsizei count,
                                                   const GLuint *value);
ANGLE_EXPORT void GL_APIENTRY
glProgramUniform3f(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
ANGLE_EXPORT void GL_APIENTRY glProgramUniform3fv(GLuint program,
                                                  GLint location,
                                                  GLsizei count,
                                                  const GLfloat *value);
ANGLE_EXPORT void GL_APIENTRY
glProgramUniform3i(GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
ANGLE_EXPORT void GL_APIENTRY glProgramUniform3iv(GLuint program,
                                                  GLint location,
                                                  GLsizei count,
                                                  const GLint *value);
ANGLE_EXPORT void GL_APIENTRY
glProgramUniform3ui(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
ANGLE_EXPORT void GL_APIENTRY glProgramUniform3uiv(GLuint program,
                                                   GLint location,
                                                   GLsizei count,
                                                   const GLuint *value);
ANGLE_EXPORT void GL_APIENTRY
glProgramUniform4f(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
ANGLE_EXPORT void GL_APIENTRY glProgramUniform4fv(GLuint program,
                                                  GLint location,
                                                  GLsizei count,
                                                  const GLfloat *value);
ANGLE_EXPORT void GL_APIENTRY
glProgramUniform4i(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
ANGLE_EXPORT void GL_APIENTRY glProgramUniform4iv(GLuint program,
                                                  GLint location,
                                                  GLsizei count,
                                                  const GLint *value);
ANGLE_EXPORT void GL_APIENTRY
glProgramUniform4ui(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
ANGLE_EXPORT void GL_APIENTRY glProgramUniform4uiv(GLuint program,
                                                   GLint location,
                                                   GLsizei count,
                                                   const GLuint *value);
ANGLE_EXPORT void GL_APIENTRY glProgramUniformMatrix2fv(GLuint program,
                                                        GLint location,
                                                        GLsizei count,
                                                        GLboolean transpose,
                                                        const GLfloat *value);
ANGLE_EXPORT void GL_APIENTRY glProgramUniformMatrix2x3fv(GLuint program,
                                                          GLint location,
                                                          GLsizei count,
                                                          GLboolean transpose,
                                                          const GLfloat *value);
ANGLE_EXPORT void GL_APIENTRY glProgramUniformMatrix2x4fv(GLuint program,
                                                          GLint location,
                                                          GLsizei count,
                                                          GLboolean transpose,
                                                          const GLfloat *value);
ANGLE_EXPORT void GL_APIENTRY glProgramUniformMatrix3fv(GLuint program,
                                                        GLint location,
                                                        GLsizei count,
                                                        GLboolean transpose,
                                                        const GLfloat *value);
ANGLE_EXPORT void GL_APIENTRY glProgramUniformMatrix3x2fv(GLuint program,
                                                          GLint location,
                                                          GLsizei count,
                                                          GLboolean transpose,
                                                          const GLfloat *value);
ANGLE_EXPORT void GL_APIENTRY glProgramUniformMatrix3x4fv(GLuint program,
                                                          GLint location,
                                                          GLsizei count,
                                                          GLboolean transpose,
                                                          const GLfloat *value);
ANGLE_EXPORT void GL_APIENTRY glProgramUniformMatrix4fv(GLuint program,
                                                        GLint location,
                                                        GLsizei count,
                                                        GLboolean transpose,
                                                        const GLfloat *value);
ANGLE_EXPORT void GL_APIENTRY glProgramUniformMatrix4x2fv(GLuint program,
                                                          GLint location,
                                                          GLsizei count,
                                                          GLboolean transpose,
                                                          const GLfloat *value);
ANGLE_EXPORT void GL_APIENTRY glProgramUniformMatrix4x3fv(GLuint program,
                                                          GLint location,
                                                          GLsizei count,
                                                          GLboolean transpose,
                                                          const GLfloat *value);
ANGLE_EXPORT void GL_APIENTRY glSampleMaski(GLuint maskNumber, GLbitfield mask);
ANGLE_EXPORT void GL_APIENTRY glTexStorage2DMultisample(GLenum target,
                                                        GLsizei samples,
                                                        GLenum internalformat,
                                                        GLsizei width,
                                                        GLsizei height,
                                                        GLboolean fixedsamplelocations);
ANGLE_EXPORT void GL_APIENTRY glUseProgramStages(GLuint pipeline,
                                                 GLbitfield stages,
                                                 GLuint program);
ANGLE_EXPORT void GL_APIENTRY glValidateProgramPipeline(GLuint pipeline);
ANGLE_EXPORT void GL_APIENTRY glVertexAttribBinding(GLuint attribindex, GLuint bindingindex);
ANGLE_EXPORT void GL_APIENTRY glVertexAttribFormat(GLuint attribindex,
                                                   GLint size,
                                                   GLenum type,
                                                   GLboolean normalized,
                                                   GLuint relativeoffset);
ANGLE_EXPORT void GL_APIENTRY glVertexAttribIFormat(GLuint attribindex,
                                                    GLint size,
                                                    GLenum type,
                                                    GLuint relativeoffset);
ANGLE_EXPORT void GL_APIENTRY glVertexBindingDivisor(GLuint bindingindex, GLuint divisor);
}  // extern "C"

#endif  // LIBGLESV2_ENTRY_POINTS_GLES_3_1_AUTOGEN_H_
