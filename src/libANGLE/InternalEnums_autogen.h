// GENERATED FILE - DO NOT EDIT.
// Generated by ./src/libANGLE/gen_internal_enums.py using data from internal_enums.json.
//
// Copyright 2017 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// InternalEnums_autogen.h:
//   Declares ANGLE-specific enums classes for GLEnum and functions operating
//   on them.

#ifndef LIBANGLE_INTERNALENUMS_AUTOGEN_H_
#define LIBANGLE_INTERNALENUMS_AUTOGEN_H_

#include <GLES2/gl2.h>
#include <GLES2/gl2ext.h>
#include <GLES3/gl3.h>

namespace gl
{

template<typename Enum>
Enum FromGLenum(GLenum from);

enum class BufferUsage : uint8_t
{
    DynamicCopy = 0,
    DynamicDraw = 1,
    DynamicRead = 2,
    StaticCopy = 3,
    StaticDraw = 4,
    StaticRead = 5,
    StreamCopy = 6,
    StreamDraw = 7,
    StreamRead = 8,

    InvalidEnum = 9,
    EnumCount = 9,
};

template<>
BufferUsage FromGLenum<BufferUsage>(GLenum from);
GLenum ToGLenum(BufferUsage from);

enum class CullFace : uint8_t
{
    Back = 0,
    Front = 1,
    FrontAndBack = 2,

    InvalidEnum = 3,
    EnumCount = 3,
};

template<>
CullFace FromGLenum<CullFace>(GLenum from);
GLenum ToGLenum(CullFace from);

}  // namespace gl

#endif // LIBANGLE_INTERNALENUMS_AUTOGEN_H_
