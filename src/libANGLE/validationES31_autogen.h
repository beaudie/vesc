// GENERATED FILE - DO NOT EDIT.
// Generated by generate_entry_points.py using data from gl.xml and gl_angle_ext.xml.
//
// Copyright 2020 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// validationES31_autogen.h:
//   Validation functions for the OpenGL ES 3.1 entry points.

#ifndef LIBANGLE_VALIDATION_ES31_AUTOGEN_H_
#define LIBANGLE_VALIDATION_ES31_AUTOGEN_H_

#include "common/PackedEnums.h"

namespace gl
{
class Context;

bool ValidateActiveShaderProgram(const Context *context,
                                 const ProgramPipelineID pipelinePacked,
                                 const ShaderProgramID programPacked);
bool ValidateBindImageTexture(const Context *context,
                              const GLuint unit,
                              const TextureID texturePacked,
                              const GLint level,
                              const GLboolean layered,
                              const GLint layer,
                              const GLenum access,
                              const GLenum format);
bool ValidateBindProgramPipeline(const Context *context, const ProgramPipelineID pipelinePacked);
bool ValidateBindVertexBuffer(const Context *context,
                              const GLuint bindingindex,
                              const BufferID bufferPacked,
                              const GLintptr offset,
                              const GLsizei stride);
bool ValidateCreateShaderProgramv(const Context *context,
                                  const ShaderType typePacked,
                                  const GLsizei count,
                                  const GLchar *const *strings);
bool ValidateDeleteProgramPipelines(const Context *context,
                                    const GLsizei n,
                                    const ProgramPipelineID *pipelinesPacked);
bool ValidateDispatchCompute(const Context *context,
                             const GLuint num_groups_x,
                             const GLuint num_groups_y,
                             const GLuint num_groups_z);
bool ValidateDispatchComputeIndirect(const Context *context, const GLintptr indirect);
bool ValidateDrawArraysIndirect(const Context *context,
                                const PrimitiveMode modePacked,
                                const void *indirect);
bool ValidateDrawElementsIndirect(const Context *context,
                                  const PrimitiveMode modePacked,
                                  const DrawElementsType typePacked,
                                  const void *indirect);
bool ValidateFramebufferParameteri(const Context *context,
                                   const GLenum target,
                                   const GLenum pname,
                                   const GLint param);
bool ValidateGenProgramPipelines(const Context *context,
                                 const GLsizei n,
                                 const ProgramPipelineID *pipelinesPacked);
bool ValidateGetBooleani_v(const Context *context,
                           const GLenum target,
                           const GLuint index,
                           const GLboolean *data);
bool ValidateGetFramebufferParameteriv(const Context *context,
                                       const GLenum target,
                                       const GLenum pname,
                                       const GLint *params);
bool ValidateGetMultisamplefv(const Context *context,
                              const GLenum pname,
                              const GLuint index,
                              const GLfloat *val);
bool ValidateGetProgramInterfaceiv(const Context *context,
                                   const ShaderProgramID programPacked,
                                   const GLenum programInterface,
                                   const GLenum pname,
                                   const GLint *params);
bool ValidateGetProgramPipelineInfoLog(const Context *context,
                                       const ProgramPipelineID pipelinePacked,
                                       const GLsizei bufSize,
                                       const GLsizei *length,
                                       const GLchar *infoLog);
bool ValidateGetProgramPipelineiv(const Context *context,
                                  const ProgramPipelineID pipelinePacked,
                                  const GLenum pname,
                                  const GLint *params);
bool ValidateGetProgramResourceIndex(const Context *context,
                                     const ShaderProgramID programPacked,
                                     const GLenum programInterface,
                                     const GLchar *name);
bool ValidateGetProgramResourceLocation(const Context *context,
                                        const ShaderProgramID programPacked,
                                        const GLenum programInterface,
                                        const GLchar *name);
bool ValidateGetProgramResourceName(const Context *context,
                                    const ShaderProgramID programPacked,
                                    const GLenum programInterface,
                                    const GLuint index,
                                    const GLsizei bufSize,
                                    const GLsizei *length,
                                    const GLchar *name);
bool ValidateGetProgramResourceiv(const Context *context,
                                  const ShaderProgramID programPacked,
                                  const GLenum programInterface,
                                  const GLuint index,
                                  const GLsizei propCount,
                                  const GLenum *props,
                                  const GLsizei bufSize,
                                  const GLsizei *length,
                                  const GLint *params);
bool ValidateGetTexLevelParameterfv(const Context *context,
                                    const TextureTarget targetPacked,
                                    const GLint level,
                                    const GLenum pname,
                                    const GLfloat *params);
bool ValidateGetTexLevelParameteriv(const Context *context,
                                    const TextureTarget targetPacked,
                                    const GLint level,
                                    const GLenum pname,
                                    const GLint *params);
bool ValidateIsProgramPipeline(const Context *context, const ProgramPipelineID pipelinePacked);
bool ValidateMemoryBarrier(const Context *context, const GLbitfield barriers);
bool ValidateMemoryBarrierByRegion(const Context *context, const GLbitfield barriers);
bool ValidateProgramUniform1f(const Context *context,
                              const ShaderProgramID programPacked,
                              const GLint location,
                              const GLfloat v0);
bool ValidateProgramUniform1fv(const Context *context,
                               const ShaderProgramID programPacked,
                               const GLint location,
                               const GLsizei count,
                               const GLfloat *value);
bool ValidateProgramUniform1i(const Context *context,
                              const ShaderProgramID programPacked,
                              const GLint location,
                              const GLint v0);
bool ValidateProgramUniform1iv(const Context *context,
                               const ShaderProgramID programPacked,
                               const GLint location,
                               const GLsizei count,
                               const GLint *value);
bool ValidateProgramUniform1ui(const Context *context,
                               const ShaderProgramID programPacked,
                               const GLint location,
                               const GLuint v0);
bool ValidateProgramUniform1uiv(const Context *context,
                                const ShaderProgramID programPacked,
                                const GLint location,
                                const GLsizei count,
                                const GLuint *value);
bool ValidateProgramUniform2f(const Context *context,
                              const ShaderProgramID programPacked,
                              const GLint location,
                              const GLfloat v0,
                              const GLfloat v1);
bool ValidateProgramUniform2fv(const Context *context,
                               const ShaderProgramID programPacked,
                               const GLint location,
                               const GLsizei count,
                               const GLfloat *value);
bool ValidateProgramUniform2i(const Context *context,
                              const ShaderProgramID programPacked,
                              const GLint location,
                              const GLint v0,
                              const GLint v1);
bool ValidateProgramUniform2iv(const Context *context,
                               const ShaderProgramID programPacked,
                               const GLint location,
                               const GLsizei count,
                               const GLint *value);
bool ValidateProgramUniform2ui(const Context *context,
                               const ShaderProgramID programPacked,
                               const GLint location,
                               const GLuint v0,
                               const GLuint v1);
bool ValidateProgramUniform2uiv(const Context *context,
                                const ShaderProgramID programPacked,
                                const GLint location,
                                const GLsizei count,
                                const GLuint *value);
bool ValidateProgramUniform3f(const Context *context,
                              const ShaderProgramID programPacked,
                              const GLint location,
                              const GLfloat v0,
                              const GLfloat v1,
                              const GLfloat v2);
bool ValidateProgramUniform3fv(const Context *context,
                               const ShaderProgramID programPacked,
                               const GLint location,
                               const GLsizei count,
                               const GLfloat *value);
bool ValidateProgramUniform3i(const Context *context,
                              const ShaderProgramID programPacked,
                              const GLint location,
                              const GLint v0,
                              const GLint v1,
                              const GLint v2);
bool ValidateProgramUniform3iv(const Context *context,
                               const ShaderProgramID programPacked,
                               const GLint location,
                               const GLsizei count,
                               const GLint *value);
bool ValidateProgramUniform3ui(const Context *context,
                               const ShaderProgramID programPacked,
                               const GLint location,
                               const GLuint v0,
                               const GLuint v1,
                               const GLuint v2);
bool ValidateProgramUniform3uiv(const Context *context,
                                const ShaderProgramID programPacked,
                                const GLint location,
                                const GLsizei count,
                                const GLuint *value);
bool ValidateProgramUniform4f(const Context *context,
                              const ShaderProgramID programPacked,
                              const GLint location,
                              const GLfloat v0,
                              const GLfloat v1,
                              const GLfloat v2,
                              const GLfloat v3);
bool ValidateProgramUniform4fv(const Context *context,
                               const ShaderProgramID programPacked,
                               const GLint location,
                               const GLsizei count,
                               const GLfloat *value);
bool ValidateProgramUniform4i(const Context *context,
                              const ShaderProgramID programPacked,
                              const GLint location,
                              const GLint v0,
                              const GLint v1,
                              const GLint v2,
                              const GLint v3);
bool ValidateProgramUniform4iv(const Context *context,
                               const ShaderProgramID programPacked,
                               const GLint location,
                               const GLsizei count,
                               const GLint *value);
bool ValidateProgramUniform4ui(const Context *context,
                               const ShaderProgramID programPacked,
                               const GLint location,
                               const GLuint v0,
                               const GLuint v1,
                               const GLuint v2,
                               const GLuint v3);
bool ValidateProgramUniform4uiv(const Context *context,
                                const ShaderProgramID programPacked,
                                const GLint location,
                                const GLsizei count,
                                const GLuint *value);
bool ValidateProgramUniformMatrix2fv(const Context *context,
                                     const ShaderProgramID programPacked,
                                     const GLint location,
                                     const GLsizei count,
                                     const GLboolean transpose,
                                     const GLfloat *value);
bool ValidateProgramUniformMatrix2x3fv(const Context *context,
                                       const ShaderProgramID programPacked,
                                       const GLint location,
                                       const GLsizei count,
                                       const GLboolean transpose,
                                       const GLfloat *value);
bool ValidateProgramUniformMatrix2x4fv(const Context *context,
                                       const ShaderProgramID programPacked,
                                       const GLint location,
                                       const GLsizei count,
                                       const GLboolean transpose,
                                       const GLfloat *value);
bool ValidateProgramUniformMatrix3fv(const Context *context,
                                     const ShaderProgramID programPacked,
                                     const GLint location,
                                     const GLsizei count,
                                     const GLboolean transpose,
                                     const GLfloat *value);
bool ValidateProgramUniformMatrix3x2fv(const Context *context,
                                       const ShaderProgramID programPacked,
                                       const GLint location,
                                       const GLsizei count,
                                       const GLboolean transpose,
                                       const GLfloat *value);
bool ValidateProgramUniformMatrix3x4fv(const Context *context,
                                       const ShaderProgramID programPacked,
                                       const GLint location,
                                       const GLsizei count,
                                       const GLboolean transpose,
                                       const GLfloat *value);
bool ValidateProgramUniformMatrix4fv(const Context *context,
                                     const ShaderProgramID programPacked,
                                     const GLint location,
                                     const GLsizei count,
                                     const GLboolean transpose,
                                     const GLfloat *value);
bool ValidateProgramUniformMatrix4x2fv(const Context *context,
                                       const ShaderProgramID programPacked,
                                       const GLint location,
                                       const GLsizei count,
                                       const GLboolean transpose,
                                       const GLfloat *value);
bool ValidateProgramUniformMatrix4x3fv(const Context *context,
                                       const ShaderProgramID programPacked,
                                       const GLint location,
                                       const GLsizei count,
                                       const GLboolean transpose,
                                       const GLfloat *value);
bool ValidateSampleMaski(const Context *context, const GLuint maskNumber, const GLbitfield mask);
bool ValidateTexStorage2DMultisample(const Context *context,
                                     const TextureType targetPacked,
                                     const GLsizei samples,
                                     const GLenum internalformat,
                                     const GLsizei width,
                                     const GLsizei height,
                                     const GLboolean fixedsamplelocations);
bool ValidateUseProgramStages(const Context *context,
                              const ProgramPipelineID pipelinePacked,
                              const GLbitfield stages,
                              const ShaderProgramID programPacked);
bool ValidateValidateProgramPipeline(const Context *context,
                                     const ProgramPipelineID pipelinePacked);
bool ValidateVertexAttribBinding(const Context *context,
                                 const GLuint attribindex,
                                 const GLuint bindingindex);
bool ValidateVertexAttribFormat(const Context *context,
                                const GLuint attribindex,
                                const GLint size,
                                const VertexAttribType typePacked,
                                const GLboolean normalized,
                                const GLuint relativeoffset);
bool ValidateVertexAttribIFormat(const Context *context,
                                 const GLuint attribindex,
                                 const GLint size,
                                 const VertexAttribType typePacked,
                                 const GLuint relativeoffset);
bool ValidateVertexBindingDivisor(const Context *context,
                                  const GLuint bindingindex,
                                  const GLuint divisor);
}  // namespace gl

#endif  // LIBANGLE_VALIDATION_ES31_AUTOGEN_H_
