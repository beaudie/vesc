// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py using data from shaders/src/*
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// vk_internal_shaders_autogen.cpp:
//   Pre-generated shader library for the ANGLE Vulkan back-end.

#include "libANGLE/renderer/vulkan/vk_internal_shaders_autogen.h"

#include "common/debug.h"

namespace rx
{
namespace vk
{
namespace
{
#include "libANGLE/renderer/vulkan/shaders/gen/FullScreenQuad.vert.inc"
#include "libANGLE/renderer/vulkan/shaders/gen/UniformColor.frag.inc"
}  // anonymous namespace

const uint32_t *GetInternalShaderCode(InternalShaderID shaderID)
{
    switch (shaderID)
    {
        case InternalShaderID::FullScreenQuad_vert:
            return kFullScreenQuad_vert;

        case InternalShaderID::UniformColor_frag:
            return kUniformColor_frag;

        default:
            UNREACHABLE();
            return nullptr;
    }
}

size_t GetInternalShaderCodeSize(InternalShaderID shaderID)
{
    switch (shaderID)
    {
        case InternalShaderID::FullScreenQuad_vert:
            return sizeof(kFullScreenQuad_vert);

        case InternalShaderID::UniformColor_frag:
            return sizeof(kUniformColor_frag);

        default:
            UNREACHABLE();
            return 0;
    }
}
}  // namespace vk
}  // namespace rx
