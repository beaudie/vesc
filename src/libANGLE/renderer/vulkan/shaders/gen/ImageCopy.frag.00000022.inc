// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/ImageCopy.frag.00000022.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kImageCopy_frag_00000022[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x85,0x98,0x8b,0x97,0x8e,0x55,
    0x14,0xc6,0xdf,0x99,0x6f,0xe6,0x1b,0xc6,0x6d,0x44,0x48,0xb4,0x66,0x90,0xd4,0x68,
    0xa8,0xc6,0xdd,0x28,0x94,0x4b,0xb9,0xc4,0x98,0x48,0x4a,0x53,0x8a,0x49,0xa3,0x18,
    0x45,0xe5,0x16,0xc9,0x48,0x12,0x2a,0x4a,0x51,0x22,0x32,0x91,0x8a,0x08,0x15,0x95,
    0x4b,0x37,0x54,0x46,0xe5,0x56,0xff,0x44,0xab,0xcb,0x5a,0x5d,0xce,0x7e,0xe7,0xb7,
    0xa7,0x67,0x7d,0xcb,0xaa,0x59,0xeb,0xac,0xf7,0xdb,0xcf,0xde,0xe7,0x39,0xcf,0xde,
    0xfb,0x9c,0xf3,0x7e,0xdf,0x24,0xd2,0xdb,0x66,0x45,0x89,0xb4,0x28,0x3b,0xaa,0x13,
    0xfd,0x1c,0xd5,0xfc,0x35,0x8e,0xd2,0xa3,0xb4,0xf0,0xac,0x17,0x25,0xe3,0xe7,0xc0,
    0x21,0xc5,0x43,0x0a,0x2a,0xa6,0x4f,0x28,0x28,0xec,0xd2,0xd9,0xfc,0x0d,0xa3,0x44,
    0x1c,0x67,0xbe,0x46,0x51,0x56,0x94,0x11,0x9e,0x36,0xca,0x4b,0xcb,0xa6,0x18,0xde,
    0x3e,0x8c,0x73,0x61,0xe4,0x84,0x38,0xc3,0xb3,0x8c,0x23,0x7c,0x6a,0x1f,0x73,0xda,
    0x9c,0x28,0x1a,0x14,0x65,0x46,0x1d,0x59,0xaf,0x2d,0x4f,0xc7,0xd2,0xc0,0xea,0x08,
    0x96,0x0e,0x96,0x23,0x58,0x02,0xac,0xa9,0x60,0x19,0x60,0x2d,0x04,0xcb,0x04,0x6b,
    0x25,0x58,0x12,0x2c,0x57,0xb0,0x2c,0xb0,0x76,0x82,0xd5,0x01,0xeb,0x20,0x58,0x5d,
    0xb0,0x8e,0x82,0x65,0x83,0x75,0x16,0xac,0x1e,0x58,0xa1,0x60,0xf5,0xc1,0xba,0x0b,
    0xd6,0x00,0xac,0x77,0x5c,0xa7,0x44,0x6d,0xbe,0x56,0xb3,0xb1,0xe1,0xd9,0x86,0xfa,
    0xb8,0x9d,0x27,0xb6,0xd5,0xf9,0x12,0xec,0x26,0x61,0x56,0x7a,0xec,0x4f,0xc4,0xb5,
    0xb1,0xcf,0xcd,0xc2,0xa7,0x24,0x79,0xe6,0x86,0xf8,0x2c,0xf2,0x4c,0xc6,0x71,0x19,
    0x71,0x7e,0x49,0xb0,0xfc,0x60,0x27,0xd1,0xd3,0xaa,0x60,0x68,0xaf,0xa6,0x81,0xa1,
    0xa1,0xe0,0x4d,0xc2,0x18,0xb9,0x7b,0x58,0x5f,0xb7,0xad,0xc6,0x25,0x25,0xd5,0x7d,
    0xdc,0x6e,0x19,0x46,0x51,0xf6,0xa2,0x6b,0xdd,0xb6,0x7a,0x6f,0x1b,0x58,0x5a,0x74,
    0x61,0xb0,0x73,0xd1,0x60,0xbd,0x6d,0x1e,0xec,0x3c,0xec,0x74,0x74,0xb5,0x41,0x43,
    0x1e,0xfe,0x76,0xe8,0xca,0xc0,0x7f,0x29,0x73,0x0d,0xef,0x85,0xdd,0x5e,0xf8,0x2e,
    0x23,0xde,0xf8,0x6c,0xbd,0x7c,0xf8,0xa3,0xb8,0x3e,0x39,0x71,0x4d,0xf3,0x18,0xae,
    0x25,0xff,0x7f,0x46,0x6e,0xed,0x33,0x23,0xba,0x92,0xbe,0x77,0x64,0x7d,0xb3,0x0b,
    0xc0,0xf2,0xc9,0xaf,0x13,0x7a,0x2c,0xbe,0x33,0xbe,0x3c,0xf1,0x77,0x95,0x7c,0xba,
    0xd5,0xce,0xad,0xf1,0xdb,0xb3,0x27,0x7a,0xcd,0xdf,0x87,0x7a,0xe4,0xca,0xfc,0xfe,
    0xec,0x65,0x8f,0x1f,0xcc,0x7a,0xee,0x1f,0x46,0xef,0x6c,0xfe,0x2d,0xcc,0xb7,0x7a,
    0x5d,0x14,0x56,0x1a,0x23,0xf5,0xd1,0xbf,0x34,0x59,0xf3,0x56,0x3e,0x8f,0x21,0x47,
    0xb3,0xc7,0x82,0xf9,0x1a,0xe3,0x52,0xec,0x52,0xce,0xa1,0xcd,0xbf,0x8b,0x9c,0x72,
    0xe9,0xc9,0x3d,0x7c,0x4e,0x48,0x7c,0x19,0x1a,0xdc,0x2e,0xe7,0xec,0x78,0x4e,0x73,
    0x52,0xfc,0x0b,0xd0,0xed,0xfe,0xc5,0xf0,0x19,0xff,0xd3,0xf8,0x94,0x7f,0x65,0xca,
    0x5e,0x5e,0x23,0x7a,0xcd,0xde,0x1c,0x5b,0x73,0xfb,0xdb,0xfc,0x2a,0xea,0xef,0x3d,
    0x79,0x8b,0xb9,0x55,0xc2,0xb7,0x9d,0x3b,0xc0,0xe2,0xdf,0x27,0x5e,0xf5,0xed,0xab,
    0xcd,0x39,0x23,0xfa,0xa4,0x76,0xed,0x7f,0xfd,0x47,0x38,0xf3,0xe6,0x3f,0x8b,0xd6,
    0x2a,0xea,0x7b,0x96,0x7b,0x32,0x11,0xef,0x8d,0xcc,0x98,0x37,0x03,0xbd,0x86,0xfd,
    0x16,0x90,0x4c,0x62,0xdb,0x70,0x47,0x64,0x89,0x5d,0x28,0xb6,0xf5,0x7b,0xb4,0xd8,
    0xf6,0xac,0x48,0xb1,0x67,0xa6,0xd8,0xb3,0xc5,0xb6,0xdc,0xb7,0x8a,0x6d,0xfb,0xef,
    0x30,0x76,0x11,0xe7,0xb1,0x03,0x67,0x6e,0x78,0x40,0xed,0xbc,0x5d,0x0e,0xd6,0x41,
    0xf6,0xd2,0x14,0xce,0xf6,0x15,0xf8,0xfb,0x86,0x0c,0xec,0x2c,0x5c,0xc5,0x79,0xe9,
    0x04,0x9f,0xc5,0x5c,0x0d,0x3e,0x3f,0xc4,0x98,0x7d,0x0d,0xf3,0x0c,0xef,0x13,0x2a,
    0xd0,0x16,0xcc,0xe3,0xbb,0x50,0x03,0xf3,0x15,0x62,0x1b,0x7f,0x37,0xee,0xd3,0x02,
    0xce,0x58,0x11,0x7b,0xa5,0x07,0x78,0x55,0x88,0x69,0x18,0xe7,0x55,0x83,0xd9,0x39,
    0xfb,0x35,0x70,0x14,0xa1,0xfb,0x8f,0x10,0xdf,0x8b,0xfb,0xb7,0x88,0xba,0xf7,0x86,
    0xdb,0xea,0x70,0x2d,0xb5,0xee,0x09,0xb7,0xf5,0xf5,0x3a,0xf0,0x39,0xd8,0x7d,0xc1,
    0x7c,0x4e,0x3f,0x99,0x63,0x7a,0xfb,0x11,0xf3,0x7b,0xe0,0xf6,0x35,0x8a,0x44,0xff,
    0xf5,0xe8,0xef,0x2f,0xfa,0x6f,0x00,0x77,0xfd,0x03,0xc0,0x5c,0xff,0x20,0xd1,0x3f,
    0x20,0x7e,0x1f,0x44,0x31,0x66,0xdc,0x03,0x45,0xcb,0x8d,0x68,0x19,0x2c,0xfa,0x6f,
    0x02,0x77,0xfd,0x43,0xc0,0x7c,0xce,0x50,0x99,0x63,0xfa,0x87,0x12,0x63,0xfa,0x7d,
    0x8d,0x41,0xa2,0x7f,0x38,0xfa,0x87,0x89,0xfe,0x9b,0xc1,0x5d,0xff,0x08,0x30,0xd7,
    0x5f,0x2c,0xfa,0xcd,0x37,0x32,0x8c,0x62,0xb8,0x47,0x4a,0xdf,0x47,0xa1,0xc5,0xf6,
    0x9d,0xd9,0x25,0x60,0xa3,0xe4,0xfe,0xf2,0x3d,0x51,0x82,0x46,0xe7,0x29,0x86,0xc7,
    0xee,0xb4,0xdb,0xb8,0xcf,0x7c,0x4f,0xde,0x8e,0xe6,0x71,0xb2,0xd6,0x1d,0xe0,0x6e,
    0x8f,0x67,0xed,0x79,0xec,0xd1,0x3b,0x89,0x19,0x0f,0x8f,0xdd,0x79,0x77,0xc3,0x53,
    0x2a,0xf5,0x9d,0x00,0x3e,0x22,0xc4,0x98,0x7d,0x2f,0x73,0x23,0xc1,0x26,0x82,0xa5,
    0xc5,0x75,0x49,0xc6,0xf7,0xe5,0x24,0x62,0x27,0xc2,0xe1,0x6b,0xdc,0xc7,0x1a,0x65,
    0xb2,0xc6,0x64,0xf0,0xf1,0xa1,0x2e,0x76,0x3e,0xef,0x27,0xc7,0x49,0xdc,0x51,0x93,
    0xa9,0xcb,0x68,0x7c,0xde,0xab,0x29,0x70,0x95,0x4b,0xaf,0x1e,0x00,0xf7,0x5e,0x3d,
    0x08,0xe6,0xbd,0x9a,0x26,0xbd,0x32,0xdf,0xd4,0x30,0xa6,0x51,0xe3,0xa9,0x70,0xdb,
    0x5d,0x31,0x9d,0x7b,0xc8,0xcf,0x8a,0xdd,0xb9,0x0f,0x81,0x9b,0x96,0x0a,0xec,0x1e,
    0x21,0xde,0x7c,0x0f,0x73,0xff,0x57,0x08,0xc7,0x0c,0xe1,0xb0,0x39,0x33,0x88,0x73,
    0xff,0x23,0xf8,0x07,0xcb,0x1a,0x8f,0x82,0x5b,0xfc,0x4c,0x6c,0x5f,0xe3,0x31,0xd6,
    0x98,0x29,0x1c,0xb3,0x84,0xc3,0xe6,0xcc,0x22,0xce,0xfd,0x73,0xf1,0xcf,0x91,0x35,
    0xe6,0x81,0x5b,0xfc,0x6c,0x6c,0x5f,0xe3,0x71,0xd6,0x98,0x2d,0x1c,0xf3,0x85,0xc3,
    0xe6,0xcc,0x27,0xce,0xf6,0xa7,0xd7,0x6e,0x9a,0xf4,0xe5,0x09,0xfa,0xb2,0x40,0xfa,
    0xb2,0x10,0xdc,0xfb,0xf2,0x24,0x98,0xf7,0xa5,0x52,0xfa,0x62,0xbe,0x45,0x61,0xac,
    0x80,0x7b,0x91,0x68,0x79,0x0a,0x2d,0x8b,0x25,0x9f,0x25,0xe0,0x7e,0xbf,0x2f,0x25,
    0x66,0x78,0x78,0xe3,0xd9,0xbb,0xf5,0x19,0xb0,0xa5,0x72,0xbf,0xa7,0xc7,0x78,0x66,
    0xec,0x5f,0x46,0xcc,0x12,0xe1,0x78,0xb6,0x96,0xa3,0x6e,0x6c,0x2f,0x07,0x5b,0xc6,
    0xbb,0x2d,0x53,0xde,0xd9,0xbe,0x37,0x97,0x53,0x93,0x4a,0x74,0xaf,0x90,0x9a,0x3c,
    0x47,0x4d,0x56,0x4a,0x4d,0x9e,0x07,0xf7,0x9a,0xbc,0x00,0xe6,0x35,0x59,0x2d,0x35,
    0x31,0xdf,0xaa,0x30,0x56,0xc3,0xbd,0x4a,0x6a,0xf2,0xe2,0x79,0x6a,0xf2,0x12,0xf8,
    0x1e,0xb8,0x5f,0x06,0x5b,0x83,0x46,0xe7,0xb1,0xe7,0x2f,0x81,0xc5,0x62,0x5e,0x41,
    0xc3,0x0a,0xe2,0x57,0xa1,0x63,0x9d,0xe8,0xb0,0x98,0xb5,0x61,0xac,0x63,0xfe,0x5a,
    0xd1,0xf1,0xea,0x79,0x74,0xbc,0x06,0xee,0x75,0x5d,0x9f,0xd2,0x9b,0xd7,0xc1,0xd6,
    0xa7,0xf4,0xc6,0xee,0x11,0xf3,0x6f,0x80,0xc3,0x47,0x25,0x3d,0xdb,0xc8,0xdc,0x0d,
    0xc2,0xfd,0x46,0x4a,0xcf,0x36,0x81,0x6d,0xfc,0x8f,0x9e,0x6d,0xa2,0x1e,0x9e,0xcf,
    0xba,0x94,0x1e,0x56,0x0a,0xff,0x9b,0xf0,0xdb,0xbe,0x31,0x7b,0x0b,0xd8,0x66,0xe1,
    0xdb,0x22,0xf1,0xdb,0x88,0x2f,0xe7,0x3b,0xda,0xdb,0x60,0x16,0xbb,0x15,0xdb,0xf7,
    0xc7,0x3b,0xec,0x8f,0xed,0xb2,0x3f,0xde,0x05,0xf7,0xfd,0xf1,0x1e,0x98,0xef,0x8f,
    0x9d,0xd2,0x17,0xf3,0xed,0x08,0x63,0x2f,0xba,0x77,0xc0,0x63,0xeb,0xee,0xe2,0x3b,
    0x91,0xbd,0x77,0xec,0xbb,0xdf,0x6e,0xb0,0x5d,0xf2,0x1d,0xcd,0x63,0x3f,0xa8,0x8d,
    0xad,0x1b,0xdb,0x7b,0xc0,0x76,0x4b,0x0d,0xd3,0xa5,0x86,0x5b,0x89,0xb1,0x9a,0xed,
    0x64,0xed,0xbd,0x92,0xd7,0x87,0xe4,0xb5,0x4f,0xf2,0xfa,0x08,0xdc,0xf3,0xfa,0x18,
    0xcc,0xf3,0x3a,0x20,0x79,0x99,0x6f,0x7f,0x18,0x87,0xe0,0xde,0x0f,0xb7,0x7d,0x47,
    0xfd,0x14,0xad,0x8b,0x85,0xfb,0x33,0x70,0x8f,0x39,0x48,0x8c,0xdf,0xc1,0x07,0x89,
    0x31,0xbd,0x07,0xe0,0x3c,0x24,0xef,0xa7,0xcf,0xd1,0x7b,0x44,0xde,0x4f,0x5f,0x80,
    0xdb,0xfc,0xc3,0xd8,0xee,0xfb,0x92,0xef,0x97,0x87,0x79,0x17,0x7e,0x05,0x56,0x26,
    0xf9,0x7d,0x0d,0x3e,0x8e,0xfc,0x8e,0x49,0x7e,0xe6,0x3b,0x1a,0xc6,0x31,0xb4,0x1c,
    0x15,0xed,0xc7,0xd1,0xee,0x77,0xfb,0x71,0xf2,0x30,0xed,0x1e,0x7f,0x4c,0xb4,0x7c,
    0x93,0xa2,0xe5,0x5b,0xb0,0xae,0xa2,0xe5,0x3b,0x70,0xd7,0x52,0x2d,0x5a,0xcc,0x77,
    0x22,0x8c,0x6a,0xb8,0x4f,0x88,0x96,0x93,0x68,0xf1,0x77,0xc0,0x49,0xd1,0xe2,0xf1,
    0xd5,0xa2,0xe5,0xfb,0x14,0x2d,0x3f,0x80,0x6d,0x17,0x2d,0x3f,0x82,0xbb,0x96,0xd3,
    0xa2,0xc5,0x7c,0xa7,0xc2,0x38,0x0d,0xf7,0x29,0xd1,0x72,0x46,0xfa,0x6e,0x5a,0xce,
    0x50,0x23,0xd3,0xe2,0xf1,0xa7,0x53,0x7a,0x7c,0x20,0x65,0x8f,0xee,0x94,0x3d,0xff,
    0x13,0x7c,0xc6,0x75,0x0e,0xfb,0xcf,0x70,0x13,0x75,0x0f,0xa3,0x2b,0xef,0xc5,0x6c,
    0xb4,0xd9,0x6f,0xa8,0x6e,0x21,0x2e,0x8b,0xdf,0x4b,0xc6,0x55,0x4f,0xee,0xbb,0xfa,
    0xe0,0xfb,0xc8,0xb1,0x11,0x58,0x03,0x72,0x6c,0x2c,0x39,0x36,0xe2,0xff,0x40,0xcd,
    0xe0,0xc9,0x11,0x9e,0x0b,0xe0,0x59,0xc8,0xfa,0x4d,0xc1,0xec,0x7f,0x17,0x7f,0x85,
    0xd8,0xa6,0xcc,0x69,0x26,0x73,0x9a,0x33,0xa7,0x7e,0x50,0x97,0x8c,0x7f,0x2f,0xd7,
    0xdc,0xa7,0x2d,0xf1,0xb5,0x10,0xbe,0x8b,0xf1,0xb7,0x8c,0xdf,0xd3,0x35,0x58,0x6b,
    0xf0,0x56,0xac,0xd1,0x9a,0x35,0x4c,0xf3,0xdf,0xd4,0xe3,0x1f,0xb2,0x35,0x6d,0x67,
    0x68,0x13,0x00,0x00
};

// Generated from:
//
// #version 450 core
//
// #extension GL_EXT_samplerless_texture_functions : require
//
// layout(set = 0, binding = 0)uniform texture3D src;
// layout(location = 0)out uvec4 dst;
//
// layout(push_constant)uniform PushConstants {
//
//     ivec2 srcOffset;
//     ivec2 dstOffset;
//     int srcMip;
//     int srcLayer;
//
//     bool flipX;
//     bool flipY;
//
//     bool premultiplyAlpha;
//     bool unmultiplyAlpha;
//
//     bool dstHasLuminance;
//     bool dstIsAlpha;
//
//     bool srcIsSRGB;
//     bool dstIsSRGB;
//
//     int dstDefaultChannelsMask;
//     bool rotateXY;
// } params;
//
// float linearToSRGB(float linear)
// {
//
//     if(linear <= 0.0031308)
//     {
//         return linear * 12.92;
//     }
//     else
//     {
//         return pow(linear,(1.0f / 2.4f))* 1.055f - 0.055f;
//     }
// }
//
// void main()
// {
//     ivec2 dstSubImageCoords = ivec2(gl_FragCoord . xy)- params . dstOffset;
//
//     ivec2 srcSubImageCoords = dstSubImageCoords;
//
//     if(params . flipX)
//     {
//         srcSubImageCoords . x = - srcSubImageCoords . x;
//     }
//     if(params . flipY)
//     {
//         srcSubImageCoords . y = - srcSubImageCoords . y;
//     }
//     if(params . rotateXY)
//     {
//         srcSubImageCoords . xy = srcSubImageCoords . yx;
//     }
//
//           vec4 srcValue = texelFetch(src, ivec3(params . srcOffset + srcSubImageCoords, params . srcLayer), params . srcMip);
//
//     if(params . srcIsSRGB)
//     {
//
//         srcValue . r = linearToSRGB(srcValue . r);
//         srcValue . g = linearToSRGB(srcValue . g);
//         srcValue . b = linearToSRGB(srcValue . b);
//     }
//
//     if(params . premultiplyAlpha)
//     {
//         srcValue . rgb *= srcValue . a;
//     }
//     else if(params . unmultiplyAlpha && srcValue . a > 0)
//     {
//         srcValue . rgb /= srcValue . a;
//     }
//
//     srcValue *= 255.0;
//
//            uvec4 dstValue = uvec4(srcValue);
//
//     if(params . dstHasLuminance)
//     {
//         dstValue . rg = dstValue . ra;
//     }
//     else if(params . dstIsAlpha)
//     {
//         dstValue . r = dstValue . a;
//     }
//     else
//     {
//         int defaultChannelsMask = params . dstDefaultChannelsMask;
//         if((defaultChannelsMask & 2)!= 0)
//         {
//             dstValue . g = 0;
//         }
//         if((defaultChannelsMask & 4)!= 0)
//         {
//             dstValue . b = 0;
//         }
//         if((defaultChannelsMask & 8)!= 0)
//         {
//             dstValue . a = 1;
//         }
//     }
//
//     dst = dstValue;
// }
