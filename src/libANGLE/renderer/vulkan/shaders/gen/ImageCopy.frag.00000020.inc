// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/ImageCopy.frag.00000020.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kImageCopy_frag_00000020[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x85,0x98,0x0b,0x94,0x8d,0x55,
    0x14,0xc7,0xbf,0x7b,0xef,0xcc,0x1d,0xef,0xf7,0x23,0x62,0x28,0x79,0x2d,0x9a,0x66,
    0xad,0x19,0x32,0xc4,0xa0,0xbc,0xca,0x5b,0x54,0x28,0x94,0xb7,0x50,0xe8,0x85,0x84,
    0xbc,0xa2,0x42,0x45,0x79,0x24,0x09,0x15,0x35,0x45,0x89,0x90,0xa4,0x32,0x2a,0x2a,
    0x0a,0x95,0x47,0x51,0x51,0x1e,0xbd,0x90,0x57,0xd2,0xd9,0x67,0x7e,0x7b,0xda,0xbe,
    0x65,0xd5,0xac,0x75,0xd6,0xbd,0xfb,0xbf,0xf7,0xf9,0xef,0xff,0xd9,0xfb,0x9c,0x73,
    0xbf,0xf9,0x62,0xd1,0x4a,0x49,0x41,0x2c,0x12,0xe4,0x0b,0xf2,0x04,0xf1,0x48,0xe0,
    0xff,0x8a,0x06,0xd1,0x40,0xbe,0xe6,0x0f,0xe2,0xfe,0xb3,0x59,0xcb,0x0e,0x2d,0x53,
    0x86,0x0e,0xeb,0x99,0x92,0x5e,0x2b,0x55,0xfc,0x85,0x82,0x98,0x8f,0x13,0x5f,0xe1,
    0x20,0x29,0x48,0x70,0x9f,0x32,0x06,0xf6,0xe8,0x37,0x48,0xf0,0x0c,0xb1,0x9d,0xb3,
    0x88,0x8b,0x13,0x3c,0x49,0x38,0xdc,0xb7,0x0c,0xcf,0x29,0x73,0x82,0xa0,0x79,0x90,
    0x18,0x64,0xe6,0xa4,0x0b,0x2a,0xf1,0xa9,0x58,0x04,0x2c,0x8f,0xc1,0xa2,0x60,0x45,
    0x0c,0x16,0x03,0x2b,0x61,0xb0,0x04,0xb0,0x4b,0x0c,0x96,0x08,0x56,0xce,0x60,0x71,
    0xb0,0x8a,0x06,0x4b,0x02,0xbb,0xc2,0x60,0x79,0xc0,0xaa,0x19,0x2c,0x2f,0x58,0x4d,
    0x83,0xe5,0x03,0x4b,0x35,0x58,0x7e,0xb0,0x74,0x83,0x15,0x00,0xab,0x63,0xb0,0x82,
    0x60,0xd7,0xf8,0x3a,0xc5,0x72,0xd7,0x2b,0x35,0x1b,0xe8,0x3e,0x2f,0xa7,0x3e,0x6a,
    0x5f,0x66,0x6c,0xa9,0x73,0x32,0x76,0x71,0x37,0x2b,0xea,0xfd,0x31,0x5f,0x1b,0xf9,
    0x5e,0xca,0x7d,0x8b,0xb3,0xce,0x8a,0x2e,0x3e,0x89,0x75,0xc6,0x7d,0x5c,0x82,0x5f,
    0x5f,0x1c,0xac,0x86,0xb3,0xe3,0xd4,0xb8,0x5c,0x4a,0xab,0x7a,0x25,0x1c,0x43,0x51,
    0x83,0x97,0x72,0xa3,0xfd,0xaa,0xd6,0x8d,0xd4,0xbe,0xd4,0x8d,0x8e,0x1d,0xb7,0x37,
    0x50,0xbb,0xbc,0x1b,0xf5,0xf3,0x4d,0xcc,0x54,0xbb,0x82,0x1b,0x59,0xcd,0x7a,0xd4,
    0x57,0x5b,0xea,0x7a,0x20,0xab,0x72,0xae,0x7d,0x95,0x1b,0xb3,0x67,0x95,0x69,0x58,
    0xd2,0xd9,0x69,0x68,0x94,0xde,0x97,0x76,0xb6,0xd4,0x2c,0x8d,0x35,0x88,0xee,0x5a,
    0x68,0x4c,0xc7,0x7f,0x35,0xba,0x13,0xf0,0xd7,0x61,0xae,0xe0,0xf5,0xb0,0x33,0x0c,
    0x5f,0x5d,0xe2,0x85,0x4f,0xf2,0x35,0x20,0x9f,0xfc,0x25,0xbb,0x15,0x67,0xc2,0xad,
    0x79,0x65,0x34,0xf8,0x9f,0xa1,0x31,0x92,0xbf,0x21,0xfb,0x22,0x93,0xfc,0x62,0x37,
    0x02,0xab,0xc1,0xfa,0x1a,0xa3,0x47,0xe2,0xaf,0xc5,0x97,0x6e,0xfc,0x2d,0xcc,0x7a,
    0xae,0xc7,0xdf,0x00,0xbf,0x7c,0xb6,0x42,0xaf,0xf8,0xdb,0x51,0x8f,0x34,0x33,0xbf,
    0x13,0x7b,0x5d,0xe3,0xbb,0x92,0x4f,0xfd,0x3d,0xd8,0x6b,0x32,0xbf,0x1f,0xf3,0xa5,
    0x5e,0x65,0x5c,0xa6,0x01,0xa6,0x3e,0xf6,0x2f,0x62,0x72,0xde,0xc9,0xf7,0x01,0xac,
    0x51,0xec,0x81,0x60,0x9a,0x63,0x70,0xc8,0x1e,0xc6,0x39,0x95,0xf9,0xf7,0xb0,0xa6,
    0x34,0x7a,0x72,0x3f,0xdf,0x63,0x26,0x7e,0x24,0x1a,0xd4,0x1e,0xcd,0xd9,0xd2,0x35,
    0x4d,0x0f,0xf9,0x67,0xa2,0x5b,0xfd,0x73,0xe1,0x13,0xfe,0xe7,0xf0,0x59,0xfe,0xc5,
    0xa1,0xbd,0x9e,0x15,0xd2,0xbb,0x81,0x73,0xab,0xf6,0x4e,0xee,0x00,0xb5,0xf7,0x87,
    0x7a,0x7a,0x94,0x33,0xad,0x7c,0x11,0x5f,0xb0,0xd1,0x99,0xb2,0x5e,0x77,0xad,0xfa,
    0xdc,0xba,0x27,0xc5,0x4e,0x00,0xab,0xed,0x3a,0x15,0xa5,0xdf,0x01,0x1a,0x4f,0x39,
    0x24,0x91,0xd8,0x5a,0x3e,0x26,0x47,0xab,0xda,0xcd,0x8c,0x2d,0xfd,0xeb,0x6f,0x6c,
    0xf9,0x9c,0x10,0xb2,0xa7,0x84,0xec,0x69,0xa1,0xf9,0x6b,0x42,0xfe,0x4d,0x21,0x7b,
    0x4b,0xc8,0xde,0x66,0x6c,0xd9,0x7f,0x47,0xb0,0xeb,0x73,0x1e,0xeb,0x71,0xe6,0xda,
    0x38,0xb4,0x2e,0xf7,0x59,0x3d,0x86,0xee,0xa5,0x41,0x9c,0xed,0xfa,0xf8,0x1b,0xb9,
    0x15,0xcb,0x59,0xb8,0x8e,0xf3,0xd2,0x18,0x3e,0x89,0x69,0x02,0x3e,0xd6,0xc5,0x88,
    0xdd,0x94,0x79,0x4d,0xfc,0xb9,0x88,0xf9,0xfa,0x34,0x35,0xf1,0xcd,0xa9,0x99,0xf8,
    0x9a,0x61,0x0b,0xbf,0x9c,0xa5,0x1b,0xe0,0x6f,0x41,0xbc,0xec,0x95,0x96,0xe0,0x4b,
    0x5d,0x8c,0xdc,0x73,0xad,0xc1,0xe4,0x9c,0x9d,0x74,0x1c,0x6d,0xd1,0x7d,0xc6,0xc5,
    0xb7,0xf6,0xeb,0x0a,0x3c,0x26,0x7d,0x6a,0x03,0xb7,0xd4,0xa1,0x3d,0xbd,0x69,0x05,
    0xb7,0xec,0x8b,0x0e,0xe0,0xa3,0xb0,0x6f,0x04,0xd3,0x39,0x1d,0xcd,0x1c,0xd1,0xdb,
    0x91,0x98,0xd3,0x8e,0x5b,0x73,0xb4,0x35,0xfa,0x6f,0x42,0x7f,0x27,0xa3,0xff,0x66,
    0x70,0xd5,0x7f,0x0b,0x98,0xea,0xef,0x62,0xf4,0x8b,0xaf,0xb3,0x1b,0x5d,0xe0,0xee,
    0x6c,0xb4,0xdc,0x8a,0x96,0xae,0x46,0xff,0x6d,0xe0,0xaa,0xbf,0x1b,0x98,0xce,0xe9,
    0x6e,0xe6,0x88,0xfe,0xee,0xc4,0x88,0x7e,0xcd,0xd1,0xc5,0xe8,0xbf,0x1d,0xfd,0x3d,
    0x8c,0xfe,0x3b,0xc0,0x55,0x7f,0x4f,0x30,0xd5,0xdf,0xdb,0xe8,0x17,0x5f,0x2f,0x37,
    0x7a,0xc3,0xdd,0xcb,0xf4,0xbd,0x0f,0x5a,0x64,0xdf,0x89,0xdd,0x17,0xac,0x8f,0xb9,
    0xbf,0x74,0x4f,0xf4,0x45,0xa3,0xf2,0xf4,0x86,0x67,0x80,0xdf,0x9b,0x39,0xf7,0x99,
    0xee,0xc9,0xbb,0xd0,0x3c,0xd8,0xe4,0xba,0x1b,0x5c,0xed,0x21,0xe4,0x1e,0xcd,0x1e,
    0x1d,0x4a,0xcc,0x10,0x78,0xe4,0xce,0xbb,0x17,0x9e,0x61,0xa6,0xbe,0xf7,0x81,0xb7,
    0x73,0x31,0x62,0x3f,0xc0,0xdc,0xc0,0x60,0xc3,0xc1,0x22,0x7e,0xdf,0xc5,0xfd,0x7d,
    0x39,0x82,0xd8,0xe1,0x70,0x68,0x8e,0x07,0xc9,0x31,0xd2,0xe4,0x18,0x05,0xde,0xcd,
    0xd5,0x45,0xce,0xe7,0x43,0xac,0x71,0x04,0x77,0xe8,0x28,0xea,0xd2,0x1f,0x9f,0xf6,
    0x6a,0x0c,0x5c,0xa3,0x4d,0xaf,0xc6,0x82,0x6b,0xaf,0x1e,0x06,0xd3,0x5e,0x8d,0x37,
    0xbd,0x12,0xdf,0x38,0x37,0xc6,0x53,0xe3,0x71,0x70,0xcb,0x5d,0x31,0x91,0x7b,0x4b,
    0xcf,0x8a,0xdc,0x99,0x93,0xc0,0x45,0xcb,0x04,0xec,0x0c,0x17,0x2f,0xbe,0x47,0xb8,
    0xff,0x27,0x18,0x8e,0xc9,0x86,0x43,0xe6,0x4c,0x26,0x4e,0xfd,0x8f,0xe2,0xef,0x6a,
    0x72,0x3c,0x06,0x2e,0xf1,0x53,0xb0,0x35,0xc7,0xe3,0xe4,0x98,0x62,0x38,0xa6,0x1a,
    0x0e,0x99,0x33,0x95,0x38,0xf5,0x3f,0x81,0x7f,0xba,0xc9,0xf1,0x24,0xb8,0xc4,0x4f,
    0xc3,0xd6,0x1c,0x4f,0x91,0x63,0x9a,0xe1,0x98,0x61,0x38,0x64,0xce,0x0c,0xe2,0x64,
    0x7f,0x6a,0xed,0xc6,0x9b,0xbe,0x3c,0x4d,0x5f,0x66,0x9a,0xbe,0x3c,0x03,0xae,0x7d,
    0x99,0x05,0xa6,0x7d,0x99,0x63,0xfa,0x22,0xbe,0xd9,0x6e,0x2c,0x82,0x7b,0xb6,0xd1,
    0xf2,0x2c,0x5a,0xe6,0x9a,0xf5,0xcc,0x03,0xd7,0xfb,0x7d,0x3e,0x31,0x6d,0xdc,0x2f,
    0xa2,0xfc,0xb6,0x3e,0x0f,0x36,0xdf,0xdc,0xef,0x51,0x5f,0xa7,0x44,0xef,0x5f,0x40,
    0xcc,0x3c,0xc3,0xf1,0x42,0x2e,0x47,0x5e,0x6f,0x2f,0x04,0x5b,0xc0,0x6f,0x61,0xa2,
    0xf9,0xcd,0xd6,0xbd,0xb9,0x90,0x9a,0xcc,0x41,0xf7,0x22,0x53,0x93,0x17,0xa9,0xc9,
    0x62,0x53,0x93,0x97,0xc0,0xb5,0x26,0x2f,0x83,0x69,0x4d,0x96,0x9a,0x9a,0x88,0x6f,
    0x89,0x8f,0xcd,0xe1,0x5e,0x62,0x6a,0xf2,0xca,0x45,0x6a,0xf2,0x2a,0xf8,0x6a,0xb8,
    0x5f,0x03,0xcb,0x42,0xa3,0xf2,0xc8,0xe7,0x09,0xc7,0x22,0x31,0xaf,0xa3,0x61,0x11,
    0xf1,0x4b,0xd0,0xb1,0xdc,0xe8,0x90,0x98,0x65,0x6e,0x2c,0x67,0xfe,0x32,0xa3,0xe3,
    0x8d,0x8b,0xe8,0x78,0x13,0x5c,0xeb,0xba,0x22,0xd4,0x9b,0xb7,0xc0,0x56,0x84,0x7a,
    0x23,0xf7,0x88,0xf8,0x57,0xc2,0xa1,0x63,0x12,0x3d,0x5b,0xc5,0xdc,0x95,0x86,0xfb,
    0xed,0x50,0xcf,0x56,0x83,0xad,0xfa,0x8f,0x9e,0xad,0xa6,0x1e,0xba,0x9e,0xe5,0xa1,
    0x1e,0xce,0x31,0xfc,0x6b,0xe1,0x6f,0xc7,0x59,0x79,0x07,0x2c,0x30,0xd8,0x3a,0xb0,
    0x88,0xc1,0xde,0x05,0x8b,0x1a,0x6c,0x3d,0x58,0xcc,0xaf,0x35,0xe7,0xde,0x7b,0x0f,
    0xce,0x75,0xcc,0x59,0x8f,0xce,0x35,0xf8,0x74,0x2f,0xbd,0xcf,0x5e,0xda,0x60,0xf6,
    0xd2,0x07,0xe0,0xba,0x97,0x3e,0x04,0xd3,0xbd,0x94,0x6d,0x7a,0x28,0xbe,0x8d,0x6e,
    0x64,0xb3,0xc6,0x8d,0xa6,0x87,0x1f,0xf1,0xbc,0x65,0xef,0xbd,0x8f,0xc1,0x45,0xcb,
    0x26,0x6c,0xbd,0x2f,0x3e,0xe1,0x59,0x7d,0x93,0xe1,0xd8,0x6c,0x38,0x64,0xce,0x66,
    0xe2,0xd4,0xff,0x29,0x7e,0x7b,0xef,0x7d,0x06,0x2e,0xf1,0x5b,0xb0,0x35,0xc7,0xe7,
    0xe4,0xd8,0x62,0x38,0xb6,0x1a,0x0e,0x99,0xb3,0x95,0x38,0xf5,0x7f,0x81,0xdf,0xde,
    0x7b,0x5f,0x82,0x4b,0xfc,0x36,0x6c,0xcd,0xb1,0x9d,0x1c,0xdb,0x0c,0xc7,0x0e,0xc3,
    0x21,0x73,0x76,0x10,0x27,0xfb,0x43,0x6b,0x97,0x6d,0xfa,0xf2,0x15,0x7d,0xd9,0x69,
    0xfa,0xf2,0x35,0xb8,0xf6,0xe5,0x1b,0x30,0xed,0xcb,0x6e,0xd3,0x17,0xf1,0xed,0x72,
    0x63,0x1f,0xdc,0xbb,0xcc,0xde,0xdb,0x83,0x16,0x7d,0x66,0xdd,0x0b,0xb6,0xc7,0x3c,
    0x97,0x6b,0xec,0xb7,0xb9,0xb1,0x39,0xe7,0xe0,0x3b,0xb0,0xbd,0xe6,0x1c,0x44,0xcd,
    0x39,0x58,0x43,0x8c,0xac,0x6b,0x37,0xb9,0xf7,0x99,0x75,0x7d,0xcf,0xba,0xf6,0x9b,
    0x75,0xfd,0x00,0xae,0xeb,0xfa,0x11,0x4c,0xd7,0x75,0xd0,0xac,0x4b,0x7c,0x07,0xdc,
    0x38,0x0c,0xf7,0x01,0x53,0xe3,0x9f,0xd0,0x6a,0xef,0x8c,0x9f,0xc1,0x35,0xe6,0x50,
    0x68,0x3f,0x1d,0x22,0x46,0xf4,0x1e,0x84,0xf3,0xb0,0x79,0xc6,0xf8,0x05,0xbd,0x47,
    0xcd,0x33,0xc6,0xaf,0xe0,0x32,0xff,0x08,0xb6,0xfa,0x7e,0xe3,0x7f,0x84,0x6c,0x9e,
    0x67,0x7e,0x07,0x1b,0x69,0xd6,0xf7,0x07,0xf8,0x60,0xd6,0x77,0xdc,0xac,0x4f,0x7c,
    0xc7,0xdc,0x38,0x8e,0x96,0x63,0x46,0xfb,0x89,0xd0,0x3e,0x3d,0x61,0xee,0x60,0x8d,
    0x3f,0x6e,0xb4,0xfc,0x19,0xd2,0x72,0x12,0xac,0x85,0xd1,0x72,0x0a,0x5c,0xb5,0x9c,
    0x31,0x5a,0x4e,0x79,0xee,0xc0,0x63,0xc2,0x7d,0xda,0x68,0x39,0x1b,0xda,0xcf,0x67,
    0x8d,0x16,0x8d,0x3f,0x63,0xb4,0xfc,0x15,0xd2,0x72,0x0e,0x6c,0xa7,0xd1,0xf2,0x37,
    0xb8,0x6a,0xd1,0x07,0x59,0xd1,0x22,0xbe,0xf3,0x5c,0xea,0xc2,0x7d,0xde,0x68,0x89,
    0x46,0xfe,0xed,0xbb,0x68,0x11,0x5b,0xfe,0x27,0x15,0x2d,0x1a,0x1f,0x44,0x2e,0xec,
    0xf1,0xc1,0xd0,0x1e,0xdd,0x6d,0xf6,0x7c,0x22,0x7c,0xc2,0x25,0xff,0xbb,0x8a,0x7d,
    0xce,0x11,0xd4,0x71,0xa3,0x36,0x67,0x3c,0x1f,0x75,0xca,0xe3,0xff,0xd7,0x8d,0x79,
    0x1d,0x79,0xe1,0xca,0x6f,0xf6,0x5f,0x61,0xf0,0xb5,0xac,0xb1,0x18,0x58,0x11,0xd6,
    0x58,0xc2,0xd4,0xbb,0x98,0x7f,0x9f,0x25,0xef,0x26,0x72,0x78,0x8a,0x1b,0x9e,0x92,
    0xf0,0x8c,0x27,0x7f,0x69,0xb0,0x52,0xbe,0x6e,0x51,0x6f,0xcb,0x9c,0x32,0x66,0x4e,
    0x59,0xe6,0x14,0x70,0xea,0xe2,0xbc,0x0b,0x8c,0x80,0x97,0xe5,0x5d,0x96,0xf2,0x25,
    0xe3,0x2f,0xef,0x9f,0x73,0x13,0x73,0xdf,0x9f,0x25,0xf3,0x4e,0x4b,0x72,0x54,0x24,
    0x47,0x09,0xdf,0x8b,0x0b,0xeb,0x51,0xf0,0x22,0xf5,0x28,0x40,0x7c,0x21,0xa3,0xa9,
    0x12,0xb8,0xd6,0xa3,0xb2,0x79,0xff,0x28,0xf5,0xa8,0x6a,0xea,0x21,0xbe,0x2a,0xfe,
    0x3d,0x43,0x0e,0x4f,0x15,0xc3,0x53,0x0d,0x9e,0x49,0xe4,0xaf,0x0e,0xa6,0xf5,0xa8,
    0xce,0x9c,0x1a,0x66,0x4e,0x4d,0xe6,0x8c,0x61,0xce,0x95,0x60,0x15,0x0c,0x4f,0x0a,
    0x78,0x79,0x53,0xb7,0x54,0x53,0xb7,0x14,0xde,0xe1,0x49,0x8e,0x54,0x72,0x54,0x35,
    0xf5,0xf8,0x07,0x46,0x91,0xe8,0x22,0x5c,0x16,0x00,0x00
};

// Generated from:
//
// #version 450 core
//
// #extension GL_EXT_samplerless_texture_functions : require
//
// layout(set = 0, binding = 0)uniform texture3D src;
// layout(location = 0)out vec4 dst;
//
// layout(push_constant)uniform PushConstants {
//
//     ivec2 srcOffset;
//     ivec2 dstOffset;
//     int srcMip;
//     int srcLayer;
//
//     bool flipX;
//     bool flipY;
//
//     bool premultiplyAlpha;
//     bool unmultiplyAlpha;
//
//     bool dstHasLuminance;
//     bool dstIsAlpha;
//
//     bool srcIsSRGB;
//     bool dstIsSRGB;
//
//     int dstDefaultChannelsMask;
//     bool rotateXY;
// } params;
//
// float linearToSRGB(float linear)
// {
//
//     if(linear <= 0.0031308)
//     {
//         return linear * 12.92;
//     }
//     else
//     {
//         return pow(linear,(1.0f / 2.4f))* 1.055f - 0.055f;
//     }
// }
//
// float sRGBToLinear(float sRGB)
// {
//
//     if(sRGB <= 0.04045)
//     {
//         return sRGB / 12.92;
//     }
//     else
//     {
//         return pow((sRGB + 0.055f)/ 1.055f, 2.4f);
//     }
// }
//
// void main()
// {
//     ivec2 dstSubImageCoords = ivec2(gl_FragCoord . xy)- params . dstOffset;
//
//     ivec2 srcSubImageCoords = dstSubImageCoords;
//
//     if(params . flipX)
//     {
//         srcSubImageCoords . x = - srcSubImageCoords . x;
//     }
//     if(params . flipY)
//     {
//         srcSubImageCoords . y = - srcSubImageCoords . y;
//     }
//     if(params . rotateXY)
//     {
//         srcSubImageCoords . xy = srcSubImageCoords . yx;
//     }
//
//           vec4 srcValue = texelFetch(src, ivec3(params . srcOffset + srcSubImageCoords, params . srcLayer), params . srcMip);
//
//     if(params . srcIsSRGB)
//     {
//
//         srcValue . r = linearToSRGB(srcValue . r);
//         srcValue . g = linearToSRGB(srcValue . g);
//         srcValue . b = linearToSRGB(srcValue . b);
//     }
//
//     if(params . premultiplyAlpha)
//     {
//         srcValue . rgb *= srcValue . a;
//     }
//     else if(params . unmultiplyAlpha && srcValue . a > 0)
//     {
//         srcValue . rgb /= srcValue . a;
//     }
//
//            vec4 dstValue = vec4(srcValue);
//
//     if(params . dstIsSRGB)
//     {
//
//         dstValue . r = sRGBToLinear(dstValue . r);
//         dstValue . g = sRGBToLinear(dstValue . g);
//         dstValue . b = sRGBToLinear(dstValue . b);
//     }
//
//     if(params . dstHasLuminance)
//     {
//         dstValue . rg = dstValue . ra;
//     }
//     else if(params . dstIsAlpha)
//     {
//         dstValue . r = dstValue . a;
//     }
//     else
//     {
//         int defaultChannelsMask = params . dstDefaultChannelsMask;
//         if((defaultChannelsMask & 2)!= 0)
//         {
//             dstValue . g = 0;
//         }
//         if((defaultChannelsMask & 4)!= 0)
//         {
//             dstValue . b = 0;
//         }
//         if((defaultChannelsMask & 8)!= 0)
//         {
//             dstValue . a = 1;
//         }
//     }
//
//     dst = dstValue;
// }
