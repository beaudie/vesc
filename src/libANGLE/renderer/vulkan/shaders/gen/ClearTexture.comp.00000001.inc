// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/ClearTexture.comp.00000001.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kClearTexture_comp_00000001[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x5d,0x92,0xc9,0x4e,0x5b,0x41,
    0x10,0x45,0xcb,0xef,0x19,0x33,0xd8,0x8c,0x1e,0x62,0x2c,0x33,0x3a,0xb1,0x64,0x06,
    0x1b,0x4b,0xb1,0x19,0x8c,0x41,0xac,0x92,0x05,0xbb,0x7c,0x41,0x24,0x36,0x59,0x24,
    0x8a,0x04,0xdf,0xc0,0x67,0x65,0x95,0x28,0x9f,0x94,0x00,0x8a,0xc8,0xad,0x7e,0xa7,
    0xd1,0x13,0x96,0xda,0xf5,0xea,0xd6,0xad,0xaa,0x5b,0x5d,0x9d,0x26,0x9d,0x59,0xb3,
    0x82,0x2d,0xd8,0x9c,0x5d,0x5a,0xf6,0x5b,0xb5,0x44,0x88,0x59,0xd9,0x4a,0xc1,0x7e,
    0xb8,0xfe,0x74,0xdd,0xbf,0xbd,0xbb,0xe9,0xbf,0x1f,0x1d,0x79,0x7c,0xc9,0xd2,0xc0,
    0xf3,0xd8,0xb2,0x38,0x33,0xb2,0x45,0x9d,0xaf,0x9f,0xbf,0x7c,0xb3,0x90,0x67,0xb6,
    0x22,0xbc,0x18,0x6a,0xf9,0x77,0xc6,0x0d,0xb5,0x84,0x96,0xe1,0xb4,0xf1,0xd7,0x64,
    0x4b,0xd4,0xf8,0xa8,0x6a,0x55,0x74,0x74,0xb0,0x11,0x2b,0x80,0xad,0x84,0xbc,0x34,
    0x60,0x09,0x35,0xfa,0xaf,0x6a,0x0c,0x5e,0xd5,0x70,0xbe,0x63,0x29,0xfc,0xa1,0xec,
    0xee,0x4b,0x2c,0xf3,0x77,0x72,0xfe,0x39,0x1a,0xd7,0x75,0xaa,0xea,0x92,0x84,0x78,
    0x1a,0xf2,0xfd,0xbb,0x2e,0x8e,0xf7,0xdb,0x26,0xe7,0x8d,0xfc,0x79,0x34,0xa4,0x01,
    0x2f,0xea,0x4e,0x33,0xcd,0x8e,0x4f,0xf0,0xcb,0x60,0xfb,0xe4,0x57,0xc8,0x77,0xfe,
    0x22,0xb1,0x52,0x2e,0xbe,0xca,0x4c,0xed,0xdc,0x3d,0x39,0xb6,0x29,0xdf,0xe7,0x8f,
    0x98,0xe7,0xd7,0xe8,0x55,0xa5,0x5f,0x2d,0xe8,0xcc,0x30,0xd7,0xdb,0x40,0x6f,0xec,
    0xdf,0x08,0xba,0x33,0xdf,0xf3,0x9b,0x70,0xbd,0x5e,0x43,0x53,0xb4,0xe1,0x47,0x2d,
    0x5b,0xcc,0x5e,0xd3,0x7f,0x27,0x57,0xa3,0xc7,0x0c,0x91,0x77,0xa0,0xf3,0xfc,0x6c,
    0xb6,0xa1,0x1a,0x71,0x2f,0x9b,0xdc,0x7f,0x9f,0x5e,0x47,0xd4,0x1a,0xa0,0xd5,0xfd,
    0x21,0x58,0xac,0x3b,0x62,0xd7,0xce,0x3f,0x21,0x96,0xbf,0x9b,0x33,0xe2,0xd1,0x9f,
    0x30,0xcb,0x81,0x3c,0x9f,0xe3,0x1c,0xce,0x84,0x33,0xd6,0xbb,0x48,0xb8,0x4f,0x63,
    0x4f,0x7f,0x85,0xf8,0xfb,0xfd,0x23,0x6f,0x0a,0xfe,0xa4,0x6f,0xdf,0xcb,0x05,0x71,
    0xb7,0x57,0x62,0x2d,0x86,0xb7,0x9f,0xed,0xd0,0xe3,0x53,0xfa,0x2e,0x83,0x3b,0xa7,
    0xc9,0x9b,0xa9,0x73,0xb7,0x91,0xd3,0x02,0xff,0x2e,0xdf,0xef,0x75,0x83,0xbc,0x7b,
    0xe5,0xc4,0x77,0xd4,0xe2,0x8e,0x23,0x67,0x07,0xbc,0x22,0x46,0x9b,0xf7,0x1a,0xdf,
    0x93,0xc7,0x7e,0x28,0xd7,0xf7,0xf0,0x96,0x7a,0xbb,0xcc,0xd1,0x65,0x8e,0x47,0xd5,
    0xf1,0xd8,0x3b,0x9d,0x2e,0xb3,0xf8,0xf7,0x83,0xec,0x14,0xbf,0x1b,0x74,0x97,0x82,
    0xee,0x3d,0x74,0xf7,0x38,0x51,0xfb,0x3e,0xb1,0xdf,0x68,0x3d,0x04,0xf3,0x3d,0xff,
    0x04,0x1b,0x83,0xfb,0xce,0x7e,0x81,0x1d,0x83,0x8d,0xe9,0xe1,0x3b,0x3c,0x65,0xcf,
    0x3d,0xe6,0xbf,0x90,0xde,0x53,0xb8,0x79,0x5d,0x6e,0xff,0x69,0xda,0x13,0x9d,0xff,
    0x2b,0xc4,0x44,0x70,0xa4,0x04,0x00,0x00
};

// Generated from:
//
// #version 450 core
// layout(local_size_x = 16, local_size_y = 1, local_size_z = 1)in;
//
// layout(set = 0, binding = 0)buffer dest
// {
//  uint dataBuffer[];
// };
//
// layout(push_constant)uniform PushConstants
// {
//  uint data[4];
//  uint texelCount;
// } params;
//
// void main()
// {
//  uint threadId = gl_GlobalInvocationID . x;
//  uint texelCount = params . texelCount;
//
//  if(threadId >= ceil(texelCount / 2))
//  {
//   return;
//  }
//  uint byteData = params . data[0]& 0xFFFF;
//     dataBuffer[threadId]=(byteData)|(byteData << 16);
//
// }
