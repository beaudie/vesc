// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/ClearTexture.comp.00000001.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kClearTexture_comp_00000001[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x5d,0x93,0xdb,0x4e,0x53,0x51,
    0x10,0x86,0x57,0xf7,0x2e,0x1b,0xb5,0xc8,0xb1,0xad,0xa0,0xa5,0x50,0x2a,0x08,0xd8,
    0x50,0xd4,0x16,0x4c,0x38,0xc9,0xc1,0xe8,0x05,0x77,0x3e,0x01,0x89,0x37,0x5e,0x48,
    0x48,0xe0,0x11,0x8c,0x8f,0xe5,0x95,0xc6,0x47,0xc2,0x43,0x0c,0xce,0x3f,0xfd,0x56,
    0xb3,0xd2,0x26,0xab,0x6b,0xcd,0x3f,0xff,0x9c,0x67,0xe7,0x59,0x7b,0x3c,0x84,0x52,
    0x78,0x10,0xee,0x85,0xb7,0x61,0xf0,0x9b,0x09,0x99,0x21,0x21,0x54,0x42,0xe1,0xf7,
    0xbb,0xf3,0x0f,0xe7,0x5b,0xd7,0x37,0x1f,0xb7,0x7a,0xfd,0x6d,0xe9,0x27,0x43,0xee,
    0x3c,0xe9,0xa6,0x8c,0x33,0x66,0x77,0xd9,0xce,0xe7,0x8b,0x4f,0x97,0xc1,0xed,0x42,
    0x98,0x36,0xbc,0xec,0xbe,0xf4,0x1e,0x70,0xdd,0x97,0xa1,0x15,0x38,0x0d,0xe4,0xaa,
    0xdd,0x05,0x3e,0xde,0x9b,0xb7,0x1a,0x79,0xb4,0xb9,0x23,0x56,0x02,0x9b,0x4e,0xb0,
    0x0c,0xac,0x9a,0x60,0x39,0xd8,0xbc,0xfb,0xcf,0x87,0x3c,0xc5,0xea,0x8d,0xc4,0xea,
    0x8f,0xc4,0x12,0xbf,0x8f,0x0f,0xf1,0x77,0xed,0x5e,0x19,0xea,0x06,0x72,0x2b,0x91,
    0x4f,0xa8,0x65,0xc1,0xce,0x9c,0x45,0xc9,0x5c,0x9f,0xbb,0xbd,0xde,0x35,0xe3,0x28,
    0xde,0x32,0x36,0x8f,0x4c,0xbe,0x4f,0x0e,0xb9,0xe3,0x65,0xeb,0xfd,0xa0,0x36,0xe1,
    0x7b,0xc8,0x15,0xb0,0xe7,0xd8,0x4f,0x60,0x2f,0xfe,0x43,0x74,0xc2,0xeb,0xe6,0x65,
    0x06,0xff,0x91,0x3b,0x47,0x7d,0x8d,0xa4,0xb7,0xc2,0x9a,0xf6,0xaa,0xd1,0xab,0x22,
    0x39,0xf2,0x59,0x27,0x7e,0x8d,0x1c,0xea,0x9e,0x6b,0xc4,0xca,0xde,0xcb,0xe5,0x24,
    0xa7,0x79,0x6a,0x2e,0x61,0xff,0x18,0x6e,0x91,0xe8,0x17,0xe9,0x41,0x94,0x5b,0xd4,
    0x1c,0xf3,0x5c,0x45,0x5f,0xb5,0xff,0x8d,0x84,0xd7,0xa5,0xd6,0xc8,0x7b,0x69,0xe7,
    0xee,0x4e,0xfe,0xf2,0xe1,0xfc,0x9a,0xcc,0xa9,0x47,0xfc,0x1d,0x7c,0xf5,0xc9,0x5f,
    0xf2,0xee,0x48,0xfc,0x3d,0x76,0x47,0xfc,0x43,0x74,0x45,0x12,0xe7,0x0d,0xfa,0x28,
    0x1f,0x53,0x5f,0xc7,0x24,0xd5,0x76,0x02,0xe7,0x98,0xb3,0x63,0xfb,0x93,0xd1,0xeb,
    0x40,0x6d,0xbf,0x0c,0xd1,0xf7,0x70,0x6b,0xd2,0x29,0xf8,0x5f,0x7b,0x6b,0x7e,0x67,
    0xe8,0xcf,0xdc,0x7e,0xcc,0xe7,0x38,0xc9,0xac,0xa5,0x3f,0x20,0xee,0x14,0xf8,0x95,
    0xc9,0x9a,0xed,0x2c,0x98,0x6c,0xd4,0xe7,0x27,0xcc,0x66,0x21,0xb1,0x69,0x80,0x47,
    0x4e,0x13,0xce,0x62,0xc2,0x59,0x02,0xff,0x62,0x9c,0xb8,0x93,0x0d,0xf0,0x68,0xb7,
    0x82,0x5d,0x2b,0xb1,0x6b,0x83,0x47,0xbb,0xa7,0xd8,0x0a,0xff,0x0a,0xb6,0x06,0xbe,
    0x9a,0xe4,0xfd,0x0c,0x7c,0xc2,0x18,0x92,0xd7,0x93,0x3d,0x97,0xee,0x9b,0xd9,0x6a,
    0xee,0x9b,0xd4,0xb8,0x4e,0xdf,0x3a,0xf4,0xed,0x8f,0xf9,0xd9,0xf4,0x79,0x04,0xc7,
    0xd4,0x3b,0xbd,0x7f,0xdb,0x7d,0x8a,0xdc,0xf1,0xdc,0x0b,0xcf,0x7d,0x9b,0xdc,0xbb,
    0x9c,0x98,0xff,0x0b,0x74,0x3f,0xc9,0xf5,0x15,0x98,0xf6,0xea,0x3b,0xd8,0x3e,0xb8,
    0x76,0xe4,0x07,0xd8,0x01,0xd8,0x3e,0x31,0xb4,0x33,0x47,0xec,0x55,0x97,0x99,0x1c,
    0x5a,0xbe,0x47,0x70,0xd3,0xbc,0x74,0xff,0xb3,0x6a,0x5f,0xdb,0xf9,0x0f,0x63,0x1f,
    0xaa,0xda,0x64,0x05,0x00,0x00
};

// Generated from:
//
// #version 450 core
// layout(local_size_x = 16, local_size_y = 1, local_size_z = 1)in;
//
// layout(set = 0, binding = 0)buffer dest
// {
//  uint dataBuffer[];
// };
//
// layout(push_constant)uniform PushConstants
// {
//  uint rawData[4];
//  uint width;
//  uint height;
//  uint depth;
// } params;
//
// void main()
// {
//  uint threadId = gl_GlobalInvocationID . x;
//
//  if(threadId >= ceil(params . width * params . height * params . depth / 2))
//  {
//   return;
//  }
//  uint byteData = params . rawData[0]& 0xFFFF;
//     dataBuffer[threadId]=(byteData)|(byteData << 16);
//
// }
