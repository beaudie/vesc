// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/ClearTexture.comp.00000001.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kClearTexture_comp_00000001[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x5d,0x94,0xdd,0x4e,0x13,0x51,
    0x10,0xc7,0x87,0xdd,0x65,0x51,0x5b,0x04,0xa4,0x14,0x10,0x5a,0xb1,0x45,0x04,0xa1,
    0xa4,0x28,0xb4,0x10,0x63,0xe5,0x53,0xbc,0xe0,0x8e,0x27,0x20,0xf1,0xc6,0x0b,0x8d,
    0x89,0x3e,0x82,0xf1,0xb1,0xbc,0xd2,0xf8,0x48,0x7e,0xc5,0xe0,0xcc,0x39,0xbf,0x43,
    0x26,0x4b,0xb2,0x9c,0x9d,0xdf,0x7c,0x9c,0xff,0x99,0x39,0xdb,0x3c,0xeb,0x4e,0x88,
    0x8c,0xc9,0x1d,0xb9,0x25,0xe7,0x12,0xff,0x66,0x24,0x53,0x22,0x52,0x93,0x32,0xac,
    0xe7,0x17,0x97,0x17,0xdb,0x1f,0x3f,0xbd,0xd9,0xde,0xdd,0xeb,0x9b,0xff,0xae,0xe4,
    0x21,0xce,0x7c,0x53,0x1a,0x33,0xae,0x6b,0xa1,0xcf,0xbb,0xab,0xb7,0xef,0x25,0xe4,
    0x89,0x4c,0x2b,0x2f,0x42,0x2d,0x7b,0x8f,0xb1,0xa1,0x96,0xd2,0x1a,0x31,0xcb,0xd8,
    0x73,0xba,0x96,0xd4,0x78,0xad,0xd5,0x9a,0xe8,0xe8,0xb2,0x26,0x36,0x06,0x9b,0x76,
    0x2c,0x83,0x35,0x1c,0xcb,0x61,0xab,0x8e,0x15,0xb0,0x75,0xc7,0xc6,0x61,0x5b,0x8e,
    0x95,0xb0,0xbe,0x63,0x13,0xb0,0xdd,0xa0,0x37,0xbf,0xd9,0xd7,0xb4,0x0f,0x2a,0xda,
    0x87,0x15,0xed,0x16,0x3f,0x44,0x93,0xc5,0x1f,0xe8,0xda,0xb9,0xf1,0x45,0xfb,0xa1,
    0xb3,0x4f,0xe9,0xcd,0xa2,0x3e,0xb3,0xba,0x4b,0x16,0xfc,0x79,0xc8,0xb7,0xf7,0x39,
    0x8d,0xb1,0xfd,0x56,0xc8,0x99,0x57,0xfb,0x36,0x1a,0xf2,0xc0,0x0b,0x9d,0x65,0xec,
    0x95,0xf1,0xe7,0xd8,0x35,0xd8,0x26,0xf9,0x75,0xf2,0x2d,0x7e,0x12,0x9f,0xf1,0xa6,
    0x56,0x99,0xa1,0xbe,0xd5,0x9e,0x65,0x86,0x85,0xcb,0x6d,0x60,0x2f,0xbb,0xd9,0x19,
    0x6b,0xeb,0x4e,0xcd,0xa0,0x3b,0xb2,0xe4,0xab,0x3e,0xb6,0xe7,0x3c,0xfa,0x9a,0x68,
    0x34,0x7b,0x01,0x66,0x67,0x5c,0x44,0x43,0xd2,0x6c,0xf6,0x7d,0x66,0x66,0xf9,0x4b,
    0xc4,0x96,0xce,0xdf,0xae,0xd8,0x1d,0x66,0x97,0x74,0xaf,0xd1,0xc3,0x86,0xfe,0x7f,
    0xe2,0xe2,0xfa,0xf0,0x64,0xef,0xd0,0x9b,0x94,0x67,0x73,0xbf,0xbe,0x16,0x69,0x69,
    0x6f,0xd2,0xbc,0xdb,0xcc,0x75,0x80,0x9e,0x7d,0x6a,0x0c,0x39,0x8f,0xd9,0x07,0x95,
    0xba,0x2f,0xb8,0xbb,0x16,0x7f,0x88,0xaf,0x74,0xfb,0x1c,0xe3,0x4f,0xf6,0x09,0xe7,
    0xdf,0x52,0xcb,0xce,0x7a,0x4a,0xcc,0x09,0xcf,0x40,0xbb,0x91,0x31,0x0b,0x61,0xfe,
    0xbf,0x94,0x58,0x8f,0x7e,0xaa,0x75,0x06,0xff,0xab,0xef,0x36,0xef,0x57,0xf8,0x6d,
    0x3d,0xd2,0xa8,0xc9,0xf0,0x2d,0xc7,0xbb,0x51,0x0f,0xfa,0xe2,0xbe,0x53,0xf0,0x0f,
    0x6a,0xdb,0xec,0xef,0xc1,0x2c,0x67,0x89,0xef,0x76,0x81,0x79,0xa4,0x9c,0x16,0x3c,
    0xc5,0x3c,0x20,0xa6,0xed,0x62,0x56,0xe0,0x9f,0x35,0xa6,0xe4,0xde,0xb7,0xe0,0x29,
    0xaf,0x4b,0x5e,0xc7,0xe5,0xad,0xc2,0x53,0xde,0x23,0x72,0x8d,0x7f,0x81,0x3d,0x86,
    0xaf,0x39,0xdd,0xeb,0xf0,0xba,0x46,0x98,0xbd,0xe1,0xbe,0x0b,0xf3,0x7d,0xd5,0xdc,
    0x78,0x0f,0xe2,0x19,0x37,0xe8,0x5b,0x8f,0xbe,0xfd,0xd1,0x3a,0x9b,0xfc,0x3e,0xf4,
    0xe8,0x9d,0xbd,0xff,0xd6,0xf5,0x0c,0xbb,0x17,0xb4,0x97,0x41,0xfb,0x53,0xb4,0xf7,
    0xb9,0x43,0x49,0xff,0x33,0x7c,0x3f,0xd0,0xba,0x07,0xb3,0x7b,0xf5,0x0d,0x36,0x82,
    0xdb,0x1d,0xf9,0x0e,0x7b,0x09,0x1b,0xb1,0xc7,0x61,0x58,0xe3,0xbd,0xda,0x61,0x26,
    0x23,0xd5,0x7b,0x44,0xac,0xd7,0x65,0xeb,0x3f,0x3d,0xed,0xbe,0x3e,0xff,0x01,0x9b,
    0x89,0xa9,0xfd,0xe4,0x05,0x00,0x00
};

// Generated from:
//
// #version 450 core
// layout(local_size_x = 16, local_size_y = 1, local_size_z = 1)in;
//
// layout(set = 0, binding = 0)buffer dest
// {
//  uint dataBuffer[];
// };
//
// layout(push_constant)uniform PushConstants
// {
//     vec4 clearValue;
//  uint depthValue;
//  uint rawData[4];
//  uint dataSize;
//  uint stencilValue;
//  uint width;
//  uint height;
//  uint depth;
// } params;
//
// void main()
// {
//  uint threadId = gl_GlobalInvocationID . x;
//
//  if(threadId >= ceil(params . width * params . height * params . depth / 2))
//  {
//   return;
//  }
//  uint byteData = params . rawData[0]& 0xFFFF;
//     dataBuffer[threadId]=(byteData)|(byteData << 16);
//
// }
