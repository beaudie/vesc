// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/ImageCopy.frag.00000002.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kImageCopy_frag_00000002[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x85,0x98,0x87,0x73,0x55,0x55,
    0x10,0xc6,0x6f,0xf2,0x92,0xf7,0x20,0xb4,0x20,0x11,0x10,0xc1,0x49,0x00,0x11,0x0d,
    0x06,0xd4,0xd0,0x09,0x55,0x29,0x4a,0x93,0x10,0x41,0x44,0x21,0x8a,0x28,0x55,0x90,
    0xa6,0x82,0x94,0x48,0x13,0x10,0x41,0x51,0x50,0x04,0x41,0x10,0x45,0x24,0x82,0x82,
    0x42,0x44,0x8a,0x85,0xa2,0x02,0x2a,0x4d,0xff,0x10,0xc7,0x32,0x63,0x39,0x7b,0xf3,
    0xdb,0xf8,0xf9,0x86,0xd1,0xcc,0x9c,0xb9,0x6f,0xbf,0xdd,0xfd,0xce,0xb7,0x7b,0xca,
    0x7d,0x2f,0x89,0xcc,0x56,0xa9,0x28,0x91,0x11,0xe5,0x44,0xb5,0xa2,0x9f,0xa2,0xea,
    0xbf,0x86,0x51,0x66,0x94,0x11,0x9e,0x75,0xa2,0x64,0xfc,0x1c,0x30,0xb8,0x74,0x70,
    0xd1,0xac,0xd9,0x13,0x8a,0x8a,0x3b,0x76,0x30,0x7f,0xfd,0x28,0x11,0xc7,0x99,0xaf,
    0x41,0x94,0x8a,0xb2,0xc2,0xd3,0xc6,0xb4,0xf2,0x49,0xd3,0x0d,0x6f,0x13,0xc6,0x95,
    0x30,0x72,0x43,0x9c,0xe1,0x29,0xe3,0x08,0x9f,0xda,0xc4,0x9c,0x96,0x13,0x45,0x03,
    0xa3,0xec,0xa8,0x1d,0xf3,0xb5,0xe2,0xe9,0x58,0x06,0x58,0x2d,0xc1,0x32,0xc1,0x72,
    0x05,0x4b,0x80,0xe5,0x09,0x96,0x05,0xd6,0x54,0xb0,0x6c,0xb0,0xe6,0x82,0x25,0xc1,
    0xf2,0x05,0x4b,0x81,0xb5,0x16,0xac,0x16,0x58,0x5b,0xc1,0x6a,0x83,0xb5,0x13,0x2c,
    0x07,0xac,0x83,0x60,0x75,0xc0,0x8a,0x05,0xab,0x0b,0xd6,0x45,0xb0,0x7a,0x60,0x3d,
    0xe2,0x3e,0x25,0x6a,0xea,0xb5,0x9e,0x8d,0x09,0xcf,0x96,0xf4,0xc7,0xed,0x02,0xb1,
    0xad,0xcf,0x37,0x60,0x37,0x0a,0x59,0x99,0xb1,0x3f,0x11,0xf7,0xc6,0x3e,0x37,0x0e,
    0x9f,0x92,0xd4,0x99,0x1f,0xe2,0x53,0xd4,0x99,0x8c,0xe3,0xb2,0xe2,0xfa,0x92,0x60,
    0x85,0xc1,0x4e,0xa2,0xa7,0x79,0xd1,0x90,0xee,0x79,0x81,0xa1,0xbe,0xe0,0x8d,0xc2,
    0x18,0x71,0x68,0x68,0x1f,0xb7,0xad,0xc7,0x65,0x65,0x97,0x7a,0xba,0xdd,0x2c,0x8c,
    0x92,0x9c,0x15,0xbd,0xdc,0xb6,0x7e,0x57,0x0e,0x28,0x2f,0xb9,0x36,0xd8,0xf9,0x68,
    0xb0,0xb5,0x6d,0x12,0xec,0x02,0xec,0x4c,0x74,0xb5,0x44,0x43,0x01,0xfe,0xd6,0xe8,
    0xca,0xc2,0x7f,0x23,0xb9,0x86,0x77,0xc7,0x6e,0x23,0x7c,0x37,0x11,0x6f,0x7c,0x36,
    0x5f,0x21,0xfc,0x51,0xdc,0x9f,0xdc,0xb8,0xa7,0x05,0x0c,0xd7,0x52,0xf8,0x3f,0x23,
    0xbf,0xe6,0x99,0x15,0xdd,0xca,0xba,0xb7,0x63,0x7e,0xb3,0x8b,0xc0,0x0a,0xa9,0xaf,
    0x3d,0x7a,0x2c,0xbe,0x03,0xbe,0x02,0xf1,0x77,0x92,0x7a,0x3a,0xd7,0xe4,0x56,0xfb,
    0xed,0xd9,0x0d,0xbd,0xe6,0xef,0x49,0x3f,0xf2,0x25,0xbf,0x1f,0x7b,0xd9,0xe3,0x07,
    0x31,0x9f,0xfb,0x87,0xb2,0x76,0x96,0x7f,0x1f,0xf9,0xd6,0xaf,0xeb,0xc2,0x4c,0xa3,
    0xe9,0x4f,0x46,0xf4,0xef,0xbf,0x0c,0x99,0xf3,0x7e,0x3e,0x8f,0xa6,0x46,0xb3,0xc7,
    0x80,0xf9,0x1c,0x63,0xd3,0xec,0x72,0x59,0xc3,0x87,0xa9,0x49,0x35,0x4f,0xe4,0x6c,
    0xb8,0xe6,0x79,0xc4,0xbb,0x7f,0x01,0xba,0xdc,0x5f,0xc1,0xb9,0xb6,0x35,0x5d,0x86,
    0x2f,0x21,0xf1,0x6b,0xd2,0xf6,0xea,0x06,0xd1,0x63,0xf6,0xf6,0xd8,0x5a,0xd4,0xcf,
    0xf2,0x77,0xd2,0x5f,0xef,0xf9,0xdb,0xe4,0xee,0x14,0xbe,0xdd,0x9c,0x71,0x8b,0xff,
    0x80,0x78,0xd5,0x77,0xb0,0xa6,0xa6,0xac,0xe8,0xd3,0x9a,0xb9,0xff,0xf1,0x9f,0xe0,
    0x4c,0x9b,0xff,0x32,0x5a,0x77,0xd2,0xbf,0xcb,0xdc,0x83,0x89,0x78,0xed,0xb3,0x63,
    0xde,0x2c,0xf4,0x1a,0xf6,0x6b,0x40,0xb2,0x89,0x6d,0xc9,0x1d,0x90,0x12,0xbb,0x58,
    0x6c,0x5b,0xcf,0x51,0x62,0xdb,0x73,0x6a,0x9a,0x3d,0x33,0xcd,0x9e,0x2b,0xb6,0xd5,
    0xbe,0x4b,0x6c,0xdb,0x5f,0xc7,0xb1,0x4b,0x38,0x6f,0x6d,0x39,0x53,0xc3,0x02,0x6a,
    0xe7,0xe9,0x66,0xb0,0xb6,0xb2,0x57,0xa6,0x73,0x76,0x6f,0xc1,0xdf,0x27,0x54,0x60,
    0x7b,0xfd,0x36,0xce,0x43,0x7b,0xf8,0x2c,0xe6,0x76,0xf0,0x8a,0x10,0x63,0xf6,0x1d,
    0xe4,0x19,0xde,0x33,0x74,0xa0,0x15,0x98,0xc7,0x77,0xa4,0x07,0xe6,0x2b,0xc6,0x36,
    0xfe,0xce,0xdc,0x97,0x45,0x9c,0xa1,0x12,0xf6,0x4a,0x57,0xf0,0x3d,0x21,0xa6,0x7e,
    0x5c,0x57,0x35,0x66,0xe7,0xe8,0x97,0xc0,0x51,0x82,0xee,0xdf,0x43,0x7c,0x77,0xee,
    0xd7,0x12,0xfa,0xde,0x03,0x6e,0xeb,0x43,0x2f,0x7a,0xdd,0x0d,0x6e,0x5b,0xd7,0xde,
    0xe0,0x0b,0xb1,0xfb,0x80,0x79,0x4e,0x5f,0xc9,0x31,0xbd,0x7d,0x89,0xf9,0x2d,0x70,
    0xfb,0x1c,0x25,0xa2,0xff,0x4e,0xf4,0xf7,0x13,0xfd,0x77,0x81,0xbb,0xfe,0xfe,0x60,
    0xae,0x7f,0xa0,0xe8,0xef,0x1f,0xdf,0xf7,0x51,0x8c,0x19,0xf7,0x00,0xd1,0x72,0x37,
    0x5a,0x06,0x89,0xfe,0x7b,0xc0,0x5d,0xff,0x60,0x30,0xcf,0x19,0x22,0x39,0xa6,0x7f,
    0x08,0x31,0xa6,0xdf,0xe7,0x18,0x28,0xfa,0x87,0xa1,0x7f,0xa8,0xe8,0x1f,0x0e,0xee,
    0xfa,0xef,0x05,0x73,0xfd,0xa5,0xa2,0xdf,0x7c,0x23,0xc2,0x28,0x85,0x7b,0x84,0xac,
    0xfb,0x48,0xb4,0xd8,0xbe,0x33,0xbb,0x0c,0x6c,0xa4,0xdc,0x4f,0xbe,0x27,0xca,0xd0,
    0xe8,0x3c,0xa5,0xf0,0xd8,0x9d,0xf5,0x00,0xf7,0x95,0xef,0xc9,0x07,0xd1,0x3c,0x56,
    0xe6,0x7a,0x08,0xdc,0xed,0x71,0xcc,0xbd,0x98,0x3d,0x3a,0x9e,0x98,0x71,0xf0,0xd8,
    0x9d,0xf6,0x08,0x3c,0xe5,0xd2,0xdf,0x09,0xe0,0xe3,0x82,0x66,0x3b,0x3b,0x8f,0x32,
    0xff,0x78,0xee,0x8f,0x09,0x68,0x1e,0x85,0xcf,0xfb,0xf8,0x18,0x5c,0x13,0xa5,0x8f,
    0x8f,0x83,0x7b,0x1f,0x27,0x81,0x79,0x1f,0xa7,0x48,0x1f,0xcd,0x37,0x39,0x8c,0x29,
    0xd4,0x3f,0x19,0x6e,0x3b,0xc7,0xd3,0xb8,0x23,0x7c,0x1f,0x27,0xe3,0xf3,0x5a,0x8d,
    0x9b,0x96,0xa9,0xd8,0x5d,0x43,0xbc,0xf9,0x9e,0xe0,0x6e,0x9e,0x2a,0x1c,0x33,0x84,
    0xc3,0x72,0x66,0x10,0xe7,0xfe,0x27,0xf1,0x0f,0x92,0x39,0x66,0x81,0x5b,0xfc,0x4c,
    0x6c,0x9f,0x63,0x36,0x73,0xcc,0x14,0x8e,0x39,0xc2,0x61,0x39,0x73,0x88,0x73,0xff,
    0x53,0xf8,0xe7,0xc9,0x1c,0x4f,0x83,0x5b,0xfc,0x5c,0x6c,0x9f,0xe3,0x19,0xe6,0x98,
    0x2b,0x1c,0xf3,0x85,0xc3,0x72,0xe6,0x13,0x67,0x7b,0xc7,0x7b,0x37,0x45,0xd6,0xe5,
    0x59,0xd6,0x65,0x81,0xac,0xcb,0x42,0x70,0x5f,0x97,0x45,0x60,0xbe,0x2e,0x4b,0x64,
    0x5d,0x16,0xc5,0x7b,0x28,0x8a,0x56,0xc3,0xbd,0x58,0xb4,0x3c,0x87,0x96,0x0a,0xa9,
    0x67,0x29,0xb8,0xdf,0xbd,0xcb,0x89,0x19,0x16,0xde,0x46,0xf6,0xde,0x5b,0x01,0xb6,
    0x5c,0xee,0x5e,0xdb,0x57,0x6b,0x03,0xa7,0xf9,0x57,0x12,0xb3,0x54,0x38,0x9e,0xaf,
    0xe1,0xa8,0x1d,0xdb,0xab,0xc0,0x56,0xf2,0xde,0xc9,0x96,0xf7,0xa9,0xef,0xcd,0x55,
    0xf4,0x64,0x09,0xba,0x57,0x4b,0x4f,0x5e,0xa0,0x27,0x6b,0xa4,0x27,0x6b,0xc1,0xbd,
    0x27,0x2f,0x82,0x79,0x4f,0xd6,0x4b,0x4f,0xcc,0xb7,0x2e,0x8c,0xf5,0x70,0xaf,0x93,
    0x9e,0xbc,0x74,0x95,0x9e,0xbc,0x0c,0x5e,0x05,0xf7,0x2b,0x60,0x1b,0xd0,0xe8,0x3c,
    0xf6,0xfc,0x39,0xb0,0x58,0xcc,0xab,0x68,0x58,0x4d,0xfc,0x3a,0x74,0x6c,0x12,0x1d,
    0x16,0xb3,0x31,0x8c,0x4d,0xe4,0x6f,0x14,0x1d,0xaf,0x5d,0x45,0xc7,0xeb,0xe0,0xde,
    0xd7,0xcd,0x69,0x6b,0xf3,0x06,0xd8,0xe6,0xb4,0xb5,0x19,0x1e,0xb2,0xcd,0xbf,0x05,
    0x0e,0x1f,0x2b,0x59,0xb3,0xad,0xe4,0x6e,0x11,0xee,0x37,0xd3,0xd6,0x6c,0x1b,0xd8,
    0xd6,0xff,0x58,0xb3,0x6d,0xf4,0xc3,0xeb,0xd9,0x94,0xb6,0x86,0x4b,0x84,0xff,0x2d,
    0xf8,0x6d,0xdf,0x98,0xbd,0x03,0x6c,0xbb,0xf0,0xed,0x90,0xf8,0x77,0x88,0x9f,0xc6,
    0xf7,0xa7,0x77,0xc1,0x2c,0x76,0x17,0xb6,0xef,0x8f,0xf7,0xd8,0x1f,0xbb,0x65,0x7f,
    0xec,0x01,0xf7,0xfd,0xf1,0x3e,0x98,0xef,0x8f,0x4a,0x59,0x17,0xf3,0xed,0x0d,0xe3,
    0x00,0xba,0xf7,0xc2,0x63,0xf3,0xee,0xe3,0xfb,0x8a,0xbd,0x13,0xec,0x7b,0xd9,0x7e,
    0xb0,0x7d,0xf2,0xfd,0xc9,0x63,0x3f,0xac,0x89,0xad,0x1d,0xdb,0x1f,0x81,0xed,0x97,
    0x1e,0x66,0x4a,0x0f,0x77,0x11,0x63,0x3d,0xab,0x64,0xee,0x03,0x52,0xd7,0xc7,0xd4,
    0x75,0x50,0xea,0xfa,0x04,0xdc,0xeb,0x3a,0x04,0xe6,0x75,0x55,0x49,0x5d,0xe6,0x3b,
    0x1c,0xc6,0x31,0xb8,0x0f,0xc3,0x6d,0xdf,0x1f,0x8f,0xa0,0xb5,0x42,0xb8,0x3f,0x03,
    0xf7,0x98,0xa3,0xc4,0xf8,0x1d,0x7c,0x94,0x18,0xd3,0x5b,0x05,0xe7,0x31,0x79,0x3f,
    0x7d,0x8e,0xde,0x13,0xf2,0x7e,0xfa,0x02,0xdc,0xf2,0x8f,0x63,0xbb,0xef,0x4b,0xbe,
    0xfb,0x9d,0x0a,0xf9,0x66,0x7f,0x05,0x56,0x2e,0xf5,0x9d,0x04,0x1f,0x4b,0x7d,0xa7,
    0xa5,0xbe,0x93,0x71,0x6e,0x14,0x63,0xa6,0xe5,0x94,0x68,0x3f,0x83,0x76,0xbf,0xdb,
    0xcf,0x50,0x87,0x69,0xf7,0xf8,0xd3,0xa2,0xe5,0xeb,0x34,0x2d,0xdf,0x80,0x75,0x12,
    0x2d,0xdf,0x82,0xbb,0x96,0x73,0xa2,0xc5,0x7c,0x67,0xc3,0x38,0x07,0xf7,0x59,0xd1,
    0x72,0x1e,0x2d,0xfe,0x0e,0x38,0x2f,0x5a,0x3c,0xfe,0x9c,0x68,0xf9,0x2e,0x4d,0xcb,
    0xf7,0x60,0xbb,0x45,0xcb,0x0f,0xe0,0xae,0xe5,0xa2,0x68,0x31,0xdf,0x85,0x30,0x2e,
    0xc2,0x7d,0x41,0xb4,0x5c,0x92,0x75,0x37,0x2d,0x97,0xe8,0x91,0x69,0xf1,0xf8,0x8b,
    0x69,0x6b,0x5c,0x95,0xb6,0x47,0x2b,0x65,0xcf,0xff,0x08,0x9f,0x71,0x5d,0xc1,0xfe,
    0x23,0xdc,0x44,0x5d,0xc2,0xe8,0xc4,0x7b,0x31,0x07,0x6d,0xf6,0xfb,0xa6,0x73,0x88,
    0x4b,0xf1,0x5b,0xc6,0xb8,0xea,0xc8,0x7d,0x57,0x17,0xfc,0x08,0x35,0x36,0x00,0xab,
    0x47,0x8d,0x0d,0xa5,0xc6,0x06,0xfc,0x0f,0xa6,0x31,0x3c,0xb9,0xc2,0x73,0x0d,0x3c,
    0xcb,0x98,0x3f,0x0f,0xcc,0xfe,0x6f,0xf0,0x67,0x88,0xcd,0x23,0xa7,0xb1,0xe4,0x34,
    0x21,0xa7,0x6e,0x50,0x97,0x8c,0x7f,0xab,0x56,0xdf,0xa7,0xcd,0xf0,0x35,0x15,0xbe,
    0xeb,0xf1,0x37,0x8b,0xdf,0x9d,0xd5,0x58,0x0b,0xf0,0xe6,0xcc,0xd1,0x82,0x39,0x4c,
    0xf3,0x5f,0xf4,0xe3,0x6f,0xed,0x50,0x9b,0xa4,0xe4,0x12,0x00,0x00
};

// Generated from:
//
// #version 450 core
//
// #extension GL_EXT_samplerless_texture_functions : require
//
// layout(set = 0, binding = 0)uniform texture2D src;
// layout(location = 0)out uvec4 dst;
//
// layout(push_constant)uniform PushConstants {
//
//     ivec2 srcOffset;
//     ivec2 dstOffset;
//     int srcMip;
//     int srcLayer;
//
//     bool flipX;
//     bool flipY;
//
//     bool premultiplyAlpha;
//     bool unmultiplyAlpha;
//
//     bool dstHasLuminance;
//     bool dstIsAlpha;
//
//     bool srcIsSRGB;
//     bool dstIsSRGB;
//
//     int dstDefaultChannelsMask;
//     bool rotateXY;
// } params;
//
// float linearToSRGB(float linear)
// {
//
//     if(linear <= 0.0031308)
//     {
//         return linear * 12.92;
//     }
//     else
//     {
//         return pow(linear,(1.0f / 2.4f))* 1.055f - 0.055f;
//     }
// }
//
// void main()
// {
//     ivec2 dstSubImageCoords = ivec2(gl_FragCoord . xy)- params . dstOffset;
//
//     ivec2 srcSubImageCoords = dstSubImageCoords;
//
//     if(params . flipX)
//     {
//         srcSubImageCoords . x = - srcSubImageCoords . x;
//     }
//     if(params . flipY)
//     {
//         srcSubImageCoords . y = - srcSubImageCoords . y;
//     }
//     if(params . rotateXY)
//     {
//         srcSubImageCoords . xy = srcSubImageCoords . yx;
//     }
//
//           vec4 srcValue = texelFetch(src, params . srcOffset + srcSubImageCoords, params . srcMip);
//
//     if(params . srcIsSRGB)
//     {
//
//         srcValue . r = linearToSRGB(srcValue . r);
//         srcValue . g = linearToSRGB(srcValue . g);
//         srcValue . b = linearToSRGB(srcValue . b);
//     }
//
//     if(params . premultiplyAlpha)
//     {
//         srcValue . rgb *= srcValue . a;
//     }
//     else if(params . unmultiplyAlpha && srcValue . a > 0)
//     {
//         srcValue . rgb /= srcValue . a;
//     }
//
//     srcValue *= 255.0;
//
//            uvec4 dstValue = uvec4(srcValue);
//
//     if(params . dstHasLuminance)
//     {
//         dstValue . rg = dstValue . ra;
//     }
//     else if(params . dstIsAlpha)
//     {
//         dstValue . r = dstValue . a;
//     }
//     else
//     {
//         int defaultChannelsMask = params . dstDefaultChannelsMask;
//         if((defaultChannelsMask & 2)!= 0)
//         {
//             dstValue . g = 0;
//         }
//         if((defaultChannelsMask & 4)!= 0)
//         {
//             dstValue . b = 0;
//         }
//         if((defaultChannelsMask & 8)!= 0)
//         {
//             dstValue . a = 1;
//         }
//     }
//
//     dst = dstValue;
// }
