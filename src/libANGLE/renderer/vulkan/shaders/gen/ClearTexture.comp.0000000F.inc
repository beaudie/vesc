// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/ClearTexture.comp.0000000F.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kClearTexture_comp_0000000F[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x7d,0x93,0x4d,0x4e,0x02,0x41,
    0x10,0x85,0x9b,0x99,0x71,0x10,0x44,0x40,0x01,0x41,0x44,0xfc,0x41,0x51,0x23,0x22,
    0x2a,0x1a,0x13,0xa3,0x89,0x2b,0x5d,0xb8,0xf3,0x04,0x26,0x6e,0x5c,0xe8,0x46,0x8f,
    0xe0,0x79,0xbc,0x9e,0x7f,0x31,0xb1,0xaa,0xe7,0x6b,0x52,0x71,0xe1,0x24,0x9d,0xee,
    0x7a,0xf5,0xaa,0xaa,0x5f,0x55,0x4f,0x1c,0xf5,0xf2,0xce,0xe5,0x5c,0xd1,0x4d,0xbb,
    0x13,0x97,0x7d,0x73,0x2e,0x12,0xc4,0xb9,0x19,0x97,0xfa,0xfd,0xea,0xe6,0xf6,0x66,
    0xf8,0xfc,0x72,0x3f,0x1c,0x1f,0x8f,0xd4,0x5f,0x76,0xb1,0xe7,0xa9,0xaf,0x22,0x9c,
    0x29,0xd9,0x13,0x59,0x8f,0x77,0x0f,0x4f,0x8a,0x17,0x64,0x55,0x05,0x4f,0x7c,0x2e,
    0x3d,0x67,0x5c,0x9f,0x4b,0xd0,0x82,0xcf,0xed,0x5c,0x47,0xd6,0xb5,0x44,0x57,0xa9,
    0xdb,0x63,0x0f,0x58,0x0e,0xac,0x6a,0xb0,0x08,0xac,0x6e,0xb0,0x18,0xac,0x65,0xb0,
    0x04,0xcc,0xd6,0x98,0x02,0x5b,0x35,0x58,0x0a,0xb6,0x61,0xb0,0x3c,0xd8,0xb6,0xc1,
    0xa6,0xc1,0x06,0x06,0x2b,0x80,0x8d,0xbc,0xae,0x78,0x72,0x3f,0xd5,0xb8,0x49,0xee,
    0x04,0x7e,0xff,0x8f,0x46,0xe5,0xf7,0xb9,0xbb,0xf2,0xb5,0xd6,0xfa,0xc4,0x97,0xd9,
    0x6b,0xc6,0x3e,0xa2,0x67,0x8b,0xb2,0x6a,0x52,0x25,0xf2,0xfe,0xd8,0xc7,0xeb,0xb9,
    0x21,0x9c,0x14,0x6d,0xfa,0x35,0xc5,0xce,0x73,0x87,0xd8,0xe3,0x89,0xd7,0x90,0x43,
    0xdf,0x19,0x76,0x01,0x6c,0x97,0xf8,0x22,0xf1,0xca,0x9f,0xc1,0x97,0x92,0xaf,0x6c,
    0x34,0x2d,0x48,0xd6,0x0a,0xf5,0xba,0xae,0xe4,0xb5,0x97,0xfd,0x7b,0xc8,0x38,0xff,
    0x2d,0xcd,0x3d,0x37,0x79,0x27,0xd9,0x5d,0xd4,0x9e,0x07,0x53,0x2d,0x35,0x72,0x87,
    0xbb,0xd5,0x98,0x79,0x9e,0xf8,0x06,0xdc,0xd4,0xf8,0x5b,0xcc,0x29,0xd8,0x1d,0x38,
    0x75,0xe9,0x90,0xe6,0x5a,0x96,0x3b,0x87,0xb9,0x74,0xe9,0xff,0x26,0xf9,0xb6,0xe8,
    0x63,0x9f,0xfb,0x6c,0x31,0xff,0xc8,0xe4,0xdb,0xa1,0x37,0xc1,0x1e,0xe0,0xd7,0xf8,
    0x7d,0xce,0xa9,0xe9,0xe5,0x01,0xfa,0x82,0x7d,0x88,0x9e,0x81,0x58,0xaa,0xe3,0x08,
    0xce,0x21,0xeb,0x44,0xde,0x49,0x44,0x7f,0x1d,0x73,0xfb,0x10,0x44,0xdf,0xed,0xbb,
    0x58,0x63,0xf0,0x6f,0x39,0xeb,0x9c,0x8e,0xf1,0xeb,0x7e,0x29,0x2c,0x9d,0x57,0x09,
    0xcd,0xea,0x3f,0xa7,0xee,0x2c,0xb8,0x72,0x1a,0x7e,0x76,0x59,0xaf,0xeb,0x86,0xd3,
    0x04,0x0f,0x9c,0x45,0x38,0x2d,0xc3,0x69,0x83,0xbf,0x0a,0x47,0xed,0x25,0xe2,0xda,
    0x26,0x6e,0x99,0xb8,0x8e,0x89,0xeb,0x82,0x87,0xb8,0x15,0x62,0x15,0x7f,0x13,0x6c,
    0x95,0xb7,0x3e,0x8b,0x4f,0xb5,0x86,0xff,0xe4,0x4b,0x72,0xac,0xf1,0x6f,0xf4,0xd0,
    0xab,0xe7,0x4f,0xd9,0xc7,0xd8,0x3d,0x53,0x7f,0x8f,0xfa,0x03,0x53,0x7f,0x08,0x7e,
    0x29,0xd6,0x3e,0xff,0xeb,0x36,0xf3,0xd4,0x9a,0x17,0x52,0x6f,0x04,0xcf,0xe6,0xd5,
    0xfd,0x47,0x26,0x76,0x2a,0xeb,0x17,0x77,0xbd,0x68,0xae,0x28,0x05,0x00,0x00
};

// Generated from:
//
// #version 450 core
// layout(local_size_x = 16, local_size_y = 1, local_size_z = 1)in;
//
// layout(set = 0, binding = 0)buffer dest
// {
//  uint dsBuffer[];
// };
//
// layout(push_constant)uniform PushConstants
// {
//           uvec4 clearColor;
//  float depthValue;
//  uint stencilValue;
//     uint componentCount;
//  uint offsetX;
//  uint offsetY;
//  uint offsetZ;
//  uint width;
//  uint height;
//  uint depth;
// } params;
//
// void main()
// {
//  if(gl_GlobalInvocationID . x >= params . width * params . height * params . depth)
//  {
//   return;
//  }
//
//     dsBuffer[gl_GlobalInvocationID . x]= params . stencilValue;
//
// }
