// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/ImageCopy.frag.00000040.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kImageCopy_frag_00000040[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x85,0x58,0x59,0x6c,0x55,0x55,
    0x14,0xbd,0xe7,0xbd,0x0e,0x4c,0x2a,0x04,0xa8,0xa0,0x40,0x55,0x20,0x12,0xaa,0xa5,
    0x04,0x14,0xda,0xf2,0x3a,0x8a,0x58,0x29,0x65,0x2c,0x2a,0x8d,0x40,0xa5,0x2d,0x1a,
    0x2c,0x45,0xaa,0x94,0x2a,0x43,0xb1,0x4e,0xfc,0xd8,0x58,0x85,0x6a,0xd5,0x02,0x05,
    0x5b,0x05,0xda,0x10,0x28,0x83,0xc4,0xa0,0x42,0xa2,0x1f,0xfe,0x98,0x20,0xc2,0x87,
    0xa0,0xd2,0x28,0x41,0xa3,0x34,0x91,0x22,0x93,0xc1,0xb3,0xef,0x59,0xbb,0x6f,0xe5,
    0x46,0x62,0x93,0x93,0x7b,0xcf,0xda,0xd3,0xda,0xeb,0x9e,0x73,0xcf,0xed,0x0b,0x87,
    0x46,0xc6,0x7b,0x9e,0xf1,0xfa,0x78,0xbd,0xbc,0xc3,0xc6,0xf3,0xff,0x06,0x78,0x21,
    0x4f,0x6e,0xfb,0x7a,0x71,0xfe,0x75,0x5a,0xfe,0xdc,0xfc,0xe4,0xca,0xe7,0x4b,0x92,
    0x27,0x3e,0x90,0x22,0xf6,0x5b,0xbd,0xb0,0xef,0x27,0xb6,0xdb,0xbc,0x78,0x2f,0xc6,
    0x5e,0x65,0x94,0x17,0x3f,0xb3,0x5c,0xf0,0x54,0x18,0xfb,0x5b,0x3f,0xc1,0xe3,0x25,
    0x87,0xbd,0x4b,0xf5,0x73,0x4a,0x8c,0xe7,0x3d,0xe2,0xc5,0x7a,0x99,0xae,0x9c,0x37,
    0x12,0x57,0xc5,0x0c,0xb0,0x5e,0x84,0x85,0x80,0xf5,0x27,0x2c,0x0c,0x6c,0x10,0x61,
    0x31,0xc0,0x86,0x10,0x16,0x0b,0x6c,0x18,0x61,0x71,0xc0,0xee,0x22,0x2c,0x1e,0xd8,
    0x28,0xc2,0x7a,0x01,0x1b,0x43,0x58,0x6f,0x60,0xf7,0x11,0xd6,0x07,0x58,0x0a,0x61,
    0x7d,0x81,0x4d,0x24,0xac,0x1f,0xb0,0xc9,0x84,0xdd,0x02,0x6c,0x8a,0xaf,0x53,0xb8,
    0xa7,0x5f,0xd1,0xac,0xdc,0x5e,0xef,0x81,0x3e,0x3a,0xbf,0x9b,0xe6,0x22,0xd6,0x08,
    0xcc,0x07,0xda,0xa8,0x90,0x6f,0x0f,0xfb,0xda,0xc8,0x7d,0x82,0xbd,0x8b,0x43,0x9f,
    0x49,0xd6,0x3f,0x0e,0x1a,0x0e,0x4b,0x9e,0x91,0x3e,0xc8,0x7a,0x0c,0x20,0x3c,0xc1,
    0x8e,0x39,0x87,0x0a,0xb2,0x75,0x7e,0xa7,0x1d,0x85,0x85,0x27,0x32,0x74,0x3e,0xdc,
    0x8e,0x48,0x9f,0xd7,0x33,0x75,0x9e,0x68,0x47,0xfb,0xb4,0xe2,0x88,0xce,0x45,0xb7,
    0x5f,0xdb,0x47,0xf7,0xcc,0xc7,0xd9,0xd1,0xf8,0xde,0xd0,0xac,0xc1,0x76,0x3e,0x01,
    0x1c,0xe4,0xd9,0xde,0x6e,0xe7,0xa2,0xc9,0x04,0x70,0x94,0xf9,0x24,0x3c,0x93,0x18,
    0xdf,0x2f,0xc6,0xd7,0x47,0x7c,0x05,0x4f,0xc7,0x3c,0x95,0xe2,0xd3,0xe0,0x2f,0xf1,
    0x92,0x3f,0x03,0xf9,0xe5,0x6f,0x84,0xed,0x30,0x13,0xba,0x6b,0x1d,0x19,0x19,0xff,
    0x33,0xd4,0x47,0xea,0x67,0xe1,0x39,0x67,0xa2,0xbe,0xcc,0xb3,0x81,0x25,0xa1,0x9f,
    0x1c,0xf0,0x11,0xff,0x5c,0xd8,0x26,0x92,0x3d,0x8f,0xfa,0x79,0x14,0xf6,0x0c,0xd8,
    0xe5,0x3a,0x03,0x7c,0xd5,0x7f,0x3e,0xd6,0xaa,0xce,0x8b,0xb1,0x36,0x86,0xda,0xc8,
    0x65,0xe8,0x17,0x5b,0xb4,0x67,0xff,0xe9,0x5c,0x6a,0x3c,0x8b,0xfb,0x65,0xe0,0x2c,
    0xf3,0xf2,0x40,0x8d,0x8a,0xc0,0xbc,0x0a,0x1a,0x4a,0xfc,0x6a,0x70,0x9c,0x40,0xf6,
    0x35,0x58,0xdb,0x3a,0xaf,0x07,0x0f,0x79,0x06,0xef,0xe3,0x3e,0x4c,0xf6,0x66,0xec,
    0x23,0x5d,0x03,0x3b,0x03,0xf5,0x8e,0x60,0x5f,0xe8,0xfc,0x38,0xf6,0x98,0xce,0xcf,
    0x04,0x34,0x3e,0x8f,0x3d,0xa3,0xf9,0xfe,0xf1,0xb3,0xd5,0x64,0x0a,0xdf,0x1b,0xa8,
    0xad,0x6b,0xe4,0x06,0x44,0x09,0x93,0xff,0x16,0x3b,0xaf,0x68,0x5d,0xd9,0xb3,0x66,
    0xb7,0xda,0xf9,0x5b,0xb5,0x4d,0x91,0x07,0xad,0xd2,0x21,0x3c,0x1f,0x0f,0x79,0x2e,
    0x5b,0x44,0xf4,0x8f,0x60,0x3d,0xa6,0x63,0xcd,0xcd,0xb4,0x1d,0xa5,0x61,0x7f,0xa6,
    0x63,0xa8,0xfe,0xcb,0xb1,0x96,0x23,0xb0,0x67,0xdb,0x0c,0xb2,0x16,0x1e,0xc2,0x7a,
    0xc9,0x41,0x3e,0xf1,0x99,0x0a,0xfc,0x65,0xeb,0x23,0xf3,0x87,0x11,0x37,0x15,0x71,
    0xb2,0x46,0xa6,0x23,0x2e,0x0f,0x71,0xb2,0x4e,0xf2,0x81,0xef,0xb2,0x3e,0xb2,0x5f,
    0x0b,0x80,0xc9,0xfa,0xf9,0xdb,0x32,0x9f,0x05,0x3e,0x57,0xad,0x7f,0x81,0xcf,0xd7,
    0xf3,0x31,0xe9,0x47,0xee,0x67,0xdb,0x38,0xd1,0x72,0x2e,0x6a,0xca,0xdf,0x3a,0xe8,
    0x3b,0x0f,0xf8,0x1c,0xab,0x8e,0x70,0x5a,0x6b,0x1c,0xa6,0x7e,0x57,0x6c,0x0e,0xcd,
    0x25,0xd7,0x6e,0xab,0x85,0xf8,0x6d,0x33,0xce,0x27,0x16,0x31,0x33,0xa9,0x87,0xc7,
    0xd0,0xc3,0x7c,0xea,0xe1,0x71,0xe0,0xda,0xc3,0x13,0xc0,0xb4,0x87,0x22,0xea,0x41,
    0x6c,0x0b,0xec,0x28,0x42,0xdd,0x05,0xd4,0xc3,0x42,0xd4,0x36,0xd4,0xc3,0x22,0xe0,
    0xda,0x43,0x8d,0x71,0x98,0xfa,0x49,0x0f,0x9a,0xab,0x88,0x7a,0x68,0x36,0xce,0x67,
    0x16,0x62,0x16,0x50,0x0f,0x4f,0xa1,0x87,0x62,0xea,0x61,0x09,0x70,0xed,0xa1,0x04,
    0x98,0xf6,0x50,0x46,0x3d,0x88,0xad,0xd4,0x8e,0x32,0xd4,0x2d,0xc5,0x3a,0x92,0xba,
    0x4f,0xa3,0x76,0xb3,0x89,0xee,0x5f,0xe1,0xa8,0xbe,0x65,0xc4,0x71,0x3b,0xfc,0x8a,
    0x10,0x57,0x0a,0x3e,0xcb,0xfc,0xb5,0xe7,0xf6,0xb7,0xae,0xb9,0x15,0xe0,0x5c,0x41,
    0x6b,0xee,0x39,0xe0,0x35,0x58,0x73,0x95,0xc0,0x24,0xaf,0xc4,0xc9,0x9e,0xaf,0x46,
    0x5c,0x15,0xe2,0x44,0xd3,0x17,0x81,0x2f,0xb2,0x3c,0x64,0x2f,0xbc,0x84,0x7a,0x12,
    0x9f,0x05,0xbb,0x6a,0xb5,0x16,0xf1,0x6b,0x48,0xab,0x75,0xc0,0x55,0xab,0xf5,0xc0,
    0x54,0xab,0x0d,0xa4,0xd5,0x7a,0x9f,0x9f,0xe7,0x63,0xd2,0x7f,0x0d,0x9e,0xb7,0xec,
    0xd7,0x57,0x50,0xdb,0x43,0x5c,0x22,0x04,0xbb,0x66,0xef,0x25,0xd7,0x40,0xe3,0x62,
    0xe4,0xfa,0x19,0x6a,0x0d,0x36,0x2e,0xae,0x3f,0x62,0x46,0x98,0x68,0x2d,0xb1,0x25,
    0xd8,0x31,0x14,0x71,0x72,0xed,0x67,0x7b,0xf4,0xcf,0x3b,0x3c,0x8f,0x3b,0x50,0x57,
    0xce,0xbf,0x57,0xc1,0x63,0x98,0x71,0x76,0x39,0x03,0x6b,0x81,0x0d,0x37,0x0e,0x4f,
    0xc4,0xf3,0x4b,0x44,0x4e,0xc9,0xaf,0x71,0x43,0xc0,0x25,0x21,0xe0,0x23,0x9c,0x6e,
    0xd8,0x6a,0x97,0x81,0x75,0x83,0xc3,0x0e,0xe3,0xf2,0x0a,0xaf,0x21,0xe0,0x2a,0xeb,
    0x5a,0x9e,0x41,0xad,0x71,0x76,0xd5,0x43,0x35,0xda,0x08,0x8d,0x0c,0xfa,0x1d,0x1f,
    0xd0,0x68,0x34,0x6a,0x8e,0x26,0x8d,0xee,0x35,0x2e,0x4e,0x35,0x4a,0x21,0x8d,0xc4,
    0x36,0xc6,0x8e,0x24,0xc4,0x25,0x91,0x46,0xf7,0x93,0x46,0x1b,0x03,0x1a,0x25,0x1b,
    0x67,0x67,0x8d,0xc6,0x19,0x87,0xab,0x46,0xe3,0x91,0x73,0x0c,0x69,0x34,0x16,0x5c,
    0x12,0x02,0x3e,0x29,0xa4,0xd1,0x78,0xd2,0xa8,0xc5,0xb8,0xbc,0xc2,0x6b,0x2c,0xb8,
    0xaa,0x46,0xaf,0x19,0x67,0xaf,0x05,0x4f,0xd5,0xa8,0x0e,0x1a,0x85,0xd0,0x6f,0x6e,
    0x40,0xa3,0x49,0xa8,0x39,0x89,0x34,0x4a,0x35,0x2e,0x4e,0x35,0xca,0x21,0x8d,0xc4,
    0x96,0x66,0x47,0x04,0x71,0x11,0xd2,0x28,0x93,0x34,0xaa,0x0b,0x68,0x94,0x65,0x9c,
    0x9d,0x35,0xca,0x36,0x0e,0x57,0x8d,0x72,0x91,0x33,0x8d,0x34,0x9a,0x02,0x2e,0x09,
    0x01,0x9f,0x1c,0xd2,0x28,0x97,0x34,0xfa,0xd8,0xb8,0xbc,0xc2,0x6b,0x0a,0xb8,0xaa,
    0x46,0x1b,0x8d,0xb3,0x8b,0x56,0x21,0xe4,0xd3,0xbd,0xb7,0x01,0xef,0x1e,0xf1,0xdb,
    0x89,0xb5,0x56,0x86,0x98,0x5c,0x13,0xdd,0xf3,0x6f,0x63,0xcf,0xd7,0xd3,0x9e,0x7f,
    0x07,0xb8,0xee,0xf9,0x4d,0xc0,0x74,0xcf,0x37,0xd0,0x9e,0x17,0xdb,0x66,0x79,0x47,
    0xa3,0xee,0x36,0x7a,0x9f,0x6c,0x47,0xee,0x66,0xca,0xbd,0x03,0xb8,0xe6,0xfe,0x08,
    0x98,0xe6,0x6e,0xa5,0xdc,0x62,0x6b,0xb1,0xa3,0x15,0xb9,0x5b,0x68,0x1d,0x7c,0x82,
    0xbe,0xe4,0xbc,0x3f,0x8c,0x5c,0xbb,0x14,0x87,0x16,0x1a,0xd7,0x0a,0x2d,0xc4,0x67,
    0x37,0x6a,0x6e,0x83,0x7f,0x0b,0xea,0xb6,0x53,0x5d,0xf1,0x69,0x93,0x6f,0x62,0xc4,
    0xb7,0x51,0xdd,0x3d,0x54,0x77,0xa6,0xfd,0xe2,0x91,0x6f,0xa7,0xbd,0xc0,0x76,0x9a,
    0xe8,0xf7,0x44,0xc8,0x3f,0xbb,0xe3,0x7c,0xfb,0x3e,0xc4,0xe9,0x78,0xc3,0xe6,0x12,
    0xbc,0x03,0xb1,0xfb,0xfc,0x5c,0xbd,0xfd,0x67,0x75,0x00,0xb9,0x3a,0xf0,0x4d,0x13,
    0x4b,0xdf,0x66,0xd2,0x93,0x72,0x6a,0xa7,0xe7,0xdb,0x86,0xda,0xad,0x88,0x6f,0x83,
    0x6f,0x03,0x7c,0x37,0x13,0xff,0xc6,0xff,0xe0,0xff,0xe1,0x4d,0xf8,0xbf,0x09,0x9e,
    0x4d,0xf0,0x69,0x24,0x9e,0x5b,0x11,0xd3,0x74,0x13,0x9e,0x5a,0xbb,0x81,0x78,0xee,
    0x36,0x8e,0x6b,0x3b,0xe2,0x37,0xd3,0x5a,0xf9,0x1c,0x6b,0xe5,0x08,0xad,0x95,0x2f,
    0x80,0xeb,0x5a,0xf9,0x12,0x98,0xae,0x95,0x63,0xf4,0xcc,0xc4,0x76,0xd4,0x8e,0x63,
    0xa8,0x7b,0x94,0x7a,0xfe,0x0a,0xb5,0xf5,0xec,0x29,0x0c,0xbc,0x33,0xf2,0xb0,0x07,
    0xf3,0xe8,0x9d,0x31,0xdd,0xb8,0xb8,0x51,0x88,0x99,0x47,0xef,0x0c,0xb1,0xe5,0xcb,
    0xb7,0x12,0xe2,0xe4,0xba,0x01,0xb5,0x66,0x23,0x2e,0x91,0xde,0x15,0x73,0x8c,0xc3,
    0xb7,0xd0,0xbb,0x65,0x2e,0xbd,0x5b,0xc4,0x3e,0x0e,0xba,0x15,0x22,0x67,0x3e,0xbd,
    0x33,0x0a,0x90,0x53,0xbe,0x79,0xd9,0x67,0x1e,0xbd,0x33,0x0a,0xe9,0x9d,0xd1,0x6e,
    0x5c,0x7e,0xe1,0x55,0x00,0xae,0xfa,0xce,0xa8,0x33,0xce,0xae,0x7a,0xa8,0x46,0xdf,
    0x40,0x23,0x3d,0x7b,0x96,0x06,0x34,0x2a,0x42,0xcd,0x22,0xd2,0xe8,0x49,0xe3,0xe2,
    0x54,0xa3,0x32,0xd2,0x48,0x6c,0x0b,0xed,0x28,0x46,0x5c,0x31,0x69,0xb4,0x04,0x71,
    0xac,0x51,0x89,0x71,0x38,0x6b,0x54,0x4a,0x1a,0x95,0x90,0x46,0x4b,0x91,0x73,0x21,
    0x69,0xb4,0x18,0x39,0x55,0x23,0xf5,0x29,0x23,0x8d,0x96,0x92,0x46,0x7b,0x8c,0xcb,
    0x2f,0xbc,0x16,0x83,0xab,0x6a,0x54,0x6f,0x9c,0xbd,0x2e,0x70,0xf6,0x7c,0x0b,0x8d,
    0xf4,0xec,0xa9,0x0e,0x68,0x54,0x8e,0x9a,0xe5,0xa4,0x51,0x85,0x71,0x71,0xaa,0xd1,
    0x6a,0xd2,0x48,0x6c,0x2b,0xec,0xa8,0x44,0x5c,0x25,0x69,0xf4,0x02,0xe2,0x58,0xa3,
    0x55,0xc6,0xe1,0xac,0x51,0x15,0x69,0xb4,0x8a,0x34,0xaa,0x46,0xce,0x15,0xa4,0xd1,
    0x4a,0xe4,0x54,0x8d,0xd4,0x67,0x35,0x69,0x54,0x4d,0x1a,0xed,0x35,0x2e,0xbf,0xf0,
    0x5a,0x09,0xae,0xaa,0xd1,0x26,0xe3,0xec,0xf5,0x74,0xf6,0xe8,0xde,0x3b,0x46,0x7b,
    0xbe,0x03,0x6b,0xad,0x01,0x31,0xd5,0x74,0xf6,0x7c,0x87,0x3d,0x7f,0x9c,0xf6,0xfc,
    0x09,0xe0,0xba,0xe7,0xbf,0x07,0xa6,0x7b,0xfe,0x14,0xed,0x79,0xb1,0x9d,0xb4,0xe3,
    0x34,0xea,0x9e,0xa6,0xf7,0xc9,0x8f,0xc8,0x7d,0x86,0x72,0xff,0x04,0x5c,0x73,0xff,
    0x0c,0x4c,0x73,0x77,0x52,0x6e,0xb1,0x9d,0xb5,0xe3,0x1c,0x72,0x9f,0xf3,0xa2,0xdf,
    0xd9,0xbf,0x21,0xf7,0x79,0xfa,0xce,0xfe,0x1d,0xf8,0xd7,0xf8,0xff,0xe6,0x0f,0x60,
    0x55,0x54,0xef,0x4f,0xe0,0x15,0xa8,0xd7,0x45,0xf5,0xc4,0x76,0xc1,0x8e,0x2e,0xd4,
    0xbb,0xe0,0x45,0xb5,0x6e,0x34,0xee,0x4c,0xeb,0xa0,0xff,0x83,0xd4,0xaf,0x8b,0xb4,
    0xde,0x6f,0x9c,0xcf,0x39,0xc4,0x5c,0x20,0x3e,0x7f,0x81,0x4f,0x1e,0xf1,0xb9,0x08,
    0x5c,0xf9,0x5c,0x22,0x3e,0x17,0xfd,0xbc,0x9e,0x8f,0x49,0x9d,0x6e,0xe2,0xf3,0x01,
    0xf8,0xec,0xa7,0x67,0xaf,0x7e,0x97,0x88,0xcf,0x01,0xe3,0x7c,0xba,0x10,0xd3,0x4d,
    0x7c,0xae,0x80,0xcf,0x71,0xe2,0x73,0x15,0xb8,0xf2,0xb9,0x4e,0x7c,0xae,0xfa,0xfb,
    0xcc,0xf3,0x31,0xa9,0x73,0x8d,0xf8,0x34,0x19,0xf7,0x7b,0xc2,0x01,0x13,0x3d,0x7f,
    0xd4,0xef,0x3a,0xf1,0xf9,0xd4,0x38,0x9f,0x4b,0x88,0xb9,0x06,0xdf,0x4e,0xf8,0x9e,
    0xa5,0xbd,0xfe,0x0b,0xf4,0x0e,0x53,0x9d,0x77,0x4d,0x14,0xf7,0x02,0xb1,0x9d,0x54,
    0xe7,0x90,0x71,0xb5,0xae,0x23,0xe6,0x2c,0x7c,0x4f,0xc1,0xf7,0x24,0x9d,0xa3,0x3f,
    0x20,0x9f,0x0c,0xfd,0x8d,0x35,0x44,0xe7,0xa8,0xc6,0x9c,0xa2,0xfc,0x07,0x8d,0xab,
    0xd1,0x89,0xf8,0x93,0xfe,0xef,0x51,0x61,0x7f,0x71,0x1c,0xf4,0xb5,0x30,0xde,0x64,
    0x3b,0xfe,0x05,0x1b,0xf6,0x4a,0x40,0x14,0x16,0x00,0x00
};

// Generated from:
//
// #version 450 core
//
// #extension GL_EXT_samplerless_texture_functions : require
//
// layout(set = 0, binding = 0)uniform texture2DMS src;
// layout(location = 0)out vec4 dst;
//
// layout(push_constant)uniform PushConstants {
//
//     ivec2 srcOffset;
//     ivec2 dstOffset;
//     int srcMip;
//     int srcLayer;
//
//     bool flipX;
//     bool flipY;
//
//     bool premultiplyAlpha;
//     bool unmultiplyAlpha;
//
//     bool dstHasLuminance;
//     bool dstIsAlpha;
//
//     bool srcIsSRGB;
//     bool dstIsSRGB;
//
//     int dstDefaultChannelsMask;
//     bool rotateXY;
// } params;
//
// float linearToSRGB(float linear)
// {
//
//     if(linear <= 0.0031308)
//     {
//         return linear * 12.92;
//     }
//     else
//     {
//         return pow(linear,(1.0f / 2.4f))* 1.055f - 0.055f;
//     }
// }
//
// float sRGBToLinear(float sRGB)
// {
//
//     if(sRGB <= 0.04045)
//     {
//         return sRGB / 12.92;
//     }
//     else
//     {
//         return pow((sRGB + 0.055f)/ 1.055f, 2.4f);
//     }
// }
//
// void main()
// {
//     ivec2 dstSubImageCoords = ivec2(gl_FragCoord . xy)- params . dstOffset;
//
//     ivec2 srcSubImageCoords = dstSubImageCoords;
//
//     if(params . flipX)
//     {
//         srcSubImageCoords . x = - srcSubImageCoords . x;
//     }
//     if(params . flipY)
//     {
//         srcSubImageCoords . y = - srcSubImageCoords . y;
//     }
//     if(params . rotateXY)
//     {
//         srcSubImageCoords . xy = srcSubImageCoords . yx;
//     }
//
//           vec4 srcValue = texelFetch(src, ivec2(params . srcOffset + srcSubImageCoords), params . srcMip);
//
//     if(params . srcIsSRGB)
//     {
//
//         srcValue . r = linearToSRGB(srcValue . r);
//         srcValue . g = linearToSRGB(srcValue . g);
//         srcValue . b = linearToSRGB(srcValue . b);
//     }
//
//     if(params . premultiplyAlpha)
//     {
//         srcValue . rgb *= srcValue . a;
//     }
//     else if(params . unmultiplyAlpha && srcValue . a > 0)
//     {
//         srcValue . rgb /= srcValue . a;
//     }
//
//            vec4 dstValue = vec4(srcValue);
//
//     if(params . dstIsSRGB)
//     {
//
//         dstValue . r = sRGBToLinear(dstValue . r);
//         dstValue . g = sRGBToLinear(dstValue . g);
//         dstValue . b = sRGBToLinear(dstValue . b);
//     }
//
//     if(params . dstHasLuminance)
//     {
//         dstValue . rg = dstValue . ra;
//     }
//     else if(params . dstIsAlpha)
//     {
//         dstValue . r = dstValue . a;
//     }
//     else
//     {
//         int defaultChannelsMask = params . dstDefaultChannelsMask;
//         if((defaultChannelsMask & 2)!= 0)
//         {
//             dstValue . g = 0;
//         }
//         if((defaultChannelsMask & 4)!= 0)
//         {
//             dstValue . b = 0;
//         }
//         if((defaultChannelsMask & 8)!= 0)
//         {
//             dstValue . a = 1;
//         }
//     }
//
//     dst = dstValue;
// }
