	// 10.15.3802
	 #pragma once
const uint32_t kOverlayCull_comp_00000003[] = {
	0x07230203,0x00010300,0x0008000a,0x000000c3,0x00000000,0x00020011,0x00000001,0x00020011,
	0x0000003d,0x00020011,0x0000003f,0x0006000b,0x00000001,0x4c534c47,0x6474732e,0x3035342e,
	0x00000000,0x0003000e,0x00000000,0x00000001,0x0007000f,0x00000005,0x00000004,0x6e69616d,
	0x00000000,0x00000012,0x00000063,0x00060010,0x00000004,0x00000011,0x00000040,0x00000001,
	0x00000001,0x00040047,0x00000012,0x0000000b,0x0000001b,0x00040047,0x0000001b,0x00000006,
	0x00000010,0x00050048,0x0000001c,0x00000000,0x00000023,0x00000000,0x00030047,0x0000001c,
	0x00000002,0x00040047,0x0000001e,0x00000022,0x00000000,0x00040047,0x0000001e,0x00000021,
	0x00000001,0x00040047,0x00000063,0x0000000b,0x0000001a,0x00040047,0x00000079,0x00000022,
	0x00000000,0x00040047,0x00000079,0x00000021,0x00000000,0x00030047,0x00000079,0x00000019,
	0x00040047,0x00000082,0x0000000b,0x00000019,0x00020013,0x00000002,0x00030021,0x00000003,
	0x00000002,0x00040015,0x00000006,0x00000020,0x00000000,0x00040017,0x00000007,0x00000006,
	0x00000002,0x00040017,0x00000010,0x00000006,0x00000003,0x00040020,0x00000011,0x00000001,
	0x00000010,0x0004003b,0x00000011,0x00000012,0x00000001,0x0004002b,0x00000006,0x00000013,
	0x00000000,0x00040020,0x00000014,0x00000001,0x00000006,0x00040017,0x00000017,0x00000006,
	0x00000004,0x0004002b,0x00000006,0x0000001a,0x00000040,0x0004001c,0x0000001b,0x00000017,
	0x0000001a,0x0003001e,0x0000001c,0x0000001b,0x00040020,0x0000001d,0x00000002,0x0000001c,
	0x0004003b,0x0000001d,0x0000001e,0x00000002,0x00040015,0x0000001f,0x00000020,0x00000001,
	0x0004002b,0x0000001f,0x00000020,0x00000000,0x00040020,0x00000023,0x00000002,0x00000017,
	0x00020014,0x00000026,0x00040017,0x00000033,0x00000026,0x00000002,0x0004002b,0x00000006,
	0x00000040,0x00000020,0x0004002b,0x00000006,0x00000046,0x00000001,0x0004002b,0x00000006,
	0x0000005a,0x00000003,0x0004003b,0x00000011,0x00000063,0x00000001,0x0004002b,0x00000006,
	0x00000068,0x00000008,0x0005002c,0x00000007,0x00000069,0x00000068,0x00000068,0x00090019,
	0x00000077,0x00000006,0x00000001,0x00000000,0x00000000,0x00000000,0x00000002,0x0000001e,
	0x00040020,0x00000078,0x00000000,0x00000077,0x0004003b,0x00000078,0x00000079,0x00000000,
	0x00040017,0x0000007c,0x0000001f,0x00000002,0x0006002c,0x00000010,0x00000082,0x0000001a,
	0x00000046,0x00000046,0x00050036,0x00000002,0x00000004,0x00000000,0x00000003,0x000200f8,
	0x00000005,0x0004003d,0x00000010,0x00000064,0x00000063,0x0007004f,0x00000007,0x00000065,
	0x00000064,0x00000064,0x00000000,0x00000001,0x00050084,0x00000007,0x0000006a,0x00000065,
	0x00000069,0x00050080,0x00000007,0x0000006d,0x0000006a,0x00000069,0x00050041,0x00000014,
	0x0000008c,0x00000012,0x00000013,0x0004003d,0x00000006,0x0000008d,0x0000008c,0x00060041,
	0x00000023,0x00000090,0x0000001e,0x00000020,0x0000008d,0x0004003d,0x00000017,0x00000091,
	0x00000090,0x00050051,0x00000006,0x00000093,0x00000091,0x00000000,0x00050051,0x00000006,
	0x00000095,0x00000091,0x00000002,0x000500b0,0x00000026,0x00000096,0x00000093,0x00000095,
	0x000300f7,0x0000009c,0x00000000,0x000400fa,0x00000096,0x00000097,0x0000009c,0x000200f8,
	0x00000097,0x0007004f,0x00000007,0x00000099,0x00000091,0x00000091,0x00000000,0x00000001,
	0x000500b0,0x00000033,0x0000009a,0x00000099,0x0000006d,0x0004009b,0x00000026,0x0000009b,
	0x0000009a,0x000200f9,0x0000009c,0x000200f8,0x0000009c,0x000700f5,0x00000026,0x0000009d,
	0x00000096,0x00000005,0x0000009b,0x00000097,0x000300f7,0x000000a3,0x00000000,0x000400fa,
	0x0000009d,0x0000009e,0x000000a3,0x000200f8,0x0000009e,0x0007004f,0x00000007,0x000000a0,
	0x00000091,0x00000091,0x00000002,0x00000003,0x000500ae,0x00000033,0x000000a1,0x000000a0,
	0x0000006a,0x0004009b,0x00000026,0x000000a2,0x000000a1,0x000200f9,0x000000a3,0x000200f8,
	0x000000a3,0x000700f5,0x00000026,0x000000a4,0x0000009d,0x0000009c,0x000000a2,0x0000009e,
	0x000500b0,0x00000026,0x000000a6,0x0000008d,0x00000040,0x000300f7,0x000000ad,0x00000000,
	0x000400fa,0x000000a6,0x000000a7,0x000000ac,0x000200f8,0x000000a7,0x000600a9,0x00000006,
	0x000000a9,0x000000a4,0x00000046,0x00000013,0x000500c4,0x00000006,0x000000ab,0x000000a9,
	0x0000008d,0x000200f9,0x000000ad,0x000200f8,0x000000ac,0x000200f9,0x000000ad,0x000200f8,
	0x000000ad,0x000700f5,0x00000006,0x000000c1,0x000000ab,0x000000a7,0x00000013,0x000000ac,
	0x000500ae,0x00000026,0x000000b0,0x0000008d,0x00000040,0x000300f7,0x000000b8,0x00000000,
	0x000400fa,0x000000b0,0x000000b1,0x000000b7,0x000200f8,0x000000b1,0x000600a9,0x00000006,
	0x000000b3,0x000000a4,0x00000046,0x00000013,0x00050082,0x00000006,0x000000b5,0x0000008d,
	0x00000040,0x000500c4,0x00000006,0x000000b6,0x000000b3,0x000000b5,0x000200f9,0x000000b8,
	0x000200f8,0x000000b7,0x000200f9,0x000000b8,0x000200f8,0x000000b8,0x000700f5,0x00000006,
	0x000000c2,0x000000b6,0x000000b1,0x00000013,0x000000b7,0x00060168,0x00000006,0x000000bb,
	0x0000005a,0x00000000,0x000000c1,0x00060168,0x00000006,0x000000bd,0x0000005a,0x00000000,
	0x000000c2,0x000500aa,0x00000026,0x00000074,0x0000008d,0x00000013,0x000300f7,0x00000076,
	0x00000000,0x000400fa,0x00000074,0x00000075,0x00000076,0x000200f8,0x00000075,0x0004003d,
	0x00000077,0x0000007a,0x00000079,0x0004007c,0x0000007c,0x0000007d,0x00000065,0x00070050,
	0x00000017,0x00000081,0x000000bb,0x000000bd,0x00000013,0x00000013,0x00040063,0x0000007a,
	0x0000007d,0x00000081,0x000200f9,0x00000076,0x000200f8,0x00000076,0x000100fd,0x00010038
};

// Generated from:
//
// #version 450 core
//
// #extension GL_EXT_samplerless_texture_functions : require
//
// #extension GL_KHR_shader_subgroup_arithmetic : require
//
// layout(local_size_x = 64, local_size_y = 1, local_size_z = 1)in;
//
// layout(set = 0, binding = 0, rgba32ui)uniform writeonly uimage2D culledWidgetsOut;
//
// layout(set = 0, binding = 1)uniform WidgetCoordinates
// {
//     uvec4 coordinates[32 + 32];
// };
//
// uvec2 cullWidgets(const uint offset, const uvec2 blockCoordLow, const uvec2 blockCoordHigh)
// {
//     const uint localId = gl_LocalInvocationID . x;
//     const uvec4 widgetCoords = coordinates[offset + localId];
//
//     const bool intersects = widgetCoords . x < widgetCoords . z &&
//                             all(lessThan(widgetCoords . xy, blockCoordHigh))&&
//                             all(greaterThanEqual(widgetCoords . zw, blockCoordLow));
//
//     const uint textWidgetBit =
//         localId < 32 ? uint(intersects)<< localId : 0;
//     const uint graphWidgetBit =
//         localId >= 32 ? uint(intersects)<<(localId - 32): 0;
//     return uvec2(subgroupOr(textWidgetBit), subgroupOr(graphWidgetBit));
//
// }
//
// void main()
// {
//
//     const uvec2 outCoord = gl_WorkGroupID . xy;
//     const uvec2 blockCoordLow = outCoord * uvec2(8, 8);
//     const uvec2 blockCoordHigh = blockCoordLow + uvec2(8, 8);
//
//     uvec2 culledWidgets;
//
//     culledWidgets = cullWidgets(0, blockCoordLow, blockCoordHigh);
//
//     if(gl_LocalInvocationID . x == 0)
//     {
//         imageStore(culledWidgetsOut, ivec2(outCoord), uvec4(culledWidgets, 0, 0));
//     }
// }
