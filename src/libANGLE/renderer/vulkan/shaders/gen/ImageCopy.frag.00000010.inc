// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/ImageCopy.frag.00000010.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kImageCopy_frag_00000010[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x85,0x98,0x0b,0x94,0x8d,0x55,
    0x14,0xc7,0xbf,0x7b,0xef,0xcc,0x9d,0xf1,0xca,0x9b,0xc8,0xab,0xe4,0xb5,0x68,0xb2,
    0x96,0x47,0x98,0xc6,0xa0,0x18,0xca,0x5b,0xa3,0x42,0xa1,0xbc,0x85,0x42,0x2f,0x24,
    0x64,0x10,0x15,0x2a,0xca,0x23,0x49,0xa8,0xa8,0x29,0x4a,0x84,0x24,0x15,0x2a,0x2a,
    0x0a,0x95,0x47,0x51,0x51,0x1e,0xbd,0x90,0x57,0xd2,0xd9,0x67,0x7e,0x7b,0xda,0xbe,
    0xac,0x9a,0xb5,0xce,0xba,0x77,0xff,0xf7,0x3e,0xff,0xfd,0x3f,0x7b,0x9f,0x73,0xee,
    0x37,0x5f,0x2c,0x5a,0x31,0x29,0x88,0x45,0x82,0xbc,0x41,0x72,0x10,0x8f,0x04,0xfe,
    0xaf,0x70,0x10,0x0d,0xe4,0x6b,0xbe,0x20,0xee,0x3f,0x33,0x5a,0x76,0x68,0x99,0x32,
    0x64,0x68,0x8f,0x94,0xda,0x75,0x6a,0x8a,0xff,0xa2,0x20,0xe6,0xe3,0xc4,0x57,0x30,
    0x48,0x0a,0x12,0xdc,0xa7,0x8c,0x01,0xdd,0xfb,0x0e,0x14,0xbc,0xbe,0xd8,0xce,0x59,
    0xc8,0xc5,0x09,0x9e,0x24,0x1c,0xee,0x5b,0x7d,0xcf,0x29,0x73,0x82,0xa0,0x79,0x90,
    0x18,0xa4,0xe7,0xa4,0x0b,0x2a,0xf2,0xa9,0x58,0x04,0x2c,0xd9,0x60,0x51,0xb0,0x42,
    0x06,0x8b,0x81,0x15,0x33,0x58,0x02,0xd8,0xc5,0x06,0x4b,0x04,0x2b,0x63,0xb0,0x38,
    0x58,0x05,0x83,0x25,0x81,0x5d,0x6e,0xb0,0x64,0xb0,0xaa,0x06,0xcb,0x03,0x56,0xc3,
    0x60,0x79,0xc1,0x6a,0x1a,0x2c,0x1f,0x58,0x6d,0x83,0xe5,0x07,0xab,0x67,0xb0,0x02,
    0x60,0x57,0xfb,0x3a,0xc5,0x72,0xd7,0x2b,0x35,0x1b,0xe0,0x3e,0x2f,0xa3,0x3e,0x6a,
    0x5f,0x6a,0x6c,0xa9,0x73,0x39,0xec,0xa2,0x6e,0x56,0xd4,0xfb,0x63,0xbe,0x36,0xf2,
    0xbd,0x84,0xfb,0x16,0x67,0x9d,0x15,0x5c,0x7c,0x12,0xeb,0x8c,0xfb,0xb8,0x04,0xbf,
    0xbe,0x38,0x58,0x75,0x67,0xc7,0xa9,0x71,0x99,0x94,0x56,0xa9,0xc5,0x1c,0x43,0x61,
    0x83,0x97,0x70,0xa3,0xfd,0x8a,0xd6,0x8d,0xd5,0xbe,0xc4,0x8d,0xcc,0xcc,0x6d,0x0d,
    0xd5,0x2e,0xeb,0x46,0x5a,0xde,0xf1,0xe9,0x6a,0x97,0x77,0x23,0x3b,0xa3,0x7b,0x9a,
    0xda,0x52,0xd7,0xfd,0xd9,0x95,0x72,0xed,0x2b,0xdd,0x98,0x39,0xa3,0x54,0xa3,0xe2,
    0xce,0xae,0x85,0x46,0xe9,0x7d,0x49,0x67,0x4b,0xcd,0x6a,0xb1,0x06,0xd1,0x5d,0x07,
    0x8d,0xb5,0xf1,0x5f,0x85,0xee,0x04,0xfc,0xf5,0x98,0x2b,0x78,0x2a,0x76,0x7d,0xc3,
    0xd7,0x80,0x78,0xe1,0x93,0x7c,0x0d,0xc9,0x27,0x7f,0xe5,0xdc,0x8a,0xd3,0xe1,0xd6,
    0xbc,0x32,0x1a,0xfe,0xcf,0xd0,0x18,0xc9,0xdf,0x88,0x7d,0x91,0x4e,0x7e,0xb1,0x1b,
    0x83,0x55,0x67,0x7d,0x4d,0xd0,0x23,0xf1,0xd7,0xe0,0xab,0x6d,0xfc,0x2d,0xcc,0x7a,
    0xae,0xc3,0xdf,0x10,0xbf,0x7c,0xb6,0x42,0xaf,0xf8,0xdb,0x51,0x8f,0x5a,0x66,0x7e,
    0x47,0xf6,0xba,0xc6,0x77,0x21,0x9f,0xfa,0xbb,0xb3,0xd7,0x64,0x7e,0x5f,0xe6,0x4b,
    0xbd,0x4a,0xb9,0x4c,0xfd,0xa9,0x0f,0x57,0xc0,0xbf,0x3e,0x65,0xce,0x1d,0x7c,0xef,
    0xcf,0x1a,0xc5,0x1e,0x00,0xa6,0x39,0x06,0x85,0xec,0xa1,0x9c,0x53,0x99,0x7f,0x37,
    0x6b,0xaa,0x45,0x4f,0xee,0xe3,0x7b,0xcc,0xc4,0x8f,0xa0,0x47,0x6a,0x8f,0xe2,0x6c,
    0xe9,0x9a,0xa6,0x86,0xfc,0xd3,0xd1,0xad,0xfe,0xd9,0xf0,0x09,0xff,0xb3,0xf8,0x2c,
    0xff,0xc2,0xd0,0x5e,0xcf,0x0e,0xe9,0x5d,0xc7,0xb9,0x55,0x7b,0x07,0x77,0x80,0xda,
    0xfb,0x42,0x3d,0x3d,0xc2,0x99,0x56,0xbe,0x88,0x2f,0xd8,0xa8,0x74,0x59,0xaf,0xbb,
    0x56,0x7d,0x6e,0xdd,0x93,0x62,0x27,0x80,0xd5,0x75,0x9d,0x8a,0xd2,0xef,0x00,0x8d,
    0x27,0x1d,0x92,0x48,0x6c,0x1d,0x1f,0x93,0xa3,0x55,0xed,0x0c,0x63,0x4b,0xff,0xfa,
    0x19,0x5b,0x3e,0xc7,0x85,0xec,0x49,0x21,0x7b,0x4a,0x68,0xfe,0xaa,0x90,0x7f,0x63,
    0xc8,0xde,0x1c,0xb2,0xb7,0x1a,0x5b,0xf6,0xdf,0x61,0xec,0x34,0xce,0x63,0x2a,0x67,
    0xae,0x8d,0x43,0x1b,0x70,0x9f,0xa5,0x32,0x74,0x2f,0x0d,0xe4,0x6c,0xa7,0xe1,0x6f,
    0xec,0x56,0x2c,0x67,0xe1,0x5a,0xce,0x4b,0x13,0xf8,0x24,0xa6,0x29,0xf8,0x18,0x17,
    0x23,0x76,0x33,0xe6,0x35,0xf5,0xe7,0x22,0xe6,0xeb,0xd3,0xcc,0xc4,0x37,0xa7,0x66,
    0xe2,0xcb,0xc0,0x16,0x7e,0x39,0x4b,0xd7,0xc3,0xdf,0x82,0x78,0xd9,0x2b,0x2d,0xc1,
    0x17,0xbb,0x18,0xb9,0xe7,0x5a,0x83,0xc9,0x39,0x3b,0xe1,0x38,0xda,0xa2,0xfb,0xb4,
    0x8b,0x6f,0xed,0xd7,0x15,0x78,0x4c,0xfa,0xd4,0x06,0x6e,0xa9,0x43,0x7b,0x7a,0xd3,
    0x0a,0x6e,0xd9,0x17,0x1d,0xc0,0x47,0x62,0xdf,0x00,0xa6,0x73,0x32,0xcd,0x1c,0xd1,
    0x9b,0x49,0xcc,0x29,0xc7,0xad,0x39,0xda,0x1a,0xfd,0x37,0xa2,0xbf,0xa3,0xd1,0x7f,
    0x13,0xb8,0xea,0xbf,0x19,0x4c,0xf5,0x77,0x36,0xfa,0xc5,0xd7,0xc9,0x8d,0xce,0x70,
    0x77,0x32,0x5a,0x6e,0x41,0x4b,0x17,0xa3,0xff,0x56,0x70,0xd5,0xdf,0x15,0x4c,0xe7,
    0x74,0x33,0x73,0x44,0x7f,0x37,0x62,0x44,0xbf,0xe6,0xe8,0x6c,0xf4,0xdf,0x86,0xfe,
    0xee,0x46,0xff,0xed,0xe0,0xaa,0xbf,0x07,0x98,0xea,0xef,0x65,0xf4,0x8b,0xaf,0xa7,
    0x1b,0xbd,0xe0,0xee,0x69,0xfa,0xde,0x1b,0x2d,0xb2,0xef,0xc4,0xee,0x03,0xd6,0xdb,
    0xdc,0x5f,0xba,0x27,0xfa,0xa0,0x51,0x79,0x7a,0xc1,0xd3,0xdf,0xef,0xcd,0x9c,0xfb,
    0x4c,0xf7,0xe4,0x9d,0x68,0x1e,0x64,0x72,0xdd,0x05,0xae,0xf6,0x60,0x72,0x8f,0x62,
    0x8f,0x0e,0x21,0x66,0x30,0x3c,0x72,0xe7,0xdd,0x03,0xcf,0x50,0x53,0xdf,0x7b,0xc1,
    0xdb,0xb9,0x18,0xb1,0xef,0x67,0x6e,0x60,0xb0,0x61,0x60,0x11,0xbf,0xef,0xe2,0xfe,
    0xbe,0x1c,0x4e,0xec,0x30,0x38,0x34,0xc7,0x03,0xe4,0x18,0x61,0x72,0x8c,0x04,0xef,
    0xea,0xea,0x22,0xe7,0xf3,0x41,0xd6,0x38,0x9c,0x3b,0x74,0x24,0x75,0xe9,0x87,0x4f,
    0x7b,0x35,0x1a,0xae,0x51,0xa6,0x57,0x63,0xc0,0xb5,0x57,0x0f,0x81,0x69,0xaf,0xb2,
    0x4c,0xaf,0xc4,0x37,0xd6,0x8d,0x2c,0x6a,0x3c,0x16,0x6e,0xb9,0x2b,0xc6,0x73,0x6f,
    0xe9,0x59,0x91,0x3b,0x73,0x02,0xb8,0x68,0x19,0x87,0x5d,0xdf,0xc5,0x8b,0xef,0x61,
    0xee,0xff,0x71,0x86,0x63,0xa2,0xe1,0x90,0x39,0x13,0x89,0x53,0xff,0x23,0xf8,0xbb,
    0x98,0x1c,0x8f,0x82,0x4b,0xfc,0x24,0x6c,0xcd,0xf1,0x18,0x39,0x26,0x19,0x8e,0xc9,
    0x86,0x43,0xe6,0x4c,0x26,0x4e,0xfd,0x8f,0xe3,0x9f,0x6a,0x72,0x3c,0x01,0x2e,0xf1,
    0x53,0xb0,0x35,0xc7,0x93,0xe4,0x98,0x62,0x38,0xa6,0x19,0x0e,0x99,0x33,0x8d,0x38,
    0xd9,0x9f,0x5a,0xbb,0x2c,0xd3,0x97,0xa7,0xe8,0xcb,0x74,0xd3,0x97,0xa7,0xc1,0xb5,
    0x2f,0x33,0xc0,0xb4,0x2f,0xb3,0x4c,0x5f,0xc4,0x37,0xd3,0x8d,0x05,0x70,0xcf,0x34,
    0x5a,0x9e,0x41,0xcb,0x6c,0xb3,0x9e,0x39,0xe0,0x7a,0xbf,0xcf,0x25,0xa6,0x8d,0xfb,
    0x45,0x94,0xdf,0xd6,0xe7,0xc0,0xe6,0x9a,0xfb,0x3d,0xea,0xeb,0x94,0xe8,0xfd,0xf3,
    0x88,0x99,0x63,0x38,0x9e,0xcf,0xe5,0xc8,0xe3,0xed,0xf9,0x60,0xf3,0xf8,0x2d,0x4c,
    0x34,0xbf,0xd9,0xba,0x37,0xe7,0x53,0x93,0x59,0xe8,0x5e,0x60,0x6a,0xf2,0x02,0x35,
    0x59,0x68,0x6a,0xf2,0x22,0xb8,0xd6,0xe4,0x25,0x30,0xad,0xc9,0x62,0x53,0x13,0xf1,
    0x2d,0xf2,0xb1,0x39,0xdc,0x8b,0x4c,0x4d,0x5e,0xbe,0x40,0x4d,0x5e,0x01,0x5f,0x09,
    0xf7,0xab,0x60,0xd9,0x68,0x54,0x1e,0xf9,0x3c,0xee,0x58,0x24,0xe6,0x35,0x34,0x2c,
    0x20,0x7e,0x11,0x3a,0x96,0x1a,0x1d,0x12,0xb3,0xc4,0x8d,0xa5,0xcc,0x5f,0x62,0x74,
    0xbc,0x7e,0x01,0x1d,0x6f,0x80,0x6b,0x5d,0x97,0x85,0x7a,0xf3,0x26,0xd8,0xb2,0x50,
    0x6f,0xe4,0x1e,0x11,0xff,0x72,0x38,0x74,0x4c,0xa0,0x67,0x2b,0x98,0xbb,0xdc,0x70,
    0xbf,0x15,0xea,0xd9,0x4a,0xb0,0x15,0xff,0xd1,0xb3,0x95,0xd4,0x43,0xd7,0xb3,0x34,
    0xd4,0xc3,0x59,0x86,0x7f,0x35,0xfc,0xed,0x38,0x2b,0x6f,0x83,0x05,0x06,0x5b,0x03,
    0x16,0x31,0xd8,0x3b,0x60,0x51,0x83,0xad,0x05,0x8b,0xf9,0xb5,0xe6,0xdc,0x7b,0xef,
    0xc2,0xb9,0x86,0x39,0x6b,0xd1,0xb9,0x0a,0x9f,0xee,0xa5,0xf7,0xd8,0x4b,0xeb,0xcc,
    0x5e,0x7a,0x1f,0x5c,0xf7,0xd2,0x07,0x60,0xba,0x97,0x36,0x98,0x1e,0x8a,0x6f,0xbd,
    0x1b,0x1b,0x58,0xe3,0x7a,0xd3,0xc3,0x0f,0x79,0xde,0xb2,0xf7,0xde,0x47,0xe0,0xa2,
    0x65,0x23,0xb6,0xde,0x17,0x1f,0xf3,0xac,0xbe,0xd1,0x70,0x6c,0x32,0x1c,0x32,0x67,
    0x13,0x71,0xea,0xff,0x04,0xbf,0xbd,0xf7,0x3e,0x05,0x97,0xf8,0xcd,0xd8,0x9a,0xe3,
    0x33,0x72,0x6c,0x36,0x1c,0x5b,0x0c,0x87,0xcc,0xd9,0x42,0x9c,0xfa,0x3f,0xc7,0x6f,
    0xef,0xbd,0x2f,0xc0,0x25,0x7e,0x2b,0xb6,0xe6,0xd8,0x46,0x8e,0xad,0x86,0x63,0xbb,
    0xe1,0x90,0x39,0xdb,0x89,0x93,0xfd,0xa1,0xb5,0xdb,0x60,0xfa,0xf2,0x25,0x7d,0xd9,
    0x61,0xfa,0xf2,0x15,0xb8,0xf6,0xe5,0x6b,0x30,0xed,0xcb,0x2e,0xd3,0x17,0xf1,0xed,
    0x74,0x63,0x2f,0xdc,0x3b,0xcd,0xde,0xdb,0x8d,0x16,0x7d,0x66,0xdd,0x03,0xb6,0xdb,
    0x3c,0x97,0x6b,0xec,0x37,0xb9,0xb1,0x39,0xe7,0xe0,0x5b,0xb0,0x3d,0xe6,0x1c,0x44,
    0xcd,0x39,0x58,0x45,0x8c,0xac,0x6b,0x17,0xb9,0xf7,0x9a,0x75,0x7d,0xc7,0xba,0xf6,
    0x99,0x75,0x7d,0x0f,0xae,0xeb,0xfa,0x01,0x4c,0xd7,0x75,0xc0,0xac,0x4b,0x7c,0xfb,
    0xdd,0x38,0x04,0xf7,0x7e,0x53,0xe3,0x1f,0xd1,0x6a,0xef,0x8c,0x9f,0xc0,0x35,0xe6,
    0x60,0x68,0x3f,0x1d,0x24,0x46,0xf4,0x1e,0x80,0xf3,0x90,0x79,0xc6,0xf8,0x19,0xbd,
    0x47,0xcc,0x33,0xc6,0x2f,0xe0,0x32,0xff,0x30,0xb6,0xfa,0x7e,0xe5,0x7f,0x84,0x0d,
    0x3c,0xcf,0xfc,0x06,0x36,0xc2,0xac,0xef,0x77,0xf0,0x41,0xac,0xef,0x98,0x59,0x9f,
    0xf8,0x8e,0xba,0x71,0x0c,0x2d,0x47,0x8d,0xf6,0xe3,0xa1,0x7d,0x7a,0xdc,0xdc,0xc1,
    0x1a,0x7f,0xcc,0x68,0xf9,0x23,0xa4,0xe5,0x04,0x58,0x0b,0xa3,0xe5,0x24,0xb8,0x6a,
    0x39,0x6d,0xb4,0x9c,0xf4,0xdc,0x81,0xc7,0x84,0xfb,0x94,0xd1,0x72,0x26,0xb4,0x9f,
    0xcf,0x18,0x2d,0x1a,0x7f,0xda,0x68,0xf9,0x33,0xa4,0xe5,0x2c,0xd8,0x0e,0xa3,0xe5,
    0x2f,0x70,0xd5,0xa2,0x0f,0xb2,0xa2,0x45,0x7c,0xe7,0xb8,0xd4,0x85,0xfb,0x9c,0xd1,
    0x12,0x8d,0xfc,0xd3,0x77,0xd1,0x22,0xb6,0xfc,0x4f,0x2a,0x5a,0x34,0x3e,0x88,0x9c,
    0xdf,0xe3,0x03,0xa1,0x3d,0xba,0xcb,0xec,0xf9,0x44,0xf8,0x84,0x4b,0xfe,0x77,0x15,
    0xfb,0xac,0x23,0xa8,0xe7,0x46,0x5d,0xce,0x78,0x5e,0xea,0x94,0xec,0xff,0xd7,0x8d,
    0x79,0x1d,0x79,0xe0,0xca,0x67,0xf6,0x5f,0x41,0xf0,0xd5,0xac,0xb1,0x08,0x58,0x21,
    0xd6,0x58,0xcc,0xd4,0xbb,0x88,0x7f,0x9f,0x25,0xef,0x26,0x72,0x78,0x8a,0x1a,0x9e,
    0xe2,0xf0,0x64,0x91,0xbf,0x24,0x58,0x09,0x5f,0xb7,0xa8,0xb7,0x65,0x4e,0x29,0x33,
    0xa7,0x34,0x73,0xf2,0x3b,0x75,0x71,0xde,0x05,0x46,0xc0,0x4b,0xf3,0x2e,0x4b,0xf9,
    0xca,0xe1,0x2f,0xeb,0x9f,0x73,0x13,0x73,0xdf,0x9f,0x95,0xe3,0x9d,0x96,0xe4,0xa8,
    0x40,0x8e,0x62,0xbe,0x17,0xe7,0xd7,0xa3,0xc0,0x05,0xea,0x91,0x9f,0xf8,0x8b,0x8c,
    0xa6,0x8a,0xe0,0x5a,0x8f,0x4a,0xe6,0xfd,0xa3,0xd4,0xa3,0x8a,0xa9,0x87,0xf8,0x2a,
    0xfb,0xf7,0x0c,0x39,0x3c,0x95,0x0d,0x4f,0x55,0x78,0x26,0x90,0xbf,0x1a,0x98,0xd6,
    0xa3,0x1a,0x73,0xaa,0x9b,0x39,0x35,0x98,0x33,0x9a,0x39,0x57,0x80,0x95,0x37,0x3c,
    0x29,0xe0,0x65,0x4d,0xdd,0x6a,0x9a,0xba,0xa5,0xf0,0x0e,0x4f,0x72,0xd4,0x24,0x47,
    0x15,0x53,0x8f,0xbf,0x01,0x99,0x45,0x85,0x66,0x5c,0x16,0x00,0x00
};

// Generated from:
//
// #version 450 core
//
// #extension GL_EXT_samplerless_texture_functions : require
//
// layout(set = 0, binding = 0)uniform texture2DArray src;
// layout(location = 0)out vec4 dst;
//
// layout(push_constant)uniform PushConstants {
//
//     ivec2 srcOffset;
//     ivec2 dstOffset;
//     int srcMip;
//     int srcLayer;
//
//     bool flipX;
//     bool flipY;
//
//     bool premultiplyAlpha;
//     bool unmultiplyAlpha;
//
//     bool dstHasLuminance;
//     bool dstIsAlpha;
//
//     bool srcIsSRGB;
//     bool dstIsSRGB;
//
//     int dstDefaultChannelsMask;
//     bool rotateXY;
// } params;
//
// float linearToSRGB(float linear)
// {
//
//     if(linear <= 0.0031308)
//     {
//         return linear * 12.92;
//     }
//     else
//     {
//         return pow(linear,(1.0f / 2.4f))* 1.055f - 0.055f;
//     }
// }
//
// float sRGBToLinear(float sRGB)
// {
//
//     if(sRGB <= 0.04045)
//     {
//         return sRGB / 12.92;
//     }
//     else
//     {
//         return pow((sRGB + 0.055f)/ 1.055f, 2.4f);
//     }
// }
//
// void main()
// {
//     ivec2 dstSubImageCoords = ivec2(gl_FragCoord . xy)- params . dstOffset;
//
//     ivec2 srcSubImageCoords = dstSubImageCoords;
//
//     if(params . flipX)
//     {
//         srcSubImageCoords . x = - srcSubImageCoords . x;
//     }
//     if(params . flipY)
//     {
//         srcSubImageCoords . y = - srcSubImageCoords . y;
//     }
//     if(params . rotateXY)
//     {
//         srcSubImageCoords . xy = srcSubImageCoords . yx;
//     }
//
//           vec4 srcValue = texelFetch(src, ivec3(params . srcOffset + srcSubImageCoords, params . srcLayer), params . srcMip);
//
//     if(params . srcIsSRGB)
//     {
//
//         srcValue . r = linearToSRGB(srcValue . r);
//         srcValue . g = linearToSRGB(srcValue . g);
//         srcValue . b = linearToSRGB(srcValue . b);
//     }
//
//     if(params . premultiplyAlpha)
//     {
//         srcValue . rgb *= srcValue . a;
//     }
//     else if(params . unmultiplyAlpha && srcValue . a > 0)
//     {
//         srcValue . rgb /= srcValue . a;
//     }
//
//            vec4 dstValue = vec4(srcValue);
//
//     if(params . dstIsSRGB)
//     {
//
//         dstValue . r = sRGBToLinear(dstValue . r);
//         dstValue . g = sRGBToLinear(dstValue . g);
//         dstValue . b = sRGBToLinear(dstValue . b);
//     }
//
//     if(params . dstHasLuminance)
//     {
//         dstValue . rg = dstValue . ra;
//     }
//     else if(params . dstIsAlpha)
//     {
//         dstValue . r = dstValue . a;
//     }
//     else
//     {
//         int defaultChannelsMask = params . dstDefaultChannelsMask;
//         if((defaultChannelsMask & 2)!= 0)
//         {
//             dstValue . g = 0;
//         }
//         if((defaultChannelsMask & 4)!= 0)
//         {
//             dstValue . b = 0;
//         }
//         if((defaultChannelsMask & 8)!= 0)
//         {
//             dstValue . a = 1;
//         }
//     }
//
//     dst = dstValue;
// }
