// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/ClearTexture.comp.00000002.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kClearTexture_comp_00000002[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x5d,0x94,0xdb,0x4e,0x53,0x51,
    0x10,0x86,0x57,0xf7,0x2e,0x5b,0xb4,0xc8,0xc1,0x1e,0x04,0x6d,0x2b,0xa5,0x20,0x22,
    0x4a,0x10,0x2d,0xb6,0x10,0x30,0x06,0xe4,0x58,0xaf,0x78,0x02,0x12,0x6e,0xb8,0xc0,
    0x98,0xe0,0x13,0x10,0x42,0xc2,0x4b,0x79,0x61,0xf4,0x99,0x14,0x0c,0x89,0x33,0xb3,
    0xbf,0x85,0x13,0x48,0x56,0xd6,0x9e,0x7f,0xfe,0x7f,0x8e,0xab,0xa4,0x49,0xfb,0x5e,
    0x08,0x85,0xf0,0x20,0x0c,0x86,0xcf,0x21,0xff,0x1b,0x0b,0x89,0x20,0x21,0x94,0x42,
    0x66,0xf7,0x76,0xff,0xa0,0xbf,0x70,0xfa,0xed,0x68,0xe1,0x5d,0x67,0x51,0xfd,0xc3,
    0x21,0x35,0x9e,0xfa,0x46,0x84,0x33,0x20,0x77,0x51,0xce,0xc9,0xe1,0xf1,0x97,0x60,
    0xba,0x10,0x46,0x05,0x2f,0x5a,0x2c,0xfd,0xce,0xb9,0x16,0x4b,0xd0,0x12,0x9c,0x3a,
    0x76,0x45,0xee,0x8c,0x18,0x3b,0x12,0xad,0x4a,0x1d,0x6d,0xee,0x88,0x15,0xc0,0x46,
    0x1d,0x96,0x80,0x55,0x1c,0x96,0x82,0x8d,0x5b,0xfc,0xf4,0x96,0xa7,0xb9,0xba,0x77,
    0x72,0xf5,0xee,0xe4,0x52,0x7e,0x8f,0x18,0xca,0x5f,0x95,0x7b,0xea,0xd6,0x97,0xdb,
    0x2d,0x67,0xef,0xd1,0xcb,0x84,0x9c,0xb2,0x64,0x49,0xcc,0x9f,0x9a,0x5e,0xbf,0xab,
    0xc2,0xd1,0x7c,0x93,0x68,0x1e,0x8b,0x7d,0x9f,0x1a,0x52,0xc3,0x8b,0x32,0xfb,0xbc,
    0x37,0xc5,0x57,0xb1,0x4b,0x60,0xf3,0xe8,0x87,0xd0,0x2b,0xff,0x21,0x3e,0xc5,0x6b,
    0x12,0x65,0x8c,0xf8,0x91,0x5b,0xa6,0xbf,0xba,0x9b,0xad,0x62,0x4d,0xf9,0xaa,0x32,
    0xab,0xcc,0x1d,0x8d,0x59,0x23,0x7f,0x95,0x1a,0x6a,0x56,0x6b,0xc4,0x8a,0x36,0xcb,
    0x49,0x57,0xd3,0x38,0x3d,0x17,0xd0,0x3f,0x81,0x9b,0x39,0x7f,0x83,0x19,0x44,0xbb,
    0x45,0xcf,0xb1,0xce,0x19,0xec,0x8a,0xb0,0x5e,0x3a,0x7c,0x49,0xce,0xa0,0xd3,0x75,
    0xe8,0xbd,0x21,0xec,0xb8,0xbf,0x26,0x7b,0xea,0x92,0x7f,0x85,0x5c,0x3d,0xea,0x5f,
    0xb1,0xfb,0x7f,0x7e,0xd5,0x7c,0xe4,0x4d,0x28,0x7f,0x0b,0x5f,0xe6,0xfc,0x3b,0xbc,
    0xad,0x68,0xef,0xd2,0xdf,0x2b,0xb1,0xb4,0xb7,0x3d,0x38,0xbb,0x9c,0x65,0x79,0x3f,
    0x09,0xb3,0x0e,0xf4,0xf2,0x47,0x10,0xfd,0x3d,0xfc,0x16,0x6b,0x1f,0xfc,0xaf,0x7c,
    0xeb,0xfe,0xfa,0xf8,0xfb,0x56,0xcb,0x80,0xed,0x71,0x98,0x5d,0xab,0x7f,0x8d,0xbc,
    0x23,0xe0,0x5f,0xc5,0xd6,0xdd,0x3e,0x02,0x53,0x8d,0xce,0xf9,0x29,0xbb,0x99,0x70,
    0x9a,0x3a,0x78,0xe4,0x34,0xe1,0x34,0x1c,0xe7,0x19,0xf8,0xb9,0x70,0xe2,0x9b,0xac,
    0x83,0x47,0xdd,0x14,0xba,0x96,0xd3,0xb5,0xc1,0xa3,0x6e,0x1a,0x6d,0xdb,0x61,0xcf,
    0xc1,0x75,0xa7,0x17,0x60,0xb3,0xe0,0x65,0xd7,0xcb,0x0b,0xf0,0x21,0x61,0xa8,0x3d,
    0xe7,0xde,0xbe,0xfa,0xbe,0x8b,0x36,0x7f,0x0b,0x79,0xdf,0x73,0xcc,0xf2,0x35,0xb3,
    0xbc,0x96,0x38,0xf3,0xb6,0x93,0x60,0x98,0xce,0x53,0xbf,0xaf,0xe4,0xde,0xc7,0x56,
    0xfc,0x92,0x1a,0xde,0x30,0xbb,0x19,0x57,0xeb,0x5b,0xf0,0x25,0xeb,0x3b,0xb3,0xbe,
    0x97,0xe9,0xbb,0xc3,0x89,0xbd,0xbf,0xc7,0xf7,0x03,0xed,0x07,0x30,0x8d,0x71,0x06,
    0xb6,0xc1,0xdb,0x52,0xec,0x27,0xd8,0x26,0x3c,0xf5,0xfd,0x02,0xfb,0x84,0x7e,0x93,
    0xbc,0x5b,0xf6,0x3f,0x24,0x7f,0xa7,0x1d,0xea,0x5c,0x97,0x5e,0xb7,0xe1,0xfa,0x9e,
    0xf4,0xbe,0x91,0x49,0x75,0xe5,0xfc,0x03,0xb2,0x69,0xb6,0x39,0xb4,0x05,0x00,0x00
};

// Generated from:
//
// #version 450 core
// layout(local_size_x = 16, local_size_y = 1, local_size_z = 1)in;
//
// layout(set = 0, binding = 0)buffer dest
// {
//  uint dataBuffer[];
// };
//
// layout(push_constant)uniform PushConstants
// {
//  uint rawData[4];
//  uint width;
//  uint height;
//  uint depth;
// } params;
//
// void main()
// {
//  uint threadId = gl_GlobalInvocationID . x;
//
//  if(threadId >= ceil(params . width * params . height * params . depth * 3 / 4))
//  {
//   return;
//  }
//
//  uint shift =(threadId % 3)* 8;
//  uint byteData = params . rawData[0];
//
//  dataBuffer[threadId]=(byteData >> shift)|(byteData <<(24 - shift));
//
// }
