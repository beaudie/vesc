	// 7.12.3226
	 #pragma once
const uint32_t kConvertIndex_comp_00000000[] = {
	0x07230203,0x00010000,0x00080007,0x000000bd,0x00000000,0x00020011,0x00000001,0x0006000b,
	0x00000001,0x4c534c47,0x6474732e,0x3035342e,0x00000000,0x0003000e,0x00000000,0x00000001,
	0x0006000f,0x00000005,0x00000004,0x6e69616d,0x00000000,0x00000041,0x00060010,0x00000004,
	0x00000011,0x00000040,0x00000001,0x00000001,0x00030003,0x00000002,0x000001c2,0x00040005,
	0x00000004,0x6e69616d,0x00000000,0x00060005,0x00000014,0x68737550,0x736e6f43,0x746e6174,
	0x00000073,0x00060006,0x00000014,0x00000000,0x4f637273,0x65736666,0x00000074,0x00070006,
	0x00000014,0x00000001,0x4f747364,0x65736666,0x76694474,0x00000034,0x00060006,0x00000014,
	0x00000002,0x4978616d,0x7865646e,0x00000000,0x00060006,0x00000014,0x00000003,0x6461705f,
	0x676e6964,0x00000000,0x00030005,0x00000016,0x00000000,0x00030005,0x0000001f,0x00637273,
	0x00050006,0x0000001f,0x00000000,0x44637273,0x00617461,0x00030005,0x00000021,0x00000000,
	0x00080005,0x00000041,0x475f6c67,0x61626f6c,0x766e496c,0x7461636f,0x496e6f69,0x00000044,
	0x00030005,0x00000071,0x00747364,0x00050006,0x00000071,0x00000000,0x44747364,0x00617461,
	0x00030005,0x00000073,0x00000000,0x00050048,0x00000014,0x00000000,0x00000023,0x00000000,
	0x00050048,0x00000014,0x00000001,0x00000023,0x00000004,0x00050048,0x00000014,0x00000002,
	0x00000023,0x00000008,0x00050048,0x00000014,0x00000003,0x00000023,0x0000000c,0x00030047,
	0x00000014,0x00000002,0x00040047,0x0000001e,0x00000006,0x00000004,0x00040048,0x0000001f,
	0x00000000,0x00000018,0x00050048,0x0000001f,0x00000000,0x00000023,0x00000000,0x00030047,
	0x0000001f,0x00000003,0x00040047,0x00000021,0x00000022,0x00000000,0x00040047,0x00000021,
	0x00000021,0x00000001,0x00040047,0x00000041,0x0000000b,0x0000001c,0x00040047,0x00000070,
	0x00000006,0x00000004,0x00050048,0x00000071,0x00000000,0x00000023,0x00000000,0x00030047,
	0x00000071,0x00000003,0x00040047,0x00000073,0x00000022,0x00000000,0x00040047,0x00000073,
	0x00000021,0x00000000,0x00040047,0x0000007c,0x0000000b,0x00000019,0x00020013,0x00000002,
	0x00030021,0x00000003,0x00000002,0x00040015,0x00000006,0x00000020,0x00000000,0x0006001e,
	0x00000014,0x00000006,0x00000006,0x00000006,0x00000006,0x00040020,0x00000015,0x00000009,
	0x00000014,0x0004003b,0x00000015,0x00000016,0x00000009,0x00040015,0x00000017,0x00000020,
	0x00000001,0x0004002b,0x00000017,0x00000018,0x00000000,0x00040020,0x00000019,0x00000009,
	0x00000006,0x0003001d,0x0000001e,0x00000006,0x0003001e,0x0000001f,0x0000001e,0x00040020,
	0x00000020,0x00000002,0x0000001f,0x0004003b,0x00000020,0x00000021,0x00000002,0x0004002b,
	0x00000017,0x00000023,0x00000002,0x00040020,0x00000025,0x00000002,0x00000006,0x0004002b,
	0x00000006,0x0000002a,0x00000003,0x0004002b,0x00000017,0x0000002f,0x00000003,0x0004002b,
	0x00000006,0x00000032,0x000000ff,0x00040017,0x0000003f,0x00000006,0x00000003,0x00040020,
	0x00000040,0x00000001,0x0000003f,0x0004003b,0x00000040,0x00000041,0x00000001,0x0004002b,
	0x00000006,0x00000042,0x00000000,0x00040020,0x00000043,0x00000001,0x00000006,0x0004002b,
	0x00000017,0x00000046,0x00000001,0x00020014,0x0000004b,0x0004002b,0x00000006,0x0000005d,
	0x00000001,0x0003001d,0x00000070,0x00000006,0x0003001e,0x00000071,0x00000070,0x00040020,
	0x00000072,0x00000002,0x00000071,0x0004003b,0x00000072,0x00000073,0x00000002,0x0004002b,
	0x00000006,0x0000007b,0x00000040,0x0006002c,0x0000003f,0x0000007c,0x0000007b,0x0000005d,
	0x0000005d,0x0004002b,0x00000006,0x000000bb,0x00000010,0x00050036,0x00000002,0x00000004,
	0x00000000,0x00000003,0x000200f8,0x00000005,0x000200f9,0x0000007e,0x000200f8,0x0000007e,
	0x000400f6,0x0000007d,0x00000080,0x00000000,0x000200f9,0x0000007f,0x000200f8,0x0000007f,
	0x00050041,0x00000043,0x00000044,0x00000041,0x00000042,0x0004003d,0x00000006,0x00000045,
	0x00000044,0x000500c4,0x00000006,0x00000047,0x00000045,0x00000046,0x00050041,0x00000019,
	0x00000049,0x00000016,0x00000023,0x0004003d,0x00000006,0x0000004a,0x00000049,0x000500ae,
	0x0000004b,0x0000004c,0x00000047,0x0000004a,0x000300f7,0x0000004e,0x00000000,0x000400fa,
	0x0000004c,0x0000004d,0x0000004e,0x000200f8,0x0000004d,0x000200f9,0x0000007d,0x000200f8,
	0x0000004e,0x00050041,0x00000019,0x0000008b,0x00000016,0x00000018,0x0004003d,0x00000006,
	0x0000008c,0x0000008b,0x00050080,0x00000006,0x0000008d,0x00000047,0x0000008c,0x000500c2,
	0x00000006,0x0000008f,0x0000008d,0x00000023,0x00060041,0x00000025,0x00000090,0x00000021,
	0x00000018,0x0000008f,0x0004003d,0x00000006,0x00000091,0x00000090,0x000500c7,0x00000006,
	0x00000093,0x0000008d,0x0000002a,0x000500c4,0x00000006,0x00000096,0x00000093,0x0000002f,
	0x000500c2,0x00000006,0x00000097,0x00000091,0x00000096,0x000500c7,0x00000006,0x00000098,
	0x00000097,0x00000032,0x000500c4,0x00000006,0x0000009d,0x00000098,0x00000042,0x000500c5,
	0x00000006,0x0000009f,0x00000042,0x0000009d,0x00050080,0x00000006,0x0000005e,0x00000047,
	0x0000005d,0x000500b0,0x0000004b,0x00000061,0x0000005e,0x0000004a,0x000300f7,0x00000063,
	0x00000000,0x000400fa,0x00000061,0x00000062,0x00000063,0x000200f8,0x00000062,0x00050080,
	0x00000006,0x000000a8,0x0000005e,0x0000008c,0x000500c2,0x00000006,0x000000aa,0x000000a8,
	0x00000023,0x00060041,0x00000025,0x000000ab,0x00000021,0x00000018,0x000000aa,0x0004003d,
	0x00000006,0x000000ac,0x000000ab,0x000500c7,0x00000006,0x000000ae,0x000000a8,0x0000002a,
	0x000500c4,0x00000006,0x000000b1,0x000000ae,0x0000002f,0x000500c2,0x00000006,0x000000b2,
	0x000000ac,0x000000b1,0x000500c7,0x00000006,0x000000b3,0x000000b2,0x00000032,0x000500c4,
	0x00000006,0x000000b8,0x000000b3,0x000000bb,0x000500c5,0x00000006,0x000000ba,0x0000009f,
	0x000000b8,0x000200f9,0x00000063,0x000200f8,0x00000063,0x000700f5,0x00000006,0x000000bc,
	0x0000009f,0x0000004e,0x000000ba,0x00000062,0x00050041,0x00000019,0x00000074,0x00000016,
	0x00000046,0x0004003d,0x00000006,0x00000075,0x00000074,0x00050080,0x00000006,0x00000078,
	0x00000075,0x00000045,0x00060041,0x00000025,0x0000007a,0x00000073,0x00000018,0x00000078,
	0x0003003e,0x0000007a,0x000000bc,0x000200f9,0x0000007d,0x000200f8,0x00000080,0x000200f9,
	0x0000007e,0x000200f8,0x0000007d,0x000100fd,0x00010038
};

#if 0  // Generated from:
#version 450 core

layout(local_size_x = 64, local_size_y = 1, local_size_z = 1)in;

layout(set = 0, binding = 0)buffer dst
{

    uint dstData[];
};

layout(set = 0, binding = 1)readonly buffer src
{

    uint srcData[];
};

layout(push_constant)uniform PushConstants
{

    uint srcOffset;

    uint dstOffsetDiv4;

    uint maxIndex;

    uint _padding;
};

uint PullIndex(uint index)
{
    uint srcIndex = index + srcOffset;
    uint srcBlock = srcData[srcIndex >> 2];
    uint srcComponent =(srcIndex & 3);

    uint value =(srcBlock >>(srcComponent << 3))& 0xFF;

    return value;
}

void PackIndexValue(uint srcValue, uint indexIndex, inout uint dstValue)
{

    dstValue |= srcValue <<(indexIndex << 4);
}

void main()
{

    uint index =(gl_GlobalInvocationID . x << 1);

    if(index >= maxIndex)
        return;

    uint dstValue = 0;

    uint srcValue = PullIndex(index);
    PackIndexValue(srcValue, 0, dstValue);

    if(index + 1 < maxIndex)
    {
        uint srcValue = PullIndex(index + 1);
        PackIndexValue(srcValue, 1, dstValue);
    }

    dstData[dstOffsetDiv4 + gl_GlobalInvocationID . x]= dstValue;
}
#endif  // Preprocessed code
