// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/ClearTexture.comp.00000000.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kClearTexture_comp_00000000[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x5d,0x93,0xc9,0x6e,0x13,0x41,
    0x10,0x86,0xdb,0x33,0x66,0x08,0x38,0x2b,0x5e,0x48,0xc0,0x31,0x71,0x0c,0x84,0x60,
    0x34,0x04,0xe2,0x58,0x08,0x13,0x27,0x71,0x20,0x1b,0xbe,0xf1,0x04,0x48,0x5c,0x38,
    0x80,0x90,0xe0,0x11,0x50,0x1e,0x8b,0x13,0x51,0x1e,0x89,0x4d,0x08,0xaa,0x6a,0xbe,
    0xb6,0x4a,0x1e,0xa9,0xd4,0x5d,0x7f,0xfd,0xb5,0x76,0x4d,0x9a,0x74,0xae,0x86,0x50,
    0x0a,0xd7,0xc3,0x4c,0x18,0x87,0xe2,0x5b,0x0a,0x89,0x20,0x21,0x54,0x42,0x66,0xe7,
    0xf1,0xf8,0xcd,0x38,0xff,0xfc,0xe5,0x5d,0xde,0xdb,0xd9,0x52,0xfb,0x7c,0x48,0x8d,
    0xa7,0xb6,0x05,0xe1,0x5c,0x91,0xb3,0x2c,0xf2,0xe1,0xed,0xfb,0x8f,0xc1,0xfc,0x42,
    0x58,0x14,0xbc,0x6c,0xb1,0xf4,0x5e,0x70,0x2d,0x96,0xa0,0x15,0x38,0x4d,0xf4,0x9a,
    0x9c,0x19,0x31,0x4e,0x24,0x5a,0x9d,0x3a,0x3a,0x9c,0x11,0x2b,0x81,0x2d,0x3a,0x2c,
    0x01,0xab,0x39,0x2c,0x05,0x5b,0xb6,0xf8,0xe9,0x84,0xa7,0xb9,0xb6,0xa7,0x72,0xf5,
    0xa6,0x72,0x29,0xbf,0x47,0x0c,0xe5,0xf7,0xe5,0x5c,0x9f,0xd8,0x0a,0xbd,0xed,0xf4,
    0x53,0x7a,0x59,0x11,0xa9,0x4a,0x96,0xc4,0xec,0xa9,0xf9,0xeb,0xbd,0x2e,0x1c,0xcd,
    0xb7,0x86,0xcf,0x4d,0xd1,0xaf,0x51,0x43,0x6a,0x78,0x59,0x66,0x5f,0xf4,0xa6,0xf8,
    0x00,0xbd,0x02,0xd6,0xc5,0x7f,0x16,0x7f,0xe5,0xcf,0x61,0x53,0xbc,0x21,0x51,0x96,
    0x88,0x1f,0xb9,0x55,0xfa,0x6b,0xba,0xd9,0x2a,0xd6,0x92,0x5b,0x9d,0x59,0x65,0x4e,
    0x34,0x66,0x83,0xfc,0x75,0x6a,0x68,0x58,0xad,0x11,0x2b,0xdb,0x2c,0xd7,0x5c,0x4d,
    0xcb,0xf4,0x5c,0xc2,0xff,0x16,0xdc,0xcc,0xd9,0x57,0x99,0x41,0xd4,0xdb,0xf4,0x5c,
    0x13,0xf4,0x81,0xc3,0x73,0x7a,0x8b,0xf5,0x3f,0x11,0xf9,0x67,0xfe,0xe9,0xe4,0xbd,
    0x5a,0xbc,0xcb,0x36,0xf9,0x76,0x88,0xdd,0xa3,0x5e,0xd5,0xfb,0x53,0xf9,0x9e,0x8b,
    0xcc,0x38,0x7d,0xc8,0xee,0x44,0x7d,0xc4,0x8e,0x68,0xbc,0x57,0xf8,0x66,0xae,0x8e,
    0x63,0xc7,0xcf,0x6c,0x5f,0x8a,0x7e,0x1f,0x89,0xa6,0xbd,0x9e,0xc2,0x39,0x41,0xfa,
    0xb2,0x4f,0x09,0xb3,0x0f,0xf4,0xfa,0x53,0x10,0xfd,0x3f,0x7e,0x88,0x76,0x06,0xfe,
    0x47,0xee,0xfa,0x9e,0xaf,0xb1,0xeb,0x79,0x20,0xac,0x39,0xfb,0xb7,0x8a,0xb7,0x57,
    0xfb,0x2e,0x79,0x17,0xc0,0x3f,0x89,0xae,0x6f,0x7d,0x03,0x4c,0x7d,0x74,0xee,0xb7,
    0x79,0xab,0x15,0xe7,0xd3,0x04,0x8f,0x9c,0x16,0x9c,0x55,0xc7,0xb9,0x03,0xfe,0x55,
    0x38,0x71,0x47,0x9b,0xe0,0xd1,0x6f,0x1d,0xbf,0xb6,0xf3,0xeb,0x80,0x47,0xbf,0xbb,
    0xf8,0x2a,0x7e,0x0e,0x76,0x0f,0xbc,0xea,0xea,0xbe,0x0f,0x3e,0x2b,0x0c,0xd5,0x37,
    0xdc,0xde,0xab,0xed,0x9b,0xf8,0xea,0x5e,0x6c,0xd2,0xe3,0x06,0x73,0xeb,0x32,0xb7,
    0xdf,0x12,0x47,0x6d,0x0f,0xed,0x4d,0x8a,0xd9,0xe9,0xfd,0x97,0x9c,0x67,0xe8,0x5d,
    0xab,0x3d,0xb3,0xda,0x1f,0x53,0x7b,0x8e,0xc4,0xfa,0xb7,0xb0,0x5d,0x52,0xeb,0x53,
    0x30,0xdd,0xbb,0xef,0x60,0x03,0x70,0xdd,0xa1,0x0b,0xb0,0x17,0x60,0x03,0xc7,0xdb,
    0x03,0x1b,0x3a,0xde,0x3e,0xdc,0x3d,0xc7,0x3b,0x84,0x37,0x72,0xbc,0x97,0x70,0x0f,
    0xa9,0x59,0x77,0xf0,0x88,0x3d,0xce,0x79,0xe3,0xa1,0xf4,0x7f,0x04,0xd7,0xf7,0xa9,
    0xe7,0x5f,0x99,0xde,0x33,0x91,0xff,0x75,0xa6,0xef,0xcd,0xc4,0x05,0x00,0x00
};

// Generated from:
//
// #version 450 core
// layout(local_size_x = 16, local_size_y = 1, local_size_z = 1)in;
//
// layout(set = 0, binding = 0)buffer dest
// {
//  uint dataBuffer[];
// };
//
// layout(push_constant)uniform PushConstants
// {
//  uint rawData[4];
//  uint width;
//  uint height;
//  uint depth;
// } params;
//
// void main()
// {
//  uint threadId = gl_GlobalInvocationID . x;
//
//  if(threadId >= ceil(params . width * params . height * params . depth / 4))
//  {
//   return;
//  }
//  uint byteData = params . rawData[0]& 0xFF;
//     dataBuffer[threadId]=(byteData)|(byteData << 8)|(byteData << 16)|(byteData << 24);
//
// }
