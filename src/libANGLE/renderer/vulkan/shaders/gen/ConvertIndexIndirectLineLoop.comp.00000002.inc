// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/ConvertIndexIndirectLineLoop.comp.00000002.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kConvertIndexIndirectLineLoop_comp_00000002[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x6d,0x95,0x6d,0x68,0x95,0x75,
    0x18,0xc6,0x9f,0xe7,0x9c,0xb3,0xe3,0x5b,0x94,0xb6,0xad,0x17,0xf0,0xcc,0x93,0x7e,
    0xd8,0xda,0x42,0x84,0x1d,0xd7,0x1b,0x4d,0xf7,0xc5,0xb9,0xda,0xa9,0x86,0xdf,0x72,
    0x83,0x8a,0x26,0x24,0xf9,0x52,0x86,0x6d,0xb4,0x51,0x04,0x6d,0xf4,0x65,0xdf,0x42,
    0x72,0xdf,0xda,0x9a,0x35,0x32,0x2c,0x41,0x61,0x82,0x65,0x4c,0xd0,0xd4,0xf5,0xad,
    0x24,0x8a,0x22,0xa4,0x10,0x29,0x44,0xb2,0x39,0xb5,0xec,0xbe,0x9f,0xfd,0xfe,0xeb,
    0xf2,0xe1,0x1c,0xf8,0xf3,0x9c,0xfb,0xba,0xee,0xfb,0xba,0xdf,0xfe,0xe7,0x39,0xd9,
    0xcc,0x9a,0x45,0x51,0x36,0x8e,0x96,0x46,0x8b,0xa3,0x9a,0x38,0x4a,0x3e,0x2b,0xa2,
    0x4c,0xe4,0x5f,0x97,0x45,0xf9,0xe4,0xd9,0xde,0xb9,0xa5,0x73,0xed,0x9e,0xd7,0x5f,
    0x5a,0x5b,0x5a,0xbf,0xce,0xf9,0x3b,0xa3,0x6c,0xe2,0xe7,0xdc,0x5d,0xe6,0x53,0x65,
    0xcf,0x9c,0x9d,0x1d,0x2f,0xbc,0xbc,0xd3,0xf1,0xcd,0x76,0x96,0x1b,0x9e,0x4b,0xb4,
    0xa2,0x68,0x23,0xbe,0x71,0xc2,0x55,0x25,0x98,0x7f,0xd6,0xf0,0x0c,0x58,0x0c,0x96,
    0x13,0x2c,0x03,0xb6,0x58,0xb0,0x2c,0xd8,0x1d,0x82,0xe5,0xc0,0x96,0x7b,0xbd,0xe6,
    0x11,0x62,0xdb,0x8d,0x59,0x69,0xcf,0xfc,0x82,0x6e,0x2e,0x2a,0x90,0xf7,0x3e,0xe2,
    0x0b,0xa9,0x7a,0x3c,0xbe,0x20,0xf1,0xab,0xec,0xb9,0x7a,0x81,0x9b,0xb7,0x1f,0xa0,
    0x5e,0xb7,0xeb,0x6f,0xd3,0xaf,0x8a,0x1a,0x2a,0xe8,0x35,0x88,0x5e,0x63,0x4a,0xaf,
    0x11,0xbd,0x60,0x37,0xa7,0xea,0x2d,0xa5,0xea,0x2d,0x55,0xd0,0x2f,0x89,0x7e,0x4b,
    0x4a,0xbf,0x05,0xfd,0xc0,0x6f,0x4e,0x76,0x1b,0x25,0x73,0x71,0x7b,0x2c,0x55,0xff,
    0x78,0x05,0xfd,0x71,0x89,0x9f,0x48,0xe9,0x4f,0xa0,0x9f,0xc5,0x3e,0x87,0xfe,0xfd,
    0x76,0xaa,0x2d,0x2a,0x93,0xf0,0xd9,0x84,0xf7,0xef,0xb5,0xe6,0xe3,0xf9,0x8a,0x68,
    0xd4,0x45,0x8b,0x92,0x7d,0xe5,0x2b,0x9c,0xa2,0xf9,0xde,0x6d,0xcf,0x25,0xdc,0xa5,
    0xc7,0xb1,0xab,0xc1,0x5c,0xab,0x06,0x2d,0xdf,0x47,0x13,0x76,0x2d,0xb9,0x3c,0xfe,
    0x1e,0x7c,0x5d,0xaf,0x60,0x55,0x84,0xfb,0x50,0xc7,0x9e,0x57,0xe2,0x57,0xc7,0x9d,
    0x2a,0x90,0xc7,0xed,0x55,0x60,0x4d,0x92,0x27,0xc2,0x7f,0x35,0x5c,0xd0,0xad,0x17,
    0x5d,0xdf,0x77,0x3d,0x7e,0x0f,0xe2,0xd7,0x80,0xae,0xdb,0x8d,0x29,0xdd,0x26,0xe6,
    0xe7,0x3a,0xcd,0xa2,0xe3,0x7b,0x6d,0x46,0x67,0x3d,0x31,0x25,0x74,0xdc,0x6e,0x11,
    0x1d,0x8f,0x69,0xa5,0xef,0x7b,0xcd,0xde,0x84,0x4e,0x96,0xf8,0x76,0x66,0xb4,0x89,
    0xf8,0x76,0x7e,0xab,0xb1,0xc4,0x77,0x48,0x7f,0x4f,0xc2,0xe5,0x85,0x2f,0x83,0xd5,
    0x58,0x96,0xa7,0x05,0x7f,0xd1,0xce,0x2d,0xfb,0x84,0x7e,0x7a,0x53,0xfb,0xd8,0xcd,
    0xfd,0xf2,0xfe,0xc6,0xa4,0x3f,0xbf,0x57,0x63,0xe4,0xfb,0x88,0x5e,0xc6,0xa9,0xcf,
    0xed,0x89,0x54,0x7f,0x53,0xf4,0x13,0xec,0x69,0x74,0x83,0x7d,0x96,0xf7,0xcd,0x43,
    0x66,0x79,0x9f,0xe7,0xc0,0xca,0x9c,0x16,0xbb,0xdf,0x19,0x62,0x22,0xb4,0xae,0x19,
    0xe2,0xef,0xb0,0x59,0xb3,0x66,0xc0,0x6f,0xd8,0x77,0x9f,0xc5,0xb7,0xf0,0xfe,0x6c,
    0x33,0x2f,0xbf,0x4b,0x0f,0x73,0xff,0xfc,0x2e,0x3c,0x41,0xde,0x47,0xc0,0xdb,0xcc,
    0xf2,0x7b,0xf1,0x28,0xbb,0x29,0xc2,0x05,0xbf,0xc7,0xe0,0xde,0x36,0x2d,0xb7,0x37,
    0xc0,0xb7,0x4a,0xec,0x46,0x89,0xdd,0x20,0xb1,0x6d,0x70,0x5e,0x87,0xef,0xe6,0x29,
    0xf6,0xd7,0x21,0x3e,0x9d,0xe0,0x9f,0x99,0x8f,0xef,0xe7,0x19,0xb0,0x32,0xfd,0x75,
    0xd1,0xdf,0x75,0xf3,0x77,0xee,0x59,0x3b,0x5d,0xf4,0xe8,0xdf,0xe7,0xec,0x39,0x83,
    0xdd,0x85,0xfd,0x1c,0xb6,0x3f,0xaf,0xda,0x6f,0xd5,0xf3,0xdc,0xa2,0x1e,0xf7,0xd9,
    0x66,0xa7,0x47,0xb8,0x7f,0xa8,0xc9,0xb9,0xea,0xf8,0x76,0xee,0xa6,0x70,0x4b,0x53,
    0xdc,0x0d,0xe1,0x96,0xa4,0xb8,0xeb,0xcc,0xce,0xb9,0x5d,0xe4,0xfb,0x94,0x1e,0x9f,
    0x87,0xf7,0xd8,0xbf,0xad,0xaf,0x6e,0xf8,0xd0,0xa7,0xf3,0x5b,0xed,0x74,0xd3,0xc7,
    0x56,0x99,0xff,0x36,0x7a,0xe9,0x95,0xfd,0x7e,0xc7,0x7e,0x6b,0x65,0xae,0xdf,0x83,
    0x7f,0x4d,0xdc,0x79,0xb0,0x5a,0xd1,0xfa,0x01,0xad,0xf3,0xb2,0xcb,0x1f,0x79,0x87,
    0x14,0xe1,0x83,0xde,0x4f,0x70,0x93,0xf4,0xb0,0x5d,0xfa,0xf7,0x99,0xbf,0x42,0xad,
    0xfe,0xfc,0xc4,0x22,0xf2,0xcc,0x72,0x3b,0xb1,0x3e,0xe3,0x77,0xc8,0xbb,0x8b,0xfe,
    0xb5,0x87,0x57,0xe9,0x61,0xb7,0xe4,0x7c,0x0d,0x3c,0xe4,0xdc,0x03,0x56,0x16,0x6c,
    0x2f,0xfa,0xfe,0x7b,0x3e,0x00,0xf6,0x06,0xbe,0x7b,0xb9,0x43,0xfd,0x32,0x5b,0xe7,
    0xfa,0xec,0x8c,0x50,0x6f,0x9f,0xec,0xe5,0x4d,0x7a,0x0a,0x77,0x6f,0x50,0xe2,0x9c,
    0x1b,0xb0,0x33,0x48,0xdc,0x80,0xcc,0xf1,0x2d,0xee,0x89,0xf6,0xf3,0x33,0xfd,0x34,
    0x49,0x3f,0xbf,0x80,0x87,0xb8,0x5f,0xc1,0x6e,0xca,0xfc,0x2f,0xf0,0xae,0x2d,0xc2,
    0xb7,0x5a,0x1d,0x17,0x98,0xa5,0xcf,0x39,0xe4,0x1f,0x94,0xbb,0x56,0x15,0xcf,0x6b,
    0xf4,0x51,0xcb,0x80,0xf4,0xf4,0xae,0xec,0xc9,0x7b,0x1a,0x96,0x9e,0x9c,0x1b,0xb2,
    0x33,0x8c,0xe6,0x90,0xd4,0xf6,0x1e,0xba,0xda,0xd3,0x6f,0x15,0x7a,0xfa,0x1d,0x3c,
    0xc4,0x5d,0x04,0xf3,0xd8,0xd0,0xd3,0x25,0xe9,0xe9,0x22,0x3d,0x5d,0x62,0x67,0xde,
    0x53,0xc8,0x3f,0x2c,0x3d,0x2d,0x8b,0xe7,0x35,0x06,0xa9,0x65,0x08,0xdf,0x7e,0x7c,
    0x47,0xa4,0xae,0x3f,0x2a,0xd4,0xf5,0x27,0x78,0xa8,0xeb,0x32,0x98,0xce,0xfa,0x8a,
    0xd4,0x75,0x99,0xba,0xae,0x70,0x9f,0x42,0xdc,0xfb,0xb2,0xdb,0x80,0xed,0x63,0xa6,
    0xbd,0xa9,0x9a,0xfa,0xa5,0x7e,0x7f,0x57,0x78,0x0f,0xc3,0x68,0x8c,0x08,0xe7,0xef,
    0x8a,0x0e,0xe6,0xbe,0x0f,0xce,0x75,0x7a,0xd0,0xe9,0x49,0xbd,0xc7,0xba,0x65,0x9f,
    0x1f,0xa4,0xee,0xe8,0xa8,0xec,0xd3,0xb9,0xfd,0x76,0x46,0x89,0xdb,0x2f,0x33,0xfa,
    0xab,0xc2,0x8c,0xae,0x82,0x87,0xbe,0x66,0xc1,0x74,0x46,0x73,0x32,0xa3,0x59,0x66,
    0x34,0xc7,0xef,0x39,0xc4,0x7d,0x28,0x33,0xf2,0xba,0x43,0xfe,0x51,0xe9,0xf9,0x5f,
    0x7c,0xba,0xf1,0xd7,0xda,0x0e,0x50,0x5b,0xaf,0xd4,0xf6,0x31,0x78,0xa8,0x63,0x92,
    0xff,0xd6,0x22,0x9c,0xd7,0x31,0x89,0x6e,0xa8,0xe3,0x20,0x5c,0x59,0xb0,0x43,0xfc,
    0x5f,0x95,0x45,0xeb,0x73,0xf9,0xbf,0x3a,0x24,0x39,0xbf,0x80,0x0b,0x7e,0x87,0x25,
    0xe7,0x41,0x72,0x1e,0xc6,0x2f,0xe8,0x1f,0x59,0xa8,0xe7,0xff,0xb8,0xa3,0x12,0x77,
    0x84,0xb8,0xa3,0xfc,0x06,0x43,0xdc,0x31,0xe2,0xa6,0x04,0x3b,0x4e,0xad,0x53,0xa2,
    0xf5,0xa5,0xd4,0x7a,0x5c,0x6a,0xfd,0x0a,0x2e,0xf8,0x9d,0x90,0x9c,0xc7,0xc8,0x79,
    0x02,0xbf,0xa0,0x7f,0x92,0x9c,0xd3,0x82,0x9d,0x22,0xe7,0xb4,0x68,0x9d,0x96,0x9c,
    0xa7,0x24,0xe7,0x37,0x70,0xc1,0xef,0x8c,0xe4,0x3c,0x49,0xce,0x33,0xf8,0xe9,0xff,
    0xf2,0x4c,0x72,0x5f,0x62,0xcb,0x13,0x47,0xff,0x01,0x69,0xef,0x9e,0x83,0xc0,0x0d,
    0x00,0x00
};

// Generated from:
//
// #version 450 core
//
// layout(local_size_x = 64, local_size_y = 1, local_size_z = 1)in;
//
// layout(set = 0, binding = 0)buffer dst
// {
//
//     uint dstData[];
// };
//
// layout(set = 0, binding = 1)readonly buffer src
// {
//
//     uint srcData[];
// };
//
// layout(set = 0, binding = 2)readonly buffer cmd
// {
//
//     uint cmdData[];
// };
//
// layout(set = 0, binding = 3)buffer dstCmd
// {
//
//     uint dstCmdData[];
// };
//
// layout(push_constant)uniform PushConstants
// {
//
//     uint cmdOffsetDiv4;
//
//     uint dstCmdOffsetDiv4;
//
//     uint srcOffset;
//
//     uint dstOffsetDiv4;
//
//     uint isRestartEnabled;
// };
//
// uint GetIndexValue(uint index)
// {
//
//     index += srcOffset >>(2 - 0);
//
//     return srcData[index];
//
// }
//
// void PutIndexValue(uint index, uint value)
// {
//
//     dstData[dstOffsetDiv4 + index]= value;
//
// }
//
// void main()
// {
//
//     uint indexCount = cmdData[cmdOffsetDiv4];
//     uint firstIndex = cmdData[cmdOffsetDiv4 + 2];
//     uint endIndex = firstIndex + indexCount;
//
//     if(gl_GlobalInvocationID . x >= 1)
//         return;
//
//     uint workingCount = 0;
//     uint srcIdx = firstIndex;
//     uint indicesRemaining = indexCount;
//     uint lineSize = 0;
//     uint firstIndexValue = 0;
//     while(indicesRemaining > 0)
//     {
//         uint indexValue;
//         uint restartValue = 0xffffffff;
//         indexValue = GetIndexValue(srcIdx ++);
//         if(lineSize == 0)
//         {
//             firstIndexValue = indexValue;
//         }
//         indicesRemaining --;
//         if((isRestartEnabled == 1)&&(indexValue == restartValue))
//         {
//
//             if(lineSize > 1)
//             {
//                 PutIndexValue(workingCount ++, firstIndexValue);
//             }
//             if(lineSize > 0)
//             {
//                 PutIndexValue(workingCount ++, restartValue);
//             }
//             lineSize = 0;
//         } else {
//             PutIndexValue(workingCount, indexValue);
//             workingCount ++;
//             lineSize ++;
//         }
//     }
//     if(lineSize > 1)
//     {
//         PutIndexValue(workingCount, firstIndexValue);
//         workingCount ++;
//     }
//
//     dstCmdData[dstCmdOffsetDiv4]= workingCount;
//     dstCmdData[dstCmdOffsetDiv4 + 1]= cmdData[cmdOffsetDiv4 + 1];
//     dstCmdData[dstCmdOffsetDiv4 + 2]= 0;
//     dstCmdData[dstCmdOffsetDiv4 + 3]= cmdData[cmdOffsetDiv4 + 3];
//     dstCmdData[dstCmdOffsetDiv4 + 4]= cmdData[cmdOffsetDiv4 + 4];
// }
