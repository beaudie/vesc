// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/ImageCopy.frag.00000048.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kImageCopy_frag_00000048[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x85,0x98,0x5b,0x6c,0x55,0x45,
    0x14,0x86,0x67,0xce,0xe9,0x8d,0x5b,0x2d,0xa1,0x02,0x6d,0x08,0x69,0xe5,0x2a,0x94,
    0x52,0xb1,0x96,0x4b,0x39,0x5c,0x04,0x69,0x91,0x4a,0x05,0xa2,0x09,0x22,0x92,0x26,
    0xa2,0x80,0x42,0x8d,0x10,0x21,0x82,0xd0,0x0a,0xb4,0x31,0x42,0x8c,0xf1,0x41,0x40,
    0x30,0xbe,0x18,0x1f,0x30,0x55,0xe1,0x41,0x50,0xda,0x18,0x82,0x37,0x6a,0xa2,0x34,
    0x51,0x6a,0xe0,0xd9,0x07,0x23,0x91,0xa8,0x20,0x2a,0x82,0xb3,0xf6,0x7c,0xab,0x67,
    0xd9,0x78,0x69,0x32,0xd9,0x7b,0xfe,0x59,0xff,0xba,0xfc,0xb3,0x66,0x76,0xdb,0x74,
    0x6a,0x4c,0xbe,0x73,0xde,0x0d,0x74,0x05,0x6e,0xa9,0x77,0xc9,0xcf,0x50,0x97,0x72,
    0xf2,0x3a,0xc8,0xe5,0x25,0xcf,0xba,0x86,0x15,0x0d,0x95,0x9b,0xb7,0x3c,0x5a,0x59,
    0x7d,0x57,0x95,0xac,0x17,0xba,0x74,0x62,0x27,0x6b,0xb7,0xb8,0x7c,0x97,0x13,0x9e,
    0x32,0x36,0x36,0xad,0xdf,0x24,0xf8,0xf8,0x30,0x2e,0x86,0x51,0x14,0xec,0x04,0xcf,
    0x17,0x1f,0xe1,0x6d,0x7c,0xe2,0x53,0x38,0xce,0xd5,0xbb,0x5c,0x57,0x11,0xc3,0xb9,
    0x31,0x3c,0x15,0xf3,0x60,0x05,0x06,0x4b,0x81,0x15,0x19,0x2c,0x0d,0x56,0x6c,0xb0,
    0x1c,0xb0,0x91,0x06,0xcb,0x05,0x1b,0x65,0xb0,0x3c,0xb0,0x32,0x83,0xe5,0x83,0x8d,
    0x35,0x58,0x01,0xd8,0x44,0x83,0x0d,0x00,0xab,0x30,0xd8,0x40,0xb0,0x2a,0x83,0x0d,
    0x02,0xab,0x36,0xd8,0x60,0xb0,0x19,0x06,0x1b,0x02,0x36,0x3b,0xd1,0x29,0xdd,0x57,
    0xaf,0x68,0xb6,0x2a,0x3c,0x6f,0x43,0x1f,0x9d,0x97,0x9b,0xb9,0xe8,0x3c,0x9a,0xf9,
    0xb0,0xc0,0x4a,0x25,0xeb,0xe9,0x44,0x1b,0x79,0x1f,0x1e,0xde,0xf2,0xa8,0x73,0x72,
    0xb0,0xcf,0x23,0xde,0x77,0x1d,0xe3,0x32,0xc5,0xc1,0xa2,0xd0,0xe0,0xa2,0x59,0x47,
    0x5d,0x53,0x46,0xe7,0xa2,0xd7,0xa1,0x83,0x25,0xf3,0x6e,0x0d,0xf3,0x32,0x7c,0xc8,
    0xde,0x8c,0x08,0xf3,0x72,0xe6,0x29,0xe6,0x63,0xd1,0x34,0x27,0xc1,0x73,0xdc,0x38,
    0x6c,0x05,0xaf,0x65,0x3e,0xde,0xf0,0x27,0x60,0x2f,0x7c,0xf1,0x3f,0x19,0x7f,0x2e,
    0xa9,0xa7,0x28,0xd1,0xa0,0x9c,0x51,0xd6,0x97,0xff,0x7f,0x8f,0xb2,0xbe,0x67,0x8e,
    0x9b,0xc2,0x3e,0x55,0x10,0x5f,0xe6,0x95,0x60,0x93,0xa9,0x67,0x2a,0xf9,0x88,0x7d,
    0x15,0x6b,0xe5,0x66,0xbd,0xc6,0xd4,0x33,0xbd,0x8f,0x1b,0xd7,0xe5,0x39,0x8b,0x7c,
    0xd5,0x7e,0x01,0xbd,0xa6,0xf3,0xa5,0x68,0x2d,0xf5,0x3e,0x08,0x57,0xfc,0x95,0x04,
    0x4f,0x2b,0x99,0x73,0xe4,0xfa,0xce,0x93,0xce,0x25,0xe6,0x43,0xbc,0xaf,0xa4,0x06,
    0x99,0xaf,0xea,0x17,0x73,0x75,0xbf,0xf9,0x5a,0x34,0x15,0xfe,0x63,0xe4,0x5c,0x66,
    0xd6,0x37,0xa0,0xbb,0xe4,0xb4,0x85,0x1c,0xd2,0x66,0x7d,0x07,0xe7,0x40,0xe7,0x07,
    0xe8,0x63,0x9d,0x77,0x70,0x26,0x74,0x7e,0xb2,0x9f,0xa6,0x67,0xe8,0x71,0xed,0xa1,
    0x2f,0x4c,0x7e,0x32,0xff,0x36,0x99,0xb5,0xcc,0x95,0xfc,0x2e,0x10,0x5b,0x7b,0xe4,
    0x02,0xf7,0x46,0xda,0xd8,0xcf,0x08,0x82,0xb4,0xb6,0xb4,0xd4,0x56,0x84,0xac,0xc4,
    0x6e,0xa6,0x8f,0x98,0x1d,0x6a,0x3b,0x2b,0xbc,0x37,0xbf,0xf5,0xf4,0x5c,0x9d,0xd7,
    0x86,0xf9,0xcb,0xbb,0x5f,0xcf,0xd4,0x84,0x5d,0x49,0xa1,0xbd,0xc3,0xff,0xb5,0x80,
    0xc8,0x5e,0x65,0xe8,0xdd,0x89,0xf4,0x67,0x63,0x88,0x23,0xbd,0x79,0x3b,0xd8,0x44,
    0xb3,0x37,0x9b,0xe8,0xfb,0x49,0xac,0xcf,0x0f,0x1e,0xa4,0x6f,0xee,0xa0,0xb7,0xa6,
    0xe2,0x4f,0x6c,0xa6,0x81,0x3f,0x1f,0x6c,0x64,0x7e,0x27,0xbc,0x69,0xf0,0xa6,0x73,
    0x07,0x54,0xd2,0x67,0x19,0x7a,0x6a,0x26,0xf8,0xd1,0x60,0x53,0x98,0xe8,0x12,0x31,
    0xe9,0xb5,0x5f,0x43,0xe6,0x19,0xf2,0xf9,0x3d,0xd8,0xd7,0x72,0x67,0x64,0xa8,0x47,
    0xde,0x97,0x05,0x9e,0xec,0xc3,0x3c,0x62,0xca,0xcf,0x4e,0xf6,0x66,0x3e,0xf8,0xf2,
    0xa0,0x8e,0xe4,0x34,0xda,0x47,0x4c,0xed,0x7e,0x0b,0x3e,0xd4,0x97,0x3c,0xaf,0x04,
    0x2d,0xc4,0x6e,0xb6,0x8f,0x36,0xb9,0x70,0x66,0x9b,0x1a,0x16,0x52,0xc3,0x02,0x53,
    0xc3,0x3d,0xe0,0x5a,0xc3,0x22,0x30,0xad,0xa1,0xde,0xd4,0xb0,0x28,0xb9,0xc7,0x5c,
    0x82,0x49,0xdc,0x3a,0x53,0xc3,0x12,0x62,0x7b,0x53,0x43,0x03,0xb8,0xd6,0x50,0xee,
    0x23,0xa6,0x76,0x52,0x83,0xfa,0xaa,0x37,0x35,0x64,0x7c,0xb4,0xc9,0xc0,0xa9,0x33,
    0x35,0x34,0x52,0xc3,0x52,0x53,0xc3,0xfd,0xe0,0x5a,0xc3,0x32,0x30,0xad,0x61,0x85,
    0xa9,0x61,0x59,0x92,0x8f,0x4b,0x30,0x89,0xbb,0x9c,0x3e,0x92,0xb8,0x0f,0x10,0x3b,
    0xe3,0xb3,0x67,0x5b,0x72,0x54,0xdb,0x15,0x26,0xc7,0x39,0xd8,0xd5,0xc3,0x5b,0x4e,
    0x3e,0x72,0xfe,0x1f,0xe6,0xec,0x6b,0xcf,0x3d,0x42,0xce,0xab,0x4d,0xcf,0xad,0x01,
    0x6f,0xa1,0xe7,0x9a,0xc0,0xe6,0xf8,0xc8,0x93,0xfb,0xe0,0x71,0x78,0x6b,0xe1,0x89,
    0xa6,0xeb,0xc0,0xd7,0x84,0x3c,0xe4,0x9e,0x5a,0x4f,0xbc,0x26,0xfa,0x65,0x9d,0xd1,
    0xea,0x09,0xf8,0x1b,0x8c,0x56,0x4f,0x82,0xab,0x56,0x1b,0xc1,0x54,0xab,0x66,0xa3,
    0xd5,0xc6,0xe4,0x1c,0x39,0xb7,0x9d,0xfa,0xb7,0x1b,0xdf,0xcf,0xe1,0x7b,0x87,0xf1,
    0xbd,0x13,0x5c,0x7d,0xef,0x02,0x53,0xdf,0xad,0xc6,0xf7,0xae,0xa4,0x76,0x97,0x60,
    0xe2,0xbb,0x85,0x5e,0x12,0x3f,0xbb,0xa9,0x4b,0xce,0xfe,0xdb,0xf8,0xda,0x03,0x3e,
    0x8b,0x3d,0x51,0x5e,0x2b,0x7b,0x22,0x36,0x7b,0x89,0xb9,0x1d,0xfb,0x16,0xe2,0xb6,
    0x9b,0xb8,0x62,0xd3,0x16,0x46,0x3b,0xfc,0x36,0x13,0xf7,0x05,0x13,0xb7,0x31,0xdc,
    0x9c,0x72,0xe7,0xbe,0x08,0xb6,0xde,0xdc,0x2d,0xa9,0xa4,0xbf,0xf2,0x92,0xf5,0x7d,
    0xf0,0x74,0xb4,0x05,0x5f,0x82,0xef,0x87,0xbb,0x2f,0xf1,0x35,0x20,0xd9,0xab,0x97,
    0xf0,0xb3,0x9f,0xfb,0x2d,0x97,0xfb,0x3d,0x4d,0x4d,0x9a,0x53,0x3b,0x35,0x09,0x67,
    0xbe,0x8f,0x9c,0x56,0xf8,0x6d,0xd8,0x36,0x63,0xbb,0xc9,0xe4,0xbf,0xf9,0x1f,0xf2,
    0x7f,0xe6,0x7f,0xf2,0xdf,0x0a,0x4f,0xc7,0x1e,0xf2,0xdf,0x06,0x77,0xab,0xc9,0xff,
    0x59,0xfc,0x6c,0xfb,0x97,0xfc,0x35,0xa7,0x66,0x93,0xff,0x3c,0x1f,0x6b,0x68,0x87,
    0x2f,0xf9,0x3e,0xc5,0x3d,0xfe,0x0a,0xeb,0x7b,0x83,0x27,0x99,0xbf,0x0a,0x36,0xd3,
    0x67,0xfb,0xec,0x20,0x7d,0x76,0xc0,0xf4,0xd9,0x21,0x70,0xed,0xb3,0xd7,0xc0,0xb4,
    0xcf,0x8e,0x98,0xfd,0x96,0xb5,0xc3,0x61,0x1c,0x21,0xb7,0xc3,0xe8,0x25,0x79,0xbf,
    0x41,0x4c,0x07,0xef,0x2a,0xef,0x7f,0x84,0x77,0xf1,0xf5,0x3d,0x1c,0x79,0x9e,0x22,
    0xd6,0x0f,0xf0,0x86,0xc0,0xb9,0x62,0x62,0xc9,0xda,0xa5,0x30,0x2e,0xc3,0xbb,0x9c,
    0xec,0x5b,0x8c,0xf5,0x13,0xbc,0x91,0x2e,0xd6,0x2b,0xd8,0xcf,0xe0,0xf2,0x2d,0x1c,
    0x1c,0xf4,0x12,0xec,0x17,0xf6,0xa8,0x94,0xf5,0x51,0x68,0x7b,0x15,0x9f,0x97,0x0c,
    0xff,0x47,0x7c,0xca,0xb7,0xd3,0xda,0x48,0x4e,0x37,0x83,0x97,0x6b,0x60,0x57,0xf0,
    0x7d,0xb7,0x8f,0xfe,0x2f,0xc3,0xbd,0xc4,0xdd,0x2c,0xda,0x4f,0xf0,0x71,0x5d,0xf5,
    0x50,0x8d,0xde,0x44,0x23,0x4f,0xbd,0x05,0xfe,0xef,0x1a,0x5d,0x27,0xe6,0x75,0xa3,
    0xd1,0x0d,0x78,0xaa,0x51,0xbe,0xcf,0x6a,0x74,0x23,0xc9,0x2d,0xf4,0xa0,0x8f,0x3c,
    0x79,0xaa,0x46,0x39,0x3e,0xf2,0xac,0x46,0xb9,0x3e,0xe2,0x56,0xa3,0x3c,0x9f,0xd5,
    0x48,0xd6,0x55,0xa3,0x02,0x7c,0xde,0x34,0x7c,0x8f,0x4f,0xd5,0x48,0x6d,0x24,0x27,
    0xd5,0x48,0x30,0xd5,0x68,0xa1,0x8f,0xfe,0x25,0x2f,0xef,0x63,0xae,0xaa,0xd1,0x24,
    0x1f,0xd7,0x27,0x10,0x5f,0x35,0x3a,0x8a,0x46,0x29,0xea,0x2d,0xed,0xa7,0x51,0x21,
    0x31,0xe5,0xa9,0x1a,0x15,0xf9,0xc8,0x53,0x8d,0x4a,0x8c,0x46,0xb2,0x36,0x34,0x8c,
    0x62,0x78,0xc5,0x46,0xa3,0xe1,0xf0,0xac,0x46,0x23,0x7c,0xc4,0xad,0x46,0x23,0x8d,
    0x46,0x23,0x8c,0x46,0xa5,0xf8,0x1c,0xea,0xb3,0xfc,0x61,0xf8,0x54,0x8d,0xd4,0xa6,
    0xc4,0x68,0x54,0x6a,0x34,0x5a,0xe4,0xa3,0x7f,0xc9,0x6b,0x18,0xb9,0xaa,0x46,0x53,
    0x7c,0x5c,0x17,0xad,0x52,0xc4,0xd4,0xb3,0x77,0x84,0x5e,0x4c,0xfe,0x66,0xa3,0xd7,
    0x9a,0xe1,0x94,0x9a,0x33,0xff,0x0e,0x67,0xbe,0xc3,0x9c,0xf9,0x77,0xc1,0xf5,0xcc,
    0xbf,0x07,0xa6,0x67,0xfe,0xb8,0x39,0x87,0xb2,0x76,0x2c,0x8c,0x13,0xc4,0x3d,0x61,
    0xbe,0x5b,0x1f,0xe0,0xfb,0xa4,0xf1,0xfd,0x21,0xb8,0xfa,0x3e,0x05,0xa6,0xbe,0xbb,
    0x8c,0x6f,0x59,0xeb,0x0c,0xe3,0x34,0xbe,0x4f,0xbb,0xec,0xf7,0xfa,0x63,0x7c,0x9f,
    0x31,0xdf,0xeb,0x4f,0xc0,0x3f,0xe5,0xf7,0xa4,0xcf,0xc0,0xd6,0x9a,0x78,0x9f,0x83,
    0xaf,0x26,0x5e,0xb7,0x89,0x27,0x6b,0x67,0xc3,0xe8,0x26,0xde,0x59,0xd3,0x8f,0xd3,
    0x7c,0xfc,0x9d,0xbd,0xde,0xfc,0x3e,0xa5,0x76,0xdd,0x46,0xeb,0xc5,0x3e,0xda,0x9c,
    0x86,0x73,0xd6,0xe4,0xf3,0x25,0xf9,0xd4,0x98,0x7c,0xbe,0x02,0xd7,0x7c,0x7a,0x4c,
    0x3e,0xb2,0x76,0x2e,0x8c,0x1e,0xe2,0x9c,0x33,0xf9,0x54,0x93,0xcf,0x62,0xb3,0xf7,
    0x6a,0xd7,0x63,0xf2,0xb9,0xd7,0x47,0x9b,0x6e,0x38,0xe7,0x4c,0x3e,0x5f,0x93,0x4f,
    0x87,0xc9,0xe7,0x1b,0x70,0xcd,0xa7,0xd7,0xe4,0x23,0x6b,0xe7,0xc3,0xe8,0x25,0xce,
    0x79,0x93,0x4f,0x8d,0x8f,0x7f,0xc3,0x48,0x3c,0xfd,0x46,0xa9,0x5d,0xaf,0xc9,0xe7,
    0x3e,0x1f,0x6d,0x7a,0xe0,0x9c,0xc7,0xb6,0x0b,0xdb,0x4e,0x73,0xd6,0x3f,0x42,0xef,
    0xb4,0x89,0x53,0xe5,0xb3,0xb8,0xeb,0xc7,0xed,0x32,0x71,0x1a,0x7c,0x8c,0xd5,0x0b,
    0xa7,0x13,0xdb,0xe3,0xd8,0x1e,0xe3,0x5b,0x2b,0xb6,0xef,0xe3,0x4f,0x86,0xfe,0x5f,
    0x26,0x65,0xbe,0xb5,0xca,0x39,0x6e,0xfc,0x2f,0xf1,0x31,0x46,0x17,0x7c,0xf1,0x37,
    0x27,0x30,0x2e,0xb2,0xf6,0x67,0xe8,0x92,0x19,0x61,0xfc,0x05,0xbd,0xe9,0xf6,0x28,
    0x48,0x12,0x00,0x00
};

// Generated from:
//
// #version 450 core
//
// #extension GL_EXT_samplerless_texture_functions : require
//
// layout(set = 0, binding = 0)uniform utexture2DMS src;
// layout(location = 0)out vec4 dst;
//
// layout(push_constant)uniform PushConstants {
//
//     ivec2 srcOffset;
//     ivec2 dstOffset;
//     int srcMip;
//     int srcLayer;
//
//     bool flipX;
//     bool flipY;
//
//     bool premultiplyAlpha;
//     bool unmultiplyAlpha;
//
//     bool dstHasLuminance;
//     bool dstIsAlpha;
//
//     bool srcIsSRGB;
//     bool dstIsSRGB;
//
//     int dstDefaultChannelsMask;
//     bool rotateXY;
// } params;
//
// float sRGBToLinear(float sRGB)
// {
//
//     if(sRGB <= 0.04045)
//     {
//         return sRGB / 12.92;
//     }
//     else
//     {
//         return pow((sRGB + 0.055f)/ 1.055f, 2.4f);
//     }
// }
//
// void main()
// {
//     ivec2 dstSubImageCoords = ivec2(gl_FragCoord . xy)- params . dstOffset;
//
//     ivec2 srcSubImageCoords = dstSubImageCoords;
//
//     if(params . flipX)
//     {
//         srcSubImageCoords . x = - srcSubImageCoords . x;
//     }
//     if(params . flipY)
//     {
//         srcSubImageCoords . y = - srcSubImageCoords . y;
//     }
//     if(params . rotateXY)
//     {
//         srcSubImageCoords . xy = srcSubImageCoords . yx;
//     }
//
//           uvec4 srcValue = texelFetch(src, ivec2(params . srcOffset + srcSubImageCoords), params . srcMip);
//
//     if(params . premultiplyAlpha)
//     {
//         srcValue . rgb *= srcValue . a;
//     }
//     else if(params . unmultiplyAlpha && srcValue . a > 0)
//     {
//         srcValue . rgb /= srcValue . a;
//     }
//
//            vec4 dstValue = vec4(srcValue);
//
//     dstValue /= 255.0;
//
//     if(params . dstIsSRGB)
//     {
//
//         dstValue . r = sRGBToLinear(dstValue . r);
//         dstValue . g = sRGBToLinear(dstValue . g);
//         dstValue . b = sRGBToLinear(dstValue . b);
//     }
//
//     if(params . dstHasLuminance)
//     {
//         dstValue . rg = dstValue . ra;
//     }
//     else if(params . dstIsAlpha)
//     {
//         dstValue . r = dstValue . a;
//     }
//     else
//     {
//         int defaultChannelsMask = params . dstDefaultChannelsMask;
//         if((defaultChannelsMask & 2)!= 0)
//         {
//             dstValue . g = 0;
//         }
//         if((defaultChannelsMask & 4)!= 0)
//         {
//             dstValue . b = 0;
//         }
//         if((defaultChannelsMask & 8)!= 0)
//         {
//             dstValue . a = 1;
//         }
//     }
//
//     dst = dstValue;
// }
