// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/ClearTexture.comp.00000005.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kClearTexture_comp_00000005[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x5d,0x53,0xc9,0x4e,0x02,0x41,
    0x10,0x6d,0x66,0x86,0x71,0x41,0x04,0x64,0x40,0x14,0x90,0x4d,0x09,0xcb,0x64,0x44,
    0x51,0x40,0x36,0xe3,0x49,0x0f,0xdc,0xfc,0x02,0x13,0x2f,0x1e,0xf4,0xa2,0x1f,0xe0,
    0xc1,0xef,0xf1,0xf7,0xdc,0x62,0x62,0x55,0xf7,0x6b,0x52,0x42,0xd2,0xa9,0xae,0x57,
    0xaf,0x5e,0x2d,0x3d,0xb8,0x4e,0x63,0x4d,0xa9,0x98,0xda,0x54,0xeb,0xea,0x52,0x99,
    0x5f,0x46,0x39,0x84,0x28,0x95,0x50,0xbe,0xb6,0xd7,0x8b,0xdb,0x45,0xf4,0xfc,0x72,
    0x1f,0x9d,0x9d,0xf7,0x38,0xbe,0xad,0x5c,0xcd,0xe3,0x58,0x8a,0x38,0x71,0xb2,0x1e,
    0x9d,0xc7,0xbb,0x87,0x27,0xa5,0xf3,0x94,0x4a,0x13,0xee,0x69,0x2d,0xbe,0x1b,0xae,
    0xd6,0x22,0x34,0x01,0x4e,0x09,0xfe,0x0e,0x59,0x1f,0x1a,0x37,0xa4,0x96,0x45,0x1f,
    0x0d,0x58,0x8b,0xc5,0x80,0xa5,0x05,0xe6,0x00,0x0b,0x04,0xe6,0x02,0x2b,0x68,0x7d,
    0x77,0xc9,0xe3,0x5a,0xad,0x95,0x5a,0xed,0x95,0x5a,0xcc,0x6f,0x43,0x83,0xf9,0x5d,
    0xb2,0xf5,0x65,0xcc,0xf8,0x35,0xe1,0x4f,0x31,0xcb,0x1e,0x9d,0x2c,0x55,0x71,0x74,
    0xdc,0xd5,0xf9,0x7c,0xcf,0x11,0x87,0xeb,0x55,0x91,0xb3,0x4b,0xfe,0x06,0x7a,0x70,
    0x35,0xee,0xd1,0xee,0xcd,0x6c,0x8c,0x4f,0xe0,0x27,0x80,0x75,0x91,0xbf,0x85,0x7c,
    0xe6,0x27,0x11,0xf3,0x45,0x3c,0x83,0x99,0x4a,0x62,0x9f,0x8c,0x1d,0xd0,0x8d,0xe7,
    0xb7,0x98,0x3d,0xac,0x13,0xa0,0x66,0x16,0x75,0x03,0xdd,0xaf,0xc1,0xb8,0xef,0x3c,
    0xfa,0xb6,0x7d,0xe4,0x75,0xff,0xc6,0xe7,0xfc,0x02,0xb8,0xbe,0x88,0x17,0x31,0xb7,
    0xf5,0x2b,0x98,0x33,0x20,0x94,0x77,0x5c,0x26,0xcf,0xbe,0xc1,0x01,0x76,0xdd,0x82,
    0x5e,0x07,0xb9,0x6d,0xf4,0xd3,0xd1,0x3a,0xff,0xf5,0x42,0xec,0xc1,0xce,0x1d,0x21,
    0xce,0xf9,0xa7,0xb8,0xcb,0xbd,0x0c,0x56,0xf6,0x38,0xc1,0xf7,0x13,0x92,0xc7,0xbd,
    0x4f,0x81,0x0d,0x96,0x27,0xae,0x35,0x3c,0xd4,0xe1,0xde,0x3f,0x09,0xe1,0x6f,0xfc,
    0x83,0xbc,0x19,0xf0,0x1f,0xba,0xf3,0x9b,0xcc,0x11,0x67,0x7b,0x45,0xac,0xa4,0xfe,
    0x7f,0x98,0xf7,0xe3,0xf8,0x0c,0x75,0x53,0xc0,0x99,0x53,0xc0,0xf7,0x92,0xc3,0x3e,
    0x2d,0x67,0x1f,0xb8,0xe5,0x94,0xc0,0x29,0x0a,0x4e,0x19,0xf8,0x1b,0x71,0xcc,0x0e,
    0x4d,0x5e,0x59,0xe4,0x55,0x91,0x57,0x11,0x79,0x35,0xe0,0x36,0xaf,0x8e,0x5c,0xc6,
    0xdf,0x09,0xe3,0xb7,0x39,0x44,0x9f,0x75,0xcc,0xda,0xc4,0xac,0xdf,0xa4,0xc1,0xb1,
    0x23,0x3a,0x4d,0xcc,0xcb,0xf7,0x2f,0xb2,0x33,0xf8,0x4d,0xa1,0x7d,0x0c,0x9d,0x48,
    0xf7,0xe4,0xeb,0x9e,0x7a,0xe8,0x29,0xc4,0xb1,0x7d,0x9d,0x20,0xc6,0x3c,0x7e,0xbf,
    0x3e,0xde,0x3c,0x84,0xce,0x9c,0xfa,0xe8,0x83,0xf7,0x0a,0xfd,0x21,0x62,0x03,0xa1,
    0x3f,0x12,0xfa,0x72,0xa7,0x17,0x88,0x59,0xfd,0xb1,0xd0,0x1f,0x42,0x7f,0x0c,0x9e,
    0x9c,0x87,0xed,0x2f,0x7d,0x39,0x23,0x3a,0x7f,0xca,0xaa,0x22,0x90,0x24,0x05,0x00,
    0x00
};

// Generated from:
//
// #version 450 core
// layout(local_size_x = 16, local_size_y = 1, local_size_z = 1)in;
//
// layout(set = 0, binding = 0)buffer dest
// {
//  uint dataBuffer[];
// };
//
// layout(push_constant)uniform PushConstants
// {
//  uint rawData[4];
//  uint width;
//  uint height;
//  uint depth;
// } params;
//
// void main()
// {
//  uint threadId = gl_GlobalInvocationID . x;
//
//  if(threadId >= params . width * params . height * params . depth)
//  {
//   return;
//  }
//     dataBuffer[threadId * 2]= params . rawData[0];
//     dataBuffer[threadId * 2 + 1]= params . rawData[1];
//
// }
