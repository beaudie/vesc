// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/ClearTexture.comp.00000005.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kClearTexture_comp_00000005[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x5d,0x52,0xc9,0x4e,0x02,0x41,
    0x10,0x6d,0x66,0x70,0x5c,0x10,0x01,0x59,0x44,0x02,0xa8,0x8c,0x10,0x94,0x25,0x83,
    0xb2,0x19,0xa3,0x89,0x27,0x3d,0x70,0xf3,0x0b,0x4c,0xbc,0x78,0xd0,0x8b,0x7e,0x80,
    0x07,0xbf,0xc7,0xdf,0x73,0x8b,0x89,0xaf,0xaa,0x5f,0x9b,0x0e,0x93,0x74,0xaa,0xeb,
    0xd5,0xab,0x57,0x4b,0x4f,0x18,0xc4,0xab,0xc6,0xa4,0xcc,0x86,0x59,0x33,0x67,0xc6,
    0x7e,0x05,0x13,0x00,0x31,0x26,0x63,0x22,0xb5,0xd7,0x8b,0xdb,0xc5,0xf0,0xf9,0xe5,
    0x7e,0x38,0x9e,0x24,0x12,0xdf,0x32,0xa1,0xf2,0x24,0x96,0x03,0x67,0x05,0x36,0x8d,
    0xf3,0x78,0xf7,0xf0,0x64,0x34,0xcf,0x98,0x3c,0xf0,0xb4,0x6a,0xc9,0xdd,0x72,0x55,
    0x0b,0x68,0x86,0x9c,0x3a,0xfd,0x6d,0xd8,0x88,0x1a,0x37,0x50,0x2b,0xb2,0x8f,0x98,
    0xd6,0x61,0x29,0x62,0x79,0xcd,0x0b,0x15,0x0b,0xa8,0xd1,0x5a,0xd2,0x88,0x97,0x34,
    0x84,0x2f,0xf7,0x90,0xfc,0x36,0x6c,0xeb,0x3f,0x66,0xfd,0x03,0xcf,0x9f,0xb2,0xc7,
    0x5d,0x9c,0x22,0xaa,0x04,0x1a,0x0f,0x35,0x5f,0xee,0x65,0x70,0xa4,0xde,0x3e,0x73,
    0x76,0xe0,0xaf,0xb3,0x87,0x50,0xf1,0x34,0x76,0x6a,0x7b,0x16,0xfc,0x9c,0x7e,0x86,
    0x58,0x8f,0xf9,0x9b,0xcc,0x17,0x7e,0x96,0xb1,0xc8,0x8b,0x17,0x38,0x53,0xdd,0xdb,
    0x93,0x60,0x4d,0xf8,0x32,0xbf,0xc3,0x24,0xbf,0xc4,0x5a,0x45,0xd6,0x2b,0x69,0x9f,
    0x16,0x93,0x7e,0x2b,0xec,0xd7,0xd5,0xaf,0x68,0xdf,0xd6,0x97,0xfc,0x2a,0xb9,0xa2,
    0x57,0xc2,0x94,0x0d,0xd8,0x06,0xa6,0x71,0xbb,0x6d,0x72,0x87,0x2d,0xf2,0x0f,0xb9,
    0x8b,0x98,0xf5,0xc4,0x6f,0x13,0x73,0xfa,0x1d,0xce,0xe7,0xe6,0xe9,0x32,0x2e,0xf9,
    0x7d,0xde,0xfd,0x79,0x93,0xa5,0xfd,0x4c,0xf8,0xde,0x7d,0x78,0xd2,0xdb,0x94,0x58,
    0xc2,0x33,0xc5,0x5b,0x07,0xdc,0x91,0xe1,0xee,0x3f,0x81,0xc8,0x3f,0xf9,0x01,0x6f,
    0x46,0xfc,0x07,0x77,0xd9,0xf5,0x9c,0x71,0xb1,0x57,0x60,0x65,0xf5,0x7f,0xb6,0xef,
    0x22,0xf1,0x0b,0xd6,0xcd,0x11,0x17,0x4e,0x95,0xff,0x41,0x99,0xfb,0x72,0x9c,0x1a,
    0xf1,0x77,0x70,0x1a,0xba,0x1f,0x9b,0x57,0x63,0x6d,0xf7,0x6f,0x7c,0x83,0x2f,0xb1,
    0x3d,0xee,0x5f,0xea,0xcb,0xfd,0x0b,0x76,0x46,0x5f,0xf0,0x37,0xe8,0x88,0xee,0x11,
    0x75,0xba,0x5a,0x3f,0xd2,0xfa,0xc7,0xac,0xdf,0xe1,0x71,0x3d,0xf4,0x18,0x13,0x9e,
    0xec,0x73,0xc0,0x37,0xe8,0x50,0xe7,0x12,0x7d,0x0c,0xc8,0x7b,0xa5,0xfe,0x88,0xb1,
    0xc4,0xd3,0x3f,0xf1,0xf4,0xfd,0x19,0x4f,0x19,0x73,0xfa,0x63,0x4f,0x7f,0x44,0xfd,
    0x31,0x79,0xfe,0x3c,0x62,0x7f,0xf1,0x92,0x73,0x9c,0x3f,0x4f,0x69,0x7f,0xcd,0x64,
    0x04,0x00,0x00
};

// Generated from:
//
// #version 450 core
// layout(local_size_x = 16, local_size_y = 1, local_size_z = 1)in;
//
// layout(set = 0, binding = 0)buffer dest
// {
//  uint dataBuffer[];
// };
//
// layout(push_constant)uniform PushConstants
// {
//  uint data[4];
//  uint texelCount;
// } params;
//
// void main()
// {
//  uint threadId = gl_GlobalInvocationID . x;
//  uint texelCount = params . texelCount;
//
//  if(threadId >= texelCount)
//  {
//   return;
//  }
//     dataBuffer[threadId * 2]= params . data[0];
//     dataBuffer[threadId * 2 + 1]= params . data[1];
//
// }
