// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/ClearTexture.comp.00000005.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kClearTexture_comp_00000005[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x5d,0x93,0xcb,0x4e,0x1b,0x41,
    0x10,0x45,0x9b,0x99,0xf1,0x40,0x62,0xde,0xd8,0x0e,0x0f,0xe3,0xc4,0xd8,0x01,0x0b,
    0x1b,0xcb,0x21,0x36,0x8a,0x31,0x18,0x9c,0x2c,0x92,0x05,0x3b,0xbe,0x00,0x89,0x0d,
    0x8b,0x64,0x03,0x1f,0x90,0x05,0xdf,0xc3,0xef,0xf1,0x12,0x12,0x55,0x3d,0xa7,0xad,
    0xd2,0x58,0x1a,0x75,0xd7,0xad,0x5b,0xb7,0x6f,0x57,0xb5,0xe3,0xa8,0x31,0xeb,0xdc,
    0x8c,0xfb,0xe8,0xe6,0xdc,0x2f,0x97,0xfd,0x56,0x5c,0x24,0x88,0x73,0x45,0x97,0xfa,
    0xf5,0xf7,0xc5,0xe5,0x45,0xf7,0xf6,0xee,0xba,0xdb,0x1f,0xf4,0x34,0xbf,0xe8,0x62,
    0xcf,0xd3,0xdc,0x92,0x70,0x0a,0xb2,0x26,0xf2,0xfd,0xbd,0xba,0xf9,0xe7,0x7c,0x9d,
    0x73,0xcb,0x82,0x27,0x5e,0x4b,0xf7,0x19,0xd7,0x6b,0x09,0x5a,0x84,0x53,0x25,0x2e,
    0xc9,0x9a,0xa2,0xf1,0x47,0xd4,0xca,0xf8,0x68,0xb0,0x06,0x6c,0x06,0x6c,0xd9,0x60,
    0x11,0x58,0xc9,0x60,0x31,0x58,0xd3,0x60,0x09,0x58,0xcb,0x60,0x05,0xb0,0x8e,0xc1,
    0x52,0xb0,0x9e,0xc1,0x66,0xc1,0xfa,0xde,0x6f,0x3c,0x3d,0x57,0xbd,0xef,0xe7,0xbc,
    0xb7,0x73,0xde,0x95,0xdf,0xc6,0x93,0xf2,0x0f,0x64,0xdd,0x99,0xe6,0xb2,0xb8,0x6e,
    0xe2,0x73,0x7a,0xb3,0x21,0xdf,0x9a,0x9c,0x12,0xf9,0x7c,0xec,0xeb,0x75,0x5f,0x16,
    0x8e,0x9e,0xf7,0x85,0x9a,0x4f,0x12,0x7f,0xc0,0x43,0xec,0xf1,0x44,0x66,0x99,0xf5,
    0x4a,0xf1,0x11,0x71,0x11,0xac,0x4d,0xfd,0x3c,0xf5,0xca,0x5f,0x20,0xa7,0x78,0x45,
    0x54,0x56,0xd0,0x57,0xed,0x55,0x66,0x98,0x98,0xda,0x35,0xe2,0xaa,0x99,0x9d,0x62,
    0x35,0x39,0x49,0x7b,0xb3,0x0a,0x16,0x72,0xf9,0x4f,0xcf,0xac,0xe0,0xaf,0x8c,0xc7,
    0x8a,0x3f,0x2f,0x60,0x89,0x5b,0xc7,0x43,0xf0,0xbc,0x4e,0x4f,0x0a,0xd4,0x6f,0xc2,
    0x4d,0x4d,0x7e,0x3b,0x17,0xd7,0x99,0x5d,0x49,0x3a,0xf7,0xd5,0xe7,0xe3,0xe9,0xbc,
    0x6a,0xcc,0x65,0x1f,0xbd,0x0e,0xfd,0x6d,0xe3,0x47,0xe3,0x83,0x29,0x96,0xe9,0x75,
    0xe9,0x59,0xe8,0x43,0x2f,0x97,0x3f,0x24,0x56,0xbd,0x01,0xfb,0xd4,0xf0,0x87,0xb9,
    0xfb,0x8c,0x72,0x33,0x39,0xe3,0x6d,0x77,0x24,0xd2,0xbb,0x9d,0x83,0x0d,0xf9,0x8e,
    0xe4,0xf6,0x11,0xbd,0x77,0xcc,0xfb,0x49,0x10,0xed,0xc9,0xa3,0x44,0x13,0xf0,0x57,
    0xd9,0xeb,0x7c,0x7f,0x92,0xd7,0x75,0x22,0xac,0x05,0xff,0xdf,0xcd,0xde,0x82,0xe6,
    0x4f,0x39,0x77,0x09,0x5c,0x39,0xda,0xd7,0x2d,0x66,0xb1,0x61,0x38,0x55,0xf0,0xc0,
    0xa9,0xc1,0xd9,0x36,0x9c,0xcf,0xe0,0xf7,0xc2,0x09,0x6f,0xb4,0x0a,0x1e,0xea,0x76,
    0xa8,0xab,0x9b,0xba,0x06,0x78,0xa8,0x6b,0x52,0xab,0xf8,0x83,0x60,0x3a,0xbb,0x5d,
    0x7c,0x36,0xb9,0x6b,0x8b,0xbb,0xbe,0x88,0x86,0xe6,0xf6,0xf8,0x6f,0xeb,0x7d,0x75,
    0xff,0x2c,0xeb,0x84,0xb8,0x65,0xb4,0xbf,0xa1,0xd3,0xf3,0x9e,0x52,0xef,0xe9,0x3b,
    0x9e,0x0e,0x99,0x71,0xf0,0xd5,0x27,0xa7,0xbc,0x81,0xef,0x7f,0xf6,0x26,0xba,0xe8,
    0x8c,0xc5,0xc7,0x11,0xbc,0xff,0xe8,0x1f,0x93,0x1b,0x1a,0xfd,0x13,0xa3,0x3f,0x32,
    0xfa,0xa7,0xe4,0x82,0xfe,0xd8,0xe8,0x1f,0xa3,0x3f,0x86,0x67,0xef,0xa3,0xeb,0x9b,
    0xbc,0x9c,0x1f,0xf2,0xbd,0x03,0xc8,0x06,0xfe,0xf4,0xc0,0x05,0x00,0x00
};

// Generated from:
//
// #version 450 core
// layout(local_size_x = 16, local_size_y = 1, local_size_z = 1)in;
//
// layout(set = 0, binding = 0)buffer dest
// {
//  uint dataBuffer[];
// };
//
// layout(push_constant)uniform PushConstants
// {
//     vec4 clearValue;
//  uint depthValue;
//  uint rawData[4];
//  uint dataSize;
//  uint stencilValue;
//  uint width;
//  uint height;
//  uint depth;
// } params;
//
// void main()
// {
//  uint threadId = gl_GlobalInvocationID . x;
//
//  if(threadId >= params . width * params . height * params . depth)
//  {
//   return;
//  }
//     dataBuffer[threadId * 2]= params . rawData[0];
//     dataBuffer[threadId * 2 + 1]= params . rawData[1];
//
// }
