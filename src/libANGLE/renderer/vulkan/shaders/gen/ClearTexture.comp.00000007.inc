// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/ClearTexture.comp.00000007.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kClearTexture_comp_00000007[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x5d,0x52,0xc9,0x4e,0x02,0x41,
    0x10,0x6d,0x67,0x70,0x5c,0x10,0x05,0x59,0x44,0x03,0xa8,0x8c,0x10,0x15,0x02,0x28,
    0x0a,0x28,0x11,0x50,0xdc,0x0e,0xdc,0xfc,0x02,0x13,0x2f,0x1e,0xf4,0xa2,0x1f,0xe0,
    0xc1,0xef,0xf1,0xf7,0xdc,0x62,0x62,0x55,0xf5,0x6b,0xad,0xcc,0x24,0x9d,0xea,0x7a,
    0xf5,0xea,0xd5,0x32,0xed,0x7b,0xe1,0x8c,0x31,0x53,0x66,0xde,0xcc,0x9a,0x6b,0x63,
    0xbf,0x94,0xf1,0x08,0x31,0x26,0x6e,0x02,0xb1,0x57,0x93,0x9b,0x49,0xe3,0xe9,0xf9,
    0xae,0x71,0x70,0xd8,0xe2,0xf8,0xa2,0xf1,0x85,0xc7,0xb1,0x25,0xe2,0x4c,0x93,0x8d,
    0xd1,0x79,0xb8,0xbd,0x7f,0x34,0x92,0x67,0x4c,0x92,0xf0,0x98,0x68,0xf1,0xdd,0x72,
    0x45,0x8b,0xd0,0x38,0x38,0x05,0xf8,0xcb,0x64,0x03,0x68,0x5c,0x93,0x5a,0x1a,0x7d,
    0x84,0xb0,0x0e,0x9b,0x02,0x96,0x94,0x3c,0x5f,0x30,0x0f,0x1a,0xe5,0x88,0x46,0x18,
    0xd1,0x60,0x3e,0xdf,0x7d,0xf0,0x2b,0x64,0xcb,0x7f,0x31,0xeb,0x6f,0x2a,0xff,0x02,
    0x3d,0xae,0xd2,0x49,0x53,0x15,0x4f,0xe2,0xbe,0xe4,0xf3,0x3d,0x4b,0x1c,0xae,0xb7,
    0x81,0x9c,0x15,0xf2,0xe7,0xd0,0x83,0x2f,0x78,0x8c,0x76,0x6a,0x7b,0x66,0xbc,0x0f,
    0x3f,0x0e,0xac,0x86,0xfc,0x05,0xe4,0x33,0x3f,0x81,0x58,0xa0,0xe2,0x29,0xcc,0x54,
    0x50,0x7b,0x62,0xac,0x44,0x3e,0xcf,0xef,0x30,0xce,0xcf,0xa0,0x56,0x1a,0xf5,0x32,
    0xd2,0xa7,0xc5,0xb8,0xdf,0x1c,0xfa,0x75,0xf5,0x73,0xd2,0xb7,0xf5,0x39,0x3f,0x0f,
    0x2e,0xeb,0x65,0x68,0xca,0x22,0xd9,0x22,0x4d,0xe3,0x76,0x5b,0xc2,0x0e,0xcb,0xe0,
    0x6f,0x61,0x17,0x21,0xea,0xb1,0x5f,0x01,0xe6,0xf4,0xab,0x6a,0xbe,0x1a,0x62,0x7a,
    0xbe,0x66,0x64,0x1f,0x9d,0x48,0x7e,0x4f,0xf9,0x1c,0x1f,0x60,0xbf,0x2e,0x3e,0x52,
    0x3e,0xc7,0xcf,0xf1,0x3e,0xea,0xe4,0xf1,0x2c,0x17,0xc0,0x9a,0x38,0x1d,0x7a,0x1b,
    0x1e,0x76,0x6a,0x90,0xfb,0x41,0x08,0xbf,0xe1,0x77,0xf2,0x2e,0x81,0x7f,0xd3,0x7d,
    0x41,0xde,0x82,0x8d,0xb3,0x3d,0x25,0x56,0x42,0xde,0xbf,0xfd,0x8f,0x1c,0x3f,0x41,
    0xdd,0x25,0xe0,0xcc,0xc9,0xe3,0xdd,0x64,0xb1,0x5f,0xc7,0x59,0x03,0xfe,0x46,0x9c,
    0xa2,0xec,0xd3,0xe6,0xad,0xa1,0xb6,0x7b,0x4b,0x5f,0xc4,0xe7,0xd8,0x3a,0xfe,0x17,
    0xd7,0xe7,0xfb,0x27,0xd9,0x4b,0xf8,0x8c,0xbf,0x92,0x0e,0xeb,0x6e,0x43,0x27,0x25,
    0xf5,0x03,0xa9,0xbf,0x83,0xfa,0x55,0x1c,0xd7,0xc3,0x2e,0x62,0xcc,0xab,0xc9,0x9e,
    0xec,0x3f,0xab,0x42,0x67,0x40,0x7d,0xd4,0xc1,0x7b,0x81,0x7e,0x0b,0xb1,0xa6,0xd2,
    0xdf,0x53,0xfa,0x7a,0xc6,0x7d,0xc4,0x9c,0x7e,0x5b,0xe9,0xb7,0xa0,0xdf,0x06,0xcf,
    0xe9,0x77,0xa1,0xdf,0x51,0xfa,0x47,0x4a,0xbf,0xa7,0xf4,0x8f,0x11,0x73,0xfa,0x7d,
    0xa5,0xdf,0x85,0x7e,0x1f,0x3c,0xa7,0x3f,0xfc,0x9b,0xed,0x5f,0xff,0x54,0xe9,0x8f,
    0x94,0xfe,0x19,0x62,0x4e,0x7f,0xac,0xf4,0x87,0xd0,0x1f,0x83,0xa7,0xff,0x07,0xdb,
    0x1f,0x7a,0xc9,0x3d,0x3a,0xbf,0x18,0x97,0xc9,0x65,0x54,0x05,0x00,0x00
};

// Generated from:
//
// #version 450 core
// layout(local_size_x = 16, local_size_y = 1, local_size_z = 1)in;
//
// layout(set = 0, binding = 0)buffer dest
// {
//  uint dataBuffer[];
// };
//
// layout(push_constant)uniform PushConstants
// {
//  uint data[4];
//  uint texelCount;
// } params;
//
// void main()
// {
//  uint threadId = gl_GlobalInvocationID . x;
//  uint texelCount = params . texelCount;
//
//  if(threadId >= texelCount)
//  {
//   return;
//  }
//     dataBuffer[threadId * 4]= params . data[0];
//     dataBuffer[threadId * 4 + 1]= params . data[1];
//     dataBuffer[threadId * 4 + 2]= params . data[2];
//     dataBuffer[threadId * 4 + 3]= params . data[3];
//
// }
