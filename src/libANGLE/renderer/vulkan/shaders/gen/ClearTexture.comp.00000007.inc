// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/ClearTexture.comp.00000007.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kClearTexture_comp_00000007[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x5d,0x93,0xc9,0x4e,0x1b,0x41,
    0x10,0x86,0x9b,0x19,0x33,0x90,0x98,0xcd,0xd8,0x80,0x13,0x6c,0x16,0x13,0x2c,0x0c,
    0x96,0x43,0x10,0x36,0x20,0x30,0x8b,0x58,0xcc,0xe2,0x1b,0x4f,0x80,0x94,0x4b,0x0e,
    0xe1,0x02,0x0f,0xc0,0x81,0xe7,0xc9,0xeb,0x65,0x41,0x48,0xa9,0xea,0xfe,0x1a,0x15,
    0x1e,0xa9,0xd5,0x5d,0x7f,0xfd,0xf5,0xd7,0xd2,0x3d,0x69,0xb2,0x32,0xe2,0xdc,0x90,
    0xfb,0xe8,0x46,0x5d,0xdf,0x85,0xaf,0xe0,0x12,0x41,0x9c,0xcb,0xbb,0xcc,0xef,0xbd,
    0xfe,0x6d,0xbf,0xf5,0xf0,0xf8,0xbd,0xb5,0xdd,0xde,0x54,0xff,0x84,0x4b,0x3d,0x4f,
    0x7d,0x93,0xc2,0x19,0x96,0x3d,0x27,0xeb,0xe7,0xdd,0x8f,0x7b,0xe7,0xe3,0x9c,0x9b,
    0x12,0x3c,0xe7,0xb5,0xf4,0x1c,0xb8,0x5e,0x4b,0xd0,0x3c,0x9c,0x0a,0xf6,0xb4,0xec,
    0x19,0x1a,0x97,0xa2,0x56,0xa4,0x8e,0x15,0xf6,0x88,0x0d,0x81,0x4d,0x19,0x2c,0x01,
    0x2b,0x19,0x2c,0x05,0x2b,0x7b,0xfd,0xf4,0x8d,0xa7,0xb9,0xd6,0x06,0x72,0x35,0x06,
    0x72,0x29,0xbf,0x81,0x86,0xf2,0x37,0x64,0xaf,0xbd,0xf9,0x82,0xbd,0x6c,0xec,0x2b,
    0x7a,0xf9,0x24,0xab,0x28,0x59,0x12,0xef,0x4f,0x7d,0xbc,0x9e,0x67,0x84,0xa3,0xf9,
    0x96,0x88,0x99,0x13,0xfb,0x03,0x35,0xa4,0x1e,0xcf,0xc9,0xec,0x43,0x6f,0x8a,0xef,
    0x63,0xe7,0xc1,0x36,0x88,0x1f,0x23,0x5e,0xf9,0xe3,0xf8,0x32,0xe3,0x2f,0xd0,0x53,
    0xc5,0xcc,0x53,0xb1,0x05,0x39,0x69,0xff,0x11,0x8b,0x4b,0x75,0x4a,0xe4,0x2c,0x92,
    0xb7,0xe4,0xeb,0x0d,0x98,0xd6,0x3d,0x4b,0xdd,0xb1,0x8e,0x59,0x5f,0x7f,0xb0,0x35,
    0xbe,0x0c,0x37,0x33,0xfe,0x79,0xfa,0x8e,0xf6,0x22,0x7d,0x96,0x04,0xd5,0x19,0x57,
    0xc5,0x8a,0x77,0xb0,0xc0,0xac,0xd7,0xd0,0x5b,0x27,0xb6,0x41,0x3d,0xeb,0x5e,0xe7,
    0xbd,0x5e,0xd3,0xcc,0xe1,0x1b,0x3e,0x3b,0x87,0xf6,0xc0,0xdc,0x0e,0x4c,0xbc,0xda,
    0xa7,0xd4,0x13,0xed,0x4b,0xde,0x53,0x53,0x2c,0xed,0xe5,0x0a,0xac,0xcd,0xea,0xc8,
    0x1b,0x49,0x98,0xad,0x23,0xf6,0x8f,0x20,0xfa,0xe6,0x7f,0x8b,0x75,0x0d,0xfe,0x22,
    0x67,0xbd,0xa3,0x1b,0xfc,0xba,0x9f,0x08,0x6b,0xdc,0xff,0x2f,0xe1,0x3e,0xd5,0xdf,
    0x25,0xef,0x24,0xb8,0x72,0xca,0xbc,0x9f,0x19,0xe6,0x1b,0x39,0x9f,0xc1,0x23,0xa7,
    0x02,0x67,0xde,0x70,0xaa,0xe0,0xcf,0xc2,0x09,0x33,0x0d,0x71,0x55,0x13,0xb7,0x44,
    0xdc,0xa2,0x89,0x5b,0x06,0x8f,0x71,0x35,0x62,0x15,0xff,0x25,0x98,0xde,0xd5,0x17,
    0xea,0xac,0xd1,0x6b,0x9d,0x5e,0xff,0x89,0x86,0xfa,0x56,0x65,0xd5,0xe9,0x57,0xcf,
    0x7f,0x65,0xbf,0xc6,0xae,0x1b,0xed,0x16,0x3a,0x05,0x5f,0x53,0xe6,0x6b,0xfa,0x4a,
    0x4d,0x4d,0x56,0xac,0x6b,0x13,0x9f,0xf2,0xf4,0x7e,0xb7,0x78,0x03,0x4d,0x74,0x0e,
    0xa5,0x8e,0x2d,0x78,0x4f,0xe8,0x77,0xf0,0xb5,0x8d,0xfe,0x8e,0xd1,0xb7,0x33,0xdd,
    0xc5,0x17,0xf5,0xf7,0x8c,0x7e,0x07,0xfd,0x3d,0x78,0x51,0xbf,0x8b,0xfe,0x81,0xd1,
    0x3f,0x34,0xfa,0xf6,0x3e,0x8e,0xf0,0x45,0xfd,0x63,0xa3,0xdf,0x45,0xff,0x18,0x5e,
    0xd4,0x3f,0x43,0xff,0xd4,0xe8,0x9f,0x1b,0x7d,0x7b,0x6f,0x17,0xf8,0xa2,0x7e,0xcf,
    0xe8,0x9f,0xa1,0xdf,0x83,0x67,0xef,0x43,0xf7,0x57,0xf9,0x33,0x76,0x65,0xfd,0x07,
    0xce,0xed,0x1b,0x00,0xf4,0x05,0x00,0x00
};

// Generated from:
//
// #version 450 core
// layout(local_size_x = 16, local_size_y = 1, local_size_z = 1)in;
//
// layout(set = 0, binding = 0)buffer dest
// {
//  uint dataBuffer[];
// };
//
// layout(push_constant)uniform PushConstants
// {
//  uint rawData[4];
//  uint width;
//  uint height;
//  uint depth;
// } params;
//
// void main()
// {
//  uint threadId = gl_GlobalInvocationID . x;
//
//  if(threadId >= params . width * params . height * params . depth)
//  {
//   return;
//  }
//     dataBuffer[threadId * 4]= params . rawData[0];
//     dataBuffer[threadId * 4 + 1]= params . rawData[1];
//     dataBuffer[threadId * 4 + 2]= params . rawData[2];
//     dataBuffer[threadId * 4 + 3]= params . rawData[3];
//
// }
