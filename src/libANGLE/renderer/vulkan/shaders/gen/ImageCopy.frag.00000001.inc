// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/ImageCopy.frag.00000001.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kImageCopy_frag_00000001[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x85,0x98,0x8b,0x97,0x8d,0x65,
    0x14,0xc6,0xbf,0x99,0x33,0x73,0x0e,0xe3,0x36,0x32,0x21,0xd1,0x9a,0x31,0x92,0x1a,
    0x0d,0xd5,0xb8,0x3b,0x84,0x72,0x29,0xb7,0x8c,0x89,0xa4,0x98,0x92,0x72,0x8d,0xdc,
    0x2a,0x72,0x99,0xdc,0x32,0x12,0xa5,0x28,0x11,0x91,0x92,0x0c,0x45,0x85,0x5c,0xba,
    0xa1,0x42,0xe5,0x56,0x7f,0x49,0xab,0xcb,0x5a,0x5d,0xde,0xfd,0xcd,0x6f,0xcf,0x7a,
    0x3a,0xcb,0xaa,0x59,0xeb,0x5d,0xdf,0xd9,0xcf,0xde,0xfb,0x79,0x9f,0xbd,0xdf,0xcb,
    0x77,0xce,0x24,0xb2,0x8b,0x53,0x51,0x22,0x2b,0xca,0x8b,0xea,0x45,0x3f,0x47,0xb5,
    0x7f,0x4d,0xa3,0xec,0x28,0x2b,0x3c,0x1b,0x44,0xc9,0xf8,0x39,0x68,0x68,0xf9,0xd0,
    0xd2,0x39,0x73,0x27,0x95,0x96,0x75,0xe9,0x6c,0xfe,0xc6,0x51,0x22,0x8e,0x33,0x5f,
    0x93,0x28,0x15,0xe5,0x84,0xa7,0x8d,0x19,0x95,0x53,0x66,0x1a,0xde,0x3e,0x8c,0x2b,
    0x61,0xe4,0x87,0x38,0xc3,0x53,0xc6,0x11,0x3e,0xb5,0x8f,0x39,0x2d,0x27,0x8a,0x06,
    0x47,0xb9,0x51,0x47,0xe6,0x2b,0xe6,0xe9,0x58,0x16,0x58,0x3d,0xc1,0xb2,0xc1,0xf2,
    0x05,0x4b,0x80,0x15,0x08,0x96,0x03,0xd6,0x52,0xb0,0x5c,0xb0,0xd6,0x82,0x25,0xc1,
    0x0a,0x05,0x4b,0x81,0xb5,0x13,0xac,0x1e,0x58,0x07,0xc1,0xea,0x83,0x75,0x14,0x2c,
    0x0f,0xac,0xb3,0x60,0x0d,0xc0,0xca,0x04,0x6b,0x08,0xd6,0x5d,0xb0,0x46,0x60,0xbd,
    0xe3,0x3e,0x25,0xea,0xea,0xb5,0x9e,0x8d,0x0b,0xcf,0xb6,0xf4,0xc7,0xed,0x22,0xb1,
    0xad,0xcf,0x37,0x60,0x37,0x0b,0x59,0xd9,0xb1,0x3f,0x11,0xf7,0xc6,0x3e,0x37,0x0f,
    0x9f,0x92,0xd4,0x59,0x18,0xe2,0x53,0xd4,0x99,0x8c,0xe3,0x72,0xe2,0xfa,0x92,0x60,
    0x25,0xc1,0x4e,0xa2,0xa7,0x75,0xe9,0xb0,0x5e,0x05,0x81,0xa1,0xb1,0xe0,0xcd,0xc2,
    0x18,0x75,0x78,0x78,0x3f,0xb7,0xad,0xc7,0x15,0x15,0x57,0xfa,0xb8,0xdd,0x2a,0x8c,
    0x74,0xde,0xaa,0xbe,0x6e,0x5b,0xbf,0x6b,0x06,0x55,0xa6,0xaf,0x0d,0x76,0x21,0x1a,
    0x6c,0x6d,0x5b,0x04,0xbb,0x08,0x3b,0x1b,0x5d,0x6d,0xd1,0x50,0x84,0xbf,0x1d,0xba,
    0x72,0xf0,0xdf,0x48,0xae,0xe1,0xbd,0xb0,0xdb,0x0b,0xdf,0x4d,0xc4,0x1b,0x9f,0xcd,
    0x57,0x02,0x7f,0x14,0xf7,0x27,0x3f,0xee,0x69,0x11,0xc3,0xb5,0x94,0xfc,0xcf,0x28,
    0xac,0x7b,0xe6,0x44,0xb7,0xb2,0xee,0x1d,0x99,0xdf,0xec,0x52,0xb0,0x12,0xea,0xeb,
    0x84,0x1e,0x8b,0xef,0x8c,0xaf,0x48,0xfc,0x5d,0xa5,0x9e,0x6e,0x75,0xb9,0xb5,0x7e,
    0x7b,0xf6,0x44,0xaf,0xf9,0xfb,0xd0,0x8f,0x42,0xc9,0x1f,0xc0,0x5e,0xf6,0xf8,0x21,
    0xcc,0xe7,0xfe,0xe1,0xac,0x9d,0xe5,0xdf,0x4f,0xbe,0xf5,0xeb,0xba,0x30,0xd3,0x58,
    0xfa,0x93,0x15,0xfd,0xfb,0x2f,0x4b,0xe6,0x7c,0x80,0xcf,0x63,0xa9,0xd1,0xec,0x71,
    0x60,0x3e,0xc7,0xf8,0x0c,0xbb,0x52,0xd6,0xf0,0x11,0x6a,0x52,0xcd,0x93,0x39,0x1b,
    0xae,0x79,0x01,0xf1,0xee,0x5f,0x84,0x2e,0xf7,0x57,0x71,0xae,0x6d,0x4d,0x57,0xe0,
    0x4b,0x48,0xfc,0xda,0x8c,0xbd,0xba,0x51,0xf4,0x98,0xbd,0x23,0xb6,0x96,0x0c,0xb0,
    0xfc,0x5d,0x68,0xf1,0x9e,0xbf,0x43,0xee,0x2e,0xe1,0xdb,0xc3,0x19,0x77,0xfb,0x50,
    0xc6,0x9a,0x9e,0xe4,0xcc,0x5a,0xfe,0x65,0xb4,0xec,0xa2,0x3f,0x97,0xb9,0xe7,0x12,
    0xf1,0xda,0xe6,0xc6,0x75,0xe5,0xa0,0xc7,0xb0,0xdf,0x02,0x92,0x4b,0x6c,0x5b,0xce,
    0x78,0x4a,0xec,0x32,0xb1,0x6d,0xbd,0xc6,0x88,0x6d,0xcf,0xe9,0x19,0xf6,0xec,0x0c,
    0x7b,0xbe,0xd8,0x56,0xdb,0x6e,0xb1,0x6d,0xff,0x9c,0xc0,0x4e,0x73,0x9e,0x3a,0x70,
    0x66,0x46,0x04,0xd4,0xce,0xcb,0xcd,0x60,0x1d,0x64,0x2f,0xcc,0xe4,0x6c,0xde,0x82,
    0xbf,0x5f,0xa8,0xc0,0xf6,0xf2,0x6d,0xec,0xf7,0x4e,0xf0,0x59,0xcc,0xed,0xe0,0x55,
    0x21,0xc6,0xec,0x3b,0xc8,0x33,0xbc,0x4f,0xe8,0x40,0x31,0x98,0xc7,0x77,0xa1,0x07,
    0xe6,0x2b,0xc3,0x36,0xfe,0x6e,0xdc,0x87,0xa5,0x9c,0x91,0x34,0x7b,0xa1,0x07,0xf8,
    0xde,0x10,0xd3,0x38,0xae,0xab,0x16,0xb3,0x73,0xf2,0x6b,0xe0,0x48,0xa3,0xfb,0x8f,
    0x10,0xdf,0x8b,0xfb,0x33,0x4d,0xdf,0x7b,0xc3,0x6d,0x7d,0xe8,0x4b,0xaf,0x7b,0xc2,
    0x6d,0xeb,0x7a,0x27,0xf8,0x62,0xec,0x7e,0x60,0x9e,0xd3,0x5f,0x72,0x4c,0x6f,0x7f,
    0x62,0x7e,0x0f,0xdc,0x3e,0x47,0x5a,0xf4,0xdf,0x85,0xfe,0x01,0xa2,0xff,0x6e,0x70,
    0xd7,0x3f,0x10,0xcc,0xf5,0x0f,0x16,0xfd,0x03,0xe3,0xfb,0x3c,0x8a,0x31,0xe3,0x1e,
    0x24,0x5a,0xee,0x41,0xcb,0x10,0xd1,0x7f,0x2f,0xb8,0xeb,0x1f,0x0a,0xe6,0x39,0xc3,
    0x24,0xc7,0xf4,0x0f,0x23,0xc6,0xf4,0xfb,0x1c,0x83,0x45,0xff,0x08,0xf4,0x0f,0x17,
    0xfd,0x23,0xc1,0x5d,0xff,0x7d,0x60,0xae,0xbf,0x5c,0xf4,0x9b,0x6f,0x54,0x18,0xe5,
    0x70,0x8f,0x92,0x75,0x1f,0x8d,0x16,0xdb,0x77,0x66,0x57,0x80,0x8d,0x96,0xfb,0xc7,
    0xf7,0x44,0x05,0x1a,0x9d,0xa7,0x1c,0x1e,0xbb,0x93,0x1e,0xe4,0x3e,0xf2,0x3d,0xf9,
    0x10,0x9a,0xc7,0xcb,0x5c,0x0f,0x83,0xbb,0x3d,0x81,0xb9,0x97,0xb2,0x47,0x27,0x12,
    0x33,0x01,0x1e,0xbb,0xb3,0x1e,0x85,0xa7,0x52,0xfa,0x3b,0x09,0x7c,0x42,0xd0,0x6c,
    0x67,0xe7,0x31,0xe6,0x9f,0xc8,0xfd,0x35,0x09,0xcd,0x63,0xf0,0x79,0x1f,0x1f,0x87,
    0x6b,0xb2,0xf4,0xf1,0x09,0x70,0xef,0xe3,0x14,0x30,0xef,0xe3,0x34,0xe9,0xa3,0xf9,
    0xa6,0x86,0x31,0x8d,0xfa,0xa7,0xc2,0x6d,0xe7,0x78,0x06,0x77,0x84,0xef,0xe3,0x64,
    0x7c,0x5e,0x6b,0x71,0xd3,0x32,0x1d,0xbb,0x47,0x88,0x37,0xdf,0x93,0xdc,0xbd,0xd3,
    0x85,0x63,0x96,0x70,0x58,0xce,0x2c,0xe2,0xdc,0xff,0x14,0xfe,0x21,0x32,0xc7,0x1c,
    0x70,0x8b,0x9f,0x8d,0xed,0x73,0xcc,0x65,0x8e,0xd9,0xc2,0x31,0x4f,0x38,0x2c,0x67,
    0x1e,0x71,0xee,0x7f,0x1a,0xff,0x02,0x99,0xe3,0x19,0x70,0x8b,0x9f,0x8f,0xed,0x73,
    0x3c,0xcb,0x1c,0xf3,0x85,0x63,0xa1,0x70,0x58,0xce,0x42,0xe2,0x6c,0xef,0x78,0xef,
    0xa6,0xc9,0xba,0x3c,0xc7,0xba,0x2c,0x92,0x75,0x59,0x0c,0xee,0xeb,0xb2,0x04,0xcc,
    0xd7,0x65,0x99,0xac,0xcb,0x92,0x78,0x0f,0x45,0x51,0x35,0xdc,0x4b,0x45,0xcb,0xf3,
    0x68,0xa9,0x92,0x7a,0x96,0x83,0xfb,0xdd,0xbb,0x92,0x98,0x11,0xe1,0x6d,0x63,0xef,
    0xb5,0x55,0x60,0x2b,0xe5,0xee,0xb5,0x7d,0xb5,0x2e,0x70,0x9a,0x7f,0x35,0x31,0xcb,
    0x85,0xe3,0x85,0x3a,0x8e,0xfa,0xb1,0xbd,0x06,0x6c,0x35,0xef,0x9d,0x5c,0x79,0x5f,
    0xfa,0xde,0x5c,0x43,0x4f,0x96,0xa1,0xbb,0x5a,0x7a,0xf2,0x22,0x3d,0x59,0x2b,0x3d,
    0x59,0x07,0xee,0x3d,0x79,0x09,0xcc,0x7b,0xb2,0x41,0x7a,0x62,0xbe,0xf5,0x61,0x6c,
    0x80,0x7b,0xbd,0xf4,0xe4,0xe5,0xab,0xf4,0xe4,0x15,0xf0,0xa3,0x70,0xbf,0x0a,0xb6,
    0x11,0x8d,0xce,0x63,0xcf,0x5f,0x02,0x8b,0xc5,0xbc,0x86,0x86,0x6a,0xe2,0xd7,0xa3,
    0x63,0xb3,0xe8,0xb0,0x98,0x4d,0x61,0x6c,0x26,0x7f,0x93,0xe8,0x78,0xfd,0x2a,0x3a,
    0xde,0x00,0xf7,0xbe,0x6e,0xc9,0x58,0x9b,0x37,0xc1,0xb6,0x64,0xac,0xcd,0xc8,0x90,
    0x6d,0xfe,0xad,0x70,0xf8,0x58,0xcd,0x9a,0x6d,0x23,0x77,0xab,0x70,0xbf,0x95,0xb1,
    0x66,0xdb,0xc1,0xb6,0xfd,0xc7,0x9a,0x6d,0xa7,0x1f,0x5e,0xcf,0xe6,0x8c,0x35,0x5c,
    0x26,0xfc,0x6f,0xc3,0x6f,0xfb,0xc6,0xec,0x9d,0x60,0x3b,0x84,0x6f,0xa7,0xc4,0xbf,
    0x4b,0xfc,0x4c,0xbe,0x1f,0xbd,0x07,0x66,0xb1,0xbb,0xb1,0x7d,0x7f,0xbc,0xcf,0xfe,
    0xd8,0x23,0xfb,0x63,0x2f,0xb8,0xef,0x8f,0x0f,0xc0,0x7c,0x7f,0xd4,0xc8,0xba,0x98,
    0x6f,0x5f,0x18,0x07,0xd1,0xbd,0x0f,0x1e,0x9b,0x77,0x3f,0xdf,0x57,0xfc,0x9d,0x70,
    0x00,0x6c,0xbf,0x7c,0x7f,0xf2,0xd8,0x0f,0xeb,0x62,0xeb,0xc7,0xf6,0x47,0x60,0x07,
    0xa4,0x87,0xd9,0xd2,0xc3,0xdd,0xc4,0x58,0xcf,0x6a,0x98,0xfb,0xa0,0xd4,0xf5,0x31,
    0x75,0x1d,0x92,0xba,0x3e,0x01,0xf7,0xba,0x3e,0x05,0xf3,0xba,0x8e,0x48,0x5d,0xe6,
    0x3b,0x1c,0xc6,0x71,0xb8,0x0f,0xcb,0x7b,0xf7,0x28,0x5a,0xab,0xe4,0x5d,0xf2,0x19,
    0xb8,0xc7,0x1c,0x23,0xc6,0xef,0xe0,0x63,0xc4,0x98,0xde,0x23,0x70,0x1e,0x97,0xf7,
    0xd3,0xe7,0xe8,0x3d,0x29,0x9c,0x5f,0x80,0x5b,0xfe,0x09,0x6c,0xf7,0x7d,0xc9,0x77,
    0xbf,0x33,0x21,0xdf,0xec,0xaf,0xc0,0x2a,0xa5,0xbe,0xaf,0xc1,0xc7,0x53,0xdf,0x69,
    0xa9,0xcf,0x7c,0xa7,0xc2,0x38,0x8d,0x96,0x53,0xa2,0xfd,0x0c,0xda,0xfd,0x6e,0x3f,
    0x03,0x87,0x69,0xf7,0xf8,0xd3,0xa2,0xe5,0x9b,0x0c,0x2d,0xdf,0x82,0x75,0x15,0x2d,
    0xdf,0x81,0xbb,0x96,0x73,0xa2,0xc5,0x7c,0x67,0xc3,0x38,0x07,0xf7,0x59,0xd1,0x72,
    0x1e,0x2d,0xfe,0x0e,0x38,0x2f,0x5a,0x3c,0xfe,0x9c,0x68,0xf9,0x3e,0x43,0xcb,0x0f,
    0x60,0x7b,0x44,0xcb,0x8f,0xe0,0xae,0xe5,0xa2,0x68,0x31,0xdf,0x85,0x30,0x2e,0xc2,
    0x7d,0x41,0xb4,0x5c,0x92,0x75,0x37,0x2d,0x97,0xf8,0xae,0x6c,0x5a,0x3c,0xfe,0x62,
    0xc6,0x1a,0x1f,0xc9,0xd8,0xa3,0x35,0xb2,0xe7,0x7f,0x82,0xcf,0xb8,0xae,0x60,0xff,
    0x19,0x6e,0xa2,0xee,0x61,0x74,0xe5,0xbd,0x98,0x87,0x36,0xfb,0xfd,0xd2,0x2d,0xc4,
    0xa5,0xf8,0xed,0x62,0x5c,0x0d,0xe4,0xbe,0x6b,0x08,0x7e,0x8c,0x1a,0x9b,0x80,0x35,
    0xa2,0xc6,0xa6,0x52,0x63,0x13,0xfe,0xc7,0xd2,0x1c,0x9e,0x7c,0xe1,0xb9,0x06,0x9e,
    0x15,0xcc,0x5f,0x00,0x66,0xff,0x17,0xf8,0x2b,0xc4,0x16,0x90,0xd3,0x5c,0x72,0x5a,
    0x90,0xd3,0x30,0xa8,0x4b,0xc6,0xbf,0x45,0x6b,0xef,0xd3,0x56,0xf8,0x5a,0x0a,0xdf,
    0xf5,0xf8,0x5b,0xc5,0xef,0xce,0x5a,0xac,0x0d,0x78,0x6b,0xe6,0x68,0xc3,0x1c,0xa6,
    0xf9,0x6f,0xfa,0xf1,0x0f,0x21,0xa1,0x73,0x9e,0xc4,0x12,0x00,0x00
};

// Generated from:
//
// #version 450 core
//
// #extension GL_EXT_samplerless_texture_functions : require
//
// layout(set = 0, binding = 0)uniform texture2D src;
// layout(location = 0)out ivec4 dst;
//
// layout(push_constant)uniform PushConstants {
//
//     ivec2 srcOffset;
//     ivec2 dstOffset;
//     int srcMip;
//     int srcLayer;
//
//     bool flipX;
//     bool flipY;
//
//     bool premultiplyAlpha;
//     bool unmultiplyAlpha;
//
//     bool dstHasLuminance;
//     bool dstIsAlpha;
//
//     bool srcIsSRGB;
//     bool dstIsSRGB;
//
//     int dstDefaultChannelsMask;
//     bool rotateXY;
// } params;
//
// float linearToSRGB(float linear)
// {
//
//     if(linear <= 0.0031308)
//     {
//         return linear * 12.92;
//     }
//     else
//     {
//         return pow(linear,(1.0f / 2.4f))* 1.055f - 0.055f;
//     }
// }
//
// void main()
// {
//     ivec2 dstSubImageCoords = ivec2(gl_FragCoord . xy)- params . dstOffset;
//
//     ivec2 srcSubImageCoords = dstSubImageCoords;
//
//     if(params . flipX)
//     {
//         srcSubImageCoords . x = - srcSubImageCoords . x;
//     }
//     if(params . flipY)
//     {
//         srcSubImageCoords . y = - srcSubImageCoords . y;
//     }
//     if(params . rotateXY)
//     {
//         srcSubImageCoords . xy = srcSubImageCoords . yx;
//     }
//
//           vec4 srcValue = texelFetch(src, params . srcOffset + srcSubImageCoords, params . srcMip);
//
//     if(params . srcIsSRGB)
//     {
//
//         srcValue . r = linearToSRGB(srcValue . r);
//         srcValue . g = linearToSRGB(srcValue . g);
//         srcValue . b = linearToSRGB(srcValue . b);
//     }
//
//     if(params . premultiplyAlpha)
//     {
//         srcValue . rgb *= srcValue . a;
//     }
//     else if(params . unmultiplyAlpha && srcValue . a > 0)
//     {
//         srcValue . rgb /= srcValue . a;
//     }
//
//     srcValue *= 255.0;
//
//            ivec4 dstValue = ivec4(srcValue);
//
//     if(params . dstHasLuminance)
//     {
//         dstValue . rg = dstValue . ra;
//     }
//     else if(params . dstIsAlpha)
//     {
//         dstValue . r = dstValue . a;
//     }
//     else
//     {
//         int defaultChannelsMask = params . dstDefaultChannelsMask;
//         if((defaultChannelsMask & 2)!= 0)
//         {
//             dstValue . g = 0;
//         }
//         if((defaultChannelsMask & 4)!= 0)
//         {
//             dstValue . b = 0;
//         }
//         if((defaultChannelsMask & 8)!= 0)
//         {
//             dstValue . a = 1;
//         }
//     }
//
//     dst = dstValue;
// }
