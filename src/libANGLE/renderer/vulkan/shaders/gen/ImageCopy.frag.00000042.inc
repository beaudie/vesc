// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/ImageCopy.frag.00000042.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kImageCopy_frag_00000042[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x7d,0x97,0xfd,0x6b,0x96,0x55,
    0x18,0xc7,0xcf,0x79,0x9e,0x67,0x9b,0xaf,0xf3,0x65,0xbe,0x2c,0x19,0xb5,0xf9,0xd6,
    0x4a,0x9b,0xcb,0x74,0x33,0x75,0xcb,0x39,0x75,0x8b,0x4c,0x73,0x43,0x30,0xb3,0x52,
    0x58,0x99,0x95,0x83,0x28,0xfc,0x49,0xd2,0xd4,0x50,0x92,0x66,0xe5,0xc8,0xda,0x88,
    0x94,0x24,0x7f,0x98,0x99,0xfe,0x92,0xa6,0x0e,0x42,0xec,0xcd,0x41,0x39,0x48,0x87,
    0xfe,0x05,0x91,0x24,0xbd,0x28,0x99,0x35,0xec,0x5c,0xf7,0xf9,0x5c,0x7b,0xae,0x1e,
    0xb2,0xc1,0xe1,0xbe,0xcf,0xf7,0x7a,0xff,0x9e,0xeb,0x3a,0xcf,0xbd,0x74,0x6a,0x52,
    0x81,0x73,0xde,0x0d,0x71,0x83,0x5c,0x83,0x77,0xc9,0xdf,0x28,0x97,0x72,0xf2,0x3a,
    0xd4,0xe5,0x27,0xcf,0x86,0xa5,0xcd,0x4b,0x2b,0x5e,0x7e,0xa5,0xa5,0x62,0xd6,0xec,
    0x4a,0x91,0x17,0xba,0x74,0xa2,0x27,0xb2,0x11,0xae,0xc0,0x65,0xc2,0x53,0xd6,0xc6,
    0x75,0x1b,0x5a,0x05,0x9f,0x1a,0xd6,0xe5,0xb0,0x46,0x06,0x3d,0xc1,0x0b,0xc4,0x47,
    0x78,0x9b,0x9a,0xf8,0x14,0x1b,0xe7,0x1a,0x5d,0x9e,0x9b,0x1e,0xc3,0xb9,0x49,0x3c,
    0x15,0xf3,0x60,0x83,0x0c,0x96,0x02,0x1b,0x69,0xb0,0x34,0xd8,0x18,0x83,0x65,0xc0,
    0x8a,0x0d,0x96,0x07,0x56,0x62,0xb0,0x7c,0xb0,0x52,0x83,0x15,0x80,0x4d,0x36,0xd8,
    0x20,0xb0,0x72,0x83,0x0d,0x06,0x9b,0x6e,0xb0,0x21,0x60,0x95,0x06,0x1b,0x0a,0x36,
    0xcb,0x60,0xc3,0xc0,0xe6,0x18,0x6c,0x38,0xd8,0xfc,0x84,0xa7,0xf4,0x40,0xbd,0xc2,
    0xd9,0xea,0xf0,0x9c,0x08,0x3f,0xba,0x2f,0x33,0x7b,0xe1,0xf9,0x4e,0xf6,0x45,0xc1,
    0x2a,0x95,0xc8,0xd3,0x09,0x37,0xf2,0x3e,0x2e,0xbc,0xe5,0x53,0xe7,0xb4,0xa0,0x9f,
    0x4f,0xbc,0x92,0x8a,0x47,0xe7,0x8d,0x09,0x1a,0x85,0x06,0x2f,0x0a,0xab,0xe9,0xc4,
    0xb2,0x3a,0xdd,0x0b,0x87,0x2b,0x57,0x5e,0xa8,0xd5,0xfd,0x84,0xb0,0x6a,0x86,0xec,
    0x7c,0x48,0xf7,0xc2,0xe7,0x91,0x86,0x75,0x35,0x63,0xc3,0xbe,0x94,0x18,0x72,0x76,
    0xe3,0xc3,0xbe,0x8c,0x7d,0x8a,0xfd,0x64,0x38,0xcf,0x24,0x78,0xc6,0x4d,0x41,0x57,
    0xf0,0x79,0xec,0xa7,0x1a,0xfb,0xbb,0xd1,0x17,0x7b,0xf1,0x3f,0x0d,0x7f,0x2e,0xa9,
    0x77,0x64,0xc2,0x51,0x19,0xab,0x74,0xa0,0xbe,0xff,0x5f,0xa5,0x03,0xcf,0x8c,0xbb,
    0x8f,0x73,0x9c,0x4e,0x7c,0xd9,0x57,0x80,0x4d,0xa3,0x9e,0x19,0xe4,0x23,0xfa,0x95,
    0xc8,0xca,0x8c,0xbc,0xca,0xd4,0x53,0x3d,0x60,0x1b,0xe5,0xf2,0x9c,0x4b,0xbe,0xaa,
    0x5f,0x4f,0x2f,0xaa,0xfc,0x61,0xfc,0xab,0x7c,0x19,0x67,0x73,0x47,0xf0,0xb4,0x8a,
    0xfa,0x19,0xc9,0x81,0x79,0xd3,0xbd,0xc4,0x7c,0x9c,0xf7,0x55,0xd4,0x20,0xfb,0xd5,
    0x39,0x31,0xd7,0xe4,0xec,0x5b,0xe0,0x54,0xec,0x9f,0x21,0xe7,0x52,0x23,0xdf,0x40,
    0x2f,0xeb,0x7e,0x0b,0x79,0xc8,0x99,0xec,0xe2,0x3d,0x6d,0xe4,0x7b,0x98,0x1b,0xed,
    0x89,0x7d,0x26,0x9e,0xec,0x0f,0x26,0xbb,0x2d,0xf5,0x62,0x7f,0x08,0x7e,0x32,0xc6,
    0xfe,0x30,0x33,0xa6,0xfb,0x13,0x39,0x67,0x70,0x96,0x99,0x91,0x7c,0x2f,0x11,0xfb,
    0x10,0xf5,0x5e,0xe2,0x9e,0x49,0x27,0x67,0x91,0x97,0xd4,0x95,0x21,0xbe,0x60,0x37,
    0x02,0x22,0x7c,0xd7,0xd0,0x7f,0xe5,0xf4,0xd8,0xf2,0x90,0xb1,0xf4,0xd7,0x3d,0x60,
    0xe5,0x86,0xdf,0x56,0x7a,0xf7,0x5e,0xe4,0x75,0xc1,0x83,0x9c,0xfd,0xfd,0xf4,0xc7,
    0x0c,0xfc,0x89,0xce,0x4c,0xf0,0x6d,0x41,0x47,0xf6,0x0f,0x60,0x37,0x13,0xbb,0x6a,
    0xe6,0xbc,0x82,0x5e,0xa9,0xe1,0xdc,0x1f,0x04,0xef,0x0a,0x3a,0x85,0x49,0x2d,0x11,
    0x93,0x7e,0xf9,0x23,0x64,0x5e,0x43,0x3e,0x37,0x83,0xfe,0x3c,0xee,0x85,0x1a,0xea,
    0x91,0xf7,0x15,0xc1,0x4e,0xb8,0x59,0x40,0x4c,0xf9,0x7b,0x15,0xbe,0xea,0xc0,0x9b,
    0x02,0xfb,0x92,0x53,0x89,0x8f,0x98,0xea,0xfd,0x19,0x7c,0xa8,0x2f,0x79,0x5e,0x0f,
    0x5c,0x88,0xde,0x6c,0x1f,0x75,0xf2,0xb0,0x99,0x6f,0x6a,0x58,0x44,0x0d,0xf5,0xa6,
    0x86,0xc5,0xe0,0x5a,0xc3,0x12,0x30,0xad,0xa1,0xd1,0xd4,0xb0,0x24,0xb9,0xab,0x5c,
    0x82,0x49,0xdc,0x06,0x53,0xc3,0x23,0xc4,0xf6,0xa6,0x86,0xa5,0xe0,0x5a,0xc3,0x5d,
    0x3e,0x62,0xaa,0x27,0x35,0xa8,0xaf,0x46,0x53,0x43,0x95,0x8f,0x3a,0x35,0xd8,0x34,
    0x98,0x1a,0x96,0x53,0xc3,0x32,0x53,0xc3,0x63,0xe0,0x5a,0xc3,0x0a,0x30,0xad,0xa1,
    0xd9,0xd4,0xb0,0x22,0xc9,0xc7,0x25,0x98,0xc4,0x6d,0xa2,0x8f,0x24,0xee,0x4a,0x62,
    0x57,0xf9,0xec,0x7c,0x4a,0x8e,0xaa,0xdb,0x6c,0x72,0xac,0x46,0xaf,0x11,0xbb,0x26,
    0xf2,0x91,0x19,0x7e,0x82,0xf9,0xd5,0x9e,0x7b,0x92,0x9c,0xd7,0x98,0x9e,0x7b,0x0a,
    0x7c,0x2b,0x3d,0xb7,0x16,0xac,0xda,0x47,0x3b,0x99,0xe9,0x67,0xb1,0x6b,0xc1,0x4e,
    0x38,0x5d,0x0f,0xfe,0x74,0xc8,0x43,0x66,0xe1,0x39,0xe2,0xad,0xa5,0x5f,0xd6,0x1b,
    0xae,0x9e,0xc7,0x7e,0x83,0xe1,0xea,0x05,0x70,0xe5,0xea,0x45,0x30,0xe5,0xaa,0xd5,
    0x70,0x25,0xb2,0x8d,0xc9,0x2c,0xc5,0xfa,0x37,0x72,0xde,0x72,0x1f,0xbc,0x44,0x6c,
    0x87,0xdd,0x35,0xde,0xff,0x0a,0xef,0xe2,0xeb,0x47,0x6c,0xe4,0x79,0x9a,0x58,0x3f,
    0x61,0x37,0x1c,0x9b,0xdf,0x4d,0x2c,0x91,0x5d,0x09,0xeb,0x2a,0x76,0x57,0x93,0xfb,
    0xa2,0x20,0x89,0xf5,0x0b,0x33,0x3d,0x01,0x7b,0xf9,0x3d,0x7b,0x9d,0x3c,0x7e,0x45,
    0x2e,0xb2,0xed,0x60,0xbf,0x81,0x97,0x70,0x7e,0xd7,0xf0,0x79,0xc5,0xd8,0xfd,0x8c,
    0xaf,0xa2,0x1c,0x1d,0xc9,0xe9,0x56,0x88,0x76,0x03,0xec,0x3a,0x39,0xcc,0xf1,0xd1,
    0xef,0x55,0x6c,0xaf,0xd0,0xd7,0x72,0x06,0x13,0x7d,0x94,0x2b,0x1f,0xca,0xd1,0x26,
    0x38,0xf2,0xd4,0x9b,0xef,0xff,0xcd,0xd1,0x4d,0x62,0xde,0x34,0x1c,0xfd,0x8d,0x9d,
    0x72,0x94,0xe7,0xb3,0x1c,0x89,0xac,0x9f,0x0b,0x4e,0xec,0xe4,0xa9,0x1c,0xa5,0x7c,
    0x96,0xa3,0x4d,0x39,0x1c,0xa5,0x7d,0x94,0x5b,0x8e,0x32,0x3e,0xe2,0xca,0x51,0x3e,
    0x3e,0xfb,0x8d,0xdd,0x2d,0x7c,0x15,0xe5,0xe8,0x48,0x4e,0xca,0x91,0x60,0xca,0xd1,
    0x5c,0x1f,0xfd,0x3a,0x1f,0x6d,0xfb,0x0d,0x47,0x53,0x7c,0x94,0x4f,0x24,0x4f,0xe5,
    0x68,0x33,0x1c,0xa5,0xa8,0xb7,0x38,0x87,0xa3,0x61,0xc4,0x94,0xa7,0x72,0x54,0xe8,
    0xa3,0x9d,0x72,0x34,0xde,0x70,0x24,0xb2,0x11,0x61,0x8d,0xc6,0x6e,0xb4,0xe1,0x68,
    0x8c,0xe1,0x68,0x73,0x0e,0x47,0x63,0x7d,0x94,0x5b,0x8e,0xc6,0xf9,0x88,0x2b,0x47,
    0xc5,0xf8,0x14,0xff,0x6a,0x37,0x8a,0x5c,0x8a,0x72,0x74,0xc6,0x1b,0x8e,0x8a,0x0d,
    0x47,0xf3,0x7d,0xf4,0x2b,0x79,0x8d,0x22,0x57,0xe5,0xa8,0xdc,0x47,0xb9,0x70,0x95,
    0xc2,0x9f,0xce,0x5e,0x2b,0xbd,0x28,0x7a,0xb5,0xf4,0x5a,0x33,0x36,0xc5,0x3e,0x3b,
    0xf3,0x5b,0x99,0xf9,0x2d,0x66,0xe6,0x5f,0x03,0xd7,0x99,0xdf,0x06,0xa6,0x33,0xbf,
    0xc3,0xcc,0xe1,0xb6,0xa4,0x7e,0xe7,0xda,0x88,0xdb,0x66,0xee,0x93,0xb7,0xf0,0xbd,
    0xc7,0xf8,0x7e,0x1b,0x5c,0x7d,0xbf,0x03,0xa6,0xbe,0xdb,0x8d,0x6f,0x91,0xed,0x0d,
    0xab,0x1d,0xdf,0x7b,0x4d,0x1f,0xbc,0x4b,0x5d,0xf2,0x7b,0x7f,0x12,0x5f,0xef,0x81,
    0xef,0x83,0x0b,0xb5,0x6b,0x87,0x0b,0xd1,0x79,0x9f,0x98,0x6d,0xe8,0xef,0x25,0x6e,
    0xa7,0x89,0x2b,0x3a,0x1d,0x61,0x75,0x62,0xdf,0x61,0xe2,0x7e,0x60,0xe2,0x2e,0x0f,
    0x5f,0x30,0xf2,0x6d,0xf4,0x21,0x58,0xad,0xcf,0x7e,0x4f,0xa4,0x92,0xdf,0x94,0xfc,
    0x44,0xbe,0x1f,0x3b,0x5d,0xbb,0x82,0x2f,0xc1,0x0f,0x60,0xbb,0x3f,0xf1,0x35,0x38,
    0x39,0xab,0x8f,0xf0,0x75,0x80,0x6f,0x9a,0x3c,0xf3,0xed,0x25,0x35,0x69,0x4e,0x9d,
    0xe6,0x7c,0xeb,0x88,0xdd,0x8e,0x7d,0x07,0xba,0x3b,0xd0,0xdd,0x6e,0xf2,0xdf,0xf9,
    0x1f,0xf9,0xbf,0x71,0x9b,0xfc,0xdb,0xc8,0x73,0x37,0x3a,0x3b,0x4d,0x9e,0x6f,0x62,
    0xb3,0xfb,0x36,0x79,0x6a,0xec,0x1d,0x26,0xcf,0x05,0x3e,0xe6,0xda,0x89,0xfd,0x76,
    0x62,0x88,0xec,0x63,0xe4,0x07,0x93,0xdf,0x90,0xf8,0xcd,0xd8,0x05,0xae,0xfd,0xf4,
    0x09,0xfd,0x74,0xd8,0xf4,0xd3,0x11,0x70,0xed,0xa7,0x4f,0xc1,0xb4,0x9f,0x8e,0x99,
    0x73,0x15,0xd9,0xd1,0xb0,0x8e,0x93,0xdb,0x71,0xe3,0xfb,0x73,0x7c,0x9f,0x30,0xbe,
    0x4f,0x82,0xab,0xef,0x53,0x60,0xea,0xbb,0xdb,0xf8,0x3e,0x95,0xdc,0xc9,0xce,0x9d,
    0xc1,0xf7,0x19,0x97,0xfd,0x5d,0xfe,0x12,0xdf,0x67,0xcd,0xef,0xf2,0x57,0xe0,0x5f,
    0xf3,0x3d,0xf4,0x0d,0x58,0x8b,0x89,0xf7,0x2d,0xf8,0x1a,0xe2,0xf5,0x98,0x78,0x22,
    0x3b,0x17,0x56,0x0f,0xf1,0xce,0x71,0x77,0x0a,0x6f,0x95,0x3e,0xe6,0xd8,0xe5,0xb2,
    0xdf,0x4d,0xaa,0xd7,0xc3,0x79,0x88,0xde,0x42,0x1f,0x75,0xce,0x60,0x73,0xce,0xe4,
    0xf3,0x1d,0xf9,0x54,0x99,0x7c,0xbe,0x07,0xd7,0x7c,0x7a,0x4d,0x3e,0x22,0x3b,0x1f,
    0x56,0x2f,0x71,0xce,0x9b,0x7c,0x66,0x92,0xcf,0x42,0x73,0x4f,0xa9,0x5e,0xaf,0xc9,
    0xa7,0xde,0x47,0x9d,0x1e,0x6c,0xce,0x9b,0x7c,0x7e,0x20,0x9f,0xc3,0x26,0x9f,0x0b,
    0xe0,0x9a,0x4f,0x9f,0xc9,0x47,0x64,0x17,0xc3,0xea,0x23,0xce,0x45,0x93,0xcf,0x2c,
    0x1f,0xff,0x07,0xab,0xf7,0xd9,0x7e,0x55,0xbd,0x3e,0x93,0xcf,0x12,0x1f,0x75,0x7a,
    0xb1,0xb9,0x88,0x6e,0x37,0xba,0xa7,0x99,0x2b,0xe9,0x95,0x2f,0xe0,0x3b,0x6d,0xe2,
    0x54,0xf8,0x2c,0xee,0x72,0x6c,0xbb,0x4d,0x9c,0xc5,0x3e,0xc6,0xea,0xc3,0xe6,0x34,
    0xba,0xc7,0xd0,0x3d,0xca,0xdc,0x89,0xee,0x67,0xf8,0xeb,0x62,0xee,0x0a,0x98,0xd5,
    0x74,0x8e,0xcd,0x31,0xe3,0x7f,0x91,0x8f,0x31,0xba,0xb1,0x17,0x7f,0xb5,0xc1,0xe2,
    0x32,0xb2,0xfe,0xd0,0x25,0x73,0xc2,0xfa,0x07,0x67,0x23,0x03,0xc8,0x14,0x12,0x00,
    0x00
};

// Generated from:
//
// #version 450 core
//
// #extension GL_EXT_samplerless_texture_functions : require
//
// layout(set = 0, binding = 0)uniform texture2DMS src;
// layout(location = 0)out uvec4 dst;
//
// layout(push_constant)uniform PushConstants {
//
//     ivec2 srcOffset;
//     ivec2 dstOffset;
//     int srcMip;
//     int srcLayer;
//
//     bool flipX;
//     bool flipY;
//
//     bool premultiplyAlpha;
//     bool unmultiplyAlpha;
//
//     bool dstHasLuminance;
//     bool dstIsAlpha;
//
//     bool srcIsSRGB;
//     bool dstIsSRGB;
//
//     int dstDefaultChannelsMask;
//     bool rotateXY;
// } params;
//
// float linearToSRGB(float linear)
// {
//
//     if(linear <= 0.0031308)
//     {
//         return linear * 12.92;
//     }
//     else
//     {
//         return pow(linear,(1.0f / 2.4f))* 1.055f - 0.055f;
//     }
// }
//
// void main()
// {
//     ivec2 dstSubImageCoords = ivec2(gl_FragCoord . xy)- params . dstOffset;
//
//     ivec2 srcSubImageCoords = dstSubImageCoords;
//
//     if(params . flipX)
//     {
//         srcSubImageCoords . x = - srcSubImageCoords . x;
//     }
//     if(params . flipY)
//     {
//         srcSubImageCoords . y = - srcSubImageCoords . y;
//     }
//     if(params . rotateXY)
//     {
//         srcSubImageCoords . xy = srcSubImageCoords . yx;
//     }
//
//           vec4 srcValue = texelFetch(src, ivec2(params . srcOffset + srcSubImageCoords), params . srcMip);
//
//     if(params . srcIsSRGB)
//     {
//
//         srcValue . r = linearToSRGB(srcValue . r);
//         srcValue . g = linearToSRGB(srcValue . g);
//         srcValue . b = linearToSRGB(srcValue . b);
//     }
//
//     if(params . premultiplyAlpha)
//     {
//         srcValue . rgb *= srcValue . a;
//     }
//     else if(params . unmultiplyAlpha && srcValue . a > 0)
//     {
//         srcValue . rgb /= srcValue . a;
//     }
//
//     srcValue *= 255.0;
//
//            uvec4 dstValue = uvec4(srcValue);
//
//     if(params . dstHasLuminance)
//     {
//         dstValue . rg = dstValue . ra;
//     }
//     else if(params . dstIsAlpha)
//     {
//         dstValue . r = dstValue . a;
//     }
//     else
//     {
//         int defaultChannelsMask = params . dstDefaultChannelsMask;
//         if((defaultChannelsMask & 2)!= 0)
//         {
//             dstValue . g = 0;
//         }
//         if((defaultChannelsMask & 4)!= 0)
//         {
//             dstValue . b = 0;
//         }
//         if((defaultChannelsMask & 8)!= 0)
//         {
//             dstValue . a = 1;
//         }
//     }
//
//     dst = dstValue;
// }
