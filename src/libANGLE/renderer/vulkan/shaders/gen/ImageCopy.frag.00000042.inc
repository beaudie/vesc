// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/ImageCopy.frag.00000042.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kImageCopy_frag_00000042[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x7d,0x97,0xdb,0x6f,0x55,0x45,
    0x14,0xc6,0x67,0xce,0x39,0xed,0x29,0x20,0xb5,0xa4,0x95,0x4b,0x25,0xa4,0x95,0x0a,
    0x08,0x58,0x2a,0x22,0x94,0x4b,0x11,0x2c,0xd0,0x12,0x11,0xa4,0x0d,0x09,0x88,0x48,
    0x9a,0x80,0x82,0xc8,0x25,0xc1,0x07,0x9e,0x50,0xae,0x8a,0x11,0x05,0x95,0x46,0x94,
    0xc6,0x08,0x91,0x48,0x0c,0x55,0xe1,0x05,0x10,0x69,0x62,0x08,0x18,0xa5,0x89,0xd2,
    0xa8,0x34,0xf0,0x17,0x18,0x89,0x44,0x05,0x51,0x11,0x9c,0xb5,0xe7,0xb7,0x7a,0x96,
    0x27,0x62,0x93,0xc9,0xde,0xf3,0xad,0xdb,0xb7,0xbe,0xbd,0x66,0x9f,0xdd,0x74,0x6a,
    0x68,0xd6,0x39,0xef,0x7a,0xbb,0x22,0x37,0xdb,0xbb,0xe4,0xaf,0x9f,0x4b,0x39,0xb9,
    0xed,0xe3,0x0a,0x93,0x6b,0xc3,0x9c,0xe6,0x39,0xd5,0xeb,0x9f,0x5f,0x56,0x3d,0xee,
    0xa1,0x1a,0xb1,0x17,0xbb,0x74,0xe2,0x27,0xb6,0x3b,0x5d,0xd6,0x65,0xc2,0x55,0xd6,
    0xea,0x96,0x95,0x6b,0x04,0x1f,0x16,0xd6,0xa5,0xb0,0x4a,0x82,0x9f,0xe0,0x59,0xc9,
    0x11,0xee,0x86,0x25,0x39,0x25,0xc6,0xb9,0x46,0x57,0xe0,0x46,0xc7,0x72,0x6e,0x28,
    0x57,0xc5,0x3c,0x58,0x91,0xc1,0x52,0x60,0x25,0x06,0x4b,0x83,0x95,0x19,0x2c,0x03,
    0x36,0xd0,0x60,0x05,0x60,0x83,0x0d,0x56,0x08,0x56,0x61,0xb0,0x2c,0x58,0x95,0xc1,
    0x8a,0xc0,0x46,0x18,0xac,0x17,0xd8,0x68,0x83,0xf5,0x06,0xab,0x31,0x58,0x1f,0xb0,
    0x71,0x06,0xbb,0x03,0xac,0xd6,0x60,0x7d,0xc1,0xa6,0x24,0x3a,0xa5,0x7b,0xfa,0x15,
    0xcd,0x16,0x87,0xeb,0x3d,0xe8,0xa3,0xfb,0x4a,0xb3,0x17,0x9d,0x87,0xb0,0x2f,0x0d,
    0x51,0xa9,0xc4,0x9e,0x4e,0xb4,0x91,0xfb,0xfe,0xe1,0xae,0x90,0x3e,0x47,0x05,0xff,
    0x42,0xea,0x0d,0xae,0x7e,0x6c,0x72,0x59,0xf0,0x28,0x36,0x78,0x69,0x58,0x4d,0xc7,
    0xe6,0x4e,0xd7,0xbd,0x68,0xb8,0x60,0xc1,0x77,0x53,0x75,0x5f,0x1e,0x56,0x5d,0xef,
    0x97,0x1e,0xd6,0xbd,0xe8,0xd9,0xde,0xd0,0x52,0x77,0x57,0xd8,0x57,0x50,0x43,0x9e,
    0xdd,0x80,0xb0,0xaf,0x64,0x9f,0x62,0x5f,0x85,0xe6,0x99,0x04,0xcf,0xb8,0x7b,0xf1,
    0x15,0x7c,0x32,0xfb,0x61,0x26,0x7e,0x38,0xfe,0x12,0x2f,0xf9,0x47,0x91,0xcf,0x25,
    0xfd,0x96,0x24,0x1a,0x55,0xb2,0x2a,0x7a,0xfa,0xfb,0xff,0x55,0xd1,0x73,0xcd,0xb8,
    0xfb,0x79,0x8e,0xa3,0xa9,0x2f,0xfb,0x6a,0xb0,0x51,0xf4,0x33,0x06,0x3e,0xe2,0x5f,
    0x83,0xad,0xd2,0xd8,0xc7,0x9b,0x7e,0x26,0xf4,0xc4,0x46,0xbb,0x5c,0x27,0xc1,0x57,
    0xfd,0xeb,0x99,0x45,0xb5,0xcf,0x26,0xbf,0xda,0xe7,0xf2,0x6c,0x06,0x85,0x4c,0x0b,
    0xe9,0x9f,0x23,0xd9,0x73,0xde,0x74,0x7f,0x77,0x78,0xae,0x8b,0xc2,0x75,0x21,0xf5,
    0x9f,0x00,0x5f,0x44,0x3f,0xb2,0x5f,0x9c,0x57,0x7f,0x49,0xde,0x7e,0x39,0xfa,0x4a,
    0xfc,0xd3,0xf0,0xaf,0x30,0xf6,0x55,0xcc,0xb5,0xee,0x37,0xc1,0x49,0x9e,0xcf,0x2b,
    0xdc,0xa7,0x8d,0x7d,0x37,0x67,0x48,0xe7,0x63,0xaf,0xa9,0x27,0xfb,0x83,0xc9,0xee,
    0x85,0x7a,0x89,0x3f,0x84,0x56,0x19,0x13,0xdf,0xce,0x79,0xd3,0xfd,0x89,0xbc,0xe7,
    0x71,0x86,0xf3,0x23,0x7c,0x2f,0x52,0xfb,0x10,0xfd,0x5e,0xe4,0x9d,0x93,0x4e,0x9e,
    0x4b,0x41,0xd2,0x57,0x86,0xfa,0x82,0x5d,0x0f,0x88,0x68,0x5f,0xc7,0x2c,0x8e,0x60,
    0xde,0xe6,0x05,0xc6,0x32,0x6b,0xf7,0x81,0x8d,0x30,0x5a,0xaf,0x61,0x8e,0x47,0x62,
    0x9f,0x1e,0x32,0xc8,0x1c,0x3c,0xc0,0xac,0x8c,0x21,0x9f,0xf8,0x8c,0x05,0xdf,0x1c,
    0x7c,0x64,0xff,0x20,0x71,0x63,0x89,0x9b,0xc0,0x99,0xaf,0x66,0x6e,0xea,0x98,0x81,
    0x89,0xe0,0x1f,0x05,0x9f,0xe2,0xa4,0x97,0x88,0xc9,0xec,0xfc,0x1e,0x98,0xd7,0xc1,
    0xe7,0xcf,0xe0,0x3f,0x99,0x77,0x44,0x1d,0xfd,0xc8,0xfd,0xfc,0x10,0x27,0xda,0x4c,
    0xa3,0xa6,0xfc,0x6d,0x44,0xaf,0xe9,0xe0,0x4d,0x41,0x7d,0xe1,0x34,0xc4,0x47,0x4c,
    0xfd,0xfe,0x08,0x39,0x34,0x97,0x5c,0xaf,0x06,0x2d,0xc4,0x6f,0x82,0x8f,0x3e,0x05,
    0xc4,0x4c,0x31,0x3d,0xcc,0xa0,0x87,0x7a,0xd3,0xc3,0x4c,0x70,0xed,0x61,0x16,0x98,
    0xf6,0xd0,0x68,0x7a,0x98,0x95,0xbc,0xb7,0x5c,0x82,0x49,0xdd,0x06,0xd3,0xc3,0xa3,
    0xd4,0xf6,0xa6,0x87,0x39,0xe0,0xda,0x43,0xa5,0x8f,0x98,0xfa,0x49,0x0f,0x9a,0xab,
    0xd1,0xf4,0x50,0xeb,0xa3,0x4f,0x1d,0x31,0x0d,0xa6,0x87,0x79,0xf4,0x30,0xd7,0xf4,
    0xf0,0x38,0xb8,0xf6,0x30,0x1f,0x4c,0x7b,0x68,0x36,0x3d,0xcc,0x4f,0xf8,0xb8,0x04,
    0x93,0xba,0x4d,0xcc,0x91,0xd4,0x5d,0x40,0xed,0x5a,0x9f,0x3b,0xab,0xc2,0x51,0x7d,
    0x9b,0x0d,0xc7,0x89,0xf8,0x35,0x12,0xd7,0x04,0x1f,0x39,0xc3,0x4f,0x72,0x7e,0x75,
    0xe6,0x9e,0x82,0xf3,0x12,0x33,0x73,0x4b,0xc1,0x5f,0x64,0xe6,0x5a,0xc0,0x26,0xfa,
    0x18,0x27,0x67,0xfa,0x19,0xe2,0x96,0x13,0x27,0x9a,0xae,0x00,0x5f,0x16,0xf6,0xf2,
    0xfe,0x58,0x49,0xbd,0xa5,0x81,0x97,0x9c,0x8d,0x67,0xc1,0x5a,0x98,0x9f,0x15,0x46,
    0xbb,0xe7,0xc8,0xb7,0xca,0x68,0xb7,0x1a,0x5c,0xb5,0x5b,0x03,0xa6,0xda,0xad,0x33,
    0xda,0x89,0x6d,0x6d,0x58,0xeb,0xd0,0x63,0x2d,0xcf,0x5f,0xde,0x0f,0xeb,0xa9,0xed,
    0x88,0xbb,0xc6,0xfd,0x5f,0xe1,0x5e,0x72,0xfd,0x48,0x8c,0x5c,0x4f,0x52,0xeb,0x27,
    0xe2,0xfa,0x12,0x73,0xd5,0xd4,0x12,0xdb,0xe5,0xb0,0xae,0x10,0x77,0x25,0x79,0x7f,
    0x64,0x93,0x5a,0xbf,0x70,0xc6,0xcb,0x89,0x97,0xdf,0xba,0x6d,0xf0,0xf8,0x15,0xbb,
    0xd8,0xb6,0x80,0xfd,0x06,0x3e,0x98,0xe7,0x79,0x8d,0x9c,0x97,0x4d,0xdc,0xcf,0xe4,
    0x2a,0xcd,0xf3,0x11,0x4e,0xb7,0x42,0xb5,0xeb,0x60,0x57,0xe1,0x30,0xc9,0xc7,0xbc,
    0x57,0x88,0xbd,0xcc,0x9c,0xcb,0x33,0xa8,0xf2,0xd1,0xae,0x7a,0xa8,0x46,0x1b,0xd0,
    0xc8,0xd3,0x6f,0x91,0xff,0xb7,0x46,0x37,0xa8,0x79,0xc3,0x68,0x74,0x93,0x38,0xd5,
    0x28,0xeb,0x73,0x1a,0xdd,0x4c,0xb8,0x85,0xdf,0x01,0x1f,0xe3,0xe4,0xaa,0x1a,0x65,
    0x7c,0x4e,0xa3,0x0d,0x79,0x1a,0x15,0xf8,0x68,0xb7,0x1a,0x15,0xfa,0x88,0xab,0x46,
    0x45,0xe4,0xbc,0x65,0xe2,0xbc,0x8f,0xb9,0x4a,0xf3,0x7c,0x84,0x93,0x6a,0x24,0x98,
    0x6a,0x34,0xc5,0xc7,0xbc,0xc2,0xcb,0xfb,0xc8,0x55,0x35,0x1a,0xee,0xa3,0xbd,0x0a,
    0x9e,0xaa,0xd1,0x46,0x34,0x4a,0xd1,0x6f,0x79,0x9e,0x46,0xc5,0xd4,0x94,0xab,0x6a,
    0x54,0xe2,0x63,0x9c,0x6a,0x34,0xc8,0x68,0x24,0xb6,0x7e,0x61,0x95,0x11,0x57,0x66,
    0x34,0xea,0x6f,0x34,0xda,0x98,0xa7,0xd1,0x00,0x1f,0xed,0x56,0xa3,0x81,0x3e,0xe2,
    0xaa,0x51,0x39,0x39,0x25,0xbf,0xc6,0x95,0xc2,0xa5,0x34,0xcf,0x67,0x90,0xd1,0xa8,
    0xdc,0x68,0x34,0xd5,0xc7,0xbc,0xc2,0xab,0x14,0xae,0xaa,0xd1,0x48,0x1f,0xed,0xa2,
    0x55,0x8a,0x7c,0x7a,0xf6,0xd6,0x31,0x8b,0xe2,0x37,0x8d,0x59,0x6b,0x26,0xa6,0xdc,
    0xe7,0xce,0xfc,0x66,0xce,0xfc,0x26,0x73,0xe6,0xb7,0x80,0xeb,0x99,0xdf,0x0a,0xa6,
    0x67,0x7e,0xbb,0x39,0x87,0x5b,0x13,0x4d,0x9c,0xdb,0x45,0xdd,0x5d,0xe6,0x7d,0xf2,
    0x06,0xb9,0x77,0x9b,0xdc,0x6f,0x82,0x6b,0xee,0xb7,0xc0,0x34,0x77,0xab,0xc9,0x2d,
    0xb6,0x3d,0x61,0xb5,0x92,0x7b,0x8f,0x99,0x83,0xb7,0xe9,0x2b,0x9d,0x7c,0x4b,0xc4,
    0x5c,0xef,0x80,0xef,0x45,0x0b,0x8d,0x6b,0x45,0x0b,0xf1,0x79,0x97,0x9a,0xbb,0xf0,
    0xdf,0x43,0xdd,0x36,0x53,0x57,0x7c,0xf6,0x85,0xd5,0x46,0xfc,0x3e,0x53,0xf7,0x3d,
    0x53,0x77,0x5e,0xf8,0xa2,0x91,0x6f,0xa5,0xf7,0xc1,0xa6,0xf9,0xdc,0xf7,0x45,0x2a,
    0xf9,0x8d,0x29,0x4c,0xec,0xfb,0x89,0xd3,0xf5,0x72,0xc8,0x25,0xf8,0x01,0x62,0xf7,
    0x27,0xb9,0x7a,0x25,0xcf,0xea,0x03,0x72,0x1d,0xe0,0x1b,0xa7,0xc0,0x7c,0x8b,0x49,
    0x4f,0xca,0xa9,0xcd,0x3c,0xdf,0x7a,0x6a,0xb7,0x12,0xbf,0x0f,0xdf,0xed,0xf8,0x6e,
    0x33,0xfc,0x77,0xfc,0x07,0xff,0x57,0x6f,0xc3,0xff,0x35,0x78,0xee,0xc4,0x67,0x87,
    0xe1,0xf9,0x3a,0x31,0x3b,0x6f,0xc3,0x53,0x6b,0x6f,0x37,0x3c,0x1f,0xf1,0x91,0x6b,
    0x1b,0xf1,0xdb,0xa8,0x21,0xb6,0x0f,0xb1,0x1f,0x4c,0x7e,0x5f,0xe2,0x37,0xe4,0x61,
    0x70,0x9d,0xa7,0x8f,0x99,0xa7,0x76,0x33,0x4f,0x9f,0x80,0xeb,0x3c,0x7d,0x0a,0xa6,
    0xf3,0x74,0xd4,0x3c,0x57,0xb1,0x1d,0x09,0xeb,0x38,0xdc,0x8e,0x9b,0xdc,0x9f,0x91,
    0xfb,0x84,0xc9,0x7d,0x12,0x5c,0x73,0x7f,0x0e,0xa6,0xb9,0x3b,0x4c,0x6e,0xb1,0x9d,
    0x0a,0xeb,0x34,0xb9,0x4f,0xbb,0xdc,0xef,0xf4,0x59,0x72,0x9f,0x31,0xbf,0xd3,0x5f,
    0x82,0x9f,0xe5,0xfb,0xe8,0x2b,0xb0,0xe5,0xa6,0xde,0xd7,0xe0,0x4b,0xa8,0xd7,0x69,
    0xea,0x89,0xed,0x5c,0x58,0x9d,0xd4,0x3b,0xc7,0xbb,0x53,0x74,0x1b,0xeb,0x23,0xc7,
    0xc3,0x2e,0xf7,0x1d,0xa5,0x7e,0x9d,0x3c,0x0f,0xf1,0x9b,0xe1,0xa3,0xcf,0x69,0x62,
    0xce,0x19,0x3e,0xdf,0xc0,0x67,0xbc,0xe1,0xf3,0x2d,0xb8,0xf2,0xe9,0x32,0x7c,0xc4,
    0x76,0x3e,0xac,0x2e,0xea,0x9c,0x37,0x7c,0xc6,0xc1,0x67,0x86,0x79,0x4f,0xa9,0x5f,
    0x97,0xe1,0x33,0xd3,0x47,0x9f,0x4e,0x62,0xce,0x1b,0x3e,0xdf,0xc3,0xa7,0xdd,0xf0,
    0xf9,0x01,0x5c,0xf9,0x74,0x1b,0x3e,0x62,0xbb,0x10,0x56,0x37,0x75,0x2e,0x18,0x3e,
    0xe3,0x7d,0xfc,0xff,0x6c,0xa6,0xcf,0xcd,0xab,0xfa,0x75,0x1b,0x3e,0x8d,0x3e,0xfa,
    0x74,0x11,0x73,0x01,0xdf,0x0e,0x7c,0x4f,0x71,0xae,0x64,0x56,0xbe,0x40,0xef,0xb4,
    0xa9,0x53,0xe3,0x73,0xb8,0xcb,0x8b,0xed,0x30,0x75,0x1a,0x7c,0xac,0xd5,0x4d,0xcc,
    0x29,0x7c,0x8f,0xe2,0x7b,0x84,0x73,0x27,0xbe,0xc7,0xc8,0x77,0x98,0x73,0x97,0xe5,
    0xac,0xa6,0xf3,0x62,0x8e,0x9a,0xfc,0xb3,0x7c,0xac,0xd1,0x41,0xbc,0xe4,0x9b,0x1a,
    0x22,0x2e,0x61,0xfb,0x3b,0x4c,0x49,0x6d,0x58,0xff,0x00,0xd8,0x72,0xf2,0x54,0x30,
    0x12,0x00,0x00
};

// Generated from:
//
// #version 450 core
//
// #extension GL_EXT_samplerless_texture_functions : require
//
// layout(set = 0, binding = 0)uniform sampler2DMS src;
// layout(location = 0)out uvec4 dst;
//
// layout(push_constant)uniform PushConstants {
//
//     ivec2 srcOffset;
//     ivec2 dstOffset;
//     int srcMip;
//     int srcLayer;
//
//     bool flipX;
//     bool flipY;
//
//     bool premultiplyAlpha;
//     bool unmultiplyAlpha;
//
//     bool dstHasLuminance;
//     bool dstIsAlpha;
//
//     bool srcIsSRGB;
//     bool dstIsSRGB;
//
//     int dstDefaultChannelsMask;
//     bool rotateXY;
// } params;
//
// float linearToSRGB(float linear)
// {
//
//     if(linear <= 0.0031308)
//     {
//         return linear * 12.92;
//     }
//     else
//     {
//         return pow(linear,(1.0f / 2.4f))* 1.055f - 0.055f;
//     }
// }
//
// void main()
// {
//     ivec2 dstSubImageCoords = ivec2(gl_FragCoord . xy)- params . dstOffset;
//
//     ivec2 srcSubImageCoords = dstSubImageCoords;
//
//     if(params . flipX)
//     {
//         srcSubImageCoords . x = - srcSubImageCoords . x;
//     }
//     if(params . flipY)
//     {
//         srcSubImageCoords . y = - srcSubImageCoords . y;
//     }
//     if(params . rotateXY)
//     {
//         srcSubImageCoords . xy = srcSubImageCoords . yx;
//     }
//
//           vec4 srcValue = texelFetch(src, ivec2(params . srcOffset + srcSubImageCoords), params . srcMip);
//
//     if(params . srcIsSRGB)
//     {
//
//         srcValue . r = linearToSRGB(srcValue . r);
//         srcValue . g = linearToSRGB(srcValue . g);
//         srcValue . b = linearToSRGB(srcValue . b);
//     }
//
//     if(params . premultiplyAlpha)
//     {
//         srcValue . rgb *= srcValue . a;
//     }
//     else if(params . unmultiplyAlpha && srcValue . a > 0)
//     {
//         srcValue . rgb /= srcValue . a;
//     }
//
//     srcValue *= 255.0;
//
//            uvec4 dstValue = uvec4(srcValue);
//
//     if(params . dstHasLuminance)
//     {
//         dstValue . rg = dstValue . ra;
//     }
//     else if(params . dstIsAlpha)
//     {
//         dstValue . r = dstValue . a;
//     }
//     else
//     {
//         int defaultChannelsMask = params . dstDefaultChannelsMask;
//         if((defaultChannelsMask & 2)!= 0)
//         {
//             dstValue . g = 0;
//         }
//         if((defaultChannelsMask & 4)!= 0)
//         {
//             dstValue . b = 0;
//         }
//         if((defaultChannelsMask & 8)!= 0)
//         {
//             dstValue . a = 1;
//         }
//     }
//
//     dst = dstValue;
// }
