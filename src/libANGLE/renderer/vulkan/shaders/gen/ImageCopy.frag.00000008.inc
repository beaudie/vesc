// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/ImageCopy.frag.00000008.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kImageCopy_frag_00000008[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x85,0x98,0xfb,0x9b,0x8d,0x55,
    0x14,0xc7,0xdf,0x39,0xe7,0xcc,0x39,0x0c,0xc6,0xc8,0xe4,0x16,0x3d,0x33,0x6e,0xa9,
    0x99,0x86,0x6a,0xdc,0x1d,0xd7,0x32,0xd4,0xb8,0x64,0x28,0x92,0x18,0x91,0xc4,0x48,
    0x2e,0x19,0x95,0xbb,0x1a,0xa4,0xe9,0x82,0x0a,0x15,0x15,0x2a,0x23,0x86,0x22,0x19,
    0xb9,0x74,0x41,0x2a,0x54,0x84,0xfa,0xbd,0xff,0xa0,0xa7,0xcb,0xf3,0x74,0xd9,0x6b,
    0x9f,0xcf,0x3a,0xad,0xde,0x47,0x35,0xcf,0xb3,0x9f,0xf7,0xac,0xef,0x5a,0xfb,0xbb,
    0xbf,0x6b,0xad,0xbd,0xf7,0x7b,0xce,0x44,0x23,0xed,0x12,0x41,0x34,0x23,0xc8,0x0a,
    0xea,0x05,0x3f,0x04,0xa9,0xbf,0x26,0x41,0x24,0xc8,0x70,0xcf,0x06,0x41,0xdc,0x3f,
    0x4b,0x4a,0xcb,0x4a,0x8b,0xe6,0xce,0x9b,0x52,0x54,0xdc,0xb5,0x8b,0xf8,0xb3,0x83,
    0xa8,0x8f,0x13,0x5f,0xe3,0x20,0x11,0xc4,0xdc,0x53,0x46,0x45,0xf9,0xf4,0x59,0x82,
    0x77,0x74,0xe3,0xb2,0x1b,0x39,0x2e,0x4e,0xf0,0x84,0x70,0xb8,0x4f,0x1d,0x3d,0xa7,
    0xcc,0x09,0x82,0x21,0x41,0x66,0x50,0xc8,0x7a,0xed,0x78,0x2a,0x96,0x01,0x56,0xcf,
    0x60,0x11,0xb0,0x1c,0x83,0x45,0xc1,0x72,0x0d,0x16,0x03,0x6b,0x61,0xb0,0x4c,0xb0,
    0xd6,0x06,0x8b,0x83,0xe5,0x19,0x2c,0x01,0xd6,0xde,0x60,0xf5,0xc0,0x3a,0x19,0xac,
    0x3e,0x58,0xa1,0xc1,0xb2,0xc0,0xba,0x18,0xac,0x01,0x58,0xb1,0xc1,0x1a,0x82,0xf5,
    0x30,0x58,0x23,0xb0,0x3e,0xbe,0x4e,0xd1,0x74,0xbe,0x52,0xb3,0xf1,0xee,0xd9,0x96,
    0xfa,0xa8,0x9d,0x6f,0x6c,0xa9,0xf3,0xb5,0xd8,0x4d,0xdd,0xac,0x88,0xf7,0x47,0x7d,
    0x6d,0xe4,0x73,0x33,0xf7,0x29,0x4e,0x9e,0x79,0x2e,0x3e,0x41,0x9e,0x71,0x1f,0x17,
    0xf3,0xf9,0xc5,0xc1,0x0a,0x9c,0x1d,0x47,0xcf,0x8f,0xbb,0x3b,0x24,0x73,0x1d,0x43,
    0xb6,0xc1,0x9b,0xba,0x31,0xea,0xe0,0xf0,0x01,0x6a,0x4b,0x8d,0x77,0x97,0x94,0x27,
    0xd5,0x6e,0xe5,0x46,0x32,0xab,0xaa,0x9f,0xda,0x52,0xef,0x4d,0x1b,0x5b,0xf6,0xbf,
    0xda,0xd9,0x79,0x68,0x90,0xde,0x36,0x77,0x76,0x3e,0x76,0x04,0x5d,0x6d,0xd1,0x90,
    0x8f,0xbf,0x3d,0xba,0x62,0xf8,0x3b,0x30,0x57,0xf0,0xde,0xd8,0x1d,0x0d,0xdf,0x75,
    0xc4,0x0b,0x9f,0xac,0x57,0x00,0x7f,0xe0,0xeb,0x93,0xe3,0x6b,0x9a,0xcf,0x50,0x2d,
    0x05,0xff,0x33,0xf2,0xd2,0xcf,0x58,0x70,0x23,0x7d,0x2f,0x64,0x7d,0xb1,0x8b,0xc0,
    0x0a,0xc8,0xaf,0x33,0x7a,0x24,0xbe,0x0b,0xbe,0x7c,0xe3,0xef,0x66,0xf2,0xe9,0x9e,
    0x9e,0x9b,0xf2,0xcb,0xb3,0x17,0x7a,0xc5,0xdf,0x97,0x7a,0xe4,0x99,0xf9,0x83,0xd8,
    0xcb,0x1a,0x3f,0x94,0xf5,0xd4,0x3f,0x9c,0xde,0x49,0x3d,0xee,0x82,0x5b,0xd7,0xbb,
    0x1b,0x3e,0xc1,0x5b,0xba,0x95,0xc7,0xe1,0xcf,0x08,0xfe,0xf9,0x97,0x61,0x34,0xdc,
    0xc3,0xe7,0x71,0xe4,0x2c,0xf6,0x78,0x30,0x5d,0x73,0x42,0xc8,0x9e,0x6c,0x7a,0x7a,
    0x3f,0x39,0xda,0x1c,0xa6,0xd1,0x27,0xcd,0xa1,0x82,0x73,0x2c,0xf1,0xb3,0xd2,0xfb,
    0x30,0x95,0xc3,0x23,0x7c,0x8e,0x9a,0xf9,0x0b,0xd3,0x75,0x89,0x05,0xcf,0xf0,0xb9,
    0xbd,0xd9,0xa3,0xcf,0x7b,0x35,0x4b,0x06,0x69,0xfc,0x06,0xce,0xa1,0xae,0xb7,0x03,
    0x7d,0xea,0xaf,0xe1,0x8c,0xab,0x7d,0x20,0xd4,0xd3,0xe3,0x9c,0x59,0xe5,0xff,0xdc,
    0xe4,0x2b,0xf6,0x77,0xde,0x5a,0xda,0x4f,0xf4,0x5c,0x42,0xab,0xee,0xd1,0x4b,0xdc,
    0x83,0x51,0xdf,0xfb,0x4c,0xbf,0x6e,0x8c,0xf9,0x82,0xfd,0xe2,0x90,0x4c,0x62,0xdb,
    0x72,0x07,0x24,0x8c,0x5d,0x6c,0x6c,0xe9,0xdf,0x58,0x63,0x4b,0xee,0xd5,0xc6,0x96,
    0xe7,0xe6,0x90,0xbd,0x35,0x64,0x6f,0x37,0xb6,0xec,0xaf,0x63,0xd8,0x49,0xce,0x5b,
    0x27,0xce,0xd4,0x08,0x87,0xca,0x79,0xba,0x1e,0xac,0x93,0xd9,0x1b,0xb3,0x38,0xbb,
    0x37,0xe0,0x1f,0xe0,0x32,0x90,0xbd,0x7e,0x13,0xe7,0xa1,0x33,0x7c,0x12,0x73,0x33,
    0xf8,0x72,0x17,0x23,0xf6,0x2d,0xcc,0x13,0xbc,0xaf,0xab,0x40,0x3b,0x30,0x8d,0xef,
    0x4a,0x0d,0xc4,0x57,0x8c,0x2d,0xfc,0xdd,0xb9,0x2f,0x8b,0x38,0x43,0x49,0x7a,0xd9,
    0x13,0xbc,0xc6,0xc5,0x64,0xfb,0xbc,0x52,0x98,0x9c,0xa3,0x9f,0x1d,0x47,0x12,0xdd,
    0xbf,0xb9,0xf8,0xde,0xdc,0xaf,0x49,0xea,0xde,0x07,0x6e,0xa9,0x43,0x3f,0x6a,0xdd,
    0x0b,0x6e,0xe9,0x7b,0x7f,0xf0,0xc5,0xd8,0x03,0xc0,0x74,0xce,0x40,0x33,0x47,0xf4,
    0x0e,0x24,0xe6,0x57,0xc7,0xad,0x6b,0x24,0x8d,0xfe,0x5b,0xd1,0x3f,0xc8,0xe8,0xbf,
    0x0d,0x5c,0xf5,0x0f,0x06,0x53,0xfd,0x43,0x8c,0xfe,0xc1,0xfe,0xbe,0x0f,0x3c,0x26,
    0xdc,0x25,0x46,0xcb,0xed,0x68,0x19,0x6a,0xf4,0xdf,0x01,0xae,0xfa,0x4b,0xc1,0x74,
    0xce,0x30,0x33,0x47,0xf4,0x0f,0x23,0x46,0xf4,0xeb,0x1a,0x43,0x8c,0xfe,0x11,0xe8,
    0x1f,0x6e,0xf4,0x8f,0x04,0x57,0xfd,0x77,0x82,0xa9,0xfe,0x32,0xa3,0x5f,0x7c,0xa3,
    0xdc,0x28,0x83,0x7b,0x94,0xe9,0xfb,0x68,0xb4,0xc8,0xbe,0x13,0x7b,0x0c,0xd8,0x68,
    0x73,0x1f,0xe9,0x9e,0x18,0x83,0x46,0xe5,0x29,0x83,0x47,0xee,0xa8,0x7b,0xb9,0x9f,
    0x74,0x4f,0xde,0x87,0xe6,0x09,0x66,0xad,0x89,0xe0,0x6a,0x4f,0x62,0xed,0xa5,0xec,
    0xd1,0x72,0x62,0x26,0xc1,0x23,0x77,0xd8,0x14,0x78,0x26,0x9b,0xfa,0x4e,0x05,0x9f,
    0xe8,0x34,0xcb,0x9d,0xfa,0x00,0xeb,0x97,0x73,0xbf,0x4c,0x45,0xf3,0x58,0x7c,0x5a,
    0xc7,0x07,0xe1,0x9a,0x66,0xea,0x38,0x1d,0x5c,0xeb,0xf8,0x10,0x98,0xd6,0x71,0xa6,
    0xa9,0xa3,0xf8,0x66,0xb8,0x51,0x49,0xfe,0x33,0xe0,0x96,0xbb,0xf3,0x61,0xee,0x88,
    0x0a,0xc3,0x3d,0x1b,0x3c,0xc9,0x3b,0x61,0x0e,0x31,0x23,0xdc,0xad,0x27,0xf7,0xeb,
    0x5c,0xb0,0x39,0xe6,0x8c,0x47,0x7c,0x1f,0xe3,0xde,0x3f,0x0f,0x0e,0x1d,0x2b,0xdd,
    0x5a,0x82,0xcf,0x67,0xee,0x3c,0xc3,0xfd,0x68,0x9a,0xbb,0xbe,0xb7,0x17,0x80,0xcd,
    0xe7,0xde,0xcb,0xe4,0xee,0x8f,0x9a,0xda,0x2c,0xa0,0x9f,0x33,0xc9,0xa7,0xd2,0xd4,
    0xea,0x31,0x6a,0xb5,0xd0,0xe4,0xf3,0x38,0xb8,0xd6,0xea,0x09,0x30,0xad,0xd5,0x62,
    0x53,0x2b,0xf1,0x2d,0xf2,0x67,0x20,0xc5,0xbd,0xc8,0xd4,0x6a,0xc9,0x15,0x6a,0xb5,
    0x14,0x7c,0x17,0xdc,0xcb,0xc0,0x7a,0xa1,0x51,0x79,0xe4,0xf9,0x93,0xeb,0x7b,0xb6,
    0xbf,0xdb,0x52,0x1a,0x2a,0x89,0x5f,0x84,0x8e,0x95,0x46,0x87,0xc4,0xac,0xf0,0xb5,
    0x4b,0xcd,0x5f,0x61,0x74,0x3c,0x79,0x05,0x1d,0x4f,0x81,0x6b,0x5d,0xab,0x42,0x3d,
    0x5b,0x05,0x56,0xf5,0x2f,0x3d,0x5b,0x0d,0xc7,0xdf,0x23,0xd5,0xb3,0x35,0xcc,0x5d,
    0x6d,0xb8,0x9f,0x0e,0xf5,0x6c,0x2d,0xd8,0x9a,0xff,0xe8,0xd9,0x5a,0xea,0xa1,0xf9,
    0xac,0x0c,0xf5,0x70,0xa6,0xe1,0x7f,0x16,0xfe,0xd9,0xbc,0x63,0x9e,0x03,0x13,0xae,
    0x6a,0x6c,0x7d,0xff,0xbc,0xc0,0x3b,0x6d,0xa4,0xab,0xad,0xd8,0xeb,0x78,0x9f,0xdb,
    0xb1,0xca,0x29,0x12,0xdf,0x7a,0xe2,0xd7,0x19,0xae,0xf5,0x66,0xef,0xbc,0xc8,0xde,
    0xd9,0x60,0xea,0xfa,0x12,0xb8,0xee,0x9d,0x97,0xc1,0x74,0xef,0x6c,0x32,0x3d,0x13,
    0xdf,0x46,0xf9,0xfe,0x4a,0x4e,0x1b,0xe1,0x96,0xf7,0xe5,0x2b,0xe8,0xd4,0xf7,0x85,
    0xd4,0xe7,0x55,0x70,0xd1,0xb2,0x19,0xbb,0xa7,0x8b,0x17,0xdf,0x6b,0xfc,0x3e,0xd8,
    0x6c,0x38,0xb6,0x18,0x0e,0x99,0xb3,0x85,0x38,0xf5,0xbf,0x8e,0x7f,0xa8,0x59,0xe3,
    0x0d,0x70,0x89,0xdf,0x8a,0xad,0x6b,0xbc,0xc9,0x1a,0x5b,0x0d,0xc7,0x36,0xc3,0x21,
    0x73,0xb6,0x11,0xa7,0xfe,0xb7,0xf0,0xef,0x30,0x6b,0xbc,0x0d,0x2e,0xf1,0xdb,0xb1,
    0x75,0x8d,0x77,0x58,0x63,0xbb,0xe1,0xd8,0x69,0x38,0x64,0xce,0x4e,0xe2,0x64,0x3f,
    0x68,0xed,0x36,0x99,0xbe,0xec,0xa2,0x2f,0x35,0xa6,0x2f,0xef,0x82,0x6b,0x5f,0x76,
    0x83,0x69,0x5f,0x6a,0x4d,0x5f,0xc4,0xb7,0xc7,0x8d,0xfd,0x70,0xef,0x31,0xfb,0x67,
    0x2f,0x5a,0xf4,0xfb,0xcb,0x3e,0xb0,0xbd,0xe6,0x3b,0x97,0xc6,0xbe,0x97,0x8e,0xad,
    0xef,0xed,0xf7,0xc1,0xf6,0x99,0x7d,0x1f,0x31,0xfb,0xbe,0x9a,0x18,0xc9,0xab,0x96,
    0xb5,0xf7,0x9b,0xbc,0x3e,0x20,0xaf,0x03,0x26,0xaf,0x83,0xe0,0x9a,0xd7,0x87,0x60,
    0x9a,0x57,0x9d,0xc9,0x4b,0x7c,0x87,0xdc,0x38,0x0a,0xf7,0x21,0x53,0xe3,0xc3,0x68,
    0xad,0x30,0x7d,0xfa,0x08,0x5c,0x63,0x8e,0x84,0xf6,0xd3,0x11,0x62,0x44,0x6f,0x1d,
    0x9c,0x47,0xcd,0x3b,0xed,0x63,0xf4,0x1e,0x37,0xef,0xb4,0x4f,0xc0,0x65,0xfe,0x31,
    0x6c,0xf5,0x7d,0xca,0xf7,0xc5,0x93,0x6e,0xbe,0xd8,0x9f,0x81,0x4d,0x36,0xf9,0x9d,
    0x00,0x9f,0x40,0x7e,0xa7,0x4c,0x7e,0x27,0xfc,0xdc,0xc0,0x63,0xa2,0xe5,0xa4,0xd1,
    0x7e,0x3a,0xb4,0x4f,0x4f,0xf3,0x3d,0x5b,0xb4,0x6b,0xfc,0x29,0xa3,0xe5,0x8b,0x90,
    0x96,0x2f,0xc1,0xba,0x19,0x2d,0x5f,0x81,0xab,0x96,0xb3,0x46,0x8b,0xf8,0xce,0xb8,
    0x71,0x16,0xee,0x33,0x46,0xcb,0xb9,0xd0,0x7e,0x3e,0x67,0xb4,0x68,0xfc,0x59,0xa3,
    0xe5,0xeb,0x90,0x96,0x6f,0xc0,0x6a,0x8c,0x96,0x6f,0xc1,0x55,0xcb,0x05,0xa3,0x45,
    0x7c,0xe7,0xdd,0xb8,0x00,0xf7,0x79,0xa3,0xe5,0xa2,0xe9,0xbb,0x68,0xb9,0xc8,0xef,
    0x0d,0xd1,0xa2,0xf1,0x17,0x42,0x3d,0xae,0x0b,0xed,0xd1,0x5a,0xb3,0xe7,0xbf,0x87,
    0x4f,0xb8,0x2e,0x63,0xff,0xee,0xde,0x1e,0x3d,0xdc,0xe8,0xc6,0x19,0xcf,0x42,0x9b,
    0xfc,0x26,0xea,0xee,0xe2,0x12,0xfc,0x1e,0x12,0xae,0x06,0x66,0xff,0x35,0x04,0x3f,
    0x4c,0x8e,0x8d,0xc1,0x1a,0x91,0x63,0x13,0x93,0x63,0x63,0xfe,0x6f,0xd3,0x0c,0x9e,
    0x1c,0xc3,0x73,0x15,0x3c,0xab,0x58,0x3f,0x17,0x4c,0xfe,0xd7,0xf0,0x87,0x8b,0xcd,
    0x65,0x4e,0x33,0x33,0xa7,0x39,0x73,0x96,0x31,0xa7,0x25,0x58,0x0b,0xc3,0x73,0x0d,
    0x78,0x2b,0xaf,0x2b,0xe1,0xb1,0x36,0xbc,0x2b,0x5b,0xe1,0x6f,0xcd,0x1a,0x6d,0x58,
    0x43,0x34,0xff,0x49,0x3d,0xfe,0x02,0xc4,0xc6,0x95,0x27,0x18,0x13,0x00,0x00
};

// Generated from:
//
// #version 450 core
//
// #extension GL_EXT_samplerless_texture_functions : require
//
// layout(set = 0, binding = 0)uniform utexture2D src;
// layout(location = 0)out vec4 dst;
//
// layout(push_constant)uniform PushConstants {
//
//     ivec2 srcOffset;
//     ivec2 dstOffset;
//     int srcMip;
//     int srcLayer;
//
//     bool flipX;
//     bool flipY;
//
//     bool premultiplyAlpha;
//     bool unmultiplyAlpha;
//
//     bool dstHasLuminance;
//     bool dstIsAlpha;
//
//     bool srcIsSRGB;
//     bool dstIsSRGB;
//
//     int dstDefaultChannelsMask;
//     bool rotateXY;
// } params;
//
// float sRGBToLinear(float sRGB)
// {
//
//     if(sRGB <= 0.04045)
//     {
//         return sRGB / 12.92;
//     }
//     else
//     {
//         return pow((sRGB + 0.055f)/ 1.055f, 2.4f);
//     }
// }
//
// void main()
// {
//     ivec2 dstSubImageCoords = ivec2(gl_FragCoord . xy)- params . dstOffset;
//
//     ivec2 srcSubImageCoords = dstSubImageCoords;
//
//     if(params . flipX)
//     {
//         srcSubImageCoords . x = - srcSubImageCoords . x;
//     }
//     if(params . flipY)
//     {
//         srcSubImageCoords . y = - srcSubImageCoords . y;
//     }
//     if(params . rotateXY)
//     {
//         srcSubImageCoords . xy = srcSubImageCoords . yx;
//     }
//
//           uvec4 srcValue = texelFetch(src, params . srcOffset + srcSubImageCoords, params . srcMip);
//
//     if(params . premultiplyAlpha)
//     {
//         srcValue . rgb *= srcValue . a;
//     }
//     else if(params . unmultiplyAlpha && srcValue . a > 0)
//     {
//         srcValue . rgb /= srcValue . a;
//     }
//
//            vec4 dstValue = vec4(srcValue);
//
//     dstValue /= 255.0;
//
//     if(params . dstIsSRGB)
//     {
//
//         dstValue . r = sRGBToLinear(dstValue . r);
//         dstValue . g = sRGBToLinear(dstValue . g);
//         dstValue . b = sRGBToLinear(dstValue . b);
//     }
//
//     if(params . dstHasLuminance)
//     {
//         dstValue . rg = dstValue . ra;
//     }
//     else if(params . dstIsAlpha)
//     {
//         dstValue . r = dstValue . a;
//     }
//     else
//     {
//         int defaultChannelsMask = params . dstDefaultChannelsMask;
//         if((defaultChannelsMask & 2)!= 0)
//         {
//             dstValue . g = 0;
//         }
//         if((defaultChannelsMask & 4)!= 0)
//         {
//             dstValue . b = 0;
//         }
//         if((defaultChannelsMask & 8)!= 0)
//         {
//             dstValue . a = 1;
//         }
//     }
//
//     dst = dstValue;
// }
