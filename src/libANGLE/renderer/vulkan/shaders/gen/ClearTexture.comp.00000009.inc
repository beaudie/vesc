// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/ClearTexture.comp.00000009.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kClearTexture_comp_00000009[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x7d,0x93,0xc9,0x4e,0x02,0x41,
    0x10,0x86,0x9b,0x99,0x61,0xd8,0x64,0x51,0x40,0x01,0x11,0x51,0x04,0x34,0x22,0x2e,
    0x80,0x9a,0x18,0x4d,0x3c,0xe9,0xc1,0x9b,0x4f,0x60,0xe2,0xc5,0x83,0x5e,0xf4,0x11,
    0x7c,0x1e,0x5f,0xcf,0x2d,0x26,0x56,0xf5,0x7c,0x4d,0x3a,0x1e,0x9c,0xa4,0xd3,0x53,
    0x5f,0xff,0xb5,0x75,0xcd,0x84,0x41,0x2f,0x63,0x4c,0xca,0xe4,0x4d,0xd6,0x9c,0x98,
    0xe4,0x59,0x34,0x81,0x10,0x63,0x0a,0x26,0xb6,0xfb,0xd5,0xcd,0xed,0xcd,0xf8,0xf9,
    0xe5,0x7e,0x3c,0x9d,0x1d,0xe8,0x79,0xc9,0x84,0x56,0xa7,0x67,0x65,0xd1,0xa4,0x65,
    0x8f,0x64,0x3d,0xde,0x3d,0x3c,0x29,0xcf,0xc9,0xaa,0x08,0x8f,0x6c,0x2c,0x7d,0x4f,
    0xb4,0x36,0x96,0xd0,0x9c,0x8d,0x6d,0x4c,0x5b,0xd6,0xb5,0x78,0x57,0xc8,0xdb,0x63,
    0x77,0x2c,0x05,0xab,0x78,0x2c,0x80,0xd5,0x3c,0x16,0xc2,0x1a,0x1e,0x8b,0x60,0x7e,
    0x8e,0x34,0xac,0xeb,0xb1,0x18,0xb6,0xe5,0xb1,0x0c,0x6c,0xdb,0x63,0x59,0xd8,0xc8,
    0xf6,0x10,0xce,0x6b,0xd1,0x7e,0xfa,0xc4,0x89,0xd0,0x0f,0xfe,0xf4,0xa3,0xfa,0x01,
    0x75,0xaa,0x5e,0xe3,0x6e,0xce,0xcf,0x12,0x7b,0xc3,0xb3,0xa7,0xdc,0x4f,0x53,0x56,
    0x55,0xb2,0x04,0xf6,0x3c,0xb4,0xfe,0xfa,0x5e,0x17,0x4d,0x4c,0x1f,0xfa,0xac,0x88,
    0x9d,0xa1,0x86,0xd0,0xf2,0xc8,0xd6,0x9b,0xa2,0x97,0x33,0xec,0x1c,0x6c,0x17,0xff,
    0x3c,0xfe,0xaa,0x2f,0x70,0xa6,0x7c,0x59,0xa2,0x94,0x88,0xaf,0xb1,0xcb,0x76,0xe6,
    0x49,0x7f,0x1d,0x51,0x56,0xec,0xdc,0x13,0x16,0xff,0xb3,0x34,0xee,0xe2,0xfc,0x7b,
    0x48,0xea,0x50,0x7b,0x09,0xa6,0x7d,0x54,0xc9,0xe3,0xea,0xaa,0x32,0x5b,0xe7,0x5f,
    0x47,0x1b,0x7b,0xe7,0x0d,0xfa,0x72,0x76,0x9b,0xf9,0xd4,0xe4,0x76,0x34,0xd6,0x9a,
    0xd4,0xdf,0xa7,0xbe,0x0e,0x77,0xdf,0x27,0xde,0x90,0x3b,0x1c,0x50,0xcf,0x90,0x39,
    0x07,0x5e,0xbc,0x1d,0xee,0xc5,0xd9,0x23,0xea,0x53,0xff,0x3d,0xea,0x29,0x61,0x1f,
    0xe0,0x5b,0xf2,0xee,0xf5,0x88,0x7e,0x9d,0x3d,0xc1,0x7f,0x24,0x96,0xd6,0x3d,0x45,
    0x33,0x61,0x1d,0xcb,0x37,0x13,0x70,0xbf,0x86,0x19,0x7e,0x08,0xd1,0xef,0xf5,0x5d,
    0xac,0x19,0xfc,0x5b,0xde,0xf3,0x56,0x9f,0x9c,0xeb,0x7e,0x29,0x2a,0x9d,0xdd,0x02,
    0x75,0xe9,0xf9,0x39,0x79,0x8b,0x70,0xd5,0xd4,0xed,0x5c,0x93,0xbb,0xaf,0x79,0x9a,
    0x15,0xb8,0xd3,0x34,0xd1,0x34,0x3c,0x4d,0x0b,0xfe,0x2a,0x1a,0xb5,0x57,0xf1,0x6b,
    0x79,0x7e,0x6b,0xf8,0xb5,0x3d,0xbf,0x0e,0xdc,0xf9,0xad,0xe3,0xab,0xfc,0x4d,0x58,
    0x97,0xef,0xbe,0xc8,0x99,0xf6,0xea,0xfe,0x99,0x2f,0x89,0xb1,0xc1,0x7f,0xd2,0xa3,
    0x5f,0x7d,0xff,0x94,0x7d,0x86,0xdd,0x23,0xbf,0xce,0x64,0x4c,0xfe,0x11,0xf9,0x75,
    0x1e,0xfb,0xf0,0x4b,0xc9,0xae,0x73,0x3a,0x64,0xd6,0x3b,0xe4,0xbc,0x90,0x7c,0x87,
    0xe8,0xfc,0xb8,0xba,0xff,0xc8,0xc4,0x4e,0x65,0xfd,0x02,0xb5,0x7e,0x57,0x66,0x20,
    0x05,0x00,0x00
};

// Generated from:
//
// #version 450 core
// layout(local_size_x = 16, local_size_y = 1, local_size_z = 1)in;
//
// layout(set = 0, binding = 0)buffer dest
// {
//  float depthBuffer[];
// };
//
// layout(push_constant)uniform PushConstants
// {
//           vec4 clearValue;
//  float depthValue;
//  uint stencilValue;
//  uint offsetX;
//  uint offsetY;
//  uint offsetZ;
//  uint width;
//  uint height;
//  uint depth;
// } params;
//
// void main()
// {
//  if(gl_GlobalInvocationID . x >= params . width * params . height * params . depth)
//  {
//   return;
//  }
//
//     depthBuffer[gl_GlobalInvocationID . x]= params . depthValue;
//
// }
