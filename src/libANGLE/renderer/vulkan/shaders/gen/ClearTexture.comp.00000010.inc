// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/ClearTexture.comp.00000010.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kClearTexture_comp_00000010[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x85,0x93,0xdd,0x2e,0x43,0x41,
    0x10,0xc7,0xb7,0xe7,0x1c,0xa7,0x5a,0xa5,0xa5,0x2d,0x45,0xd5,0x47,0x29,0x8d,0xaa,
    0xa2,0x45,0x22,0x24,0xae,0xb8,0x70,0xe7,0x09,0x24,0x6e,0x5c,0x70,0xc3,0x23,0x78,
    0x1e,0xaf,0xe7,0x2b,0x12,0x33,0x7b,0x7e,0xdb,0x4c,0xdc,0x68,0xb2,0xd9,0x33,0xbf,
    0xf9,0xcf,0xcc,0xce,0xce,0x36,0x8e,0xda,0x79,0xe7,0x72,0xae,0xe8,0x26,0xdd,0x89,
    0xcb,0x7e,0xb3,0x2e,0x12,0xe2,0xdc,0x94,0x4b,0xfd,0x7e,0x75,0x73,0x7b,0xd3,0x7f,
    0x7e,0xb9,0xef,0x0f,0x47,0x03,0xf5,0xcf,0xb8,0xd8,0xeb,0xd4,0x57,0x16,0xcd,0x84,
    0xec,0x89,0xac,0xc7,0xbb,0x87,0x27,0xe5,0x05,0x59,0x15,0xe1,0x89,0xcf,0xa5,0xdf,
    0x99,0xd6,0xe7,0x12,0x5a,0xf0,0xb9,0x9d,0x6b,0xca,0xba,0x96,0xe8,0x0a,0x75,0xdb,
    0xec,0x81,0xe5,0x60,0x15,0xc3,0x22,0x58,0xcd,0xb0,0x18,0xd6,0x30,0x2c,0x81,0xd9,
    0x1a,0x13,0xb0,0x35,0xc3,0x52,0xd8,0xa6,0x61,0x79,0xd8,0x8e,0x61,0x93,0xb0,0x9e,
    0x61,0x05,0xd8,0xc0,0xf7,0x15,0x8f,0xcf,0xa7,0x3d,0x6e,0x91,0x3b,0x41,0xdf,0xf9,
    0xd3,0xa3,0xea,0x3b,0x9c,0x5d,0xf5,0x5a,0x6b,0x63,0xec,0xcb,0xec,0x75,0x63,0x0f,
    0xb9,0xb3,0x45,0x59,0x55,0xa9,0x12,0x79,0x7f,0xec,0xe3,0xf5,0xbb,0x2e,0x9a,0x94,
    0xde,0xf4,0xb7,0x20,0x76,0x9e,0x33,0xc4,0x9e,0x27,0xbe,0x87,0x1c,0xfd,0x9d,0x61,
    0x17,0x60,0xbb,0xc4,0x17,0x89,0x57,0xfd,0x14,0x3e,0xe5,0xf3,0x92,0x65,0x86,0xfc,
    0x9a,0xbb,0xec,0xdf,0x41,0xd6,0x5f,0xcb,0x95,0x7c,0xef,0x81,0xa5,0xff,0x2c,0xcd,
    0x3d,0x3b,0x7e,0x27,0xd9,0x59,0xd4,0x9e,0x83,0x69,0x2f,0x55,0x6a,0x85,0xb3,0x55,
    0x99,0x79,0x9e,0xf8,0x3a,0xda,0xd4,0xf8,0x1b,0xcc,0x29,0xd8,0x4d,0x34,0x35,0xb9,
    0x21,0xcd,0xb5,0x22,0x3d,0x84,0xb9,0xb4,0xb8,0xff,0x2d,0xf2,0x6d,0x73,0x8f,0x1d,
    0xce,0xb3,0xcd,0xfc,0x23,0x93,0xaf,0x6b,0xee,0xa6,0x47,0xee,0x32,0xf6,0x00,0x6d,
    0x6a,0xee,0xf2,0x90,0xfe,0x82,0x7d,0x44,0x3f,0x3d,0xb1,0xb4,0x8f,0x21,0x9a,0x23,
    0xd6,0xb1,0xbc,0x93,0x88,0x3b,0x75,0xcc,0xed,0x43,0x88,0xbe,0xdb,0x77,0xb1,0x46,
    0xf0,0x6f,0xf9,0x2e,0x7a,0x7d,0xe6,0xd7,0xfd,0x52,0x54,0x3a,0xaf,0x12,0xe7,0x52,
    0xff,0x39,0x75,0xa7,0xe1,0xaa,0xa9,0xfb,0x59,0x66,0x77,0x5d,0x33,0x9a,0x05,0x78,
    0xd0,0x2c,0xa2,0x69,0x18,0xcd,0x12,0xfc,0x55,0x34,0x6a,0x2f,0x13,0xb7,0x64,0xe2,
    0x56,0x88,0x6b,0x9a,0xb8,0x16,0x3c,0xc4,0xad,0x12,0xab,0xfc,0x4d,0xd8,0x1a,0x6f,
    0x7d,0x1a,0x9f,0xf6,0x1a,0xfe,0x27,0x5f,0x92,0x63,0x9d,0xff,0x46,0x9b,0x7e,0xf5,
    0xfb,0x53,0xf6,0x11,0x76,0x9b,0xfa,0x3a,0x93,0x3d,0xea,0x77,0xa9,0xaf,0xf3,0xe9,
    0xc3,0x4b,0x52,0x5d,0xeb,0xef,0x33,0x87,0x13,0x7c,0x97,0x42,0x75,0x7e,0x07,0xcc,
    0xbc,0xcb,0x59,0x2e,0xe4,0x1c,0x07,0xe8,0x6d,0x3d,0xdd,0x7f,0x24,0xc3,0xa9,0xac,
    0x5f,0xdd,0xdf,0x6b,0xe9,0x40,0x05,0x00,0x00
};

// Generated from:
//
// #version 450 core
// layout(local_size_x = 16, local_size_y = 1, local_size_z = 1)in;
//
// layout(set = 0, binding = 0)buffer dest
// {
//
//  uint colorBuffer[];
//
// };
//
// layout(push_constant)uniform PushConstants
// {
//           vec4 clearColor;
//  float depthValue;
//  uint stencilValue;
//     uint componentCount;
//  uint offsetX;
//  uint offsetY;
//  uint offsetZ;
//  uint width;
//  uint height;
//  uint depth;
// } params;
//
// void main()
// {
//  if(gl_GlobalInvocationID . x >= params . width * params . height * params . depth)
//  {
//   return;
//  }
//
//     colorBuffer[gl_GlobalInvocationID . x]= packUnorm4x8(params . clearColor);
//
// }
