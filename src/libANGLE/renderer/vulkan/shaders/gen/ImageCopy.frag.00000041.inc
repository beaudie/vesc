// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/ImageCopy.frag.00000041.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kImageCopy_frag_00000041[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x7d,0x96,0xfd,0x6b,0x95,0x65,
    0x18,0xc7,0xef,0xfb,0x9c,0xb3,0x4d,0xe7,0xdb,0x6a,0xba,0x4a,0x2c,0xce,0xd2,0x96,
    0xe5,0x9a,0xcb,0xe6,0x4b,0xba,0xa3,0xae,0xa9,0x1b,0x64,0x9a,0x1b,0x82,0x99,0x95,
    0xc2,0xca,0xac,0x1c,0x44,0xe1,0x4f,0x92,0xa6,0x86,0x92,0x34,0x2b,0x87,0xd6,0x46,
    0xa4,0x24,0xf9,0x83,0x66,0xfa,0x43,0x6a,0x3a,0x42,0x2c,0xd2,0x41,0x39,0x28,0x87,
    0xfe,0x05,0x91,0x24,0xbd,0x08,0xd2,0x52,0xb4,0xee,0xeb,0x7e,0x3e,0xd7,0xce,0xd5,
    0x21,0x3b,0x70,0xf3,0x3c,0xf7,0xf7,0xba,0xbe,0xd7,0xcb,0xf7,0xb9,0xee,0xe7,0x3c,
    0xe9,0xd4,0xf8,0x12,0xe7,0xbc,0x2b,0x75,0x43,0xdc,0x7c,0xef,0xe2,0xef,0x36,0x97,
    0x72,0x72,0x3b,0xcc,0x15,0xc7,0x6b,0xd3,0xc2,0xd6,0x85,0x35,0xaf,0xbd,0xde,0x56,
    0x53,0x37,0xb5,0x56,0xec,0x23,0x5d,0x3a,0xfa,0x89,0x6d,0x94,0x2b,0x71,0x99,0x70,
    0x95,0xb5,0x76,0xd5,0x9a,0x76,0xc1,0xab,0xc2,0xba,0x18,0x56,0x59,0xf0,0x13,0xbc,
    0x44,0x62,0x84,0xbb,0xaa,0x18,0x53,0x38,0xce,0x35,0xbb,0x22,0x57,0x9d,0xa4,0x73,
    0xe3,0xb9,0x2a,0xe6,0xc1,0x86,0x18,0x2c,0x05,0x56,0x66,0xb0,0x34,0xd8,0x68,0x83,
    0x65,0xc0,0xee,0x34,0x58,0x11,0xd8,0x38,0x83,0x15,0x83,0x65,0x0d,0x56,0x02,0x36,
    0xc1,0x60,0x43,0xc0,0x26,0x1a,0x6c,0x28,0x58,0xb5,0xc1,0x4a,0xc1,0x6a,0x0d,0x36,
    0x0c,0xac,0xce,0x60,0xc3,0xc1,0x66,0x18,0x6c,0x04,0x58,0x7d,0xd4,0x29,0x3d,0xd8,
    0xaf,0x68,0xb6,0x3c,0x5c,0xef,0x45,0x1f,0xdd,0x57,0x9a,0xbd,0xe8,0x7c,0x0f,0xfb,
    0xf2,0xc0,0x4a,0x45,0x7b,0x3a,0x6a,0x23,0xf7,0x15,0xe1,0xae,0x98,0x3e,0x27,0x05,
    0xff,0x62,0xf2,0x8d,0xab,0x79,0x62,0xd6,0xe8,0xe0,0x31,0xd2,0xe0,0xe5,0x61,0xb5,
    0x1c,0x5f,0xd4,0xa0,0x7b,0xd1,0x70,0xe9,0xd2,0xfe,0xd9,0xba,0x1f,0x1b,0x56,0xae,
    0x74,0xeb,0x1c,0xdd,0x8b,0x9e,0x87,0x9a,0x56,0xe5,0xc6,0x84,0x7d,0x96,0x1c,0xf2,
    0xec,0xee,0x08,0xfb,0x4a,0xf6,0x29,0xf6,0x13,0xd0,0x3c,0x13,0xf1,0x8c,0xbb,0x0f,
    0x5f,0xc1,0x67,0xb1,0xaf,0x32,0xfc,0xfb,0xf1,0x17,0xbe,0xc4,0x9f,0x44,0x3c,0x17,
    0xfb,0x2d,0x8b,0x1a,0x55,0xb2,0xb2,0x83,0xfd,0xfd,0xff,0xca,0x0e,0x5e,0x33,0xee,
    0x21,0x9e,0x63,0x35,0xf9,0x65,0x5f,0x03,0x36,0x89,0x7e,0x26,0x53,0x8f,0xf8,0xd7,
    0x62,0xab,0x34,0xf6,0x69,0xa6,0x9f,0xe9,0x83,0xdc,0xc4,0x2e,0xd7,0x99,0xd4,0xab,
    0xfe,0x8d,0xcc,0xa2,0xee,0x17,0xf1,0x2c,0xee,0x0a,0xcc,0x65,0xf4,0xcb,0x11,0x1c,
    0x3c,0x5f,0xba,0x97,0x1c,0x4f,0x71,0xbf,0x8c,0x9a,0x65,0xbf,0xbc,0x20,0xc7,0x8a,
    0x82,0x7d,0x1b,0x1a,0x0a,0xff,0x79,0x6a,0xcc,0x1a,0xfb,0x1a,0x66,0x57,0xf7,0x1b,
    0xa8,0x43,0x9e,0xc1,0x36,0xee,0xd3,0xc6,0xbe,0x83,0x73,0xa2,0x33,0xb0,0xdb,0xe4,
    0x93,0xfd,0xbe,0xb8,0xdb,0xd0,0x28,0xfc,0xfd,0xe4,0xca,0x18,0xfe,0x41,0xce,0x94,
    0xee,0x8f,0x15,0x68,0x7e,0x9a,0x33,0x22,0xf5,0x5e,0x20,0xf7,0x7e,0xfa,0xbd,0xc0,
    0x7b,0x25,0x1d,0xb5,0x2f,0x8a,0x7d,0x65,0xc8,0x2f,0xd8,0x40,0x40,0x44,0xdf,0x1c,
    0xf3,0x36,0x91,0x99,0x5a,0x1c,0x2a,0x96,0x79,0x7a,0x00,0x6c,0xa2,0xd1,0xb7,0x9d,
    0x59,0x7d,0x10,0x7b,0x43,0x88,0x20,0xcf,0xfa,0x61,0xe6,0x61,0x32,0xf1,0xc4,0x67,
    0x0a,0xf8,0xa6,0xe0,0x23,0xfb,0x47,0xe0,0x4d,0x81,0x37,0x9d,0x73,0x5d,0xc3,0x6c,
    0xe4,0x98,0x83,0x47,0xc1,0x0f,0x04,0x9f,0x91,0xb1,0x97,0x04,0x93,0xf9,0xf8,0x33,
    0x54,0x9e,0xa3,0x9e,0x6b,0xc1,0x7f,0x16,0xef,0x81,0x1c,0xfd,0xc8,0xfd,0x92,0xc0,
    0x13,0x6d,0xe6,0x92,0x53,0x7e,0x6f,0xa0,0x57,0x03,0x78,0x4b,0x50,0x5f,0x6a,0x1a,
    0xeb,0x13,0x4c,0xfd,0xfe,0x0a,0x31,0x34,0x96,0x5c,0xaf,0x06,0x2d,0x62,0xed,0x3e,
    0xf1,0x29,0x82,0x53,0x6f,0x7a,0x98,0x47,0x0f,0x8d,0xa6,0x87,0xf9,0xe0,0xda,0xc3,
    0x02,0x30,0xed,0xa1,0xd9,0xf4,0xb0,0x20,0xbe,0x9b,0x5c,0xc4,0x24,0x6f,0x93,0xe9,
    0xe1,0x71,0x72,0x7b,0xd3,0xc3,0x42,0x70,0xed,0xe1,0x6e,0x9f,0x60,0xea,0x27,0x3d,
    0x68,0xac,0x66,0xd3,0x43,0x9d,0x4f,0x7c,0x72,0x70,0x9a,0x4c,0x0f,0x8b,0xe9,0x61,
    0x91,0xe9,0xe1,0x49,0x70,0xed,0x61,0x09,0x98,0xf6,0xd0,0x6a,0x7a,0x58,0x12,0xeb,
    0x71,0x11,0x93,0xbc,0x2d,0xcc,0x91,0xe4,0x5d,0x4a,0xee,0x3a,0x9f,0x3f,0x9f,0x52,
    0xa3,0xfa,0xb6,0x9a,0x1a,0xa7,0xe2,0xd7,0x0c,0xaf,0x85,0x7a,0xe4,0x0c,0x3f,0xcd,
    0xf9,0xd5,0x99,0x7b,0x86,0x9a,0x57,0x98,0x99,0x7b,0x16,0x7c,0x23,0x33,0xb7,0x12,
    0x6c,0xaa,0x4f,0x78,0x72,0xa6,0x5f,0x80,0xd7,0x06,0x4f,0x34,0x5d,0x0d,0xfe,0x5c,
    0xa8,0x43,0xce,0xc2,0x8b,0xe4,0x5b,0xc9,0xbc,0xac,0x36,0x5a,0xbd,0x04,0x7f,0x8d,
    0xd1,0xea,0x65,0x70,0xd5,0xea,0x15,0x30,0xd5,0xaa,0xdd,0x68,0x25,0xb6,0xb5,0xf1,
    0x2c,0x25,0xfd,0xaf,0xe5,0x79,0xcb,0xfb,0xe0,0x55,0x72,0x3b,0x78,0x57,0xb8,0xbf,
    0x1e,0xee,0x25,0xd6,0x4f,0x70,0xe4,0xda,0x43,0xae,0x9f,0xe1,0x8d,0x80,0xf3,0x87,
    0xc9,0x25,0xb6,0x4b,0x61,0x5d,0x86,0x77,0x39,0xbe,0x2f,0x4a,0x62,0xae,0x5f,0x39,
    0xd3,0x63,0xe1,0xcb,0xff,0xd7,0x5b,0xd4,0xf1,0x1b,0x76,0xb1,0x6d,0x06,0xfb,0x1d,
    0x7c,0x1c,0xcf,0xef,0x0a,0x31,0x2f,0x19,0xde,0x2f,0xc4,0x2a,0x2f,0xf0,0x91,0x9a,
    0xfe,0x0e,0xd9,0x06,0xc0,0xae,0x52,0xc3,0x34,0x9f,0xc4,0xbd,0x0c,0xf7,0x12,0x73,
    0x2d,0xcf,0x20,0xeb,0x13,0xbb,0xea,0xa1,0x1a,0xad,0x43,0x23,0x4f,0xbf,0x19,0xff,
    0x6f,0x8d,0x06,0xc8,0x39,0x60,0x34,0xba,0x06,0x4f,0x35,0x4a,0xfb,0xbc,0x46,0xd7,
    0x22,0xd7,0xb9,0x9b,0xf0,0x6e,0x1a,0x8d,0x9c,0xcf,0x6b,0xb4,0xae,0x40,0x23,0xcf,
    0x1f,0x8e,0xd5,0x28,0xe5,0x13,0x5c,0x35,0x92,0xda,0x24,0xe6,0x75,0xc3,0xbb,0x41,
    0xac,0xf2,0x02,0x1f,0xa9,0x49,0x35,0x12,0x4c,0x35,0x9a,0xe1,0x93,0xb8,0x37,0xe1,
    0x5e,0x37,0x1a,0x8d,0xf7,0x89,0x3d,0x4b,0x9d,0xaa,0xd1,0x7a,0x34,0x4a,0xd1,0x6f,
    0x45,0x81,0x46,0xa5,0xe4,0x94,0xab,0x6a,0x34,0xdc,0x27,0x3c,0xd5,0x68,0x8c,0xd1,
    0x48,0x6c,0x23,0xc2,0x2a,0x83,0x27,0x57,0xd5,0xe8,0x76,0xa3,0xd1,0xfa,0x02,0x8d,
    0xca,0x7d,0x62,0xb7,0x1a,0x8d,0xf6,0x09,0xae,0x1a,0x55,0x10,0x53,0xe2,0x2b,0x6f,
    0x14,0xb5,0x94,0x17,0xf8,0x8c,0x31,0x1a,0x55,0x18,0x8d,0x66,0xfa,0x24,0xae,0xd4,
    0x35,0x8a,0x5a,0x55,0xa3,0x2a,0x9f,0xd8,0x45,0xab,0x14,0xf1,0xf4,0xec,0xb5,0x33,
    0x8b,0xe2,0x57,0xcf,0xac,0xb5,0xc2,0xa9,0xf0,0xf9,0x33,0xbf,0x91,0x33,0xbf,0xc1,
    0x9c,0xf9,0x37,0xc1,0xf5,0xcc,0x6f,0x02,0xd3,0x33,0xbf,0xc5,0x9c,0xc3,0x4d,0xb1,
    0x7f,0xe7,0x3a,0xc8,0xdb,0x61,0xde,0x27,0xef,0x12,0x7b,0x87,0x89,0xfd,0x1e,0xb8,
    0xc6,0x7e,0x1f,0x4c,0x63,0x77,0x9a,0xd8,0x62,0xdb,0x19,0x56,0x27,0xb1,0x77,0x9a,
    0x39,0xd8,0x45,0x5f,0xf2,0x7f,0x7f,0x82,0x58,0x1f,0x80,0xef,0x46,0x0b,0xe5,0x75,
    0xa2,0x85,0xf8,0x7c,0x48,0xce,0x0e,0xfc,0x77,0x92,0xb7,0xdb,0xe4,0x15,0x9f,0xae,
    0xb0,0xba,0xe1,0x77,0x99,0xbc,0x1f,0x99,0xbc,0x8b,0xc3,0x17,0x8c,0x7c,0x1b,0x7d,
    0x0c,0x56,0xef,0xf3,0xdf,0x13,0xa9,0xf8,0x9f,0x52,0x1c,0xed,0x7b,0xe0,0xe9,0xda,
    0x16,0x62,0x09,0xbe,0x17,0xee,0x9e,0x18,0x6b,0x68,0x7c,0x56,0x9f,0x10,0x6b,0x2f,
    0xdf,0x34,0x45,0xe6,0xdb,0x4b,0x7a,0xd2,0x9a,0xba,0xcd,0xf3,0x9d,0x43,0xee,0x4e,
    0xf8,0x5d,0xf8,0x6e,0xc1,0x77,0xb3,0xa9,0x7f,0xeb,0x7f,0xd4,0xff,0xf6,0x2d,0xea,
    0xef,0xa0,0xce,0xed,0xf8,0x6c,0x35,0x75,0xbe,0x03,0x67,0xfb,0x2d,0xea,0xd4,0xdc,
    0x5b,0x4c,0x9d,0xb3,0x7d,0x52,0x6b,0x37,0xfc,0xcd,0xe4,0x10,0xdb,0xa7,0xd8,0xf7,
    0xf1,0x2d,0xb6,0x3f,0xce,0x48,0x82,0xeb,0x3c,0x7d,0xc6,0x3c,0x1d,0x34,0xf3,0x74,
    0x08,0x5c,0xe7,0xe9,0x73,0x30,0x9d,0xa7,0x23,0xe6,0xb9,0x8a,0xed,0x70,0x58,0x47,
    0xa9,0xed,0xa8,0x89,0x7d,0x9c,0xd8,0xc7,0x4c,0xec,0x2f,0xc1,0x35,0xf6,0x09,0x30,
    0x8d,0xdd,0x63,0x62,0x8b,0xed,0x64,0x58,0xa7,0x88,0x7d,0xca,0xe5,0xff,0x97,0xbf,
    0x26,0xf6,0x69,0xf3,0xbf,0xfc,0x0d,0xf8,0x19,0xbe,0x87,0xbe,0x05,0x6b,0x33,0xf9,
    0xce,0x80,0xaf,0x20,0x5f,0xaf,0xc9,0x27,0xb6,0xb3,0x61,0xf5,0x92,0xef,0x2c,0xef,
    0x4e,0xd1,0xad,0xc6,0x27,0x9c,0x03,0x2e,0xff,0xdd,0xa4,0x7e,0xbd,0x3c,0x0f,0xf1,
    0x9b,0xeb,0x13,0x9f,0x53,0x70,0xce,0x9a,0x7a,0xbe,0xa3,0x9e,0x69,0xa6,0x9e,0xef,
    0xc1,0xb5,0x9e,0x3e,0x53,0x8f,0xd8,0xce,0x85,0xd5,0x47,0x9e,0x73,0xa6,0x9e,0x5a,
    0xea,0x99,0x6b,0xde,0x53,0xea,0xd7,0x67,0xea,0x69,0xf0,0x89,0x4f,0x2f,0x9c,0x73,
    0xa6,0x9e,0x1f,0xa8,0xe7,0xa0,0xa9,0xe7,0x47,0x70,0xad,0xa7,0xdf,0xd4,0x23,0xb6,
    0xf3,0x61,0xf5,0x93,0xe7,0xbc,0xa9,0x67,0x8a,0x4f,0xbe,0xe7,0x1b,0x7c,0x7e,0x5e,
    0xd5,0xaf,0xdf,0xd4,0x33,0xcf,0x27,0x3e,0x7d,0x70,0xce,0xe3,0xdb,0x83,0xef,0x49,
    0xf3,0x3d,0xfb,0x15,0x7a,0xa7,0x4d,0x9e,0x6a,0x9f,0xc7,0x5d,0x01,0xb7,0xc7,0xe4,
    0x69,0xf4,0x49,0xae,0x7e,0x38,0x27,0xf1,0x3d,0x82,0xef,0x61,0xce,0x9d,0xf8,0x7e,
    0x41,0xbc,0x03,0x9c,0xbb,0x12,0xce,0x6a,0xba,0x80,0x73,0xc4,0xc4,0x7f,0xcc,0x27,
    0x39,0x7a,0xe0,0x4b,0xbc,0xd9,0x81,0x71,0x11,0xdb,0x8d,0x30,0x25,0x33,0xc2,0xfa,
    0x07,0x4d,0x4e,0x54,0x34,0x04,0x12,0x00,0x00
};

// Generated from:
//
// #version 450 core
//
// #extension GL_EXT_samplerless_texture_functions : require
//
// layout(set = 0, binding = 0)uniform texture2DMS src;
// layout(location = 0)out ivec4 dst;
//
// layout(push_constant)uniform PushConstants {
//
//     ivec2 srcOffset;
//     ivec2 dstOffset;
//     int srcMip;
//     int srcLayer;
//
//     bool flipX;
//     bool flipY;
//
//     bool premultiplyAlpha;
//     bool unmultiplyAlpha;
//
//     bool dstHasLuminance;
//     bool dstIsAlpha;
//
//     bool srcIsSRGB;
//     bool dstIsSRGB;
//
//     int dstDefaultChannelsMask;
//     bool rotateXY;
// } params;
//
// float linearToSRGB(float linear)
// {
//
//     if(linear <= 0.0031308)
//     {
//         return linear * 12.92;
//     }
//     else
//     {
//         return pow(linear,(1.0f / 2.4f))* 1.055f - 0.055f;
//     }
// }
//
// void main()
// {
//     ivec2 dstSubImageCoords = ivec2(gl_FragCoord . xy)- params . dstOffset;
//
//     ivec2 srcSubImageCoords = dstSubImageCoords;
//
//     if(params . flipX)
//     {
//         srcSubImageCoords . x = - srcSubImageCoords . x;
//     }
//     if(params . flipY)
//     {
//         srcSubImageCoords . y = - srcSubImageCoords . y;
//     }
//     if(params . rotateXY)
//     {
//         srcSubImageCoords . xy = srcSubImageCoords . yx;
//     }
//
//           vec4 srcValue = texelFetch(src, ivec2(params . srcOffset + srcSubImageCoords), params . srcMip);
//
//     if(params . srcIsSRGB)
//     {
//
//         srcValue . r = linearToSRGB(srcValue . r);
//         srcValue . g = linearToSRGB(srcValue . g);
//         srcValue . b = linearToSRGB(srcValue . b);
//     }
//
//     if(params . premultiplyAlpha)
//     {
//         srcValue . rgb *= srcValue . a;
//     }
//     else if(params . unmultiplyAlpha && srcValue . a > 0)
//     {
//         srcValue . rgb /= srcValue . a;
//     }
//
//     srcValue *= 255.0;
//
//            ivec4 dstValue = ivec4(srcValue);
//
//     if(params . dstHasLuminance)
//     {
//         dstValue . rg = dstValue . ra;
//     }
//     else if(params . dstIsAlpha)
//     {
//         dstValue . r = dstValue . a;
//     }
//     else
//     {
//         int defaultChannelsMask = params . dstDefaultChannelsMask;
//         if((defaultChannelsMask & 2)!= 0)
//         {
//             dstValue . g = 0;
//         }
//         if((defaultChannelsMask & 4)!= 0)
//         {
//             dstValue . b = 0;
//         }
//         if((defaultChannelsMask & 8)!= 0)
//         {
//             dstValue . a = 1;
//         }
//     }
//
//     dst = dstValue;
// }
