// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/ImageCopy.frag.00000041.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kImageCopy_frag_00000041[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x7d,0x96,0xd9,0x6f,0x55,0x55,
    0x14,0xc6,0xf7,0xbe,0xf7,0xb6,0x65,0x9e,0xca,0x50,0xb1,0xd1,0x96,0xc9,0x2a,0x58,
    0x2a,0x42,0x8b,0x40,0x2b,0xa5,0x40,0x9b,0x88,0x20,0x6d,0x48,0x40,0x44,0xd2,0x04,
    0x14,0x44,0x86,0x04,0x1f,0x78,0x42,0x19,0x15,0x23,0x0a,0x2a,0x8d,0x28,0x8d,0x11,
    0x22,0x91,0x18,0xaa,0xc2,0x83,0x80,0xd0,0x18,0x82,0x13,0x4d,0x94,0x26,0x42,0x23,
    0x7f,0x81,0x91,0x48,0x1c,0x20,0x22,0xda,0xe0,0x5e,0x67,0xff,0x56,0xef,0xf2,0x46,
    0xbc,0xc9,0xce,0x39,0xfb,0x5b,0xeb,0x5b,0xc3,0x77,0xd6,0x3e,0xf7,0xa4,0x53,0xa3,
    0x0b,0x9c,0xf3,0xae,0x8f,0xeb,0xe5,0xea,0xbd,0x4b,0x7e,0x83,0x5d,0xca,0xc9,0x6d,
    0x5f,0x97,0x9f,0x5c,0xeb,0xe7,0x35,0xcd,0x2b,0xdf,0xf8,0xdc,0x8a,0xf2,0xc9,0x53,
    0x2a,0xc4,0x3e,0xc0,0xa5,0x13,0x3f,0xb1,0x0d,0x74,0x05,0x2e,0x13,0xae,0xb2,0xd6,
    0x36,0xaf,0x5e,0x27,0xf8,0xb8,0xb0,0x2e,0x87,0x35,0x28,0xf8,0x09,0x5e,0x20,0x31,
    0xc2,0xdd,0xb8,0x24,0xa6,0x70,0x9c,0x6b,0x70,0x79,0x6e,0x42,0x4c,0xe7,0x46,0x73,
    0x55,0xcc,0x83,0xf5,0x32,0x58,0x0a,0x6c,0x90,0xc1,0xd2,0x60,0x43,0x0d,0x96,0x01,
    0x2b,0x32,0x58,0x1e,0x58,0xb1,0xc1,0xf2,0xc1,0x4a,0x0c,0x56,0x00,0x36,0xc6,0x60,
    0xbd,0xc0,0xca,0x0c,0xd6,0x1b,0x6c,0x82,0xc1,0xfa,0x80,0x55,0x18,0xac,0x2f,0xd8,
    0x64,0x83,0xf5,0x03,0x9b,0x6a,0xb0,0xfe,0x60,0x33,0x12,0x9d,0xd2,0x3d,0xfd,0x8a,
    0x66,0x4b,0xc3,0x75,0x14,0xfa,0xe8,0xbe,0xd4,0xec,0x45,0xe7,0xbb,0xd8,0x17,0x06,
    0x56,0x2a,0xb1,0xa7,0x13,0x6d,0xe4,0x7e,0x78,0xb8,0xcb,0xa7,0xcf,0xf1,0xc1,0x3f,
    0x9f,0x7c,0xc5,0xe5,0x8f,0x4e,0x1f,0x1a,0x3c,0x06,0x18,0xbc,0x30,0xac,0xc6,0x13,
    0xf3,0x6b,0x75,0x2f,0x1a,0x2e,0x5a,0x74,0xb1,0x46,0xf7,0x23,0xc3,0xaa,0xee,0xf3,
    0xe2,0xc3,0xba,0x17,0x3d,0xdb,0xea,0x9b,0xab,0x87,0x85,0x7d,0x09,0x39,0xe4,0xd9,
    0x8d,0x08,0xfb,0x52,0xf6,0x29,0xf6,0x63,0xd0,0x3c,0x93,0xe0,0x19,0x37,0x16,0x5f,
    0xc1,0xa7,0xb3,0x1f,0x67,0xf8,0xf7,0xe0,0x2f,0x7c,0x89,0x3f,0x9e,0x78,0x2e,0xe9,
    0x77,0x50,0xa2,0x51,0x29,0xab,0xa4,0xa7,0xbf,0xff,0x5f,0x25,0x3d,0xd7,0x8c,0xbb,
    0x9f,0xe7,0x38,0x81,0xfc,0xb2,0x2f,0x07,0x1b,0x4f,0x3f,0x13,0xa9,0x47,0xfc,0x2b,
    0xb0,0x95,0x1a,0x7b,0xa5,0xe9,0xa7,0xaa,0x87,0x1b,0xed,0x72,0x9d,0x46,0xbd,0xea,
    0x5f,0xc7,0x2c,0xea,0x7e,0x3e,0xcf,0xe2,0x8e,0xc0,0x5c,0x4c,0xbf,0x1c,0xc1,0x9e,
    0xf3,0xa5,0xfb,0x3b,0xc3,0x73,0x5c,0x12,0xae,0x8b,0xc9,0xf7,0x38,0xf8,0x12,0xea,
    0x97,0xfd,0xd2,0x9c,0x7c,0xcb,0x72,0xf6,0x2b,0xd1,0x53,0xf8,0x4f,0x51,0x6f,0x89,
    0xb1,0xaf,0x61,0x8e,0x75,0xbf,0x85,0x9a,0xe4,0x79,0xbc,0xcc,0x7d,0xda,0xd8,0xf7,
    0x72,0x66,0x74,0x1e,0xf6,0x9b,0x7c,0xb2,0x3f,0x9c,0xec,0x9e,0xaf,0x13,0xfe,0x11,
    0x72,0x65,0x0c,0xbf,0x8d,0xf3,0xa5,0xfb,0x93,0x39,0xfa,0x9f,0xe3,0xbc,0x48,0xbd,
    0x3f,0x90,0xfb,0x08,0xfd,0xfe,0xc0,0x3b,0x26,0x9d,0x3c,0x87,0xbc,0xa4,0xaf,0x0c,
    0xf9,0x05,0xbb,0x11,0x10,0xd1,0xba,0x9a,0xd9,0x2b,0x63,0xbe,0x16,0x84,0x8a,0x65,
    0xb6,0xee,0x05,0x2b,0x33,0x5a,0xaf,0x63,0x6e,0xef,0xc3,0x5e,0x1b,0x22,0xc8,0x73,
    0x7f,0x80,0xd9,0x98,0x48,0x3c,0xf1,0x99,0x04,0xbe,0x35,0xf8,0xc8,0xfe,0x41,0x78,
    0x93,0xe0,0x55,0x71,0xc6,0xcb,0x99,0x93,0x6a,0x66,0xe2,0x21,0xf0,0x0f,0x83,0xcf,
    0x80,0xa4,0x97,0x88,0xc9,0xac,0xfc,0x11,0x2a,0xaf,0xa6,0x9e,0x9b,0xc1,0x7f,0x3a,
    0xef,0x84,0x6a,0xfa,0x91,0xfb,0x85,0x81,0x27,0xda,0xcc,0x24,0xa7,0xfc,0x36,0xa3,
    0x57,0x2d,0x78,0x63,0x50,0x5f,0x6a,0x2a,0xf6,0x11,0x53,0xbf,0x3f,0x43,0x0c,0x8d,
    0x25,0xd7,0xeb,0x41,0x0b,0xf1,0x9b,0xe2,0xa3,0x4f,0x1e,0x9c,0x19,0xa6,0x87,0xd9,
    0xf4,0x50,0x67,0x7a,0x98,0x03,0xae,0x3d,0xcc,0x05,0xd3,0x1e,0x1a,0x4c,0x0f,0x73,
    0x93,0xf7,0x94,0x4b,0x30,0xc9,0x5b,0x6f,0x7a,0x78,0x84,0xdc,0xde,0xf4,0x30,0x0f,
    0x5c,0x7b,0xb8,0xdb,0x47,0x4c,0xfd,0xa4,0x07,0x8d,0xd5,0x60,0x7a,0xa8,0xf4,0xd1,
    0xa7,0x1a,0x4e,0xbd,0xe9,0x61,0x01,0x3d,0xcc,0x37,0x3d,0x3c,0x06,0xae,0x3d,0x2c,
    0x04,0xd3,0x1e,0x9a,0x4c,0x0f,0x0b,0x93,0x7a,0x5c,0x82,0x49,0xde,0x46,0xe6,0x48,
    0xf2,0x2e,0x22,0x77,0xa5,0xcf,0x9e,0x55,0xa9,0x51,0x7d,0x9b,0x4c,0x8d,0x55,0xf8,
    0x35,0xc0,0x6b,0xa4,0x1e,0x39,0xc3,0x4f,0x70,0x7e,0x75,0xe6,0x9e,0xa4,0xe6,0x65,
    0x66,0xe6,0x96,0x83,0xbf,0xc0,0xcc,0x35,0x83,0x55,0xf9,0xc8,0x93,0x33,0xfd,0x34,
    0xbc,0x95,0xf0,0x44,0xd3,0x55,0xe0,0x2b,0xc2,0x5e,0xde,0x1f,0xab,0xc9,0xb7,0x3c,
    0xd4,0x25,0x67,0xe3,0x19,0xb0,0x66,0xe6,0x67,0x95,0xd1,0xee,0x59,0xe2,0xad,0x31,
    0xda,0xad,0x05,0x57,0xed,0xd6,0x81,0xa9,0x76,0x1b,0x8c,0x76,0x62,0x5b,0x1f,0xd6,
    0x06,0xf4,0x58,0xcf,0xf3,0x97,0xf7,0xc3,0x46,0x72,0x3b,0x78,0xd7,0xb8,0xff,0x2b,
    0xdc,0x4b,0xac,0x1f,0xe1,0xc8,0xf5,0x34,0xb9,0x7e,0x82,0xd7,0x1f,0xce,0xef,0x26,
    0x97,0xd8,0xae,0x84,0x75,0x15,0xde,0xd5,0xe4,0xfd,0x51,0x90,0xe4,0xfa,0x85,0x33,
    0x3e,0x12,0xbe,0xfc,0xb7,0xed,0xa0,0x8e,0x5f,0xb1,0x8b,0x6d,0x1b,0xd8,0x6f,0xe0,
    0xc5,0x3c,0xcf,0x6b,0xc4,0xbc,0x62,0x78,0x3f,0x13,0xab,0x30,0xc7,0x47,0x6a,0xba,
    0x15,0xb2,0xdd,0x00,0xbb,0x4e,0x0d,0x53,0x7d,0x8c,0x7b,0x15,0xee,0x15,0xe6,0x5c,
    0x9e,0xc1,0x28,0x1f,0xed,0xaa,0x87,0x6a,0xb4,0x09,0x8d,0x3c,0xfd,0xe6,0xfb,0x7f,
    0x6b,0x74,0x93,0x9c,0x37,0x8d,0x46,0x7f,0xc3,0x53,0x8d,0xf2,0x7c,0x56,0x23,0xb1,
    0x75,0xf3,0xc2,0x13,0x9e,0x5c,0x55,0xa3,0x94,0xcf,0x6a,0xb4,0x29,0x47,0xa3,0xb4,
    0x8f,0x76,0xab,0x51,0xc6,0x47,0x5c,0x35,0xca,0x27,0x66,0xb7,0xe1,0xdd,0x22,0x56,
    0x61,0x8e,0x8f,0xd4,0xa4,0x1a,0x09,0xa6,0x1a,0x4d,0xf3,0x31,0xae,0xf3,0x91,0xdb,
    0x6d,0x34,0x1a,0xeb,0xa3,0x7d,0x14,0x75,0xaa,0x46,0x9b,0xd1,0x28,0x45,0xbf,0x45,
    0x39,0x1a,0xf5,0x23,0xa7,0x5c,0x55,0xa3,0x01,0x3e,0xf2,0x54,0xa3,0x11,0x46,0x23,
    0xb1,0x0d,0x0c,0x6b,0x08,0xbc,0x21,0x46,0xa3,0xa1,0x46,0xa3,0xcd,0x39,0x1a,0x0d,
    0xf3,0xd1,0x6e,0x35,0x1a,0xee,0x23,0xae,0x1a,0x15,0x11,0x53,0xe2,0x2b,0x6f,0x30,
    0xb5,0x14,0xe6,0xf8,0x8c,0x30,0x1a,0x15,0x19,0x8d,0x66,0xf8,0x18,0x57,0xea,0x1a,
    0x4c,0xad,0xaa,0x51,0x99,0x8f,0x76,0xd1,0x2a,0x45,0x3c,0x3d,0x7b,0x1b,0x98,0x45,
    0xf1,0xab,0x61,0xd6,0x9a,0xe0,0x14,0xf9,0xec,0x99,0xdf,0xca,0x99,0xdf,0x62,0xce,
    0xfc,0x36,0x70,0x3d,0xf3,0xdb,0xc1,0xf4,0xcc,0xef,0x34,0xe7,0x70,0x7b,0xa2,0x89,
    0x73,0x7b,0xc8,0xbb,0xc7,0xbc,0x4f,0x5e,0x27,0xf6,0x5e,0x13,0xfb,0x0d,0x70,0x8d,
    0xfd,0x26,0x98,0xc6,0x6e,0x31,0xb1,0xc5,0xb6,0x2f,0xac,0x16,0x62,0xef,0x33,0x73,
    0xf0,0x16,0x7d,0xc9,0xff,0xff,0x29,0x62,0xbd,0x0d,0xbe,0x1f,0x2d,0x94,0xd7,0x82,
    0x16,0xe2,0xf3,0x0e,0x39,0xf7,0xe0,0xbf,0x8f,0xbc,0xad,0x26,0xaf,0xf8,0x1c,0x08,
    0xab,0x15,0xfe,0x01,0x93,0xf7,0x5d,0x93,0x77,0x41,0xf8,0xa2,0x91,0x6f,0xa5,0xf7,
    0xc0,0x6a,0x7c,0xf6,0xfb,0x22,0x95,0xfc,0xc7,0xe4,0x27,0xf6,0x83,0xf0,0x74,0xbd,
    0x14,0x62,0x09,0x7e,0x08,0xee,0xc1,0x24,0x56,0xef,0xe4,0x59,0xbd,0x4f,0xac,0x43,
    0x7c,0xe3,0xe4,0x99,0x6f,0x31,0xe9,0x49,0x6b,0x6a,0x35,0xcf,0xb7,0x96,0xdc,0x2d,
    0xf0,0x0f,0xe0,0xbb,0x13,0xdf,0x1d,0xa6,0xfe,0x5d,0xff,0x51,0xff,0x2b,0xb7,0xa9,
    0xff,0x55,0xea,0xdc,0x8d,0xcf,0x2e,0x53,0xe7,0x6b,0x70,0x76,0xdf,0xa6,0x4e,0xcd,
    0xbd,0xd3,0xd4,0x39,0xd3,0xc7,0x5a,0x5b,0xe1,0xef,0x20,0x87,0xd8,0x3e,0xc0,0x7e,
    0x98,0x6f,0x33,0xf9,0xf6,0x3b,0x0a,0xae,0xf3,0xf4,0x11,0xf3,0xd4,0x66,0xe6,0xe9,
    0x63,0x70,0x9d,0xa7,0x4f,0xc0,0x74,0x9e,0x8e,0x9b,0xe7,0x2a,0xb6,0x63,0x61,0x9d,
    0xa0,0xb6,0x13,0x26,0xf6,0x29,0x62,0x9f,0x34,0xb1,0x3f,0x03,0xd7,0xd8,0xa7,0xc1,
    0x34,0x76,0xbb,0x89,0x2d,0xb6,0x33,0x61,0x9d,0x25,0xf6,0x59,0x97,0xfd,0x9f,0xfe,
    0x82,0xd8,0xe7,0xcc,0xff,0xf4,0x97,0xe0,0x5f,0xf1,0x7d,0xf4,0x35,0xd8,0x4a,0x93,
    0xef,0x1b,0xf0,0x65,0xe4,0xeb,0x30,0xf9,0xc4,0x76,0x3e,0xac,0x0e,0xf2,0x9d,0xe7,
    0xdd,0x29,0xba,0x55,0xf8,0xc8,0x39,0xea,0xb2,0xdf,0x51,0xea,0xd7,0xc1,0xf3,0x10,
    0xbf,0x59,0x3e,0xfa,0x9c,0x85,0x73,0xde,0xd4,0xf3,0x2d,0xf5,0x54,0x9a,0x7a,0xbe,
    0x03,0xd7,0x7a,0x3a,0x4d,0x3d,0x62,0xbb,0x10,0x56,0x27,0x79,0x2e,0x98,0x7a,0x26,
    0x51,0xcf,0x2c,0xf3,0x9e,0x52,0xbf,0x4e,0x53,0x4f,0x9d,0x8f,0x3e,0x1d,0x70,0x2e,
    0x98,0x7a,0xbe,0xa7,0x9e,0x36,0x53,0xcf,0x45,0x70,0xad,0xa7,0xcb,0xd4,0x23,0xb6,
    0x4b,0x61,0x75,0x91,0xe7,0x92,0xa9,0x67,0xb2,0x8f,0xdf,0xf7,0x75,0x3e,0x3b,0xaf,
    0xea,0xd7,0x65,0xea,0x99,0xeb,0xa3,0x4f,0x27,0x9c,0x4b,0xf8,0xb6,0xe3,0x7b,0xc6,
    0x7c,0xdf,0x7e,0x8e,0xde,0x69,0x93,0xa7,0xdc,0x67,0x71,0x97,0xc3,0x6d,0x37,0x79,
    0xe6,0xf8,0x98,0xab,0x0b,0xce,0x19,0x7c,0x8f,0xe3,0x7b,0x8c,0x73,0x27,0xbe,0x9f,
    0x12,0xef,0x28,0xe7,0xae,0x80,0xb3,0x9a,0xce,0xe1,0x1c,0x37,0xf1,0x67,0xfb,0x98,
    0xa3,0x1d,0xbe,0xc4,0xab,0x09,0x8c,0xcb,0xd8,0xba,0xc3,0x94,0x4c,0x0d,0xeb,0x1f,
    0xdb,0x5c,0xc6,0xef,0x20,0x12,0x00,0x00
};

// Generated from:
//
// #version 450 core
//
// #extension GL_EXT_samplerless_texture_functions : require
//
// layout(set = 0, binding = 0)uniform sampler2DMS src;
// layout(location = 0)out ivec4 dst;
//
// layout(push_constant)uniform PushConstants {
//
//     ivec2 srcOffset;
//     ivec2 dstOffset;
//     int srcMip;
//     int srcLayer;
//
//     bool flipX;
//     bool flipY;
//
//     bool premultiplyAlpha;
//     bool unmultiplyAlpha;
//
//     bool dstHasLuminance;
//     bool dstIsAlpha;
//
//     bool srcIsSRGB;
//     bool dstIsSRGB;
//
//     int dstDefaultChannelsMask;
//     bool rotateXY;
// } params;
//
// float linearToSRGB(float linear)
// {
//
//     if(linear <= 0.0031308)
//     {
//         return linear * 12.92;
//     }
//     else
//     {
//         return pow(linear,(1.0f / 2.4f))* 1.055f - 0.055f;
//     }
// }
//
// void main()
// {
//     ivec2 dstSubImageCoords = ivec2(gl_FragCoord . xy)- params . dstOffset;
//
//     ivec2 srcSubImageCoords = dstSubImageCoords;
//
//     if(params . flipX)
//     {
//         srcSubImageCoords . x = - srcSubImageCoords . x;
//     }
//     if(params . flipY)
//     {
//         srcSubImageCoords . y = - srcSubImageCoords . y;
//     }
//     if(params . rotateXY)
//     {
//         srcSubImageCoords . xy = srcSubImageCoords . yx;
//     }
//
//           vec4 srcValue = texelFetch(src, ivec2(params . srcOffset + srcSubImageCoords), params . srcMip);
//
//     if(params . srcIsSRGB)
//     {
//
//         srcValue . r = linearToSRGB(srcValue . r);
//         srcValue . g = linearToSRGB(srcValue . g);
//         srcValue . b = linearToSRGB(srcValue . b);
//     }
//
//     if(params . premultiplyAlpha)
//     {
//         srcValue . rgb *= srcValue . a;
//     }
//     else if(params . unmultiplyAlpha && srcValue . a > 0)
//     {
//         srcValue . rgb /= srcValue . a;
//     }
//
//     srcValue *= 255.0;
//
//            ivec4 dstValue = ivec4(srcValue);
//
//     if(params . dstHasLuminance)
//     {
//         dstValue . rg = dstValue . ra;
//     }
//     else if(params . dstIsAlpha)
//     {
//         dstValue . r = dstValue . a;
//     }
//     else
//     {
//         int defaultChannelsMask = params . dstDefaultChannelsMask;
//         if((defaultChannelsMask & 2)!= 0)
//         {
//             dstValue . g = 0;
//         }
//         if((defaultChannelsMask & 4)!= 0)
//         {
//             dstValue . b = 0;
//         }
//         if((defaultChannelsMask & 8)!= 0)
//         {
//             dstValue . a = 1;
//         }
//     }
//
//     dst = dstValue;
// }
