	// 10.15.3802
	 #pragma once
const uint32_t kGenerateMipmap_comp_00000001[] = {
	0x07230203,0x00010000,0x0008000a,0x00000fa1,0x00000000,0x00020011,0x00000001,0x00020011,
	0x00000009,0x00020011,0x00000031,0x0006000b,0x00000001,0x4c534c47,0x6474732e,0x3035342e,
	0x00000000,0x0003000e,0x00000000,0x00000001,0x0007000f,0x00000005,0x00000004,0x6e69616d,
	0x00000000,0x000004f5,0x000004f7,0x00060010,0x00000004,0x00000011,0x00000100,0x00000001,
	0x00000001,0x00050048,0x000000d4,0x00000000,0x00000023,0x00000000,0x00050048,0x000000d4,
	0x00000001,0x00000023,0x00000004,0x00050048,0x000000d4,0x00000002,0x00000023,0x00000008,
	0x00030047,0x000000d4,0x00000002,0x00040047,0x000000e2,0x00000022,0x00000000,0x00040047,
	0x000000e2,0x00000021,0x00000001,0x00040047,0x000000ef,0x00000022,0x00000000,0x00040047,
	0x000000ef,0x00000021,0x00000000,0x00030047,0x000000ef,0x00000017,0x00040048,0x0000011c,
	0x00000000,0x00000017,0x00050048,0x0000011c,0x00000000,0x00000023,0x00000000,0x00030047,
	0x0000011c,0x00000003,0x00040047,0x0000011e,0x00000022,0x00000000,0x00040047,0x0000011e,
	0x00000021,0x00000002,0x00040047,0x000004f5,0x0000000b,0x0000001a,0x00040047,0x000004f7,
	0x0000000b,0x0000001d,0x00040047,0x00000506,0x0000000b,0x00000019,0x00020013,0x00000002,
	0x00030021,0x00000003,0x00000002,0x00040015,0x00000006,0x00000020,0x00000000,0x00040017,
	0x00000013,0x00000006,0x00000002,0x00040015,0x00000018,0x00000020,0x00000001,0x00040017,
	0x00000019,0x00000018,0x00000002,0x00030016,0x0000001b,0x00000010,0x00040017,0x0000001c,
	0x0000001b,0x00000004,0x00040020,0x00000024,0x00000007,0x0000001c,0x00020014,0x00000044,
	0x0004002b,0x00000018,0x000000aa,0x00000000,0x0004002b,0x00000006,0x000000b0,0x00000002,
	0x0004002b,0x00000006,0x000000b1,0x00000003,0x0004002b,0x00000006,0x000000b7,0x00000001,
	0x00030016,0x000000ce,0x00000020,0x00040017,0x000000cf,0x000000ce,0x00000002,0x0005001e,
	0x000000d4,0x00000006,0x00000006,0x000000cf,0x00040020,0x000000d5,0x00000009,0x000000d4,
	0x0004003b,0x000000d5,0x000000d6,0x00000009,0x0004002b,0x00000018,0x000000d7,0x00000002,
	0x00040020,0x000000d8,0x00000009,0x000000cf,0x00090019,0x000000df,0x000000ce,0x00000001,
	0x00000000,0x00000000,0x00000000,0x00000001,0x00000000,0x0003001b,0x000000e0,0x000000df,
	0x00040020,0x000000e1,0x00000000,0x000000e0,0x0004003b,0x000000e1,0x000000e2,0x00000000,
	0x00040017,0x000000e5,0x000000ce,0x00000004,0x0004002b,0x000000ce,0x000000e6,0x00000000,
	0x00090019,0x000000eb,0x000000ce,0x00000001,0x00000000,0x00000000,0x00000000,0x00000002,
	0x0000000a,0x0004002b,0x00000006,0x000000ec,0x0000000c,0x0004001c,0x000000ed,0x000000eb,
	0x000000ec,0x00040020,0x000000ee,0x00000000,0x000000ed,0x0004003b,0x000000ee,0x000000ef,
	0x00000000,0x0004002b,0x00000018,0x000000f0,0x00000005,0x00040020,0x000000f1,0x00000000,
	0x000000eb,0x0004002b,0x00000006,0x000000ff,0x00000010,0x0004001c,0x00000100,0x0000001c,
	0x000000ff,0x0004001c,0x00000101,0x00000100,0x000000ff,0x00040020,0x00000102,0x00000004,
	0x00000101,0x0004003b,0x00000102,0x00000103,0x00000004,0x00040020,0x00000106,0x00000004,
	0x0000001c,0x0004002b,0x0000001b,0x00000116,0x00003400,0x00040020,0x0000011a,0x00000004,
	0x00000006,0x0004003b,0x0000011a,0x0000011b,0x00000004,0x0003001e,0x0000011c,0x00000006,
	0x00040020,0x0000011d,0x00000002,0x0000011c,0x0004003b,0x0000011d,0x0000011e,0x00000002,
	0x00040020,0x0000011f,0x00000002,0x00000006,0x0004002b,0x00000006,0x00000121,0x00000000,
	0x0004002b,0x00000006,0x00000126,0x00000108,0x0005002c,0x00000013,0x0000017e,0x00000121,
	0x00000121,0x0005002c,0x00000013,0x00000184,0x00000121,0x000000b7,0x0005002c,0x00000013,
	0x0000018a,0x000000b7,0x00000121,0x0005002c,0x00000013,0x00000190,0x000000b7,0x000000b7,
	0x0004002b,0x00000006,0x000001a4,0x00000040,0x0004002b,0x00000006,0x000001b2,0x00000020,
	0x0004002b,0x00000006,0x000001bc,0x00000004,0x0004001c,0x000001bd,0x0000001c,0x000001bc,
	0x00040020,0x000001be,0x00000007,0x000001bd,0x0004002b,0x00000018,0x000001e4,0x00000001,
	0x0004002b,0x00000018,0x0000022f,0x00000003,0x0004002b,0x00000018,0x00000249,0x00000004,
	0x0004002b,0x00000018,0x00000283,0x00000008,0x0004002b,0x00000006,0x000002aa,0x00000008,
	0x0004002b,0x00000006,0x000003da,0x00000006,0x0004002b,0x00000006,0x0000044c,0x00000007,
	0x0004002b,0x00000018,0x000004b0,0x00000006,0x0004002b,0x00000018,0x000004b9,0x00000007,
	0x00040017,0x000004f3,0x00000006,0x00000003,0x00040020,0x000004f4,0x00000001,0x000004f3,
	0x0004003b,0x000004f4,0x000004f5,0x00000001,0x00040020,0x000004f6,0x00000001,0x00000006,
	0x0004003b,0x000004f6,0x000004f7,0x00000001,0x00040020,0x000004fe,0x00000009,0x00000006,
	0x0004002b,0x00000006,0x00000505,0x00000100,0x0006002c,0x000004f3,0x00000506,0x00000505,
	0x000000b7,0x000000b7,0x0005002c,0x00000013,0x00000f96,0x000001a4,0x000001a4,0x0005002c,
	0x00000013,0x00000f97,0x000001b2,0x000001b2,0x0005002c,0x00000013,0x00000f98,0x000000ff,
	0x000000ff,0x0005002c,0x00000013,0x00000f99,0x000002aa,0x000002aa,0x0005002c,0x00000013,
	0x00000f9a,0x000001bc,0x000001bc,0x0004002b,0x00000006,0x00000f9b,0x00000005,0x0005002c,
	0x00000013,0x00000f9c,0x000000b0,0x000000b0,0x0004002b,0x00000006,0x00000f9d,0x00000009,
	0x0004002b,0x00000006,0x00000f9e,0x0000000a,0x0004002b,0x00000006,0x00000f9f,0x0000000b,
	0x00050036,0x00000002,0x00000004,0x00000000,0x00000003,0x000200f8,0x00000005,0x0004003b,
	0x000001be,0x000005b2,0x00000007,0x0004003d,0x000004f3,0x000004f9,0x000004f5,0x0007004f,
	0x00000013,0x000004fa,0x000004f9,0x000004f9,0x00000000,0x00000001,0x0004003d,0x00000006,
	0x000004fc,0x000004f7,0x00050041,0x000004fe,0x000004ff,0x000000d6,0x000000aa,0x0004003d,
	0x00000006,0x00000500,0x000004ff,0x00050041,0x000004fe,0x00000502,0x000000d6,0x000001e4,
	0x0004003d,0x00000006,0x00000503,0x00000502,0x000300f7,0x00000561,0x00000000,0x000300fb,
	0x00000121,0x00000532,0x000200f8,0x00000532,0x00050089,0x00000006,0x00000534,0x000004fc,
	0x000001a4,0x0004007c,0x00000018,0x00000581,0x000000b0,0x0004007c,0x00000018,0x00000583,
	0x000000b1,0x000600cb,0x00000006,0x00000584,0x00000534,0x00000581,0x00000583,0x0004007c,
	0x00000018,0x0000058a,0x000000b7,0x000700c9,0x00000006,0x0000058b,0x00000584,0x00000534,
	0x000000aa,0x0000058a,0x000600cb,0x00000006,0x00000593,0x00000534,0x00000583,0x00000583,
	0x000600cb,0x00000006,0x0000059b,0x00000534,0x0000058a,0x00000581,0x000700c9,0x00000006,
	0x000005a2,0x00000593,0x0000059b,0x000000aa,0x00000581,0x000500c2,0x00000006,0x00000539,
	0x000004fc,0x000004b0,0x00050089,0x00000006,0x0000053a,0x00000539,0x000000b0,0x00050084,
	0x00000006,0x0000053b,0x000002aa,0x0000053a,0x00050080,0x00000006,0x0000053c,0x0000058b,
	0x0000053b,0x000500c2,0x00000006,0x00000540,0x000004fc,0x000004b9,0x00050084,0x00000006,
	0x00000541,0x000002aa,0x00000540,0x00050080,0x00000006,0x00000542,0x000005a2,0x00000541,
	0x000300f7,0x000006cc,0x00000000,0x000300fb,0x00000121,0x000005db,0x000200f8,0x000005db,
	0x00050084,0x00000013,0x000005de,0x000004fa,0x00000f96,0x0004007c,0x00000019,0x000005df,
	0x000005de,0x00050084,0x00000006,0x000005e1,0x0000053c,0x000000b0,0x0004007c,0x00000018,
	0x000005e2,0x000005e1,0x00050084,0x00000006,0x000005e4,0x00000542,0x000000b0,0x0004007c,
	0x00000018,0x000005e5,0x000005e4,0x00050050,0x00000019,0x000005e6,0x000005e2,0x000005e5,
	0x00050080,0x00000019,0x000005e7,0x000005df,0x000005e6,0x00050084,0x00000013,0x000005ea,
	0x000004fa,0x00000f97,0x0004007c,0x00000019,0x000005eb,0x000005ea,0x0004007c,0x00000018,
	0x000005ed,0x0000053c,0x0004007c,0x00000018,0x000005ef,0x00000542,0x00050050,0x00000019,
	0x000005f0,0x000005ed,0x000005ef,0x00050080,0x00000019,0x000005f1,0x000005eb,0x000005f0,
	0x0004007c,0x00000013,0x000005f3,0x000005e7,0x0004007c,0x00000019,0x000006d1,0x000005f3,
	0x0004006f,0x000000cf,0x000006d7,0x000006d1,0x00050041,0x000000d8,0x000006d8,0x000000d6,
	0x000000d7,0x0004003d,0x000000cf,0x000006d9,0x000006d8,0x00050085,0x000000cf,0x000006da,
	0x000006d7,0x000006d9,0x00050081,0x000000cf,0x000006dd,0x000006da,0x000006d9,0x0004003d,
	0x000000e0,0x000006de,0x000000e2,0x00070058,0x000000e5,0x000006e0,0x000006de,0x000006dd,
	0x00000002,0x000000e6,0x00040073,0x0000001c,0x000006e1,0x000006e0,0x00050041,0x00000024,
	0x000005f5,0x000005b2,0x000000aa,0x0003003e,0x000005f5,0x000006e1,0x0004003d,0x0000001c,
	0x000005f8,0x000005f5,0x00050041,0x000000f1,0x000006e4,0x000000ef,0x00000121,0x0004003d,
	0x000000eb,0x000006e5,0x000006e4,0x00040073,0x000000e5,0x000006e8,0x000005f8,0x00040063,
	0x000006e5,0x000005f1,0x000006e8,0x00050080,0x00000006,0x00000600,0x000005e1,0x000001b2,
	0x0004007c,0x00000018,0x00000601,0x00000600,0x00050050,0x00000019,0x00000605,0x00000601,
	0x000005e5,0x00050080,0x00000019,0x00000606,0x000005df,0x00000605,0x00050080,0x00000006,
	0x0000060c,0x0000053c,0x000000ff,0x0004007c,0x00000018,0x0000060d,0x0000060c,0x00050050,
	0x00000019,0x00000610,0x0000060d,0x000005ef,0x00050080,0x00000019,0x00000611,0x000005eb,
	0x00000610,0x0004007c,0x00000013,0x00000613,0x00000606,0x0004007c,0x00000019,0x000006ed,
	0x00000613,0x0004006f,0x000000cf,0x000006f3,0x000006ed,0x00050085,0x000000cf,0x000006f6,
	0x000006f3,0x000006d9,0x00050081,0x000000cf,0x000006f9,0x000006f6,0x000006d9,0x00070058,
	0x000000e5,0x000006fc,0x000006de,0x000006f9,0x00000002,0x000000e6,0x00040073,0x0000001c,
	0x000006fd,0x000006fc,0x00050041,0x00000024,0x00000615,0x000005b2,0x000001e4,0x0003003e,
	0x00000615,0x000006fd,0x0004003d,0x0000001c,0x00000618,0x00000615,0x0004003d,0x000000eb,
	0x00000701,0x000006e4,0x00040073,0x000000e5,0x00000704,0x00000618,0x00040063,0x00000701,
	0x00000611,0x00000704,0x00050080,0x00000006,0x00000623,0x000005e4,0x000001b2,0x0004007c,
	0x00000018,0x00000624,0x00000623,0x00050050,0x00000019,0x00000625,0x000005e2,0x00000624,
	0x00050080,0x00000019,0x00000626,0x000005df,0x00000625,0x00050080,0x00000006,0x0000062e,
	0x00000542,0x000000ff,0x0004007c,0x00000018,0x0000062f,0x0000062e,0x00050050,0x00000019,
	0x00000630,0x000005ed,0x0000062f,0x00050080,0x00000019,0x00000631,0x000005eb,0x00000630,
	0x0004007c,0x00000013,0x00000633,0x00000626,0x0004007c,0x00000019,0x00000709,0x00000633,
	0x0004006f,0x000000cf,0x0000070f,0x00000709,0x00050085,0x000000cf,0x00000712,0x0000070f,
	0x000006d9,0x00050081,0x000000cf,0x00000715,0x00000712,0x000006d9,0x00070058,0x000000e5,
	0x00000718,0x000006de,0x00000715,0x00000002,0x000000e6,0x00040073,0x0000001c,0x00000719,
	0x00000718,0x00050041,0x00000024,0x00000635,0x000005b2,0x000000d7,0x0003003e,0x00000635,
	0x00000719,0x0004003d,0x0000001c,0x00000638,0x00000635,0x0004003d,0x000000eb,0x0000071d,
	0x000006e4,0x00040073,0x000000e5,0x00000720,0x00000638,0x00040063,0x0000071d,0x00000631,
	0x00000720,0x00050050,0x00000019,0x00000646,0x00000601,0x00000624,0x00050080,0x00000019,
	0x00000647,0x000005df,0x00000646,0x00050050,0x00000019,0x00000652,0x0000060d,0x0000062f,
	0x00050080,0x00000019,0x00000653,0x000005eb,0x00000652,0x0004007c,0x00000013,0x00000655,
	0x00000647,0x0004007c,0x00000019,0x00000725,0x00000655,0x0004006f,0x000000cf,0x0000072b,
	0x00000725,0x00050085,0x000000cf,0x0000072e,0x0000072b,0x000006d9,0x00050081,0x000000cf,
	0x00000731,0x0000072e,0x000006d9,0x00070058,0x000000e5,0x00000734,0x000006de,0x00000731,
	0x00000002,0x000000e6,0x00040073,0x0000001c,0x00000735,0x00000734,0x00050041,0x00000024,
	0x00000657,0x000005b2,0x0000022f,0x0003003e,0x00000657,0x00000735,0x0004003d,0x0000001c,
	0x0000065a,0x00000657,0x0004003d,0x000000eb,0x00000739,0x000006e4,0x00040073,0x000000e5,
	0x0000073c,0x0000065a,0x00040063,0x00000739,0x00000653,0x0000073c,0x000500b2,0x00000044,
	0x0000065d,0x00000500,0x000000b7,0x000300f7,0x0000065f,0x00000000,0x000400fa,0x0000065d,
	0x0000065e,0x0000065f,0x000200f8,0x0000065e,0x000200f9,0x000006cc,0x000200f8,0x0000065f,
	0x000200f9,0x00000660,0x000200f8,0x00000660,0x000700f5,0x00000018,0x00000fa0,0x000000aa,
	0x0000065f,0x000006aa,0x000006a8,0x000500b1,0x00000044,0x00000663,0x00000fa0,0x00000249,
	0x000400f6,0x000006ab,0x000006a8,0x00000000,0x000400fa,0x00000663,0x00000664,0x000006ab,
	0x000200f8,0x00000664,0x00050041,0x00000024,0x00000668,0x000005b2,0x00000fa0,0x0004003d,
	0x0000001c,0x00000669,0x00000668,0x00060041,0x00000106,0x00000741,0x00000103,0x0000053c,
	0x00000542,0x0003003e,0x00000741,0x00000669,0x000400e0,0x000000b0,0x000000b0,0x00000126,
	0x000500b0,0x00000044,0x0000066d,0x000004fc,0x000001a4,0x000300f7,0x000006a6,0x00000000,
	0x000400fa,0x0000066d,0x0000066e,0x000006a6,0x000200f8,0x0000066e,0x00050080,0x00000006,
	0x00000679,0x000005e1,0x000000b7,0x00050080,0x00000006,0x00000683,0x000005e4,0x000000b7,
	0x00060041,0x00000106,0x00000772,0x00000103,0x000005e1,0x000005e4,0x0004003d,0x0000001c,
	0x00000773,0x00000772,0x00060041,0x00000106,0x00000778,0x00000103,0x00000679,0x000005e4,
	0x0004003d,0x0000001c,0x00000779,0x00000778,0x00060041,0x00000106,0x0000077e,0x00000103,
	0x000005e1,0x00000683,0x0004003d,0x0000001c,0x0000077f,0x0000077e,0x00060041,0x00000106,
	0x00000784,0x00000103,0x00000679,0x00000683,0x0004003d,0x0000001c,0x00000785,0x00000784,
	0x00050081,0x0000001c,0x0000078a,0x00000773,0x00000779,0x00050081,0x0000001c,0x0000078c,
	0x0000078a,0x0000077f,0x00050081,0x0000001c,0x0000078e,0x0000078c,0x00000785,0x0005008e,
	0x0000001c,0x0000078f,0x0000078e,0x00000116,0x0003003e,0x00000668,0x0000078f,0x00050084,
	0x00000013,0x00000690,0x000004fa,0x00000f98,0x0004007c,0x00000019,0x00000691,0x00000690,
	0x0005008b,0x00000018,0x00000694,0x00000fa0,0x000000d7,0x00050084,0x00000018,0x00000695,
	0x00000694,0x00000283,0x0004007c,0x00000006,0x00000696,0x00000695,0x00050080,0x00000006,
	0x00000697,0x0000053c,0x00000696,0x0004007c,0x00000018,0x00000698,0x00000697,0x00050087,
	0x00000018,0x0000069b,0x00000fa0,0x000000d7,0x00050084,0x00000018,0x0000069c,0x0000069b,
	0x00000283,0x0004007c,0x00000006,0x0000069d,0x0000069c,0x00050080,0x00000006,0x0000069e,
	0x00000542,0x0000069d,0x0004007c,0x00000018,0x0000069f,0x0000069e,0x00050050,0x00000019,
	0x000006a0,0x00000698,0x0000069f,0x00050080,0x00000019,0x000006a1,0x00000691,0x000006a0,
	0x0004003d,0x0000001c,0x000006a4,0x00000668,0x00050041,0x000000f1,0x00000792,0x000000ef,
	0x000000b7,0x0004003d,0x000000eb,0x00000793,0x00000792,0x00040073,0x000000e5,0x00000796,
	0x000006a4,0x00040063,0x00000793,0x000006a1,0x00000796,0x000200f9,0x000006a6,0x000200f8,
	0x000006a6,0x000400e0,0x000000b0,0x000000b0,0x00000126,0x000200f9,0x000006a8,0x000200f8,
	0x000006a8,0x00050080,0x00000018,0x000006aa,0x00000fa0,0x000001e4,0x000200f9,0x00000660,
	0x000200f8,0x000006ab,0x000500b0,0x00000044,0x000006ad,0x000004fc,0x000001a4,0x000300f7,
	0x000006cb,0x00000000,0x000400fa,0x000006ad,0x000006ae,0x000006cb,0x000200f8,0x000006ae,
	0x0004003d,0x0000001c,0x000006b4,0x000005f5,0x00060041,0x00000106,0x0000079c,0x00000103,
	0x0000053c,0x00000542,0x0003003e,0x0000079c,0x000006b4,0x00050080,0x00000006,0x000006b7,
	0x0000053c,0x000002aa,0x0004003d,0x0000001c,0x000006bb,0x00000615,0x00060041,0x00000106,
	0x000007a1,0x00000103,0x000006b7,0x00000542,0x0003003e,0x000007a1,0x000006bb,0x00050080,
	0x00000006,0x000006c0,0x00000542,0x000002aa,0x0004003d,0x0000001c,0x000006c2,0x00000635,
	0x00060041,0x00000106,0x000007a6,0x00000103,0x0000053c,0x000006c0,0x0003003e,0x000007a6,
	0x000006c2,0x0004003d,0x0000001c,0x000006c9,0x00000657,0x00060041,0x00000106,0x000007ab,
	0x00000103,0x000006b7,0x000006c0,0x0003003e,0x000007ab,0x000006c9,0x000200f9,0x000006cb,
	0x000200f8,0x000006cb,0x000200f9,0x000006cc,0x000200f8,0x000006cc,0x000300f7,0x000007f9,
	0x00000000,0x000300fb,0x00000121,0x000007c2,0x000200f8,0x000007c2,0x000500b2,0x00000044,
	0x000007c5,0x00000500,0x000000b0,0x000300f7,0x000007c7,0x00000000,0x000400fa,0x000007c5,
	0x000007c6,0x000007c7,0x000200f8,0x000007c6,0x000200f9,0x000007f9,0x000200f8,0x000007c7,
	0x000400e0,0x000000b0,0x000000b0,0x00000126,0x000500b0,0x00000044,0x00000808,0x000004fc,
	0x000001a4,0x000300f7,0x00000841,0x00000000,0x000400fa,0x00000808,0x00000809,0x00000841,
	0x000200f8,0x00000809,0x00050080,0x00000006,0x00000815,0x000005e1,0x000000b7,0x00050080,
	0x00000006,0x00000820,0x000005e4,0x000000b7,0x00060041,0x00000106,0x00000871,0x00000103,
	0x000005e1,0x000005e4,0x0004003d,0x0000001c,0x00000872,0x00000871,0x00060041,0x00000106,
	0x00000877,0x00000103,0x00000815,0x000005e4,0x0004003d,0x0000001c,0x00000878,0x00000877,
	0x00060041,0x00000106,0x0000087d,0x00000103,0x000005e1,0x00000820,0x0004003d,0x0000001c,
	0x0000087e,0x0000087d,0x00060041,0x00000106,0x00000883,0x00000103,0x00000815,0x00000820,
	0x0004003d,0x0000001c,0x00000884,0x00000883,0x00050081,0x0000001c,0x00000889,0x00000872,
	0x00000878,0x00050081,0x0000001c,0x0000088b,0x00000889,0x0000087e,0x00050081,0x0000001c,
	0x0000088d,0x0000088b,0x00000884,0x0005008e,0x0000001c,0x0000088e,0x0000088d,0x00000116,
	0x00050084,0x00000013,0x0000082d,0x000004fa,0x00000f99,0x0004007c,0x00000019,0x0000082e,
	0x0000082d,0x00050080,0x00000019,0x00000834,0x0000082e,0x000005f0,0x00050041,0x000000f1,
	0x00000891,0x000000ef,0x000000b0,0x0004003d,0x000000eb,0x00000892,0x00000891,0x00040073,
	0x000000e5,0x00000895,0x0000088e,0x00040063,0x00000892,0x00000834,0x00000895,0x00050089,
	0x00000006,0x0000083b,0x00000542,0x000000b0,0x00050080,0x00000006,0x0000083c,0x000005e1,
	0x0000083b,0x00060041,0x00000106,0x0000089a,0x00000103,0x0000083c,0x000005e4,0x0003003e,
	0x0000089a,0x0000088e,0x000200f9,0x00000841,0x000200f8,0x00000841,0x000500b2,0x00000044,
	0x000007d2,0x00000500,0x000000b1,0x000300f7,0x000007d4,0x00000000,0x000400fa,0x000007d2,
	0x000007d3,0x000007d4,0x000200f8,0x000007d3,0x000200f9,0x000007f9,0x000200f8,0x000007d4,
	0x000400e0,0x000000b0,0x000000b0,0x00000126,0x000500b0,0x00000044,0x000008a9,0x000004fc,
	0x000000ff,0x000300f7,0x000008e1,0x00000000,0x000400fa,0x000008a9,0x000008aa,0x000008e1,
	0x000200f8,0x000008aa,0x00050084,0x00000006,0x000008ac,0x0000053c,0x000001bc,0x00050084,
	0x00000006,0x000008b0,0x00000542,0x000001bc,0x00050080,0x00000006,0x000008b5,0x000008ac,
	0x000000b0,0x00050080,0x00000006,0x000008be,0x000008ac,0x000000b7,0x00050080,0x00000006,
	0x000008c1,0x000008b0,0x000000b0,0x00050080,0x00000006,0x000008c6,0x000008ac,0x000000b1,
	0x00060041,0x00000106,0x00000911,0x00000103,0x000008ac,0x000008b0,0x0004003d,0x0000001c,
	0x00000912,0x00000911,0x00060041,0x00000106,0x00000917,0x00000103,0x000008b5,0x000008b0,
	0x0004003d,0x0000001c,0x00000918,0x00000917,0x00060041,0x00000106,0x0000091d,0x00000103,
	0x000008be,0x000008c1,0x0004003d,0x0000001c,0x0000091e,0x0000091d,0x00060041,0x00000106,
	0x00000923,0x00000103,0x000008c6,0x000008c1,0x0004003d,0x0000001c,0x00000924,0x00000923,
	0x00050081,0x0000001c,0x00000929,0x00000912,0x00000918,0x00050081,0x0000001c,0x0000092b,
	0x00000929,0x0000091e,0x00050081,0x0000001c,0x0000092d,0x0000092b,0x00000924,0x0005008e,
	0x0000001c,0x0000092e,0x0000092d,0x00000116,0x00050084,0x00000013,0x000008ce,0x000004fa,
	0x00000f9a,0x0004007c,0x00000019,0x000008cf,0x000008ce,0x00050080,0x00000019,0x000008d5,
	0x000008cf,0x000005f0,0x00050041,0x000000f1,0x00000931,0x000000ef,0x000000b1,0x0004003d,
	0x000000eb,0x00000932,0x00000931,0x00040073,0x000000e5,0x00000935,0x0000092e,0x00040063,
	0x00000932,0x000008d5,0x00000935,0x00050080,0x00000006,0x000008dc,0x000008ac,0x00000542,
	0x00060041,0x00000106,0x0000093a,0x00000103,0x000008dc,0x000008b0,0x0003003e,0x0000093a,
	0x0000092e,0x000200f9,0x000008e1,0x000200f8,0x000008e1,0x000500b2,0x00000044,0x000007e0,
	0x00000500,0x000001bc,0x000300f7,0x000007e2,0x00000000,0x000400fa,0x000007e0,0x000007e1,
	0x000007e2,0x000200f8,0x000007e1,0x000200f9,0x000007f9,0x000200f8,0x000007e2,0x000400e0,
	0x000000b0,0x000000b0,0x00000126,0x000500b0,0x00000044,0x00000949,0x000004fc,0x000001bc,
	0x000300f7,0x0000098b,0x00000000,0x000400fa,0x00000949,0x0000094a,0x0000098b,0x000200f8,
	0x0000094a,0x00050084,0x00000006,0x0000094c,0x0000053c,0x000002aa,0x00050080,0x00000006,
	0x00000951,0x0000094c,0x000005e4,0x00050084,0x00000006,0x00000953,0x00000542,0x000002aa,
	0x00050080,0x00000006,0x00000958,0x0000094c,0x000001bc,0x00050080,0x00000006,0x0000095c,
	0x00000958,0x000005e4,0x00050080,0x00000006,0x00000964,0x0000094c,0x000000b7,0x00050080,
	0x00000006,0x00000967,0x00000964,0x000005e4,0x00050080,0x00000006,0x0000096a,0x00000953,
	0x000001bc,0x00050080,0x00000006,0x0000096f,0x0000094c,0x00000f9b,0x00050080,0x00000006,
	0x00000972,0x0000096f,0x000005e4,0x00060041,0x00000106,0x000009bb,0x00000103,0x00000951,
	0x00000953,0x0004003d,0x0000001c,0x000009bc,0x000009bb,0x00060041,0x00000106,0x000009c1,
	0x00000103,0x0000095c,0x00000953,0x0004003d,0x0000001c,0x000009c2,0x000009c1,0x00060041,
	0x00000106,0x000009c7,0x00000103,0x00000967,0x0000096a,0x0004003d,0x0000001c,0x000009c8,
	0x000009c7,0x00060041,0x00000106,0x000009cd,0x00000103,0x00000972,0x0000096a,0x0004003d,
	0x0000001c,0x000009ce,0x000009cd,0x00050081,0x0000001c,0x000009d3,0x000009bc,0x000009c2,
	0x00050081,0x0000001c,0x000009d5,0x000009d3,0x000009c8,0x00050081,0x0000001c,0x000009d7,
	0x000009d5,0x000009ce,0x0005008e,0x0000001c,0x000009d8,0x000009d7,0x00000116,0x00050084,
	0x00000013,0x0000097a,0x000004fa,0x00000f9c,0x0004007c,0x00000019,0x0000097b,0x0000097a,
	0x00050080,0x00000019,0x00000981,0x0000097b,0x000005f0,0x00050041,0x000000f1,0x000009db,
	0x000000ef,0x000001bc,0x0004003d,0x000000eb,0x000009dc,0x000009db,0x00040073,0x000000e5,
	0x000009df,0x000009d8,0x00040063,0x000009dc,0x00000981,0x000009df,0x00050080,0x00000006,
	0x00000988,0x0000053c,0x000005e4,0x00060041,0x00000106,0x000009e4,0x00000103,0x00000988,
	0x00000121,0x0003003e,0x000009e4,0x000009d8,0x000200f9,0x0000098b,0x000200f8,0x0000098b,
	0x000500b2,0x00000044,0x000007ee,0x00000500,0x00000f9b,0x000300f7,0x000007f0,0x00000000,
	0x000400fa,0x000007ee,0x000007ef,0x000007f0,0x000200f8,0x000007ef,0x000200f9,0x000007f9,
	0x000200f8,0x000007f0,0x000400e0,0x000000b0,0x000000b0,0x00000126,0x000500b0,0x00000044,
	0x000009f0,0x000004fc,0x000000b7,0x000300f7,0x000009f8,0x00000000,0x000400fa,0x000009f0,
	0x000009f1,0x000009f8,0x000200f8,0x000009f1,0x00060041,0x00000106,0x00000a28,0x00000103,
	0x00000121,0x00000121,0x0004003d,0x0000001c,0x00000a29,0x00000a28,0x00060041,0x00000106,
	0x00000a2e,0x00000103,0x000000b7,0x00000121,0x0004003d,0x0000001c,0x00000a2f,0x00000a2e,
	0x00060041,0x00000106,0x00000a34,0x00000103,0x000000b0,0x00000121,0x0004003d,0x0000001c,
	0x00000a35,0x00000a34,0x00060041,0x00000106,0x00000a3a,0x00000103,0x000000b1,0x00000121,
	0x0004003d,0x0000001c,0x00000a3b,0x00000a3a,0x00050081,0x0000001c,0x00000a40,0x00000a29,
	0x00000a2f,0x00050081,0x0000001c,0x00000a42,0x00000a40,0x00000a35,0x00050081,0x0000001c,
	0x00000a44,0x00000a42,0x00000a3b,0x0005008e,0x0000001c,0x00000a45,0x00000a44,0x00000116,
	0x0004007c,0x00000019,0x000009f4,0x000004fa,0x00050041,0x000000f1,0x00000a48,0x000000ef,
	0x00000f9b,0x0004003d,0x000000eb,0x00000a49,0x00000a48,0x00040073,0x000000e5,0x00000a4c,
	0x00000a45,0x00040063,0x00000a49,0x000009f4,0x00000a4c,0x000200f9,0x000009f8,0x000200f8,
	0x000009f8,0x000200f9,0x000007f9,0x000200f8,0x000007f9,0x000500b0,0x00000044,0x00000550,
	0x00000500,0x0000044c,0x000300f7,0x00000552,0x00000000,0x000400fa,0x00000550,0x00000551,
	0x00000552,0x000200f8,0x00000551,0x000200f9,0x00000561,0x000200f8,0x00000552,0x000500aa,
	0x00000044,0x00000a50,0x000004fc,0x00000121,0x000300f7,0x00000a53,0x00000000,0x000400fa,
	0x00000a50,0x00000a51,0x00000a53,0x000200f8,0x00000a51,0x00050041,0x0000011f,0x00000a5a,
	0x0000011e,0x000000aa,0x000700ea,0x00000006,0x00000a5b,0x00000a5a,0x000000b7,0x00000121,
	0x000000b7,0x0003003e,0x0000011b,0x00000a5b,0x000200f9,0x00000a53,0x000200f8,0x00000a53,
	0x000400e0,0x000000b0,0x000000b0,0x00000126,0x0004003d,0x00000006,0x00000a5f,0x0000011b,
	0x00050082,0x00000006,0x00000a57,0x00000503,0x000000b7,0x000500ab,0x00000044,0x00000a58,
	0x00000a5f,0x00000a57,0x000300f7,0x00000557,0x00000000,0x000400fa,0x00000a58,0x00000556,
	0x00000557,0x000200f8,0x00000556,0x000200f9,0x00000561,0x000200f8,0x00000557,0x000300f7,
	0x00000af8,0x00000000,0x000300fb,0x00000121,0x00000a83,0x000200f8,0x00000a83,0x00050084,
	0x00000006,0x00000a85,0x0000053c,0x000001bc,0x0004007c,0x00000018,0x00000a87,0x00000a85,
	0x00050084,0x00000006,0x00000a89,0x00000542,0x000001bc,0x0004007c,0x00000018,0x00000a8b,
	0x00000a89,0x00050050,0x00000019,0x00000a8c,0x00000a87,0x00000a8b,0x0004007c,0x00000013,
	0x00000a97,0x00000a8c,0x00050080,0x00000013,0x00000b05,0x00000a97,0x00000184,0x00050080,
	0x00000013,0x00000b0a,0x00000a97,0x0000018a,0x00050080,0x00000013,0x00000b0f,0x00000a97,
	0x00000190,0x0004007c,0x00000019,0x00000b23,0x00000a97,0x00050041,0x000000f1,0x00000b35,
	0x000000ef,0x000000f0,0x0004003d,0x000000eb,0x00000b36,0x00000b35,0x00050062,0x000000e5,
	0x00000b38,0x00000b36,0x00000b23,0x00040073,0x0000001c,0x00000b39,0x00000b38,0x0004007c,
	0x00000019,0x00000b26,0x00000b05,0x0004003d,0x000000eb,0x00000b3d,0x00000b35,0x00050062,
	0x000000e5,0x00000b3f,0x00000b3d,0x00000b26,0x00040073,0x0000001c,0x00000b40,0x00000b3f,
	0x0004007c,0x00000019,0x00000b29,0x00000b0a,0x0004003d,0x000000eb,0x00000b44,0x00000b35,
	0x00050062,0x000000e5,0x00000b46,0x00000b44,0x00000b29,0x00040073,0x0000001c,0x00000b47,
	0x00000b46,0x0004007c,0x00000019,0x00000b2c,0x00000b0f,0x0004003d,0x000000eb,0x00000b4b,
	0x00000b35,0x00050062,0x000000e5,0x00000b4d,0x00000b4b,0x00000b2c,0x00040073,0x0000001c,
	0x00000b4e,0x00000b4d,0x00050081,0x0000001c,0x00000b53,0x00000b39,0x00000b40,0x00050081,
	0x0000001c,0x00000b55,0x00000b53,0x00000b47,0x00050081,0x0000001c,0x00000b57,0x00000b55,
	0x00000b4e,0x0005008e,0x0000001c,0x00000b58,0x00000b57,0x00000116,0x00050041,0x000000f1,
	0x00000b5b,0x000000ef,0x000003da,0x0004003d,0x000000eb,0x00000b5c,0x00000b5b,0x00040073,
	0x000000e5,0x00000b5f,0x00000b58,0x00040063,0x00000b5c,0x000005e6,0x00000b5f,0x00050080,
	0x00000006,0x00000a9e,0x00000a85,0x000000b0,0x0004007c,0x00000018,0x00000a9f,0x00000a9e,
	0x00050050,0x00000019,0x00000aa4,0x00000a9f,0x00000a8b,0x00050080,0x00000006,0x00000aa7,
	0x000005e1,0x000000b7,0x0004007c,0x00000018,0x00000aa8,0x00000aa7,0x00050050,0x00000019,
	0x00000aad,0x00000aa8,0x000005e5,0x0004007c,0x00000013,0x00000aaf,0x00000aa4,0x00050080,
	0x00000013,0x00000b6c,0x00000aaf,0x00000184,0x00050080,0x00000013,0x00000b71,0x00000aaf,
	0x0000018a,0x00050080,0x00000013,0x00000b76,0x00000aaf,0x00000190,0x0004007c,0x00000019,
	0x00000b8a,0x00000aaf,0x0004003d,0x000000eb,0x00000b9d,0x00000b35,0x00050062,0x000000e5,
	0x00000b9f,0x00000b9d,0x00000b8a,0x00040073,0x0000001c,0x00000ba0,0x00000b9f,0x0004007c,
	0x00000019,0x00000b8d,0x00000b6c,0x0004003d,0x000000eb,0x00000ba4,0x00000b35,0x00050062,
	0x000000e5,0x00000ba6,0x00000ba4,0x00000b8d,0x00040073,0x0000001c,0x00000ba7,0x00000ba6,
	0x0004007c,0x00000019,0x00000b90,0x00000b71,0x0004003d,0x000000eb,0x00000bab,0x00000b35,
	0x00050062,0x000000e5,0x00000bad,0x00000bab,0x00000b90,0x00040073,0x0000001c,0x00000bae,
	0x00000bad,0x0004007c,0x00000019,0x00000b93,0x00000b76,0x0004003d,0x000000eb,0x00000bb2,
	0x00000b35,0x00050062,0x000000e5,0x00000bb4,0x00000bb2,0x00000b93,0x00040073,0x0000001c,
	0x00000bb5,0x00000bb4,0x00050081,0x0000001c,0x00000bba,0x00000ba0,0x00000ba7,0x00050081,
	0x0000001c,0x00000bbc,0x00000bba,0x00000bae,0x00050081,0x0000001c,0x00000bbe,0x00000bbc,
	0x00000bb5,0x0005008e,0x0000001c,0x00000bbf,0x00000bbe,0x00000116,0x0004003d,0x000000eb,
	0x00000bc3,0x00000b5b,0x00040073,0x000000e5,0x00000bc6,0x00000bbf,0x00040063,0x00000bc3,
	0x00000aad,0x00000bc6,0x00050080,0x00000006,0x00000aba,0x00000a89,0x000000b0,0x0004007c,
	0x00000018,0x00000abb,0x00000aba,0x00050050,0x00000019,0x00000abc,0x00000a87,0x00000abb,
	0x00050080,0x00000006,0x00000ac3,0x000005e4,0x000000b7,0x0004007c,0x00000018,0x00000ac4,
	0x00000ac3,0x00050050,0x00000019,0x00000ac5,0x000005e2,0x00000ac4,0x0004007c,0x00000013,
	0x00000ac7,0x00000abc,0x00050080,0x00000013,0x00000bd3,0x00000ac7,0x00000184,0x00050080,
	0x00000013,0x00000bd8,0x00000ac7,0x0000018a,0x00050080,0x00000013,0x00000bdd,0x00000ac7,
	0x00000190,0x0004007c,0x00000019,0x00000bf1,0x00000ac7,0x0004003d,0x000000eb,0x00000c04,
	0x00000b35,0x00050062,0x000000e5,0x00000c06,0x00000c04,0x00000bf1,0x00040073,0x0000001c,
	0x00000c07,0x00000c06,0x0004007c,0x00000019,0x00000bf4,0x00000bd3,0x0004003d,0x000000eb,
	0x00000c0b,0x00000b35,0x00050062,0x000000e5,0x00000c0d,0x00000c0b,0x00000bf4,0x00040073,
	0x0000001c,0x00000c0e,0x00000c0d,0x0004007c,0x00000019,0x00000bf7,0x00000bd8,0x0004003d,
	0x000000eb,0x00000c12,0x00000b35,0x00050062,0x000000e5,0x00000c14,0x00000c12,0x00000bf7,
	0x00040073,0x0000001c,0x00000c15,0x00000c14,0x0004007c,0x00000019,0x00000bfa,0x00000bdd,
	0x0004003d,0x000000eb,0x00000c19,0x00000b35,0x00050062,0x000000e5,0x00000c1b,0x00000c19,
	0x00000bfa,0x00040073,0x0000001c,0x00000c1c,0x00000c1b,0x00050081,0x0000001c,0x00000c21,
	0x00000c07,0x00000c0e,0x00050081,0x0000001c,0x00000c23,0x00000c21,0x00000c15,0x00050081,
	0x0000001c,0x00000c25,0x00000c23,0x00000c1c,0x0005008e,0x0000001c,0x00000c26,0x00000c25,
	0x00000116,0x0004003d,0x000000eb,0x00000c2a,0x00000b5b,0x00040073,0x000000e5,0x00000c2d,
	0x00000c26,0x00040063,0x00000c2a,0x00000ac5,0x00000c2d,0x00050050,0x00000019,0x00000ad4,
	0x00000a9f,0x00000abb,0x00050050,0x00000019,0x00000add,0x00000aa8,0x00000ac4,0x0004007c,
	0x00000013,0x00000adf,0x00000ad4,0x00050080,0x00000013,0x00000c3a,0x00000adf,0x00000184,
	0x00050080,0x00000013,0x00000c3f,0x00000adf,0x0000018a,0x00050080,0x00000013,0x00000c44,
	0x00000adf,0x00000190,0x0004007c,0x00000019,0x00000c58,0x00000adf,0x0004003d,0x000000eb,
	0x00000c6b,0x00000b35,0x00050062,0x000000e5,0x00000c6d,0x00000c6b,0x00000c58,0x00040073,
	0x0000001c,0x00000c6e,0x00000c6d,0x0004007c,0x00000019,0x00000c5b,0x00000c3a,0x0004003d,
	0x000000eb,0x00000c72,0x00000b35,0x00050062,0x000000e5,0x00000c74,0x00000c72,0x00000c5b,
	0x00040073,0x0000001c,0x00000c75,0x00000c74,0x0004007c,0x00000019,0x00000c5e,0x00000c3f,
	0x0004003d,0x000000eb,0x00000c79,0x00000b35,0x00050062,0x000000e5,0x00000c7b,0x00000c79,
	0x00000c5e,0x00040073,0x0000001c,0x00000c7c,0x00000c7b,0x0004007c,0x00000019,0x00000c61,
	0x00000c44,0x0004003d,0x000000eb,0x00000c80,0x00000b35,0x00050062,0x000000e5,0x00000c82,
	0x00000c80,0x00000c61,0x00040073,0x0000001c,0x00000c83,0x00000c82,0x00050081,0x0000001c,
	0x00000c88,0x00000c6e,0x00000c75,0x00050081,0x0000001c,0x00000c8a,0x00000c88,0x00000c7c,
	0x00050081,0x0000001c,0x00000c8c,0x00000c8a,0x00000c83,0x0005008e,0x0000001c,0x00000c8d,
	0x00000c8c,0x00000116,0x0004003d,0x000000eb,0x00000c91,0x00000b5b,0x00040073,0x000000e5,
	0x00000c94,0x00000c8d,0x00040063,0x00000c91,0x00000add,0x00000c94,0x000500b0,0x00000044,
	0x00000ae5,0x00000500,0x000002aa,0x000300f7,0x00000ae7,0x00000000,0x000400fa,0x00000ae5,
	0x00000ae6,0x00000ae7,0x000200f8,0x00000ae6,0x000200f9,0x00000af8,0x000200f8,0x00000ae7,
	0x00050081,0x0000001c,0x00000c99,0x00000b58,0x00000bbf,0x00050081,0x0000001c,0x00000c9b,
	0x00000c99,0x00000c26,0x00050081,0x0000001c,0x00000c9d,0x00000c9b,0x00000c8d,0x0005008e,
	0x0000001c,0x00000c9e,0x00000c9d,0x00000116,0x00050041,0x000000f1,0x00000ca1,0x000000ef,
	0x0000044c,0x0004003d,0x000000eb,0x00000ca2,0x00000ca1,0x00040073,0x000000e5,0x00000ca5,
	0x00000c9e,0x00040063,0x00000ca2,0x000005f0,0x00000ca5,0x00060041,0x00000106,0x00000caa,
	0x00000103,0x0000053c,0x00000542,0x0003003e,0x00000caa,0x00000c9e,0x000200f9,0x00000af8,
	0x000200f8,0x00000af8,0x000300f7,0x00000cf8,0x00000000,0x000300fb,0x00000121,0x00000cc1,
	0x000200f8,0x00000cc1,0x000500b2,0x00000044,0x00000cc4,0x00000500,0x000002aa,0x000300f7,
	0x00000cc6,0x00000000,0x000400fa,0x00000cc4,0x00000cc5,0x00000cc6,0x000200f8,0x00000cc5,
	0x000200f9,0x00000cf8,0x000200f8,0x00000cc6,0x000400e0,0x000000b0,0x000000b0,0x00000126,
	0x000500b0,0x00000044,0x00000d07,0x000004fc,0x000001a4,0x000300f7,0x00000d40,0x00000000,
	0x000400fa,0x00000d07,0x00000d08,0x00000d40,0x000200f8,0x00000d08,0x00060041,0x00000106,
	0x00000d70,0x00000103,0x000005e1,0x000005e4,0x0004003d,0x0000001c,0x00000d71,0x00000d70,
	0x00060041,0x00000106,0x00000d76,0x00000103,0x00000aa7,0x000005e4,0x0004003d,0x0000001c,
	0x00000d77,0x00000d76,0x00060041,0x00000106,0x00000d7c,0x00000103,0x000005e1,0x00000ac3,
	0x0004003d,0x0000001c,0x00000d7d,0x00000d7c,0x00060041,0x00000106,0x00000d82,0x00000103,
	0x00000aa7,0x00000ac3,0x0004003d,0x0000001c,0x00000d83,0x00000d82,0x00050081,0x0000001c,
	0x00000d88,0x00000d71,0x00000d77,0x00050081,0x0000001c,0x00000d8a,0x00000d88,0x00000d7d,
	0x00050081,0x0000001c,0x00000d8c,0x00000d8a,0x00000d83,0x0005008e,0x0000001c,0x00000d8d,
	0x00000d8c,0x00000116,0x00050084,0x00000013,0x00000d2c,0x0000017e,0x00000f99,0x0004007c,
	0x00000019,0x00000d2d,0x00000d2c,0x00050080,0x00000019,0x00000d33,0x00000d2d,0x000005f0,
	0x00050041,0x000000f1,0x00000d90,0x000000ef,0x000002aa,0x0004003d,0x000000eb,0x00000d91,
	0x00000d90,0x00040073,0x000000e5,0x00000d94,0x00000d8d,0x00040063,0x00000d91,0x00000d33,
	0x00000d94,0x00050089,0x00000006,0x00000d3a,0x00000542,0x000000b0,0x00050080,0x00000006,
	0x00000d3b,0x000005e1,0x00000d3a,0x00060041,0x00000106,0x00000d99,0x00000103,0x00000d3b,
	0x000005e4,0x0003003e,0x00000d99,0x00000d8d,0x000200f9,0x00000d40,0x000200f8,0x00000d40,
	0x000500b2,0x00000044,0x00000cd1,0x00000500,0x00000f9d,0x000300f7,0x00000cd3,0x00000000,
	0x000400fa,0x00000cd1,0x00000cd2,0x00000cd3,0x000200f8,0x00000cd2,0x000200f9,0x00000cf8,
	0x000200f8,0x00000cd3,0x000400e0,0x000000b0,0x000000b0,0x00000126,0x000500b0,0x00000044,
	0x00000da8,0x000004fc,0x000000ff,0x000300f7,0x00000de0,0x00000000,0x000400fa,0x00000da8,
	0x00000da9,0x00000de0,0x000200f8,0x00000da9,0x00050080,0x00000006,0x00000dbd,0x00000a85,
	0x000000b7,0x00050080,0x00000006,0x00000dc5,0x00000a85,0x000000b1,0x00060041,0x00000106,
	0x00000e10,0x00000103,0x00000a85,0x00000a89,0x0004003d,0x0000001c,0x00000e11,0x00000e10,
	0x00060041,0x00000106,0x00000e16,0x00000103,0x00000a9e,0x00000a89,0x0004003d,0x0000001c,
	0x00000e17,0x00000e16,0x00060041,0x00000106,0x00000e1c,0x00000103,0x00000dbd,0x00000aba,
	0x0004003d,0x0000001c,0x00000e1d,0x00000e1c,0x00060041,0x00000106,0x00000e22,0x00000103,
	0x00000dc5,0x00000aba,0x0004003d,0x0000001c,0x00000e23,0x00000e22,0x00050081,0x0000001c,
	0x00000e28,0x00000e11,0x00000e17,0x00050081,0x0000001c,0x00000e2a,0x00000e28,0x00000e1d,
	0x00050081,0x0000001c,0x00000e2c,0x00000e2a,0x00000e23,0x0005008e,0x0000001c,0x00000e2d,
	0x00000e2c,0x00000116,0x00050084,0x00000013,0x00000dcd,0x0000017e,0x00000f9a,0x0004007c,
	0x00000019,0x00000dce,0x00000dcd,0x00050080,0x00000019,0x00000dd4,0x00000dce,0x000005f0,
	0x00050041,0x000000f1,0x00000e30,0x000000ef,0x00000f9d,0x0004003d,0x000000eb,0x00000e31,
	0x00000e30,0x00040073,0x000000e5,0x00000e34,0x00000e2d,0x00040063,0x00000e31,0x00000dd4,
	0x00000e34,0x00050080,0x00000006,0x00000ddb,0x00000a85,0x00000542,0x00060041,0x00000106,
	0x00000e39,0x00000103,0x00000ddb,0x00000a89,0x0003003e,0x00000e39,0x00000e2d,0x000200f9,
	0x00000de0,0x000200f8,0x00000de0,0x000500b2,0x00000044,0x00000cdf,0x00000500,0x00000f9e,
	0x000300f7,0x00000ce1,0x00000000,0x000400fa,0x00000cdf,0x00000ce0,0x00000ce1,0x000200f8,
	0x00000ce0,0x000200f9,0x00000cf8,0x000200f8,0x00000ce1,0x000400e0,0x000000b0,0x000000b0,
	0x00000126,0x000500b0,0x00000044,0x00000e48,0x000004fc,0x000001bc,0x000300f7,0x00000e8a,
	0x00000000,0x000400fa,0x00000e48,0x00000e49,0x00000e8a,0x000200f8,0x00000e49,0x00050084,
	0x00000006,0x00000e4b,0x0000053c,0x000002aa,0x00050080,0x00000006,0x00000e50,0x00000e4b,
	0x000005e4,0x00050084,0x00000006,0x00000e52,0x00000542,0x000002aa,0x00050080,0x00000006,
	0x00000e57,0x00000e4b,0x000001bc,0x00050080,0x00000006,0x00000e5b,0x00000e57,0x000005e4,
	0x00050080,0x00000006,0x00000e63,0x00000e4b,0x000000b7,0x00050080,0x00000006,0x00000e66,
	0x00000e63,0x000005e4,0x00050080,0x00000006,0x00000e69,0x00000e52,0x000001bc,0x00050080,
	0x00000006,0x00000e6e,0x00000e4b,0x00000f9b,0x00050080,0x00000006,0x00000e71,0x00000e6e,
	0x000005e4,0x00060041,0x00000106,0x00000eba,0x00000103,0x00000e50,0x00000e52,0x0004003d,
	0x0000001c,0x00000ebb,0x00000eba,0x00060041,0x00000106,0x00000ec0,0x00000103,0x00000e5b,
	0x00000e52,0x0004003d,0x0000001c,0x00000ec1,0x00000ec0,0x00060041,0x00000106,0x00000ec6,
	0x00000103,0x00000e66,0x00000e69,0x0004003d,0x0000001c,0x00000ec7,0x00000ec6,0x00060041,
	0x00000106,0x00000ecc,0x00000103,0x00000e71,0x00000e69,0x0004003d,0x0000001c,0x00000ecd,
	0x00000ecc,0x00050081,0x0000001c,0x00000ed2,0x00000ebb,0x00000ec1,0x00050081,0x0000001c,
	0x00000ed4,0x00000ed2,0x00000ec7,0x00050081,0x0000001c,0x00000ed6,0x00000ed4,0x00000ecd,
	0x0005008e,0x0000001c,0x00000ed7,0x00000ed6,0x00000116,0x00050084,0x00000013,0x00000e79,
	0x0000017e,0x00000f9c,0x0004007c,0x00000019,0x00000e7a,0x00000e79,0x00050080,0x00000019,
	0x00000e80,0x00000e7a,0x000005f0,0x00050041,0x000000f1,0x00000eda,0x000000ef,0x00000f9e,
	0x0004003d,0x000000eb,0x00000edb,0x00000eda,0x00040073,0x000000e5,0x00000ede,0x00000ed7,
	0x00040063,0x00000edb,0x00000e80,0x00000ede,0x00050080,0x00000006,0x00000e87,0x0000053c,
	0x000005e4,0x00060041,0x00000106,0x00000ee3,0x00000103,0x00000e87,0x00000121,0x0003003e,
	0x00000ee3,0x00000ed7,0x000200f9,0x00000e8a,0x000200f8,0x00000e8a,0x000500b2,0x00000044,
	0x00000ced,0x00000500,0x00000f9f,0x000300f7,0x00000cef,0x00000000,0x000400fa,0x00000ced,
	0x00000cee,0x00000cef,0x000200f8,0x00000cee,0x000200f9,0x00000cf8,0x000200f8,0x00000cef,
	0x000400e0,0x000000b0,0x000000b0,0x00000126,0x000500b0,0x00000044,0x00000eef,0x000004fc,
	0x000000b7,0x000300f7,0x00000ef7,0x00000000,0x000400fa,0x00000eef,0x00000ef0,0x00000ef7,
	0x000200f8,0x00000ef0,0x00060041,0x00000106,0x00000f27,0x00000103,0x00000121,0x00000121,
	0x0004003d,0x0000001c,0x00000f28,0x00000f27,0x00060041,0x00000106,0x00000f2d,0x00000103,
	0x000000b7,0x00000121,0x0004003d,0x0000001c,0x00000f2e,0x00000f2d,0x00060041,0x00000106,
	0x00000f33,0x00000103,0x000000b0,0x00000121,0x0004003d,0x0000001c,0x00000f34,0x00000f33,
	0x00060041,0x00000106,0x00000f39,0x00000103,0x000000b1,0x00000121,0x0004003d,0x0000001c,
	0x00000f3a,0x00000f39,0x00050081,0x0000001c,0x00000f3f,0x00000f28,0x00000f2e,0x00050081,
	0x0000001c,0x00000f41,0x00000f3f,0x00000f34,0x00050081,0x0000001c,0x00000f43,0x00000f41,
	0x00000f3a,0x0005008e,0x0000001c,0x00000f44,0x00000f43,0x00000116,0x0004007c,0x00000019,
	0x00000ef3,0x0000017e,0x00050041,0x000000f1,0x00000f47,0x000000ef,0x00000f9f,0x0004003d,
	0x000000eb,0x00000f48,0x00000f47,0x00040073,0x000000e5,0x00000f4b,0x00000f44,0x00040063,
	0x00000f48,0x00000ef3,0x00000f4b,0x000200f9,0x00000ef7,0x000200f8,0x00000ef7,0x000200f9,
	0x00000cf8,0x000200f8,0x00000cf8,0x000200f9,0x00000561,0x000200f8,0x00000561,0x000100fd,
	0x00010038
};

// Generated from:
//
// #version 450 core
//
// #extension GL_GOOGLE_include_directive : require
// #extension GL_EXT_samplerless_texture_functions : require
//
// layout(local_size_x = 256, local_size_y = 1, local_size_z = 1)in;
//
// layout(set = 0, binding = 0, rgba16)uniform coherent image2D dst[12];
// layout(set = 0, binding = 1)uniform sampler2D src;
// layout(set = 0, binding = 2)coherent buffer GlobalAtomic
// {
//     uint counter;
// } globalAtomic;
//
// layout(push_constant)uniform PushConstants {
//
//     uint levelCount;
//
//     uint numWorkGroups;
//
//     vec2 invSrcExtent;
// } params;
//
// #line 1 "shaders/src/third_party/ffx_spd/ffx_a.h"
//
// #extension GL_EXT_shader_16bit_storage : require
// #extension GL_EXT_shader_explicit_arithmetic_types : require
//
//    float AF1_x(float a){ return float(a);}
//    vec2 AF2_x(float a){ return vec2(a, a);}
//    vec3 AF3_x(float a){ return vec3(a, a, a);}
//    vec4 AF4_x(float a){ return vec4(a, a, a, a);}
//
//    uint AU1_x(uint a){ return uint(a);}
//    uvec2 AU2_x(uint a){ return uvec2(a, a);}
//    uvec3 AU3_x(uint a){ return uvec3(a, a, a);}
//    uvec4 AU4_x(uint a){ return uvec4(a, a, a, a);}
//
//    uint AAbsSU1(uint a){ return uint(abs(int(a)));}
//    uvec2 AAbsSU2(uvec2 a){ return uvec2(abs(ivec2(a)));}
//    uvec3 AAbsSU3(uvec3 a){ return uvec3(abs(ivec3(a)));}
//    uvec4 AAbsSU4(uvec4 a){ return uvec4(abs(ivec4(a)));}
//
//    uint ABfe(uint src, uint off, uint bits){ return bitfieldExtract(src, int(off), int(bits));}
//    uint ABfi(uint src, uint ins, uint mask){ return(ins & mask)|(src &(~ mask));}
//
//    uint ABfiM(uint src, uint ins, uint bits){ return bitfieldInsert(src, ins, 0, int(bits));}
//
//    float AFractF1(float x){ return fract(x);}
//    vec2 AFractF2(vec2 x){ return fract(x);}
//    vec3 AFractF3(vec3 x){ return fract(x);}
//    vec4 AFractF4(vec4 x){ return fract(x);}
//
//    float ALerpF1(float x, float y, float a){ return mix(x, y, a);}
//    vec2 ALerpF2(vec2 x, vec2 y, vec2 a){ return mix(x, y, a);}
//    vec3 ALerpF3(vec3 x, vec3 y, vec3 a){ return mix(x, y, a);}
//    vec4 ALerpF4(vec4 x, vec4 y, vec4 a){ return mix(x, y, a);}
//
//    float AMax3F1(float x, float y, float z){ return max(x, max(y, z));}
//    vec2 AMax3F2(vec2 x, vec2 y, vec2 z){ return max(x, max(y, z));}
//    vec3 AMax3F3(vec3 x, vec3 y, vec3 z){ return max(x, max(y, z));}
//    vec4 AMax3F4(vec4 x, vec4 y, vec4 z){ return max(x, max(y, z));}
//
//    uint AMax3SU1(uint x, uint y, uint z){ return uint(max(int(x), max(int(y), int(z))));}
//    uvec2 AMax3SU2(uvec2 x, uvec2 y, uvec2 z){ return uvec2(max(ivec2(x), max(ivec2(y), ivec2(z))));}
//    uvec3 AMax3SU3(uvec3 x, uvec3 y, uvec3 z){ return uvec3(max(ivec3(x), max(ivec3(y), ivec3(z))));}
//    uvec4 AMax3SU4(uvec4 x, uvec4 y, uvec4 z){ return uvec4(max(ivec4(x), max(ivec4(y), ivec4(z))));}
//
//    uint AMax3U1(uint x, uint y, uint z){ return max(x, max(y, z));}
//    uvec2 AMax3U2(uvec2 x, uvec2 y, uvec2 z){ return max(x, max(y, z));}
//    uvec3 AMax3U3(uvec3 x, uvec3 y, uvec3 z){ return max(x, max(y, z));}
//    uvec4 AMax3U4(uvec4 x, uvec4 y, uvec4 z){ return max(x, max(y, z));}
//
//    uint AMaxSU1(uint a, uint b){ return uint(max(int(a), int(b)));}
//    uvec2 AMaxSU2(uvec2 a, uvec2 b){ return uvec2(max(ivec2(a), ivec2(b)));}
//    uvec3 AMaxSU3(uvec3 a, uvec3 b){ return uvec3(max(ivec3(a), ivec3(b)));}
//    uvec4 AMaxSU4(uvec4 a, uvec4 b){ return uvec4(max(ivec4(a), ivec4(b)));}
//
//    float AMed3F1(float x, float y, float z){ return max(min(x, y), min(max(x, y), z));}
//    vec2 AMed3F2(vec2 x, vec2 y, vec2 z){ return max(min(x, y), min(max(x, y), z));}
//    vec3 AMed3F3(vec3 x, vec3 y, vec3 z){ return max(min(x, y), min(max(x, y), z));}
//    vec4 AMed3F4(vec4 x, vec4 y, vec4 z){ return max(min(x, y), min(max(x, y), z));}
//
//    float AMin3F1(float x, float y, float z){ return min(x, min(y, z));}
//    vec2 AMin3F2(vec2 x, vec2 y, vec2 z){ return min(x, min(y, z));}
//    vec3 AMin3F3(vec3 x, vec3 y, vec3 z){ return min(x, min(y, z));}
//    vec4 AMin3F4(vec4 x, vec4 y, vec4 z){ return min(x, min(y, z));}
//
//    uint AMin3SU1(uint x, uint y, uint z){ return uint(min(int(x), min(int(y), int(z))));}
//    uvec2 AMin3SU2(uvec2 x, uvec2 y, uvec2 z){ return uvec2(min(ivec2(x), min(ivec2(y), ivec2(z))));}
//    uvec3 AMin3SU3(uvec3 x, uvec3 y, uvec3 z){ return uvec3(min(ivec3(x), min(ivec3(y), ivec3(z))));}
//    uvec4 AMin3SU4(uvec4 x, uvec4 y, uvec4 z){ return uvec4(min(ivec4(x), min(ivec4(y), ivec4(z))));}
//
//    uint AMin3U1(uint x, uint y, uint z){ return min(x, min(y, z));}
//    uvec2 AMin3U2(uvec2 x, uvec2 y, uvec2 z){ return min(x, min(y, z));}
//    uvec3 AMin3U3(uvec3 x, uvec3 y, uvec3 z){ return min(x, min(y, z));}
//    uvec4 AMin3U4(uvec4 x, uvec4 y, uvec4 z){ return min(x, min(y, z));}
//
//    uint AMinSU1(uint a, uint b){ return uint(min(int(a), int(b)));}
//    uvec2 AMinSU2(uvec2 a, uvec2 b){ return uvec2(min(ivec2(a), ivec2(b)));}
//    uvec3 AMinSU3(uvec3 a, uvec3 b){ return uvec3(min(ivec3(a), ivec3(b)));}
//    uvec4 AMinSU4(uvec4 a, uvec4 b){ return uvec4(min(ivec4(a), ivec4(b)));}
//
//    float ANCosF1(float x){ return cos(x * AF1_x(float(6.28318530718)));}
//    vec2 ANCosF2(vec2 x){ return cos(x * AF2_x(float(6.28318530718)));}
//    vec3 ANCosF3(vec3 x){ return cos(x * AF3_x(float(6.28318530718)));}
//    vec4 ANCosF4(vec4 x){ return cos(x * AF4_x(float(6.28318530718)));}
//
//    float ANSinF1(float x){ return sin(x * AF1_x(float(6.28318530718)));}
//    vec2 ANSinF2(vec2 x){ return sin(x * AF2_x(float(6.28318530718)));}
//    vec3 ANSinF3(vec3 x){ return sin(x * AF3_x(float(6.28318530718)));}
//    vec4 ANSinF4(vec4 x){ return sin(x * AF4_x(float(6.28318530718)));}
//
//    float ARcpF1(float x){ return AF1_x(float(1.0))/ x;}
//    vec2 ARcpF2(vec2 x){ return AF2_x(float(1.0))/ x;}
//    vec3 ARcpF3(vec3 x){ return AF3_x(float(1.0))/ x;}
//    vec4 ARcpF4(vec4 x){ return AF4_x(float(1.0))/ x;}
//
//    float ARsqF1(float x){ return AF1_x(float(1.0))/ sqrt(x);}
//    vec2 ARsqF2(vec2 x){ return AF2_x(float(1.0))/ sqrt(x);}
//    vec3 ARsqF3(vec3 x){ return AF3_x(float(1.0))/ sqrt(x);}
//    vec4 ARsqF4(vec4 x){ return AF4_x(float(1.0))/ sqrt(x);}
//
//    float ASatF1(float x){ return clamp(x, AF1_x(float(0.0)), AF1_x(float(1.0)));}
//    vec2 ASatF2(vec2 x){ return clamp(x, AF2_x(float(0.0)), AF2_x(float(1.0)));}
//    vec3 ASatF3(vec3 x){ return clamp(x, AF3_x(float(0.0)), AF3_x(float(1.0)));}
//    vec4 ASatF4(vec4 x){ return clamp(x, AF4_x(float(0.0)), AF4_x(float(1.0)));}
//
//    uint AShrSU1(uint a, uint b){ return uint(int(a)>> int(b));}
//    uvec2 AShrSU2(uvec2 a, uvec2 b){ return uvec2(ivec2(a)>> ivec2(b));}
//    uvec3 AShrSU3(uvec3 a, uvec3 b){ return uvec3(ivec3(a)>> ivec3(b));}
//    uvec4 AShrSU4(uvec4 a, uvec4 b){ return uvec4(ivec4(a)>> ivec4(b));}
//
//     f16vec4 AH4_AU2_x(uvec2 x){ return f16vec4(unpackFloat2x16(x . x), unpackFloat2x16(x . y));}
//
//     uvec2 AU2_AH4_x(f16vec4 x){ return uvec2(packFloat2x16(x . xy), packFloat2x16(x . zw));}
//
//     float16_t AH1_x(float16_t a){ return float16_t(a);}
//     f16vec2 AH2_x(float16_t a){ return f16vec2(a, a);}
//     f16vec3 AH3_x(float16_t a){ return f16vec3(a, a, a);}
//     f16vec4 AH4_x(float16_t a){ return f16vec4(a, a, a, a);}
//
//     uint16_t AW1_x(uint16_t a){ return uint16_t(a);}
//     u16vec2 AW2_x(uint16_t a){ return u16vec2(a, a);}
//     u16vec3 AW3_x(uint16_t a){ return u16vec3(a, a, a);}
//     u16vec4 AW4_x(uint16_t a){ return u16vec4(a, a, a, a);}
//
//     uint16_t AAbsSW1(uint16_t a){ return uint16_t(abs(int16_t(a)));}
//     u16vec2 AAbsSW2(u16vec2 a){ return u16vec2(abs(i16vec2(a)));}
//     u16vec3 AAbsSW3(u16vec3 a){ return u16vec3(abs(i16vec3(a)));}
//     u16vec4 AAbsSW4(u16vec4 a){ return u16vec4(abs(i16vec4(a)));}
//
//     float16_t AFractH1(float16_t x){ return fract(x);}
//     f16vec2 AFractH2(f16vec2 x){ return fract(x);}
//     f16vec3 AFractH3(f16vec3 x){ return fract(x);}
//     f16vec4 AFractH4(f16vec4 x){ return fract(x);}
//
//     float16_t ALerpH1(float16_t x, float16_t y, float16_t a){ return mix(x, y, a);}
//     f16vec2 ALerpH2(f16vec2 x, f16vec2 y, f16vec2 a){ return mix(x, y, a);}
//     f16vec3 ALerpH3(f16vec3 x, f16vec3 y, f16vec3 a){ return mix(x, y, a);}
//     f16vec4 ALerpH4(f16vec4 x, f16vec4 y, f16vec4 a){ return mix(x, y, a);}
//
//     float16_t AMax3H1(float16_t x, float16_t y, float16_t z){ return max(x, max(y, z));}
//     f16vec2 AMax3H2(f16vec2 x, f16vec2 y, f16vec2 z){ return max(x, max(y, z));}
//     f16vec3 AMax3H3(f16vec3 x, f16vec3 y, f16vec3 z){ return max(x, max(y, z));}
//     f16vec4 AMax3H4(f16vec4 x, f16vec4 y, f16vec4 z){ return max(x, max(y, z));}
//
//     uint16_t AMaxSW1(uint16_t a, uint16_t b){ return uint16_t(max(int(a), int(b)));}
//     u16vec2 AMaxSW2(u16vec2 a, u16vec2 b){ return u16vec2(max(ivec2(a), ivec2(b)));}
//     u16vec3 AMaxSW3(u16vec3 a, u16vec3 b){ return u16vec3(max(ivec3(a), ivec3(b)));}
//     u16vec4 AMaxSW4(u16vec4 a, u16vec4 b){ return u16vec4(max(ivec4(a), ivec4(b)));}
//
//     float16_t AMin3H1(float16_t x, float16_t y, float16_t z){ return min(x, min(y, z));}
//     f16vec2 AMin3H2(f16vec2 x, f16vec2 y, f16vec2 z){ return min(x, min(y, z));}
//     f16vec3 AMin3H3(f16vec3 x, f16vec3 y, f16vec3 z){ return min(x, min(y, z));}
//     f16vec4 AMin3H4(f16vec4 x, f16vec4 y, f16vec4 z){ return min(x, min(y, z));}
//
//     uint16_t AMinSW1(uint16_t a, uint16_t b){ return uint16_t(min(int(a), int(b)));}
//     u16vec2 AMinSW2(u16vec2 a, u16vec2 b){ return u16vec2(min(ivec2(a), ivec2(b)));}
//     u16vec3 AMinSW3(u16vec3 a, u16vec3 b){ return u16vec3(min(ivec3(a), ivec3(b)));}
//     u16vec4 AMinSW4(u16vec4 a, u16vec4 b){ return u16vec4(min(ivec4(a), ivec4(b)));}
//
//     float16_t ARcpH1(float16_t x){ return AH1_x(float16_t(1.0))/ x;}
//     f16vec2 ARcpH2(f16vec2 x){ return AH2_x(float16_t(1.0))/ x;}
//     f16vec3 ARcpH3(f16vec3 x){ return AH3_x(float16_t(1.0))/ x;}
//     f16vec4 ARcpH4(f16vec4 x){ return AH4_x(float16_t(1.0))/ x;}
//
//     float16_t ARsqH1(float16_t x){ return AH1_x(float16_t(1.0))/ sqrt(x);}
//     f16vec2 ARsqH2(f16vec2 x){ return AH2_x(float16_t(1.0))/ sqrt(x);}
//     f16vec3 ARsqH3(f16vec3 x){ return AH3_x(float16_t(1.0))/ sqrt(x);}
//     f16vec4 ARsqH4(f16vec4 x){ return AH4_x(float16_t(1.0))/ sqrt(x);}
//
//     float16_t ASatH1(float16_t x){ return clamp(x, AH1_x(float16_t(0.0)), AH1_x(float16_t(1.0)));}
//     f16vec2 ASatH2(f16vec2 x){ return clamp(x, AH2_x(float16_t(0.0)), AH2_x(float16_t(1.0)));}
//     f16vec3 ASatH3(f16vec3 x){ return clamp(x, AH3_x(float16_t(0.0)), AH3_x(float16_t(1.0)));}
//     f16vec4 ASatH4(f16vec4 x){ return clamp(x, AH4_x(float16_t(0.0)), AH4_x(float16_t(1.0)));}
//
//     uint16_t AShrSW1(uint16_t a, uint16_t b){ return uint16_t(int16_t(a)>> int16_t(b));}
//     u16vec2 AShrSW2(u16vec2 a, u16vec2 b){ return u16vec2(i16vec2(a)>> i16vec2(b));}
//     u16vec3 AShrSW3(u16vec3 a, u16vec3 b){ return u16vec3(i16vec3(a)>> i16vec3(b));}
//     u16vec4 AShrSW4(u16vec4 a, u16vec4 b){ return u16vec4(i16vec4(a)>> i16vec4(b));}
//
//    float ACpySgnF1(float d, float s){ return uintBitsToFloat(uint(floatBitsToUint(float(d))|(floatBitsToUint(float(s))& AU1_x(uint(0x80000000u)))));}
//    vec2 ACpySgnF2(vec2 d, vec2 s){ return uintBitsToFloat(uvec2(floatBitsToUint(vec2(d))|(floatBitsToUint(vec2(s))& AU2_x(uint(0x80000000u)))));}
//    vec3 ACpySgnF3(vec3 d, vec3 s){ return uintBitsToFloat(uvec3(floatBitsToUint(vec3(d))|(floatBitsToUint(vec3(s))& AU3_x(uint(0x80000000u)))));}
//    vec4 ACpySgnF4(vec4 d, vec4 s){ return uintBitsToFloat(uvec4(floatBitsToUint(vec4(d))|(floatBitsToUint(vec4(s))& AU4_x(uint(0x80000000u)))));}
//
//    float ASignedF1(float m){ return ASatF1(m * AF1_x(float(uintBitsToFloat(uint(0x7f800000u)))));}
//    vec2 ASignedF2(vec2 m){ return ASatF2(m * AF2_x(float(uintBitsToFloat(uint(0x7f800000u)))));}
//    vec3 ASignedF3(vec3 m){ return ASatF3(m * AF3_x(float(uintBitsToFloat(uint(0x7f800000u)))));}
//    vec4 ASignedF4(vec4 m){ return ASatF4(m * AF4_x(float(uintBitsToFloat(uint(0x7f800000u)))));}
//
//     float16_t ACpySgnH1(float16_t d, float16_t s){ return uint16BitsToHalf(uint16_t(halfBitsToUint16(float16_t(d))|(halfBitsToUint16(float16_t(s))& AW1_x(uint16_t(0x8000u)))));}
//     f16vec2 ACpySgnH2(f16vec2 d, f16vec2 s){ return uint16BitsToHalf(u16vec2(halfBitsToUint16(f16vec2(d))|(halfBitsToUint16(f16vec2(s))& AW2_x(uint16_t(0x8000u)))));}
//     f16vec3 ACpySgnH3(f16vec3 d, f16vec3 s){ return uint16BitsToHalf(u16vec3(halfBitsToUint16(f16vec3(d))|(halfBitsToUint16(f16vec3(s))& AW3_x(uint16_t(0x8000u)))));}
//     f16vec4 ACpySgnH4(f16vec4 d, f16vec4 s){ return uint16BitsToHalf(u16vec4(halfBitsToUint16(f16vec4(d))|(halfBitsToUint16(f16vec4(s))& AW4_x(uint16_t(0x8000u)))));}
//
//     float16_t ASignedH1(float16_t m){ return ASatH1(m * AH1_x(float16_t(uint16BitsToHalf(uint16_t(0x7c00u)))));}
//     f16vec2 ASignedH2(f16vec2 m){ return ASatH2(m * AH2_x(float16_t(uint16BitsToHalf(uint16_t(0x7c00u)))));}
//     f16vec3 ASignedH3(f16vec3 m){ return ASatH3(m * AH3_x(float16_t(uint16BitsToHalf(uint16_t(0x7c00u)))));}
//     f16vec4 ASignedH4(f16vec4 m){ return ASatH4(m * AH4_x(float16_t(uint16BitsToHalf(uint16_t(0x7c00u)))));}
//
//     float16_t APrxLoSqrtH1(float16_t a){ return uint16BitsToHalf(uint16_t((halfBitsToUint16(float16_t(a))>> AW1_x(uint16_t(1)))+ AW1_x(uint16_t(0x1de2))));}
//     f16vec2 APrxLoSqrtH2(f16vec2 a){ return uint16BitsToHalf(u16vec2((halfBitsToUint16(f16vec2(a))>> AW2_x(uint16_t(1)))+ AW2_x(uint16_t(0x1de2))));}
//
//     float16_t APrxLoRcpH1(float16_t a){ return uint16BitsToHalf(uint16_t(AW1_x(uint16_t(0x7784))- halfBitsToUint16(float16_t(a))));}
//     f16vec2 APrxLoRcpH2(f16vec2 a){ return uint16BitsToHalf(u16vec2(AW2_x(uint16_t(0x7784))- halfBitsToUint16(f16vec2(a))));}
//
//     float16_t APrxMedRcpH1(float16_t a){ float16_t b = uint16BitsToHalf(uint16_t(AW1_x(uint16_t(0x778d))- halfBitsToUint16(float16_t(a))));return b *(- b * a + AH1_x(float16_t(2.0)));}
//     f16vec2 APrxMedRcpH2(f16vec2 a){ f16vec2 b = uint16BitsToHalf(u16vec2(AW2_x(uint16_t(0x778d))- halfBitsToUint16(f16vec2(a))));return b *(- b * a + AH2_x(float16_t(2.0)));}
//
//     float16_t APrxLoRsqH1(float16_t a){ return uint16BitsToHalf(uint16_t(AW1_x(uint16_t(0x59a3))-(halfBitsToUint16(float16_t(a))>> AW1_x(uint16_t(1)))));}
//     f16vec2 APrxLoRsqH2(f16vec2 a){ return uint16BitsToHalf(u16vec2(AW2_x(uint16_t(0x59a3))-(halfBitsToUint16(f16vec2(a))>> AW2_x(uint16_t(1)))));}
//
//    float APrxLoSqrtF1(float a){ return uintBitsToFloat(uint((floatBitsToUint(float(a))>> AU1_x(uint(1)))+ AU1_x(uint(0x1fbc4639))));}
//    float APrxLoRcpF1(float a){ return uintBitsToFloat(uint(AU1_x(uint(0x7ef07ebb))- floatBitsToUint(float(a))));}
//    float APrxMedRcpF1(float a){ float b = uintBitsToFloat(uint(AU1_x(uint(0x7ef19fff))- floatBitsToUint(float(a))));return b *(- b * a + AF1_x(float(2.0)));}
//    float APrxLoRsqF1(float a){ return uintBitsToFloat(uint(AU1_x(uint(0x5f347d74))-(floatBitsToUint(float(a))>> AU1_x(uint(1)))));}
//
//    float APSinF1(float x){ return x * abs(x)- x;}
//    float APCosF1(float x){ x = AFractF1(x * AF1_x(float(0.5))+ AF1_x(float(0.75)));x = x * AF1_x(float(2.0))- AF1_x(float(1.0));return APSinF1(x);}
//
//     f16vec2 APSinH2(f16vec2 x){ return x * abs(x)- x;}
//     f16vec2 APCosH2(f16vec2 x){ x = AFractH2(x * AH2_x(float16_t(0.5))+ AH2_x(float16_t(0.75)));x = x * AH2_x(float16_t(2.0))- AH2_x(float16_t(1.0));return APSinH2(x);}
//
//    float ATo709F1(float c){ return max(min(c * AF1_x(float(4.5)), AF1_x(float(0.018))), AF1_x(float(1.099))* pow(c, AF1_x(float(0.45)))- AF1_x(float(0.099)));}
//
//    float AToGammaF1(float c, float rcpX){ return pow(c, rcpX);}
//
//    float AToPqF1(float x){ float p = pow(x, AF1_x(float(0.159302)));
//   return pow((AF1_x(float(0.835938))+ AF1_x(float(18.8516))* p)/(AF1_x(float(1.0))+ AF1_x(float(18.6875))* p), AF1_x(float(78.8438)));}
//
//    float AToSrgbF1(float c){ return max(min(c * AF1_x(float(12.92)), AF1_x(float(0.0031308))), AF1_x(float(1.055))* pow(c, AF1_x(float(0.41666)))- AF1_x(float(0.055)));}
//
//    float AToTwoF1(float c){ return sqrt(c);}
//
//    float AFrom709F1(float c){ return max(min(c * AF1_x(float(1.0 / 4.5)), AF1_x(float(0.081))),
//   pow((c + AF1_x(float(0.099)))*(AF1_x(float(1.0))/(AF1_x(float(1.099)))), AF1_x(float(1.0 / 0.45))));}
//
//    float AFromGammaF1(float c, float x){ return pow(c, x);}
//
//    float AFromPqF1(float x){ float p = pow(x, AF1_x(float(0.0126833)));
//   return pow(ASatF1(p - AF1_x(float(0.835938)))/(AF1_x(float(18.8516))- AF1_x(float(18.6875))* p), AF1_x(float(6.27739)));}
//
//    float AFromSrgbF1(float c){ return max(min(c * AF1_x(float(1.0 / 12.92)), AF1_x(float(0.04045))),
//   pow((c + AF1_x(float(0.055)))*(AF1_x(float(1.0))/ AF1_x(float(1.055))), AF1_x(float(2.4))));}
//
//    float AFromTwoF1(float c){ return c * c;}
//
//     f16vec2 ATo709H2(f16vec2 c){ return max(min(c * AH2_x(float16_t(4.5)), AH2_x(float16_t(0.018))), AH2_x(float16_t(1.099))* pow(c, AH2_x(float16_t(0.45)))- AH2_x(float16_t(0.099)));}
//
//     f16vec2 AToGammaH2(f16vec2 c, float16_t rcpX){ return pow(c, AH2_x(float16_t(rcpX)));}
//
//     f16vec2 AToSrgbH2(f16vec2 c){ return max(min(c * AH2_x(float16_t(12.92)), AH2_x(float16_t(0.0031308))), AH2_x(float16_t(1.055))* pow(c, AH2_x(float16_t(0.41666)))- AH2_x(float16_t(0.055)));}
//
//     f16vec2 AToTwoH2(f16vec2 c){ return sqrt(c);}
//
//     f16vec2 AFrom709H2(f16vec2 c){ return max(min(c * AH2_x(float16_t(1.0 / 4.5)), AH2_x(float16_t(0.081))),
//    pow((c + AH2_x(float16_t(0.099)))*(AH2_x(float16_t(1.0))/(AH2_x(float16_t(1.099)))), AH2_x(float16_t(1.0 / 0.45))));}
//
//     f16vec2 AFromGammaH2(f16vec2 c, float16_t x){ return pow(c, AH2_x(float16_t(x)));}
//
//     f16vec2 AFromSrgbH2(f16vec2 c){ return max(min(c * AH2_x(float16_t(1.0 / 12.92)), AH2_x(float16_t(0.04045))),
//    pow((c + AH2_x(float16_t(0.055)))*(AH2_x(float16_t(1.0))/ AH2_x(float16_t(1.055))), AH2_x(float16_t(2.4))));}
//
//     f16vec2 AFromTwoH2(f16vec2 c){ return c * c;}
//
//    uvec2 ARmp8x8(uint a){ return uvec2(ABfe(a, 1u, 3u), ABfiM(ABfe(a, 3u, 3u), a, 1u));}
//
//    uvec2 ARmpRed8x8(uint a){ return uvec2(ABfiM(ABfe(a, 2u, 3u), a, 1u), ABfiM(ABfe(a, 3u, 3u), ABfe(a, 1u, 2u), 2u));}
//
//    vec2 opAAbsF2(out vec2 d, in vec2 a){ d = abs(a);return d;}
//    vec3 opAAbsF3(out vec3 d, in vec3 a){ d = abs(a);return d;}
//    vec4 opAAbsF4(out vec4 d, in vec4 a){ d = abs(a);return d;}
//
//    vec2 opAAddF2(out vec2 d, in vec2 a, in vec2 b){ d = a + b;return d;}
//    vec3 opAAddF3(out vec3 d, in vec3 a, in vec3 b){ d = a + b;return d;}
//    vec4 opAAddF4(out vec4 d, in vec4 a, in vec4 b){ d = a + b;return d;}
//
//    vec2 opACpyF2(out vec2 d, in vec2 a){ d = a;return d;}
//    vec3 opACpyF3(out vec3 d, in vec3 a){ d = a;return d;}
//    vec4 opACpyF4(out vec4 d, in vec4 a){ d = a;return d;}
//
//    vec2 opALerpF2(out vec2 d, in vec2 a, in vec2 b, in vec2 c){ d = ALerpF2(a, b, c);return d;}
//    vec3 opALerpF3(out vec3 d, in vec3 a, in vec3 b, in vec3 c){ d = ALerpF3(a, b, c);return d;}
//    vec4 opALerpF4(out vec4 d, in vec4 a, in vec4 b, in vec4 c){ d = ALerpF4(a, b, c);return d;}
//
//    vec2 opALerpOneF2(out vec2 d, in vec2 a, in vec2 b, float c){ d = ALerpF2(a, b, AF2_x(float(c)));return d;}
//    vec3 opALerpOneF3(out vec3 d, in vec3 a, in vec3 b, float c){ d = ALerpF3(a, b, AF3_x(float(c)));return d;}
//    vec4 opALerpOneF4(out vec4 d, in vec4 a, in vec4 b, float c){ d = ALerpF4(a, b, AF4_x(float(c)));return d;}
//
//    vec2 opAMaxF2(out vec2 d, in vec2 a, in vec2 b){ d = max(a, b);return d;}
//    vec3 opAMaxF3(out vec3 d, in vec3 a, in vec3 b){ d = max(a, b);return d;}
//    vec4 opAMaxF4(out vec4 d, in vec4 a, in vec4 b){ d = max(a, b);return d;}
//
//    vec2 opAMinF2(out vec2 d, in vec2 a, in vec2 b){ d = min(a, b);return d;}
//    vec3 opAMinF3(out vec3 d, in vec3 a, in vec3 b){ d = min(a, b);return d;}
//    vec4 opAMinF4(out vec4 d, in vec4 a, in vec4 b){ d = min(a, b);return d;}
//
//    vec2 opAMulF2(out vec2 d, in vec2 a, in vec2 b){ d = a * b;return d;}
//    vec3 opAMulF3(out vec3 d, in vec3 a, in vec3 b){ d = a * b;return d;}
//    vec4 opAMulF4(out vec4 d, in vec4 a, in vec4 b){ d = a * b;return d;}
//
//    vec2 opAMulOneF2(out vec2 d, in vec2 a, float b){ d = a * AF2_x(float(b));return d;}
//    vec3 opAMulOneF3(out vec3 d, in vec3 a, float b){ d = a * AF3_x(float(b));return d;}
//    vec4 opAMulOneF4(out vec4 d, in vec4 a, float b){ d = a * AF4_x(float(b));return d;}
//
//    vec2 opANegF2(out vec2 d, in vec2 a){ d = - a;return d;}
//    vec3 opANegF3(out vec3 d, in vec3 a){ d = - a;return d;}
//    vec4 opANegF4(out vec4 d, in vec4 a){ d = - a;return d;}
//
//    vec2 opARcpF2(out vec2 d, in vec2 a){ d = ARcpF2(a);return d;}
//    vec3 opARcpF3(out vec3 d, in vec3 a){ d = ARcpF3(a);return d;}
//    vec4 opARcpF4(out vec4 d, in vec4 a){ d = ARcpF4(a);return d;}
//
// #line 51 "shaders/src/GenerateMipmap.comp"
//
// shared f16vec4 spd_intermediate[16][16];
//
// shared uint spd_counter;
//
//   f16vec4 SpdLoadSourceImageH(ivec2 p)
// {
//      vec2 textureCoord = p * params . invSrcExtent + params . invSrcExtent;
//    return f16vec4(texture(src, textureCoord));
// }
//
//   f16vec4 SpdLoadH(ivec2 p)
// {
//     return f16vec4(imageLoad(dst[5], p));
// }
//
// void SpdStoreH(ivec2 p, f16vec4 value, uint mip)
// {
//     imageStore(dst[mip], p, vec4(value));
// }
//
//   f16vec4 SpdLoadIntermediateH(uint x, uint y)
// {
//     return spd_intermediate[x][y];
// }
// void SpdStoreIntermediateH(uint x, uint y, f16vec4 value)
// {
//     spd_intermediate[x][y]= value;
// }
//
//   f16vec4 SpdReduce4H(f16vec4 v0, f16vec4 v1, f16vec4 v2, f16vec4 v3)
// {
//     return(v0 + v1 + v2 + v3)* float16_t(0.25);
// }
//
// void SpdIncreaseAtomicCounter()
// {
//     spd_counter = atomicAdd(globalAtomic . counter, 1);
// }
//   uint SpdGetAtomicCounter()
// {
//     return spd_counter;
// }
//
// #line 1 "shaders/src/third_party/ffx_spd/ffx_spd.h"
//
//     vec4 SpdLoadSourceImage(ivec2 p){ return vec4(0.0, 0.0, 0.0, 0.0);}
//     vec4 SpdLoad(ivec2 p){ return vec4(0.0, 0.0, 0.0, 0.0);}
//   void SpdStore(ivec2 p, vec4 value, uint mip){ }
//     vec4 SpdLoadIntermediate(uint x, uint y){ return vec4(0.0, 0.0, 0.0, 0.0);}
//   void SpdStoreIntermediate(uint x, uint y, vec4 value){ }
//     vec4 SpdReduce4(vec4 v0, vec4 v1, vec4 v2, vec4 v3){ return vec4(0.0, 0.0, 0.0, 0.0);}
//
// void SpdWorkgroupShuffleBarrier(){
//
//     barrier();
//
// }
//
// bool SpdExitWorkgroup(uint numWorkGroups, uint localInvocationIndex)
// {
//
//     if(localInvocationIndex == 0)
//     {
//         SpdIncreaseAtomicCounter();
//     }
//     SpdWorkgroupShuffleBarrier();
//     return(SpdGetAtomicCounter()!=(numWorkGroups - 1));
// }
//
//   vec4 SpdReduceQuad(vec4 v)
// {
//
//     return AF4_x(0.0);
// }
//
//   vec4 SpdReduceIntermediate(uvec2 i0, uvec2 i1, uvec2 i2, uvec2 i3)
// {
//       vec4 v0 = SpdLoadIntermediate(i0 . x, i0 . y);
//       vec4 v1 = SpdLoadIntermediate(i1 . x, i1 . y);
//       vec4 v2 = SpdLoadIntermediate(i2 . x, i2 . y);
//       vec4 v3 = SpdLoadIntermediate(i3 . x, i3 . y);
//     return SpdReduce4(v0, v1, v2, v3);
// }
//
//   vec4 SpdReduceLoad4(uvec2 i0, uvec2 i1, uvec2 i2, uvec2 i3)
// {
//       vec4 v0 = SpdLoad(ivec2(i0));
//       vec4 v1 = SpdLoad(ivec2(i1));
//       vec4 v2 = SpdLoad(ivec2(i2));
//       vec4 v3 = SpdLoad(ivec2(i3));
//     return SpdReduce4(v0, v1, v2, v3);
// }
//
//   vec4 SpdReduceLoad4(uvec2 base)
// {
//     return SpdReduceLoad4(
//           uvec2(base + uvec2(0, 0)),
//           uvec2(base + uvec2(0, 1)),
//           uvec2(base + uvec2(1, 0)),
//           uvec2(base + uvec2(1, 1)));
// }
//
//   vec4 SpdReduceLoadSourceImage4(uvec2 i0, uvec2 i1, uvec2 i2, uvec2 i3)
// {
//       vec4 v0 = SpdLoadSourceImage(ivec2(i0));
//       vec4 v1 = SpdLoadSourceImage(ivec2(i1));
//       vec4 v2 = SpdLoadSourceImage(ivec2(i2));
//       vec4 v3 = SpdLoadSourceImage(ivec2(i3));
//     return SpdReduce4(v0, v1, v2, v3);
// }
//
//   vec4 SpdReduceLoadSourceImage4(uvec2 base)
// {
//
//     return SpdLoadSourceImage(ivec2(base));
//
// }
//
// void SpdDownsampleMips_0_1_Intrinsics(uint x, uint y, uvec2 workGroupID, uint localInvocationIndex, uint mip)
// {
//       vec4 v[4];
//
//        ivec2 tex = ivec2(workGroupID . xy * 64)+ ivec2(x * 2, y * 2);
//        ivec2 pix = ivec2(workGroupID . xy * 32)+ ivec2(x, y);
//     v[0]= SpdReduceLoadSourceImage4(tex);
//     SpdStore(pix, v[0], 0);
//
//     tex = ivec2(workGroupID . xy * 64)+ ivec2(x * 2 + 32, y * 2);
//     pix = ivec2(workGroupID . xy * 32)+ ivec2(x + 16, y);
//     v[1]= SpdReduceLoadSourceImage4(tex);
//     SpdStore(pix, v[1], 0);
//
//     tex = ivec2(workGroupID . xy * 64)+ ivec2(x * 2, y * 2 + 32);
//     pix = ivec2(workGroupID . xy * 32)+ ivec2(x, y + 16);
//     v[2]= SpdReduceLoadSourceImage4(tex);
//     SpdStore(pix, v[2], 0);
//
//     tex = ivec2(workGroupID . xy * 64)+ ivec2(x * 2 + 32, y * 2 + 32);
//     pix = ivec2(workGroupID . xy * 32)+ ivec2(x + 16, y + 16);
//     v[3]= SpdReduceLoadSourceImage4(tex);
//     SpdStore(pix, v[3], 0);
//
//     if(mip <= 1)
//         return;
//
//     v[0]= SpdReduceQuad(v[0]);
//     v[1]= SpdReduceQuad(v[1]);
//     v[2]= SpdReduceQuad(v[2]);
//     v[3]= SpdReduceQuad(v[3]);
//
//     if((localInvocationIndex % 4)== 0)
//     {
//         SpdStore(ivec2(workGroupID . xy * 16)+
//                ivec2(x / 2, y / 2), v[0], 1);
//         SpdStoreIntermediate(
//             x / 2, y / 2, v[0]);
//
//         SpdStore(ivec2(workGroupID . xy * 16)+
//                ivec2(x / 2 + 8, y / 2), v[1], 1);
//         SpdStoreIntermediate(
//             x / 2 + 8, y / 2, v[1]);
//
//         SpdStore(ivec2(workGroupID . xy * 16)+
//                ivec2(x / 2, y / 2 + 8), v[2], 1);
//         SpdStoreIntermediate(
//             x / 2, y / 2 + 8, v[2]);
//
//         SpdStore(ivec2(workGroupID . xy * 16)+
//                ivec2(x / 2 + 8, y / 2 + 8), v[3], 1);
//         SpdStoreIntermediate(
//             x / 2 + 8, y / 2 + 8, v[3]);
//     }
// }
//
// void SpdDownsampleMips_0_1_LDS(uint x, uint y, uvec2 workGroupID, uint localInvocationIndex, uint mip)
// {
//       vec4 v[4];
//
//        ivec2 tex = ivec2(workGroupID . xy * 64)+ ivec2(x * 2, y * 2);
//        ivec2 pix = ivec2(workGroupID . xy * 32)+ ivec2(x, y);
//     v[0]= SpdReduceLoadSourceImage4(tex);
//     SpdStore(pix, v[0], 0);
//
//     tex = ivec2(workGroupID . xy * 64)+ ivec2(x * 2 + 32, y * 2);
//     pix = ivec2(workGroupID . xy * 32)+ ivec2(x + 16, y);
//     v[1]= SpdReduceLoadSourceImage4(tex);
//     SpdStore(pix, v[1], 0);
//
//     tex = ivec2(workGroupID . xy * 64)+ ivec2(x * 2, y * 2 + 32);
//     pix = ivec2(workGroupID . xy * 32)+ ivec2(x, y + 16);
//     v[2]= SpdReduceLoadSourceImage4(tex);
//     SpdStore(pix, v[2], 0);
//
//     tex = ivec2(workGroupID . xy * 64)+ ivec2(x * 2 + 32, y * 2 + 32);
//     pix = ivec2(workGroupID . xy * 32)+ ivec2(x + 16, y + 16);
//     v[3]= SpdReduceLoadSourceImage4(tex);
//     SpdStore(pix, v[3], 0);
//
//     if(mip <= 1)
//         return;
//
//     for(int i = 0;i < 4;i ++)
//     {
//         SpdStoreIntermediate(x, y, v[i]);
//         SpdWorkgroupShuffleBarrier();
//         if(localInvocationIndex < 64)
//         {
//             v[i]= SpdReduceIntermediate(
//                   uvec2(x * 2 + 0, y * 2 + 0),
//                   uvec2(x * 2 + 1, y * 2 + 0),
//                   uvec2(x * 2 + 0, y * 2 + 1),
//                   uvec2(x * 2 + 1, y * 2 + 1)
//             );
//             SpdStore(ivec2(workGroupID . xy * 16)+ ivec2(x +(i % 2)* 8, y +(i / 2)* 8), v[i], 1);
//         }
//         SpdWorkgroupShuffleBarrier();
//     }
//
//     if(localInvocationIndex < 64)
//     {
//         SpdStoreIntermediate(x + 0, y + 0, v[0]);
//         SpdStoreIntermediate(x + 8, y + 0, v[1]);
//         SpdStoreIntermediate(x + 0, y + 8, v[2]);
//         SpdStoreIntermediate(x + 8, y + 8, v[3]);
//     }
// }
//
// void SpdDownsampleMips_0_1(uint x, uint y, uvec2 workGroupID, uint localInvocationIndex, uint mip)
// {
//
//     SpdDownsampleMips_0_1_LDS(x, y, workGroupID, localInvocationIndex, mip);
//
// }
//
// void SpdDownsampleMip_2(uint x, uint y, uvec2 workGroupID, uint localInvocationIndex, uint mip)
// {
//
//     if(localInvocationIndex < 64)
//     {
//           vec4 v = SpdReduceIntermediate(
//               uvec2(x * 2 + 0 + 0, y * 2 + 0),
//               uvec2(x * 2 + 0 + 1, y * 2 + 0),
//               uvec2(x * 2 + 0 + 0, y * 2 + 1),
//               uvec2(x * 2 + 0 + 1, y * 2 + 1)
//         );
//         SpdStore(ivec2(workGroupID . xy * 8)+ ivec2(x, y), v, mip);
//
//         SpdStoreIntermediate(x * 2 + y % 2, y * 2, v);
//     }
//
// }
//
// void SpdDownsampleMip_3(uint x, uint y, uvec2 workGroupID, uint localInvocationIndex, uint mip)
// {
//
//     if(localInvocationIndex < 16)
//     {
//
//           vec4 v = SpdReduceIntermediate(
//               uvec2(x * 4 + 0 + 0, y * 4 + 0),
//               uvec2(x * 4 + 2 + 0, y * 4 + 0),
//               uvec2(x * 4 + 0 + 1, y * 4 + 2),
//               uvec2(x * 4 + 2 + 1, y * 4 + 2)
//         );
//         SpdStore(ivec2(workGroupID . xy * 4)+ ivec2(x, y), v, mip);
//
//         SpdStoreIntermediate(x * 4 + y, y * 4, v);
//     }
//
// }
//
// void SpdDownsampleMip_4(uint x, uint y, uvec2 workGroupID, uint localInvocationIndex, uint mip)
// {
//
//     if(localInvocationIndex < 4)
//     {
//
//           vec4 v = SpdReduceIntermediate(
//               uvec2(x * 8 + 0 + 0 + y * 2, y * 8 + 0),
//               uvec2(x * 8 + 4 + 0 + y * 2, y * 8 + 0),
//               uvec2(x * 8 + 0 + 1 + y * 2, y * 8 + 4),
//               uvec2(x * 8 + 4 + 1 + y * 2, y * 8 + 4)
//         );
//         SpdStore(ivec2(workGroupID . xy * 2)+ ivec2(x, y), v, mip);
//
//         SpdStoreIntermediate(x + y * 2, 0, v);
//     }
//
// }
//
// void SpdDownsampleMip_5(uint x, uint y, uvec2 workGroupID, uint localInvocationIndex, uint mip)
// {
//
//     if(localInvocationIndex < 1)
//     {
//
//           vec4 v = SpdReduceIntermediate(
//               uvec2(0, 0),
//               uvec2(1, 0),
//               uvec2(2, 0),
//               uvec2(3, 0)
//         );
//         SpdStore(ivec2(workGroupID . xy), v, mip);
//     }
//
// }
//
// void SpdDownsampleMips_6_7(uint x, uint y, uint mips)
// {
//        ivec2 tex = ivec2(x * 4 + 0, y * 4 + 0);
//        ivec2 pix = ivec2(x * 2 + 0, y * 2 + 0);
//       vec4 v0 = SpdReduceLoad4(tex);
//     SpdStore(pix, v0, 6);
//
//     tex = ivec2(x * 4 + 2, y * 4 + 0);
//     pix = ivec2(x * 2 + 1, y * 2 + 0);
//       vec4 v1 = SpdReduceLoad4(tex);
//     SpdStore(pix, v1, 6);
//
//     tex = ivec2(x * 4 + 0, y * 4 + 2);
//     pix = ivec2(x * 2 + 0, y * 2 + 1);
//       vec4 v2 = SpdReduceLoad4(tex);
//     SpdStore(pix, v2, 6);
//
//     tex = ivec2(x * 4 + 2, y * 4 + 2);
//     pix = ivec2(x * 2 + 1, y * 2 + 1);
//       vec4 v3 = SpdReduceLoad4(tex);
//     SpdStore(pix, v3, 6);
//
//     if(mips <= 7)return;
//
//       vec4 v = SpdReduce4(v0, v1, v2, v3);
//     SpdStore(ivec2(x, y), v, 7);
//     SpdStoreIntermediate(x, y, v);
// }
//
// void SpdDownsampleNextFour(uint x, uint y, uvec2 workGroupID, uint localInvocationIndex, uint baseMip, uint mips)
// {
//     if(mips <= baseMip)return;
//     SpdWorkgroupShuffleBarrier();
//     SpdDownsampleMip_2(x, y, workGroupID, localInvocationIndex, baseMip);
//
//     if(mips <= baseMip + 1)return;
//     SpdWorkgroupShuffleBarrier();
//     SpdDownsampleMip_3(x, y, workGroupID, localInvocationIndex, baseMip + 1);
//
//     if(mips <= baseMip + 2)return;
//     SpdWorkgroupShuffleBarrier();
//     SpdDownsampleMip_4(x, y, workGroupID, localInvocationIndex, baseMip + 2);
//
//     if(mips <= baseMip + 3)return;
//     SpdWorkgroupShuffleBarrier();
//     SpdDownsampleMip_5(x, y, workGroupID, localInvocationIndex, baseMip + 3);
// }
//
// void SpdDownsample(
//       uvec2 workGroupID,
//       uint localInvocationIndex,
//       uint mips,
//       uint numWorkGroups
// ){
//       uvec2 sub_xy = ARmpRed8x8(localInvocationIndex % 64);
//       uint x = sub_xy . x + 8 *((localInvocationIndex >> 6)% 2);
//       uint y = sub_xy . y + 8 *((localInvocationIndex >> 7));
//     SpdDownsampleMips_0_1(x, y, workGroupID, localInvocationIndex, mips);
//
//     SpdDownsampleNextFour(x, y, workGroupID, localInvocationIndex, 2, mips);
//
//     if(mips <= 6)return;
//
//     if(SpdExitWorkgroup(numWorkGroups, localInvocationIndex))return;
//
//     SpdDownsampleMips_6_7(x, y, mips);
//
//     SpdDownsampleNextFour(x, y, uvec2(0, 0), localInvocationIndex, 8, mips);
// }
//
// #extension GL_EXT_shader_subgroup_extended_types_float16 : require
//
//   f16vec4 SpdReduceQuadH(f16vec4 v)
// {
//
//     return f16vec4(0.0, 0.0, 0.0, 0.0);
//
// }
//
//   f16vec4 SpdReduceIntermediateH(uvec2 i0, uvec2 i1, uvec2 i2, uvec2 i3)
// {
//       f16vec4 v0 = SpdLoadIntermediateH(i0 . x, i0 . y);
//       f16vec4 v1 = SpdLoadIntermediateH(i1 . x, i1 . y);
//       f16vec4 v2 = SpdLoadIntermediateH(i2 . x, i2 . y);
//       f16vec4 v3 = SpdLoadIntermediateH(i3 . x, i3 . y);
//     return SpdReduce4H(v0, v1, v2, v3);
// }
//
//   f16vec4 SpdReduceLoad4H(uvec2 i0, uvec2 i1, uvec2 i2, uvec2 i3)
// {
//       f16vec4 v0 = SpdLoadH(ivec2(i0));
//       f16vec4 v1 = SpdLoadH(ivec2(i1));
//       f16vec4 v2 = SpdLoadH(ivec2(i2));
//       f16vec4 v3 = SpdLoadH(ivec2(i3));
//     return SpdReduce4H(v0, v1, v2, v3);
// }
//
//   f16vec4 SpdReduceLoad4H(uvec2 base)
// {
//     return SpdReduceLoad4H(
//           uvec2(base + uvec2(0, 0)),
//           uvec2(base + uvec2(0, 1)),
//           uvec2(base + uvec2(1, 0)),
//           uvec2(base + uvec2(1, 1)));
// }
//
//   f16vec4 SpdReduceLoadSourceImage4H(uvec2 i0, uvec2 i1, uvec2 i2, uvec2 i3)
// {
//       f16vec4 v0 = SpdLoadSourceImageH(ivec2(i0));
//       f16vec4 v1 = SpdLoadSourceImageH(ivec2(i1));
//       f16vec4 v2 = SpdLoadSourceImageH(ivec2(i2));
//       f16vec4 v3 = SpdLoadSourceImageH(ivec2(i3));
//     return SpdReduce4H(v0, v1, v2, v3);
// }
//
//   f16vec4 SpdReduceLoadSourceImage4H(uvec2 base)
// {
//
//     return SpdLoadSourceImageH(ivec2(base));
//
// }
//
// void SpdDownsampleMips_0_1_IntrinsicsH(uint x, uint y, uvec2 workGroupID, uint localInvocationIndex, uint mips)
// {
//       f16vec4 v[4];
//
//        ivec2 tex = ivec2(workGroupID . xy * 64)+ ivec2(x * 2, y * 2);
//        ivec2 pix = ivec2(workGroupID . xy * 32)+ ivec2(x, y);
//     v[0]= SpdReduceLoadSourceImage4H(tex);
//     SpdStoreH(pix, v[0], 0);
//
//     tex = ivec2(workGroupID . xy * 64)+ ivec2(x * 2 + 32, y * 2);
//     pix = ivec2(workGroupID . xy * 32)+ ivec2(x + 16, y);
//     v[1]= SpdReduceLoadSourceImage4H(tex);
//     SpdStoreH(pix, v[1], 0);
//
//     tex = ivec2(workGroupID . xy * 64)+ ivec2(x * 2, y * 2 + 32);
//     pix = ivec2(workGroupID . xy * 32)+ ivec2(x, y + 16);
//     v[2]= SpdReduceLoadSourceImage4H(tex);
//     SpdStoreH(pix, v[2], 0);
//
//     tex = ivec2(workGroupID . xy * 64)+ ivec2(x * 2 + 32, y * 2 + 32);
//     pix = ivec2(workGroupID . xy * 32)+ ivec2(x + 16, y + 16);
//     v[3]= SpdReduceLoadSourceImage4H(tex);
//     SpdStoreH(pix, v[3], 0);
//
//     if(mips <= 1)
//         return;
//
//     v[0]= SpdReduceQuadH(v[0]);
//     v[1]= SpdReduceQuadH(v[1]);
//     v[2]= SpdReduceQuadH(v[2]);
//     v[3]= SpdReduceQuadH(v[3]);
//
//     if((localInvocationIndex % 4)== 0)
//     {
//         SpdStoreH(ivec2(workGroupID . xy * 16)+ ivec2(x / 2, y / 2), v[0], 1);
//         SpdStoreIntermediateH(x / 2, y / 2, v[0]);
//
//         SpdStoreH(ivec2(workGroupID . xy * 16)+ ivec2(x / 2 + 8, y / 2), v[1], 1);
//         SpdStoreIntermediateH(x / 2 + 8, y / 2, v[1]);
//
//         SpdStoreH(ivec2(workGroupID . xy * 16)+ ivec2(x / 2, y / 2 + 8), v[2], 1);
//         SpdStoreIntermediateH(x / 2, y / 2 + 8, v[2]);
//
//         SpdStoreH(ivec2(workGroupID . xy * 16)+ ivec2(x / 2 + 8, y / 2 + 8), v[3], 1);
//         SpdStoreIntermediateH(x / 2 + 8, y / 2 + 8, v[3]);
//     }
// }
//
// void SpdDownsampleMips_0_1_LDSH(uint x, uint y, uvec2 workGroupID, uint localInvocationIndex, uint mips)
// {
//       f16vec4 v[4];
//
//        ivec2 tex = ivec2(workGroupID . xy * 64)+ ivec2(x * 2, y * 2);
//        ivec2 pix = ivec2(workGroupID . xy * 32)+ ivec2(x, y);
//     v[0]= SpdReduceLoadSourceImage4H(tex);
//     SpdStoreH(pix, v[0], 0);
//
//     tex = ivec2(workGroupID . xy * 64)+ ivec2(x * 2 + 32, y * 2);
//     pix = ivec2(workGroupID . xy * 32)+ ivec2(x + 16, y);
//     v[1]= SpdReduceLoadSourceImage4H(tex);
//     SpdStoreH(pix, v[1], 0);
//
//     tex = ivec2(workGroupID . xy * 64)+ ivec2(x * 2, y * 2 + 32);
//     pix = ivec2(workGroupID . xy * 32)+ ivec2(x, y + 16);
//     v[2]= SpdReduceLoadSourceImage4H(tex);
//     SpdStoreH(pix, v[2], 0);
//
//     tex = ivec2(workGroupID . xy * 64)+ ivec2(x * 2 + 32, y * 2 + 32);
//     pix = ivec2(workGroupID . xy * 32)+ ivec2(x + 16, y + 16);
//     v[3]= SpdReduceLoadSourceImage4H(tex);
//     SpdStoreH(pix, v[3], 0);
//
//     if(mips <= 1)
//         return;
//
//     for(int i = 0;i < 4;i ++)
//     {
//         SpdStoreIntermediateH(x, y, v[i]);
//         SpdWorkgroupShuffleBarrier();
//         if(localInvocationIndex < 64)
//         {
//             v[i]= SpdReduceIntermediateH(
//                   uvec2(x * 2 + 0, y * 2 + 0),
//                   uvec2(x * 2 + 1, y * 2 + 0),
//                   uvec2(x * 2 + 0, y * 2 + 1),
//                   uvec2(x * 2 + 1, y * 2 + 1)
//             );
//             SpdStoreH(ivec2(workGroupID . xy * 16)+ ivec2(x +(i % 2)* 8, y +(i / 2)* 8), v[i], 1);
//         }
//         SpdWorkgroupShuffleBarrier();
//     }
//
//     if(localInvocationIndex < 64)
//     {
//         SpdStoreIntermediateH(x + 0, y + 0, v[0]);
//         SpdStoreIntermediateH(x + 8, y + 0, v[1]);
//         SpdStoreIntermediateH(x + 0, y + 8, v[2]);
//         SpdStoreIntermediateH(x + 8, y + 8, v[3]);
//     }
// }
//
// void SpdDownsampleMips_0_1H(uint x, uint y, uvec2 workGroupID, uint localInvocationIndex, uint mips)
// {
//
//     SpdDownsampleMips_0_1_LDSH(x, y, workGroupID, localInvocationIndex, mips);
//
// }
//
// void SpdDownsampleMip_2H(uint x, uint y, uvec2 workGroupID, uint localInvocationIndex, uint mip)
// {
//
//     if(localInvocationIndex < 64)
//     {
//           f16vec4 v = SpdReduceIntermediateH(
//               uvec2(x * 2 + 0 + 0, y * 2 + 0),
//               uvec2(x * 2 + 0 + 1, y * 2 + 0),
//               uvec2(x * 2 + 0 + 0, y * 2 + 1),
//               uvec2(x * 2 + 0 + 1, y * 2 + 1)
//         );
//         SpdStoreH(ivec2(workGroupID . xy * 8)+ ivec2(x, y), v, mip);
//
//         SpdStoreIntermediateH(x * 2 + y % 2, y * 2, v);
//     }
//
// }
//
// void SpdDownsampleMip_3H(uint x, uint y, uvec2 workGroupID, uint localInvocationIndex, uint mip)
// {
//
//     if(localInvocationIndex < 16)
//     {
//
//           f16vec4 v = SpdReduceIntermediateH(
//               uvec2(x * 4 + 0 + 0, y * 4 + 0),
//               uvec2(x * 4 + 2 + 0, y * 4 + 0),
//               uvec2(x * 4 + 0 + 1, y * 4 + 2),
//               uvec2(x * 4 + 2 + 1, y * 4 + 2)
//         );
//         SpdStoreH(ivec2(workGroupID . xy * 4)+ ivec2(x, y), v, mip);
//
//         SpdStoreIntermediateH(x * 4 + y, y * 4, v);
//     }
//
// }
//
// void SpdDownsampleMip_4H(uint x, uint y, uvec2 workGroupID, uint localInvocationIndex, uint mip)
// {
//
//     if(localInvocationIndex < 4)
//     {
//
//           f16vec4 v = SpdReduceIntermediateH(
//               uvec2(x * 8 + 0 + 0 + y * 2, y * 8 + 0),
//               uvec2(x * 8 + 4 + 0 + y * 2, y * 8 + 0),
//               uvec2(x * 8 + 0 + 1 + y * 2, y * 8 + 4),
//               uvec2(x * 8 + 4 + 1 + y * 2, y * 8 + 4)
//         );
//         SpdStoreH(ivec2(workGroupID . xy * 2)+ ivec2(x, y), v, mip);
//
//         SpdStoreIntermediateH(x + y * 2, 0, v);
//     }
//
// }
//
// void SpdDownsampleMip_5H(uint x, uint y, uvec2 workGroupID, uint localInvocationIndex, uint mip)
// {
//
//     if(localInvocationIndex < 1)
//     {
//
//           f16vec4 v = SpdReduceIntermediateH(
//               uvec2(0, 0),
//               uvec2(1, 0),
//               uvec2(2, 0),
//               uvec2(3, 0)
//         );
//         SpdStoreH(ivec2(workGroupID . xy), v, mip);
//     }
//
// }
//
// void SpdDownsampleMips_6_7H(uint x, uint y, uint mips)
// {
//        ivec2 tex = ivec2(x * 4 + 0, y * 4 + 0);
//        ivec2 pix = ivec2(x * 2 + 0, y * 2 + 0);
//       f16vec4 v0 = SpdReduceLoad4H(tex);
//     SpdStoreH(pix, v0, 6);
//
//     tex = ivec2(x * 4 + 2, y * 4 + 0);
//     pix = ivec2(x * 2 + 1, y * 2 + 0);
//       f16vec4 v1 = SpdReduceLoad4H(tex);
//     SpdStoreH(pix, v1, 6);
//
//     tex = ivec2(x * 4 + 0, y * 4 + 2);
//     pix = ivec2(x * 2 + 0, y * 2 + 1);
//       f16vec4 v2 = SpdReduceLoad4H(tex);
//     SpdStoreH(pix, v2, 6);
//
//     tex = ivec2(x * 4 + 2, y * 4 + 2);
//     pix = ivec2(x * 2 + 1, y * 2 + 1);
//       f16vec4 v3 = SpdReduceLoad4H(tex);
//     SpdStoreH(pix, v3, 6);
//
//     if(mips < 8)return;
//
//       f16vec4 v = SpdReduce4H(v0, v1, v2, v3);
//     SpdStoreH(ivec2(x, y), v, 7);
//     SpdStoreIntermediateH(x, y, v);
// }
//
// void SpdDownsampleNextFourH(uint x, uint y, uvec2 workGroupID, uint localInvocationIndex, uint baseMip, uint mips)
// {
//     if(mips <= baseMip)return;
//     SpdWorkgroupShuffleBarrier();
//     SpdDownsampleMip_2H(x, y, workGroupID, localInvocationIndex, baseMip);
//
//     if(mips <= baseMip + 1)return;
//     SpdWorkgroupShuffleBarrier();
//     SpdDownsampleMip_3H(x, y, workGroupID, localInvocationIndex, baseMip + 1);
//
//     if(mips <= baseMip + 2)return;
//     SpdWorkgroupShuffleBarrier();
//     SpdDownsampleMip_4H(x, y, workGroupID, localInvocationIndex, baseMip + 2);
//
//     if(mips <= baseMip + 3)return;
//     SpdWorkgroupShuffleBarrier();
//     SpdDownsampleMip_5H(x, y, workGroupID, localInvocationIndex, baseMip + 3);
// }
//
// void SpdDownsampleH(
//       uvec2 workGroupID,
//       uint localInvocationIndex,
//       uint mips,
//       uint numWorkGroups
// ){
//       uvec2 sub_xy = ARmpRed8x8(localInvocationIndex % 64);
//       uint x = sub_xy . x + 8 *((localInvocationIndex >> 6)% 2);
//       uint y = sub_xy . y + 8 *((localInvocationIndex >> 7));
//
//     SpdDownsampleMips_0_1H(x, y, workGroupID, localInvocationIndex, mips);
//
//     SpdDownsampleNextFourH(x, y, workGroupID, localInvocationIndex, 2, mips);
//
//     if(mips < 7)return;
//
//     if(SpdExitWorkgroup(numWorkGroups, localInvocationIndex))return;
//
//     SpdDownsampleMips_6_7H(x, y, mips);
//
//     SpdDownsampleNextFourH(x, y, uvec2(0, 0), localInvocationIndex, 8, mips);
// }
//
// #line 160 "shaders/src/GenerateMipmap.comp"
//
// void main()
// {
//
//     SpdDownsampleH(gl_WorkGroupID . xy, gl_LocalInvocationIndex,
//             params . levelCount, params . numWorkGroups);
//
// }
