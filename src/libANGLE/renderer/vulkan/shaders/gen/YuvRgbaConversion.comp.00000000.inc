// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/YuvRgbaConversion.comp.00000000.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kYuvRgbaConversion_comp_00000000[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x75,0x93,0x5f,0x6f,0x12,0x41,
    0x14,0xc5,0x87,0xdd,0x75,0xab,0xc5,0x5a,0x6b,0x05,0xa1,0x52,0xc5,0x62,0x2d,0x29,
    0x96,0x34,0x14,0x10,0x63,0x4c,0x6d,0xa2,0x05,0x91,0x56,0x8d,0x1f,0xc0,0x18,0xfb,
    0xe2,0x83,0xbe,0xe8,0xa3,0x0f,0x7e,0x22,0xbf,0x9e,0xff,0x62,0xe2,0xb9,0xb3,0xbf,
    0x69,0x26,0x9b,0x48,0x32,0xb9,0x73,0xce,0x3d,0x73,0xee,0x9d,0xd9,0x4b,0x9a,0x74,
    0x96,0x9c,0xab,0xb8,0x65,0x77,0xd1,0xbd,0x74,0xc5,0x6f,0xcd,0x25,0x62,0x9c,0xab,
    0xba,0xdc,0xc7,0xe9,0xe2,0xcd,0xa2,0xff,0xf9,0xcb,0x59,0x7f,0x38,0xda,0xb7,0xfc,
    0x15,0x97,0x7a,0x9d,0xe5,0x56,0xa5,0xb9,0xa0,0x98,0x69,0x7d,0x7c,0xf7,0xe1,0x93,
    0xf3,0xe7,0x9c,0xbb,0x2a,0x3e,0xf3,0x5e,0x85,0x2e,0xac,0xa9,0xd8,0x2a,0x9a,0x96,
    0xd6,0x4c,0xa7,0x6b,0xd4,0xed,0x10,0x03,0x57,0x81,0xcb,0xfc,0xb9,0xd4,0x73,0x09,
    0x1e,0x7b,0x8a,0x5b,0xe8,0x03,0xbe,0x73,0x5e,0x23,0xf5,0xb8,0x49,0x6e,0x52,0xd2,
    0x4e,0xd0,0x06,0xfc,0xbc,0xd4,0xdf,0x9c,0x7d,0xa8,0xf5,0x02,0x9c,0x82,0x17,0xf4,
    0x6f,0xfe,0xeb,0x52,0x25,0xde,0x2f,0xf5,0x79,0xdb,0xd7,0xa4,0xc9,0x15,0xdb,0xd4,
    0xb8,0x21,0x7c,0x49,0x31,0xc7,0xa3,0x2d,0xbc,0x8c,0xa7,0xf1,0x8f,0xc0,0x55,0xb8,
    0x1e,0xe7,0x2f,0x73,0xde,0xf4,0x2b,0xe4,0xf2,0x28,0x1f,0xde,0xf6,0x96,0x70,0x8d,
    0x5c,0x8e,0xbe,0x8e,0x77,0x0d,0xff,0xba,0xef,0x23,0x70,0x99,0x6b,0xd0,0x5f,0xa8,
    0xd7,0xe0,0x3e,0xa1,0xde,0x06,0x5a,0xf3,0xbb,0xae,0x5b,0x6d,0x46,0xba,0x0e,0xe7,
    0xea,0xba,0xcd,0x2e,0x3e,0x4d,0xa9,0x7b,0x8a,0xbb,0xe4,0xe2,0x5f,0xc2,0x37,0x34,
    0xdf,0xfb,0x70,0x3d,0xfa,0x32,0xbc,0x17,0xbd,0xd3,0x81,0x62,0x83,0x33,0xe6,0x39,
    0xfa,0x8f,0x67,0xc0,0x37,0xd5,0xc3,0x58,0x71,0x84,0xff,0x03,0xf8,0x31,0xfe,0x86,
    0x27,0x91,0xff,0x13,0xfc,0x32,0xee,0x63,0xfb,0xa7,0x3e,0xfb,0xed,0x70,0xc0,0xbb,
    0x86,0x79,0x08,0x78,0x5e,0xc2,0x61,0x1e,0x0e,0x84,0xec,0x8d,0x16,0x9c,0x99,0x93,
    0x1b,0x6b,0x7e,0xc3,0x9d,0x1d,0xdf,0xfc,0xa7,0x18,0xfb,0x9f,0xfc,0x10,0x3a,0x81,
    0xff,0xa3,0xbd,0x7d,0xe3,0x53,0xf2,0x16,0x8f,0xa4,0x5a,0xf1,0xff,0xb1,0x62,0x1e,
    0x2c,0xff,0x98,0xba,0xab,0xf0,0x41,0x73,0x0d,0xcd,0x5a,0xa4,0x59,0x87,0x37,0xcd,
    0x86,0x7f,0x9f,0xe2,0xbb,0x37,0x23,0x4d,0x0b,0xfe,0xbb,0x34,0x9b,0x7e,0x7e,0x0a,
    0xef,0x16,0xfd,0x85,0xb9,0xfd,0x2d,0xbd,0xe5,0x6e,0xf3,0x8d,0xad,0x47,0xdb,0xff,
    0x52,0x3c,0x01,0xb7,0xa3,0x5a,0x77,0xa9,0xd5,0x89,0x6a,0x6d,0xc3,0x87,0x5a,0xf7,
    0xe8,0x71,0x9b,0x5a,0xdd,0xa8,0x96,0xe5,0x76,0xb4,0xba,0x78,0xef,0x94,0x6a,0x75,
    0xf1,0xb5,0xd9,0xe9,0x33,0x37,0x5f,0x99,0xc9,0x7d,0xee,0x10,0xf0,0x80,0x3a,0xaf,
    0x54,0xd7,0x66,0x6a,0x88,0x66,0x80,0x87,0xcd,0xc7,0x43,0x66,0xe3,0x4c,0xd8,0xe6,
    0xe7,0x10,0xee,0xad,0x5b,0xf2,0x73,0x72,0x04,0x37,0x3c,0x9f,0x47,0xe7,0x5e,0xcb,
    0xcf,0x66,0xe6,0x19,0x79,0x17,0x71,0xc7,0x70,0x95,0x88,0x9b,0xc2,0x25,0xbe,0x97,
    0xc2,0x77,0xc6,0xf9,0x63,0xf2,0x36,0x7f,0xef,0xd5,0x43,0x9f,0x5a,0xb3,0xd2,0xbd,
    0x2d,0xfe,0x95,0xeb,0x44,0xeb,0x1f,0x30,0x9e,0x51,0xff,0xb0,0x05,0x00,0x00
};

// Generated from:
//
// #version 450 core
// layout(local_size_x_id = 1, local_size_y_id = 2, local_size_z_id = 3)in;
//
// layout(push_constant)uniform PushConstants
// {
//     uint imageWidth;
//     uint imageHeight;
// };
//
// layout(set = 0, binding = 0)uniform sampler2D yuvImage;
// layout(set = 0, binding = 1, rgba8)uniform writeonly image2D imgOut;
//
// void main(){
//     uint x = gl_GlobalInvocationID . x;
//     uint y = gl_GlobalInvocationID . y;
//
//     if(x >= imageWidth)return;
//     if(y >= imageHeight)return;
//
//     imageStore(imgOut, ivec2(x, y), vec4(texelFetch(yuvImage, ivec2(x, y), 0). rgb, 1.0));
// }
