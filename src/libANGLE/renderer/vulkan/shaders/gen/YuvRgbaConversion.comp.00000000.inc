// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/YuvRgbaConversion.comp.00000000.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kYuvRgbaConversion_comp_00000000[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x75,0x93,0xcd,0x6e,0x13,0x41,
    0x10,0x84,0x3b,0xbb,0x66,0x03,0x71,0x42,0x12,0x82,0x8d,0x1d,0x1c,0x30,0x98,0x10,
    0x2b,0x26,0x56,0xe4,0xd8,0xc6,0x08,0x21,0x30,0x26,0x3f,0x87,0x1c,0x90,0x78,0x00,
    0x14,0x91,0x0b,0x07,0xb8,0xc0,0x91,0x67,0xe2,0xf5,0xf8,0x13,0x12,0xd5,0xb3,0xdf,
    0x44,0xa3,0x95,0xb0,0x34,0xea,0xad,0xea,0x9a,0xea,0x9e,0x99,0x76,0x9e,0xf5,0x96,
    0xcd,0x96,0x6c,0xc5,0xae,0xdb,0x99,0x95,0xbf,0x4d,0xcb,0xc4,0x98,0xd5,0xad,0x08,
    0xf1,0xf4,0xfc,0xdd,0xf9,0xf0,0xcb,0xd7,0xcb,0xe1,0x78,0x72,0xe8,0xf9,0x9b,0x96,
    0x07,0x9d,0xe7,0xd6,0xa5,0xb9,0xa6,0x58,0xd3,0xfa,0x74,0xf1,0xf1,0xb3,0x85,0x7d,
    0x66,0x1b,0xe2,0x6b,0xc1,0xab,0xd4,0xc5,0x75,0x2a,0xb6,0x8e,0xa6,0xa3,0x75,0xa6,
    0xdd,0x0d,0xea,0xf6,0x88,0x91,0x5b,0x82,0xab,0x85,0x7d,0x79,0xe0,0x32,0x3c,0x0e,
    0x14,0x1f,0xa2,0x8f,0xf8,0xc1,0x55,0x8d,0x3c,0xe0,0x36,0xb9,0x59,0x45,0x3b,0x43,
    0x1b,0xf1,0xeb,0x4a,0x7f,0x0b,0xbe,0x63,0xad,0x37,0xe0,0x1c,0x7c,0x4c,0xff,0xee,
    0xbf,0x25,0x55,0x16,0xfc,0xf2,0x90,0xf7,0xef,0x86,0x34,0x85,0x62,0x97,0x1a,0x77,
    0x84,0x6f,0x28,0x16,0x78,0x74,0x85,0x57,0xf0,0x74,0xfe,0x39,0xb8,0x0e,0x37,0x60,
    0xff,0x2a,0xfb,0x5d,0xbf,0x46,0xae,0x48,0xf2,0xf1,0x6e,0xef,0x09,0x37,0xc8,0x15,
    0xe8,0x9b,0x78,0x37,0xf0,0x6f,0x86,0x3e,0x22,0x57,0xb3,0x16,0xfd,0xc5,0x7a,0x2d,
    0xce,0x13,0xeb,0x6d,0xa3,0x75,0xbf,0xdb,0x3a,0xd5,0x4e,0xa2,0xeb,0xb1,0xaf,0xa9,
    0xd3,0xec,0xe3,0xd3,0x96,0x7a,0xa0,0xb8,0x4f,0x2e,0xfd,0x65,0xbc,0xa1,0xfb,0x3e,
    0x81,0x1b,0xd0,0x97,0xe3,0x83,0xe4,0x9e,0x8e,0x14,0x5b,0xec,0x71,0xcf,0xc9,0x7f,
    0x3c,0x23,0xbe,0xab,0x1e,0xa6,0x8a,0x13,0xfc,0x9f,0xc2,0x4f,0xf1,0x77,0x3c,0x4b,
    0xfc,0x5f,0xe1,0xe7,0xfd,0x8c,0xb8,0xc7,0xf8,0xfe,0x11,0x2f,0x2a,0x38,0xbe,0xff,
    0x91,0x90,0xdf,0xc9,0x31,0x7b,0x16,0xe4,0xa6,0x9a,0xd7,0x78,0x46,0xe3,0x8d,0x7f,
    0x8a,0xf1,0xff,0xc5,0x0f,0xa1,0x13,0xf8,0x3f,0xfa,0x5e,0x0d,0x33,0x54,0xe6,0x3d,
    0xce,0xa5,0x5a,0x0b,0xff,0xa9,0xf2,0xfd,0x3d,0xff,0x82,0xba,0xeb,0xf0,0x51,0x73,
    0x0b,0xcd,0x66,0xa2,0xd9,0x82,0x77,0xcd,0x76,0xb8,0x8f,0xf2,0x9d,0xdb,0x89,0xa6,
    0x03,0xff,0x5d,0x9a,0x9d,0x30,0x2f,0xa5,0x77,0x87,0xfe,0xe2,0x9c,0xfe,0x96,0xde,
    0x73,0xf7,0x79,0x53,0xef,0xd1,0xbf,0x7f,0x29,0x9e,0x80,0xbb,0x49,0xad,0x47,0xd4,
    0xea,0x25,0xb5,0x76,0xe1,0x63,0xad,0xc7,0xf4,0xb8,0x4b,0xad,0x7e,0x52,0xcb,0x73,
    0x7b,0x5a,0x7d,0xbc,0xf7,0x2a,0xb5,0xfa,0xf8,0xfa,0xac,0x0c,0x99,0x93,0x6f,0xcc,
    0xe0,0x21,0x67,0x88,0x78,0x44,0x9d,0xb7,0xaa,0xeb,0x33,0x34,0x46,0x33,0xc2,0xc3,
    0xe7,0xe1,0x19,0xb3,0x70,0x29,0xec,0xf3,0xf2,0x12,0xee,0xbd,0x2d,0x87,0xb9,0x98,
    0xc3,0x8d,0xaf,0xe6,0xcf,0xec,0x83,0xb4,0x43,0xb8,0x79,0xa5,0x3f,0x8f,0x7f,0x35,
    0x19,0x33,0xad,0x7f,0x57,0x9f,0xbb,0xda,0x48,0x05,0x00,0x00
};

// Generated from:
//
// #version 450 core
// layout(local_size_x_id = 1, local_size_y_id = 2, local_size_z_id = 3)in;
//
// layout(push_constant)uniform PushConstants
// {
//     uint imageWidth;
//     uint imageHeight;
// };
//
// layout(set = 0, binding = 0)uniform sampler2D yuvImage;
// layout(set = 0, binding = 1, rgba8)uniform writeonly image2D imgOut;
//
// void main(){
//     uint x = gl_GlobalInvocationID . x;
//     uint y = gl_GlobalInvocationID . y;
//
//     if(x >= imageWidth)return;
//     if(y >= imageHeight)return;
//
//     imageStore(imgOut, ivec2(x, y), texelFetch(yuvImage, ivec2(x, y), 0));
// }
