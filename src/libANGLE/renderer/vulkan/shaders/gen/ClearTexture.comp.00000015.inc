// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/ClearTexture.comp.00000015.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kClearTexture_comp_00000015[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x85,0x93,0xcd,0x2e,0x43,0x41,
    0x14,0xc7,0xa7,0xf7,0x5e,0xb7,0x5a,0xb4,0xa5,0x2d,0x45,0xd5,0x47,0xb5,0x88,0xaa,
    0xa2,0x45,0x22,0x24,0x56,0x2c,0xec,0x3c,0x81,0xc4,0xc6,0x82,0x0d,0x8f,0xe0,0x79,
    0xbc,0x9e,0xaf,0x48,0x9c,0x33,0xf7,0x37,0xcd,0x89,0x8d,0x26,0x93,0xb9,0xe7,0x37,
    0xff,0xf3,0x35,0x67,0x1a,0x47,0xed,0xbc,0x73,0x39,0x57,0x74,0x93,0xee,0xc4,0x65,
    0xbf,0x59,0x17,0x09,0x71,0x6e,0xca,0xa5,0x7e,0xbf,0xba,0xb9,0xbd,0xe9,0x3f,0xbf,
    0xdc,0xf7,0x87,0xa3,0x81,0x9e,0x97,0x5c,0xec,0x75,0x7a,0x56,0x16,0xcd,0x84,0xec,
    0x89,0xac,0xc7,0xbb,0x87,0x27,0xe5,0x05,0x59,0x15,0xe1,0x89,0x8f,0xa5,0xdf,0x99,
    0xd6,0xc7,0x12,0x5a,0xf0,0xb1,0x9d,0x6b,0xca,0xba,0x16,0xef,0x0a,0x79,0xdb,0xec,
    0x81,0xe5,0x60,0x15,0xc3,0x22,0x58,0xcd,0xb0,0x18,0xd6,0x30,0x2c,0x81,0xd9,0x1c,
    0x13,0xb0,0x35,0xc3,0x52,0xd8,0xa6,0x61,0x79,0xd8,0xb6,0x61,0x93,0xb0,0x9e,0x61,
    0x05,0xd8,0xc0,0xf7,0x15,0x8f,0xeb,0xd3,0x1e,0x3b,0xc4,0x4e,0xd0,0x77,0xff,0xf4,
    0xa8,0xfa,0x2e,0xb5,0xab,0x5e,0x73,0x6d,0x8c,0xcf,0x32,0x7b,0xdd,0xd8,0x43,0xee,
    0x6c,0x51,0x56,0x55,0xb2,0x44,0xfe,0x3c,0xf6,0xfe,0xfa,0x5d,0x17,0x4d,0x4a,0x6f,
    0xfa,0x5b,0x10,0x3b,0x4f,0x0d,0xb1,0xe7,0x89,0xef,0x21,0x47,0x7f,0x67,0xd8,0x05,
    0xd8,0x2e,0xfe,0x45,0xfc,0x55,0x3f,0xc5,0x99,0xf2,0x79,0x89,0x52,0x22,0xbe,0xc6,
    0x2e,0xfb,0x77,0x90,0xf5,0xd7,0x72,0xd3,0xbe,0xf7,0xc0,0xd2,0x7f,0x96,0xc6,0x9e,
    0x1d,0xbf,0x93,0xac,0x16,0xb5,0xe7,0x60,0xda,0x4b,0x95,0x5c,0xa1,0xb6,0x2a,0x33,
    0xcf,0xe3,0x5f,0x47,0x9b,0x9a,0xf3,0x06,0x73,0x0a,0x76,0x13,0x4d,0x4d,0x6e,0x48,
    0x63,0xad,0x48,0x0f,0x1d,0x6a,0x6c,0x71,0xff,0x1d,0xe2,0x6d,0x71,0x8f,0x5d,0xea,
    0xd9,0x62,0xfe,0x91,0x89,0xb7,0xc3,0xdd,0x04,0xbb,0x47,0x7d,0xea,0xbf,0x47,0xae,
    0x12,0xf6,0x00,0xdf,0x92,0xb9,0xdb,0x43,0xfa,0x0d,0xf6,0x11,0xfe,0x3d,0xb1,0xb4,
    0xaf,0x21,0x9a,0x23,0xd6,0xb1,0xbc,0x9b,0x88,0x3b,0x76,0xcc,0xf1,0x43,0x88,0xbe,
    0xe3,0x77,0xb1,0x46,0xf0,0x6f,0xf9,0x2e,0x7a,0x7d,0x76,0xae,0xfb,0xa5,0xa8,0x74,
    0x7e,0xd3,0xd4,0xa5,0xe7,0xe7,0xe4,0x9d,0x81,0xab,0xa6,0xee,0x67,0x9b,0xdd,0x7d,
    0xcd,0x68,0x16,0xe0,0x41,0xb3,0x88,0xa6,0x61,0x34,0x4b,0xf0,0x57,0xd1,0xa8,0xbd,
    0x8c,0xdf,0x92,0xf1,0x5b,0xc1,0xaf,0x69,0xfc,0x5a,0xf0,0xe0,0xb7,0x8a,0xaf,0xf2,
    0x37,0x61,0x6b,0xbc,0xfd,0x19,0xce,0xb4,0xd7,0xf0,0xbf,0xf9,0x92,0x18,0xeb,0xfc,
    0x57,0xda,0xf4,0xab,0xdf,0x9f,0xb2,0x8f,0xb0,0xdb,0xe4,0xd7,0x99,0xf4,0xc9,0xdf,
    0x23,0xbf,0xce,0x63,0x1f,0x7e,0x29,0xd9,0x75,0x4e,0x07,0xcc,0x7a,0x87,0x9c,0x17,
    0x92,0xef,0x00,0x9d,0x8d,0xab,0xfb,0x8f,0x4c,0xec,0x54,0xd6,0x2f,0x01,0xd6,0x02,
    0xe4,0x38,0x05,0x00,0x00
};

// Generated from:
//
// #version 450 core
// layout(local_size_x = 16, local_size_y = 1, local_size_z = 1)in;
//
// layout(set = 0, binding = 0)buffer dest
// {
//  float depthBuffer[];
// };
//
// layout(push_constant)uniform PushConstants
// {
//           vec4 clearColor;
//  float depthValue;
//  uint stencilValue;
//     uint componentCount;
//  uint offsetX;
//  uint offsetY;
//  uint offsetZ;
//  uint width;
//  uint height;
//  uint depth;
// } params;
//
// void main()
// {
//  if(gl_GlobalInvocationID . x >= params . width * params . height * params . depth)
//  {
//   return;
//  }
//
//     depthBuffer[gl_GlobalInvocationID . x]= params . depthValue;
//
// }
