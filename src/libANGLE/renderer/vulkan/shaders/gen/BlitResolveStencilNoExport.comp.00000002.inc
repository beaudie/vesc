// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/BlitResolveStencilNoExport.comp.00000002.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kBlitResolveStencilNoExport_comp_00000002[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x5d,0x95,0xdb,0x6f,0x54,0x55,
    0x14,0xc6,0xf7,0xcc,0xb4,0x33,0x65,0xb4,0x2d,0xc5,0x16,0x90,0x7b,0xa9,0x29,0xc8,
    0x18,0xc0,0x04,0x99,0x8a,0x14,0x85,0x26,0x02,0xd2,0x56,0xb0,0x28,0x0d,0x2f,0xa5,
    0x89,0xb4,0x35,0x28,0xb4,0xe1,0xa2,0x6d,0x2a,0x8a,0x8a,0x91,0xf8,0x60,0x02,0xa5,
    0x09,0x08,0x09,0xe1,0x66,0x08,0x09,0x84,0x98,0x20,0x5a,0x9f,0x50,0xe3,0x5f,0xe4,
    0x95,0x18,0x5d,0xdf,0x3e,0xbf,0x8d,0x2b,0x3d,0xc9,0xce,0x3e,0xeb,0x5b,0xd7,0x6f,
    0xed,0xb5,0xcf,0x29,0xe4,0xdb,0x4a,0xa1,0x90,0x0b,0xe5,0x50,0x17,0x7e,0x0a,0xd9,
    0xd3,0x14,0xf2,0x21,0x67,0xfb,0x13,0xa1,0x18,0xf7,0xed,0xdd,0x7d,0xdd,0x6b,0x8f,
    0x1e,0x7b,0x7b,0xed,0x86,0x17,0xd6,0x4b,0xdf,0x10,0x0a,0xd1,0x4e,0xba,0x46,0xb3,
    0xa9,0xb5,0xbd,0xc6,0xd6,0x7b,0x83,0xef,0x1c,0x16,0x5e,0x6f,0x6b,0xae,0xe1,0x35,
    0x31,0x56,0xb0,0xc8,0xd9,0x8a,0xb1,0x0c,0xad,0x8f,0xb1,0x43,0x58,0x62,0x6b,0x87,
    0x79,0x2f,0x25,0x6f,0x1b,0x7b,0xc2,0x72,0x60,0x75,0x0e,0xcb,0x83,0xcd,0x75,0x58,
    0x01,0x6c,0xa1,0xc3,0x6a,0xc0,0x7c,0x8e,0x5a,0xb0,0x15,0x0e,0x2b,0x82,0xad,0x77,
    0x58,0x09,0x6c,0x83,0xc3,0xea,0xc0,0x3a,0x1c,0x36,0x07,0x6c,0x73,0xe4,0x55,0x78,
    0x5c,0x9f,0x38,0x9e,0xb4,0x7d,0x25,0x7c,0x92,0xdc,0xea,0x7a,0x70,0x8e,0xdc,0x35,
    0xc4,0x9b,0x9a,0xd5,0x03,0xc5,0x9b,0x72,0xf1,0xa6,0x67,0xc5,0x9b,0x26,0x5e,0x92,
    0x6f,0xd0,0xd3,0xa7,0x6d,0x3d,0x65,0x5e,0xf9,0xa8,0x2f,0xc4,0xde,0xe8,0xbd,0xc5,
    0x6c,0x8a,0x70,0x57,0x0d,0x0b,0x4c,0x2e,0x51,0x43,0xd2,0x97,0xd1,0x07,0xf4,0x8a,
    0x57,0xa6,0xbf,0x2b,0x4c,0x7e,0x12,0x5f,0xe1,0x2f,0x21,0xd7,0x83,0x55,0xf0,0x6f,
    0xc0,0x5f,0xf6,0x8d,0xe8,0xca,0x4e,0x3f,0x0f,0xce,0x49,0x6e,0xc1,0x66,0xbe,0x65,
    0x59,0x44,0x7e,0xe5,0x5e,0x6c,0xfb,0x22,0x6a,0x93,0xbc,0xc4,0xf5,0x6b,0x99,0x65,
    0x4e,0xe7,0xb4,0x98,0x55,0x64,0x25,0xbb,0xb2,0x5b,0xaa,0x65,0x19,0xe7,0xb5,0x94,
    0xda,0x25,0x2f,0x07,0xab,0xb8,0xde,0xd4,0x62,0xdf,0x8a,0x4e,0xf1,0x9a,0xad,0x8a,
    0x76,0xea,0x58,0x65,0x7b,0x3b,0x75,0x25,0xbf,0xaa,0xe3,0xdc,0x81,0x5f,0xc9,0xe9,
    0x3b,0x91,0xa5,0xdf,0x82,0xbe,0xec,0xf4,0x3b,0x99,0xaf,0x24,0xf7,0xcd,0xaa,0x6b,
    0xc0,0xd6,0xbf,0xf6,0x24,0xf9,0x80,0xeb,0xb9,0xe4,0x43,0xf4,0x45,0xf1,0x8f,0xe1,
    0x5b,0x8c,0xb3,0x30,0x27,0x4c,0x92,0x2b,0x17,0xfe,0x7f,0x72,0x4e,0x96,0xcf,0x87,
    0xbc,0x4f,0xd2,0x1b,0xc9,0x27,0xdd,0x1c,0x9c,0x22,0x86,0x3f,0xb7,0xd3,0xaa,0x29,
    0xf6,0xb3,0x10,0x67,0xb9,0x1c,0xcf,0x25,0x9b,0xd9,0x73,0xc4,0x3d,0x6f,0xbb,0x66,
    0x64,0x8a,0xb8,0x92,0xa7,0xc1,0x52,0xed,0x17,0xa8,0x55,0xf6,0x57,0xd1,0xf9,0x79,
    0xb9,0x4e,0x6f,0x9e,0x33,0x2b,0xcd,0xdd,0x0d,0xb0,0xeb,0xcc,0xce,0x46,0x3b,0xb1,
    0x3c,0xb5,0x05,0x66,0xf5,0x4f,0x43,0x74,0x8e,0x7f,0x98,0x74,0x13,0xfc,0x91,0xbd,
    0x6b,0x36,0xbf,0x41,0xaf,0x7d,0xab,0x59,0x35,0xf2,0x2d,0xa9,0x67,0x76,0x3b,0xc9,
    0xdb,0x04,0xfe,0x99,0xd9,0x94,0xe3,0x9d,0xca,0xb0,0x79,0xb1,0x4f,0x59,0xed,0xcd,
    0xe0,0x29,0xce,0x7c,0xe2,0xb4,0xb8,0x38,0x0b,0xc0,0x93,0xcf,0x42,0xb0,0xdd,0xe6,
    0x53,0xe2,0xbe,0x36,0x83,0x2b,0x4e,0x2b,0xf7,0x7c,0x39,0xf3,0xd8,0xc9,0xec,0xb7,
    0x81,0xbf,0x6e,0x5e,0xf2,0x7b,0x06,0xac,0x8d,0x59,0x14,0xef,0x6f,0xcd,0x5f,0xf3,
    0xb9,0x1a,0xbd,0x62,0x5f,0x34,0x7f,0xcd,0xeb,0xb3,0xe0,0xea,0x49,0x85,0x9e,0xfc,
    0x6d,0x3a,0xe1,0x6b,0x62,0xbf,0xb3,0xbe,0xe8,0xfd,0x2f,0xdb,0x6f,0x22,0x57,0x5c,
    0xce,0x75,0x2e,0x67,0x9a,0xa3,0x8f,0xe1,0xf1,0x3c,0xf9,0xd6,0xc1,0x43,0xf7,0xe0,
    0x45,0x78,0x54,0xe1,0x21,0xbb,0x4d,0xe0,0x9f,0xe0,0xb7,0x19,0xdf,0x4d,0xf8,0xe9,
    0x7e,0xbc,0x8c,0x5f,0xa7,0xeb,0xe3,0x2b,0xe0,0xb7,0xcd,0xa6,0x3d,0xda,0x66,0x58,
    0x03,0x9c,0xba,0x1c,0x27,0xe9,0xb6,0xd9,0xea,0x82,0x83,0xde,0xf7,0x98,0x9f,0xfa,
    0xff,0x2a,0x39,0x43,0x9c,0xf1,0xec,0x4c,0xb6,0x83,0xbf,0x61,0x92,0x6a,0xba,0x03,
    0x96,0xec,0xd4,0x8f,0x14,0x4b,0xfb,0x6f,0xf4,0xe3,0x3b,0x6c,0x2a,0xf8,0x6c,0x73,
    0x1c,0x5e,0x83,0xc3,0x4e,0xc7,0x61,0x17,0x78,0xe2,0xd0,0x0d,0x96,0x38,0xf4,0x3a,
    0x0e,0xd2,0xf5,0xd8,0xea,0x25,0x6f,0x8f,0xe3,0xb0,0x9b,0xdc,0x39,0xc7,0x61,0x0f,
    0x78,0xe2,0x70,0x0f,0x2c,0xd9,0x89,0x43,0x8a,0xd5,0xeb,0x38,0x3c,0xc0,0xa6,0x0b,
    0x9f,0x1e,0xc7,0x61,0x2f,0x1c,0xfa,0x1c,0x87,0x37,0xc1,0x13,0x87,0xb7,0xc0,0x12,
    0x87,0x7e,0xc7,0x41,0xba,0x7d,0xb6,0xfa,0xc9,0xbb,0xcf,0xcd,0xd2,0x7e,0x72,0x3f,
    0x70,0xdf,0x22,0xd5,0x98,0x6c,0xfb,0x5d,0x8d,0x3f,0x62,0xd7,0x8b,0x9f,0xe2,0xdc,
    0x32,0x9e,0xe2,0x3d,0xc8,0x2c,0x0c,0xf0,0x5d,0x54,0x8c,0x83,0xc4,0x38,0xe8,0x62,
    0xcc,0x10,0x47,0x71,0xef,0xdb,0x1a,0x41,0x27,0x4e,0x3f,0x50,0xbf,0x74,0x0f,0x9d,
    0x4e,0xf1,0xbf,0x67,0x7e,0xa5,0x3b,0x8b,0xee,0x1e,0xdc,0xdf,0x45,0xaf,0xef,0xef,
    0xef,0xc6,0x77,0x18,0x7d,0xe2,0x2f,0xfd,0x90,0xad,0x61,0xea,0x19,0x72,0x67,0x78,
    0x98,0x9a,0xf4,0xdc,0x25,0xde,0x11,0xf0,0x2a,0xbd,0x1c,0x73,0xb1,0xa4,0x1b,0xb5,
    0x35,0x46,0xac,0x51,0xce,0x49,0xdf,0xfb,0xe3,0x9c,0xd3,0x21,0xce,0x49,0xf1,0x4f,
    0x80,0xa7,0x5a,0xdf,0x27,0xf6,0x09,0x7a,0x94,0xe2,0x8c,0xc1,0x55,0x36,0x1f,0x50,
    0xc3,0x10,0xf6,0xa3,0xd4,0x31,0xe1,0xea,0x90,0xcd,0xb8,0xad,0x09,0xfc,0xc7,0xc9,
    0xa9,0x7f,0xc7,0x47,0xfc,0x37,0x06,0x2c,0xde,0xa9,0x78,0xc7,0x33,0x6c,0x86,0xbb,
    0x5a,0x85,0xbf,0x7a,0xfe,0x29,0x7a,0x3d,0xbf,0x82,0x7d,0x0e,0x7e,0x9a,0xef,0xae,
    0x78,0x7c,0x41,0x8f,0x75,0x8f,0x7e,0xc6,0xee,0x0c,0xb6,0xd2,0xfd,0x02,0xf6,0x25,
    0xe7,0x78,0x06,0x7e,0xa9,0xbe,0x09,0x77,0xce,0x0f,0xb1,0x19,0xc3,0x7e,0x9c,0xef,
    0x97,0xf2,0x7c,0x45,0x7f,0x06,0xdd,0x1d,0xba,0x0f,0x3e,0xe3,0xe6,0x73,0x84,0xb8,
    0x23,0xce,0xf7,0x2c,0x35,0xce,0x9e,0xbf,0x61,0x77,0x46,0x17,0x39,0xa3,0x0b,0xee,
    0x8c,0xbe,0x06,0x9f,0xe4,0x6e,0x5d,0x02,0x4b,0xff,0x9c,0xcb,0xfc,0x2b,0x2e,0x91,
    0x4b,0xd8,0x15,0xf0,0xa6,0x18,0xbb,0x18,0xff,0x99,0xd7,0xf8,0xaf,0x56,0xd1,0x6f,
    0xb1,0x33,0xbb,0x06,0x57,0xff,0x2d,0xd7,0xfe,0x8f,0xdd,0xb6,0x0e,0x5b,0xff,0x01,
    0x8e,0xd5,0x0a,0xd6,0xf8,0x0b,0x00,0x00
};

// Generated from:
//
// #version 450 core
//
// #extension GL_EXT_samplerless_texture_functions : require
//
// layout(local_size_x = 8, local_size_y = 8, local_size_z = 1)in;
//
// layout(push_constant)uniform PushConstants {
//
//             ivec2 offset;
//     vec2 stretch;
//     vec2 invSrcExtent;
//     int srcLayer;
//     int srcWidth;
//
//     ivec4 blitArea;
//     int destPitch;
//
//     bool flipX;
//     bool flipY;
//     bool rotateXY;
// } params;
//
// layout(set = 0, binding = 0)buffer dst
// {
//
//     uint destData[];
// };
//
// layout(set = 0, binding = 1)uniform utexture2DMS stencil;
//
// void main()
// {
//     ivec2 destSubImageCoords = ivec2(gl_GlobalInvocationID . x * 4, gl_GlobalInvocationID . y);
//     if(any(lessThanEqual(params . blitArea . zw, destSubImageCoords)))
//     {
//         return;
//     }
//
//     destSubImageCoords += params . blitArea . xy;
//             ivec2 srcImageCoords = ivec2(destSubImageCoords);
//
//     srcImageCoords -= params . offset;
//
//     if(params . flipX)
//         srcImageCoords . x = - srcImageCoords . x;
//     if(params . flipY)
//         srcImageCoords . y = - srcImageCoords . y;
//     if(params . rotateXY)
//         srcImageCoords . xy = srcImageCoords . yx;
//
//     int xDir = params . flipX ? - 1 : 1;
//
//     uint outStencils = 0;
//
//     for(int i = 0;i < 4;++ i)
//     {
//
//         if(srcImageCoords . x >= 0 && srcImageCoords . x < params . srcWidth)
//         {
//
//             uint stencilValue = texelFetch(stencil, srcImageCoords, 0). x;
//
//             outStencils |=(stencilValue & 0xFF)<<(i * 8);
//
//         }
//
//         srcImageCoords . x += xDir;
//     }
//
//     destData[gl_GlobalInvocationID . y * params . destPitch + gl_GlobalInvocationID . x]= outStencils;
// }
