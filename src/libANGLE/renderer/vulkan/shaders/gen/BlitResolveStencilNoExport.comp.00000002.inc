// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2020 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/BlitResolveStencilNoExport.comp.00000002.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kBlitResolveStencilNoExport_comp_00000002[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x5d,0x96,0xdd,0x6f,0x94,0x55,
    0x10,0xc6,0xcf,0xee,0xb6,0xbb,0x65,0xb5,0x2d,0x85,0x16,0x90,0xef,0x5a,0x53,0x90,
    0x25,0x80,0x09,0xb2,0x15,0x29,0x2a,0x4d,0x14,0x92,0xa6,0xd0,0x36,0xdc,0x18,0x14,
    0x36,0x78,0x41,0x2f,0xfa,0x91,0x94,0x68,0x9b,0x54,0xa4,0x4d,0xc5,0xa8,0xc1,0x40,
    0xbc,0x30,0x81,0xda,0x04,0xc5,0x04,0x28,0x1f,0x21,0x5c,0x71,0xe5,0x0d,0xa2,0xf5,
    0x0a,0xff,0x18,0xbf,0x63,0x74,0x9e,0xf3,0xfe,0x0e,0x4e,0xb6,0xc9,0xc9,0xbb,0xe7,
    0x99,0x99,0x67,0xe6,0x99,0x33,0xe7,0x7d,0x5b,0xc8,0x77,0x95,0x42,0xc8,0x85,0x72,
    0x68,0x0a,0xbf,0x84,0xec,0xaf,0x2d,0xe4,0x0d,0x09,0xe1,0x99,0x50,0x8c,0xcf,0xb7,
    0xfa,0x87,0xfb,0x77,0x4d,0x9e,0x7d,0x6f,0xd7,0xde,0x97,0xf7,0xc8,0xde,0x12,0x0a,
    0xd1,0x4f,0xb6,0x56,0xf3,0x69,0xb4,0x67,0x83,0xad,0xd1,0xda,0xc8,0x98,0xf0,0x66,
    0x5b,0x2b,0x0d,0x6f,0x88,0x5c,0xc1,0x98,0xb3,0x15,0xb9,0x0c,0x6d,0x8e,0xdc,0x21,
    0x6c,0xb4,0x75,0xd8,0xa2,0x37,0x91,0xb7,0x8b,0x67,0xc2,0x72,0x60,0x4d,0x0e,0xcb,
    0x83,0xad,0x74,0x58,0x01,0x6c,0x9d,0xc3,0x1a,0xc0,0x7c,0x8e,0x46,0xb0,0xad,0x0e,
    0x2b,0x82,0xed,0x71,0x58,0x09,0x6c,0xaf,0xc3,0x9a,0xc0,0x7a,0x1c,0xb6,0x02,0xec,
    0x40,0xd4,0x55,0x78,0x5a,0x9f,0x34,0x5e,0xb0,0xe7,0xf3,0xe8,0x49,0xfb,0x4e,0xd7,
    0x83,0xab,0xe4,0x6e,0x80,0x6f,0xa1,0xae,0x07,0xe2,0x5b,0x40,0x9b,0xfc,0x17,0xeb,
    0xf8,0x16,0xe1,0x4b,0xfb,0x3b,0xf4,0xf4,0x39,0x5b,0xab,0xad,0x8a,0x7c,0xb4,0x17,
    0x62,0xbc,0x7e,0x77,0x98,0x4f,0x11,0xed,0xaa,0x61,0xad,0xed,0x4b,0xd4,0x90,0xec,
    0x65,0xec,0x01,0xbb,0xf8,0xca,0xd4,0xb0,0xd5,0xf6,0xcf,0x12,0x2b,0xfc,0x55,0xf6,
    0xcd,0x60,0x15,0xe2,0x5b,0x88,0x97,0x7f,0x2b,0xb6,0xb2,0xb3,0xaf,0x42,0x73,0xda,
    0x77,0xe0,0xb3,0xc6,0xb2,0xac,0x27,0xbf,0x72,0x6f,0xb0,0xe7,0x7a,0x6a,0xd3,0x7e,
    0xa3,0xeb,0xd7,0x66,0xcb,0x9c,0xce,0x69,0x03,0xab,0xc8,0x4a,0x7e,0x65,0xb7,0x54,
    0xcb,0x66,0xce,0x6b,0x13,0xb5,0x6b,0xbf,0x05,0xac,0xe2,0x7a,0xd3,0x88,0x7f,0x27,
    0x36,0xf1,0xb5,0x5b,0x15,0xdd,0xd4,0xb1,0xcd,0x9e,0xdd,0xd4,0x95,0xe2,0xaa,0x4e,
    0x73,0x0f,0x71,0x25,0x67,0xef,0x65,0x2f,0xfb,0x41,0xec,0x65,0x67,0x3f,0xe2,0x7a,
    0xa8,0xfd,0x00,0xf3,0x96,0xf6,0x27,0xea,0xea,0x3c,0x63,0xeb,0x5f,0xfb,0x4b,0xfb,
    0x49,0xfa,0x22,0xfe,0x19,0x7c,0x8b,0x71,0x16,0x56,0x84,0x79,0x72,0xe5,0xc2,0xff,
    0x7f,0x39,0xb7,0x57,0xcc,0xc7,0xfc,0x9e,0xa7,0x37,0xda,0x5f,0x70,0x73,0xf0,0x29,
    0x1c,0xfe,0xdc,0x2e,0xaa,0x86,0xd8,0xcf,0x42,0x9c,0xe5,0x72,0x3c,0x97,0x6c,0x66,
    0xaf,0xc2,0xfb,0x35,0x7d,0x5a,0x80,0x57,0xfb,0xc5,0xba,0xde,0x5d,0xa3,0x56,0xf9,
    0xdf,0xc2,0xe6,0xe7,0xe5,0x36,0xbd,0xd8,0x69,0x5e,0x9a,0xbb,0x3b,0x60,0xb7,0x99,
    0x9d,0x7d,0x76,0x62,0x79,0x6a,0x0b,0xcc,0xea,0x1f,0x86,0xe8,0x1c,0x7f,0xb7,0xdd,
    0x5d,0xf0,0xbf,0xed,0xb7,0x66,0xf3,0x1e,0x76,0x3d,0xdf,0x30,0xaf,0x56,0xde,0x25,
    0xcd,0xcc,0x6e,0x2f,0x79,0xdb,0xc0,0xe7,0xcd,0xa7,0x1c,0xef,0x54,0x86,0x69,0x7e,
    0x67,0xa8,0xbd,0x1d,0x3c,0xf1,0xac,0x81,0xa7,0xc3,0xf1,0xac,0x05,0x4f,0x31,0xeb,
    0xc0,0x8e,0x59,0x4c,0x89,0xfb,0xda,0x0e,0x2e,0x9e,0x4e,0xee,0xf9,0x16,0xe6,0xb1,
    0x97,0xd9,0xef,0x02,0x3f,0x6a,0x51,0x8a,0x7b,0x01,0xac,0x8b,0x9e,0x49,0xf7,0x03,
    0x8b,0xd7,0x7c,0x6e,0xc7,0x2e,0xee,0x2b,0x16,0xaf,0x79,0x7d,0x11,0x5c,0x3d,0xa9,
    0xd0,0x93,0xbf,0xcc,0x26,0x7c,0x47,0xec,0x77,0xd6,0x17,0xfd,0xfe,0xd3,0x9e,0x77,
    0xd9,0x57,0x5c,0xce,0xdd,0x2e,0x67,0x9a,0xa3,0xf3,0xe8,0x78,0x89,0x7c,0xbb,0xd1,
    0xa1,0x7b,0xf0,0x0a,0x3a,0xaa,0xe8,0x90,0xdf,0x7e,0xf0,0x39,0xe2,0x0e,0x10,0xbb,
    0x9f,0x38,0xdd,0x8f,0xd7,0x88,0xeb,0x75,0x7d,0x7c,0x1d,0x7c,0xc9,0x7c,0xba,0xa3,
    0x6f,0x86,0xb5,0xa0,0xa9,0xcf,0x69,0x92,0xed,0x90,0xad,0x3e,0x34,0xe8,0xf7,0xa0,
    0xc5,0xa9,0xff,0x6f,0x92,0x33,0x50,0x83,0xb0,0x7e,0xee,0x94,0x6c,0x43,0x86,0xa8,
    0xae,0x87,0xe0,0xc9,0x57,0x3d,0x49,0x7c,0x7a,0xfe,0x4a,0x4f,0x7e,0xc0,0xa7,0x42,
    0xcc,0x21,0xa7,0xe3,0x28,0x3a,0x06,0x9c,0x8e,0x63,0xe0,0x49,0xc7,0x20,0x58,0xd2,
    0x31,0xec,0x74,0x0c,0xc6,0x7a,0x42,0xc4,0x94,0x77,0xc8,0xe9,0x38,0x4e,0xee,0x9c,
    0xd3,0xf1,0x36,0x3a,0x8e,0x3b,0x1d,0xdf,0x83,0x27,0x5f,0xe9,0x48,0x7c,0xc3,0x4e,
    0xc7,0x63,0x7c,0xfa,0x88,0x19,0x72,0x3a,0xde,0x41,0xc7,0x09,0xa7,0xe3,0x5d,0xf0,
    0xa4,0xe3,0x24,0x58,0xd2,0x51,0x73,0x3a,0x64,0x3b,0x65,0xab,0x46,0xde,0x53,0x6e,
    0xa6,0x4e,0x93,0xfb,0xb1,0x7b,0x27,0xa9,0xc6,0xe4,0x5b,0x73,0x35,0xfe,0x8c,0xdf,
    0x30,0x71,0xe2,0xb9,0x69,0x3a,0xa5,0x7d,0x84,0x99,0x38,0xc3,0xfb,0x54,0x1c,0xa3,
    0x70,0x8c,0x3a,0x8e,0x65,0x78,0xc4,0xfb,0xc8,0xd6,0x04,0x36,0x69,0xfa,0x89,0xfa,
    0x65,0x7b,0xe2,0x6c,0xe2,0xff,0x91,0x39,0xae,0xc5,0x3b,0x95,0xd9,0xee,0xa3,0xfd,
    0x2c,0x76,0xbd,0x87,0x7f,0x33,0xbd,0xe3,0xd8,0x93,0x7e,0xd9,0xf5,0x8f,0xd1,0x38,
    0xf5,0x8c,0xb9,0x73,0x7c,0x9f,0x9a,0x42,0x7c,0x37,0x65,0x7c,0x1f,0x80,0x57,0xe9,
    0xe5,0xb4,0xe3,0x92,0x6d,0xca,0xd6,0x34,0x5c,0x53,0x9c,0x93,0xde,0xfb,0x1f,0x72,
    0x4e,0x93,0x9c,0x93,0xf8,0xcf,0x81,0xa7,0x5a,0x3f,0x82,0xfb,0x1c,0x3d,0x4a,0x3c,
    0xd3,0x68,0xed,0x8e,0x77,0x3a,0xab,0x61,0x0c,0xff,0x29,0xea,0x98,0x73,0x75,0xc8,
    0x67,0x36,0xce,0x5e,0x16,0x3f,0x4b,0x4e,0x7d,0x43,0x3e,0xe1,0xfb,0x71,0xd2,0xf8,
    0xf4,0xed,0xf8,0x0c,0x6c,0x99,0x3b,0x5b,0x45,0xbf,0x7a,0xfe,0x39,0xf6,0x10,0x7b,
    0x98,0x61,0x5f,0x80,0x5f,0xe4,0xfd,0x2b,0x1d,0x97,0xe8,0xf1,0x40,0x3c,0xb7,0xcc,
    0xef,0x32,0xbe,0x97,0xe2,0xec,0x66,0xd8,0x97,0x9c,0xe3,0x65,0xf4,0xa5,0xfa,0xe6,
    0xdc,0x39,0x3f,0xc1,0x67,0x1a,0xff,0x59,0xde,0x63,0xca,0xf3,0x15,0xfd,0x19,0x71,
    0x77,0xe8,0x11,0xf8,0xb2,0x9b,0xcf,0x09,0x78,0x27,0x5c,0xec,0x15,0x6a,0xac,0x9f,
    0xbf,0x71,0x77,0x46,0xdf,0x70,0x46,0xd7,0xdc,0x19,0x7d,0x0b,0x3e,0xc3,0xdd,0xba,
    0x0e,0x96,0xbe,0x3d,0xdf,0xf1,0xcd,0xb8,0x4e,0x2e,0x61,0x37,0xc0,0xdb,0x22,0x77,
    0x31,0x7e,0x3b,0x97,0xf8,0xbe,0x56,0xb1,0x1f,0xb4,0x33,0x5b,0x42,0xab,0x7f,0xa7,
    0xeb,0xf9,0x8f,0xdd,0xb6,0x1e,0x5b,0xff,0x01,0xc3,0x23,0x5d,0x27,0x00,0x0c,0x00,
    0x00
};

// Generated from:
//
// #version 450 core
//
// #extension GL_EXT_samplerless_texture_functions : require
//
// layout(local_size_x = 8, local_size_y = 8, local_size_z = 1)in;
//
// layout(push_constant)uniform PushConstants {
//
//             ivec2 offset;
//     vec2 stretch;
//     vec2 invSrcExtent;
//     int srcLayer;
//     int srcWidth;
//
//     ivec4 blitArea;
//     int destPitch;
//
//     bool flipX;
//     bool flipY;
//     bool rotateXY;
// } params;
//
// layout(set = 0, binding = 0)buffer dest
// {
//
//     uint destData[];
// };
//
// layout(set = 0, binding = 1)uniform utexture2DMS stencil;
//
// void main()
// {
//     ivec2 destSubImageCoords = ivec2(gl_GlobalInvocationID . x * 4, gl_GlobalInvocationID . y);
//     if(any(lessThanEqual(params . blitArea . zw, destSubImageCoords)))
//     {
//         return;
//     }
//
//     destSubImageCoords += params . blitArea . xy;
//             ivec2 srcImageCoords = ivec2(destSubImageCoords);
//
//     srcImageCoords -= params . offset;
//
//     if(params . flipX)
//     {
//         srcImageCoords . x = - srcImageCoords . x;
//
//         srcImageCoords . x -= 1;
//     }
//     if(params . flipY)
//     {
//         srcImageCoords . y = - srcImageCoords . y;
//         srcImageCoords . y -= 1;
//     }
//     if(params . rotateXY)
//         srcImageCoords . xy = srcImageCoords . yx;
//
//     int xDir = params . flipX ? - 1 : 1;
//
//     uint outStencils = 0;
//
//     for(int i = 0;i < 4;++ i)
//     {
//
//         if(srcImageCoords . x >= 0 && srcImageCoords . x < params . srcWidth)
//         {
//
//             uint stencilValue = texelFetch(stencil, srcImageCoords, 0). x;
//
//             outStencils |=(stencilValue & 0xFF)<<(i * 8);
//
//         }
//
//         srcImageCoords . x += xDir;
//     }
//
//     destData[gl_GlobalInvocationID . y * params . destPitch + gl_GlobalInvocationID . x]= outStencils;
// }
