	// 8.14.3766
	 #pragma once
const uint32_t kConvertVertex_comp_00000006[] = {
	0x07230203,0x00010000,0x00080008,0x00000172,0x00000000,0x00020011,0x00000001,0x0006000b,
	0x00000001,0x4c534c47,0x6474732e,0x3035342e,0x00000000,0x0003000e,0x00000000,0x00000001,
	0x0006000f,0x00000005,0x00000004,0x6e69616d,0x00000000,0x000000ac,0x00060010,0x00000004,
	0x00000011,0x00000040,0x00000001,0x00000001,0x00030003,0x00000002,0x000001c2,0x00040005,
	0x00000004,0x6e69616d,0x00000000,0x00060005,0x00000025,0x68737550,0x736e6f43,0x746e6174,
	0x00000073,0x00060006,0x00000025,0x00000000,0x7074756f,0x6f437475,0x00746e75,0x00070006,
	0x00000025,0x00000001,0x706d6f63,0x6e656e6f,0x756f4374,0x0000746e,0x00060006,0x00000025,
	0x00000002,0x4f637273,0x65736666,0x00000074,0x00060006,0x00000025,0x00000003,0x74736564,
	0x7366664f,0x00007465,0x00040006,0x00000025,0x00000004,0x0000734e,0x00040006,0x00000025,
	0x00000005,0x00007342,0x00040006,0x00000025,0x00000006,0x00007353,0x00040006,0x00000025,
	0x00000007,0x00007345,0x00040006,0x00000025,0x00000008,0x0000644e,0x00040006,0x00000025,
	0x00000009,0x00006442,0x00040006,0x00000025,0x0000000a,0x00006453,0x00040006,0x00000025,
	0x0000000b,0x00006445,0x00040005,0x00000027,0x61726170,0x0000736d,0x00030005,0x00000061,
	0x00637273,0x00050006,0x00000061,0x00000000,0x44637273,0x00617461,0x00030005,0x00000063,
	0x00000000,0x00040005,0x000000a7,0x74736564,0x00000000,0x00060006,0x000000a7,0x00000000,
	0x74736564,0x61746144,0x00000000,0x00030005,0x000000a9,0x00000000,0x00080005,0x000000ac,
	0x475f6c67,0x61626f6c,0x766e496c,0x7461636f,0x496e6f69,0x00000044,0x00050048,0x00000025,
	0x00000000,0x00000023,0x00000000,0x00050048,0x00000025,0x00000001,0x00000023,0x00000004,
	0x00050048,0x00000025,0x00000002,0x00000023,0x00000008,0x00050048,0x00000025,0x00000003,
	0x00000023,0x0000000c,0x00050048,0x00000025,0x00000004,0x00000023,0x00000010,0x00050048,
	0x00000025,0x00000005,0x00000023,0x00000014,0x00050048,0x00000025,0x00000006,0x00000023,
	0x00000018,0x00050048,0x00000025,0x00000007,0x00000023,0x0000001c,0x00050048,0x00000025,
	0x00000008,0x00000023,0x00000020,0x00050048,0x00000025,0x00000009,0x00000023,0x00000024,
	0x00050048,0x00000025,0x0000000a,0x00000023,0x00000028,0x00050048,0x00000025,0x0000000b,
	0x00000023,0x0000002c,0x00030047,0x00000025,0x00000002,0x00040047,0x00000060,0x00000006,
	0x00000004,0x00050048,0x00000061,0x00000000,0x00000023,0x00000000,0x00030047,0x00000061,
	0x00000003,0x00040047,0x00000063,0x00000022,0x00000000,0x00040047,0x00000063,0x00000021,
	0x00000001,0x00040047,0x000000a6,0x00000006,0x00000004,0x00050048,0x000000a7,0x00000000,
	0x00000023,0x00000000,0x00030047,0x000000a7,0x00000003,0x00040047,0x000000a9,0x00000022,
	0x00000000,0x00040047,0x000000a9,0x00000021,0x00000000,0x00040047,0x000000ac,0x0000000b,
	0x0000001c,0x00040047,0x000000ec,0x0000000b,0x00000019,0x00020013,0x00000002,0x00030021,
	0x00000003,0x00000002,0x00040015,0x00000006,0x00000020,0x00000000,0x00030016,0x00000011,
	0x00000020,0x000e001e,0x00000025,0x00000006,0x00000006,0x00000006,0x00000006,0x00000006,
	0x00000006,0x00000006,0x00000006,0x00000006,0x00000006,0x00000006,0x00000006,0x00040020,
	0x00000026,0x00000009,0x00000025,0x0004003b,0x00000026,0x00000027,0x00000009,0x00040015,
	0x00000028,0x00000020,0x00000001,0x0004002b,0x00000028,0x00000029,0x00000006,0x00040020,
	0x0000002a,0x00000009,0x00000006,0x0004002b,0x00000006,0x0000002f,0x00000004,0x0004002b,
	0x00000028,0x00000032,0x00000002,0x0004002b,0x00000006,0x0000003b,0x00000008,0x0004002b,
	0x00000028,0x00000042,0x00000008,0x0004002b,0x00000028,0x0000004c,0x00000004,0x00020014,
	0x0000004f,0x0004002b,0x00000006,0x00000052,0x00000003,0x0004002b,0x00000011,0x00000057,
	0x00000000,0x0003001d,0x00000060,0x00000006,0x0003001e,0x00000061,0x00000060,0x00040020,
	0x00000062,0x00000002,0x00000061,0x0004003b,0x00000062,0x00000063,0x00000002,0x0004002b,
	0x00000028,0x00000064,0x00000000,0x00040020,0x00000067,0x00000002,0x00000006,0x0004002b,
	0x00000028,0x00000078,0xffffffff,0x0004002b,0x00000028,0x0000007a,0x00000001,0x0004002b,
	0x00000006,0x0000008a,0x00010000,0x0004002b,0x00000011,0x00000092,0x37800000,0x0003001d,
	0x000000a6,0x00000006,0x0003001e,0x000000a7,0x000000a6,0x00040020,0x000000a8,0x00000002,
	0x000000a7,0x0004003b,0x000000a8,0x000000a9,0x00000002,0x00040017,0x000000aa,0x00000006,
	0x00000003,0x00040020,0x000000ab,0x00000001,0x000000aa,0x0004003b,0x000000ab,0x000000ac,
	0x00000001,0x0004002b,0x00000006,0x000000ad,0x00000000,0x00040020,0x000000ae,0x00000001,
	0x00000006,0x0004002b,0x00000028,0x000000b1,0x00000003,0x0004002b,0x00000006,0x000000c8,
	0x00000001,0x0004002b,0x00000006,0x000000eb,0x00000040,0x0006002c,0x000000aa,0x000000ec,
	0x000000eb,0x000000c8,0x000000c8,0x00050036,0x00000002,0x00000004,0x00000000,0x00000003,
	0x000200f8,0x00000005,0x000300f7,0x000000ed,0x00000000,0x000300fb,0x000000ad,0x000000ee,
	0x000200f8,0x000000ee,0x00050041,0x000000ae,0x000000b8,0x000000ac,0x000000ad,0x0004003d,
	0x00000006,0x000000b9,0x000000b8,0x00050041,0x0000002a,0x000000ba,0x00000027,0x00000064,
	0x0004003d,0x00000006,0x000000bb,0x000000ba,0x000500ae,0x0000004f,0x000000bc,0x000000b9,
	0x000000bb,0x000300f7,0x000000be,0x00000000,0x000400fa,0x000000bc,0x000000bd,0x000000be,
	0x000200f8,0x000000bd,0x000200f9,0x000000ed,0x000200f8,0x000000be,0x000200f9,0x000000c2,
	0x000200f8,0x000000c2,0x000700f5,0x00000006,0x00000171,0x000000ad,0x000000be,0x000000e5,
	0x000000c5,0x000700f5,0x00000006,0x0000016d,0x000000ad,0x000000be,0x000000e7,0x000000c5,
	0x000500b0,0x0000004f,0x000000c9,0x0000016d,0x000000c8,0x000400f6,0x000000c4,0x000000c5,
	0x00000000,0x000400fa,0x000000c9,0x000000c3,0x000000c4,0x000200f8,0x000000c3,0x00050080,
	0x00000006,0x000000cf,0x000000b9,0x0000016d,0x00050041,0x0000002a,0x000000d1,0x00000027,
	0x0000007a,0x0004003d,0x00000006,0x000000d2,0x000000d1,0x000500ae,0x0000004f,0x000000d3,
	0x000000cf,0x000000d2,0x000300f7,0x000000d5,0x00000000,0x000400fa,0x000000d3,0x000000d4,
	0x000000d5,0x000200f8,0x000000d4,0x000200f9,0x000000c4,0x000200f8,0x000000d5,0x000300f7,
	0x00000145,0x00000000,0x000300fb,0x000000ad,0x0000010b,0x000200f8,0x0000010b,0x00050041,
	0x0000002a,0x0000010d,0x00000027,0x00000042,0x0004003d,0x00000006,0x0000010e,0x0000010d,
	0x00050086,0x00000006,0x0000010f,0x000000cf,0x0000010e,0x00050089,0x00000006,0x00000113,
	0x000000cf,0x0000010e,0x00050041,0x0000002a,0x00000115,0x00000027,0x0000004c,0x0004003d,
	0x00000006,0x00000116,0x00000115,0x000500ae,0x0000004f,0x00000117,0x00000113,0x00000116,
	0x000500b0,0x0000004f,0x00000119,0x00000113,0x00000052,0x000500a7,0x0000004f,0x0000011a,
	0x00000117,0x00000119,0x000300f7,0x0000011c,0x00000000,0x000400fa,0x0000011a,0x0000011b,
	0x0000011c,0x000200f8,0x0000011b,0x000200f9,0x00000145,0x000200f8,0x0000011c,0x00050041,
	0x0000002a,0x0000014a,0x00000027,0x00000029,0x0004003d,0x00000006,0x0000014b,0x0000014a,
	0x00050084,0x00000006,0x0000014c,0x0000010f,0x0000014b,0x00050084,0x00000006,0x0000014e,
	0x00000113,0x0000002f,0x00050080,0x00000006,0x0000014f,0x0000014c,0x0000014e,0x00050041,
	0x0000002a,0x00000150,0x00000027,0x00000032,0x0004003d,0x00000006,0x00000151,0x00000150,
	0x00050080,0x00000006,0x00000152,0x0000014f,0x00000151,0x00050086,0x00000006,0x00000121,
	0x00000152,0x0000002f,0x00060041,0x00000067,0x00000122,0x00000063,0x00000064,0x00000121,
	0x0004003d,0x00000006,0x00000123,0x00000122,0x00050089,0x00000006,0x00000157,0x00000152,
	0x0000002f,0x00050084,0x00000006,0x00000158,0x00000157,0x0000003b,0x0004007c,0x00000006,
	0x0000012f,0x00000078,0x000500aa,0x0000004f,0x00000135,0x00000113,0x00000052,0x000500a7,
	0x0000004f,0x00000136,0x00000117,0x00000135,0x000300f7,0x0000013e,0x00000000,0x000400fa,
	0x00000136,0x00000137,0x00000138,0x000200f8,0x00000138,0x000500c2,0x00000006,0x0000013b,
	0x00000123,0x00000158,0x000500c7,0x00000006,0x0000013d,0x0000013b,0x0000012f,0x000200f9,
	0x0000013e,0x000200f8,0x00000137,0x000200f9,0x0000013e,0x000200f8,0x0000013e,0x000700f5,
	0x00000006,0x0000016e,0x0000013d,0x00000138,0x0000008a,0x00000137,0x0004007c,0x00000028,
	0x00000140,0x0000016e,0x0004006f,0x00000011,0x00000141,0x00000140,0x00050085,0x00000011,
	0x00000143,0x00000141,0x00000092,0x000200f9,0x00000145,0x000200f8,0x00000145,0x000700f5,
	0x00000011,0x0000016f,0x00000057,0x0000011b,0x00000143,0x0000013e,0x0004007c,0x00000028,
	0x00000161,0x0000016f,0x0004007c,0x00000006,0x00000162,0x00000161,0x000500c5,0x00000006,
	0x000000e5,0x00000171,0x00000162,0x000200f9,0x000000c5,0x000200f8,0x000000c5,0x00050080,
	0x00000006,0x000000e7,0x0000016d,0x0000007a,0x000200f9,0x000000c2,0x000200f8,0x000000c4,
	0x00050041,0x0000002a,0x00000167,0x00000027,0x000000b1,0x0004003d,0x00000006,0x00000168,
	0x00000167,0x00050086,0x00000006,0x00000169,0x00000168,0x0000002f,0x00050080,0x00000006,
	0x0000016a,0x000000b9,0x00000169,0x00060041,0x00000067,0x0000016c,0x000000a9,0x00000064,
	0x0000016a,0x0003003e,0x0000016c,0x00000171,0x000200f9,0x000000ed,0x000200f8,0x000000ed,
	0x000100fd,0x00010038
};

// Generated from:
//
// #version 450 core
//
// layout(local_size_x = 64, local_size_y = 1, local_size_z = 1)in;
//
// layout(set = 0, binding = 0)buffer dest
// {
//     uint destData[];
// };
//
// layout(set = 0, binding = 1)buffer src
// {
//     uint srcData[];
// };
//
// layout(push_constant)uniform PushConstants
// {
//
//     uint outputCount;
//
//     uint componentCount;
//
//     uint srcOffset;
//     uint destOffset;
//
//     uint Ns;
//     uint Bs;
//     uint Ss;
//     uint Es;
//
//     uint Nd;
//     uint Bd;
//     uint Sd;
//     uint Ed;
// } params;
//
// uint getSourceComponentOffset(uint vertex, uint component)
// {
//     return vertex * params . Ss + component * 4 + params . srcOffset;
// }
//
// uint getDestinationComponentOffset(uint vertex, uint component)
// {
//     return vertex * params . Sd + component * 4 + params . destOffset;
// }
//
// uint getShiftBits(uint offset, uint B)
// {
//
//     uint shift =(offset % 4)* 8;
//
//     return shift;
// }
//
//       float loadSourceComponent(uint cd)
// {
//
//     uint vertex = cd / params . Nd;
//     uint component = cd % params . Nd;
//
//     if(component >= params . Ns && component < 3)
//     {
//         return 0;
//     }
//
//     uint offset = getSourceComponentOffset(vertex, component);
//     uint block = srcData[offset / 4];
//
//     uint shiftBits = getShiftBits(offset, 4);
//     uint valueBits = 4 * 8;
//     uint valueMask = valueBits == 32 ? - 1 :(1 << valueBits)- 1;
//
//     uint valueAsUint;
//
//     if(component >= params . Ns && component == 3)
//     {
//
//         valueAsUint = 0x10000;
//
//     }
//     else
//     {
//         valueAsUint =(block >> shiftBits)& valueMask;
//     }
//
//     float divisor = 1.0f / 65536.0f;
//           float value = int(valueAsUint)* divisor;
//
//     return value;
// }
//
//        float convertComponent(float srcValue)
// {
//
//     return srcValue;
// }
//
// uint makeDestinationComponent(uint cd, float value)
// {
//
//     uint valueAsUint = floatBitsToInt(value);
//
//     return valueAsUint;
// }
//
// void storeDestinationComponents(uint valueAsUint)
// {
//
//     destData[gl_GlobalInvocationID . x + params . destOffset / 4]= valueAsUint;
// }
//
// void main()
// {
//     if(gl_GlobalInvocationID . x >= params . outputCount)
//         return;
//
//     uint valueOut = 0;
//     for(uint i = 0;i < 1;++ i)
//     {
//         uint cd = gl_GlobalInvocationID . x * 1 + i;
//         if(cd >= params . componentCount)
//         {
//             break;
//         }
//
//               float srcValue = loadSourceComponent(cd);
//                float destValue = convertComponent(srcValue);
//         valueOut |= makeDestinationComponent(cd, destValue);
//     }
//
//     storeDestinationComponents(valueOut);
// }
