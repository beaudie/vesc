// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/BlitResolveStencilNoExport.comp.00000003.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kBlitResolveStencilNoExport_comp_00000003[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x5d,0x95,0xeb,0x6f,0x94,0x55,
    0x10,0xc6,0xdf,0xbd,0x74,0xb7,0xac,0xb6,0xa5,0xd8,0x72,0xbf,0xd5,0x9a,0xa2,0xae,
    0x01,0x4c,0xd0,0xad,0x48,0x51,0x69,0x22,0xa2,0x6d,0x01,0x2b,0xd2,0xf8,0xa5,0x36,
    0x91,0xb6,0x06,0xc5,0x36,0x22,0xda,0xa6,0xa2,0x20,0x01,0x35,0x18,0x89,0x1f,0x48,
    0xa0,0x36,0x41,0x31,0x31,0x50,0xd0,0x18,0x43,0xe2,0x17,0x44,0x51,0x63,0xf0,0xff,
    0xf1,0x1e,0xa3,0xf3,0x9c,0xfd,0x8d,0x99,0x74,0x93,0xc9,0xd9,0xf3,0xcc,0xf5,0x99,
    0x33,0xe7,0x3d,0x85,0x7c,0x67,0x39,0x2b,0xe4,0xb2,0x4a,0xd6,0x98,0xfd,0x92,0xd5,
    0x7f,0xad,0x59,0x3e,0xcb,0xd9,0x7a,0x5b,0x56,0x4a,0xeb,0xce,0xbe,0xc1,0xbe,0x8d,
    0xaf,0x1e,0x7e,0x61,0xe3,0x96,0x07,0x36,0x4b,0xdf,0x9c,0x15,0x92,0x9d,0x74,0x2d,
    0x66,0xd3,0x60,0x6b,0xd1,0xe4,0xe5,0x91,0x17,0x0f,0x09,0x6f,0x32,0x59,0x6c,0x78,
    0x31,0xc5,0xca,0x2c,0x72,0x5d,0x52,0x2c,0x43,0x9b,0x52,0xec,0x2c,0x5b,0x6d,0xf2,
    0x84,0x79,0xaf,0x21,0x6f,0x27,0xab,0x63,0x39,0xb0,0xc6,0x80,0xe5,0xc1,0x16,0x07,
    0xac,0x00,0xb6,0x3c,0x60,0x45,0xb0,0x98,0xa3,0x01,0x6c,0x7d,0xc0,0x4a,0x60,0x9b,
    0x03,0x56,0x06,0xdb,0x12,0xb0,0x46,0xb0,0xee,0x80,0x2d,0x02,0xdb,0x96,0x78,0x15,
    0xfe,0xaf,0x4f,0x1c,0x8f,0xda,0x7a,0x27,0x7c,0x7c,0xdf,0x11,0x7a,0x70,0x9e,0xdc,
    0x45,0xe2,0xcd,0x2e,0xe8,0x81,0xe2,0xcd,0x86,0x78,0x73,0x0b,0xe2,0xcd,0x11,0xcf,
    0xf7,0x57,0xe8,0xe9,0x0a,0x93,0x3b,0xcc,0x2b,0x9f,0xf4,0x85,0xd4,0x1b,0xfd,0x6f,
    0x37,0x9b,0x12,0xdc,0x55,0xc3,0x32,0xdb,0x97,0xa9,0xc1,0xf5,0x15,0xf4,0x19,0x7a,
    0xc5,0xab,0xd0,0xdf,0xf5,0xb6,0xbf,0x1d,0x5f,0xe1,0x0f,0xb3,0x6f,0x02,0xab,0xe2,
    0xdf,0x8c,0xbf,0xec,0x5b,0xd0,0x55,0x82,0x7e,0x09,0x9c,0x7d,0xdf,0x8e,0xcd,0x52,
    0xcb,0xb2,0x92,0xfc,0xca,0xbd,0xca,0xd6,0x95,0xd4,0xa6,0xfd,0xea,0xd0,0xaf,0xb5,
    0x96,0xd9,0xcf,0x69,0x15,0x52,0x42,0xdc,0xae,0x12,0x44,0xb5,0xac,0xe5,0xbc,0xd6,
    0x50,0xbb,0xf6,0xeb,0xc0,0xaa,0xa1,0x37,0x0d,0xd8,0x77,0xa0,0x53,0xbc,0x36,0xab,
    0xa2,0x8b,0x3a,0x36,0xd8,0xda,0x45,0x5d,0xee,0x57,0x0b,0x9c,0xbb,0xf1,0x2b,0x07,
    0x7d,0x0f,0x7b,0xe9,0xb7,0xa3,0xaf,0x04,0xfd,0x2e,0xe6,0xcb,0xf7,0x83,0x0b,0xea,
    0x1a,0x36,0xf9,0xd7,0x7e,0xbe,0x7f,0x3e,0xf4,0x5c,0xfb,0x83,0xf4,0x45,0xf1,0x0f,
    0xe3,0x5b,0x4a,0xb3,0xb0,0x28,0x9b,0x21,0x57,0x8e,0x1a,0x73,0x41,0xbc,0xe6,0x37,
    0xf9,0x3f,0x43,0x6f,0xb4,0x3f,0x0a,0xe6,0x39,0x8e,0x31,0x07,0xea,0xc1,0x09,0xe2,
    0xfb,0xfe,0x5d,0x72,0xc4,0x73,0x3d,0xad,0x9a,0x53,0xbf,0x0b,0x69,0xd6,0x2b,0xe9,
    0xdc,0xea,0x33,0x7d,0x9e,0xbc,0x1f,0xdb,0xaa,0x19,0x9a,0x25,0xaf,0xf6,0x73,0x60,
    0x9e,0xf7,0x02,0xb9,0x64,0x7f,0x09,0x5d,0x9c,0xa7,0x79,0x7a,0x77,0x9f,0x59,0x69,
    0x2e,0xaf,0x80,0xcd,0x33,0x5b,0x0f,0xda,0x89,0xe6,0xa9,0x2d,0xa3,0xe6,0x3f,0x0c,
    0xd1,0x39,0xff,0x6e,0xbb,0xab,0xe0,0x7f,0xdb,0x7f,0xcd,0xee,0x17,0xe8,0xb5,0x3e,
    0x66,0x56,0x2d,0x7c,0x6b,0x9a,0x98,0xed,0x1e,0xf2,0xb6,0x82,0x9f,0x30,0x9b,0x4a,
    0xba,0x73,0x75,0x6c,0x49,0xea,0x63,0xbd,0xf6,0x36,0x70,0x8f,0xb3,0x94,0x38,0xed,
    0x21,0xce,0x32,0x70,0xf7,0x59,0x0e,0xb6,0xc7,0x7c,0xca,0xdc,0xe7,0x36,0x70,0xc5,
    0xe9,0xe0,0x3b,0xb0,0x8e,0x79,0xed,0xe1,0x6e,0x74,0x82,0xef,0x36,0x2f,0xf9,0xdd,
    0x05,0xd6,0xc9,0xac,0x8a,0xf7,0xd7,0xe6,0xaf,0xf9,0xbd,0x1b,0xfd,0x8a,0x74,0x16,
    0xc5,0x34,0xcf,0xf7,0x80,0xab,0x27,0x55,0x7a,0xf2,0x97,0xe9,0x84,0xdf,0x9b,0xfa,
    0x5d,0xef,0x8b,0xfe,0xff,0x69,0xeb,0x55,0xf6,0xd5,0x90,0x73,0x53,0xc8,0xe9,0xb3,
    0xf6,0x36,0x3c,0xee,0x27,0xdf,0x26,0x78,0xe8,0x9e,0x3c,0x04,0x8f,0x1a,0x3c,0x64,
    0xb7,0x15,0xfc,0x38,0x7e,0xdb,0xf0,0xdd,0x8a,0x9f,0xee,0xcf,0x23,0xf8,0xf5,0x84,
    0x3e,0x3e,0x0a,0x3e,0x6f,0x36,0x5d,0xc9,0xb6,0x8e,0x35,0xc3,0xa9,0x37,0x70,0x92,
    0x6e,0x87,0x49,0x2f,0x1c,0xf4,0x7f,0xaf,0xf9,0xa9,0xff,0x8f,0x93,0x33,0x4b,0x77,
    0xa0,0x7e,0x26,0x3b,0xc1,0x9f,0xb6,0x9d,0x6a,0xba,0x06,0xe6,0x76,0xea,0x87,0xc7,
    0xd2,0xfa,0x2b,0xfd,0xf8,0x16,0x9b,0x2a,0x3e,0x3b,0x02,0x87,0x27,0xe1,0xb0,0x2b,
    0x70,0x78,0x0a,0xdc,0x39,0xf4,0x81,0x39,0x87,0x81,0xc0,0x41,0xba,0x7e,0x93,0x01,
    0xf2,0xf6,0x07,0x0e,0x7b,0xc8,0x9d,0x0b,0x1c,0xf6,0x82,0x3b,0x87,0x6f,0xc0,0xdc,
    0x4e,0x1c,0x3c,0xd6,0x40,0xe0,0x70,0x03,0x9b,0x5e,0x7c,0xfa,0x03,0x87,0x67,0xe0,
    0x30,0x18,0x38,0xec,0x03,0x77,0x0e,0xcf,0x82,0x39,0x87,0xa1,0xc0,0x41,0xba,0xfd,
    0x26,0x43,0xe4,0xdd,0x1f,0x66,0xe9,0x39,0x72,0xdf,0x08,0xdf,0x2a,0xd5,0xe8,0xb6,
    0x43,0xa1,0xc6,0x1f,0xb0,0x1b,0xc0,0x4f,0x71,0x2e,0x19,0x4f,0xf1,0x1e,0x61,0x16,
    0x86,0xf9,0x6e,0x2a,0xc6,0x01,0x62,0x1c,0x08,0x31,0x6e,0x12,0x47,0x71,0xaf,0x9b,
    0x8c,0xa3,0x13,0xa7,0xef,0xa9,0x5f,0xba,0x5b,0x41,0xa7,0xf8,0xdf,0x31,0xbf,0xd2,
    0x9d,0x43,0xf7,0x15,0xdc,0x5f,0x42,0xaf,0xef,0xf3,0x6f,0xc6,0x77,0x0c,0xbd,0xf3,
    0x97,0x7e,0xd4,0x64,0x8c,0x7a,0x46,0xc3,0x19,0x1e,0xa2,0x26,0xfd,0xbe,0x24,0xde,
    0x2b,0xe0,0x35,0x7a,0x39,0x19,0x62,0x49,0x37,0x61,0x32,0x49,0xac,0x09,0xce,0x49,
    0xef,0xc1,0x6b,0x9c,0xd3,0x41,0xce,0x49,0xf1,0x8f,0x80,0x7b,0xad,0xaf,0x13,0xfb,
    0x08,0x3d,0xf2,0x38,0x93,0x70,0x95,0xcd,0x1b,0xd4,0x30,0x8a,0xfd,0x04,0x75,0x4c,
    0x87,0x3a,0x64,0x33,0x65,0x32,0x8d,0xff,0x14,0x39,0xf5,0xb6,0xbc,0xc5,0xbb,0xe2,
    0x75,0x1d,0xa7,0xae,0x63,0xa1,0xae,0x77,0xc0,0xbd,0x0f,0x27,0xe9,0x43,0x2e,0xcd,
    0x6f,0x29,0xbd,0x3d,0xa7,0xa8,0xf5,0x24,0xf6,0xc3,0x56,0x9f,0xde,0xa0,0xf7,0xc8,
    0x71,0x8a,0xbb,0x5f,0x23,0x8e,0xce,0xf0,0x7d,0xf4,0xfa,0xfd,0x0c,0xf6,0x01,0xf8,
    0x69,0xbe,0xe3,0xca,0xf7,0x21,0x67,0xa6,0x7b,0xf9,0x23,0x76,0x67,0xb0,0x95,0xee,
    0x27,0xb0,0x8f,0x98,0x8b,0x33,0xf4,0xcb,0xf9,0x4e,0x87,0xb9,0xb9,0x85,0xcd,0x24,
    0xf6,0x53,0x7c,0x0f,0x95,0xe7,0x2c,0x1c,0x46,0xc2,0x9d,0xbc,0x0e,0x7e,0x33,0xcc,
    0xfb,0x38,0x71,0xc7,0x83,0xef,0x39,0x6a,0x5c,0x38,0xcf,0x63,0xa1,0xb7,0x9f,0xd0,
    0xdb,0x0b,0xa1,0xb7,0x9f,0x82,0xcf,0x70,0x57,0x2f,0x82,0xf9,0x1b,0xf6,0x19,0x6f,
    0xcf,0x45,0x72,0x09,0xfb,0x1c,0xbc,0x35,0xc5,0x2e,0xa5,0x37,0xf8,0x32,0xef,0x74,
    0x0d,0xfd,0x76,0x9b,0x81,0xcb,0x70,0x8d,0x6f,0x83,0xd6,0x7f,0xec,0xe4,0xba,0x4d,
    0xfe,0x03,0xac,0xac,0x74,0x0b,0x68,0x0c,0x00,0x00
};

// Generated from:
//
// #version 450 core
//
// #extension GL_EXT_samplerless_texture_functions : require
//
// layout(local_size_x = 8, local_size_y = 8, local_size_z = 1)in;
//
// layout(push_constant)uniform PushConstants {
//
//             ivec2 offset;
//     vec2 stretch;
//     vec2 invSrcExtent;
//     int srcLayer;
//     int srcWidth;
//
//     ivec4 blitArea;
//     int destPitch;
//
//     bool flipX;
//     bool flipY;
//     bool rotateXY;
// } params;
//
// layout(set = 0, binding = 0)buffer dst
// {
//
//     uint destData[];
// };
//
// layout(set = 0, binding = 1)uniform utexture2DMSArray stencil;
//
// void main()
// {
//     ivec2 destSubImageCoords = ivec2(gl_GlobalInvocationID . x * 4, gl_GlobalInvocationID . y);
//     if(any(lessThanEqual(params . blitArea . zw, destSubImageCoords)))
//     {
//         return;
//     }
//
//     destSubImageCoords += params . blitArea . xy;
//             ivec2 srcImageCoords = ivec2(destSubImageCoords);
//
//     srcImageCoords -= params . offset;
//
//     if(params . flipX)
//         srcImageCoords . x = - srcImageCoords . x;
//     if(params . flipY)
//         srcImageCoords . y = - srcImageCoords . y;
//     if(params . rotateXY)
//         srcImageCoords . xy = srcImageCoords . yx;
//
//     int xDir = params . flipX ? - 1 : 1;
//
//     uint outStencils = 0;
//
//     for(int i = 0;i < 4;++ i)
//     {
//
//         if(srcImageCoords . x >= 0 && srcImageCoords . x < params . srcWidth)
//         {
//
//             uint stencilValue = texelFetch(stencil, ivec3(srcImageCoords, params . srcLayer), 0). x;
//
//             outStencils |=(stencilValue & 0xFF)<<(i * 8);
//
//         }
//
//         srcImageCoords . x += xDir;
//     }
//
//     destData[gl_GlobalInvocationID . y * params . destPitch + gl_GlobalInvocationID . x]= outStencils;
// }
