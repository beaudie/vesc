// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2020 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/BlitResolveStencilNoExport.comp.00000003.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kBlitResolveStencilNoExport_comp_00000003[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x5d,0x96,0xdb,0x6f,0x94,0x45,
    0x18,0xc6,0x67,0x77,0xdb,0xdd,0xf2,0x49,0x5b,0x2a,0x2d,0x20,0xe7,0x5a,0x53,0x0f,
    0x6b,0x00,0x13,0x74,0x2b,0x50,0x54,0x9a,0x78,0x48,0x1a,0xa0,0x6d,0xb8,0x31,0x28,
    0x34,0x78,0x41,0x2f,0x7a,0x48,0x4a,0xb4,0x4d,0x2a,0xda,0xa6,0x62,0x10,0x02,0x6a,
    0x30,0x12,0x2e,0x4c,0xa0,0x36,0x01,0x6a,0x62,0x38,0x79,0xed,0x85,0x87,0x0b,0x44,
    0xf1,0x0a,0xff,0x11,0xf1,0x14,0xa3,0xef,0x33,0xdf,0x6f,0xc8,0x9b,0xdd,0x64,0x32,
    0xdf,0x3c,0xef,0xf1,0x79,0xe7,0x9d,0x99,0x2d,0x15,0xbb,0x2a,0x21,0x14,0x42,0x16,
    0x9a,0xc2,0x6f,0x21,0xff,0xb5,0x85,0xa2,0x21,0x21,0x3c,0x14,0xca,0x71,0x7e,0xa5,
    0x7f,0xa8,0x7f,0xcb,0xe4,0xb1,0xb7,0xb6,0x6c,0x7f,0x76,0x9b,0xe4,0x2d,0xa1,0x14,
    0xf5,0x24,0x6b,0x35,0x9d,0x46,0x9b,0x1b,0x6c,0x8c,0x0e,0x8f,0x8c,0x09,0x6f,0xb6,
    0xb1,0xc2,0xf0,0x86,0xe8,0x2b,0x98,0xe7,0x7c,0x44,0x5f,0x86,0x36,0x47,0xdf,0x21,
    0xac,0xb7,0xf1,0xaa,0x59,0x6f,0x20,0x6e,0x17,0x73,0xc2,0x0a,0x60,0x4d,0x0e,0x2b,
    0x82,0xad,0x70,0x58,0x09,0x6c,0x8d,0xc3,0x1a,0xc0,0x7c,0x8c,0x46,0xb0,0xcd,0x0e,
    0x2b,0x83,0x6d,0x73,0x58,0x05,0x6c,0xbb,0xc3,0x9a,0xc0,0x7a,0x1c,0xb6,0x0c,0x6c,
    0x57,0xe4,0x55,0x7a,0x90,0x9f,0x38,0x9e,0xb0,0xf9,0x51,0xf8,0xa4,0x75,0xa7,0xab,
    0xc1,0x25,0x62,0x37,0xe0,0x6f,0xa1,0xae,0x06,0xf2,0xb7,0x00,0x37,0xe9,0x2f,0xd6,
    0xf9,0x5b,0xc4,0x5f,0x5a,0xdf,0xa4,0xa6,0x8f,0xd8,0x58,0x69,0x59,0x14,0xa3,0xbc,
    0x14,0xed,0xf5,0xdd,0x61,0x3a,0x65,0xb8,0x2b,0x87,0xd5,0xb6,0xae,0x90,0x43,0x92,
    0x67,0xc8,0x03,0x72,0xf9,0xcb,0xc8,0x61,0xb3,0xad,0x97,0x63,0x2b,0x7c,0x27,0xeb,
    0x66,0xb0,0x2a,0xf6,0x2d,0xd8,0x4b,0xbf,0x15,0x59,0xe6,0xe4,0x0f,0xc3,0x39,0xad,
    0x3b,0xd0,0x59,0x65,0x51,0xd6,0x12,0x5f,0xb1,0xd7,0xd9,0xbc,0x96,0xdc,0xb4,0x5e,
    0xef,0xea,0xb5,0xd1,0x22,0xa7,0x7d,0x5a,0xc7,0x28,0x33,0x92,0x5e,0xe6,0x86,0x72,
    0xd9,0xc8,0x7e,0x6d,0x20,0x77,0xad,0x37,0x81,0x55,0x5d,0x6d,0x1a,0xd1,0xef,0x44,
    0x26,0x7f,0xed,0x96,0x45,0x37,0x79,0x3c,0x6e,0x73,0x37,0x79,0x25,0xbb,0x9a,0xe3,
    0xdc,0x83,0x5d,0xc5,0xc9,0x7b,0x59,0x4b,0xbe,0x1b,0x79,0xe6,0xe4,0xaf,0xb9,0x1a,
    0x6a,0xbd,0x97,0x7e,0x4b,0xeb,0x83,0x75,0x79,0x1e,0xb5,0xf1,0x9f,0xfd,0xd2,0x7a,
    0x92,0xba,0xc8,0xff,0x0c,0xba,0xe5,0xd8,0x0b,0xcb,0xc2,0x3c,0xb1,0x0a,0xe4,0x58,
    0x70,0x23,0xe5,0xfc,0x01,0xdf,0xf3,0xd4,0x46,0xeb,0x13,0x60,0x29,0xc6,0x49,0xfa,
    0x40,0x35,0x38,0x8d,0xff,0xb4,0xfe,0x98,0x18,0x7e,0x5f,0xcf,0x29,0xc7,0x58,0xef,
    0x52,0xec,0xf5,0x2c,0xee,0x5b,0xde,0xd3,0x97,0x88,0xfb,0x25,0x75,0x5c,0x20,0xae,
    0xd6,0x8b,0x75,0xb5,0xbd,0x4c,0x2c,0xe9,0x5f,0x43,0xe6,0xfb,0xe9,0x06,0xb5,0x7a,
    0xda,0xb4,0xd4,0x97,0x37,0xc1,0x6e,0xd0,0x5b,0xcf,0xd9,0x8e,0x16,0xc9,0x2d,0x90,
    0xf3,0x9f,0x86,0x68,0x9f,0xff,0xb0,0xd5,0x2d,0xf0,0x7f,0xec,0x5b,0xbd,0xfb,0x0d,
    0x72,0xcd,0x2f,0x99,0x56,0x2b,0x77,0x4d,0x33,0xbd,0xdd,0x4b,0xdc,0x36,0xf0,0x79,
    0xd3,0xc9,0xe2,0x99,0xcb,0x31,0xf5,0xf7,0x0c,0xb9,0xb7,0x83,0x27,0x3f,0xab,0xf0,
    0xd3,0xe1,0xfc,0xac,0x06,0x4f,0x36,0x6b,0xc0,0xf6,0x9b,0x4d,0x85,0xf3,0xdc,0x0e,
    0x2e,0x3f,0x9d,0xdc,0x03,0x9b,0xe8,0xd7,0x5e,0xce,0x46,0x17,0xf8,0x3e,0xb3,0x92,
    0xdd,0x63,0x60,0x5d,0xd4,0xac,0x14,0x6b,0xd2,0x18,0xfb,0xf7,0x09,0xe4,0xf2,0x7d,
    0xc1,0xec,0xd5,0xcf,0x4f,0x82,0xab,0x26,0x55,0x6a,0xf2,0xb7,0xc9,0x84,0x3f,0x15,
    0xeb,0x9d,0xd7,0x45,0xdf,0x7f,0xd9,0x7c,0x8b,0x75,0xd5,0xc5,0xdc,0xea,0x62,0xa6,
    0x5e,0x7b,0x1f,0x1e,0xcf,0x10,0x6f,0x2b,0x3c,0x74,0x4e,0x9e,0x87,0x47,0x0d,0x1e,
    0xd2,0xdb,0x01,0x3e,0x87,0xdd,0x2e,0x6c,0x77,0x60,0xa7,0xf3,0xf3,0x02,0x76,0xbd,
    0xae,0x8e,0x2f,0x82,0x2f,0x99,0x4e,0x77,0xd4,0xcd,0xb1,0x16,0x38,0xf5,0x39,0x4e,
    0x92,0xed,0xb1,0xd1,0x07,0x07,0x7d,0x0f,0x98,0x9d,0xea,0xff,0x32,0x31,0x03,0x39,
    0x08,0xeb,0xe7,0xcc,0x49,0x36,0x68,0x88,0xf2,0xfa,0x16,0x3c,0xe9,0xaa,0x26,0xc9,
    0x9f,0xe6,0xdf,0xa9,0xc9,0x4f,0xe8,0x54,0xb1,0xd9,0xe3,0x78,0xec,0x83,0xc7,0x5e,
    0xc7,0x63,0x3f,0x78,0xe2,0x31,0x00,0x96,0x78,0x0c,0x39,0x1e,0x03,0x31,0x9f,0x10,
    0x31,0xc5,0x1d,0x74,0x3c,0x0e,0x10,0xbb,0xe0,0x78,0xbc,0x0e,0x8f,0x03,0x8e,0xc7,
    0x0f,0xe0,0x49,0x57,0x3c,0x92,0xbf,0x21,0xc7,0xe3,0x0e,0x3a,0x7d,0xd8,0x0c,0x3a,
    0x1e,0x6f,0xc0,0xe3,0xa0,0xe3,0xf1,0x26,0x78,0xe2,0x71,0x08,0x2c,0xf1,0x18,0x76,
    0x3c,0x24,0x3b,0x6c,0x63,0x98,0xb8,0x87,0x5d,0x4f,0x1d,0x21,0xf6,0x1d,0x77,0x67,
    0x29,0xc7,0xa4,0x3b,0xec,0x72,0xfc,0x15,0xbd,0x21,0xec,0xe4,0xe7,0x8a,0xf1,0x14,
    0xf7,0x11,0x7a,0xe2,0x28,0xf7,0xad,0x7c,0x8c,0xe2,0x63,0xd4,0xf9,0xb8,0x8b,0x1f,
    0xf9,0xbd,0x6d,0x63,0x02,0x99,0x38,0xfd,0x42,0xfe,0x92,0xdd,0x73,0x32,0xf9,0xff,
    0x99,0x3e,0x96,0xec,0x22,0xb2,0x6b,0x70,0x3f,0x86,0x5c,0xf7,0xf4,0x7d,0xe3,0x3b,
    0x8e,0x3c,0xf1,0x97,0x5c,0x7f,0x9c,0xc6,0xc9,0x67,0xcc,0xed,0xe3,0xdb,0xe4,0xa4,
    0xdf,0xd7,0xf8,0x7b,0x07,0xbc,0x46,0x2d,0xa7,0x9d,0x2f,0xc9,0xa6,0x6c,0x4c,0xe3,
    0x6b,0x8a,0x7d,0xd2,0xbb,0xf0,0x2e,0xfb,0x34,0xc9,0x3e,0xc9,0xff,0x71,0xf0,0x94,
    0xeb,0x7b,0xf8,0x3e,0x4e,0x8d,0x92,0x9f,0x69,0xb8,0x76,0xc7,0x33,0x9d,0xe7,0x30,
    0x86,0xfe,0x14,0x79,0xcc,0xb9,0x3c,0xa4,0x33,0x1b,0x7b,0x2f,0xb7,0x9f,0x25,0xa6,
    0xde,0x98,0x0f,0x79,0x5f,0x52,0x5e,0x1f,0x91,0xd7,0x49,0x97,0xd7,0x29,0xf0,0x54,
    0x87,0x33,0xd4,0xa1,0x10,0xcf,0x43,0x39,0xbe,0x41,0x67,0xc9,0xf5,0x0c,0xfa,0x87,
    0x2c,0x3f,0xbd,0x45,0x9f,0x10,0xe3,0x2c,0x77,0x40,0x0d,0x3f,0xda,0xc3,0x4f,0x91,
    0xeb,0xf7,0x23,0xd8,0x67,0xe0,0xe7,0xb8,0xcf,0x15,0xef,0x73,0xf6,0x4c,0x67,0xf3,
    0x3b,0xf4,0xce,0xa3,0x2b,0xd9,0xf7,0x60,0x17,0xe8,0x8b,0xf3,0xd4,0x2b,0xf1,0x9d,
    0x73,0x7d,0x73,0x0f,0x9d,0x69,0xf4,0x67,0xb9,0x17,0x15,0xe7,0x0b,0x38,0x8c,0xb8,
    0x33,0x79,0x1b,0xfc,0xae,0xeb,0xf7,0x09,0xfc,0x4e,0x38,0xdb,0x8b,0xe4,0x58,0xdf,
    0xcf,0xe3,0xae,0xb6,0x57,0xa8,0xed,0x65,0x57,0xdb,0xab,0xe0,0x33,0x9c,0xd5,0x25,
    0xb0,0xf4,0x96,0x7d,0xc5,0x1b,0xb4,0x44,0xac,0x2c,0xf6,0x5e,0x8e,0xb7,0x45,0xdf,
    0xe5,0xf8,0x16,0x5f,0xe7,0xbd,0xae,0x21,0xdf,0x6d,0x3d,0x70,0x1d,0xae,0xfe,0x8d,
    0xd0,0xfc,0xaf,0xed,0x5c,0x8f,0x8d,0xff,0x01,0x1e,0x9a,0xfe,0x56,0x70,0x0c,0x00,
    0x00
};

// Generated from:
//
// #version 450 core
//
// #extension GL_EXT_samplerless_texture_functions : require
//
// layout(local_size_x = 8, local_size_y = 8, local_size_z = 1)in;
//
// layout(push_constant)uniform PushConstants {
//
//             ivec2 offset;
//     vec2 stretch;
//     vec2 invSrcExtent;
//     int srcLayer;
//     int srcWidth;
//
//     ivec4 blitArea;
//     int destPitch;
//
//     bool flipX;
//     bool flipY;
//     bool rotateXY;
// } params;
//
// layout(set = 0, binding = 0)buffer dest
// {
//
//     uint destData[];
// };
//
// layout(set = 0, binding = 1)uniform utexture2DMSArray stencil;
//
// void main()
// {
//     ivec2 destSubImageCoords = ivec2(gl_GlobalInvocationID . x * 4, gl_GlobalInvocationID . y);
//     if(any(lessThanEqual(params . blitArea . zw, destSubImageCoords)))
//     {
//         return;
//     }
//
//     destSubImageCoords += params . blitArea . xy;
//             ivec2 srcImageCoords = ivec2(destSubImageCoords);
//
//     srcImageCoords -= params . offset;
//
//     if(params . flipX)
//     {
//         srcImageCoords . x = - srcImageCoords . x;
//
//         srcImageCoords . x -= 1;
//     }
//     if(params . flipY)
//     {
//         srcImageCoords . y = - srcImageCoords . y;
//         srcImageCoords . y -= 1;
//     }
//     if(params . rotateXY)
//         srcImageCoords . xy = srcImageCoords . yx;
//
//     int xDir = params . flipX ? - 1 : 1;
//
//     uint outStencils = 0;
//
//     for(int i = 0;i < 4;++ i)
//     {
//
//         if(srcImageCoords . x >= 0 && srcImageCoords . x < params . srcWidth)
//         {
//
//             uint stencilValue = texelFetch(stencil, ivec3(srcImageCoords, params . srcLayer), 0). x;
//
//             outStencils |=(stencilValue & 0xFF)<<(i * 8);
//
//         }
//
//         srcImageCoords . x += xDir;
//     }
//
//     destData[gl_GlobalInvocationID . y * params . destPitch + gl_GlobalInvocationID . x]= outStencils;
// }
