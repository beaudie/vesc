// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/ConvertVertex.comp.00000004.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kConvertVertex_comp_00000004[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x9d,0x99,0x77,0x70,0x57,0x45,
    0x10,0xc7,0xdf,0xe5,0x97,0x66,0x82,0x40,0x28,0x41,0x5a,0x24,0x82,0x10,0x48,0x0c,
    0x88,0x21,0xb4,0x10,0x90,0x16,0x94,0x20,0x4d,0x54,0x18,0xb1,0xa2,0xb1,0xa1,0x28,
    0xd8,0x41,0xb1,0x81,0x58,0x51,0xac,0xd8,0xbb,0x28,0xf6,0x8e,0x05,0x0b,0x76,0xb1,
    0x2b,0xf6,0xde,0xcb,0x8c,0x33,0x2a,0x82,0xfd,0xf6,0xdd,0x67,0x93,0xe5,0xcc,0x5f,
    0x66,0xe6,0xcd,0xef,0xed,0x77,0x77,0xbf,0xbb,0xb7,0xb7,0x77,0xef,0xde,0x4b,0x26,
    0xab,0x7b,0x5e,0x92,0x71,0x49,0x41,0x92,0x9f,0xec,0xea,0x92,0xf4,0xaf,0x28,0xc9,
    0x4a,0xe4,0xb6,0x30,0xc9,0x4d,0x7f,0xeb,0xea,0xa7,0xd6,0x57,0xce,0x9d,0x37,0xab,
    0xb2,0x6a,0x40,0x3f,0xd1,0xb7,0x4c,0x32,0xa9,0x9d,0xe8,0x5a,0x79,0x9b,0x1c,0xff,
    0x9b,0xed,0xaf,0xd9,0x7b,0x1f,0x78,0xa8,0xe0,0xed,0xbc,0xa2,0xb5,0xc7,0xb3,0x53,
    0xae,0x24,0x19,0x81,0xad,0x5c,0xe3,0xbc,0xf5,0xd6,0x21,0x4c,0xd2,0x9d,0x5f,0xc5,
    0x1c,0x58,0xb6,0xc1,0xb2,0xc0,0xf2,0x0d,0x96,0x01,0x6b,0x61,0xb0,0x6c,0xb0,0xd6,
    0x06,0xcb,0x01,0x6b,0x67,0xb0,0x5c,0xb0,0x2d,0x0c,0x96,0x07,0xd6,0xc5,0x60,0xf9,
    0x60,0xdd,0x0c,0xb6,0x19,0x58,0x0f,0x83,0x15,0x80,0x95,0x19,0xac,0x10,0xac,0xc2,
    0x60,0x2d,0xc0,0xfa,0x19,0x6c,0x73,0xb0,0x2a,0x83,0xb5,0x04,0x1b,0x24,0x75,0xf7,
    0x23,0xd5,0x1a,0xd4,0xf9,0x11,0xee,0x4b,0xfe,0x5a,0x9f,0x59,0x51,0x1d,0xc5,0x7e,
    0x96,0xb1,0xdf,0xdf,0xff,0x6e,0xd5,0xa8,0x0b,0x72,0x29,0x75,0x16,0xb9,0xa5,0xdb,
    0x94,0xaf,0x95,0xfb,0x2f,0x9f,0x60,0xca,0x57,0xe4,0x36,0xe5,0x13,0xb9,0xd4,0xc8,
    0x32,0xef,0x85,0xd4,0x51,0xe4,0x5d,0x90,0x3b,0xfa,0xab,0xad,0x67,0xc9,0x4a,0xe3,
    0x67,0xd2,0xf9,0x93,0xfb,0xf6,0xde,0x26,0x97,0x1a,0x27,0xe9,0x6f,0x76,0x3a,0x17,
    0x79,0x8c,0xb3,0xd4,0xe7,0x94,0xcf,0xbd,0xe2,0xc5,0xde,0xbb,0x08,0x9f,0x52,0x6f,
    0xdf,0x86,0x1e,0xcb,0xc3,0xbf,0x98,0xfb,0x22,0xf4,0x1d,0xb8,0x2f,0x86,0xaf,0xb3,
    0xe1,0x2b,0xc6,0xa6,0x1b,0xf9,0x08,0x56,0xe2,0xad,0xb5,0x4f,0xfe,0xef,0x25,0x79,
    0xf4,0xa4,0x5f,0x84,0x6b,0x28,0x72,0x2f,0x30,0x19,0x77,0x19,0x63,0x90,0x92,0x97,
    0x23,0xf7,0x36,0xfe,0x7d,0xb0,0xcd,0x35,0xfa,0xbe,0xf4,0xb4,0xca,0x55,0xe4,0x5d,
    0x4e,0x1d,0x6b,0x98,0x4b,0x95,0x6b,0xe9,0x63,0xb5,0x1f,0x13,0xc9,0x13,0xb1,0x6f,
    0xe7,0x59,0xa6,0x18,0xbf,0x69,0xac,0x31,0x91,0xa5,0x76,0x33,0x98,0x9f,0xae,0x1e,
    0xd5,0x1e,0x2c,0xa1,0xd7,0xf6,0x25,0xdf,0xfd,0xe8,0xf1,0x59,0x8c,0x57,0xe4,0xfd,
    0xc1,0x34,0x5e,0x83,0x99,0xe7,0x83,0xd0,0xd9,0xf1,0xcd,0x66,0x4d,0x68,0x1e,0x73,
    0xb0,0x57,0xfd,0xd1,0xac,0x37,0x95,0x17,0x98,0x3c,0x45,0x3e,0xc1,0x5f,0xff,0x64,
    0x9a,0xe4,0x93,0x58,0x4f,0xca,0x77,0xba,0xf1,0x17,0x79,0x59,0x54,0xbf,0xeb,0x99,
    0x13,0xc9,0xef,0x46,0xfa,0xa1,0xcc,0xf0,0xdf,0x22,0xfc,0xfe,0x4f,0xe5,0x95,0xd1,
    0xfc,0x3d,0xc2,0x98,0xc4,0xff,0x79,0xfc,0x6d,0x5d,0xd7,0x1a,0x7b,0xa9,0xeb,0xf7,
    0xe9,0xe8,0x16,0xae,0x56,0xff,0x9f,0x99,0x73,0x95,0xff,0x62,0x3f,0xeb,0xe0,0xe5,
    0x2c,0x17,0xfa,0x38,0x8b,0x79,0xd0,0xb5,0x5b,0xc2,0x1a,0x15,0x59,0xe2,0xb6,0x76,
    0x21,0x07,0xc1,0x86,0x22,0x17,0x81,0x09,0x4f,0x1b,0xfc,0x32,0xe4,0xd9,0xd6,0x85,
    0x9c,0xda,0x60,0x2f,0x72,0x3b,0x30,0xd1,0xb7,0xe7,0xde,0xce,0x53,0x25,0xeb,0xba,
    0xb1,0x5f,0x5c,0xd8,0xe3,0x2b,0xbc,0x24,0x3c,0xb2,0xee,0x05,0x5b,0xcb,0x98,0xab,
    0x7d,0xd7,0x66,0xd1,0x6b,0x09,0xb1,0x37,0x78,0x24,0x87,0x5e,0x91,0x3a,0xf5,0x74,
    0xa1,0x5e,0x2a,0xf7,0x8a,0xe4,0xfe,0x46,0x96,0x75,0xbb,0x7d,0xa4,0x1f,0x19,0xe9,
    0xc7,0x44,0xf2,0xd8,0xc8,0x7e,0x87,0x48,0x3f,0x3e,0xd2,0x4f,0x41,0xde,0xde,0x67,
    0x29,0x35,0x28,0xa1,0x2e,0xd2,0x93,0xc3,0x18,0xf7,0x96,0xe0,0x62,0x23,0xeb,0xb5,
    0x9b,0x0b,0x6b,0xbc,0xc1,0xd8,0x94,0xba,0x80,0xdf,0xee,0x6d,0xa4,0x17,0xb6,0x72,
    0xc1,0x4f,0xf0,0xdf,0x7c,0x25,0x7a,0xb0,0xe7,0xfe,0xee,0xed,0x45,0xd7,0xdd,0x5f,
    0x82,0x49,0x7d,0xe4,0xfe,0x2f,0x5f,0x7d,0xb9,0x17,0xac,0xd6,0xdb,0xf7,0x24,0x07,
    0xb9,0xef,0xc5,0xfd,0x46,0xaf,0x2f,0xc3,0x47,0x7e,0xd7,0xcb,0xfe,0xe1,0x7f,0xcb,
    0xe1,0x16,0x7d,0x05,0x7a,0xf9,0xd5,0xdc,0xb6,0x71,0xa1,0xce,0x9a,0x7f,0x5f,0xf2,
    0xaf,0x34,0x36,0xfd,0x5c,0xc0,0xef,0x24,0xff,0x6d,0x5d,0xf0,0x13,0x5c,0x72,0x16,
    0xb9,0xb7,0xbf,0xfa,0xc0,0xdf,0xdb,0x35,0xd5,0x6c,0xbb,0x66,0x6a,0x56,0x05,0xae,
    0x31,0x07,0x34,0x13,0xb3,0xda,0x05,0xfc,0x54,0x6f,0x23,0xf2,0x40,0x17,0xfc,0xaa,
    0x8d,0xcd,0x20,0x72,0x5f,0x88,0xcd,0x60,0x17,0xec,0x06,0x51,0x27,0xe9,0x97,0xc1,
    0xc6,0x7e,0x88,0x0b,0x3d,0xa4,0x71,0x87,0x12,0x77,0xa5,0xc9,0xad,0xc6,0x05,0x5c,
    0xe7,0x6a,0x98,0x0b,0x7e,0x35,0xcc,0xd5,0x70,0x33,0x57,0xa2,0xab,0xf5,0xd7,0x70,
    0xc6,0x2d,0xf7,0x52,0x67,0xad,0xc3,0x70,0x13,0x7b,0x14,0xb1,0x25,0x2f,0xe9,0x53,
    0x91,0x07,0xfb,0x18,0xb2,0x9e,0x47,0xbb,0x70,0x3e,0x19,0x89,0x5e,0xfa,0x7a,0x34,
    0xbe,0xa2,0xaf,0x73,0xa1,0xd7,0x45,0x27,0x3d,0x5c,0x67,0x7c,0xc7,0xb9,0xf0,0x6c,
    0x1d,0x8b,0x5e,0x7a,0x7e,0x9c,0x89,0xbb,0xa3,0x89,0x2b,0xfd,0xbe,0xa3,0xe1,0xad,
    0x77,0x61,0x8d,0x88,0x4e,0x7a,0xbf,0x3e,0xe5,0xcd,0x4d,0xfd,0x26,0x48,0x5f,0xb3,
    0x46,0xc6,0x1b,0xbe,0x9d,0x5c,0x58,0xa7,0x4f,0x53,0xf3,0x89,0x2e,0x60,0x13,0x4c,
    0x6f,0x4e,0xa4,0x0e,0xe5,0xd4,0xa1,0xdc,0xf8,0x4f,0x8a,0xe6,0x6c,0xb2,0x0b,0xd8,
    0x4a,0xd3,0xcf,0x93,0xdd,0xa6,0xfd,0xdc,0xc7,0xf8,0x4f,0x25,0xbe,0xd8,0xca,0xfa,
    0x9c,0x4a,0x2d,0x64,0x6f,0xd9,0x99,0xb3,0xc9,0x14,0xd6,0xcc,0x20,0x7f,0x55,0x13,
    0xa7,0x90,0x7d,0x47,0x9e,0x7d,0x03,0xbd,0x6f,0x1e,0xfb,0xac,0xde,0x17,0xb0,0x1f,
    0xb5,0x30,0xbd,0xd0,0x03,0x1b,0xed,0x97,0x72,0x9e,0xdf,0xbd,0x8d,0x4d,0x05,0xb8,
    0xf6,0xe9,0x36,0xf8,0x55,0x18,0x9b,0x4a,0xf8,0x95,0xa7,0x1f,0x3c,0x7d,0x8d,0xcd,
    0xb6,0xe0,0xca,0xd3,0x1f,0x3f,0xc1,0xb5,0x56,0xdb,0xc1,0xdf,0xdf,0x70,0x0d,0x80,
    0xab,0xca,0x70,0x55,0x83,0xab,0xdf,0x40,0x7c,0x05,0xff,0xdb,0x8f,0x71,0x60,0x7a,
    0xb6,0x6c,0xaa,0x4d,0xab,0x66,0x6a,0xb3,0xb9,0xb9,0x6f,0x49,0x6d,0x5a,0x9b,0xbd,
    0x71,0x08,0xcf,0x36,0x8d,0x39,0x14,0x9f,0x25,0x70,0x0e,0x03,0xab,0x31,0x63,0x1a,
    0x0e,0x5e,0xcb,0x5c,0x0f,0x69,0xc4,0x02,0xc7,0x08,0x78,0x25,0xc7,0x11,0x26,0xc7,
    0x22,0xce,0xef,0xf2,0xd7,0xc6,0xe4,0xd5,0x96,0xbc,0xda,0x9b,0xbc,0x46,0x25,0xd1,
    0x1e,0x1f,0xc9,0xbb,0x47,0xf2,0xcc,0x48,0xde,0x33,0x92,0xf7,0x89,0xe4,0x79,0x91,
    0x7c,0x5c,0x24,0x2f,0x8e,0xe4,0x73,0x22,0x79,0x79,0x24,0x5f,0x6e,0x64,0x39,0x6f,
    0xdc,0x14,0xe9,0x1f,0x36,0xb2,0x9c,0x27,0x5e,0x88,0xf4,0x6f,0x44,0xfe,0x6f,0x45,
    0xf2,0x27,0xc9,0xa6,0xcf,0xb8,0xcf,0xa3,0x79,0x1b,0x4d,0x1d,0xb5,0x9f,0xc6,0xd2,
    0x4f,0x63,0x8c,0x4d,0x1d,0xf8,0x22,0xe6,0x71,0x1c,0x7e,0x75,0xcc,0xe3,0x28,0xb0,
    0xc6,0x3d,0x27,0xe2,0x1c,0xdf,0x0c,0x67,0x3d,0xb8,0xf6,0xcb,0x04,0xfc,0xea,0xe1,
    0xdc,0x01,0xac,0x71,0xdf,0x61,0x2e,0x95,0x73,0x12,0x9c,0x13,0x8d,0xcd,0x64,0x70,
    0xdd,0xbb,0xa7,0xe2,0x37,0xd9,0xd8,0xec,0x0c,0x8f,0x3e,0xcb,0x76,0x01,0x9b,0x96,
    0xd6,0x3e,0x60,0xbb,0xe2,0x2b,0x3a,0xd9,0xf3,0xa7,0x27,0x4d,0x7b,0xbe,0xe8,0x76,
    0xf3,0xd7,0x74,0x7a,0x6f,0x37,0xfa,0x75,0x06,0xf2,0x74,0x13,0x6b,0x0f,0xfa,0x51,
    0xc6,0x33,0x13,0x59,0x75,0x7b,0x91,0x87,0xe8,0xf6,0x44,0xd6,0xbd,0x77,0x6f,0xf6,
    0xab,0x99,0xf4,0xa3,0xd8,0xec,0x0e,0xae,0xfe,0x07,0xd0,0xcb,0x3a,0x27,0x07,0x82,
    0xd5,0xa4,0x35,0xca,0x4d,0xcf,0xd6,0x07,0x73,0xfe,0x6e,0x40,0xaf,0xbe,0x87,0xa0,
    0x13,0xde,0x7d,0x90,0xb5,0xae,0x87,0x52,0xd7,0xd9,0xc6,0xfe,0x30,0xf0,0x5b,0xa9,
    0xcf,0xe1,0x60,0x73,0xa8,0xcf,0x5c,0x53,0x1f,0xd1,0x1d,0xe1,0xaf,0x4b,0xa9,0xc7,
    0x11,0x86,0xe7,0x48,0xc6,0x7c,0x0b,0x3c,0x47,0x81,0x49,0xed,0x57,0x78,0x0b,0x39,
    0x57,0x1e,0x03,0x5e,0xc5,0x59,0x7f,0x3e,0xbe,0xc7,0xa2,0x93,0x9c,0xe7,0x21,0x2b,
    0xef,0xf1,0x11,0xef,0x7c,0x30,0xcb,0x7b,0x22,0xf8,0x02,0xde,0x11,0x94,0x77,0x21,
    0x3a,0xe1,0x3d,0x0e,0x59,0x6b,0x71,0x32,0xb5,0x38,0xc9,0xc4,0x3a,0x05,0x5c,0x6b,
    0x71,0x2a,0x98,0xd6,0x62,0x91,0xa9,0x85,0xe8,0x4e,0xf3,0xd7,0x99,0xd4,0xe2,0x34,
    0xc3,0xb3,0x84,0x9c,0x75,0x6f,0x3c,0x83,0x77,0x93,0x25,0xe4,0xb2,0x18,0x4c,0x9e,
    0x83,0x8b,0xf0,0x3f,0xd3,0xf8,0x9f,0x15,0x8d,0xf9,0x6c,0xb0,0x69,0xe4,0xb1,0xd4,
    0xe4,0x21,0xba,0x73,0xfd,0x75,0x1e,0x3c,0xe7,0x12,0xe3,0x9c,0xa4,0xe9,0xec,0xb8,
    0x14,0xdd,0x79,0x26,0xc6,0xf9,0xec,0x77,0x2a,0x5f,0x40,0xcc,0x93,0xc9,0xf9,0x42,
    0xde,0x9f,0x2e,0x30,0xe3,0xb8,0x08,0xbf,0x0b,0xcd,0xf3,0xe7,0x62,0xf0,0x65,0x26,
    0xee,0xc5,0x51,0xdc,0xa5,0x26,0xce,0x25,0xec,0x9b,0x5a,0x87,0x4b,0xa2,0x3a,0x2c,
    0x42,0x9e,0x8b,0x7c,0xa9,0xf1,0xbd,0x8c,0x75,0x21,0xbe,0xcb,0x91,0x75,0x3e,0xaf,
    0x68,0xe6,0xb9,0x7b,0x25,0xb8,0xd8,0x5f,0x8e,0xac,0xeb,0xf0,0x2a,0x9e,0x8d,0xcb,
    0xd9,0xa7,0x35,0x9f,0xab,0x0c,0xe7,0xd5,0xcd,0x70,0x5e,0x03,0xae,0x35,0xb9,0x16,
    0xac,0xd6,0xf4,0xef,0xb5,0xc6,0xfe,0x3a,0xea,0xac,0x73,0x79,0x03,0xd8,0xf5,0xcc,
    0xe5,0x0a,0x33,0x97,0xa2,0xbb,0x39,0xed,0xbf,0x30,0xf6,0x9b,0xe1,0xbc,0x89,0x77,
    0x53,0xa9,0xcb,0x0a,0x74,0xb7,0x9a,0x18,0xb7,0x11,0x63,0x8d,0x8f,0x51,0x96,0xee,
    0x91,0xe1,0xcc,0x75,0x1b,0xf3,0x29,0xd8,0x1d,0x06,0x57,0xce,0x3b,0x22,0xce,0x15,
    0x70,0x96,0xa5,0x7b,0x68,0x78,0x5e,0xe9,0x5a,0xba,0x0b,0x4c,0xd7,0xd2,0x5d,0xd1,
    0x3c,0xcd,0x35,0xf9,0xdc,0x1d,0xed,0xe7,0xf7,0x34,0xb3,0x9f,0xdf,0x0b,0xae,0xfb,
    0xf9,0x7d,0xf8,0xdd,0x6b,0x6c,0xee,0x8f,0xd6,0xc1,0x03,0x60,0x76,0x3f,0x7f,0x10,
    0xdf,0x07,0xa8,0xe7,0x2a,0x53,0x4f,0xd1,0x3d,0xe4,0xaf,0xd5,0xe4,0xf8,0x90,0xc9,
    0xe9,0x51,0x72,0x7a,0xc4,0xc4,0x7b,0x0c,0x5c,0xc6,0xf8,0x30,0xb2,0x8c,0x71,0x15,
    0xfe,0xab,0x8d,0xed,0xe3,0x9c,0x1f,0x54,0x7e,0x82,0xf3,0xc1,0x93,0xf4,0xc5,0x93,
    0xd8,0x3c,0x61,0x6c,0x9e,0xe2,0x4c,0xf1,0x2c,0x36,0x6b,0xb0,0x7b,0xca,0xc4,0x5c,
    0x13,0xc5,0x5c,0x65,0xfc,0x9f,0x66,0x9e,0xf5,0xf9,0xf6,0x0c,0x98,0xf6,0xd2,0x73,
    0x66,0xec,0xcf,0xa4,0x71,0x92,0x14,0x13,0x9e,0x67,0x0d,0xcf,0x8b,0x9c,0x3d,0x54,
    0x7e,0x09,0x5e,0x5d,0xfb,0x2f,0x83,0xad,0x35,0x3d,0xf5,0x0a,0xbd,0xf3,0xb2,0xe9,
    0x89,0x57,0xc1,0x75,0x3c,0xaf,0xc1,0xfd,0xaa,0xd9,0x43,0x5f,0x07,0xd7,0x77,0xda,
    0x17,0xc0,0x24,0xb6,0xe8,0xdf,0xe4,0xdc,0x23,0xf9,0xaf,0x33,0xf9,0x0b,0xfe,0xb6,
    0xbf,0xde,0x23,0xff,0xb7,0x4d,0xbe,0xef,0x44,0xfd,0xfe,0x2e,0xeb,0xe3,0x1d,0x62,
    0xbc,0x05,0x26,0x75,0x5c,0x87,0xff,0x7b,0x46,0xd7,0x10,0xe9,0xd6,0x99,0xbe,0x7f,
    0x9f,0x73,0x96,0x8e,0xf1,0x03,0x30,0xf1,0x7d,0x03,0x59,0xf3,0xf8,0x90,0x33,0x9a,
    0xca,0x1f,0x51,0x57,0x7d,0x7f,0xfa,0x18,0xec,0x43,0x33,0xbf,0x1f,0x13,0x5b,0xe7,
    0xe5,0x39,0xe3,0xff,0x29,0xfe,0xf3,0xc9,0xe5,0x33,0x30,0xf1,0xfd,0x04,0x59,0xf3,
    0xfc,0x82,0xf3,0xdf,0x61,0xbc,0xef,0x7d,0x09,0xa6,0x5c,0x5f,0xd1,0x6b,0xda,0x8f,
    0x5f,0x83,0xad,0x4c,0xe7,0x22,0xf8,0x7c,0x03,0x7e,0x3a,0xe7,0xf0,0x6f,0xe1,0xf9,
    0x86,0x98,0x9f,0x83,0xe9,0x3b,0xe5,0x77,0x9c,0x31,0x5b,0xf8,0x53,0xa6,0xc8,0x3f,
    0xf0,0xbd,0xab,0x0c,0xdd,0xf7,0xc6,0xef,0x07,0xe3,0xf7,0x23,0x7e,0x72,0x96,0xfa,
    0x31,0x3a,0xfb,0x77,0x64,0xce,0x3b,0x70,0xf6,0x2f,0xe6,0xdb,0xbd,0xd4,0xa6,0x93,
    0xe1,0xf8,0x09,0x5c,0x38,0x7e,0x8a,0xde,0x71,0x4a,0xe0,0xe8,0x6c,0xde,0x1f,0xba,
    0x18,0xbe,0xae,0xf0,0x6d,0x69,0xce,0xd6,0x1b,0xa3,0xb3,0x76,0x62,0xbe,0x07,0xc9,
    0xfe,0xf0,0x0b,0xfb,0xc3,0xcf,0xa6,0xa6,0xbf,0x82,0xeb,0x7e,0xb4,0x1e,0x6c,0x19,
    0xfd,0xbb,0xc1,0xf4,0xef,0xfa,0x14,0xf3,0x9c,0xbc,0xe7,0xfe,0x66,0x78,0x7e,0x27,
    0x3f,0x5d,0x37,0x7f,0x80,0xad,0x35,0xdc,0x7f,0x82,0xcf,0x31,0xe7,0x9c,0xbf,0xc1,
    0x1b,0xf8,0x76,0xa8,0x3d,0xfa,0x0f,0x3a,0xa9,0xfd,0x46,0x64,0xad,0x9b,0x73,0x61,
    0xfc,0x93,0xe4,0x3d,0xda,0xdf,0x67,0x5c,0xc0,0x66,0xa4,0xf3,0x18,0x9e,0x85,0xd9,
    0x7c,0x03,0x94,0xf7,0xb3,0x8c,0x79,0x1f,0xcf,0x71,0xa1,0x4e,0x6b,0xc8,0x33,0xd7,
    0x05,0xdb,0x1c,0xde,0xd1,0xc5,0x29,0x97,0xf7,0xf9,0x0d,0xd4,0x38,0xcf,0x7c,0x83,
    0xc8,0x27,0xb6,0xf6,0xf3,0x66,0x2e,0x60,0x9a,0x77,0x81,0x0b,0x98,0x72,0x15,0x44,
    0x5c,0x1b,0x4c,0xcd,0x0a,0xf9,0x07,0x93,0xcc,0xbf,0xdc,0xeb,0xfc,0x67,0x99,0xff,
    0x81,0x74,0x33,0xf3,0x5f,0x0a,0x47,0x77,0xf3,0x8d,0xaf,0xb8,0x99,0xef,0x55,0x1d,
    0xc0,0x75,0xde,0xb7,0xe0,0xbb,0xd1,0x02,0x63,0xd3,0xd1,0x05,0x5c,0xcf,0xe3,0x9d,
    0x5c,0xc0,0x6a,0xcc,0x39,0xa8,0xb3,0x0b,0x5c,0x9d,0x4c,0xfd,0xba,0xf0,0xff,0x13,
    0x3d,0xb3,0x77,0xe5,0x5b,0x6d,0x03,0xf6,0x32,0x6e,0xc1,0xba,0x98,0x6f,0x1a,0xff,
    0x02,0xe9,0x05,0x7a,0xe8,0xb0,0x1b,0x00,0x00
};

// Generated from:
//
// #version 450 core
//
// layout(local_size_x = 64, local_size_y = 1, local_size_z = 1)in;
//
// layout(set = 0, binding = 0)buffer dst
// {
//     uint destData[];
// };
//
// layout(set = 0, binding = 1)buffer src
// {
//     uint srcData[];
// };
//
// layout(push_constant)uniform PushConstants
// {
//
//     uint outputCount;
//
//     uint componentCount;
//
//     uint srcOffset;
//     uint dstOffset;
//
//     uint Ns;
//     uint Bs;
//     uint Ss;
//     uint Es;
//
//     uint Nd;
//     uint Bd;
//     uint Sd;
//     uint Ed;
//
//     uint srcEmulatedAlpha;
//
//     bool isSrcHDR;
//     bool isSrcA2BGR10;
// } params;
//
// uint getSourceComponentOffset(uint vertex, uint component)
// {
//     return vertex * params . Ss + component * params . Bs + params . srcOffset;
// }
//
// uint getDestinationComponentOffset(uint vertex, uint component)
// {
//     return vertex * params . Sd + component * params . Bd + params . dstOffset;
// }
//
// uint getShiftBits(uint offset, uint B)
// {
//
//     uint shift =(offset % 4)* 8;
//
//     return shift;
// }
//
//       float loadSourceComponent(uint cd)
// {
//
//     uint vertex = cd / params . Nd;
//     uint component = cd % params . Nd;
//
//     if(component >= params . Ns && component < 3)
//     {
//         return 0;
//     }
//
//     uint offset = getSourceComponentOffset(vertex, component);
//     uint block = srcData[offset / 4];
//
//     uint shiftBits;
//     uint valueBits;
//     uint valueMask;
//
//     if(params . isSrcHDR)
//     {
//         valueBits = component == 3 ? 2 : 10;
//         valueMask = component == 3 ? 0x03 : 0x3FF;
//         if(params . isSrcA2BGR10)
//         {
//             shiftBits = 10 * component;
//         }
//         else
//         {
//
//             shiftBits = component == 3 ? 0 :(valueBits *(2 - component)+ 2);
//         }
//     }
//     else
//     {
//         shiftBits = getShiftBits(offset, params . Bs);
//         valueBits = params . Bs * 8;
//         valueMask = valueBits == 32 ? - 1 :(1 << valueBits)- 1;
//     }
//
//     uint valueAsUint;
//
//     if(component >= params . Ns && component == 3)
//     {
//         valueAsUint = params . srcEmulatedAlpha;
//     }
//     else
//     {
//         valueAsUint =(block >> shiftBits)& valueMask;
//     }
//
//     if(valueBits < 32)
//     {
//         bool isNegative =(valueAsUint &(1 <<(valueBits - 1)))!= 0;
//         uint signExtension = isNegative ? 0xFFFFFFFF << valueBits : 0;
//         valueAsUint |= signExtension;
//     }
//     int valueAsInt = int(valueAsUint);
//           float value = float(valueAsInt)/(valueMask >> 1);
//     value = max(value, float(- 1));
//
//     return value;
// }
//
//        float convertComponent(float srcValue)
// {
//
//     return srcValue;
// }
//
// uint makeDestinationComponent(uint cd, float value)
// {
//
//     uint valueAsUint;
//
//     if(params . Bd == 2)
//     {
//
//         uint shift =((cd & 1)== 0)? 0 : 16;
//         valueAsUint = packHalf2x16(vec2(value, 0.0))<< shift;
//     }
//     else
//     {
//         valueAsUint = floatBitsToInt(value);
//     }
//
//     return valueAsUint;
// }
//
// void storeDestinationComponents(uint valueAsUint)
// {
//
//     destData[gl_GlobalInvocationID . x + params . dstOffset / 4]= valueAsUint;
// }
//
// void main()
// {
//     if(gl_GlobalInvocationID . x >= params . outputCount)
//         return;
//
//     uint valueOut = 0;
//     for(uint i = 0;i < params . Ed;++ i)
//     {
//         uint cd = gl_GlobalInvocationID . x * params . Ed + i;
//         if(cd >= params . componentCount)
//         {
//             break;
//         }
//
//               float srcValue = loadSourceComponent(cd);
//                float destValue = convertComponent(srcValue);
//         valueOut |= makeDestinationComponent(cd, destValue);
//     }
//
//     storeDestinationComponents(valueOut);
// }
