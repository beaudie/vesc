// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/ClearTexture.comp.00000003.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kClearTexture_comp_00000003[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x5d,0x93,0xcb,0x4e,0x1b,0x41,
    0x10,0x45,0x1b,0xcf,0x78,0x0c,0x71,0x78,0x18,0x6c,0x07,0x82,0x31,0x18,0x3b,0x60,
    0xe1,0x87,0x9c,0x60,0xc0,0x09,0x4a,0xa4,0xac,0xc2,0x82,0x1d,0x5f,0x80,0xc4,0x86,
    0x45,0xb2,0x81,0x4f,0xe0,0x7b,0xf8,0x3d,0x08,0x08,0x89,0xba,0x3d,0xa7,0x47,0x2d,
    0x5b,0x6a,0x75,0xd7,0xa9,0x5b,0x8f,0xee,0xf2,0x24,0xa5,0x6e,0xc5,0xb9,0x05,0xf7,
    0xc1,0x2d,0xba,0x1f,0x2e,0xff,0xd5,0x5c,0xc9,0x88,0x73,0x55,0x97,0xf9,0xfd,0xcf,
    0xe5,0xd5,0xe5,0xf8,0xee,0xfe,0x66,0x3c,0x3d,0x99,0xc8,0xbf,0xe2,0x12,0xaf,0x93,
    0x6f,0xd5,0x34,0x65,0xdb,0x53,0x5b,0x7f,0xaf,0x6f,0xff,0x39,0x1f,0xe7,0xdc,0x9a,
    0xf1,0xd4,0xe7,0xd2,0x39,0xd7,0xfa,0x5c,0x46,0xab,0x68,0x5a,0xd8,0x75,0xdb,0x33,
    0x72,0x5c,0x58,0xb6,0x06,0x7d,0x74,0xd9,0x03,0x5b,0x80,0xad,0x45,0xac,0x04,0xab,
    0x47,0x2c,0x81,0xf5,0x22,0x96,0xc2,0xfa,0x11,0x2b,0xc3,0x86,0x11,0xcb,0x60,0x93,
    0x88,0x55,0x60,0x53,0xdf,0x6f,0x52,0xd4,0x55,0xef,0x47,0x73,0xbd,0x0f,0xe6,0x7a,
    0x97,0x7e,0x40,0x4f,0xd2,0x8f,0x6c,0xdf,0x2f,0x7c,0xb9,0xdd,0x89,0xec,0x33,0xde,
    0x66,0xcb,0xd6,0x86,0x55,0x29,0x79,0x7f,0xe2,0xe3,0x75,0x6e,0x98,0x46,0xf5,0xf6,
    0x88,0xf9,0x64,0xf6,0x12,0x3d,0x24,0x9e,0xa7,0x36,0xcb,0xfc,0xad,0xc4,0xcf,0xb1,
    0xab,0xb0,0x01,0xf1,0x1f,0x89,0x97,0x7e,0x19,0x9f,0x78,0xd3,0xb2,0xd4,0xc8,0xaf,
    0xdc,0xeb,0xcc,0x30,0x8d,0x62,0x37,0xb0,0x5b,0xd1,0xec,0xc4,0xda,0x56,0x49,0x6f,
    0xb3,0x0e,0x0b,0xbe,0xf9,0xa5,0x9a,0x4d,0xfa,0x6b,0xd0,0x63,0xd3,0xd7,0x0b,0x2c,
    0x75,0x9b,0xf4,0x10,0x7a,0xde,0xe4,0x4d,0xca,0xc4,0x7f,0x46,0x9b,0x45,0xfe,0x9d,
    0x39,0xbb,0xc3,0xec,0xea,0xf6,0x72,0x5f,0xbc,0x3f,0x29,0xe6,0xd5,0x66,0x2e,0x47,
    0xe4,0x1b,0xf2,0xbe,0x03,0xfa,0x91,0x3d,0x2a,0x58,0x9e,0x6f,0xcc,0x9b,0x05,0x7b,
    0x82,0x5f,0xf1,0xc7,0x9c,0xb3,0xe8,0x9d,0x4e,0xf8,0xaf,0x06,0xfb,0x94,0xfb,0x0c,
    0xcd,0x52,0xef,0x67,0x68,0x4e,0x8b,0x55,0xf6,0x39,0x52,0xea,0x68,0x9e,0xcf,0x46,
    0x74,0xe7,0x27,0xb3,0x66,0xf0,0x57,0x3b,0x6b,0x7e,0xdf,0xf1,0x6b,0xff,0x6d,0xaa,
    0x65,0xff,0x6d,0xe6,0xb3,0x96,0xff,0x27,0x75,0x57,0xe1,0xd2,0xe8,0xdd,0xb6,0x79,
    0xeb,0xad,0x48,0xd3,0x82,0x07,0x4d,0x1b,0xcd,0x4e,0xa4,0xd9,0x85,0x3f,0x98,0x26,
    0xfc,0x07,0x5b,0xf0,0x10,0xb7,0x4f,0x5c,0x27,0x8a,0xeb,0xc2,0x43,0x5c,0x8f,0x58,
    0xf1,0x47,0x63,0x9a,0xcd,0x01,0x7d,0xf6,0xb8,0x6b,0x9f,0xbb,0xbe,0x58,0x0e,0xf9,
    0x0e,0xf9,0x76,0x75,0x5f,0x9d,0xff,0xdb,0x3e,0xc3,0xee,0xfb,0xfa,0x99,0xaf,0xff,
    0x95,0xfa,0x13,0xe6,0x15,0x7a,0xf8,0x86,0x4f,0xba,0x63,0xbe,0xe5,0x11,0x1a,0xd5,
    0xfd,0x65,0x35,0xa7,0xe8,0xe2,0xdc,0xda,0xdf,0x6c,0x6a,0x33,0x5b,0xef,0x2d,0xc1,
    0x04,0xc3,0x2c,0x05,0x00,0x00
};

// Generated from:
//
// #version 450 core
// layout(local_size_x = 16, local_size_y = 1, local_size_z = 1)in;
//
// layout(set = 0, binding = 0)buffer dest
// {
//  uint dataBuffer[];
// };
//
// layout(push_constant)uniform PushConstants
// {
//     vec4 clearValue;
//  uint depthValue;
//  uint rawData[4];
//  uint dataSize;
//  uint stencilValue;
//  uint width;
//  uint height;
//  uint depth;
// } params;
//
// void main()
// {
//  uint threadId = gl_GlobalInvocationID . x;
//
//  if(threadId >= params . width * params . height * params . depth)
//  {
//   return;
//  }
//     dataBuffer[threadId]= params . rawData[0];
//
// }
