// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/ClearTexture.comp.00000003.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kClearTexture_comp_00000003[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x5d,0x52,0xcb,0x4e,0x02,0x51,
    0x0c,0x2d,0x33,0xe3,0xf8,0x18,0x11,0x90,0x87,0x48,0x00,0x91,0x11,0xa2,0x3c,0x06,
    0x4c,0xd4,0x98,0x18,0x4d,0x5c,0xe9,0x82,0x9d,0x5f,0x60,0xe2,0xc6,0x05,0x6e,0xf4,
    0xbb,0xfc,0x3d,0x5f,0x31,0xf1,0xb4,0xf7,0x5c,0x33,0x61,0x92,0x9b,0xde,0x9e,0x9e,
    0xf6,0xb4,0xbd,0x13,0x06,0xe9,0xba,0x48,0x41,0xb6,0x64,0x43,0x4e,0xc5,0x7d,0x15,
    0x09,0x80,0x88,0x24,0x12,0x9b,0xbd,0x5b,0x3c,0x2c,0xb2,0xd7,0xb7,0xa7,0xec,0xec,
    0x7c,0xae,0xf1,0x1d,0x09,0x8d,0xa7,0xb1,0x12,0x38,0x6b,0xb0,0x11,0xce,0xf2,0xf1,
    0xf9,0x45,0x2c,0x4f,0xa4,0x0c,0x3c,0xb2,0x5a,0x7a,0x77,0x5c,0xab,0x05,0x34,0x21,
    0xa7,0x4d,0x7f,0x17,0x36,0x66,0x8d,0x7b,0x54,0xab,0xb2,0x8f,0x94,0xd6,0x63,0x05,
    0x62,0x65,0xcb,0x0b,0x0d,0x0b,0x58,0xa3,0xbf,0x52,0x23,0x5d,0xa9,0xa1,0x7c,0xbd,
    0x87,0xe4,0x0f,0x60,0xfb,0xff,0x31,0xe7,0x1f,0xe6,0xfc,0x8c,0x3d,0xee,0xe3,0x54,
    0xa1,0x12,0x58,0x3c,0xb4,0x7c,0xbd,0xd7,0xc1,0x51,0xbd,0x1e,0x73,0xf6,0xe0,0x6f,
    0xb2,0x87,0xd0,0xf0,0x08,0x3b,0x75,0x3d,0x2b,0x7e,0x45,0x3f,0x21,0x36,0x66,0xfe,
    0x36,0xf3,0x95,0x5f,0x64,0x2c,0xce,0xc5,0x2b,0x9c,0xa9,0x9d,0xdb,0x93,0x62,0x5d,
    0xf8,0x3a,0xbf,0xc7,0x34,0xbf,0x46,0xad,0x2a,0xf5,0x6a,0xd6,0xa7,0xc3,0xb4,0xdf,
    0x06,0xfb,0xf5,0xfa,0x0d,0xeb,0xdb,0xf9,0x9a,0xdf,0x24,0x57,0xeb,0xd5,0x30,0x65,
    0x07,0xb6,0x83,0x69,0xfc,0x6e,0xbb,0xdc,0x61,0x9f,0xfc,0x23,0xee,0x22,0xa5,0x9e,
    0xfa,0x03,0x62,0xbe,0xfe,0x30,0x37,0xdf,0x88,0xb1,0xfc,0x7c,0x13,0xbe,0xa7,0xf7,
    0xa7,0xec,0x67,0x02,0x4f,0x7b,0xc9,0xc8,0x99,0xf2,0x5c,0xe0,0x6d,0x03,0xee,0x44,
    0xb8,0xeb,0x4f,0x20,0xfa,0x0f,0x7e,0xc0,0x9b,0x11,0xff,0xc1,0x5d,0x77,0x3b,0x67,
    0x5c,0xed,0x2d,0x58,0x45,0xfb,0x7f,0xdd,0x3b,0x68,0xfc,0x9a,0xba,0x25,0xe2,0xca,
    0x69,0xf2,0xdd,0xeb,0xdc,0x8f,0xe7,0xb4,0x88,0xbf,0x83,0xd3,0xb1,0x7d,0xb8,0xbc,
    0x16,0xb5,0xfd,0xbf,0xf0,0x0d,0xbe,0xc6,0x0e,0xb8,0x6f,0xd5,0xd7,0xfb,0x17,0xec,
    0x8c,0x7e,0xcf,0xb4,0x62,0xd3,0x3a,0xa6,0xd6,0x90,0xc7,0xeb,0x9d,0x30,0xa6,0xbc,
    0x91,0xed,0xc8,0xed,0x77,0x48,0xdd,0x1b,0x68,0x8e,0xc9,0xcb,0xd7,0x56,0xfb,0x8b,
    0x2d,0x5e,0xe2,0xfc,0x01,0x07,0xcd,0x61,0x61,0xe0,0x03,0x00,0x00
};

// Generated from:
//
// #version 450 core
// layout(local_size_x = 16, local_size_y = 1, local_size_z = 1)in;
//
// layout(set = 0, binding = 0)buffer dest
// {
//  uint dataBuffer[];
// };
//
// layout(push_constant)uniform PushConstants
// {
//  uint data[4];
//  uint texelCount;
// } params;
//
// void main()
// {
//  uint threadId = gl_GlobalInvocationID . x;
//  uint texelCount = params . texelCount;
//
//  if(threadId >= texelCount)
//  {
//   return;
//  }
//     dataBuffer[threadId]= params . data[0];
//
// }
