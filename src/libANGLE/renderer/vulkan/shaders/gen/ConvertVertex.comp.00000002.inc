// GENERATED FILE - DO NOT EDIT.
// Generated by gen_vk_internal_shaders.py.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// shaders/gen/ConvertVertex.comp.00000002.inc:
//   Pre-generated shader for the ANGLE Vulkan back-end.

#pragma once
constexpr uint8_t kConvertVertex_comp_00000002[] = {
    0x1f,0x8b,0x08,0x00,0x00,0x00,0x00,0x00,0x02,0xff,0x9d,0x99,0x77,0x70,0x57,0x45,
    0x10,0xc7,0xdf,0x25,0x21,0x09,0x84,0x16,0x5a,0x50,0x21,0x12,0x10,0xe9,0x10,0x85,
    0xc4,0x60,0x0c,0x01,0x45,0x08,0x08,0x88,0x0d,0x95,0x8c,0xd8,0xc0,0x8e,0xa2,0x60,
    0x07,0xc5,0x86,0x62,0x45,0xb1,0x22,0x36,0x6c,0x08,0x16,0x6c,0x08,0x76,0x11,0xc5,
    0x82,0x5d,0x41,0x2c,0xa0,0xce,0xe8,0x8c,0x0d,0x3b,0x82,0x0d,0x6f,0xdf,0x7d,0x36,
    0xbf,0xcd,0x99,0xbf,0xcc,0xcc,0x9b,0xdf,0xdb,0xef,0xee,0x7e,0x77,0x6f,0x6f,0xef,
    0xde,0xbd,0x97,0xec,0xac,0x2e,0x79,0x49,0xb6,0x4b,0x9a,0x24,0xf9,0xc9,0x18,0x97,
    0xa4,0x7f,0x85,0x49,0x56,0x22,0xb7,0x05,0x49,0x6e,0xfa,0x3b,0x7c,0xd4,0x7e,0xa3,
    0xfa,0x4e,0x9d,0x36,0xb1,0xef,0x80,0xb2,0x52,0xd1,0x37,0x4f,0xb2,0x53,0x3b,0xd1,
    0xb5,0xf0,0x36,0x8d,0xfc,0x6f,0x8e,0xbf,0x26,0x1f,0x7e,0xec,0x89,0x82,0x17,0x78,
    0x45,0x4b,0x8f,0xe7,0xa4,0x5c,0x49,0x32,0x18,0x5b,0xb9,0x6a,0xbc,0x75,0xb7,0x10,
    0x26,0xe9,0xc2,0xaf,0x62,0x0e,0x2c,0xc7,0x60,0x59,0x60,0xf9,0x06,0xcb,0x06,0x6b,
    0x6a,0xb0,0x1c,0xb0,0x96,0x06,0x6b,0x04,0xd6,0xc6,0x60,0xb9,0x60,0xed,0x0d,0x96,
    0x07,0xd6,0xc1,0x60,0xf9,0x60,0x9d,0x0c,0xd6,0x18,0x6c,0x07,0x83,0x35,0x01,0xeb,
    0x6e,0xb0,0x02,0xb0,0xde,0x06,0x6b,0x0a,0x56,0x6a,0xb0,0x66,0x60,0x03,0x0c,0xd6,
    0x1c,0xac,0x42,0xea,0xee,0x47,0xaa,0x35,0x18,0xee,0x47,0x38,0x91,0xfc,0xb5,0x3e,
    0x93,0xa2,0x3a,0x8a,0xfd,0x24,0x63,0x7f,0xb4,0xff,0xed,0x5c,0xa7,0x0b,0x72,0x09,
    0x75,0x16,0xb9,0x91,0xab,0xcf,0x97,0xeb,0xfe,0xcb,0x27,0x98,0xf2,0xe5,0xbb,0xfa,
    0x7c,0x22,0x97,0x18,0x59,0xe6,0xbd,0x80,0x3a,0x8a,0x3c,0x1a,0x79,0x1b,0x7f,0xb5,
    0xf6,0x2c,0x59,0x69,0xfc,0xec,0x74,0xfe,0xe4,0xbe,0xad,0xb7,0xc9,0xa5,0xc6,0x49,
    0xfa,0x9b,0x93,0xce,0x45,0x1e,0xe3,0x2c,0xf1,0x39,0xe5,0x73,0xaf,0xb8,0xf8,0x14,
    0xe2,0xe3,0x52,0x9b,0x9c,0xa4,0x15,0x7d,0x96,0x07,0x47,0x3b,0xee,0x05,0x6b,0xe7,
    0xa3,0x15,0x61,0x2f,0xb6,0x32,0xef,0x45,0x29,0x1e,0x6c,0x3b,0x60,0x5b,0x44,0xbc,
    0x8e,0x26,0x5e,0x07,0x7c,0x3a,0x93,0xaf,0x60,0xc5,0x9e,0x55,0xfb,0xe8,0xff,0x5e,
    0x12,0xb7,0x3b,0xfd,0x24,0x5c,0x95,0xc8,0x3d,0xc0,0x7a,0x31,0xc6,0x9e,0xc6,0xbe,
    0x17,0xba,0x5c,0xa3,0x2f,0xa5,0xc7,0x55,0x2e,0x23,0xcf,0x5e,0xd4,0xb5,0x8a,0xb9,
    0x55,0xb9,0x9a,0xbe,0x56,0xfb,0x61,0x91,0x3c,0x16,0xfb,0x36,0x9e,0x65,0x3f,0xe3,
    0x37,0x8e,0x35,0xa7,0x76,0xb5,0xcc,0x57,0x47,0x8f,0x6a,0x4f,0x16,0xd3,0x7b,0x13,
    0xc9,0xf7,0x28,0x7a,0x7e,0x12,0xe3,0x13,0xf9,0x68,0x30,0xd1,0x1f,0xc7,0xbd,0x1d,
    0xcf,0x64,0xd6,0x84,0xc6,0x9d,0x42,0x1c,0xd5,0x9f,0xce,0x7a,0x53,0x79,0x46,0x94,
    0xd7,0x39,0xfe,0xda,0x9a,0x9d,0x91,0xcf,0x63,0x3d,0x29,0xdf,0x25,0xc6,0x5f,0xe4,
    0xb9,0x51,0xbd,0xee,0xa2,0x4f,0xd4,0xff,0x3e,0xe1,0xf3,0x7f,0x2a,0x2f,0xa6,0xe7,
    0x54,0x7e,0xca,0x8c,0xe7,0x15,0xfa,0xc3,0xd6,0x6d,0x75,0x64,0xff,0x75,0x34,0xbf,
    0xbf,0xb0,0x5f,0x89,0x2c,0xfd,0xb7,0x99,0xf1,0x16,0x79,0x79,0x0b,0x3d,0x99,0x45,
    0x9d,0x75,0xad,0x16,0xb3,0x26,0x45,0x4e,0xd7,0x8b,0xa3,0x8e,0x2e,0xd4,0x59,0xe4,
    0x7c,0x30,0xe1,0x69,0x8c,0x5f,0x36,0x79,0x36,0x71,0x21,0xa7,0xc6,0xd8,0x8b,0x5c,
    0x00,0x26,0xfa,0xa6,0xdc,0xdb,0x79,0xe9,0xca,0x3a,0xd6,0x71,0x8d,0x72,0x61,0x4f,
    0xef,0xed,0x25,0xe1,0x91,0x75,0x2e,0xd8,0x6a,0xc6,0x5c,0xee,0xbb,0x32,0x8b,0x5e,
    0x4a,0x88,0xbd,0xd9,0x23,0x8d,0xe8,0x05,0xa9,0x53,0x47,0x17,0xea,0xa5,0x72,0x71,
    0x24,0xf7,0x30,0xb2,0xac,0xd5,0x8a,0x48,0x3f,0xd0,0xc8,0xb2,0x4e,0x77,0x8b,0xec,
    0xab,0x22,0xfb,0xc1,0x91,0xfd,0xee,0x91,0x7e,0x04,0xf2,0x10,0x9f,0xa5,0xd4,0xa0,
    0x2d,0x75,0x99,0x92,0xae,0xa3,0x30,0xee,0x76,0xe0,0x62,0x23,0xeb,0xb1,0xc8,0x85,
    0x35,0x5b,0x6b,0x6c,0xda,0xbb,0x80,0x3f,0xe8,0x6d,0xa4,0x17,0xb6,0x71,0xc1,0x4f,
    0xf0,0xdf,0x7d,0x25,0xb6,0x63,0x8f,0xfd,0xc3,0xdb,0x8b,0x6e,0x5b,0x7f,0x09,0x26,
    0xf5,0x91,0xfb,0xbf,0x7d,0xf5,0xe5,0x5e,0xb0,0x41,0xde,0xbe,0x23,0x39,0xc8,0x7d,
    0x31,0xf7,0x5b,0xbc,0x7e,0x7b,0x7c,0xe4,0x77,0x93,0xe7,0x2a,0x91,0xbd,0x19,0x6e,
    0xd1,0x77,0x41,0x2f,0xbf,0x9a,0xdb,0x0e,0x2e,0xd4,0x59,0xf3,0xdf,0x91,0xfc,0xbb,
    0x1a,0x9b,0x6e,0x2e,0xe0,0x4b,0xc8,0xbf,0xbb,0x0b,0x7e,0x82,0x4b,0xce,0x22,0x77,
    0x92,0x7d,0x1f,0xfe,0x4e,0x2e,0x53,0xb3,0x9e,0x0d,0xd4,0xac,0x17,0xb8,0xc6,0xec,
    0xdd,0x40,0xcc,0x3e,0x2e,0xe0,0x17,0xca,0x33,0xc8,0xcb,0x7d,0x5d,0xf0,0xeb,0x63,
    0x6c,0xfa,0x91,0xfb,0x4c,0x6c,0x4a,0x5d,0xb0,0xeb,0x47,0x9d,0xa4,0x5f,0x4a,0x8d,
    0xfd,0x4e,0x2e,0xf4,0x90,0xc6,0xdd,0x99,0xb8,0x8b,0x4d,0x6e,0xfd,0x5d,0xc0,0x75,
    0xae,0x06,0xb8,0xe0,0xd7,0x9f,0xb9,0x2a,0x37,0x73,0x25,0xba,0x32,0x7f,0x95,0x33,
    0x6e,0xb9,0x97,0x3a,0x6b,0x1d,0xca,0x4d,0xec,0x5d,0x89,0x2d,0x79,0x49,0x9f,0x8a,
    0x3c,0xd0,0xc7,0x90,0xb5,0x54,0xe9,0xc2,0x79,0x64,0x20,0x7a,0xe9,0xeb,0x4a,0x7c,
    0x45,0x3f,0xc8,0x85,0x5e,0x17,0x9d,0xf4,0xf0,0x20,0x7c,0x65,0x2f,0xa8,0x96,0x7e,
    0xa1,0xb7,0x45,0x2f,0x3d,0x5f,0x6d,0xe2,0x0e,0x31,0x71,0xa5,0xdf,0x87,0xa0,0x13,
    0xdf,0x3d,0x5c,0x58,0x23,0xa2,0x93,0xde,0xdf,0x23,0xe5,0xcd,0x4d,0xfd,0x86,0xba,
    0xb0,0xef,0x89,0xcf,0xee,0x86,0x6f,0x4f,0x17,0xd6,0xe9,0x4b,0xd4,0x7c,0x98,0x0b,
    0xd8,0x50,0xd3,0x9b,0xc3,0xa8,0x43,0x67,0xea,0xd0,0xd9,0xf8,0x0f,0x8f,0xe6,0xac,
    0xc6,0x05,0x6c,0xb1,0xe9,0xe7,0x1a,0x57,0xbf,0x9f,0x4b,0x8c,0xff,0x48,0xe2,0x8b,
    0xad,0xac,0xcf,0x91,0xd4,0x42,0xf6,0x96,0xbd,0x5c,0x38,0x87,0x8d,0x60,0xcd,0x54,
    0xf8,0xab,0x9c,0x38,0x05,0xec,0x3b,0xf2,0x6c,0xdb,0xc5,0xfb,0xe6,0xb1,0xef,0xea,
    0x7d,0x13,0xf6,0xa3,0xa6,0xa6,0x17,0x76,0xc4,0xa6,0xae,0x4f,0x79,0x1e,0xf7,0x34,
    0x36,0x7d,0xc0,0xeb,0xfa,0x14,0xbf,0x3e,0xc6,0xa6,0x1f,0xfc,0xca,0xb3,0x13,0x3c,
    0xa5,0xc6,0x66,0x67,0x70,0xe5,0xe9,0x8f,0x9f,0xe0,0x5a,0xab,0x01,0xf0,0xf7,0x37,
    0x5c,0xe5,0x70,0x95,0x19,0xae,0x5d,0xc0,0xd5,0xaf,0x02,0x5f,0xc1,0xff,0xf1,0x63,
    0xac,0x48,0xb1,0x4c,0x6d,0x5a,0x34,0x50,0x9b,0x66,0xe6,0xbe,0x39,0xb5,0x69,0x69,
    0xf6,0xc6,0x4a,0x9e,0x6d,0x1a,0x73,0x37,0x7c,0x66,0xc3,0x39,0x08,0xac,0xca,0x8c,
    0x69,0x30,0x78,0x35,0x73,0x5d,0x09,0x56,0xd7,0xab,0xf0,0x4a,0x8e,0x43,0x4c,0x8e,
    0x85,0x9c,0xd7,0xe5,0xaf,0x95,0xc9,0xab,0x35,0x79,0xb5,0x35,0x79,0x0d,0x4d,0xea,
    0xef,0xe1,0x23,0x23,0xf9,0x90,0x48,0x9e,0x10,0xc9,0x87,0x45,0xf2,0x91,0x91,0x3c,
    0x2d,0x92,0xcf,0x8a,0xe4,0x8b,0x23,0xf9,0xca,0x48,0x9e,0x17,0xc9,0xf3,0x93,0xfa,
    0xcf,0xa8,0x7b,0x22,0xfd,0x93,0x46,0x96,0xf3,0xc4,0xab,0x91,0xfe,0xdd,0xc8,0xff,
    0xfd,0x48,0xde,0x10,0xcd,0xd3,0x9e,0xd4,0x4d,0xfb,0x67,0x38,0xfd,0x33,0xcc,0xd8,
    0xd4,0x80,0xcf,0x62,0xde,0x46,0xe0,0x57,0xc3,0xbc,0x0d,0x05,0x53,0xfb,0xbd,0x22,
    0xce,0x51,0x0d,0x70,0x8e,0x06,0xd7,0xfe,0x18,0x83,0xdf,0x68,0x38,0x47,0x82,0xa9,
    0xfd,0xde,0xcc,0x9d,0x72,0xee,0x03,0xe7,0x58,0x63,0xb3,0x2f,0xb8,0xee,0xd5,0xfb,
    0xe3,0xb7,0xaf,0xb1,0x39,0x00,0x1e,0x7d,0x76,0x1d,0x08,0x26,0xe7,0xd7,0x7b,0xc1,
    0x0e,0xc2,0x57,0x74,0xb2,0xc7,0x8f,0x4f,0x32,0x7b,0xbc,0xe8,0x0e,0xf6,0xd7,0x78,
    0x7a,0xed,0x60,0xfa,0xb3,0x16,0x79,0xbc,0x89,0x75,0x28,0xfd,0x27,0xe3,0x99,0x80,
    0xac,0xba,0xc3,0xc9,0x43,0x74,0x87,0x21,0xeb,0x5e,0x7b,0x04,0xfb,0xd3,0x04,0xfa,
    0x4f,0x6c,0x0e,0x01,0x57,0xff,0x63,0xe8,0x5d,0x9d,0x93,0x63,0xc1,0xaa,0xd2,0x1a,
    0xe5,0xa6,0x67,0xe7,0xe3,0x39,0x4f,0xd7,0xa2,0x57,0xdf,0x13,0xd0,0x09,0xef,0x91,
    0xc8,0x5a,0xd7,0x13,0xa9,0xeb,0x64,0x63,0x7f,0x12,0xf8,0x62,0xea,0x73,0x32,0xd8,
    0x14,0xea,0x33,0xd5,0xd4,0x47,0x74,0xa7,0xf8,0xeb,0x26,0xea,0x71,0x8a,0xe1,0x39,
    0x95,0x31,0x2f,0x82,0xe7,0x34,0xb0,0x71,0xe9,0x39,0x3a,0x37,0x5d,0xd7,0x67,0x80,
    0x97,0x71,0x96,0x9f,0x8e,0xef,0x99,0xe8,0x24,0xe7,0x69,0xc8,0xca,0x7b,0x76,0xc4,
    0x3b,0x1d,0xcc,0xf2,0x9e,0x0b,0x3e,0x83,0x77,0x00,0xe5,0x9d,0x89,0x4e,0x78,0xcf,
    0x42,0xd6,0x5a,0x9c,0x4f,0x2d,0xce,0x33,0xb1,0x2e,0x00,0xd7,0x5a,0x5c,0x08,0xa6,
    0xb5,0x98,0x65,0x6a,0x21,0xba,0x8b,0xfc,0x75,0x19,0xb5,0xb8,0xc8,0xf0,0xcc,0x26,
    0x67,0xdd,0x0b,0x2f,0xe5,0xdd,0x63,0x36,0xb9,0x5c,0x0c,0x26,0xcf,0xbd,0x59,0xf8,
    0x5f,0x66,0xfc,0x2f,0x8f,0xc6,0x7c,0x05,0xd8,0x38,0xf2,0x98,0x63,0xf2,0x10,0xdd,
    0x55,0xfe,0xba,0x1a,0x9e,0xab,0x88,0x71,0x65,0x92,0x39,0x2b,0xce,0x41,0x77,0xb5,
    0x89,0x71,0x0d,0xfb,0x9b,0xca,0xd7,0x12,0xf3,0x7c,0x72,0xbe,0x8e,0xf7,0xa3,0x6b,
    0xcd,0x38,0xae,0xc7,0xef,0x3a,0xf3,0xbc,0xb9,0x01,0x7c,0xae,0x89,0x7b,0x43,0x14,
    0x77,0x8e,0x89,0x73,0x23,0xfb,0xa4,0xd6,0xe1,0xc6,0xa8,0x0e,0xb3,0x90,0xa7,0x22,
    0xdf,0x64,0x7c,0x6f,0x66,0x5d,0x88,0xef,0x3c,0x64,0x9d,0xcf,0x5b,0x1a,0x78,0xce,
    0xde,0x0a,0x2e,0xf6,0xf3,0x91,0x75,0x1d,0xde,0xc6,0xb3,0x70,0x1e,0xfb,0xb2,0xe6,
    0x73,0x9b,0xe1,0xbc,0xbd,0x01,0xce,0x3b,0xc0,0xb5,0x26,0x0b,0xc0,0xaa,0x4d,0xff,
    0x2e,0x30,0xf6,0x77,0x52,0x67,0x9d,0xcb,0xbb,0xc1,0xee,0x62,0x2e,0x17,0x9a,0xb9,
    0xbc,0x3b,0xdd,0xa7,0xc4,0x36,0x8c,0xfd,0x5e,0x38,0xef,0xe1,0x5d,0x54,0xea,0xb2,
    0x10,0xdd,0x22,0x13,0xe3,0x7e,0x62,0xac,0xe4,0xf9,0xf9,0x00,0xe7,0xdc,0xfb,0x99,
    0xcf,0xc2,0x74,0xdf,0xcc,0xe0,0xca,0xf9,0x60,0xc4,0xb9,0x30,0xc9,0x9c,0x43,0x1f,
    0xe2,0xf9,0xa4,0x6b,0x69,0x09,0x98,0xae,0xa5,0x25,0xd1,0x3c,0x4d,0x35,0xf9,0x3c,
    0x1c,0xed,0xe7,0x8f,0x34,0xb0,0x9f,0x3f,0x0a,0xae,0xfb,0xf9,0x63,0xf8,0x3d,0x6a,
    0x6c,0x1e,0x8f,0xd6,0xc1,0x52,0x30,0xbb,0x9f,0x3f,0x81,0xef,0x52,0xea,0xb9,0xdc,
    0xd4,0x53,0x74,0xcb,0xfc,0xf5,0x2c,0x39,0x2e,0x33,0x39,0x3d,0x4d,0x4e,0x4f,0x99,
    0x78,0xcf,0x80,0xcb,0x18,0x9f,0x44,0x96,0x31,0x2e,0xc7,0xff,0x59,0x63,0xfb,0x1c,
    0xe7,0x05,0x95,0x9f,0xe7,0x3c,0xb0,0x82,0xbe,0x78,0x01,0x9b,0xe7,0x8d,0xcd,0x0a,
    0xce,0x10,0xab,0xb0,0x79,0x11,0xbb,0x15,0x26,0xe6,0x8b,0x51,0xcc,0xe5,0xc6,0x7f,
    0x25,0xf3,0xac,0xcf,0xb7,0x97,0xc0,0xb4,0x97,0x56,0x99,0xb1,0x8b,0xee,0xe5,0x34,
    0x56,0xe0,0x79,0xd9,0xf0,0xbc,0xc6,0x59,0x43,0xe5,0xd7,0xe1,0xd5,0xb5,0xff,0x06,
    0xd8,0x6a,0xd3,0x53,0x6f,0xd2,0x3b,0x6f,0x98,0x9e,0x78,0x0b,0x5c,0xc7,0xf3,0x36,
    0xdc,0x6f,0x99,0x3d,0xf4,0x1d,0x70,0x7d,0x87,0x7d,0x15,0x4c,0x62,0x8b,0xfe,0x3d,
    0xce,0x39,0x92,0xff,0x1a,0x93,0xbf,0xe0,0x1f,0xf8,0x6b,0x1d,0xf9,0x7f,0x60,0xf2,
    0x5d,0x1b,0xf5,0xfb,0x87,0xac,0x8f,0xb5,0xc4,0x78,0x1f,0x4c,0xea,0xb8,0x06,0xff,
    0x75,0x46,0x57,0x1b,0xe9,0xd6,0x98,0xbe,0xff,0x88,0x73,0x95,0x8e,0xf1,0x63,0x30,
    0xf1,0x7d,0x17,0x59,0xf3,0xf8,0x84,0x33,0x99,0xca,0x9f,0x52,0x57,0x7d,0x5f,0x5a,
    0x0f,0xf6,0x89,0x99,0xdf,0xf5,0xc4,0xd6,0x79,0x59,0x65,0xfc,0x3f,0xc3,0x7f,0x3a,
    0xb9,0x7c,0x0e,0x26,0xbe,0x1b,0x90,0x35,0xcf,0x2f,0x38,0xef,0xc9,0xf9,0xe4,0x0b,
    0x73,0x7e,0x96,0x77,0xbd,0x6d,0xa9,0x63,0x7b,0xce,0xcf,0xed,0xf8,0x06,0x9b,0x7e,
    0x57,0x30,0x1c,0x5f,0x82,0x9f,0xc4,0x3b,0xe2,0x57,0x60,0xc2,0xf9,0x55,0xf4,0xde,
    0xd0,0xa9,0xee,0x9b,0x5f,0xe6,0x4c,0x5e,0xcc,0xbd,0x7c,0x4f,0xd9,0x1e,0xfe,0x12,
    0x73,0x5e,0xfd,0x21,0x3a,0xbf,0x6e,0x4a,0x32,0xdf,0x58,0x64,0x0d,0x7e,0xc3,0x1a,
    0xfc,0xda,0xd4,0xe0,0x5b,0x70,0x5d,0xf3,0xdf,0x81,0xcd,0xa5,0x47,0x36,0x9a,0x1e,
    0x11,0xdd,0xf7,0x69,0xbe,0x21,0xf6,0xf7,0x86,0xe7,0x47,0xf2,0xd3,0xde,0xfc,0x09,
    0x6c,0xb5,0xe1,0xfe,0x19,0x7c,0x8a,0x39,0x4b,0xfc,0x0a,0x5e,0xcb,0xf7,0x39,0xed,
    0x83,0xdf,0xd0,0xc9,0x5c,0xfc,0x80,0xac,0xef,0xd6,0xbf,0x33,0xfe,0xb1,0x9e,0x77,
    0x4b,0x9a,0x5b,0xc0,0x36,0xa7,0xdf,0x07,0xc3,0xf3,0xe6,0x4f,0xbe,0x05,0xee,0x8a,
    0x5e,0xf3,0xfc,0x8b,0x3a,0xad,0x24,0xcf,0xbf,0xb1,0xfd,0x8b,0x58,0x9b,0xc0,0xa4,
    0x67,0x36,0x32,0xce,0x7f,0x4c,0xec,0xad,0xc4,0xd6,0x9e,0x91,0x20,0x5b,0x4d,0xde,
    0x8e,0x7f,0xbc,0x28,0x97,0x73,0xf5,0xb9,0x36,0x9a,0x5c,0xb2,0x5c,0x98,0x23,0x99,
    0x7f,0xb9,0xd7,0xf9,0xcf,0xe2,0x7f,0x1e,0x09,0xff,0x4f,0xd0,0xf9,0xef,0x02,0x47,
    0x57,0xf3,0xdd,0xac,0x59,0x03,0xdf,0x80,0x9a,0x83,0xeb,0xbc,0xb7,0xe0,0x5b,0xcc,
    0x0c,0x63,0xd3,0xd2,0x05,0x5c,0xcf,0xbc,0x85,0x2e,0x60,0x55,0xe6,0xac,0xd1,0xca,
    0x05,0xae,0x42,0xf3,0x8d,0xa0,0xb5,0x0b,0x79,0xe8,0xb9,0xb8,0x0d,0xdf,0x3f,0x6b,
    0xb1,0x97,0x71,0x0b,0xd6,0xda,0x7c,0x27,0xf8,0x17,0x5a,0x1f,0x2a,0xf2,0xf4,0x1a,
    0x00,0x00
};

// Generated from:
//
// #version 450 core
//
// layout(local_size_x = 64, local_size_y = 1, local_size_z = 1)in;
//
// layout(set = 0, binding = 0)buffer dst
// {
//     uint destData[];
// };
//
// layout(set = 0, binding = 1)buffer src
// {
//     uint srcData[];
// };
//
// layout(push_constant)uniform PushConstants
// {
//
//     uint outputCount;
//
//     uint componentCount;
//
//     uint srcOffset;
//     uint dstOffset;
//
//     uint Ns;
//     uint Bs;
//     uint Ss;
//     uint Es;
//
//     uint Nd;
//     uint Bd;
//     uint Sd;
//     uint Ed;
//
//     uint srcEmulatedAlpha;
//
//     bool isSrcHDR;
//     bool isSrcA2BGR10;
// } params;
//
// uint getSourceComponentOffset(uint vertex, uint component)
// {
//     return vertex * params . Ss + component * params . Bs + params . srcOffset;
// }
//
// uint getDestinationComponentOffset(uint vertex, uint component)
// {
//     return vertex * params . Sd + component * params . Bd + params . dstOffset;
// }
//
// uint getShiftBits(uint offset, uint B)
// {
//
//     uint shift =(offset % 4)* 8;
//
//     return shift;
// }
//
//       int loadSourceComponent(uint cd)
// {
//
//     uint vertex = cd / params . Nd;
//     uint component = cd % params . Nd;
//
//     if(component >= params . Ns && component < 3)
//     {
//         return 0;
//     }
//
//     uint offset = getSourceComponentOffset(vertex, component);
//     uint block = srcData[offset / 4];
//
//     uint shiftBits;
//     uint valueBits;
//     uint valueMask;
//
//     if(params . isSrcHDR)
//     {
//         valueBits = component == 3 ? 2 : 10;
//         valueMask = component == 3 ? 0x03 : 0x3FF;
//         if(params . isSrcA2BGR10)
//         {
//             shiftBits = 10 * component;
//         }
//         else
//         {
//
//             shiftBits = component == 3 ? 0 :(valueBits *(2 - component)+ 2);
//         }
//     }
//     else
//     {
//         shiftBits = getShiftBits(offset, params . Bs);
//         valueBits = params . Bs * 8;
//         valueMask = valueBits == 32 ? - 1 :(1 << valueBits)- 1;
//     }
//
//     uint valueAsUint;
//
//     if(component >= params . Ns && component == 3)
//     {
//         valueAsUint = params . srcEmulatedAlpha;
//     }
//     else
//     {
//         valueAsUint =(block >> shiftBits)& valueMask;
//     }
//
//     if(valueBits < 32)
//     {
//         bool isNegative =(valueAsUint &(1 <<(valueBits - 1)))!= 0;
//
//         uint signExtension = isNegative ? 0xFFFFFFFF << valueBits : 0;
//         valueAsUint |= signExtension;
//     }
//           int value = int(valueAsUint);
//
//     return value;
// }
//
//        float convertComponent(int srcValue)
// {
//
//     return srcValue;
// }
//
// uint makeDestinationComponent(uint cd, float value)
// {
//
//     uint valueAsUint;
//
//     if(params . Bd == 2)
//     {
//
//         uint shift =((cd & 1)== 0)? 0 : 16;
//         valueAsUint = packHalf2x16(vec2(value, 0.0))<< shift;
//     }
//     else
//     {
//         valueAsUint = floatBitsToInt(value);
//     }
//
//     return valueAsUint;
// }
//
// void storeDestinationComponents(uint valueAsUint)
// {
//
//     destData[gl_GlobalInvocationID . x + params . dstOffset / 4]= valueAsUint;
// }
//
// void main()
// {
//     if(gl_GlobalInvocationID . x >= params . outputCount)
//         return;
//
//     uint valueOut = 0;
//     for(uint i = 0;i < params . Ed;++ i)
//     {
//         uint cd = gl_GlobalInvocationID . x * params . Ed + i;
//         if(cd >= params . componentCount)
//         {
//             break;
//         }
//
//               int srcValue = loadSourceComponent(cd);
//                float destValue = convertComponent(srcValue);
//         valueOut |= makeDestinationComponent(cd, destValue);
//     }
//
//     storeDestinationComponents(valueOut);
// }
