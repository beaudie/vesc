// GENERATED FILE - DO NOT EDIT.
// Generated by generate_gl_dispatch_table.py using data from gl_bindings_data.json and gl.xml.
//
// Copyright 2017 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// null_functions.cpp:
//   Defines the NULL/Stub bindings for the OpenGL back-end.

#include "libANGLE/renderer/gl/null_functions.h"

namespace rx
{
void glActiveShaderProgramNULL(GLuint pipeline, GLuint program)
{
}

void glActiveTextureNULL(GLenum texture)
{
}

void glAttachShaderNULL(GLuint program, GLuint shader)
{
}

void glBeginConditionalRenderNULL(GLuint id, GLenum mode)
{
}

void glBeginQueryNULL(GLenum target, GLuint id)
{
}

void glBeginQueryIndexedNULL(GLenum target, GLuint index, GLuint id)
{
}

void glBeginTransformFeedbackNULL(GLenum primitiveMode)
{
}

void glBindAttribLocationNULL(GLuint program, GLuint index, const GLchar *name)
{
}

void glBindBufferNULL(GLenum target, GLuint buffer)
{
}

void glBindBufferBaseNULL(GLenum target, GLuint index, GLuint buffer)
{
}

void glBindBufferRangeNULL(GLenum target,
                           GLuint index,
                           GLuint buffer,
                           GLintptr offset,
                           GLsizeiptr size)
{
}

void glBindBuffersBaseNULL(GLenum target, GLuint first, GLsizei count, const GLuint *buffers)
{
}

void glBindBuffersRangeNULL(GLenum target,
                            GLuint first,
                            GLsizei count,
                            const GLuint *buffers,
                            const GLintptr *offsets,
                            const GLsizeiptr *sizes)
{
}

void glBindFragDataLocationNULL(GLuint program, GLuint color, const GLchar *name)
{
}

void glBindFragDataLocationIndexedNULL(GLuint program,
                                       GLuint colorNumber,
                                       GLuint index,
                                       const GLchar *name)
{
}

void glBindFramebufferNULL(GLenum target, GLuint framebuffer)
{
}

void glBindImageTextureNULL(GLuint unit,
                            GLuint texture,
                            GLint level,
                            GLboolean layered,
                            GLint layer,
                            GLenum access,
                            GLenum format)
{
}

void glBindImageTexturesNULL(GLuint first, GLsizei count, const GLuint *textures)
{
}

void glBindProgramPipelineNULL(GLuint pipeline)
{
}

void glBindRenderbufferNULL(GLenum target, GLuint renderbuffer)
{
}

void glBindSamplerNULL(GLuint unit, GLuint sampler)
{
}

void glBindSamplersNULL(GLuint first, GLsizei count, const GLuint *samplers)
{
}

void glBindTextureNULL(GLenum target, GLuint texture)
{
}

void glBindTextureUnitNULL(GLuint unit, GLuint texture)
{
}

void glBindTexturesNULL(GLuint first, GLsizei count, const GLuint *textures)
{
}

void glBindTransformFeedbackNULL(GLenum target, GLuint id)
{
}

void glBindVertexArrayNULL(GLuint array)
{
}

void glBindVertexBufferNULL(GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride)
{
}

void glBindVertexBuffersNULL(GLuint first,
                             GLsizei count,
                             const GLuint *buffers,
                             const GLintptr *offsets,
                             const GLsizei *strides)
{
}

void glBlendBarrierNULL()
{
}

void glBlendColorNULL(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha)
{
}

void glBlendEquationNULL(GLenum mode)
{
}

void glBlendEquationSeparateNULL(GLenum modeRGB, GLenum modeAlpha)
{
}

void glBlendEquationSeparateiNULL(GLuint buf, GLenum modeRGB, GLenum modeAlpha)
{
}

void glBlendEquationiNULL(GLuint buf, GLenum mode)
{
}

void glBlendFuncNULL(GLenum sfactor, GLenum dfactor)
{
}

void glBlendFuncSeparateNULL(GLenum sfactorRGB,
                             GLenum dfactorRGB,
                             GLenum sfactorAlpha,
                             GLenum dfactorAlpha)
{
}

void glBlendFuncSeparateiNULL(GLuint buf,
                              GLenum srcRGB,
                              GLenum dstRGB,
                              GLenum srcAlpha,
                              GLenum dstAlpha)
{
}

void glBlendFunciNULL(GLuint buf, GLenum src, GLenum dst)
{
}

void glBlitFramebufferNULL(GLint srcX0,
                           GLint srcY0,
                           GLint srcX1,
                           GLint srcY1,
                           GLint dstX0,
                           GLint dstY0,
                           GLint dstX1,
                           GLint dstY1,
                           GLbitfield mask,
                           GLenum filter)
{
}

void glBlitNamedFramebufferNULL(GLuint readFramebuffer,
                                GLuint drawFramebuffer,
                                GLint srcX0,
                                GLint srcY0,
                                GLint srcX1,
                                GLint srcY1,
                                GLint dstX0,
                                GLint dstY0,
                                GLint dstX1,
                                GLint dstY1,
                                GLbitfield mask,
                                GLenum filter)
{
}

void glBufferDataNULL(GLenum target, GLsizeiptr size, const void *data, GLenum usage)
{
}

void glBufferStorageNULL(GLenum target, GLsizeiptr size, const void *data, GLbitfield flags)
{
}

void glBufferSubDataNULL(GLenum target, GLintptr offset, GLsizeiptr size, const void *data)
{
}

GLenum glCheckFramebufferStatusNULL(GLenum target)
{
    return static_cast<GLenum>(0);
}

GLenum glCheckNamedFramebufferStatusNULL(GLuint framebuffer, GLenum target)
{
    return static_cast<GLenum>(0);
}

void glClampColorNULL(GLenum target, GLenum clamp)
{
}

void glClearNULL(GLbitfield mask)
{
}

void glClearBufferDataNULL(GLenum target,
                           GLenum internalformat,
                           GLenum format,
                           GLenum type,
                           const void *data)
{
}

void glClearBufferSubDataNULL(GLenum target,
                              GLenum internalformat,
                              GLintptr offset,
                              GLsizeiptr size,
                              GLenum format,
                              GLenum type,
                              const void *data)
{
}

void glClearBufferfiNULL(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil)
{
}

void glClearBufferfvNULL(GLenum buffer, GLint drawbuffer, const GLfloat *value)
{
}

void glClearBufferivNULL(GLenum buffer, GLint drawbuffer, const GLint *value)
{
}

void glClearBufferuivNULL(GLenum buffer, GLint drawbuffer, const GLuint *value)
{
}

void glClearColorNULL(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha)
{
}

void glClearDepthNULL(GLdouble depth)
{
}

void glClearDepthfNULL(GLfloat d)
{
}

void glClearNamedBufferDataNULL(GLuint buffer,
                                GLenum internalformat,
                                GLenum format,
                                GLenum type,
                                const void *data)
{
}

void glClearNamedBufferSubDataNULL(GLuint buffer,
                                   GLenum internalformat,
                                   GLintptr offset,
                                   GLsizeiptr size,
                                   GLenum format,
                                   GLenum type,
                                   const void *data)
{
}

void glClearNamedFramebufferfiNULL(GLuint framebuffer,
                                   GLenum buffer,
                                   GLint drawbuffer,
                                   GLfloat depth,
                                   GLint stencil)
{
}

void glClearNamedFramebufferfvNULL(GLuint framebuffer,
                                   GLenum buffer,
                                   GLint drawbuffer,
                                   const GLfloat *value)
{
}

void glClearNamedFramebufferivNULL(GLuint framebuffer,
                                   GLenum buffer,
                                   GLint drawbuffer,
                                   const GLint *value)
{
}

void glClearNamedFramebufferuivNULL(GLuint framebuffer,
                                    GLenum buffer,
                                    GLint drawbuffer,
                                    const GLuint *value)
{
}

void glClearStencilNULL(GLint s)
{
}

void glClearTexImageNULL(GLuint texture, GLint level, GLenum format, GLenum type, const void *data)
{
}

void glClearTexSubImageNULL(GLuint texture,
                            GLint level,
                            GLint xoffset,
                            GLint yoffset,
                            GLint zoffset,
                            GLsizei width,
                            GLsizei height,
                            GLsizei depth,
                            GLenum format,
                            GLenum type,
                            const void *data)
{
}

GLenum glClientWaitSyncNULL(GLsync sync, GLbitfield flags, GLuint64 timeout)
{
    return static_cast<GLenum>(0);
}

void glClipControlNULL(GLenum origin, GLenum depth)
{
}

void glColorMaskNULL(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha)
{
}

void glColorMaskiNULL(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a)
{
}

void glCompileShaderNULL(GLuint shader)
{
}

void glCompressedTexImage1DNULL(GLenum target,
                                GLint level,
                                GLenum internalformat,
                                GLsizei width,
                                GLint border,
                                GLsizei imageSize,
                                const void *data)
{
}

void glCompressedTexImage2DNULL(GLenum target,
                                GLint level,
                                GLenum internalformat,
                                GLsizei width,
                                GLsizei height,
                                GLint border,
                                GLsizei imageSize,
                                const void *data)
{
}

void glCompressedTexImage3DNULL(GLenum target,
                                GLint level,
                                GLenum internalformat,
                                GLsizei width,
                                GLsizei height,
                                GLsizei depth,
                                GLint border,
                                GLsizei imageSize,
                                const void *data)
{
}

void glCompressedTexSubImage1DNULL(GLenum target,
                                   GLint level,
                                   GLint xoffset,
                                   GLsizei width,
                                   GLenum format,
                                   GLsizei imageSize,
                                   const void *data)
{
}

void glCompressedTexSubImage2DNULL(GLenum target,
                                   GLint level,
                                   GLint xoffset,
                                   GLint yoffset,
                                   GLsizei width,
                                   GLsizei height,
                                   GLenum format,
                                   GLsizei imageSize,
                                   const void *data)
{
}

void glCompressedTexSubImage3DNULL(GLenum target,
                                   GLint level,
                                   GLint xoffset,
                                   GLint yoffset,
                                   GLint zoffset,
                                   GLsizei width,
                                   GLsizei height,
                                   GLsizei depth,
                                   GLenum format,
                                   GLsizei imageSize,
                                   const void *data)
{
}

void glCompressedTextureSubImage1DNULL(GLuint texture,
                                       GLint level,
                                       GLint xoffset,
                                       GLsizei width,
                                       GLenum format,
                                       GLsizei imageSize,
                                       const void *data)
{
}

void glCompressedTextureSubImage2DNULL(GLuint texture,
                                       GLint level,
                                       GLint xoffset,
                                       GLint yoffset,
                                       GLsizei width,
                                       GLsizei height,
                                       GLenum format,
                                       GLsizei imageSize,
                                       const void *data)
{
}

void glCompressedTextureSubImage3DNULL(GLuint texture,
                                       GLint level,
                                       GLint xoffset,
                                       GLint yoffset,
                                       GLint zoffset,
                                       GLsizei width,
                                       GLsizei height,
                                       GLsizei depth,
                                       GLenum format,
                                       GLsizei imageSize,
                                       const void *data)
{
}

void glCopyBufferSubDataNULL(GLenum readTarget,
                             GLenum writeTarget,
                             GLintptr readOffset,
                             GLintptr writeOffset,
                             GLsizeiptr size)
{
}

void glCopyImageSubDataNULL(GLuint srcName,
                            GLenum srcTarget,
                            GLint srcLevel,
                            GLint srcX,
                            GLint srcY,
                            GLint srcZ,
                            GLuint dstName,
                            GLenum dstTarget,
                            GLint dstLevel,
                            GLint dstX,
                            GLint dstY,
                            GLint dstZ,
                            GLsizei srcWidth,
                            GLsizei srcHeight,
                            GLsizei srcDepth)
{
}

void glCopyNamedBufferSubDataNULL(GLuint readBuffer,
                                  GLuint writeBuffer,
                                  GLintptr readOffset,
                                  GLintptr writeOffset,
                                  GLsizeiptr size)
{
}

void glCopyTexImage1DNULL(GLenum target,
                          GLint level,
                          GLenum internalformat,
                          GLint x,
                          GLint y,
                          GLsizei width,
                          GLint border)
{
}

void glCopyTexImage2DNULL(GLenum target,
                          GLint level,
                          GLenum internalformat,
                          GLint x,
                          GLint y,
                          GLsizei width,
                          GLsizei height,
                          GLint border)
{
}

void glCopyTexSubImage1DNULL(GLenum target,
                             GLint level,
                             GLint xoffset,
                             GLint x,
                             GLint y,
                             GLsizei width)
{
}

void glCopyTexSubImage2DNULL(GLenum target,
                             GLint level,
                             GLint xoffset,
                             GLint yoffset,
                             GLint x,
                             GLint y,
                             GLsizei width,
                             GLsizei height)
{
}

void glCopyTexSubImage3DNULL(GLenum target,
                             GLint level,
                             GLint xoffset,
                             GLint yoffset,
                             GLint zoffset,
                             GLint x,
                             GLint y,
                             GLsizei width,
                             GLsizei height)
{
}

void glCopyTextureSubImage1DNULL(GLuint texture,
                                 GLint level,
                                 GLint xoffset,
                                 GLint x,
                                 GLint y,
                                 GLsizei width)
{
}

void glCopyTextureSubImage2DNULL(GLuint texture,
                                 GLint level,
                                 GLint xoffset,
                                 GLint yoffset,
                                 GLint x,
                                 GLint y,
                                 GLsizei width,
                                 GLsizei height)
{
}

void glCopyTextureSubImage3DNULL(GLuint texture,
                                 GLint level,
                                 GLint xoffset,
                                 GLint yoffset,
                                 GLint zoffset,
                                 GLint x,
                                 GLint y,
                                 GLsizei width,
                                 GLsizei height)
{
}

void glCoverFillPathInstancedNVNULL(GLsizei numPaths,
                                    GLenum pathNameType,
                                    const void *paths,
                                    GLuint pathBase,
                                    GLenum coverMode,
                                    GLenum transformType,
                                    const GLfloat *transformValues)
{
}

void glCoverFillPathNVNULL(GLuint path, GLenum coverMode)
{
}

void glCoverStrokePathInstancedNVNULL(GLsizei numPaths,
                                      GLenum pathNameType,
                                      const void *paths,
                                      GLuint pathBase,
                                      GLenum coverMode,
                                      GLenum transformType,
                                      const GLfloat *transformValues)
{
}

void glCoverStrokePathNVNULL(GLuint path, GLenum coverMode)
{
}

void glCoverageModulationNVNULL(GLenum components)
{
}

void glCreateBuffersNULL(GLsizei n, GLuint *buffers)
{
}

void glCreateFramebuffersNULL(GLsizei n, GLuint *framebuffers)
{
}

GLuint glCreateProgramNULL()
{
    return static_cast<GLuint>(0);
}

void glCreateProgramPipelinesNULL(GLsizei n, GLuint *pipelines)
{
}

void glCreateQueriesNULL(GLenum target, GLsizei n, GLuint *ids)
{
}

void glCreateRenderbuffersNULL(GLsizei n, GLuint *renderbuffers)
{
}

void glCreateSamplersNULL(GLsizei n, GLuint *samplers)
{
}

GLuint glCreateShaderNULL(GLenum type)
{
    return static_cast<GLuint>(0);
}

GLuint glCreateShaderProgramvNULL(GLenum type, GLsizei count, const GLchar *const *strings)
{
    return static_cast<GLuint>(0);
}

void glCreateTexturesNULL(GLenum target, GLsizei n, GLuint *textures)
{
}

void glCreateTransformFeedbacksNULL(GLsizei n, GLuint *ids)
{
}

void glCreateVertexArraysNULL(GLsizei n, GLuint *arrays)
{
}

void glCullFaceNULL(GLenum mode)
{
}

void glDebugMessageCallbackNULL(GLDEBUGPROC callback, const void *userParam)
{
}

void glDebugMessageControlNULL(GLenum source,
                               GLenum type,
                               GLenum severity,
                               GLsizei count,
                               const GLuint *ids,
                               GLboolean enabled)
{
}

void glDebugMessageInsertNULL(GLenum source,
                              GLenum type,
                              GLuint id,
                              GLenum severity,
                              GLsizei length,
                              const GLchar *buf)
{
}

void glDeleteBuffersNULL(GLsizei n, const GLuint *buffers)
{
}

void glDeleteFencesNVNULL(GLsizei n, const GLuint *fences)
{
}

void glDeleteFramebuffersNULL(GLsizei n, const GLuint *framebuffers)
{
}

void glDeletePathsNVNULL(GLuint path, GLsizei range)
{
}

void glDeleteProgramNULL(GLuint program)
{
}

void glDeleteProgramPipelinesNULL(GLsizei n, const GLuint *pipelines)
{
}

void glDeleteQueriesNULL(GLsizei n, const GLuint *ids)
{
}

void glDeleteRenderbuffersNULL(GLsizei n, const GLuint *renderbuffers)
{
}

void glDeleteSamplersNULL(GLsizei count, const GLuint *samplers)
{
}

void glDeleteShaderNULL(GLuint shader)
{
}

void glDeleteSyncNULL(GLsync sync)
{
}

void glDeleteTexturesNULL(GLsizei n, const GLuint *textures)
{
}

void glDeleteTransformFeedbacksNULL(GLsizei n, const GLuint *ids)
{
}

void glDeleteVertexArraysNULL(GLsizei n, const GLuint *arrays)
{
}

void glDepthFuncNULL(GLenum func)
{
}

void glDepthMaskNULL(GLboolean flag)
{
}

void glDepthRangeNULL(GLdouble near, GLdouble far)
{
}

void glDepthRangeArrayvNULL(GLuint first, GLsizei count, const GLdouble *v)
{
}

void glDepthRangeIndexedNULL(GLuint index, GLdouble n, GLdouble f)
{
}

void glDepthRangefNULL(GLfloat n, GLfloat f)
{
}

void glDetachShaderNULL(GLuint program, GLuint shader)
{
}

void glDisableNULL(GLenum cap)
{
}

void glDisableVertexArrayAttribNULL(GLuint vaobj, GLuint index)
{
}

void glDisableVertexAttribArrayNULL(GLuint index)
{
}

void glDisableiNULL(GLenum target, GLuint index)
{
}

void glDiscardFramebufferEXTNULL(GLenum target, GLsizei numAttachments, const GLenum *attachments)
{
}

void glDispatchComputeNULL(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z)
{
}

void glDispatchComputeIndirectNULL(GLintptr indirect)
{
}

void glDrawArraysNULL(GLenum mode, GLint first, GLsizei count)
{
}

void glDrawArraysIndirectNULL(GLenum mode, const void *indirect)
{
}

void glDrawArraysInstancedNULL(GLenum mode, GLint first, GLsizei count, GLsizei instancecount)
{
}

void glDrawArraysInstancedBaseInstanceNULL(GLenum mode,
                                           GLint first,
                                           GLsizei count,
                                           GLsizei instancecount,
                                           GLuint baseinstance)
{
}

void glDrawBufferNULL(GLenum buf)
{
}

void glDrawBuffersNULL(GLsizei n, const GLenum *bufs)
{
}

void glDrawElementsNULL(GLenum mode, GLsizei count, GLenum type, const void *indices)
{
}

void glDrawElementsBaseVertexNULL(GLenum mode,
                                  GLsizei count,
                                  GLenum type,
                                  const void *indices,
                                  GLint basevertex)
{
}

void glDrawElementsIndirectNULL(GLenum mode, GLenum type, const void *indirect)
{
}

void glDrawElementsInstancedNULL(GLenum mode,
                                 GLsizei count,
                                 GLenum type,
                                 const void *indices,
                                 GLsizei instancecount)
{
}

void glDrawElementsInstancedBaseInstanceNULL(GLenum mode,
                                             GLsizei count,
                                             GLenum type,
                                             const void *indices,
                                             GLsizei instancecount,
                                             GLuint baseinstance)
{
}

void glDrawElementsInstancedBaseVertexNULL(GLenum mode,
                                           GLsizei count,
                                           GLenum type,
                                           const void *indices,
                                           GLsizei instancecount,
                                           GLint basevertex)
{
}

void glDrawElementsInstancedBaseVertexBaseInstanceNULL(GLenum mode,
                                                       GLsizei count,
                                                       GLenum type,
                                                       const void *indices,
                                                       GLsizei instancecount,
                                                       GLint basevertex,
                                                       GLuint baseinstance)
{
}

void glDrawRangeElementsNULL(GLenum mode,
                             GLuint start,
                             GLuint end,
                             GLsizei count,
                             GLenum type,
                             const void *indices)
{
}

void glDrawRangeElementsBaseVertexNULL(GLenum mode,
                                       GLuint start,
                                       GLuint end,
                                       GLsizei count,
                                       GLenum type,
                                       const void *indices,
                                       GLint basevertex)
{
}

void glDrawTransformFeedbackNULL(GLenum mode, GLuint id)
{
}

void glDrawTransformFeedbackInstancedNULL(GLenum mode, GLuint id, GLsizei instancecount)
{
}

void glDrawTransformFeedbackStreamNULL(GLenum mode, GLuint id, GLuint stream)
{
}

void glDrawTransformFeedbackStreamInstancedNULL(GLenum mode,
                                                GLuint id,
                                                GLuint stream,
                                                GLsizei instancecount)
{
}

void glEGLImageTargetRenderbufferStorageOESNULL(GLenum target, GLeglImageOES image)
{
}

void glEGLImageTargetTexture2DOESNULL(GLenum target, GLeglImageOES image)
{
}

void glEnableNULL(GLenum cap)
{
}

void glEnableVertexArrayAttribNULL(GLuint vaobj, GLuint index)
{
}

void glEnableVertexAttribArrayNULL(GLuint index)
{
}

void glEnableiNULL(GLenum target, GLuint index)
{
}

void glEndConditionalRenderNULL()
{
}

void glEndQueryNULL(GLenum target)
{
}

void glEndQueryIndexedNULL(GLenum target, GLuint index)
{
}

void glEndTransformFeedbackNULL()
{
}

GLsync glFenceSyncNULL(GLenum condition, GLbitfield flags)
{
    return static_cast<GLsync>(0);
}

void glFinishNULL()
{
}

void glFinishFenceNVNULL(GLuint fence)
{
}

void glFlushNULL()
{
}

void glFlushMappedBufferRangeNULL(GLenum target, GLintptr offset, GLsizeiptr length)
{
}

void glFlushMappedNamedBufferRangeNULL(GLuint buffer, GLintptr offset, GLsizeiptr length)
{
}

void glFramebufferParameteriNULL(GLenum target, GLenum pname, GLint param)
{
}

void glFramebufferRenderbufferNULL(GLenum target,
                                   GLenum attachment,
                                   GLenum renderbuffertarget,
                                   GLuint renderbuffer)
{
}

void glFramebufferTextureNULL(GLenum target, GLenum attachment, GLuint texture, GLint level)
{
}

void glFramebufferTexture1DNULL(GLenum target,
                                GLenum attachment,
                                GLenum textarget,
                                GLuint texture,
                                GLint level)
{
}

void glFramebufferTexture2DNULL(GLenum target,
                                GLenum attachment,
                                GLenum textarget,
                                GLuint texture,
                                GLint level)
{
}

void glFramebufferTexture3DNULL(GLenum target,
                                GLenum attachment,
                                GLenum textarget,
                                GLuint texture,
                                GLint level,
                                GLint zoffset)
{
}

void glFramebufferTextureLayerNULL(GLenum target,
                                   GLenum attachment,
                                   GLuint texture,
                                   GLint level,
                                   GLint layer)
{
}

void glFrontFaceNULL(GLenum mode)
{
}

void glGenBuffersNULL(GLsizei n, GLuint *buffers)
{
}

void glGenFencesNVNULL(GLsizei n, GLuint *fences)
{
}

void glGenFramebuffersNULL(GLsizei n, GLuint *framebuffers)
{
}

GLuint glGenPathsNVNULL(GLsizei range)
{
    return static_cast<GLuint>(0);
}

void glGenProgramPipelinesNULL(GLsizei n, GLuint *pipelines)
{
}

void glGenQueriesNULL(GLsizei n, GLuint *ids)
{
}

void glGenRenderbuffersNULL(GLsizei n, GLuint *renderbuffers)
{
}

void glGenSamplersNULL(GLsizei count, GLuint *samplers)
{
}

void glGenTexturesNULL(GLsizei n, GLuint *textures)
{
}

void glGenTransformFeedbacksNULL(GLsizei n, GLuint *ids)
{
}

void glGenVertexArraysNULL(GLsizei n, GLuint *arrays)
{
}

void glGenerateMipmapNULL(GLenum target)
{
}

void glGenerateTextureMipmapNULL(GLuint texture)
{
}

void glGetActiveAtomicCounterBufferivNULL(GLuint program,
                                          GLuint bufferIndex,
                                          GLenum pname,
                                          GLint *params)
{
}

void glGetActiveAttribNULL(GLuint program,
                           GLuint index,
                           GLsizei bufSize,
                           GLsizei *length,
                           GLint *size,
                           GLenum *type,
                           GLchar *name)
{
}

void glGetActiveSubroutineNameNULL(GLuint program,
                                   GLenum shadertype,
                                   GLuint index,
                                   GLsizei bufsize,
                                   GLsizei *length,
                                   GLchar *name)
{
}

void glGetActiveSubroutineUniformNameNULL(GLuint program,
                                          GLenum shadertype,
                                          GLuint index,
                                          GLsizei bufsize,
                                          GLsizei *length,
                                          GLchar *name)
{
}

void glGetActiveSubroutineUniformivNULL(GLuint program,
                                        GLenum shadertype,
                                        GLuint index,
                                        GLenum pname,
                                        GLint *values)
{
}

void glGetActiveUniformNULL(GLuint program,
                            GLuint index,
                            GLsizei bufSize,
                            GLsizei *length,
                            GLint *size,
                            GLenum *type,
                            GLchar *name)
{
}

void glGetActiveUniformBlockNameNULL(GLuint program,
                                     GLuint uniformBlockIndex,
                                     GLsizei bufSize,
                                     GLsizei *length,
                                     GLchar *uniformBlockName)
{
}

void glGetActiveUniformBlockivNULL(GLuint program,
                                   GLuint uniformBlockIndex,
                                   GLenum pname,
                                   GLint *params)
{
}

void glGetActiveUniformNameNULL(GLuint program,
                                GLuint uniformIndex,
                                GLsizei bufSize,
                                GLsizei *length,
                                GLchar *uniformName)
{
}

void glGetActiveUniformsivNULL(GLuint program,
                               GLsizei uniformCount,
                               const GLuint *uniformIndices,
                               GLenum pname,
                               GLint *params)
{
}

void glGetAttachedShadersNULL(GLuint program, GLsizei maxCount, GLsizei *count, GLuint *shaders)
{
}

GLint glGetAttribLocationNULL(GLuint program, const GLchar *name)
{
    return static_cast<GLint>(0);
}

void glGetBooleani_vNULL(GLenum target, GLuint index, GLboolean *data)
{
}

void glGetBooleanvNULL(GLenum pname, GLboolean *data)
{
}

void glGetBufferParameteri64vNULL(GLenum target, GLenum pname, GLint64 *params)
{
}

void glGetBufferParameterivNULL(GLenum target, GLenum pname, GLint *params)
{
}

void glGetBufferPointervNULL(GLenum target, GLenum pname, void **params)
{
}

void glGetBufferSubDataNULL(GLenum target, GLintptr offset, GLsizeiptr size, void *data)
{
}

void glGetCompressedTexImageNULL(GLenum target, GLint level, void *img)
{
}

void glGetCompressedTextureImageNULL(GLuint texture, GLint level, GLsizei bufSize, void *pixels)
{
}

void glGetCompressedTextureSubImageNULL(GLuint texture,
                                        GLint level,
                                        GLint xoffset,
                                        GLint yoffset,
                                        GLint zoffset,
                                        GLsizei width,
                                        GLsizei height,
                                        GLsizei depth,
                                        GLsizei bufSize,
                                        void *pixels)
{
}

GLuint glGetDebugMessageLogNULL(GLuint count,
                                GLsizei bufSize,
                                GLenum *sources,
                                GLenum *types,
                                GLuint *ids,
                                GLenum *severities,
                                GLsizei *lengths,
                                GLchar *messageLog)
{
    return static_cast<GLuint>(0);
}

void glGetDoublei_vNULL(GLenum target, GLuint index, GLdouble *data)
{
}

void glGetDoublevNULL(GLenum pname, GLdouble *data)
{
}

GLenum glGetErrorNULL()
{
    return static_cast<GLenum>(0);
}

void glGetFenceivNVNULL(GLuint fence, GLenum pname, GLint *params)
{
}

void glGetFloati_vNULL(GLenum target, GLuint index, GLfloat *data)
{
}

void glGetFloatvNULL(GLenum pname, GLfloat *data)
{
}

GLint glGetFragDataIndexNULL(GLuint program, const GLchar *name)
{
    return static_cast<GLint>(0);
}

GLint glGetFragDataLocationNULL(GLuint program, const GLchar *name)
{
    return static_cast<GLint>(0);
}

void glGetFramebufferAttachmentParameterivNULL(GLenum target,
                                               GLenum attachment,
                                               GLenum pname,
                                               GLint *params)
{
}

void glGetFramebufferParameterivNULL(GLenum target, GLenum pname, GLint *params)
{
}

GLenum glGetGraphicsResetStatusNULL()
{
    return static_cast<GLenum>(0);
}

void glGetInteger64i_vNULL(GLenum target, GLuint index, GLint64 *data)
{
}

void glGetInteger64vNULL(GLenum pname, GLint64 *data)
{
}

void glGetIntegeri_vNULL(GLenum target, GLuint index, GLint *data)
{
}

void glGetIntegervNULL(GLenum pname, GLint *data)
{
}

void glGetInternalformatSampleivNVNULL(GLenum target,
                                       GLenum internalformat,
                                       GLsizei samples,
                                       GLenum pname,
                                       GLsizei bufSize,
                                       GLint *params)
{
}

void glGetInternalformati64vNULL(GLenum target,
                                 GLenum internalformat,
                                 GLenum pname,
                                 GLsizei bufSize,
                                 GLint64 *params)
{
}

void glGetInternalformativNULL(GLenum target,
                               GLenum internalformat,
                               GLenum pname,
                               GLsizei bufSize,
                               GLint *params)
{
}

void glGetMultisamplefvNULL(GLenum pname, GLuint index, GLfloat *val)
{
}

void glGetNamedBufferParameteri64vNULL(GLuint buffer, GLenum pname, GLint64 *params)
{
}

void glGetNamedBufferParameterivNULL(GLuint buffer, GLenum pname, GLint *params)
{
}

void glGetNamedBufferPointervNULL(GLuint buffer, GLenum pname, void **params)
{
}

void glGetNamedBufferSubDataNULL(GLuint buffer, GLintptr offset, GLsizeiptr size, void *data)
{
}

void glGetNamedFramebufferAttachmentParameterivNULL(GLuint framebuffer,
                                                    GLenum attachment,
                                                    GLenum pname,
                                                    GLint *params)
{
}

void glGetNamedFramebufferParameterivNULL(GLuint framebuffer, GLenum pname, GLint *param)
{
}

void glGetNamedRenderbufferParameterivNULL(GLuint renderbuffer, GLenum pname, GLint *params)
{
}

void glGetObjectLabelNULL(GLenum identifier,
                          GLuint name,
                          GLsizei bufSize,
                          GLsizei *length,
                          GLchar *label)
{
}

void glGetObjectPtrLabelNULL(const void *ptr, GLsizei bufSize, GLsizei *length, GLchar *label)
{
}

void glGetPathParameterfvNVNULL(GLuint path, GLenum pname, GLfloat *value)
{
}

void glGetPathParameterivNVNULL(GLuint path, GLenum pname, GLint *value)
{
}

void glGetPointervNULL(GLenum pname, void **params)
{
}

void glGetProgramBinaryNULL(GLuint program,
                            GLsizei bufSize,
                            GLsizei *length,
                            GLenum *binaryFormat,
                            void *binary)
{
}

void glGetProgramInfoLogNULL(GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog)
{
}

void glGetProgramInterfaceivNULL(GLuint program,
                                 GLenum programInterface,
                                 GLenum pname,
                                 GLint *params)
{
}

void glGetProgramPipelineInfoLogNULL(GLuint pipeline,
                                     GLsizei bufSize,
                                     GLsizei *length,
                                     GLchar *infoLog)
{
}

void glGetProgramPipelineivNULL(GLuint pipeline, GLenum pname, GLint *params)
{
}

GLuint glGetProgramResourceIndexNULL(GLuint program, GLenum programInterface, const GLchar *name)
{
    return static_cast<GLuint>(0);
}

GLint glGetProgramResourceLocationNULL(GLuint program, GLenum programInterface, const GLchar *name)
{
    return static_cast<GLint>(0);
}

GLint glGetProgramResourceLocationIndexNULL(GLuint program,
                                            GLenum programInterface,
                                            const GLchar *name)
{
    return static_cast<GLint>(0);
}

void glGetProgramResourceNameNULL(GLuint program,
                                  GLenum programInterface,
                                  GLuint index,
                                  GLsizei bufSize,
                                  GLsizei *length,
                                  GLchar *name)
{
}

void glGetProgramResourceivNULL(GLuint program,
                                GLenum programInterface,
                                GLuint index,
                                GLsizei propCount,
                                const GLenum *props,
                                GLsizei bufSize,
                                GLsizei *length,
                                GLint *params)
{
}

void glGetProgramStageivNULL(GLuint program, GLenum shadertype, GLenum pname, GLint *values)
{
}

void glGetProgramivNULL(GLuint program, GLenum pname, GLint *params)
{
}

void glGetQueryBufferObjecti64vNULL(GLuint id, GLuint buffer, GLenum pname, GLintptr offset)
{
}

void glGetQueryBufferObjectivNULL(GLuint id, GLuint buffer, GLenum pname, GLintptr offset)
{
}

void glGetQueryBufferObjectui64vNULL(GLuint id, GLuint buffer, GLenum pname, GLintptr offset)
{
}

void glGetQueryBufferObjectuivNULL(GLuint id, GLuint buffer, GLenum pname, GLintptr offset)
{
}

void glGetQueryIndexedivNULL(GLenum target, GLuint index, GLenum pname, GLint *params)
{
}

void glGetQueryObjecti64vNULL(GLuint id, GLenum pname, GLint64 *params)
{
}

void glGetQueryObjectivNULL(GLuint id, GLenum pname, GLint *params)
{
}

void glGetQueryObjectui64vNULL(GLuint id, GLenum pname, GLuint64 *params)
{
}

void glGetQueryObjectuivNULL(GLuint id, GLenum pname, GLuint *params)
{
}

void glGetQueryivNULL(GLenum target, GLenum pname, GLint *params)
{
}

void glGetRenderbufferParameterivNULL(GLenum target, GLenum pname, GLint *params)
{
}

void glGetSamplerParameterIivNULL(GLuint sampler, GLenum pname, GLint *params)
{
}

void glGetSamplerParameterIuivNULL(GLuint sampler, GLenum pname, GLuint *params)
{
}

void glGetSamplerParameterfvNULL(GLuint sampler, GLenum pname, GLfloat *params)
{
}

void glGetSamplerParameterivNULL(GLuint sampler, GLenum pname, GLint *params)
{
}

void glGetShaderInfoLogNULL(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog)
{
}

void glGetShaderPrecisionFormatNULL(GLenum shadertype,
                                    GLenum precisiontype,
                                    GLint *range,
                                    GLint *precision)
{
}

void glGetShaderSourceNULL(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source)
{
}

void glGetShaderivNULL(GLuint shader, GLenum pname, GLint *params)
{
}

const GLubyte *glGetStringNULL(GLenum name)
{
    return static_cast<const GLubyte *>(0);
}

const GLubyte *glGetStringiNULL(GLenum name, GLuint index)
{
    return static_cast<const GLubyte *>(0);
}

GLuint glGetSubroutineIndexNULL(GLuint program, GLenum shadertype, const GLchar *name)
{
    return static_cast<GLuint>(0);
}

GLint glGetSubroutineUniformLocationNULL(GLuint program, GLenum shadertype, const GLchar *name)
{
    return static_cast<GLint>(0);
}

void glGetSyncivNULL(GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values)
{
}

void glGetTexImageNULL(GLenum target, GLint level, GLenum format, GLenum type, void *pixels)
{
}

void glGetTexLevelParameterfvNULL(GLenum target, GLint level, GLenum pname, GLfloat *params)
{
}

void glGetTexLevelParameterivNULL(GLenum target, GLint level, GLenum pname, GLint *params)
{
}

void glGetTexParameterIivNULL(GLenum target, GLenum pname, GLint *params)
{
}

void glGetTexParameterIuivNULL(GLenum target, GLenum pname, GLuint *params)
{
}

void glGetTexParameterfvNULL(GLenum target, GLenum pname, GLfloat *params)
{
}

void glGetTexParameterivNULL(GLenum target, GLenum pname, GLint *params)
{
}

void glGetTextureImageNULL(GLuint texture,
                           GLint level,
                           GLenum format,
                           GLenum type,
                           GLsizei bufSize,
                           void *pixels)
{
}

void glGetTextureLevelParameterfvNULL(GLuint texture, GLint level, GLenum pname, GLfloat *params)
{
}

void glGetTextureLevelParameterivNULL(GLuint texture, GLint level, GLenum pname, GLint *params)
{
}

void glGetTextureParameterIivNULL(GLuint texture, GLenum pname, GLint *params)
{
}

void glGetTextureParameterIuivNULL(GLuint texture, GLenum pname, GLuint *params)
{
}

void glGetTextureParameterfvNULL(GLuint texture, GLenum pname, GLfloat *params)
{
}

void glGetTextureParameterivNULL(GLuint texture, GLenum pname, GLint *params)
{
}

void glGetTextureSubImageNULL(GLuint texture,
                              GLint level,
                              GLint xoffset,
                              GLint yoffset,
                              GLint zoffset,
                              GLsizei width,
                              GLsizei height,
                              GLsizei depth,
                              GLenum format,
                              GLenum type,
                              GLsizei bufSize,
                              void *pixels)
{
}

void glGetTransformFeedbackVaryingNULL(GLuint program,
                                       GLuint index,
                                       GLsizei bufSize,
                                       GLsizei *length,
                                       GLsizei *size,
                                       GLenum *type,
                                       GLchar *name)
{
}

void glGetTransformFeedbacki64_vNULL(GLuint xfb, GLenum pname, GLuint index, GLint64 *param)
{
}

void glGetTransformFeedbacki_vNULL(GLuint xfb, GLenum pname, GLuint index, GLint *param)
{
}

void glGetTransformFeedbackivNULL(GLuint xfb, GLenum pname, GLint *param)
{
}

GLuint glGetUniformBlockIndexNULL(GLuint program, const GLchar *uniformBlockName)
{
    return static_cast<GLuint>(0);
}

void glGetUniformIndicesNULL(GLuint program,
                             GLsizei uniformCount,
                             const GLchar *const *uniformNames,
                             GLuint *uniformIndices)
{
}

GLint glGetUniformLocationNULL(GLuint program, const GLchar *name)
{
    return static_cast<GLint>(0);
}

void glGetUniformSubroutineuivNULL(GLenum shadertype, GLint location, GLuint *params)
{
}

void glGetUniformdvNULL(GLuint program, GLint location, GLdouble *params)
{
}

void glGetUniformfvNULL(GLuint program, GLint location, GLfloat *params)
{
}

void glGetUniformivNULL(GLuint program, GLint location, GLint *params)
{
}

void glGetUniformuivNULL(GLuint program, GLint location, GLuint *params)
{
}

void glGetVertexArrayIndexed64ivNULL(GLuint vaobj, GLuint index, GLenum pname, GLint64 *param)
{
}

void glGetVertexArrayIndexedivNULL(GLuint vaobj, GLuint index, GLenum pname, GLint *param)
{
}

void glGetVertexArrayivNULL(GLuint vaobj, GLenum pname, GLint *param)
{
}

void glGetVertexAttribIivNULL(GLuint index, GLenum pname, GLint *params)
{
}

void glGetVertexAttribIuivNULL(GLuint index, GLenum pname, GLuint *params)
{
}

void glGetVertexAttribLdvNULL(GLuint index, GLenum pname, GLdouble *params)
{
}

void glGetVertexAttribPointervNULL(GLuint index, GLenum pname, void **pointer)
{
}

void glGetVertexAttribdvNULL(GLuint index, GLenum pname, GLdouble *params)
{
}

void glGetVertexAttribfvNULL(GLuint index, GLenum pname, GLfloat *params)
{
}

void glGetVertexAttribivNULL(GLuint index, GLenum pname, GLint *params)
{
}

void glGetnCompressedTexImageNULL(GLenum target, GLint lod, GLsizei bufSize, void *pixels)
{
}

void glGetnTexImageNULL(GLenum target,
                        GLint level,
                        GLenum format,
                        GLenum type,
                        GLsizei bufSize,
                        void *pixels)
{
}

void glGetnUniformdvNULL(GLuint program, GLint location, GLsizei bufSize, GLdouble *params)
{
}

void glGetnUniformfvNULL(GLuint program, GLint location, GLsizei bufSize, GLfloat *params)
{
}

void glGetnUniformivNULL(GLuint program, GLint location, GLsizei bufSize, GLint *params)
{
}

void glGetnUniformuivNULL(GLuint program, GLint location, GLsizei bufSize, GLuint *params)
{
}

void glHintNULL(GLenum target, GLenum mode)
{
}

void glInvalidateBufferDataNULL(GLuint buffer)
{
}

void glInvalidateBufferSubDataNULL(GLuint buffer, GLintptr offset, GLsizeiptr length)
{
}

void glInvalidateFramebufferNULL(GLenum target, GLsizei numAttachments, const GLenum *attachments)
{
}

void glInvalidateNamedFramebufferDataNULL(GLuint framebuffer,
                                          GLsizei numAttachments,
                                          const GLenum *attachments)
{
}

void glInvalidateNamedFramebufferSubDataNULL(GLuint framebuffer,
                                             GLsizei numAttachments,
                                             const GLenum *attachments,
                                             GLint x,
                                             GLint y,
                                             GLsizei width,
                                             GLsizei height)
{
}

void glInvalidateSubFramebufferNULL(GLenum target,
                                    GLsizei numAttachments,
                                    const GLenum *attachments,
                                    GLint x,
                                    GLint y,
                                    GLsizei width,
                                    GLsizei height)
{
}

void glInvalidateTexImageNULL(GLuint texture, GLint level)
{
}

void glInvalidateTexSubImageNULL(GLuint texture,
                                 GLint level,
                                 GLint xoffset,
                                 GLint yoffset,
                                 GLint zoffset,
                                 GLsizei width,
                                 GLsizei height,
                                 GLsizei depth)
{
}

GLboolean glIsBufferNULL(GLuint buffer)
{
    return static_cast<GLboolean>(0);
}

GLboolean glIsEnabledNULL(GLenum cap)
{
    return static_cast<GLboolean>(0);
}

GLboolean glIsEnablediNULL(GLenum target, GLuint index)
{
    return static_cast<GLboolean>(0);
}

GLboolean glIsFenceNVNULL(GLuint fence)
{
    return static_cast<GLboolean>(0);
}

GLboolean glIsFramebufferNULL(GLuint framebuffer)
{
    return static_cast<GLboolean>(0);
}

GLboolean glIsPathNVNULL(GLuint path)
{
    return static_cast<GLboolean>(0);
}

GLboolean glIsProgramNULL(GLuint program)
{
    return static_cast<GLboolean>(0);
}

GLboolean glIsProgramPipelineNULL(GLuint pipeline)
{
    return static_cast<GLboolean>(0);
}

GLboolean glIsQueryNULL(GLuint id)
{
    return static_cast<GLboolean>(0);
}

GLboolean glIsRenderbufferNULL(GLuint renderbuffer)
{
    return static_cast<GLboolean>(0);
}

GLboolean glIsSamplerNULL(GLuint sampler)
{
    return static_cast<GLboolean>(0);
}

GLboolean glIsShaderNULL(GLuint shader)
{
    return static_cast<GLboolean>(0);
}

GLboolean glIsSyncNULL(GLsync sync)
{
    return static_cast<GLboolean>(0);
}

GLboolean glIsTextureNULL(GLuint texture)
{
    return static_cast<GLboolean>(0);
}

GLboolean glIsTransformFeedbackNULL(GLuint id)
{
    return static_cast<GLboolean>(0);
}

GLboolean glIsVertexArrayNULL(GLuint array)
{
    return static_cast<GLboolean>(0);
}

void glLineWidthNULL(GLfloat width)
{
}

void glLinkProgramNULL(GLuint program)
{
}

void glLogicOpNULL(GLenum opcode)
{
}

void *glMapBufferNULL(GLenum target, GLenum access)
{
    return static_cast<void *>(0);
}

void *glMapBufferRangeNULL(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access)
{
    return static_cast<void *>(0);
}

void *glMapNamedBufferNULL(GLuint buffer, GLenum access)
{
    return static_cast<void *>(0);
}

void *glMapNamedBufferRangeNULL(GLuint buffer,
                                GLintptr offset,
                                GLsizeiptr length,
                                GLbitfield access)
{
    return static_cast<void *>(0);
}

void glMatrixLoadfEXTNULL(GLenum mode, const GLfloat *m)
{
}

void glMemoryBarrierNULL(GLbitfield barriers)
{
}

void glMemoryBarrierByRegionNULL(GLbitfield barriers)
{
}

void glMinSampleShadingNULL(GLfloat value)
{
}

void glMultiDrawArraysNULL(GLenum mode, const GLint *first, const GLsizei *count, GLsizei drawcount)
{
}

void glMultiDrawArraysIndirectNULL(GLenum mode,
                                   const void *indirect,
                                   GLsizei drawcount,
                                   GLsizei stride)
{
}

void glMultiDrawElementsNULL(GLenum mode,
                             const GLsizei *count,
                             GLenum type,
                             const void *const *indices,
                             GLsizei drawcount)
{
}

void glMultiDrawElementsBaseVertexNULL(GLenum mode,
                                       const GLsizei *count,
                                       GLenum type,
                                       const void *const *indices,
                                       GLsizei drawcount,
                                       const GLint *basevertex)
{
}

void glMultiDrawElementsIndirectNULL(GLenum mode,
                                     GLenum type,
                                     const void *indirect,
                                     GLsizei drawcount,
                                     GLsizei stride)
{
}

void glNamedBufferDataNULL(GLuint buffer, GLsizeiptr size, const void *data, GLenum usage)
{
}

void glNamedBufferStorageNULL(GLuint buffer, GLsizeiptr size, const void *data, GLbitfield flags)
{
}

void glNamedBufferSubDataNULL(GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data)
{
}

void glNamedFramebufferDrawBufferNULL(GLuint framebuffer, GLenum buf)
{
}

void glNamedFramebufferDrawBuffersNULL(GLuint framebuffer, GLsizei n, const GLenum *bufs)
{
}

void glNamedFramebufferParameteriNULL(GLuint framebuffer, GLenum pname, GLint param)
{
}

void glNamedFramebufferReadBufferNULL(GLuint framebuffer, GLenum src)
{
}

void glNamedFramebufferRenderbufferNULL(GLuint framebuffer,
                                        GLenum attachment,
                                        GLenum renderbuffertarget,
                                        GLuint renderbuffer)
{
}

void glNamedFramebufferTextureNULL(GLuint framebuffer,
                                   GLenum attachment,
                                   GLuint texture,
                                   GLint level)
{
}

void glNamedFramebufferTextureLayerNULL(GLuint framebuffer,
                                        GLenum attachment,
                                        GLuint texture,
                                        GLint level,
                                        GLint layer)
{
}

void glNamedRenderbufferStorageNULL(GLuint renderbuffer,
                                    GLenum internalformat,
                                    GLsizei width,
                                    GLsizei height)
{
}

void glNamedRenderbufferStorageMultisampleNULL(GLuint renderbuffer,
                                               GLsizei samples,
                                               GLenum internalformat,
                                               GLsizei width,
                                               GLsizei height)
{
}

void glObjectLabelNULL(GLenum identifier, GLuint name, GLsizei length, const GLchar *label)
{
}

void glObjectPtrLabelNULL(const void *ptr, GLsizei length, const GLchar *label)
{
}

void glPatchParameterfvNULL(GLenum pname, const GLfloat *values)
{
}

void glPatchParameteriNULL(GLenum pname, GLint value)
{
}

void glPathCommandsNVNULL(GLuint path,
                          GLsizei numCommands,
                          const GLubyte *commands,
                          GLsizei numCoords,
                          GLenum coordType,
                          const void *coords)
{
}

void glPathParameterfNVNULL(GLuint path, GLenum pname, GLfloat value)
{
}

void glPathParameteriNVNULL(GLuint path, GLenum pname, GLint value)
{
}

void glPathStencilFuncNVNULL(GLenum func, GLint ref, GLuint mask)
{
}

void glPauseTransformFeedbackNULL()
{
}

void glPixelStorefNULL(GLenum pname, GLfloat param)
{
}

void glPixelStoreiNULL(GLenum pname, GLint param)
{
}

void glPointParameterfNULL(GLenum pname, GLfloat param)
{
}

void glPointParameterfvNULL(GLenum pname, const GLfloat *params)
{
}

void glPointParameteriNULL(GLenum pname, GLint param)
{
}

void glPointParameterivNULL(GLenum pname, const GLint *params)
{
}

void glPointSizeNULL(GLfloat size)
{
}

void glPolygonModeNULL(GLenum face, GLenum mode)
{
}

void glPolygonOffsetNULL(GLfloat factor, GLfloat units)
{
}

void glPopDebugGroupNULL()
{
}

void glPrimitiveBoundingBoxNULL(GLfloat minX,
                                GLfloat minY,
                                GLfloat minZ,
                                GLfloat minW,
                                GLfloat maxX,
                                GLfloat maxY,
                                GLfloat maxZ,
                                GLfloat maxW)
{
}

void glPrimitiveRestartIndexNULL(GLuint index)
{
}

void glProgramBinaryNULL(GLuint program, GLenum binaryFormat, const void *binary, GLsizei length)
{
}

void glProgramParameteriNULL(GLuint program, GLenum pname, GLint value)
{
}

void glProgramPathFragmentInputGenNVNULL(GLuint program,
                                         GLint location,
                                         GLenum genMode,
                                         GLint components,
                                         const GLfloat *coeffs)
{
}

void glProgramUniform1dNULL(GLuint program, GLint location, GLdouble v0)
{
}

void glProgramUniform1dvNULL(GLuint program, GLint location, GLsizei count, const GLdouble *value)
{
}

void glProgramUniform1fNULL(GLuint program, GLint location, GLfloat v0)
{
}

void glProgramUniform1fvNULL(GLuint program, GLint location, GLsizei count, const GLfloat *value)
{
}

void glProgramUniform1iNULL(GLuint program, GLint location, GLint v0)
{
}

void glProgramUniform1ivNULL(GLuint program, GLint location, GLsizei count, const GLint *value)
{
}

void glProgramUniform1uiNULL(GLuint program, GLint location, GLuint v0)
{
}

void glProgramUniform1uivNULL(GLuint program, GLint location, GLsizei count, const GLuint *value)
{
}

void glProgramUniform2dNULL(GLuint program, GLint location, GLdouble v0, GLdouble v1)
{
}

void glProgramUniform2dvNULL(GLuint program, GLint location, GLsizei count, const GLdouble *value)
{
}

void glProgramUniform2fNULL(GLuint program, GLint location, GLfloat v0, GLfloat v1)
{
}

void glProgramUniform2fvNULL(GLuint program, GLint location, GLsizei count, const GLfloat *value)
{
}

void glProgramUniform2iNULL(GLuint program, GLint location, GLint v0, GLint v1)
{
}

void glProgramUniform2ivNULL(GLuint program, GLint location, GLsizei count, const GLint *value)
{
}

void glProgramUniform2uiNULL(GLuint program, GLint location, GLuint v0, GLuint v1)
{
}

void glProgramUniform2uivNULL(GLuint program, GLint location, GLsizei count, const GLuint *value)
{
}

void glProgramUniform3dNULL(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2)
{
}

void glProgramUniform3dvNULL(GLuint program, GLint location, GLsizei count, const GLdouble *value)
{
}

void glProgramUniform3fNULL(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2)
{
}

void glProgramUniform3fvNULL(GLuint program, GLint location, GLsizei count, const GLfloat *value)
{
}

void glProgramUniform3iNULL(GLuint program, GLint location, GLint v0, GLint v1, GLint v2)
{
}

void glProgramUniform3ivNULL(GLuint program, GLint location, GLsizei count, const GLint *value)
{
}

void glProgramUniform3uiNULL(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2)
{
}

void glProgramUniform3uivNULL(GLuint program, GLint location, GLsizei count, const GLuint *value)
{
}

void glProgramUniform4dNULL(GLuint program,
                            GLint location,
                            GLdouble v0,
                            GLdouble v1,
                            GLdouble v2,
                            GLdouble v3)
{
}

void glProgramUniform4dvNULL(GLuint program, GLint location, GLsizei count, const GLdouble *value)
{
}

void glProgramUniform4fNULL(GLuint program,
                            GLint location,
                            GLfloat v0,
                            GLfloat v1,
                            GLfloat v2,
                            GLfloat v3)
{
}

void glProgramUniform4fvNULL(GLuint program, GLint location, GLsizei count, const GLfloat *value)
{
}

void glProgramUniform4iNULL(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3)
{
}

void glProgramUniform4ivNULL(GLuint program, GLint location, GLsizei count, const GLint *value)
{
}

void glProgramUniform4uiNULL(GLuint program,
                             GLint location,
                             GLuint v0,
                             GLuint v1,
                             GLuint v2,
                             GLuint v3)
{
}

void glProgramUniform4uivNULL(GLuint program, GLint location, GLsizei count, const GLuint *value)
{
}

void glProgramUniformMatrix2dvNULL(GLuint program,
                                   GLint location,
                                   GLsizei count,
                                   GLboolean transpose,
                                   const GLdouble *value)
{
}

void glProgramUniformMatrix2fvNULL(GLuint program,
                                   GLint location,
                                   GLsizei count,
                                   GLboolean transpose,
                                   const GLfloat *value)
{
}

void glProgramUniformMatrix2x3dvNULL(GLuint program,
                                     GLint location,
                                     GLsizei count,
                                     GLboolean transpose,
                                     const GLdouble *value)
{
}

void glProgramUniformMatrix2x3fvNULL(GLuint program,
                                     GLint location,
                                     GLsizei count,
                                     GLboolean transpose,
                                     const GLfloat *value)
{
}

void glProgramUniformMatrix2x4dvNULL(GLuint program,
                                     GLint location,
                                     GLsizei count,
                                     GLboolean transpose,
                                     const GLdouble *value)
{
}

void glProgramUniformMatrix2x4fvNULL(GLuint program,
                                     GLint location,
                                     GLsizei count,
                                     GLboolean transpose,
                                     const GLfloat *value)
{
}

void glProgramUniformMatrix3dvNULL(GLuint program,
                                   GLint location,
                                   GLsizei count,
                                   GLboolean transpose,
                                   const GLdouble *value)
{
}

void glProgramUniformMatrix3fvNULL(GLuint program,
                                   GLint location,
                                   GLsizei count,
                                   GLboolean transpose,
                                   const GLfloat *value)
{
}

void glProgramUniformMatrix3x2dvNULL(GLuint program,
                                     GLint location,
                                     GLsizei count,
                                     GLboolean transpose,
                                     const GLdouble *value)
{
}

void glProgramUniformMatrix3x2fvNULL(GLuint program,
                                     GLint location,
                                     GLsizei count,
                                     GLboolean transpose,
                                     const GLfloat *value)
{
}

void glProgramUniformMatrix3x4dvNULL(GLuint program,
                                     GLint location,
                                     GLsizei count,
                                     GLboolean transpose,
                                     const GLdouble *value)
{
}

void glProgramUniformMatrix3x4fvNULL(GLuint program,
                                     GLint location,
                                     GLsizei count,
                                     GLboolean transpose,
                                     const GLfloat *value)
{
}

void glProgramUniformMatrix4dvNULL(GLuint program,
                                   GLint location,
                                   GLsizei count,
                                   GLboolean transpose,
                                   const GLdouble *value)
{
}

void glProgramUniformMatrix4fvNULL(GLuint program,
                                   GLint location,
                                   GLsizei count,
                                   GLboolean transpose,
                                   const GLfloat *value)
{
}

void glProgramUniformMatrix4x2dvNULL(GLuint program,
                                     GLint location,
                                     GLsizei count,
                                     GLboolean transpose,
                                     const GLdouble *value)
{
}

void glProgramUniformMatrix4x2fvNULL(GLuint program,
                                     GLint location,
                                     GLsizei count,
                                     GLboolean transpose,
                                     const GLfloat *value)
{
}

void glProgramUniformMatrix4x3dvNULL(GLuint program,
                                     GLint location,
                                     GLsizei count,
                                     GLboolean transpose,
                                     const GLdouble *value)
{
}

void glProgramUniformMatrix4x3fvNULL(GLuint program,
                                     GLint location,
                                     GLsizei count,
                                     GLboolean transpose,
                                     const GLfloat *value)
{
}

void glProvokingVertexNULL(GLenum mode)
{
}

void glPushDebugGroupNULL(GLenum source, GLuint id, GLsizei length, const GLchar *message)
{
}

void glQueryCounterNULL(GLuint id, GLenum target)
{
}

void glReadBufferNULL(GLenum src)
{
}

void glReadPixelsNULL(GLint x,
                      GLint y,
                      GLsizei width,
                      GLsizei height,
                      GLenum format,
                      GLenum type,
                      void *pixels)
{
}

void glReadnPixelsNULL(GLint x,
                       GLint y,
                       GLsizei width,
                       GLsizei height,
                       GLenum format,
                       GLenum type,
                       GLsizei bufSize,
                       void *data)
{
}

void glReleaseShaderCompilerNULL()
{
}

void glRenderbufferStorageNULL(GLenum target, GLenum internalformat, GLsizei width, GLsizei height)
{
}

void glRenderbufferStorageMultisampleNULL(GLenum target,
                                          GLsizei samples,
                                          GLenum internalformat,
                                          GLsizei width,
                                          GLsizei height)
{
}

void glResumeTransformFeedbackNULL()
{
}

void glSampleCoverageNULL(GLfloat value, GLboolean invert)
{
}

void glSampleMaskiNULL(GLuint maskNumber, GLbitfield mask)
{
}

void glSamplerParameterIivNULL(GLuint sampler, GLenum pname, const GLint *param)
{
}

void glSamplerParameterIuivNULL(GLuint sampler, GLenum pname, const GLuint *param)
{
}

void glSamplerParameterfNULL(GLuint sampler, GLenum pname, GLfloat param)
{
}

void glSamplerParameterfvNULL(GLuint sampler, GLenum pname, const GLfloat *param)
{
}

void glSamplerParameteriNULL(GLuint sampler, GLenum pname, GLint param)
{
}

void glSamplerParameterivNULL(GLuint sampler, GLenum pname, const GLint *param)
{
}

void glScissorNULL(GLint x, GLint y, GLsizei width, GLsizei height)
{
}

void glScissorArrayvNULL(GLuint first, GLsizei count, const GLint *v)
{
}

void glScissorIndexedNULL(GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height)
{
}

void glScissorIndexedvNULL(GLuint index, const GLint *v)
{
}

void glSetFenceNVNULL(GLuint fence, GLenum condition)
{
}

void glShaderBinaryNULL(GLsizei count,
                        const GLuint *shaders,
                        GLenum binaryformat,
                        const void *binary,
                        GLsizei length)
{
}

void glShaderSourceNULL(GLuint shader,
                        GLsizei count,
                        const GLchar *const *string,
                        const GLint *length)
{
}

void glShaderStorageBlockBindingNULL(GLuint program,
                                     GLuint storageBlockIndex,
                                     GLuint storageBlockBinding)
{
}

void glStencilFillPathInstancedNVNULL(GLsizei numPaths,
                                      GLenum pathNameType,
                                      const void *paths,
                                      GLuint pathBase,
                                      GLenum fillMode,
                                      GLuint mask,
                                      GLenum transformType,
                                      const GLfloat *transformValues)
{
}

void glStencilFillPathNVNULL(GLuint path, GLenum fillMode, GLuint mask)
{
}

void glStencilFuncNULL(GLenum func, GLint ref, GLuint mask)
{
}

void glStencilFuncSeparateNULL(GLenum face, GLenum func, GLint ref, GLuint mask)
{
}

void glStencilMaskNULL(GLuint mask)
{
}

void glStencilMaskSeparateNULL(GLenum face, GLuint mask)
{
}

void glStencilOpNULL(GLenum fail, GLenum zfail, GLenum zpass)
{
}

void glStencilOpSeparateNULL(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass)
{
}

void glStencilStrokePathInstancedNVNULL(GLsizei numPaths,
                                        GLenum pathNameType,
                                        const void *paths,
                                        GLuint pathBase,
                                        GLint reference,
                                        GLuint mask,
                                        GLenum transformType,
                                        const GLfloat *transformValues)
{
}

void glStencilStrokePathNVNULL(GLuint path, GLint reference, GLuint mask)
{
}

void glStencilThenCoverFillPathInstancedNVNULL(GLsizei numPaths,
                                               GLenum pathNameType,
                                               const void *paths,
                                               GLuint pathBase,
                                               GLenum fillMode,
                                               GLuint mask,
                                               GLenum coverMode,
                                               GLenum transformType,
                                               const GLfloat *transformValues)
{
}

void glStencilThenCoverFillPathNVNULL(GLuint path, GLenum fillMode, GLuint mask, GLenum coverMode)
{
}

void glStencilThenCoverStrokePathInstancedNVNULL(GLsizei numPaths,
                                                 GLenum pathNameType,
                                                 const void *paths,
                                                 GLuint pathBase,
                                                 GLint reference,
                                                 GLuint mask,
                                                 GLenum coverMode,
                                                 GLenum transformType,
                                                 const GLfloat *transformValues)
{
}

void glStencilThenCoverStrokePathNVNULL(GLuint path, GLint reference, GLuint mask, GLenum coverMode)
{
}

GLboolean glTestFenceNVNULL(GLuint fence)
{
    return static_cast<GLboolean>(0);
}

void glTexBufferNULL(GLenum target, GLenum internalformat, GLuint buffer)
{
}

void glTexBufferRangeNULL(GLenum target,
                          GLenum internalformat,
                          GLuint buffer,
                          GLintptr offset,
                          GLsizeiptr size)
{
}

void glTexImage1DNULL(GLenum target,
                      GLint level,
                      GLint internalformat,
                      GLsizei width,
                      GLint border,
                      GLenum format,
                      GLenum type,
                      const void *pixels)
{
}

void glTexImage2DNULL(GLenum target,
                      GLint level,
                      GLint internalformat,
                      GLsizei width,
                      GLsizei height,
                      GLint border,
                      GLenum format,
                      GLenum type,
                      const void *pixels)
{
}

void glTexImage2DMultisampleNULL(GLenum target,
                                 GLsizei samples,
                                 GLenum internalformat,
                                 GLsizei width,
                                 GLsizei height,
                                 GLboolean fixedsamplelocations)
{
}

void glTexImage3DNULL(GLenum target,
                      GLint level,
                      GLint internalformat,
                      GLsizei width,
                      GLsizei height,
                      GLsizei depth,
                      GLint border,
                      GLenum format,
                      GLenum type,
                      const void *pixels)
{
}

void glTexImage3DMultisampleNULL(GLenum target,
                                 GLsizei samples,
                                 GLenum internalformat,
                                 GLsizei width,
                                 GLsizei height,
                                 GLsizei depth,
                                 GLboolean fixedsamplelocations)
{
}

void glTexParameterIivNULL(GLenum target, GLenum pname, const GLint *params)
{
}

void glTexParameterIuivNULL(GLenum target, GLenum pname, const GLuint *params)
{
}

void glTexParameterfNULL(GLenum target, GLenum pname, GLfloat param)
{
}

void glTexParameterfvNULL(GLenum target, GLenum pname, const GLfloat *params)
{
}

void glTexParameteriNULL(GLenum target, GLenum pname, GLint param)
{
}

void glTexParameterivNULL(GLenum target, GLenum pname, const GLint *params)
{
}

void glTexStorage1DNULL(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width)
{
}

void glTexStorage2DNULL(GLenum target,
                        GLsizei levels,
                        GLenum internalformat,
                        GLsizei width,
                        GLsizei height)
{
}

void glTexStorage2DMultisampleNULL(GLenum target,
                                   GLsizei samples,
                                   GLenum internalformat,
                                   GLsizei width,
                                   GLsizei height,
                                   GLboolean fixedsamplelocations)
{
}

void glTexStorage3DNULL(GLenum target,
                        GLsizei levels,
                        GLenum internalformat,
                        GLsizei width,
                        GLsizei height,
                        GLsizei depth)
{
}

void glTexStorage3DMultisampleNULL(GLenum target,
                                   GLsizei samples,
                                   GLenum internalformat,
                                   GLsizei width,
                                   GLsizei height,
                                   GLsizei depth,
                                   GLboolean fixedsamplelocations)
{
}

void glTexSubImage1DNULL(GLenum target,
                         GLint level,
                         GLint xoffset,
                         GLsizei width,
                         GLenum format,
                         GLenum type,
                         const void *pixels)
{
}

void glTexSubImage2DNULL(GLenum target,
                         GLint level,
                         GLint xoffset,
                         GLint yoffset,
                         GLsizei width,
                         GLsizei height,
                         GLenum format,
                         GLenum type,
                         const void *pixels)
{
}

void glTexSubImage3DNULL(GLenum target,
                         GLint level,
                         GLint xoffset,
                         GLint yoffset,
                         GLint zoffset,
                         GLsizei width,
                         GLsizei height,
                         GLsizei depth,
                         GLenum format,
                         GLenum type,
                         const void *pixels)
{
}

void glTextureBarrierNULL()
{
}

void glTextureBufferNULL(GLuint texture, GLenum internalformat, GLuint buffer)
{
}

void glTextureBufferRangeNULL(GLuint texture,
                              GLenum internalformat,
                              GLuint buffer,
                              GLintptr offset,
                              GLsizeiptr size)
{
}

void glTextureParameterIivNULL(GLuint texture, GLenum pname, const GLint *params)
{
}

void glTextureParameterIuivNULL(GLuint texture, GLenum pname, const GLuint *params)
{
}

void glTextureParameterfNULL(GLuint texture, GLenum pname, GLfloat param)
{
}

void glTextureParameterfvNULL(GLuint texture, GLenum pname, const GLfloat *param)
{
}

void glTextureParameteriNULL(GLuint texture, GLenum pname, GLint param)
{
}

void glTextureParameterivNULL(GLuint texture, GLenum pname, const GLint *param)
{
}

void glTextureStorage1DNULL(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width)
{
}

void glTextureStorage2DNULL(GLuint texture,
                            GLsizei levels,
                            GLenum internalformat,
                            GLsizei width,
                            GLsizei height)
{
}

void glTextureStorage2DMultisampleNULL(GLuint texture,
                                       GLsizei samples,
                                       GLenum internalformat,
                                       GLsizei width,
                                       GLsizei height,
                                       GLboolean fixedsamplelocations)
{
}

void glTextureStorage3DNULL(GLuint texture,
                            GLsizei levels,
                            GLenum internalformat,
                            GLsizei width,
                            GLsizei height,
                            GLsizei depth)
{
}

void glTextureStorage3DMultisampleNULL(GLuint texture,
                                       GLsizei samples,
                                       GLenum internalformat,
                                       GLsizei width,
                                       GLsizei height,
                                       GLsizei depth,
                                       GLboolean fixedsamplelocations)
{
}

void glTextureSubImage1DNULL(GLuint texture,
                             GLint level,
                             GLint xoffset,
                             GLsizei width,
                             GLenum format,
                             GLenum type,
                             const void *pixels)
{
}

void glTextureSubImage2DNULL(GLuint texture,
                             GLint level,
                             GLint xoffset,
                             GLint yoffset,
                             GLsizei width,
                             GLsizei height,
                             GLenum format,
                             GLenum type,
                             const void *pixels)
{
}

void glTextureSubImage3DNULL(GLuint texture,
                             GLint level,
                             GLint xoffset,
                             GLint yoffset,
                             GLint zoffset,
                             GLsizei width,
                             GLsizei height,
                             GLsizei depth,
                             GLenum format,
                             GLenum type,
                             const void *pixels)
{
}

void glTextureViewNULL(GLuint texture,
                       GLenum target,
                       GLuint origtexture,
                       GLenum internalformat,
                       GLuint minlevel,
                       GLuint numlevels,
                       GLuint minlayer,
                       GLuint numlayers)
{
}

void glTransformFeedbackBufferBaseNULL(GLuint xfb, GLuint index, GLuint buffer)
{
}

void glTransformFeedbackBufferRangeNULL(GLuint xfb,
                                        GLuint index,
                                        GLuint buffer,
                                        GLintptr offset,
                                        GLsizeiptr size)
{
}

void glTransformFeedbackVaryingsNULL(GLuint program,
                                     GLsizei count,
                                     const GLchar *const *varyings,
                                     GLenum bufferMode)
{
}

void glUniform1dNULL(GLint location, GLdouble x)
{
}

void glUniform1dvNULL(GLint location, GLsizei count, const GLdouble *value)
{
}

void glUniform1fNULL(GLint location, GLfloat v0)
{
}

void glUniform1fvNULL(GLint location, GLsizei count, const GLfloat *value)
{
}

void glUniform1iNULL(GLint location, GLint v0)
{
}

void glUniform1ivNULL(GLint location, GLsizei count, const GLint *value)
{
}

void glUniform1uiNULL(GLint location, GLuint v0)
{
}

void glUniform1uivNULL(GLint location, GLsizei count, const GLuint *value)
{
}

void glUniform2dNULL(GLint location, GLdouble x, GLdouble y)
{
}

void glUniform2dvNULL(GLint location, GLsizei count, const GLdouble *value)
{
}

void glUniform2fNULL(GLint location, GLfloat v0, GLfloat v1)
{
}

void glUniform2fvNULL(GLint location, GLsizei count, const GLfloat *value)
{
}

void glUniform2iNULL(GLint location, GLint v0, GLint v1)
{
}

void glUniform2ivNULL(GLint location, GLsizei count, const GLint *value)
{
}

void glUniform2uiNULL(GLint location, GLuint v0, GLuint v1)
{
}

void glUniform2uivNULL(GLint location, GLsizei count, const GLuint *value)
{
}

void glUniform3dNULL(GLint location, GLdouble x, GLdouble y, GLdouble z)
{
}

void glUniform3dvNULL(GLint location, GLsizei count, const GLdouble *value)
{
}

void glUniform3fNULL(GLint location, GLfloat v0, GLfloat v1, GLfloat v2)
{
}

void glUniform3fvNULL(GLint location, GLsizei count, const GLfloat *value)
{
}

void glUniform3iNULL(GLint location, GLint v0, GLint v1, GLint v2)
{
}

void glUniform3ivNULL(GLint location, GLsizei count, const GLint *value)
{
}

void glUniform3uiNULL(GLint location, GLuint v0, GLuint v1, GLuint v2)
{
}

void glUniform3uivNULL(GLint location, GLsizei count, const GLuint *value)
{
}

void glUniform4dNULL(GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
{
}

void glUniform4dvNULL(GLint location, GLsizei count, const GLdouble *value)
{
}

void glUniform4fNULL(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3)
{
}

void glUniform4fvNULL(GLint location, GLsizei count, const GLfloat *value)
{
}

void glUniform4iNULL(GLint location, GLint v0, GLint v1, GLint v2, GLint v3)
{
}

void glUniform4ivNULL(GLint location, GLsizei count, const GLint *value)
{
}

void glUniform4uiNULL(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3)
{
}

void glUniform4uivNULL(GLint location, GLsizei count, const GLuint *value)
{
}

void glUniformBlockBindingNULL(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding)
{
}

void glUniformMatrix2dvNULL(GLint location,
                            GLsizei count,
                            GLboolean transpose,
                            const GLdouble *value)
{
}

void glUniformMatrix2fvNULL(GLint location,
                            GLsizei count,
                            GLboolean transpose,
                            const GLfloat *value)
{
}

void glUniformMatrix2x3dvNULL(GLint location,
                              GLsizei count,
                              GLboolean transpose,
                              const GLdouble *value)
{
}

void glUniformMatrix2x3fvNULL(GLint location,
                              GLsizei count,
                              GLboolean transpose,
                              const GLfloat *value)
{
}

void glUniformMatrix2x4dvNULL(GLint location,
                              GLsizei count,
                              GLboolean transpose,
                              const GLdouble *value)
{
}

void glUniformMatrix2x4fvNULL(GLint location,
                              GLsizei count,
                              GLboolean transpose,
                              const GLfloat *value)
{
}

void glUniformMatrix3dvNULL(GLint location,
                            GLsizei count,
                            GLboolean transpose,
                            const GLdouble *value)
{
}

void glUniformMatrix3fvNULL(GLint location,
                            GLsizei count,
                            GLboolean transpose,
                            const GLfloat *value)
{
}

void glUniformMatrix3x2dvNULL(GLint location,
                              GLsizei count,
                              GLboolean transpose,
                              const GLdouble *value)
{
}

void glUniformMatrix3x2fvNULL(GLint location,
                              GLsizei count,
                              GLboolean transpose,
                              const GLfloat *value)
{
}

void glUniformMatrix3x4dvNULL(GLint location,
                              GLsizei count,
                              GLboolean transpose,
                              const GLdouble *value)
{
}

void glUniformMatrix3x4fvNULL(GLint location,
                              GLsizei count,
                              GLboolean transpose,
                              const GLfloat *value)
{
}

void glUniformMatrix4dvNULL(GLint location,
                            GLsizei count,
                            GLboolean transpose,
                            const GLdouble *value)
{
}

void glUniformMatrix4fvNULL(GLint location,
                            GLsizei count,
                            GLboolean transpose,
                            const GLfloat *value)
{
}

void glUniformMatrix4x2dvNULL(GLint location,
                              GLsizei count,
                              GLboolean transpose,
                              const GLdouble *value)
{
}

void glUniformMatrix4x2fvNULL(GLint location,
                              GLsizei count,
                              GLboolean transpose,
                              const GLfloat *value)
{
}

void glUniformMatrix4x3dvNULL(GLint location,
                              GLsizei count,
                              GLboolean transpose,
                              const GLdouble *value)
{
}

void glUniformMatrix4x3fvNULL(GLint location,
                              GLsizei count,
                              GLboolean transpose,
                              const GLfloat *value)
{
}

void glUniformSubroutinesuivNULL(GLenum shadertype, GLsizei count, const GLuint *indices)
{
}

GLboolean glUnmapBufferNULL(GLenum target)
{
    return static_cast<GLboolean>(0);
}

GLboolean glUnmapNamedBufferNULL(GLuint buffer)
{
    return static_cast<GLboolean>(0);
}

void glUseProgramNULL(GLuint program)
{
}

void glUseProgramStagesNULL(GLuint pipeline, GLbitfield stages, GLuint program)
{
}

void glValidateProgramNULL(GLuint program)
{
}

void glValidateProgramPipelineNULL(GLuint pipeline)
{
}

void glVertexArrayAttribBindingNULL(GLuint vaobj, GLuint attribindex, GLuint bindingindex)
{
}

void glVertexArrayAttribFormatNULL(GLuint vaobj,
                                   GLuint attribindex,
                                   GLint size,
                                   GLenum type,
                                   GLboolean normalized,
                                   GLuint relativeoffset)
{
}

void glVertexArrayAttribIFormatNULL(GLuint vaobj,
                                    GLuint attribindex,
                                    GLint size,
                                    GLenum type,
                                    GLuint relativeoffset)
{
}

void glVertexArrayAttribLFormatNULL(GLuint vaobj,
                                    GLuint attribindex,
                                    GLint size,
                                    GLenum type,
                                    GLuint relativeoffset)
{
}

void glVertexArrayBindingDivisorNULL(GLuint vaobj, GLuint bindingindex, GLuint divisor)
{
}

void glVertexArrayElementBufferNULL(GLuint vaobj, GLuint buffer)
{
}

void glVertexArrayVertexBufferNULL(GLuint vaobj,
                                   GLuint bindingindex,
                                   GLuint buffer,
                                   GLintptr offset,
                                   GLsizei stride)
{
}

void glVertexArrayVertexBuffersNULL(GLuint vaobj,
                                    GLuint first,
                                    GLsizei count,
                                    const GLuint *buffers,
                                    const GLintptr *offsets,
                                    const GLsizei *strides)
{
}

void glVertexAttrib1dNULL(GLuint index, GLdouble x)
{
}

void glVertexAttrib1dvNULL(GLuint index, const GLdouble *v)
{
}

void glVertexAttrib1fNULL(GLuint index, GLfloat x)
{
}

void glVertexAttrib1fvNULL(GLuint index, const GLfloat *v)
{
}

void glVertexAttrib1sNULL(GLuint index, GLshort x)
{
}

void glVertexAttrib1svNULL(GLuint index, const GLshort *v)
{
}

void glVertexAttrib2dNULL(GLuint index, GLdouble x, GLdouble y)
{
}

void glVertexAttrib2dvNULL(GLuint index, const GLdouble *v)
{
}

void glVertexAttrib2fNULL(GLuint index, GLfloat x, GLfloat y)
{
}

void glVertexAttrib2fvNULL(GLuint index, const GLfloat *v)
{
}

void glVertexAttrib2sNULL(GLuint index, GLshort x, GLshort y)
{
}

void glVertexAttrib2svNULL(GLuint index, const GLshort *v)
{
}

void glVertexAttrib3dNULL(GLuint index, GLdouble x, GLdouble y, GLdouble z)
{
}

void glVertexAttrib3dvNULL(GLuint index, const GLdouble *v)
{
}

void glVertexAttrib3fNULL(GLuint index, GLfloat x, GLfloat y, GLfloat z)
{
}

void glVertexAttrib3fvNULL(GLuint index, const GLfloat *v)
{
}

void glVertexAttrib3sNULL(GLuint index, GLshort x, GLshort y, GLshort z)
{
}

void glVertexAttrib3svNULL(GLuint index, const GLshort *v)
{
}

void glVertexAttrib4NbvNULL(GLuint index, const GLbyte *v)
{
}

void glVertexAttrib4NivNULL(GLuint index, const GLint *v)
{
}

void glVertexAttrib4NsvNULL(GLuint index, const GLshort *v)
{
}

void glVertexAttrib4NubNULL(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w)
{
}

void glVertexAttrib4NubvNULL(GLuint index, const GLubyte *v)
{
}

void glVertexAttrib4NuivNULL(GLuint index, const GLuint *v)
{
}

void glVertexAttrib4NusvNULL(GLuint index, const GLushort *v)
{
}

void glVertexAttrib4bvNULL(GLuint index, const GLbyte *v)
{
}

void glVertexAttrib4dNULL(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
{
}

void glVertexAttrib4dvNULL(GLuint index, const GLdouble *v)
{
}

void glVertexAttrib4fNULL(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
{
}

void glVertexAttrib4fvNULL(GLuint index, const GLfloat *v)
{
}

void glVertexAttrib4ivNULL(GLuint index, const GLint *v)
{
}

void glVertexAttrib4sNULL(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w)
{
}

void glVertexAttrib4svNULL(GLuint index, const GLshort *v)
{
}

void glVertexAttrib4ubvNULL(GLuint index, const GLubyte *v)
{
}

void glVertexAttrib4uivNULL(GLuint index, const GLuint *v)
{
}

void glVertexAttrib4usvNULL(GLuint index, const GLushort *v)
{
}

void glVertexAttribBindingNULL(GLuint attribindex, GLuint bindingindex)
{
}

void glVertexAttribDivisorNULL(GLuint index, GLuint divisor)
{
}

void glVertexAttribFormatNULL(GLuint attribindex,
                              GLint size,
                              GLenum type,
                              GLboolean normalized,
                              GLuint relativeoffset)
{
}

void glVertexAttribI1iNULL(GLuint index, GLint x)
{
}

void glVertexAttribI1ivNULL(GLuint index, const GLint *v)
{
}

void glVertexAttribI1uiNULL(GLuint index, GLuint x)
{
}

void glVertexAttribI1uivNULL(GLuint index, const GLuint *v)
{
}

void glVertexAttribI2iNULL(GLuint index, GLint x, GLint y)
{
}

void glVertexAttribI2ivNULL(GLuint index, const GLint *v)
{
}

void glVertexAttribI2uiNULL(GLuint index, GLuint x, GLuint y)
{
}

void glVertexAttribI2uivNULL(GLuint index, const GLuint *v)
{
}

void glVertexAttribI3iNULL(GLuint index, GLint x, GLint y, GLint z)
{
}

void glVertexAttribI3ivNULL(GLuint index, const GLint *v)
{
}

void glVertexAttribI3uiNULL(GLuint index, GLuint x, GLuint y, GLuint z)
{
}

void glVertexAttribI3uivNULL(GLuint index, const GLuint *v)
{
}

void glVertexAttribI4bvNULL(GLuint index, const GLbyte *v)
{
}

void glVertexAttribI4iNULL(GLuint index, GLint x, GLint y, GLint z, GLint w)
{
}

void glVertexAttribI4ivNULL(GLuint index, const GLint *v)
{
}

void glVertexAttribI4svNULL(GLuint index, const GLshort *v)
{
}

void glVertexAttribI4ubvNULL(GLuint index, const GLubyte *v)
{
}

void glVertexAttribI4uiNULL(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w)
{
}

void glVertexAttribI4uivNULL(GLuint index, const GLuint *v)
{
}

void glVertexAttribI4usvNULL(GLuint index, const GLushort *v)
{
}

void glVertexAttribIFormatNULL(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset)
{
}

void glVertexAttribIPointerNULL(GLuint index,
                                GLint size,
                                GLenum type,
                                GLsizei stride,
                                const void *pointer)
{
}

void glVertexAttribL1dNULL(GLuint index, GLdouble x)
{
}

void glVertexAttribL1dvNULL(GLuint index, const GLdouble *v)
{
}

void glVertexAttribL2dNULL(GLuint index, GLdouble x, GLdouble y)
{
}

void glVertexAttribL2dvNULL(GLuint index, const GLdouble *v)
{
}

void glVertexAttribL3dNULL(GLuint index, GLdouble x, GLdouble y, GLdouble z)
{
}

void glVertexAttribL3dvNULL(GLuint index, const GLdouble *v)
{
}

void glVertexAttribL4dNULL(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
{
}

void glVertexAttribL4dvNULL(GLuint index, const GLdouble *v)
{
}

void glVertexAttribLFormatNULL(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset)
{
}

void glVertexAttribLPointerNULL(GLuint index,
                                GLint size,
                                GLenum type,
                                GLsizei stride,
                                const void *pointer)
{
}

void glVertexAttribP1uiNULL(GLuint index, GLenum type, GLboolean normalized, GLuint value)
{
}

void glVertexAttribP1uivNULL(GLuint index, GLenum type, GLboolean normalized, const GLuint *value)
{
}

void glVertexAttribP2uiNULL(GLuint index, GLenum type, GLboolean normalized, GLuint value)
{
}

void glVertexAttribP2uivNULL(GLuint index, GLenum type, GLboolean normalized, const GLuint *value)
{
}

void glVertexAttribP3uiNULL(GLuint index, GLenum type, GLboolean normalized, GLuint value)
{
}

void glVertexAttribP3uivNULL(GLuint index, GLenum type, GLboolean normalized, const GLuint *value)
{
}

void glVertexAttribP4uiNULL(GLuint index, GLenum type, GLboolean normalized, GLuint value)
{
}

void glVertexAttribP4uivNULL(GLuint index, GLenum type, GLboolean normalized, const GLuint *value)
{
}

void glVertexAttribPointerNULL(GLuint index,
                               GLint size,
                               GLenum type,
                               GLboolean normalized,
                               GLsizei stride,
                               const void *pointer)
{
}

void glVertexBindingDivisorNULL(GLuint bindingindex, GLuint divisor)
{
}

void glViewportNULL(GLint x, GLint y, GLsizei width, GLsizei height)
{
}

void glViewportArrayvNULL(GLuint first, GLsizei count, const GLfloat *v)
{
}

void glViewportIndexedfNULL(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h)
{
}

void glViewportIndexedfvNULL(GLuint index, const GLfloat *v)
{
}

void glWaitSyncNULL(GLsync sync, GLbitfield flags, GLuint64 timeout)
{
}
}  // namespace rx
