// GENERATED FILE - DO NOT EDIT.
// Generated by generate_entry_points.py using data from gl.xml and wgl.xml.
//
// Copyright 2020 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// validationGL1_autogen.h:
//   Validation functions for the OpenGL 1.0 entry points.

#ifndef LIBANGLE_VALIDATION_GL1_AUTOGEN_H_
#define LIBANGLE_VALIDATION_GL1_AUTOGEN_H_

#include "common/PackedEnums.h"

namespace gl
{
class Context;

bool ValidateAccum(const Context *context, const GLenum op, const GLfloat value);
bool ValidateBegin(const Context *context, const GLenum mode);
bool ValidateBitmap(const Context *context,
                    const GLsizei width,
                    const GLsizei height,
                    const GLfloat xorig,
                    const GLfloat yorig,
                    const GLfloat xmove,
                    const GLfloat ymove,
                    const GLubyte *bitmap);
bool ValidateCallList(const Context *context, const GLuint list);
bool ValidateCallLists(const Context *context,
                       const GLsizei n,
                       const GLenum type,
                       const void *lists);
bool ValidateClearAccum(const Context *context,
                        const GLfloat red,
                        const GLfloat green,
                        const GLfloat blue,
                        const GLfloat alpha);
bool ValidateClearDepth(const Context *context, const GLdouble depth);
bool ValidateClearIndex(const Context *context, const GLfloat c);
bool ValidateClipPlane(const Context *context, const GLenum plane, const GLdouble *equation);
bool ValidateColor3b(const Context *context,
                     const GLbyte red,
                     const GLbyte green,
                     const GLbyte blue);
bool ValidateColor3bv(const Context *context, const GLbyte *v);
bool ValidateColor3d(const Context *context,
                     const GLdouble red,
                     const GLdouble green,
                     const GLdouble blue);
bool ValidateColor3dv(const Context *context, const GLdouble *v);
bool ValidateColor3f(const Context *context,
                     const GLfloat red,
                     const GLfloat green,
                     const GLfloat blue);
bool ValidateColor3fv(const Context *context, const GLfloat *v);
bool ValidateColor3i(const Context *context, const GLint red, const GLint green, const GLint blue);
bool ValidateColor3iv(const Context *context, const GLint *v);
bool ValidateColor3s(const Context *context,
                     const GLshort red,
                     const GLshort green,
                     const GLshort blue);
bool ValidateColor3sv(const Context *context, const GLshort *v);
bool ValidateColor3ub(const Context *context,
                      const GLubyte red,
                      const GLubyte green,
                      const GLubyte blue);
bool ValidateColor3ubv(const Context *context, const GLubyte *v);
bool ValidateColor3ui(const Context *context,
                      const GLuint red,
                      const GLuint green,
                      const GLuint blue);
bool ValidateColor3uiv(const Context *context, const GLuint *v);
bool ValidateColor3us(const Context *context,
                      const GLushort red,
                      const GLushort green,
                      const GLushort blue);
bool ValidateColor3usv(const Context *context, const GLushort *v);
bool ValidateColor4b(const Context *context,
                     const GLbyte red,
                     const GLbyte green,
                     const GLbyte blue,
                     const GLbyte alpha);
bool ValidateColor4bv(const Context *context, const GLbyte *v);
bool ValidateColor4d(const Context *context,
                     const GLdouble red,
                     const GLdouble green,
                     const GLdouble blue,
                     const GLdouble alpha);
bool ValidateColor4dv(const Context *context, const GLdouble *v);
bool ValidateColor4fv(const Context *context, const GLfloat *v);
bool ValidateColor4i(const Context *context,
                     const GLint red,
                     const GLint green,
                     const GLint blue,
                     const GLint alpha);
bool ValidateColor4iv(const Context *context, const GLint *v);
bool ValidateColor4s(const Context *context,
                     const GLshort red,
                     const GLshort green,
                     const GLshort blue,
                     const GLshort alpha);
bool ValidateColor4sv(const Context *context, const GLshort *v);
bool ValidateColor4ubv(const Context *context, const GLubyte *v);
bool ValidateColor4ui(const Context *context,
                      const GLuint red,
                      const GLuint green,
                      const GLuint blue,
                      const GLuint alpha);
bool ValidateColor4uiv(const Context *context, const GLuint *v);
bool ValidateColor4us(const Context *context,
                      const GLushort red,
                      const GLushort green,
                      const GLushort blue,
                      const GLushort alpha);
bool ValidateColor4usv(const Context *context, const GLushort *v);
bool ValidateColorMaterial(const Context *context, const GLenum face, const GLenum mode);
bool ValidateCopyPixels(const Context *context,
                        const GLint x,
                        const GLint y,
                        const GLsizei width,
                        const GLsizei height,
                        const GLenum type);
bool ValidateDeleteLists(const Context *context, const GLuint list, const GLsizei range);
bool ValidateDepthRange(const Context *context, const GLdouble n, const GLdouble f);
bool ValidateDrawBuffer(const Context *context, const GLenum buf);
bool ValidateDrawPixels(const Context *context,
                        const GLsizei width,
                        const GLsizei height,
                        const GLenum format,
                        const GLenum type,
                        const void *pixels);
bool ValidateEdgeFlag(const Context *context, const GLboolean flag);
bool ValidateEdgeFlagv(const Context *context, const GLboolean *flag);
bool ValidateEnd(const Context *context);
bool ValidateEndList(const Context *context);
bool ValidateEvalCoord1d(const Context *context, const GLdouble u);
bool ValidateEvalCoord1dv(const Context *context, const GLdouble *u);
bool ValidateEvalCoord1f(const Context *context, const GLfloat u);
bool ValidateEvalCoord1fv(const Context *context, const GLfloat *u);
bool ValidateEvalCoord2d(const Context *context, const GLdouble u, const GLdouble v);
bool ValidateEvalCoord2dv(const Context *context, const GLdouble *u);
bool ValidateEvalCoord2f(const Context *context, const GLfloat u, const GLfloat v);
bool ValidateEvalCoord2fv(const Context *context, const GLfloat *u);
bool ValidateEvalMesh1(const Context *context, const GLenum mode, const GLint i1, const GLint i2);
bool ValidateEvalMesh2(const Context *context,
                       const GLenum mode,
                       const GLint i1,
                       const GLint i2,
                       const GLint j1,
                       const GLint j2);
bool ValidateEvalPoint1(const Context *context, const GLint i);
bool ValidateEvalPoint2(const Context *context, const GLint i, const GLint j);
bool ValidateFeedbackBuffer(const Context *context,
                            const GLsizei size,
                            const GLenum type,
                            const GLfloat *buffer);
bool ValidateFogi(const Context *context, const GLenum pname, const GLint param);
bool ValidateFogiv(const Context *context, const GLenum pname, const GLint *params);
bool ValidateFrustum(const Context *context,
                     const GLdouble left,
                     const GLdouble right,
                     const GLdouble bottom,
                     const GLdouble top,
                     const GLdouble zNear,
                     const GLdouble zFar);
bool ValidateGenLists(const Context *context, const GLsizei range);
bool ValidateGetClipPlane(const Context *context, const GLenum plane, const GLdouble *equation);
bool ValidateGetDoublev(const Context *context, const GLenum pname, const GLdouble *data);
bool ValidateGetLightiv(const Context *context,
                        const GLenum light,
                        const GLenum pname,
                        const GLint *params);
bool ValidateGetMapdv(const Context *context,
                      const GLenum target,
                      const GLenum query,
                      const GLdouble *v);
bool ValidateGetMapfv(const Context *context,
                      const GLenum target,
                      const GLenum query,
                      const GLfloat *v);
bool ValidateGetMapiv(const Context *context,
                      const GLenum target,
                      const GLenum query,
                      const GLint *v);
bool ValidateGetMaterialiv(const Context *context,
                           const GLenum face,
                           const GLenum pname,
                           const GLint *params);
bool ValidateGetPixelMapfv(const Context *context, const GLenum map, const GLfloat *values);
bool ValidateGetPixelMapuiv(const Context *context, const GLenum map, const GLuint *values);
bool ValidateGetPixelMapusv(const Context *context, const GLenum map, const GLushort *values);
bool ValidateGetPolygonStipple(const Context *context, const GLubyte *mask);
bool ValidateGetTexGendv(const Context *context,
                         const GLenum coord,
                         const GLenum pname,
                         const GLdouble *params);
bool ValidateGetTexGenfv(const Context *context,
                         const GLenum coord,
                         const GLenum pname,
                         const GLfloat *params);
bool ValidateGetTexGeniv(const Context *context,
                         const GLenum coord,
                         const GLenum pname,
                         const GLint *params);
bool ValidateGetTexImage(const Context *context,
                         const TextureTarget targetPacked,
                         const GLint level,
                         const GLenum format,
                         const GLenum type,
                         const void *pixels);
bool ValidateIndexMask(const Context *context, const GLuint mask);
bool ValidateIndexd(const Context *context, const GLdouble c);
bool ValidateIndexdv(const Context *context, const GLdouble *c);
bool ValidateIndexf(const Context *context, const GLfloat c);
bool ValidateIndexfv(const Context *context, const GLfloat *c);
bool ValidateIndexi(const Context *context, const GLint c);
bool ValidateIndexiv(const Context *context, const GLint *c);
bool ValidateIndexs(const Context *context, const GLshort c);
bool ValidateIndexsv(const Context *context, const GLshort *c);
bool ValidateInitNames(const Context *context);
bool ValidateIsList(const Context *context, const GLuint list);
bool ValidateLightModeli(const Context *context, const GLenum pname, const GLint param);
bool ValidateLightModeliv(const Context *context, const GLenum pname, const GLint *params);
bool ValidateLighti(const Context *context,
                    const GLenum light,
                    const GLenum pname,
                    const GLint param);
bool ValidateLightiv(const Context *context,
                     const GLenum light,
                     const GLenum pname,
                     const GLint *params);
bool ValidateLineStipple(const Context *context, const GLint factor, const GLushort pattern);
bool ValidateListBase(const Context *context, const GLuint base);
bool ValidateLoadMatrixd(const Context *context, const GLdouble *m);
bool ValidateLoadName(const Context *context, const GLuint name);
bool ValidateMap1d(const Context *context,
                   const GLenum target,
                   const GLdouble u1,
                   const GLdouble u2,
                   const GLint stride,
                   const GLint order,
                   const GLdouble *points);
bool ValidateMap1f(const Context *context,
                   const GLenum target,
                   const GLfloat u1,
                   const GLfloat u2,
                   const GLint stride,
                   const GLint order,
                   const GLfloat *points);
bool ValidateMap2d(const Context *context,
                   const GLenum target,
                   const GLdouble u1,
                   const GLdouble u2,
                   const GLint ustride,
                   const GLint uorder,
                   const GLdouble v1,
                   const GLdouble v2,
                   const GLint vstride,
                   const GLint vorder,
                   const GLdouble *points);
bool ValidateMap2f(const Context *context,
                   const GLenum target,
                   const GLfloat u1,
                   const GLfloat u2,
                   const GLint ustride,
                   const GLint uorder,
                   const GLfloat v1,
                   const GLfloat v2,
                   const GLint vstride,
                   const GLint vorder,
                   const GLfloat *points);
bool ValidateMapGrid1d(const Context *context,
                       const GLint un,
                       const GLdouble u1,
                       const GLdouble u2);
bool ValidateMapGrid1f(const Context *context, const GLint un, const GLfloat u1, const GLfloat u2);
bool ValidateMapGrid2d(const Context *context,
                       const GLint un,
                       const GLdouble u1,
                       const GLdouble u2,
                       const GLint vn,
                       const GLdouble v1,
                       const GLdouble v2);
bool ValidateMapGrid2f(const Context *context,
                       const GLint un,
                       const GLfloat u1,
                       const GLfloat u2,
                       const GLint vn,
                       const GLfloat v1,
                       const GLfloat v2);
bool ValidateMateriali(const Context *context,
                       const GLenum face,
                       const GLenum pname,
                       const GLint param);
bool ValidateMaterialiv(const Context *context,
                        const GLenum face,
                        const GLenum pname,
                        const GLint *params);
bool ValidateMultMatrixd(const Context *context, const GLdouble *m);
bool ValidateNewList(const Context *context, const GLuint list, const GLenum mode);
bool ValidateNormal3b(const Context *context, const GLbyte nx, const GLbyte ny, const GLbyte nz);
bool ValidateNormal3bv(const Context *context, const GLbyte *v);
bool ValidateNormal3d(const Context *context,
                      const GLdouble nx,
                      const GLdouble ny,
                      const GLdouble nz);
bool ValidateNormal3dv(const Context *context, const GLdouble *v);
bool ValidateNormal3fv(const Context *context, const GLfloat *v);
bool ValidateNormal3i(const Context *context, const GLint nx, const GLint ny, const GLint nz);
bool ValidateNormal3iv(const Context *context, const GLint *v);
bool ValidateNormal3s(const Context *context, const GLshort nx, const GLshort ny, const GLshort nz);
bool ValidateNormal3sv(const Context *context, const GLshort *v);
bool ValidateOrtho(const Context *context,
                   const GLdouble left,
                   const GLdouble right,
                   const GLdouble bottom,
                   const GLdouble top,
                   const GLdouble zNear,
                   const GLdouble zFar);
bool ValidatePassThrough(const Context *context, const GLfloat token);
bool ValidatePixelMapfv(const Context *context,
                        const GLenum map,
                        const GLsizei mapsize,
                        const GLfloat *values);
bool ValidatePixelMapuiv(const Context *context,
                         const GLenum map,
                         const GLsizei mapsize,
                         const GLuint *values);
bool ValidatePixelMapusv(const Context *context,
                         const GLenum map,
                         const GLsizei mapsize,
                         const GLushort *values);
bool ValidatePixelStoref(const Context *context, const GLenum pname, const GLfloat param);
bool ValidatePixelTransferf(const Context *context, const GLenum pname, const GLfloat param);
bool ValidatePixelTransferi(const Context *context, const GLenum pname, const GLint param);
bool ValidatePixelZoom(const Context *context, const GLfloat xfactor, const GLfloat yfactor);
bool ValidatePolygonMode(const Context *context, const GLenum face, const GLenum mode);
bool ValidatePolygonStipple(const Context *context, const GLubyte *mask);
bool ValidatePopAttrib(const Context *context);
bool ValidatePopName(const Context *context);
bool ValidatePushAttrib(const Context *context, const GLbitfield mask);
bool ValidatePushName(const Context *context, const GLuint name);
bool ValidateRasterPos2d(const Context *context, const GLdouble x, const GLdouble y);
bool ValidateRasterPos2dv(const Context *context, const GLdouble *v);
bool ValidateRasterPos2f(const Context *context, const GLfloat x, const GLfloat y);
bool ValidateRasterPos2fv(const Context *context, const GLfloat *v);
bool ValidateRasterPos2i(const Context *context, const GLint x, const GLint y);
bool ValidateRasterPos2iv(const Context *context, const GLint *v);
bool ValidateRasterPos2s(const Context *context, const GLshort x, const GLshort y);
bool ValidateRasterPos2sv(const Context *context, const GLshort *v);
bool ValidateRasterPos3d(const Context *context,
                         const GLdouble x,
                         const GLdouble y,
                         const GLdouble z);
bool ValidateRasterPos3dv(const Context *context, const GLdouble *v);
bool ValidateRasterPos3f(const Context *context, const GLfloat x, const GLfloat y, const GLfloat z);
bool ValidateRasterPos3fv(const Context *context, const GLfloat *v);
bool ValidateRasterPos3i(const Context *context, const GLint x, const GLint y, const GLint z);
bool ValidateRasterPos3iv(const Context *context, const GLint *v);
bool ValidateRasterPos3s(const Context *context, const GLshort x, const GLshort y, const GLshort z);
bool ValidateRasterPos3sv(const Context *context, const GLshort *v);
bool ValidateRasterPos4d(const Context *context,
                         const GLdouble x,
                         const GLdouble y,
                         const GLdouble z,
                         const GLdouble w);
bool ValidateRasterPos4dv(const Context *context, const GLdouble *v);
bool ValidateRasterPos4f(const Context *context,
                         const GLfloat x,
                         const GLfloat y,
                         const GLfloat z,
                         const GLfloat w);
bool ValidateRasterPos4fv(const Context *context, const GLfloat *v);
bool ValidateRasterPos4i(const Context *context,
                         const GLint x,
                         const GLint y,
                         const GLint z,
                         const GLint w);
bool ValidateRasterPos4iv(const Context *context, const GLint *v);
bool ValidateRasterPos4s(const Context *context,
                         const GLshort x,
                         const GLshort y,
                         const GLshort z,
                         const GLshort w);
bool ValidateRasterPos4sv(const Context *context, const GLshort *v);
bool ValidateRectd(const Context *context,
                   const GLdouble x1,
                   const GLdouble y1,
                   const GLdouble x2,
                   const GLdouble y2);
bool ValidateRectdv(const Context *context, const GLdouble *v1, const GLdouble *v2);
bool ValidateRectf(const Context *context,
                   const GLfloat x1,
                   const GLfloat y1,
                   const GLfloat x2,
                   const GLfloat y2);
bool ValidateRectfv(const Context *context, const GLfloat *v1, const GLfloat *v2);
bool ValidateRecti(const Context *context,
                   const GLint x1,
                   const GLint y1,
                   const GLint x2,
                   const GLint y2);
bool ValidateRectiv(const Context *context, const GLint *v1, const GLint *v2);
bool ValidateRects(const Context *context,
                   const GLshort x1,
                   const GLshort y1,
                   const GLshort x2,
                   const GLshort y2);
bool ValidateRectsv(const Context *context, const GLshort *v1, const GLshort *v2);
bool ValidateRenderMode(const Context *context, const GLenum mode);
bool ValidateRotated(const Context *context,
                     const GLdouble angle,
                     const GLdouble x,
                     const GLdouble y,
                     const GLdouble z);
bool ValidateScaled(const Context *context, const GLdouble x, const GLdouble y, const GLdouble z);
bool ValidateSelectBuffer(const Context *context, const GLsizei size, const GLuint *buffer);
bool ValidateTexCoord1d(const Context *context, const GLdouble s);
bool ValidateTexCoord1dv(const Context *context, const GLdouble *v);
bool ValidateTexCoord1f(const Context *context, const GLfloat s);
bool ValidateTexCoord1fv(const Context *context, const GLfloat *v);
bool ValidateTexCoord1i(const Context *context, const GLint s);
bool ValidateTexCoord1iv(const Context *context, const GLint *v);
bool ValidateTexCoord1s(const Context *context, const GLshort s);
bool ValidateTexCoord1sv(const Context *context, const GLshort *v);
bool ValidateTexCoord2d(const Context *context, const GLdouble s, const GLdouble t);
bool ValidateTexCoord2dv(const Context *context, const GLdouble *v);
bool ValidateTexCoord2f(const Context *context, const GLfloat s, const GLfloat t);
bool ValidateTexCoord2fv(const Context *context, const GLfloat *v);
bool ValidateTexCoord2i(const Context *context, const GLint s, const GLint t);
bool ValidateTexCoord2iv(const Context *context, const GLint *v);
bool ValidateTexCoord2s(const Context *context, const GLshort s, const GLshort t);
bool ValidateTexCoord2sv(const Context *context, const GLshort *v);
bool ValidateTexCoord3d(const Context *context,
                        const GLdouble s,
                        const GLdouble t,
                        const GLdouble r);
bool ValidateTexCoord3dv(const Context *context, const GLdouble *v);
bool ValidateTexCoord3f(const Context *context, const GLfloat s, const GLfloat t, const GLfloat r);
bool ValidateTexCoord3fv(const Context *context, const GLfloat *v);
bool ValidateTexCoord3i(const Context *context, const GLint s, const GLint t, const GLint r);
bool ValidateTexCoord3iv(const Context *context, const GLint *v);
bool ValidateTexCoord3s(const Context *context, const GLshort s, const GLshort t, const GLshort r);
bool ValidateTexCoord3sv(const Context *context, const GLshort *v);
bool ValidateTexCoord4d(const Context *context,
                        const GLdouble s,
                        const GLdouble t,
                        const GLdouble r,
                        const GLdouble q);
bool ValidateTexCoord4dv(const Context *context, const GLdouble *v);
bool ValidateTexCoord4f(const Context *context,
                        const GLfloat s,
                        const GLfloat t,
                        const GLfloat r,
                        const GLfloat q);
bool ValidateTexCoord4fv(const Context *context, const GLfloat *v);
bool ValidateTexCoord4i(const Context *context,
                        const GLint s,
                        const GLint t,
                        const GLint r,
                        const GLint q);
bool ValidateTexCoord4iv(const Context *context, const GLint *v);
bool ValidateTexCoord4s(const Context *context,
                        const GLshort s,
                        const GLshort t,
                        const GLshort r,
                        const GLshort q);
bool ValidateTexCoord4sv(const Context *context, const GLshort *v);
bool ValidateTexGend(const Context *context,
                     const GLenum coord,
                     const GLenum pname,
                     const GLdouble param);
bool ValidateTexGendv(const Context *context,
                      const GLenum coord,
                      const GLenum pname,
                      const GLdouble *params);
bool ValidateTexGenf(const Context *context,
                     const GLenum coord,
                     const GLenum pname,
                     const GLfloat param);
bool ValidateTexGenfv(const Context *context,
                      const GLenum coord,
                      const GLenum pname,
                      const GLfloat *params);
bool ValidateTexGeni(const Context *context,
                     const GLenum coord,
                     const GLenum pname,
                     const GLint param);
bool ValidateTexGeniv(const Context *context,
                      const GLenum coord,
                      const GLenum pname,
                      const GLint *params);
bool ValidateTexImage1D(const Context *context,
                        const GLenum target,
                        const GLint level,
                        const GLint internalformat,
                        const GLsizei width,
                        const GLint border,
                        const GLenum format,
                        const GLenum type,
                        const void *pixels);
bool ValidateTranslated(const Context *context,
                        const GLdouble x,
                        const GLdouble y,
                        const GLdouble z);
bool ValidateVertex2d(const Context *context, const GLdouble x, const GLdouble y);
bool ValidateVertex2dv(const Context *context, const GLdouble *v);
bool ValidateVertex2f(const Context *context, const GLfloat x, const GLfloat y);
bool ValidateVertex2fv(const Context *context, const GLfloat *v);
bool ValidateVertex2i(const Context *context, const GLint x, const GLint y);
bool ValidateVertex2iv(const Context *context, const GLint *v);
bool ValidateVertex2s(const Context *context, const GLshort x, const GLshort y);
bool ValidateVertex2sv(const Context *context, const GLshort *v);
bool ValidateVertex3d(const Context *context, const GLdouble x, const GLdouble y, const GLdouble z);
bool ValidateVertex3dv(const Context *context, const GLdouble *v);
bool ValidateVertex3f(const Context *context, const GLfloat x, const GLfloat y, const GLfloat z);
bool ValidateVertex3fv(const Context *context, const GLfloat *v);
bool ValidateVertex3i(const Context *context, const GLint x, const GLint y, const GLint z);
bool ValidateVertex3iv(const Context *context, const GLint *v);
bool ValidateVertex3s(const Context *context, const GLshort x, const GLshort y, const GLshort z);
bool ValidateVertex3sv(const Context *context, const GLshort *v);
bool ValidateVertex4d(const Context *context,
                      const GLdouble x,
                      const GLdouble y,
                      const GLdouble z,
                      const GLdouble w);
bool ValidateVertex4dv(const Context *context, const GLdouble *v);
bool ValidateVertex4f(const Context *context,
                      const GLfloat x,
                      const GLfloat y,
                      const GLfloat z,
                      const GLfloat w);
bool ValidateVertex4fv(const Context *context, const GLfloat *v);
bool ValidateVertex4i(const Context *context,
                      const GLint x,
                      const GLint y,
                      const GLint z,
                      const GLint w);
bool ValidateVertex4iv(const Context *context, const GLint *v);
bool ValidateVertex4s(const Context *context,
                      const GLshort x,
                      const GLshort y,
                      const GLshort z,
                      const GLshort w);
bool ValidateVertex4sv(const Context *context, const GLshort *v);
}  // namespace gl

#endif  // LIBANGLE_VALIDATION_GL1_AUTOGEN_H_
