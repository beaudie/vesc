// GENERATED FILE - DO NOT EDIT.
// Generated by generate_entry_points.py using data from gl.xml and gl_angle_ext.xml.
//
// Copyright 2019 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// capture_gles_3_0_autogen.h:
//   Capture functions for the OpenGL ES 3.0 entry points.

#ifndef LIBANGLE_CAPTURE_GLES_3_0_AUTOGEN_H_
#define LIBANGLE_CAPTURE_GLES_3_0_AUTOGEN_H_

#include "common/PackedEnums.h"
#include "libANGLE/FrameCapture.h"

namespace gl
{
class Context;

// Method Captures

angle::ParamBuffer CaptureBeginQuery(const Context *context,
                                     bool isCallValid,
                                     QueryType targetPacked,
                                     GLuint id);
angle::ParamBuffer CaptureBeginTransformFeedback(const Context *context,
                                                 bool isCallValid,
                                                 PrimitiveMode primitiveModePacked);
angle::ParamBuffer CaptureBindBufferBase(const Context *context,
                                         bool isCallValid,
                                         BufferBinding targetPacked,
                                         GLuint index,
                                         GLuint buffer);
angle::ParamBuffer CaptureBindBufferRange(const Context *context,
                                          bool isCallValid,
                                          BufferBinding targetPacked,
                                          GLuint index,
                                          GLuint buffer,
                                          GLintptr offset,
                                          GLsizeiptr size);
angle::ParamBuffer CaptureBindSampler(const Context *context,
                                      bool isCallValid,
                                      GLuint unit,
                                      GLuint sampler);
angle::ParamBuffer CaptureBindTransformFeedback(const Context *context,
                                                bool isCallValid,
                                                GLenum target,
                                                GLuint id);
angle::ParamBuffer CaptureBindVertexArray(const Context *context, bool isCallValid, GLuint array);
angle::ParamBuffer CaptureBlitFramebuffer(const Context *context,
                                          bool isCallValid,
                                          GLint srcX0,
                                          GLint srcY0,
                                          GLint srcX1,
                                          GLint srcY1,
                                          GLint dstX0,
                                          GLint dstY0,
                                          GLint dstX1,
                                          GLint dstY1,
                                          GLbitfield mask,
                                          GLenum filter);
angle::ParamBuffer CaptureClearBufferfi(const Context *context,
                                        bool isCallValid,
                                        GLenum buffer,
                                        GLint drawbuffer,
                                        GLfloat depth,
                                        GLint stencil);
angle::ParamBuffer CaptureClearBufferfv(const Context *context,
                                        bool isCallValid,
                                        GLenum buffer,
                                        GLint drawbuffer,
                                        const GLfloat *value);
angle::ParamBuffer CaptureClearBufferiv(const Context *context,
                                        bool isCallValid,
                                        GLenum buffer,
                                        GLint drawbuffer,
                                        const GLint *value);
angle::ParamBuffer CaptureClearBufferuiv(const Context *context,
                                         bool isCallValid,
                                         GLenum buffer,
                                         GLint drawbuffer,
                                         const GLuint *value);
angle::ParamBuffer CaptureClientWaitSync(const Context *context,
                                         bool isCallValid,
                                         GLsync sync,
                                         GLbitfield flags,
                                         GLuint64 timeout);
angle::ParamBuffer CaptureCompressedTexImage3D(const Context *context,
                                               bool isCallValid,
                                               TextureTarget targetPacked,
                                               GLint level,
                                               GLenum internalformat,
                                               GLsizei width,
                                               GLsizei height,
                                               GLsizei depth,
                                               GLint border,
                                               GLsizei imageSize,
                                               const void *data);
angle::ParamBuffer CaptureCompressedTexSubImage3D(const Context *context,
                                                  bool isCallValid,
                                                  TextureTarget targetPacked,
                                                  GLint level,
                                                  GLint xoffset,
                                                  GLint yoffset,
                                                  GLint zoffset,
                                                  GLsizei width,
                                                  GLsizei height,
                                                  GLsizei depth,
                                                  GLenum format,
                                                  GLsizei imageSize,
                                                  const void *data);
angle::ParamBuffer CaptureCopyBufferSubData(const Context *context,
                                            bool isCallValid,
                                            BufferBinding readTargetPacked,
                                            BufferBinding writeTargetPacked,
                                            GLintptr readOffset,
                                            GLintptr writeOffset,
                                            GLsizeiptr size);
angle::ParamBuffer CaptureCopyTexSubImage3D(const Context *context,
                                            bool isCallValid,
                                            TextureTarget targetPacked,
                                            GLint level,
                                            GLint xoffset,
                                            GLint yoffset,
                                            GLint zoffset,
                                            GLint x,
                                            GLint y,
                                            GLsizei width,
                                            GLsizei height);
angle::ParamBuffer CaptureDeleteQueries(const Context *context,
                                        bool isCallValid,
                                        GLsizei n,
                                        const GLuint *ids);
angle::ParamBuffer CaptureDeleteSamplers(const Context *context,
                                         bool isCallValid,
                                         GLsizei count,
                                         const GLuint *samplers);
angle::ParamBuffer CaptureDeleteSync(const Context *context, bool isCallValid, GLsync sync);
angle::ParamBuffer CaptureDeleteTransformFeedbacks(const Context *context,
                                                   bool isCallValid,
                                                   GLsizei n,
                                                   const GLuint *ids);
angle::ParamBuffer CaptureDeleteVertexArrays(const Context *context,
                                             bool isCallValid,
                                             GLsizei n,
                                             const GLuint *arrays);
angle::ParamBuffer CaptureDrawArraysInstanced(const Context *context,
                                              bool isCallValid,
                                              PrimitiveMode modePacked,
                                              GLint first,
                                              GLsizei count,
                                              GLsizei instancecount);
angle::ParamBuffer CaptureDrawBuffers(const Context *context,
                                      bool isCallValid,
                                      GLsizei n,
                                      const GLenum *bufs);
angle::ParamBuffer CaptureDrawElementsInstanced(const Context *context,
                                                bool isCallValid,
                                                PrimitiveMode modePacked,
                                                GLsizei count,
                                                DrawElementsType typePacked,
                                                const void *indices,
                                                GLsizei instancecount);
angle::ParamBuffer CaptureDrawRangeElements(const Context *context,
                                            bool isCallValid,
                                            PrimitiveMode modePacked,
                                            GLuint start,
                                            GLuint end,
                                            GLsizei count,
                                            DrawElementsType typePacked,
                                            const void *indices);
angle::ParamBuffer CaptureEndQuery(const Context *context,
                                   bool isCallValid,
                                   QueryType targetPacked);
angle::ParamBuffer CaptureEndTransformFeedback(const Context *context, bool isCallValid);
angle::ParamBuffer CaptureFenceSync(const Context *context,
                                    bool isCallValid,
                                    GLenum condition,
                                    GLbitfield flags);
angle::ParamBuffer CaptureFlushMappedBufferRange(const Context *context,
                                                 bool isCallValid,
                                                 BufferBinding targetPacked,
                                                 GLintptr offset,
                                                 GLsizeiptr length);
angle::ParamBuffer CaptureFramebufferTextureLayer(const Context *context,
                                                  bool isCallValid,
                                                  GLenum target,
                                                  GLenum attachment,
                                                  GLuint texture,
                                                  GLint level,
                                                  GLint layer);
angle::ParamBuffer CaptureGenQueries(const Context *context,
                                     bool isCallValid,
                                     GLsizei n,
                                     GLuint *ids);
angle::ParamBuffer CaptureGenSamplers(const Context *context,
                                      bool isCallValid,
                                      GLsizei count,
                                      GLuint *samplers);
angle::ParamBuffer CaptureGenTransformFeedbacks(const Context *context,
                                                bool isCallValid,
                                                GLsizei n,
                                                GLuint *ids);
angle::ParamBuffer CaptureGenVertexArrays(const Context *context,
                                          bool isCallValid,
                                          GLsizei n,
                                          GLuint *arrays);
angle::ParamBuffer CaptureGetActiveUniformBlockName(const Context *context,
                                                    bool isCallValid,
                                                    GLuint program,
                                                    GLuint uniformBlockIndex,
                                                    GLsizei bufSize,
                                                    GLsizei *length,
                                                    GLchar *uniformBlockName);
angle::ParamBuffer CaptureGetActiveUniformBlockiv(const Context *context,
                                                  bool isCallValid,
                                                  GLuint program,
                                                  GLuint uniformBlockIndex,
                                                  GLenum pname,
                                                  GLint *params);
angle::ParamBuffer CaptureGetActiveUniformsiv(const Context *context,
                                              bool isCallValid,
                                              GLuint program,
                                              GLsizei uniformCount,
                                              const GLuint *uniformIndices,
                                              GLenum pname,
                                              GLint *params);
angle::ParamBuffer CaptureGetBufferParameteri64v(const Context *context,
                                                 bool isCallValid,
                                                 BufferBinding targetPacked,
                                                 GLenum pname,
                                                 GLint64 *params);
angle::ParamBuffer CaptureGetBufferPointerv(const Context *context,
                                            bool isCallValid,
                                            BufferBinding targetPacked,
                                            GLenum pname,
                                            void **params);
angle::ParamBuffer CaptureGetFragDataLocation(const Context *context,
                                              bool isCallValid,
                                              GLuint program,
                                              const GLchar *name);
angle::ParamBuffer CaptureGetInteger64i_v(const Context *context,
                                          bool isCallValid,
                                          GLenum target,
                                          GLuint index,
                                          GLint64 *data);
angle::ParamBuffer CaptureGetInteger64v(const Context *context,
                                        bool isCallValid,
                                        GLenum pname,
                                        GLint64 *data);
angle::ParamBuffer CaptureGetIntegeri_v(const Context *context,
                                        bool isCallValid,
                                        GLenum target,
                                        GLuint index,
                                        GLint *data);
angle::ParamBuffer CaptureGetInternalformativ(const Context *context,
                                              bool isCallValid,
                                              GLenum target,
                                              GLenum internalformat,
                                              GLenum pname,
                                              GLsizei bufSize,
                                              GLint *params);
angle::ParamBuffer CaptureGetProgramBinary(const Context *context,
                                           bool isCallValid,
                                           GLuint program,
                                           GLsizei bufSize,
                                           GLsizei *length,
                                           GLenum *binaryFormat,
                                           void *binary);
angle::ParamBuffer CaptureGetQueryObjectuiv(const Context *context,
                                            bool isCallValid,
                                            GLuint id,
                                            GLenum pname,
                                            GLuint *params);
angle::ParamBuffer CaptureGetQueryiv(const Context *context,
                                     bool isCallValid,
                                     QueryType targetPacked,
                                     GLenum pname,
                                     GLint *params);
angle::ParamBuffer CaptureGetSamplerParameterfv(const Context *context,
                                                bool isCallValid,
                                                GLuint sampler,
                                                GLenum pname,
                                                GLfloat *params);
angle::ParamBuffer CaptureGetSamplerParameteriv(const Context *context,
                                                bool isCallValid,
                                                GLuint sampler,
                                                GLenum pname,
                                                GLint *params);
angle::ParamBuffer CaptureGetStringi(const Context *context,
                                     bool isCallValid,
                                     GLenum name,
                                     GLuint index);
angle::ParamBuffer CaptureGetSynciv(const Context *context,
                                    bool isCallValid,
                                    GLsync sync,
                                    GLenum pname,
                                    GLsizei bufSize,
                                    GLsizei *length,
                                    GLint *values);
angle::ParamBuffer CaptureGetTransformFeedbackVarying(const Context *context,
                                                      bool isCallValid,
                                                      GLuint program,
                                                      GLuint index,
                                                      GLsizei bufSize,
                                                      GLsizei *length,
                                                      GLsizei *size,
                                                      GLenum *type,
                                                      GLchar *name);
angle::ParamBuffer CaptureGetUniformBlockIndex(const Context *context,
                                               bool isCallValid,
                                               GLuint program,
                                               const GLchar *uniformBlockName);
angle::ParamBuffer CaptureGetUniformIndices(const Context *context,
                                            bool isCallValid,
                                            GLuint program,
                                            GLsizei uniformCount,
                                            const GLchar *const *uniformNames,
                                            GLuint *uniformIndices);
angle::ParamBuffer CaptureGetUniformuiv(const Context *context,
                                        bool isCallValid,
                                        GLuint program,
                                        GLint location,
                                        GLuint *params);
angle::ParamBuffer CaptureGetVertexAttribIiv(const Context *context,
                                             bool isCallValid,
                                             GLuint index,
                                             GLenum pname,
                                             GLint *params);
angle::ParamBuffer CaptureGetVertexAttribIuiv(const Context *context,
                                              bool isCallValid,
                                              GLuint index,
                                              GLenum pname,
                                              GLuint *params);
angle::ParamBuffer CaptureInvalidateFramebuffer(const Context *context,
                                                bool isCallValid,
                                                GLenum target,
                                                GLsizei numAttachments,
                                                const GLenum *attachments);
angle::ParamBuffer CaptureInvalidateSubFramebuffer(const Context *context,
                                                   bool isCallValid,
                                                   GLenum target,
                                                   GLsizei numAttachments,
                                                   const GLenum *attachments,
                                                   GLint x,
                                                   GLint y,
                                                   GLsizei width,
                                                   GLsizei height);
angle::ParamBuffer CaptureIsQuery(const Context *context, bool isCallValid, GLuint id);
angle::ParamBuffer CaptureIsSampler(const Context *context, bool isCallValid, GLuint sampler);
angle::ParamBuffer CaptureIsSync(const Context *context, bool isCallValid, GLsync sync);
angle::ParamBuffer CaptureIsTransformFeedback(const Context *context, bool isCallValid, GLuint id);
angle::ParamBuffer CaptureIsVertexArray(const Context *context, bool isCallValid, GLuint array);
angle::ParamBuffer CaptureMapBufferRange(const Context *context,
                                         bool isCallValid,
                                         BufferBinding targetPacked,
                                         GLintptr offset,
                                         GLsizeiptr length,
                                         GLbitfield access);
angle::ParamBuffer CapturePauseTransformFeedback(const Context *context, bool isCallValid);
angle::ParamBuffer CaptureProgramBinary(const Context *context,
                                        bool isCallValid,
                                        GLuint program,
                                        GLenum binaryFormat,
                                        const void *binary,
                                        GLsizei length);
angle::ParamBuffer CaptureProgramParameteri(const Context *context,
                                            bool isCallValid,
                                            GLuint program,
                                            GLenum pname,
                                            GLint value);
angle::ParamBuffer CaptureReadBuffer(const Context *context, bool isCallValid, GLenum src);
angle::ParamBuffer CaptureRenderbufferStorageMultisample(const Context *context,
                                                         bool isCallValid,
                                                         GLenum target,
                                                         GLsizei samples,
                                                         GLenum internalformat,
                                                         GLsizei width,
                                                         GLsizei height);
angle::ParamBuffer CaptureResumeTransformFeedback(const Context *context, bool isCallValid);
angle::ParamBuffer CaptureSamplerParameterf(const Context *context,
                                            bool isCallValid,
                                            GLuint sampler,
                                            GLenum pname,
                                            GLfloat param);
angle::ParamBuffer CaptureSamplerParameterfv(const Context *context,
                                             bool isCallValid,
                                             GLuint sampler,
                                             GLenum pname,
                                             const GLfloat *param);
angle::ParamBuffer CaptureSamplerParameteri(const Context *context,
                                            bool isCallValid,
                                            GLuint sampler,
                                            GLenum pname,
                                            GLint param);
angle::ParamBuffer CaptureSamplerParameteriv(const Context *context,
                                             bool isCallValid,
                                             GLuint sampler,
                                             GLenum pname,
                                             const GLint *param);
angle::ParamBuffer CaptureTexImage3D(const Context *context,
                                     bool isCallValid,
                                     TextureTarget targetPacked,
                                     GLint level,
                                     GLint internalformat,
                                     GLsizei width,
                                     GLsizei height,
                                     GLsizei depth,
                                     GLint border,
                                     GLenum format,
                                     GLenum type,
                                     const void *pixels);
angle::ParamBuffer CaptureTexStorage2D(const Context *context,
                                       bool isCallValid,
                                       TextureType targetPacked,
                                       GLsizei levels,
                                       GLenum internalformat,
                                       GLsizei width,
                                       GLsizei height);
angle::ParamBuffer CaptureTexStorage3D(const Context *context,
                                       bool isCallValid,
                                       TextureType targetPacked,
                                       GLsizei levels,
                                       GLenum internalformat,
                                       GLsizei width,
                                       GLsizei height,
                                       GLsizei depth);
angle::ParamBuffer CaptureTexSubImage3D(const Context *context,
                                        bool isCallValid,
                                        TextureTarget targetPacked,
                                        GLint level,
                                        GLint xoffset,
                                        GLint yoffset,
                                        GLint zoffset,
                                        GLsizei width,
                                        GLsizei height,
                                        GLsizei depth,
                                        GLenum format,
                                        GLenum type,
                                        const void *pixels);
angle::ParamBuffer CaptureTransformFeedbackVaryings(const Context *context,
                                                    bool isCallValid,
                                                    GLuint program,
                                                    GLsizei count,
                                                    const GLchar *const *varyings,
                                                    GLenum bufferMode);
angle::ParamBuffer CaptureUniform1ui(const Context *context,
                                     bool isCallValid,
                                     GLint location,
                                     GLuint v0);
angle::ParamBuffer CaptureUniform1uiv(const Context *context,
                                      bool isCallValid,
                                      GLint location,
                                      GLsizei count,
                                      const GLuint *value);
angle::ParamBuffer CaptureUniform2ui(const Context *context,
                                     bool isCallValid,
                                     GLint location,
                                     GLuint v0,
                                     GLuint v1);
angle::ParamBuffer CaptureUniform2uiv(const Context *context,
                                      bool isCallValid,
                                      GLint location,
                                      GLsizei count,
                                      const GLuint *value);
angle::ParamBuffer CaptureUniform3ui(const Context *context,
                                     bool isCallValid,
                                     GLint location,
                                     GLuint v0,
                                     GLuint v1,
                                     GLuint v2);
angle::ParamBuffer CaptureUniform3uiv(const Context *context,
                                      bool isCallValid,
                                      GLint location,
                                      GLsizei count,
                                      const GLuint *value);
angle::ParamBuffer CaptureUniform4ui(const Context *context,
                                     bool isCallValid,
                                     GLint location,
                                     GLuint v0,
                                     GLuint v1,
                                     GLuint v2,
                                     GLuint v3);
angle::ParamBuffer CaptureUniform4uiv(const Context *context,
                                      bool isCallValid,
                                      GLint location,
                                      GLsizei count,
                                      const GLuint *value);
angle::ParamBuffer CaptureUniformBlockBinding(const Context *context,
                                              bool isCallValid,
                                              GLuint program,
                                              GLuint uniformBlockIndex,
                                              GLuint uniformBlockBinding);
angle::ParamBuffer CaptureUniformMatrix2x3fv(const Context *context,
                                             bool isCallValid,
                                             GLint location,
                                             GLsizei count,
                                             GLboolean transpose,
                                             const GLfloat *value);
angle::ParamBuffer CaptureUniformMatrix2x4fv(const Context *context,
                                             bool isCallValid,
                                             GLint location,
                                             GLsizei count,
                                             GLboolean transpose,
                                             const GLfloat *value);
angle::ParamBuffer CaptureUniformMatrix3x2fv(const Context *context,
                                             bool isCallValid,
                                             GLint location,
                                             GLsizei count,
                                             GLboolean transpose,
                                             const GLfloat *value);
angle::ParamBuffer CaptureUniformMatrix3x4fv(const Context *context,
                                             bool isCallValid,
                                             GLint location,
                                             GLsizei count,
                                             GLboolean transpose,
                                             const GLfloat *value);
angle::ParamBuffer CaptureUniformMatrix4x2fv(const Context *context,
                                             bool isCallValid,
                                             GLint location,
                                             GLsizei count,
                                             GLboolean transpose,
                                             const GLfloat *value);
angle::ParamBuffer CaptureUniformMatrix4x3fv(const Context *context,
                                             bool isCallValid,
                                             GLint location,
                                             GLsizei count,
                                             GLboolean transpose,
                                             const GLfloat *value);
angle::ParamBuffer CaptureUnmapBuffer(const Context *context,
                                      bool isCallValid,
                                      BufferBinding targetPacked);
angle::ParamBuffer CaptureVertexAttribDivisor(const Context *context,
                                              bool isCallValid,
                                              GLuint index,
                                              GLuint divisor);
angle::ParamBuffer CaptureVertexAttribI4i(const Context *context,
                                          bool isCallValid,
                                          GLuint index,
                                          GLint x,
                                          GLint y,
                                          GLint z,
                                          GLint w);
angle::ParamBuffer CaptureVertexAttribI4iv(const Context *context,
                                           bool isCallValid,
                                           GLuint index,
                                           const GLint *v);
angle::ParamBuffer CaptureVertexAttribI4ui(const Context *context,
                                           bool isCallValid,
                                           GLuint index,
                                           GLuint x,
                                           GLuint y,
                                           GLuint z,
                                           GLuint w);
angle::ParamBuffer CaptureVertexAttribI4uiv(const Context *context,
                                            bool isCallValid,
                                            GLuint index,
                                            const GLuint *v);
angle::ParamBuffer CaptureVertexAttribIPointer(const Context *context,
                                               bool isCallValid,
                                               GLuint index,
                                               GLint size,
                                               VertexAttribType typePacked,
                                               GLsizei stride,
                                               const void *pointer);
angle::ParamBuffer CaptureWaitSync(const Context *context,
                                   bool isCallValid,
                                   GLsync sync,
                                   GLbitfield flags,
                                   GLuint64 timeout);

// Parameter Captures

void CaptureClearBufferfv_value(const Context *context,
                                bool isCallValid,
                                GLenum buffer,
                                GLint drawbuffer,
                                const GLfloat *value,
                                angle::ParamCapture *paramCapture);
void CaptureClearBufferiv_value(const Context *context,
                                bool isCallValid,
                                GLenum buffer,
                                GLint drawbuffer,
                                const GLint *value,
                                angle::ParamCapture *paramCapture);
void CaptureClearBufferuiv_value(const Context *context,
                                 bool isCallValid,
                                 GLenum buffer,
                                 GLint drawbuffer,
                                 const GLuint *value,
                                 angle::ParamCapture *paramCapture);
void CaptureCompressedTexImage3D_data(const Context *context,
                                      bool isCallValid,
                                      TextureTarget targetPacked,
                                      GLint level,
                                      GLenum internalformat,
                                      GLsizei width,
                                      GLsizei height,
                                      GLsizei depth,
                                      GLint border,
                                      GLsizei imageSize,
                                      const void *data,
                                      angle::ParamCapture *paramCapture);
void CaptureCompressedTexSubImage3D_data(const Context *context,
                                         bool isCallValid,
                                         TextureTarget targetPacked,
                                         GLint level,
                                         GLint xoffset,
                                         GLint yoffset,
                                         GLint zoffset,
                                         GLsizei width,
                                         GLsizei height,
                                         GLsizei depth,
                                         GLenum format,
                                         GLsizei imageSize,
                                         const void *data,
                                         angle::ParamCapture *paramCapture);
void CaptureDeleteQueries_ids(const Context *context,
                              bool isCallValid,
                              GLsizei n,
                              const GLuint *ids,
                              angle::ParamCapture *paramCapture);
void CaptureDeleteSamplers_samplers(const Context *context,
                                    bool isCallValid,
                                    GLsizei count,
                                    const GLuint *samplers,
                                    angle::ParamCapture *paramCapture);
void CaptureDeleteTransformFeedbacks_ids(const Context *context,
                                         bool isCallValid,
                                         GLsizei n,
                                         const GLuint *ids,
                                         angle::ParamCapture *paramCapture);
void CaptureDeleteVertexArrays_arrays(const Context *context,
                                      bool isCallValid,
                                      GLsizei n,
                                      const GLuint *arrays,
                                      angle::ParamCapture *paramCapture);
void CaptureDrawBuffers_bufs(const Context *context,
                             bool isCallValid,
                             GLsizei n,
                             const GLenum *bufs,
                             angle::ParamCapture *paramCapture);
void CaptureDrawElementsInstanced_indices(const Context *context,
                                          bool isCallValid,
                                          PrimitiveMode modePacked,
                                          GLsizei count,
                                          DrawElementsType typePacked,
                                          const void *indices,
                                          GLsizei instancecount,
                                          angle::ParamCapture *paramCapture);
void CaptureDrawRangeElements_indices(const Context *context,
                                      bool isCallValid,
                                      PrimitiveMode modePacked,
                                      GLuint start,
                                      GLuint end,
                                      GLsizei count,
                                      DrawElementsType typePacked,
                                      const void *indices,
                                      angle::ParamCapture *paramCapture);
void CaptureGenQueries_ids(const Context *context,
                           bool isCallValid,
                           GLsizei n,
                           GLuint *ids,
                           angle::ParamCapture *paramCapture);
void CaptureGenSamplers_samplers(const Context *context,
                                 bool isCallValid,
                                 GLsizei count,
                                 GLuint *samplers,
                                 angle::ParamCapture *paramCapture);
void CaptureGenTransformFeedbacks_ids(const Context *context,
                                      bool isCallValid,
                                      GLsizei n,
                                      GLuint *ids,
                                      angle::ParamCapture *paramCapture);
void CaptureGenVertexArrays_arrays(const Context *context,
                                   bool isCallValid,
                                   GLsizei n,
                                   GLuint *arrays,
                                   angle::ParamCapture *paramCapture);
void CaptureGetActiveUniformBlockName_length(const Context *context,
                                             bool isCallValid,
                                             GLuint program,
                                             GLuint uniformBlockIndex,
                                             GLsizei bufSize,
                                             GLsizei *length,
                                             GLchar *uniformBlockName,
                                             angle::ParamCapture *paramCapture);
void CaptureGetActiveUniformBlockName_uniformBlockName(const Context *context,
                                                       bool isCallValid,
                                                       GLuint program,
                                                       GLuint uniformBlockIndex,
                                                       GLsizei bufSize,
                                                       GLsizei *length,
                                                       GLchar *uniformBlockName,
                                                       angle::ParamCapture *paramCapture);
void CaptureGetActiveUniformBlockiv_params(const Context *context,
                                           bool isCallValid,
                                           GLuint program,
                                           GLuint uniformBlockIndex,
                                           GLenum pname,
                                           GLint *params,
                                           angle::ParamCapture *paramCapture);
void CaptureGetActiveUniformsiv_uniformIndices(const Context *context,
                                               bool isCallValid,
                                               GLuint program,
                                               GLsizei uniformCount,
                                               const GLuint *uniformIndices,
                                               GLenum pname,
                                               GLint *params,
                                               angle::ParamCapture *paramCapture);
void CaptureGetActiveUniformsiv_params(const Context *context,
                                       bool isCallValid,
                                       GLuint program,
                                       GLsizei uniformCount,
                                       const GLuint *uniformIndices,
                                       GLenum pname,
                                       GLint *params,
                                       angle::ParamCapture *paramCapture);
void CaptureGetBufferParameteri64v_params(const Context *context,
                                          bool isCallValid,
                                          BufferBinding targetPacked,
                                          GLenum pname,
                                          GLint64 *params,
                                          angle::ParamCapture *paramCapture);
void CaptureGetBufferPointerv_params(const Context *context,
                                     bool isCallValid,
                                     BufferBinding targetPacked,
                                     GLenum pname,
                                     void **params,
                                     angle::ParamCapture *paramCapture);
void CaptureGetFragDataLocation_name(const Context *context,
                                     bool isCallValid,
                                     GLuint program,
                                     const GLchar *name,
                                     angle::ParamCapture *paramCapture);
void CaptureGetInteger64i_v_data(const Context *context,
                                 bool isCallValid,
                                 GLenum target,
                                 GLuint index,
                                 GLint64 *data,
                                 angle::ParamCapture *paramCapture);
void CaptureGetInteger64v_data(const Context *context,
                               bool isCallValid,
                               GLenum pname,
                               GLint64 *data,
                               angle::ParamCapture *paramCapture);
void CaptureGetIntegeri_v_data(const Context *context,
                               bool isCallValid,
                               GLenum target,
                               GLuint index,
                               GLint *data,
                               angle::ParamCapture *paramCapture);
void CaptureGetInternalformativ_params(const Context *context,
                                       bool isCallValid,
                                       GLenum target,
                                       GLenum internalformat,
                                       GLenum pname,
                                       GLsizei bufSize,
                                       GLint *params,
                                       angle::ParamCapture *paramCapture);
void CaptureGetProgramBinary_length(const Context *context,
                                    bool isCallValid,
                                    GLuint program,
                                    GLsizei bufSize,
                                    GLsizei *length,
                                    GLenum *binaryFormat,
                                    void *binary,
                                    angle::ParamCapture *paramCapture);
void CaptureGetProgramBinary_binaryFormat(const Context *context,
                                          bool isCallValid,
                                          GLuint program,
                                          GLsizei bufSize,
                                          GLsizei *length,
                                          GLenum *binaryFormat,
                                          void *binary,
                                          angle::ParamCapture *paramCapture);
void CaptureGetProgramBinary_binary(const Context *context,
                                    bool isCallValid,
                                    GLuint program,
                                    GLsizei bufSize,
                                    GLsizei *length,
                                    GLenum *binaryFormat,
                                    void *binary,
                                    angle::ParamCapture *paramCapture);
void CaptureGetQueryObjectuiv_params(const Context *context,
                                     bool isCallValid,
                                     GLuint id,
                                     GLenum pname,
                                     GLuint *params,
                                     angle::ParamCapture *paramCapture);
void CaptureGetQueryiv_params(const Context *context,
                              bool isCallValid,
                              QueryType targetPacked,
                              GLenum pname,
                              GLint *params,
                              angle::ParamCapture *paramCapture);
void CaptureGetSamplerParameterfv_params(const Context *context,
                                         bool isCallValid,
                                         GLuint sampler,
                                         GLenum pname,
                                         GLfloat *params,
                                         angle::ParamCapture *paramCapture);
void CaptureGetSamplerParameteriv_params(const Context *context,
                                         bool isCallValid,
                                         GLuint sampler,
                                         GLenum pname,
                                         GLint *params,
                                         angle::ParamCapture *paramCapture);
void CaptureGetSynciv_length(const Context *context,
                             bool isCallValid,
                             GLsync sync,
                             GLenum pname,
                             GLsizei bufSize,
                             GLsizei *length,
                             GLint *values,
                             angle::ParamCapture *paramCapture);
void CaptureGetSynciv_values(const Context *context,
                             bool isCallValid,
                             GLsync sync,
                             GLenum pname,
                             GLsizei bufSize,
                             GLsizei *length,
                             GLint *values,
                             angle::ParamCapture *paramCapture);
void CaptureGetTransformFeedbackVarying_length(const Context *context,
                                               bool isCallValid,
                                               GLuint program,
                                               GLuint index,
                                               GLsizei bufSize,
                                               GLsizei *length,
                                               GLsizei *size,
                                               GLenum *type,
                                               GLchar *name,
                                               angle::ParamCapture *paramCapture);
void CaptureGetTransformFeedbackVarying_size(const Context *context,
                                             bool isCallValid,
                                             GLuint program,
                                             GLuint index,
                                             GLsizei bufSize,
                                             GLsizei *length,
                                             GLsizei *size,
                                             GLenum *type,
                                             GLchar *name,
                                             angle::ParamCapture *paramCapture);
void CaptureGetTransformFeedbackVarying_type(const Context *context,
                                             bool isCallValid,
                                             GLuint program,
                                             GLuint index,
                                             GLsizei bufSize,
                                             GLsizei *length,
                                             GLsizei *size,
                                             GLenum *type,
                                             GLchar *name,
                                             angle::ParamCapture *paramCapture);
void CaptureGetTransformFeedbackVarying_name(const Context *context,
                                             bool isCallValid,
                                             GLuint program,
                                             GLuint index,
                                             GLsizei bufSize,
                                             GLsizei *length,
                                             GLsizei *size,
                                             GLenum *type,
                                             GLchar *name,
                                             angle::ParamCapture *paramCapture);
void CaptureGetUniformBlockIndex_uniformBlockName(const Context *context,
                                                  bool isCallValid,
                                                  GLuint program,
                                                  const GLchar *uniformBlockName,
                                                  angle::ParamCapture *paramCapture);
void CaptureGetUniformIndices_uniformNames(const Context *context,
                                           bool isCallValid,
                                           GLuint program,
                                           GLsizei uniformCount,
                                           const GLchar *const *uniformNames,
                                           GLuint *uniformIndices,
                                           angle::ParamCapture *paramCapture);
void CaptureGetUniformIndices_uniformIndices(const Context *context,
                                             bool isCallValid,
                                             GLuint program,
                                             GLsizei uniformCount,
                                             const GLchar *const *uniformNames,
                                             GLuint *uniformIndices,
                                             angle::ParamCapture *paramCapture);
void CaptureGetUniformuiv_params(const Context *context,
                                 bool isCallValid,
                                 GLuint program,
                                 GLint location,
                                 GLuint *params,
                                 angle::ParamCapture *paramCapture);
void CaptureGetVertexAttribIiv_params(const Context *context,
                                      bool isCallValid,
                                      GLuint index,
                                      GLenum pname,
                                      GLint *params,
                                      angle::ParamCapture *paramCapture);
void CaptureGetVertexAttribIuiv_params(const Context *context,
                                       bool isCallValid,
                                       GLuint index,
                                       GLenum pname,
                                       GLuint *params,
                                       angle::ParamCapture *paramCapture);
void CaptureInvalidateFramebuffer_attachments(const Context *context,
                                              bool isCallValid,
                                              GLenum target,
                                              GLsizei numAttachments,
                                              const GLenum *attachments,
                                              angle::ParamCapture *paramCapture);
void CaptureInvalidateSubFramebuffer_attachments(const Context *context,
                                                 bool isCallValid,
                                                 GLenum target,
                                                 GLsizei numAttachments,
                                                 const GLenum *attachments,
                                                 GLint x,
                                                 GLint y,
                                                 GLsizei width,
                                                 GLsizei height,
                                                 angle::ParamCapture *paramCapture);
void CaptureProgramBinary_binary(const Context *context,
                                 bool isCallValid,
                                 GLuint program,
                                 GLenum binaryFormat,
                                 const void *binary,
                                 GLsizei length,
                                 angle::ParamCapture *paramCapture);
void CaptureSamplerParameterfv_param(const Context *context,
                                     bool isCallValid,
                                     GLuint sampler,
                                     GLenum pname,
                                     const GLfloat *param,
                                     angle::ParamCapture *paramCapture);
void CaptureSamplerParameteriv_param(const Context *context,
                                     bool isCallValid,
                                     GLuint sampler,
                                     GLenum pname,
                                     const GLint *param,
                                     angle::ParamCapture *paramCapture);
void CaptureTexImage3D_pixels(const Context *context,
                              bool isCallValid,
                              TextureTarget targetPacked,
                              GLint level,
                              GLint internalformat,
                              GLsizei width,
                              GLsizei height,
                              GLsizei depth,
                              GLint border,
                              GLenum format,
                              GLenum type,
                              const void *pixels,
                              angle::ParamCapture *paramCapture);
void CaptureTexSubImage3D_pixels(const Context *context,
                                 bool isCallValid,
                                 TextureTarget targetPacked,
                                 GLint level,
                                 GLint xoffset,
                                 GLint yoffset,
                                 GLint zoffset,
                                 GLsizei width,
                                 GLsizei height,
                                 GLsizei depth,
                                 GLenum format,
                                 GLenum type,
                                 const void *pixels,
                                 angle::ParamCapture *paramCapture);
void CaptureTransformFeedbackVaryings_varyings(const Context *context,
                                               bool isCallValid,
                                               GLuint program,
                                               GLsizei count,
                                               const GLchar *const *varyings,
                                               GLenum bufferMode,
                                               angle::ParamCapture *paramCapture);
void CaptureUniform1uiv_value(const Context *context,
                              bool isCallValid,
                              GLint location,
                              GLsizei count,
                              const GLuint *value,
                              angle::ParamCapture *paramCapture);
void CaptureUniform2uiv_value(const Context *context,
                              bool isCallValid,
                              GLint location,
                              GLsizei count,
                              const GLuint *value,
                              angle::ParamCapture *paramCapture);
void CaptureUniform3uiv_value(const Context *context,
                              bool isCallValid,
                              GLint location,
                              GLsizei count,
                              const GLuint *value,
                              angle::ParamCapture *paramCapture);
void CaptureUniform4uiv_value(const Context *context,
                              bool isCallValid,
                              GLint location,
                              GLsizei count,
                              const GLuint *value,
                              angle::ParamCapture *paramCapture);
void CaptureUniformMatrix2x3fv_value(const Context *context,
                                     bool isCallValid,
                                     GLint location,
                                     GLsizei count,
                                     GLboolean transpose,
                                     const GLfloat *value,
                                     angle::ParamCapture *paramCapture);
void CaptureUniformMatrix2x4fv_value(const Context *context,
                                     bool isCallValid,
                                     GLint location,
                                     GLsizei count,
                                     GLboolean transpose,
                                     const GLfloat *value,
                                     angle::ParamCapture *paramCapture);
void CaptureUniformMatrix3x2fv_value(const Context *context,
                                     bool isCallValid,
                                     GLint location,
                                     GLsizei count,
                                     GLboolean transpose,
                                     const GLfloat *value,
                                     angle::ParamCapture *paramCapture);
void CaptureUniformMatrix3x4fv_value(const Context *context,
                                     bool isCallValid,
                                     GLint location,
                                     GLsizei count,
                                     GLboolean transpose,
                                     const GLfloat *value,
                                     angle::ParamCapture *paramCapture);
void CaptureUniformMatrix4x2fv_value(const Context *context,
                                     bool isCallValid,
                                     GLint location,
                                     GLsizei count,
                                     GLboolean transpose,
                                     const GLfloat *value,
                                     angle::ParamCapture *paramCapture);
void CaptureUniformMatrix4x3fv_value(const Context *context,
                                     bool isCallValid,
                                     GLint location,
                                     GLsizei count,
                                     GLboolean transpose,
                                     const GLfloat *value,
                                     angle::ParamCapture *paramCapture);
void CaptureVertexAttribI4iv_v(const Context *context,
                               bool isCallValid,
                               GLuint index,
                               const GLint *v,
                               angle::ParamCapture *paramCapture);
void CaptureVertexAttribI4uiv_v(const Context *context,
                                bool isCallValid,
                                GLuint index,
                                const GLuint *v,
                                angle::ParamCapture *paramCapture);
void CaptureVertexAttribIPointer_pointer(const Context *context,
                                         bool isCallValid,
                                         GLuint index,
                                         GLint size,
                                         VertexAttribType typePacked,
                                         GLsizei stride,
                                         const void *pointer,
                                         angle::ParamCapture *paramCapture);
}  // namespace gl

#endif  // LIBANGLE_CAPTURE_GLES_3_0_AUTOGEN_H_
