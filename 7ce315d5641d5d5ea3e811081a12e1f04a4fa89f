{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "bb2da94e_f1db1e74",
        "filename": "src/libANGLE/renderer/metal/SurfaceMtl.h",
        "patchSetId": 2
      },
      "lineNbr": 114,
      "author": {
        "id": 1543187
      },
      "writtenOn": "2024-08-26T10:18:08Z",
      "side": 1,
      "message": "Why is it set to true?",
      "range": {
        "startLine": 114,
        "startChar": 9,
        "endLine": 114,
        "endChar": 33
      },
      "revId": "7ce315d5641d5d5ea3e811081a12e1f04a4fa89f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cd615809_418ed1d5",
        "filename": "src/libANGLE/renderer/metal/SurfaceMtl.h",
        "patchSetId": 2
      },
      "lineNbr": 114,
      "author": {
        "id": 1449558
      },
      "writtenOn": "2024-08-26T11:10:05Z",
      "side": 1,
      "message": "nil color texture is known to be initialized and does not need initialization.",
      "parentUuid": "bb2da94e_f1db1e74",
      "range": {
        "startLine": 114,
        "startChar": 9,
        "endLine": 114,
        "endChar": 33
      },
      "revId": "7ce315d5641d5d5ea3e811081a12e1f04a4fa89f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "812bd79a_26d57556",
        "filename": "src/libANGLE/renderer/metal/SurfaceMtl.h",
        "patchSetId": 2
      },
      "lineNbr": 114,
      "author": {
        "id": 1543187
      },
      "writtenOn": "2024-08-26T17:18:34Z",
      "side": 1,
      "message": "Do you mean\n- some Surface might not have any color texture hence don\u0027t need to initialize color texture. I think every Surface will have a color texture, be it internally created or imported externally.\n- Or newly created metal textures always have zeros as initial data? It might be true but there are cases when the color texture is imported externally, such as `IOSurfaceSurfaceMtl`. In this case, it is not guaranteed that the first use of the texture in ANGLE would have zeros data.\n\nIMO to avoid such bugs and complicated logics such as knowing what type of Surface already have initialized color texture, I think maybe just treating all textures as uninitialized. That would only cost one clear before the 1st use.",
      "parentUuid": "cd615809_418ed1d5",
      "range": {
        "startLine": 114,
        "startChar": 9,
        "endLine": 114,
        "endChar": 33
      },
      "revId": "7ce315d5641d5d5ea3e811081a12e1f04a4fa89f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "834d7f9d_3465f084",
        "filename": "src/libANGLE/renderer/metal/SurfaceMtl.mm",
        "patchSetId": 2
      },
      "lineNbr": 679,
      "author": {
        "id": 1543187
      },
      "writtenOn": "2024-08-21T20:05:34Z",
      "side": 1,
      "message": "I think this assignment should be moved to outside this code block. This block is only executed when 1st `[mMetalLayer nextDrawable]` call fails.",
      "revId": "7ce315d5641d5d5ea3e811081a12e1f04a4fa89f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f60ab053_cddef2a1",
        "filename": "src/libANGLE/renderer/metal/SurfaceMtl.mm",
        "patchSetId": 2
      },
      "lineNbr": 679,
      "author": {
        "id": 1449558
      },
      "writtenOn": "2024-08-26T09:39:30Z",
      "side": 1,
      "message": "Yep. It\u0027s just that that\u0027s not how the extension is specced..",
      "parentUuid": "834d7f9d_3465f084",
      "revId": "7ce315d5641d5d5ea3e811081a12e1f04a4fa89f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f622d226_696a95df",
        "filename": "src/libANGLE/renderer/metal/SurfaceMtl.mm",
        "patchSetId": 2
      },
      "lineNbr": 679,
      "author": {
        "id": 1543187
      },
      "writtenOn": "2024-08-26T09:52:53Z",
      "side": 1,
      "message": "Sorry, I\u0027m confused what the extension is specced.\n\nSetting `mColorTextureInitialized` \u003d false here won\u0027t have any effect in majority of the time. The code block here is meant to be executed as a fallback when there is a timeout when we try to obtain the `CAMetalLayer`\u0027s texture. I don\u0027t think it\u0027s part of any extension.",
      "parentUuid": "f60ab053_cddef2a1",
      "revId": "7ce315d5641d5d5ea3e811081a12e1f04a4fa89f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bfe41fbf_5e88af28",
        "filename": "src/libANGLE/renderer/metal/SurfaceMtl.mm",
        "patchSetId": 2
      },
      "lineNbr": 679,
      "author": {
        "id": 1543187
      },
      "writtenOn": "2024-08-26T09:54:05Z",
      "side": 1,
      "message": "I understand that the original code also set `mContentInitialized` to false in this block. I think it\u0027s also wrong.",
      "parentUuid": "f622d226_696a95df",
      "revId": "7ce315d5641d5d5ea3e811081a12e1f04a4fa89f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ceb32128_5803157b",
        "filename": "src/libANGLE/renderer/metal/SurfaceMtl.mm",
        "patchSetId": 2
      },
      "lineNbr": 679,
      "author": {
        "id": 1449558
      },
      "writtenOn": "2024-08-26T09:58:13Z",
      "side": 1,
      "message": "Yeah, the existing code is definitively broken.\nWhat I mean is that:\n\nEGL_ANGLE_robust_resource_initialization does not specify that the color, stencil or depth is cleared after swap. The tests test that, but the spec doesn\u0027t say that.",
      "parentUuid": "bfe41fbf_5e88af28",
      "revId": "7ce315d5641d5d5ea3e811081a12e1f04a4fa89f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0994ae32_ee3731f4",
        "filename": "src/libANGLE/renderer/metal/SurfaceMtl.mm",
        "patchSetId": 2
      },
      "lineNbr": 679,
      "author": {
        "id": 1543187
      },
      "writtenOn": "2024-08-26T10:11:02Z",
      "side": 1,
      "message": "Ok I thought that you originally wanted to clear every texture in the swapchain. Since the swapchain has multiple textures, one clear would have been not enough to implement robust resource init. We would have needed some ways to clear every texture in the swapchain (that\u0027s probably what the original code wanted to do)\n\nIf you just want first swap\u0027s texture to be zeroized then `mColorTextureInitialized` should be `false` by default, shouldn\u0027t it? Currently it is set to `true` in constructor. So the very first swap will contain undefined values.",
      "parentUuid": "ceb32128_5803157b",
      "revId": "7ce315d5641d5d5ea3e811081a12e1f04a4fa89f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1581246c_d1e11c50",
        "filename": "src/libANGLE/renderer/metal/SurfaceMtl.mm",
        "patchSetId": 2
      },
      "lineNbr": 679,
      "author": {
        "id": 1449558
      },
      "writtenOn": "2024-08-26T11:11:11Z",
      "side": 1,
      "message": "Setting it true is the consistent case, the rest of the code was incorrect.",
      "parentUuid": "0994ae32_ee3731f4",
      "revId": "7ce315d5641d5d5ea3e811081a12e1f04a4fa89f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}