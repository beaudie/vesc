{
  "comments": [
    {
      "key": {
        "uuid": "53dc6e70_faf8aaf5",
        "filename": "src/libANGLE/renderer/vulkan/CommandGraph.h",
        "patchSetId": 15
      },
      "lineNbr": 46,
      "author": {
        "id": 1262827
      },
      "writtenOn": "2018-05-24T20:08:03Z",
      "side": 1,
      "message": "This will automatically call beginWriteResource if it is not started writing, in that case, why not make begin a private method and only call this one all the time?\n\nIt could also be renamed \"writeResource\" simply and we wouldn\u0027t have to care if we have to append or begin at all.",
      "range": {
        "startLine": 46,
        "startChar": 10,
        "endLine": 46,
        "endChar": 29
      },
      "revId": "ec10d41a3c9f5236c61cd56a6094f8d4bb34fd00",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "226d507d_aaf430dd",
        "filename": "src/libANGLE/renderer/vulkan/CommandGraph.h",
        "patchSetId": 15
      },
      "lineNbr": 46,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-05-24T21:10:41Z",
      "side": 1,
      "message": "I don\u0027t think that gives the same behaviour. I think this is similar to our discussion in the doc. There\u0027s value in having begin vs append because otherwise we\u0027d be repeated onResourceChanged() append() in many places. Note that begin forces a new node, while append does not.",
      "parentUuid": "53dc6e70_faf8aaf5",
      "range": {
        "startLine": 46,
        "startChar": 10,
        "endLine": 46,
        "endChar": 29
      },
      "revId": "ec10d41a3c9f5236c61cd56a6094f8d4bb34fd00",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "74fb258f_7c193181",
        "filename": "src/libANGLE/renderer/vulkan/CommandGraph.h",
        "patchSetId": 15
      },
      "lineNbr": 46,
      "author": {
        "id": 1262827
      },
      "writtenOn": "2018-05-25T11:43:58Z",
      "side": 1,
      "message": "I don\u0027t see the argument for not merging them, but you seem to understand something I don\u0027t on that. It would be nice to understand why its actually needed to have one vs the other? I do understand the fact that right now, one starts a new node forcibly while the other one tries to append, however, the only time we need to start a new node, is in that framebuffer function. \n\nIf we would only have \"writeResource\" and an event (a function call to the graph) to indicate that we need to actually start a new node the next time someone calls write, we would have everything we need, and you wouldn\u0027t need the \"onResourceChanged\" anymore since you would be able to call it yourself inside \"writeResource\" when needed.\n\nThe API surface would become smaller and easier to understand with 2 APIs instead of 3.\n\nIf this can\u0027t work, can you explain why this idea does not work?",
      "parentUuid": "226d507d_aaf430dd",
      "range": {
        "startLine": 46,
        "startChar": 10,
        "endLine": 46,
        "endChar": 29
      },
      "revId": "ec10d41a3c9f5236c61cd56a6094f8d4bb34fd00",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d869173_4e41e197",
        "filename": "src/libANGLE/renderer/vulkan/CommandGraph.h",
        "patchSetId": 15
      },
      "lineNbr": 46,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-05-28T17:46:42Z",
      "side": 1,
      "message": "Sure. It\u0027s a pretty simple argument.\n\n1) we definitely need append so we can have the ability to merge command buffers. this is for performance.\n2) we use beginWriteResource in probably 10-15 places in the code now. 10-15 instances is enough that we can wrap \"onResourceChanged(); appendWriteResource();\" into a helper function.\n3) beginWriteResource is that helper function. In a later patch it becomes exactly that.",
      "parentUuid": "74fb258f_7c193181",
      "range": {
        "startLine": 46,
        "startChar": 10,
        "endLine": 46,
        "endChar": 29
      },
      "revId": "ec10d41a3c9f5236c61cd56a6094f8d4bb34fd00",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "61c40eab_bf3aa3ab",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 15
      },
      "lineNbr": 394,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-05-28T17:46:42Z",
      "side": 1,
      "message": "here\u0027s an example of onResourceChanged",
      "range": {
        "startLine": 394,
        "startChar": 4,
        "endLine": 394,
        "endChar": 21
      },
      "revId": "ec10d41a3c9f5236c61cd56a6094f8d4bb34fd00",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "57022dbe_a637a717",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 15
      },
      "lineNbr": 500,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-05-28T17:46:42Z",
      "side": 1,
      "message": "and here",
      "range": {
        "startLine": 500,
        "startChar": 4,
        "endLine": 500,
        "endChar": 21
      },
      "revId": "ec10d41a3c9f5236c61cd56a6094f8d4bb34fd00",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5aaabb20_7ac262c7",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 15
      },
      "lineNbr": 506,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-05-28T17:46:42Z",
      "side": 1,
      "message": "this will call append.",
      "range": {
        "startLine": 506,
        "startChar": 14,
        "endLine": 506,
        "endChar": 37
      },
      "revId": "ec10d41a3c9f5236c61cd56a6094f8d4bb34fd00",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4aa01cd9_80cdb69f",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 15
      },
      "lineNbr": 585,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-05-28T17:46:42Z",
      "side": 1,
      "message": "here\u0027s another onResourceChanged then append - the reason it\u0027s nice to have this is because we are recording both inside and outside the RenderPass.",
      "range": {
        "startLine": 585,
        "startChar": 4,
        "endLine": 585,
        "endChar": 21
      },
      "revId": "ec10d41a3c9f5236c61cd56a6094f8d4bb34fd00",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}