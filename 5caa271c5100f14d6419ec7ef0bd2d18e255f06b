{
  "comments": [
    {
      "key": {
        "uuid": "0e44e539_f1bd8058",
        "filename": "src/common/utilities.cpp",
        "patchSetId": 10
      },
      "lineNbr": 357,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-01-14T17:53:14Z",
      "side": 1,
      "message": "seems like these could be constants?",
      "range": {
        "startLine": 357,
        "startChar": 7,
        "endLine": 357,
        "endChar": 31
      },
      "revId": "5caa271c5100f14d6419ec7ef0bd2d18e255f06b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e44e539_11a3ec3d",
        "filename": "src/common/utilities.cpp",
        "patchSetId": 10
      },
      "lineNbr": 370,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-01-14T17:53:14Z",
      "side": 1,
      "message": "nit: might as well add static_cast here",
      "range": {
        "startLine": 370,
        "startChar": 11,
        "endLine": 370,
        "endChar": 47
      },
      "revId": "5caa271c5100f14d6419ec7ef0bd2d18e255f06b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee3231d2_705fc830",
        "filename": "src/common/utilities.cpp",
        "patchSetId": 10
      },
      "lineNbr": 376,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-01-14T17:53:14Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 376,
        "startChar": 11,
        "endLine": 376,
        "endChar": 46
      },
      "revId": "5caa271c5100f14d6419ec7ef0bd2d18e255f06b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e44e539_91951cd0",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 10
      },
      "lineNbr": 67,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-01-14T17:53:14Z",
      "side": 1,
      "message": "these could be cleaned up by taking the target from the impl object",
      "range": {
        "startLine": 67,
        "startChar": 85,
        "endLine": 67,
        "endChar": 98
      },
      "revId": "5caa271c5100f14d6419ec7ef0bd2d18e255f06b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee3231d2_10a04c77",
        "filename": "src/libANGLE/ResourceManager.cpp",
        "patchSetId": 10
      },
      "lineNbr": 373,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-01-14T17:53:14Z",
      "side": 1,
      "message": "same nit here",
      "range": {
        "startLine": 373,
        "startChar": 86,
        "endLine": 373,
        "endChar": 90
      },
      "revId": "5caa271c5100f14d6419ec7ef0bd2d18e255f06b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e44e539_71aa7010",
        "filename": "src/libANGLE/Texture.cpp",
        "patchSetId": 10
      },
      "lineNbr": 49,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-01-14T17:53:14Z",
      "side": 1,
      "message": "nit: I think it would be cleaner to retrieve the target from the impl object, rather than taking it as a parameter. didn\u0027t notice this in earlier patches.",
      "range": {
        "startLine": 49,
        "startChar": 51,
        "endLine": 49,
        "endChar": 64
      },
      "revId": "5caa271c5100f14d6419ec7ef0bd2d18e255f06b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee3231d2_509ac44a",
        "filename": "src/libANGLE/Texture.cpp",
        "patchSetId": 10
      },
      "lineNbr": 143,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-01-14T17:53:14Z",
      "side": 1,
      "message": "nit: looks like this varaible is only used in this one place now? Maybe can move the function call into the loop",
      "range": {
        "startLine": 143,
        "startChar": 9,
        "endLine": 143,
        "endChar": 19
      },
      "revId": "5caa271c5100f14d6419ec7ef0bd2d18e255f06b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee3231d2_9076fc74",
        "filename": "src/libANGLE/Texture.cpp",
        "patchSetId": 10
      },
      "lineNbr": 484,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-01-14T17:53:14Z",
      "side": 1,
      "message": "maybe we can figure out a way to make these methods take ImageIndex, without a lot of ImageIndex copying/creation, using ImageIndexIterator. Seems like a natural fit.",
      "range": {
        "startLine": 484,
        "startChar": 5,
        "endLine": 484,
        "endChar": 58
      },
      "revId": "5caa271c5100f14d6419ec7ef0bd2d18e255f06b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e233d8e_a51f3e85",
        "filename": "tests/angle_implementation_unit_tests/ImageIndexIterator_unittest.cpp",
        "patchSetId": 10
      },
      "lineNbr": 12,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-01-14T17:53:14Z",
      "side": 1,
      "message": "nit: include order (common \u003c libANGLE)",
      "range": {
        "startLine": 12,
        "startChar": 17,
        "endLine": 12,
        "endChar": 26
      },
      "revId": "5caa271c5100f14d6419ec7ef0bd2d18e255f06b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}