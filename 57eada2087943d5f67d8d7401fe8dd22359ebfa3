{
  "comments": [
    {
      "key": {
        "uuid": "5137b50c_1df4244d",
        "filename": "include/GLSLANG/ShaderLang.h",
        "patchSetId": 4
      },
      "lineNbr": 237,
      "author": {
        "id": 1003154
      },
      "writtenOn": "2016-08-31T16:46:52Z",
      "side": 1,
      "message": "Sorry for not being clear.  What I mean is, we will have too many functions to work around, and this flag will soon be out of bits.  Instead, we should just use SH_EMULATE_BUILT_IN_FUNCTIONS to turn on/off builtin function rewrite, and actually to turn which function rewrite on on a certain platform should just be ANGLE logic (i.e., SH_EMULATE_BUILT_IN_FUNCTIONS just give Chrome a flag to turn it off, so we could demonstrate / test driver bugs and their fixes using Chrome)",
      "range": {
        "startLine": 237,
        "startChar": 4,
        "endLine": 237,
        "endChar": 31
      },
      "revId": "57eada2087943d5f67d8d7401fe8dd22359ebfa3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5137b50c_bda41856",
        "filename": "include/GLSLANG/ShaderLang.h",
        "patchSetId": 4
      },
      "lineNbr": 237,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-08-31T16:51:56Z",
      "side": 1,
      "message": "We\u0027ve discussed the bit problem previously locally in Montreal - we are OK with changing to a 64-bit enum for now, and can revisit this problem when we run close to the end of 64-bits. We can use a std::bitset or similar design when necessary. I\u0027d be in favour of keeping the \u0027many flags\u0027 design, as it avoids annoying problems that crop up with \"Optimization level\" type designs.",
      "parentUuid": "5137b50c_1df4244d",
      "range": {
        "startLine": 237,
        "startChar": 4,
        "endLine": 237,
        "endChar": 31
      },
      "revId": "57eada2087943d5f67d8d7401fe8dd22359ebfa3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5137b50c_1d2544b8",
        "filename": "include/GLSLANG/ShaderLang.h",
        "patchSetId": 4
      },
      "lineNbr": 237,
      "author": {
        "id": 1003154
      },
      "writtenOn": "2016-08-31T16:55:03Z",
      "side": 1,
      "message": "That\u0027s OK if we use bits for now.  However, SH_EMULATE_BUILT_IN_FUNCTIONS is an umbrella flag that should include this abs() rewrite.  What makes abs() so unique to break away from SH_EMULATE_BUILT_IN_FUNCTIONS?",
      "parentUuid": "5137b50c_bda41856",
      "range": {
        "startLine": 237,
        "startChar": 4,
        "endLine": 237,
        "endChar": 31
      },
      "revId": "57eada2087943d5f67d8d7401fe8dd22359ebfa3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5137b50c_7d7bb082",
        "filename": "include/GLSLANG/ShaderLang.h",
        "patchSetId": 4
      },
      "lineNbr": 237,
      "author": {
        "id": 1144534
      },
      "writtenOn": "2016-08-31T16:58:44Z",
      "side": 1,
      "message": "Actually, SH_EMULATE_BUILT_IN_FUNCTIONS isn\u0027t enabled in chrome. That\u0027s why I add abs() as a standalone workaround. I am not sure about the effect when enabling SH_EMULATE_BUILT_IN_FUNCTIONS.",
      "parentUuid": "5137b50c_1d2544b8",
      "range": {
        "startLine": 237,
        "startChar": 4,
        "endLine": 237,
        "endChar": 31
      },
      "revId": "57eada2087943d5f67d8d7401fe8dd22359ebfa3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5137b50c_bdc8989e",
        "filename": "include/GLSLANG/ShaderLang.h",
        "patchSetId": 4
      },
      "lineNbr": 237,
      "author": {
        "id": 1003154
      },
      "writtenOn": "2016-08-31T17:02:51Z",
      "side": 1,
      "message": "Ah that\u0027s really good news.  Then can you just remove SH_EMULATE_BUILT_IN_FUNCTION and all related emulation code.  From now on, we will do per flag per function overwrite as jmadill suggested.\n\nI am removing chromium side SH_EMULATE_BUILT_IN_FUNCTION reference right now, so your CL will be able to land without breaking chromium build when it\u0027s ready.",
      "parentUuid": "5137b50c_7d7bb082",
      "range": {
        "startLine": 237,
        "startChar": 4,
        "endLine": 237,
        "endChar": 31
      },
      "revId": "57eada2087943d5f67d8d7401fe8dd22359ebfa3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5137b50c_a0cfcf50",
        "filename": "include/GLSLANG/ShaderLang.h",
        "patchSetId": 4
      },
      "lineNbr": 237,
      "author": {
        "id": 1144534
      },
      "writtenOn": "2016-08-31T17:17:08Z",
      "side": 1,
      "message": "I am removing SH_EMULATE_BUILT_IN_FUNCTIONS in ANGLE and will rebase the patch after this CL land.\n\nThis CL conflicts with https://chromium-review.googlesource.com/#/c/378739/. It should be rebased after 378739 land.",
      "parentUuid": "5137b50c_bdc8989e",
      "range": {
        "startLine": 237,
        "startChar": 4,
        "endLine": 237,
        "endChar": 31
      },
      "revId": "57eada2087943d5f67d8d7401fe8dd22359ebfa3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}