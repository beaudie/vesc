{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a9a422e7_e534d55c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-03-04T09:42:44Z",
      "side": 1,
      "message": "... of objects that already exist without needing to encapsulate them in a container.",
      "range": {
        "startLine": 13,
        "startChar": 29,
        "endLine": 13,
        "endChar": 30
      },
      "revId": "ae3e63e589aaa936961c42887d53e08c662220de",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c92f7247_47738338",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-03-04T18:04:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a9a422e7_e534d55c",
      "range": {
        "startLine": 13,
        "startChar": 29,
        "endLine": 13,
        "endChar": 30
      },
      "revId": "ae3e63e589aaa936961c42887d53e08c662220de",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "206bd28c_c53aff20",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-03-03T21:15:55Z",
      "side": 1,
      "message": "PTAL - ListNode",
      "revId": "ae3e63e589aaa936961c42887d53e08c662220de",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1c9f839b_8f77a7e1",
        "filename": "src/common/ListNode.h",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-03-03T23:40:42Z",
      "side": 1,
      "message": "Why doesn\u0027t the copy constructor actually copy the values?",
      "revId": "ae3e63e589aaa936961c42887d53e08c662220de",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5207f4e0_8786d827",
        "filename": "src/common/ListNode.h",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-03-03T23:46:29Z",
      "side": 1,
      "message": "we explicitly do not want to copy from \u003cother\u003e since ListNode::mPrev and ListNode::mNext deal with raw pointer values and we dont want it to point to some other node",
      "parentUuid": "1c9f839b_8f77a7e1",
      "revId": "ae3e63e589aaa936961c42887d53e08c662220de",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "656cdb10_a629afb1",
        "filename": "src/common/ListNode.h",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-03-04T00:19:17Z",
      "side": 1,
      "message": "I don\u0027t quite understand, since the point of a copy constructor and operator\u003d is to copy the pointer values.\n\nRegardless, if we don\u0027t want these to copy the values, we should put an UNREACHABLE() in them since they don\u0027t do what they claim.   Otherwise, this will likely waste an hour or two of some developer\u0027s time trying to track down why the pointers aren\u0027t set when they do `node1 \u003d node2`.",
      "parentUuid": "5207f4e0_8786d827",
      "revId": "ae3e63e589aaa936961c42887d53e08c662220de",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "19b1030f_9cb6eb7c",
        "filename": "src/common/ListNode.h",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-03-04T09:42:44Z",
      "side": 1,
      "message": "Do we even need a copy constructor? Can we inherit from angle::NonCopyable?",
      "parentUuid": "656cdb10_a629afb1",
      "revId": "ae3e63e589aaa936961c42887d53e08c662220de",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c61cd612_c1944606",
        "filename": "src/common/ListNode.h",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-03-04T16:19:53Z",
      "side": 1,
      "message": "tim/shabi - please refer design doc",
      "parentUuid": "19b1030f_9cb6eb7c",
      "revId": "ae3e63e589aaa936961c42887d53e08c662220de",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}