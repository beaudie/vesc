{
  "comments": [
    {
      "key": {
        "uuid": "0f9e91d0_add9fd9d",
        "filename": "src/libGLESv2/renderer/d3d11/BufferStorage11.cpp",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1105219
      },
      "writtenOn": "2014-02-20T20:46:00Z",
      "side": 1,
      "message": "Can these be !\u003ds instead of \u003es?",
      "revId": "e6e2b64b6fb92a48823aad203e9b27e8e8838f5f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9cec817b_618c7624",
        "filename": "src/libGLESv2/renderer/d3d11/BufferStorage11.cpp",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2014-02-24T20:57:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0f9e91d0_add9fd9d",
      "revId": "e6e2b64b6fb92a48823aad203e9b27e8e8838f5f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cf6e39b0_d3bfb4b0",
        "filename": "src/libGLESv2/renderer/d3d11/BufferStorage11.cpp",
        "patchSetId": 1
      },
      "lineNbr": 297,
      "author": {
        "id": 1105219
      },
      "writtenOn": "2014-02-20T20:46:00Z",
      "side": 1,
      "message": "Since ConvertMapBits doesn\u0027t handle all the flags present in the GL access pattern, is there any name we could give it so that it makes clearer the distinction between the map access type and flags in D3D?",
      "revId": "e6e2b64b6fb92a48823aad203e9b27e8e8838f5f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bce78593_c2dd82fa",
        "filename": "src/libGLESv2/renderer/d3d11/BufferStorage11.cpp",
        "patchSetId": 1
      },
      "lineNbr": 297,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2014-02-24T20:57:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cf6e39b0_d3bfb4b0",
      "revId": "e6e2b64b6fb92a48823aad203e9b27e8e8838f5f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cf6e39b0_13784c4f",
        "filename": "src/libGLESv2/renderer/d3d11/BufferStorage11.cpp",
        "patchSetId": 1
      },
      "lineNbr": 298,
      "author": {
        "id": 1105219
      },
      "writtenOn": "2014-02-20T20:46:00Z",
      "side": 1,
      "message": "Do we have a way to handle flush behavior?",
      "revId": "e6e2b64b6fb92a48823aad203e9b27e8e8838f5f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7cf18d4f_a0671a7d",
        "filename": "src/libGLESv2/renderer/d3d11/BufferStorage11.cpp",
        "patchSetId": 1
      },
      "lineNbr": 298,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2014-02-24T20:57:26Z",
      "side": 1,
      "message": "I chose to skip implementing any flush behaviour, in a spec-compliant way. See pg 38. The language clearly says unflushed pixels are undefined, and it\u0027s ok to say the pixels will be correctly flushed. :) Flush seems more of a performance optimization from my reading.\n\nComments explaining this are upcoming the API entry point patches.",
      "parentUuid": "cf6e39b0_13784c4f",
      "revId": "e6e2b64b6fb92a48823aad203e9b27e8e8838f5f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}