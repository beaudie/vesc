{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "cb95be19_1f9b8a44",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-06-13T18:58:47Z",
      "side": 1,
      "message": "Nice, I think this would stop presubmit complaining if you rebase and try to upload before running `gclient sync` (which is something that annoys me on a daily basis)",
      "revId": "25f634b91584ceca4fa8d69782315f1ab04ced2e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "53b715db_c37cdd79",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1531247
      },
      "writtenOn": "2023-06-13T19:03:55Z",
      "side": 1,
      "message": "Not sure if this CL helps with that but I too am annoyed by having to gclient sync to upload trivial changes (I just yolo it via --bypass-hooks though)",
      "parentUuid": "cb95be19_1f9b8a44",
      "revId": "25f634b91584ceca4fa8d69782315f1ab04ced2e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ec8b5e1c_32135a07",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-06-13T19:19:44Z",
      "side": 1,
      "message": "Yeah I end up doing that too sometimes",
      "parentUuid": "53b715db_c37cdd79",
      "revId": "25f634b91584ceca4fa8d69782315f1ab04ced2e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7532119f_d7642f3b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2023-06-14T12:26:15Z",
      "side": 1,
      "message": "Wait, but we need to enforce \"gclient sync\".\nangle.json needs to get modified when\n  \"testing/buildbot/generate_buildbot_json.py\":\n  \"testing/buildbot/mixins.pyl\":\nchange.",
      "parentUuid": "ec8b5e1c_32135a07",
      "revId": "25f634b91584ceca4fa8d69782315f1ab04ced2e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e6670281_d54c4b00",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2023-06-14T12:26:15Z",
      "side": 1,
      "message": "How will this affect the Chromium-\u003eANGLE autoroller?\nCurrently it:\n1. Modifies DEPS\n2. gclient sync\n3. run_code_generation\n4. amend CL\nSo that it can regenerate angle.json when Chromium-side mixins change.\nWill it still work? I\u0027m not sure when --verify-only is used.",
      "revId": "25f634b91584ceca4fa8d69782315f1ab04ced2e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ff64071b_2469d66e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1531247
      },
      "writtenOn": "2023-06-14T13:49:18Z",
      "side": 1,
      "message": "run_code_generation keeps working the same way as before (module deleted file) so everything is expected to keep working\n\n--verify-only is passed from run_code_generation --verify-no-dirty which runs on presubmits",
      "parentUuid": "e6670281_d54c4b00",
      "revId": "25f634b91584ceca4fa8d69782315f1ab04ced2e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a9c2eabd_118d0fac",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2023-06-14T14:28:08Z",
      "side": 1,
      "message": "So, if your repo has a new angle.json, but you didn\u0027t sync, so you have an old testing/buildbot/mixins.pyl, this CL doesn\u0027t change anything, right?\nThe presubmit would still complain that angle.json needs to be regenerated, correct?\nWould it also inform you to \"gclient sync\" (not sure where this happens)?",
      "parentUuid": "7532119f_d7642f3b",
      "revId": "25f634b91584ceca4fa8d69782315f1ab04ced2e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5676de4f_8f0d38bc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1531247
      },
      "writtenOn": "2023-06-14T18:03:58Z",
      "side": 1,
      "message": "Previously git cl upload would complain due to hash mismatch. If you regenerate without gclient sync, you might get a different output and would get a different hash (either only input or also output).\n\nNow git cl upload would only complain if output mismatches. If the input file is different but produces the same output, --verify-only check passes and presubmits pass. If the difference in the input file yields a difference in the output, --verify-only check fails and presubmit fails. Running code generation without gclient sync would potentially produce an incorrect output (locally). But then when running presubmit on bots, that will run gclient sync. So if the local version is incorrect, the presubmit on bots will fail.\n\nI don\u0027t know what \"informs\" about gclient sync but as you can see from the previous discussion it seems to be hurting us more than helping.",
      "parentUuid": "a9c2eabd_118d0fac",
      "revId": "25f634b91584ceca4fa8d69782315f1ab04ced2e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ae7c3d7_48de5626",
        "filename": "infra/specs/generate_test_spec_json.py",
        "patchSetId": 4
      },
      "lineNbr": 160,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2023-06-14T14:28:08Z",
      "side": 1,
      "message": "MIXIN_FILE_NAME",
      "range": {
        "startLine": 160,
        "startChar": 15,
        "endLine": 160,
        "endChar": 37
      },
      "revId": "25f634b91584ceca4fa8d69782315f1ab04ced2e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2f972576_f5714706",
        "filename": "infra/specs/generate_test_spec_json.py",
        "patchSetId": 4
      },
      "lineNbr": 160,
      "author": {
        "id": 1531247
      },
      "writtenOn": "2023-06-14T18:03:58Z",
      "side": 1,
      "message": "That\u0027d be the full path. Even if the file is moved and this string becomes incorrect, it\u0027s not a big deal. Verbatim strings are easier for humans to read so I tend to prefer them in cases of minor duplication.",
      "parentUuid": "3ae7c3d7_48de5626",
      "range": {
        "startLine": 160,
        "startChar": 15,
        "endLine": 160,
        "endChar": 37
      },
      "revId": "25f634b91584ceca4fa8d69782315f1ab04ced2e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a2131121_68ac259e",
        "filename": "infra/specs/generate_test_spec_json.py",
        "patchSetId": 4
      },
      "lineNbr": 164,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2023-06-14T14:28:08Z",
      "side": 1,
      "message": "Hmm, the generator generates a file per waterfall.\nThe name angle.json comes from https://source.chromium.org/chromium/chromium/src/+/main:third_party/angle/infra/specs/waterfalls.pyl;l\u003d15;drc\u003d9208efb60c4c74bea91b6cb21d707160a797c447\nI was thinking of adding something like angle-internal for unreleased HW.",
      "range": {
        "startLine": 164,
        "startChar": 15,
        "endLine": 164,
        "endChar": 37
      },
      "revId": "25f634b91584ceca4fa8d69782315f1ab04ced2e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3d3cf47e_4c2d6d98",
        "filename": "infra/specs/generate_test_spec_json.py",
        "patchSetId": 4
      },
      "lineNbr": 164,
      "author": {
        "id": 1531247
      },
      "writtenOn": "2023-06-14T18:03:58Z",
      "side": 1,
      "message": "Didn\u0027t realize there could be more than one file. Thanks, I\u0027ll have a look.",
      "parentUuid": "a2131121_68ac259e",
      "range": {
        "startLine": 164,
        "startChar": 15,
        "endLine": 164,
        "endChar": 37
      },
      "revId": "25f634b91584ceca4fa8d69782315f1ab04ced2e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "57985d2c_1e3b4c2a",
        "filename": "infra/specs/generate_test_spec_json.py",
        "patchSetId": 4
      },
      "lineNbr": 168,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2023-06-14T14:28:08Z",
      "side": 1,
      "message": "Could you modify this to work with multiple JSON files?\nLike, check everything in temp_dir.",
      "range": {
        "startLine": 168,
        "startChar": 0,
        "endLine": 168,
        "endChar": 61
      },
      "revId": "25f634b91584ceca4fa8d69782315f1ab04ced2e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}