{
  "comments": [
    {
      "key": {
        "uuid": "70fda385_f2143146",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 2
      },
      "lineNbr": 3308,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-03-23T02:18:15Z",
      "side": 1,
      "message": "Looks like a significant thing to be missing from the front-end! Maybe Geoff or Jamie can tell if this functionality is expected to be happening in some other way.",
      "revId": "b932effcdc4eb870daaa843a069b7c87b5abf175",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a56298b4_2da27403",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 2
      },
      "lineNbr": 3308,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-03-25T14:38:27Z",
      "side": 1,
      "message": "This definitely shouldn\u0027t be here. Would need to look closer to figure out which tests Tim was trying to debug and figure out the proper fix.\n\nupdateCaps works with \"enableable\" extensions for WebGL. So enabling a whole bunch of extensions that should be disabled for WebGL is probably why a lot of tests are failing.",
      "parentUuid": "70fda385_f2143146",
      "revId": "b932effcdc4eb870daaa843a069b7c87b5abf175",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dae608e6_ff026cf6",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 2
      },
      "lineNbr": 3308,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2019-03-25T15:56:06Z",
      "side": 1,
      "message": "Without this line these tests fail:\n\nWebGLCompatibilityTest.SizedRGBA32FFormats/ES2_OPENGL\nWebGLCompatibilityTest.GenerateMipmapSizedFloatingPointTexture/ES2_OPENGL\nWebGLCompatibilityTest.GenerateMipmapSizedFloatingPointTexture/ES3_OPENGL\n\nLooking closer at WebGLCompatibilityTest.SizedRGBA32FFormats/ES2_OPENGL, we fail due to GL_INVALID_ENUM being returned by ValidateES2TexImageParameters():\n\n        if (!isSubImage)\n        {\n            switch (internalformat)\n            {\n                case GL_RGBA32F:\n                    if (!context-\u003egetExtensions().colorBufferFloatRGBA)\n                    {\n                        context-\u003evalidationError(GL_INVALID_ENUM, kInvalidFormat);\n                        return false;\n                    }\n\nThis is due to colorBufferFloatRGBA being \u0027false\u0027, even though the extension \"GL_OES_texture_float\" is enabled:\n\n[[[... third_party/angle/src/tests/gl_tests/WebGLCompatibilityTest.cpp ...]]]\nTEST_P(WebGLCompatibilityTest, SizedRGBA32FFormats)\n{\n    // Test skipped because it is only valid for WebGL1 contexts.\n    ANGLE_SKIP_TEST_IF(getClientMajorVersion() !\u003d 2);\n\n    ANGLE_SKIP_TEST_IF(!extensionRequestable(\"GL_OES_texture_float\"));\n[[[... extension is enabled here ...]]]\n    glRequestExtensionANGLE(\"GL_OES_texture_float\");\n    ASSERT_GL_NO_ERROR();\n\n    GLTexture texture;\n    glBindTexture(GL_TEXTURE_2D, texture);\n[[[... but we fail in here due to the Context not knowing its enabled ...]]]\n    glTexImage2D(GL_TEXTURE_2D, 0, GL_RGBA32F, 1, 1, 0, GL_RGBA, GL_FLOAT, nullptr);\n\n\nWhere/How else should the Context be updated to know which extensions are enabled?",
      "parentUuid": "a56298b4_2da27403",
      "revId": "b932effcdc4eb870daaa843a069b7c87b5abf175",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}