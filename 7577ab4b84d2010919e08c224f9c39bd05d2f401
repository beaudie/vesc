{
  "comments": [
    {
      "key": {
        "uuid": "493f2cb0_eed3c99e",
        "filename": "src/libANGLE/FrameCapture.cpp",
        "patchSetId": 10
      },
      "lineNbr": 4007,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2020-07-09T14:45:28Z",
      "side": 1,
      "message": "Probably should account for the case when mFrameStart \u003d\u003d mFrameEnd, for completeness.",
      "range": {
        "startLine": 4007,
        "startChar": 8,
        "endLine": 4007,
        "endChar": 60
      },
      "revId": "7577ab4b84d2010919e08c224f9c39bd05d2f401",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "06deaf06_126cfcd2",
        "filename": "src/libANGLE/FrameCapture.cpp",
        "patchSetId": 10
      },
      "lineNbr": 4007,
      "author": {
        "id": 1423953
      },
      "writtenOn": "2020-07-09T15:08:22Z",
      "side": 1,
      "message": "I think we do not need to worry about that case. Say mFrameStart \u003d mFrameEnd. If we call swapBuffers before onDestroyContext is reached, then onEndFrame is reached before this and will write the cpp replay file and the index files. It then sets mFrameIndex \u003d mFrameIndex+1 \u003e mFrameEnd. Thus this condition fails, and the code inside it will not overwrite the files. If we do not call swapBuffers before onDestroyContext is reached, then mFrameIndex \u003d mFrameStart \u003d mFrameEnd, and this condition also fails so nothing is serialized or written. We actually want that because the default framebuffer is destroyed before FrameCapture::onDestroyContext is reached, so its no use to serialize anyway.",
      "parentUuid": "493f2cb0_eed3c99e",
      "range": {
        "startLine": 4007,
        "startChar": 8,
        "endLine": 4007,
        "endChar": 60
      },
      "revId": "7577ab4b84d2010919e08c224f9c39bd05d2f401",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f0c57bc_8539931e",
        "filename": "src/libANGLE/FrameCapture.cpp",
        "patchSetId": 10
      },
      "lineNbr": 4007,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2020-07-09T15:30:53Z",
      "side": 1,
      "message": "We\u0027re starting with framebuffer serialization, but I don\u0027t believe that\u0027s the only thing we\u0027ll be comparing in the long term (right?).\n\nI\u0027m also thinking ahead to a couple scenarios:\n\n* When we want to capture from contexts that never call swapBuffers (which is soon).  I don\u0027t think we\u0027ll actually need to serialize anything in that case though, since they will be real apps, not tests.  So this shouldn\u0027t come into play.\n\n* When we want to support capture/replay of snippets of code that don\u0027t rely on frame boundaries, or live within a single frame.\n\nSince this is primarily in support of tests, we control the start and end frames, so they shouldn\u0027t ever be equal.  I don\u0027t think we can assert this here.\n\nI think your math is right and we can\u0027t hit this case.  If you could, please add your reasoning as a comment for future readers.  Boundary conditions can be difficult bugs to find later. :)",
      "parentUuid": "06deaf06_126cfcd2",
      "range": {
        "startLine": 4007,
        "startChar": 8,
        "endLine": 4007,
        "endChar": 60
      },
      "revId": "7577ab4b84d2010919e08c224f9c39bd05d2f401",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c56d6af4_1ac505a7",
        "filename": "src/libANGLE/FrameCapture.cpp",
        "patchSetId": 10
      },
      "lineNbr": 4007,
      "author": {
        "id": 1423953
      },
      "writtenOn": "2020-07-09T15:53:48Z",
      "side": 1,
      "message": "The plan is to serialize everything in the long term. In term of tests, we actually do not miss anything because ANGLETestBase always does a swapBuffer before destroying context. \nI agree that for applications that never calls that last swapBuffers, we will miss something. But I believe this is intended behavior, as I talked to Jamie the other day. Jamie, what do you think?",
      "parentUuid": "9f0c57bc_8539931e",
      "range": {
        "startLine": 4007,
        "startChar": 8,
        "endLine": 4007,
        "endChar": 60
      },
      "revId": "7577ab4b84d2010919e08c224f9c39bd05d2f401",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "383ec9c5_353d6a98",
        "filename": "src/libANGLE/FrameCapture.cpp",
        "patchSetId": 10
      },
      "lineNbr": 4007,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-07-09T16:00:31Z",
      "side": 1,
      "message": "How about we change this to a bool like you did for the first frame? If the frame index file are not saved, then save them here.\n\nAlso I\u0027d like to see you change your code so that you only open and write out the index file in one step - either on the last frame or destroy.",
      "parentUuid": "c56d6af4_1ac505a7",
      "range": {
        "startLine": 4007,
        "startChar": 8,
        "endLine": 4007,
        "endChar": 60
      },
      "revId": "7577ab4b84d2010919e08c224f9c39bd05d2f401",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "59c21c0d_6dbf280d",
        "filename": "src/libANGLE/FrameCapture.cpp",
        "patchSetId": 10
      },
      "lineNbr": 4007,
      "author": {
        "id": 1423953
      },
      "writtenOn": "2020-07-09T17:32:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "383ec9c5_353d6a98",
      "range": {
        "startLine": 4007,
        "startChar": 8,
        "endLine": 4007,
        "endChar": 60
      },
      "revId": "7577ab4b84d2010919e08c224f9c39bd05d2f401",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}