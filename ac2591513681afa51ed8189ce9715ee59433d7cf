{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "8e281106_8b99ca95",
        "filename": "src/libANGLE/renderer/vulkan/ProgramExecutableVk.cpp",
        "patchSetId": 42
      },
      "lineNbr": 748,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2022-06-07T21:58:45Z",
      "side": 1,
      "message": "So we are compiling two programs immediately regardless if both rotation will actually used or not. Wouldn\u0027t this causing unnecessary memory consumption and double launch time? Would you consider just pick one program to warm up and leave the other one compile as needed (or compile in separate thread)?",
      "range": {
        "startLine": 739,
        "startChar": 0,
        "endLine": 748,
        "endChar": 0
      },
      "revId": "ac2591513681afa51ed8189ce9715ee59433d7cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d6a1ee64_5f8a26d9",
        "filename": "src/libANGLE/renderer/vulkan/ProgramExecutableVk.cpp",
        "patchSetId": 42
      },
      "lineNbr": 748,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-06-08T01:40:02Z",
      "side": 1,
      "message": "The problem is you can\u0027t know which rotation the program will actually be used in.\n\nI agree that a trick like \"compile for the current rotation, compile the other rotation in a background thread\" is a good idea, but that\u0027s sort of irrelevant for us with https://chromium-review.googlesource.com/c/angle/angle/+/3692270\n\nIf you don\u0027t mind, I\u0027d rather leave that for a future CL.",
      "parentUuid": "8e281106_8b99ca95",
      "range": {
        "startLine": 739,
        "startChar": 0,
        "endLine": 748,
        "endChar": 0
      },
      "revId": "ac2591513681afa51ed8189ce9715ee59433d7cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5e746112_ba55b41d",
        "filename": "src/libANGLE/renderer/vulkan/ProgramExecutableVk.cpp",
        "patchSetId": 42
      },
      "lineNbr": 748,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2022-06-08T21:24:12Z",
      "side": 1,
      "message": "Could you try with app trace to see how much more memory it uses and how long the first frame it takes before/after the CL. My worry is that we are wasting extra time/memory here for nothing because the program is used only for FBO (it only uses one rotation).\n\nOr, maybe you could gather some statistics to see the percentages of programs are running with rotation and pick one has the most statistics. My guess is most program is for FBO, so no rotation is applied, and we could just bet on that.",
      "parentUuid": "d6a1ee64_5f8a26d9",
      "range": {
        "startLine": 739,
        "startChar": 0,
        "endLine": 748,
        "endChar": 0
      },
      "revId": "ac2591513681afa51ed8189ce9715ee59433d7cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e95bf06d_8ca90dd4",
        "filename": "src/libANGLE/renderer/vulkan/ProgramExecutableVk.cpp",
        "patchSetId": 42
      },
      "lineNbr": 748,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-06-08T22:35:31Z",
      "side": 1,
      "message": "It really depends on the application. Some apps only render to the swapchain. And for some apps rotation is common (like the browser).\n\nThat said, I disabled spec consts for rotation on ARM and IMG, so there\u0027s no double-compile here for us at least. Mohan\u0027s team is the one realistically affected, so if you don\u0027t mind I\u0027ll leave it to them to decide whether its worth it.\n\nFYI, one partner (you know which) said their GL driver compiles \"a couple of variations\" at link time and they _never_ compile at draw time, so we probably need to compile even more things here as we discover them.",
      "parentUuid": "5e746112_ba55b41d",
      "range": {
        "startLine": 739,
        "startChar": 0,
        "endLine": 748,
        "endChar": 0
      },
      "revId": "ac2591513681afa51ed8189ce9715ee59433d7cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "afec5f0c_258b2f96",
        "filename": "src/libANGLE/renderer/vulkan/ProgramExecutableVk.cpp",
        "patchSetId": 42
      },
      "lineNbr": 748,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2022-06-08T23:56:20Z",
      "side": 1,
      "message": "SGTM. Adding Mohan to CC.",
      "parentUuid": "e95bf06d_8ca90dd4",
      "range": {
        "startLine": 739,
        "startChar": 0,
        "endLine": 748,
        "endChar": 0
      },
      "revId": "ac2591513681afa51ed8189ce9715ee59433d7cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3f5e8449_9153b8ab",
        "filename": "src/libANGLE/renderer/vulkan/ProgramExecutableVk.cpp",
        "patchSetId": 42
      },
      "lineNbr": 748,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-06-15T16:11:55Z",
      "side": 1,
      "message": "Inspected things on Pixel 6 with AGI; draw-time pipeline creation still misses the cache after warm up, so warm up is useless.\n\nI disabled this on ARM and Imagination. On open source Qualcomm drivers, this warm up should actually be very effective (see ddoc). On SwiftShader, I\u0027ve also seen cache is hit.\n\nWe can adjust this based on Brandon\u0027s feedback when testing is done on Samsung.\n\nIMO, this is practically as far as we can go without VK_EXT_graphics_pipeline_library",
      "parentUuid": "afec5f0c_258b2f96",
      "range": {
        "startLine": 739,
        "startChar": 0,
        "endLine": 748,
        "endChar": 0
      },
      "revId": "ac2591513681afa51ed8189ce9715ee59433d7cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "73741dfe_b28551ef",
        "filename": "src/libANGLE/renderer/vulkan/ProgramExecutableVk.cpp",
        "patchSetId": 42
      },
      "lineNbr": 748,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2022-06-16T17:27:39Z",
      "side": 1,
      "message": "Thanks for the data on pixel. re-lgtm.",
      "parentUuid": "3f5e8449_9153b8ab",
      "range": {
        "startLine": 739,
        "startChar": 0,
        "endLine": 748,
        "endChar": 0
      },
      "revId": "ac2591513681afa51ed8189ce9715ee59433d7cf",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}