{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "72e37cd5_14dffadd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2023-05-02T16:41:52Z",
      "side": 1,
      "message": "Looks reasonable to me.",
      "revId": "1b661b938c5eb2f679b7ce6ebfb64e51df0fbac5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bedda6b2_5310e4f8",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.h",
        "patchSetId": 14
      },
      "lineNbr": 249,
      "author": {
        "id": 1564492
      },
      "writtenOn": "2023-05-04T16:05:29Z",
      "side": 1,
      "message": "What is the reason, why `atomic` is here, while `mutex` is on another structure?\nAlso why have separate structures and not have all members inside this structure?\n\nWhile `mutex` is required to protect `vkAcquireNextImageKHR`, we can\u0027t write result without this mutex.\n\nTechnically, we can write result without a `mutex` lock, but then we need to assign `needToAcquireNextSwapchainImage`, that must be done while still holding the `mutex` lock. So result must also be written inside the mutex.\n\nThe above makes two structures very closely related and IMO it would be simple to have a single structure.",
      "revId": "1b661b938c5eb2f679b7ce6ebfb64e51df0fbac5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}