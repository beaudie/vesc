{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e4f4d96f_ebed63bb",
        "filename": "src/libANGLE/renderer/vulkan/CLCommandQueueVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 263,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-10-08T17:23:11Z",
      "side": 1,
      "message": "This can cause a GPU bubble, why not use `commandBuffer-\u003ecopyBuffer` for this case too?",
      "range": {
        "startLine": 262,
        "startChar": 0,
        "endLine": 263,
        "endChar": 64
      },
      "revId": "2d7b5b032a99b2894c984e2d7ea9524684a64d7b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "65008a2b_899fdc7e",
        "filename": "src/libANGLE/renderer/vulkan/CLCommandQueueVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 263,
      "author": {
        "id": 1603052
      },
      "writtenOn": "2024-10-08T18:58:47Z",
      "side": 1,
      "message": "I recall hitting some validation error messages using the same buffer in the copyBuffer command. Looking at the spec now, the only req seems to be non-overlapping region. Let me check again.",
      "parentUuid": "e4f4d96f_ebed63bb",
      "range": {
        "startLine": 262,
        "startChar": 0,
        "endLine": 263,
        "endChar": 64
      },
      "revId": "2d7b5b032a99b2894c984e2d7ea9524684a64d7b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "923ff82f_0e191fb8",
        "filename": "src/libANGLE/renderer/vulkan/CLCommandQueueVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 263,
      "author": {
        "id": 1603052
      },
      "writtenOn": "2024-10-22T03:31:32Z",
      "side": 1,
      "message": "For sub-buffers, the parent is used for all memory op updates with offsets and sizes taking in from sub-buffer. With that approach copy in here for sub-buffers with same parent - queue serial on the parent is the same for both write and read ops hitting the asserts. That was the motivation for keeping this as special case in this change.",
      "parentUuid": "65008a2b_899fdc7e",
      "range": {
        "startLine": 262,
        "startChar": 0,
        "endLine": 263,
        "endChar": 64
      },
      "revId": "2d7b5b032a99b2894c984e2d7ea9524684a64d7b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "50178dd0_082073cc",
        "filename": "src/libANGLE/renderer/vulkan/CLCommandQueueVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 263,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-10-22T17:09:04Z",
      "side": 1,
      "message": "You should still be able to make it work, it\u0027s an easy win where otherwise apps hitting this path would unnecessarily suffer. Something like a `dstBufferVk-\u003ecopyFromSelf(...)` would probably just solve your problem?\n\nI\u0027m a fan of implementing things right from scratch, but if you want to leave a TODO and optimize later I won\u0027t push back.",
      "parentUuid": "923ff82f_0e191fb8",
      "range": {
        "startLine": 262,
        "startChar": 0,
        "endLine": 263,
        "endChar": 64
      },
      "revId": "2d7b5b032a99b2894c984e2d7ea9524684a64d7b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}