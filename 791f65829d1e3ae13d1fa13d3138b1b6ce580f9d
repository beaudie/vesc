{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f3fc8c3b_6f386dea",
        "filename": "src/libANGLE/renderer/d3d/d3d11/StateManager11.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2386,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2022-07-28T18:34:38Z",
      "side": 1,
      "message": "Do you know which dirty bits are still set? Likely means that some sync happened in an unexpected order and the syncing of some state re-dirtied another state.",
      "range": {
        "startLine": 2381,
        "startChar": 0,
        "endLine": 2386,
        "endChar": 5
      },
      "revId": "791f65829d1e3ae13d1fa13d3138b1b6ce580f9d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3e0f76c4_612f2f5b",
        "filename": "src/libANGLE/renderer/d3d/d3d11/StateManager11.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2386,
      "author": {
        "id": 1543967
      },
      "writtenOn": "2022-07-28T18:47:08Z",
      "side": 1,
      "message": "Looks like 4 bits:\n\nDIRTY_BIT_COMPUTE_SRV_STATE\nDIRTY_BIT_COMPUTE_UAV_STATE\nDIRTY_BIT_TEXTURE_AND_SAMPLER_STATE\nDIRTY_BIT_DRIVER_UNIFORMS",
      "parentUuid": "f3fc8c3b_6f386dea",
      "range": {
        "startLine": 2381,
        "startChar": 0,
        "endLine": 2386,
        "endChar": 5
      },
      "revId": "791f65829d1e3ae13d1fa13d3138b1b6ce580f9d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c34a23c5_bd521e16",
        "filename": "src/libANGLE/renderer/d3d/d3d11/StateManager11.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2386,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2022-07-29T16:07:59Z",
      "side": 1,
      "message": "Ok, then I would debug and put a breakpoint when some of those dirty bits are set (places like https://source.chromium.org/chromium/chromium/src/+/main:third_party/angle/src/libANGLE/renderer/d3d/d3d11/StateManager11.cpp;l\u003d1652) and see what\u0027s causing it. \n\nIt may mean that you need to update the DirtyBitType enum in StateManager11 to reorder the bits.",
      "parentUuid": "3e0f76c4_612f2f5b",
      "range": {
        "startLine": 2381,
        "startChar": 0,
        "endLine": 2386,
        "endChar": 5
      },
      "revId": "791f65829d1e3ae13d1fa13d3138b1b6ce580f9d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e547a197_866c48f6",
        "filename": "src/libANGLE/renderer/d3d/d3d11/StateManager11.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2386,
      "author": {
        "id": 1116015
      },
      "writtenOn": "2022-08-02T15:09:32Z",
      "side": 1,
      "message": "Note that some Dawn tests started firing this assert after my ANGLE change: https://bugs.chromium.org/p/dawn/issues/detail?id\u003d1503\n\nSo the problem is likely orthogonal to this CL. Patches welcome, though. :)",
      "parentUuid": "c34a23c5_bd521e16",
      "range": {
        "startLine": 2381,
        "startChar": 0,
        "endLine": 2386,
        "endChar": 5
      },
      "revId": "791f65829d1e3ae13d1fa13d3138b1b6ce580f9d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5d9310fa_90e32a3f",
        "filename": "src/libANGLE/renderer/d3d/d3d11/StateManager11.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2386,
      "author": {
        "id": 1543967
      },
      "writtenOn": "2022-08-05T22:19:23Z",
      "side": 1,
      "message": "Good to know. FYI, this bug also repros on Image2DAsFunctionArg after https://chromium-review.googlesource.com/c/angle/angle/+/3813050\n\nIs there an ANGLE bug I can reference for this issue?",
      "parentUuid": "e547a197_866c48f6",
      "range": {
        "startLine": 2381,
        "startChar": 0,
        "endLine": 2386,
        "endChar": 5
      },
      "revId": "791f65829d1e3ae13d1fa13d3138b1b6ce580f9d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f26c14af_4993b3c1",
        "filename": "src/libANGLE/renderer/d3d/d3d11/renderer11_utils.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1717,
      "author": {
        "id": 1116015
      },
      "writtenOn": "2022-08-02T15:09:32Z",
      "side": 1,
      "message": "I think we can count on pixel and compute UAV support on the D3D11 backend, at least for the non-coherent version of this stuff (vertex UAVs require D3D11.1, but I assume that\u0027s not relevant here).",
      "revId": "791f65829d1e3ae13d1fa13d3138b1b6ce580f9d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}