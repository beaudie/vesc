{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6947f85d_6124e67f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2022-07-14T21:02:30Z",
      "side": 1,
      "message": "Is this specific to do with EXT_YUV_target usage or just a general bug? From what you described, it appears a general bug. A test example will be helpful to understand how you get into such state that color attachment is null. ",
      "revId": "c0f0a21e565c26e9ee66018175cb75bffbfab824",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f99fb843_8f88dc76",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1175714
      },
      "writtenOn": "2022-07-14T21:05:22Z",
      "side": 1,
      "message": "It\u0027s likely a general bug, but needs more verification.\n\nIt\u0027s likely FBO 0 + surfaceless causes this. But we don\u0027t need an attachments in this syncState call since a glDispatchCompute is the actual thing that triggered the syncState.",
      "parentUuid": "6947f85d_6124e67f",
      "revId": "c0f0a21e565c26e9ee66018175cb75bffbfab824",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "deb229a0_8040284d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2022-07-14T21:37:43Z",
      "side": 1,
      "message": "Yea, I think it likely from compute + surfaceless. But compute code path should not get to framebuffer code in the first place, the framebuffer state will not get synced. From I read, the compute dirty bit does not have any sample/fbo related bits in it\nhttps://chromium.googlesource.com/angle/angle/+/refs/heads/main/src/libANGLE/Context.cpp#715\nAnd the dirty bit is masked with this bitmask\nhttps://chromium.googlesource.com/angle/angle/+/refs/heads/main/src/libANGLE/Context.cpp#4364\n\nThere should be a better fix here in higher code to avoid getting into this in the first place. I am worry that there is more badness other than getSamples() call if we are getting into framebuffer code from compute.",
      "parentUuid": "f99fb843_8f88dc76",
      "revId": "c0f0a21e565c26e9ee66018175cb75bffbfab824",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}