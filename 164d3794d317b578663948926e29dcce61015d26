{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a05587a9_0fe4e8b8",
        "filename": "src/tests/gl_tests/VulkanPerformanceCounterTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 774,
      "author": {
        "id": 1520902
      },
      "writtenOn": "2022-08-19T04:16:31Z",
      "side": 1,
      "message": "why do we only increment the submission count in this test, but not in other tests that also check the submissionCommandsCount, e.g.SubmittingOutsideCommandBufferDoesNotBreakRenderPass? Is it because the renderpass was not closed in that test case?",
      "revId": "164d3794d317b578663948926e29dcce61015d26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5390f6b0_61b3b48b",
        "filename": "src/tests/gl_tests/VulkanPerformanceCounterTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 774,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-08-19T16:44:00Z",
      "side": 1,
      "message": "The difference here is `EXPECT_PIXEL_COLOR_EQ`. In the other test, the render pass is not actually closed at the time render pass count is verified, so no submission is made either. In this case, the render pass is closed for pixel readback, which may or may not make a submission, then the pixel readback adds an image-\u003ebuffer copy and makes another submission.",
      "parentUuid": "a05587a9_0fe4e8b8",
      "revId": "164d3794d317b578663948926e29dcce61015d26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "04e5e534_75570b45",
        "filename": "src/tests/gl_tests/VulkanPerformanceCounterTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 774,
      "author": {
        "id": 1520902
      },
      "writtenOn": "2022-08-19T17:25:11Z",
      "side": 1,
      "message": "For the \"pixel readback adds an image-\u003ebuffer copy and makes another submission.\", do we increment submitCommandsCount for this one at line 768 above?\n\nAnd then if the preferSUbmitAtFBOBoundary feature is enabled, \"the render pass is closed for pixel readback\" increments one more submitCommandsCount at line 774. \n\nIs my understanding correct?",
      "parentUuid": "5390f6b0_61b3b48b",
      "revId": "164d3794d317b578663948926e29dcce61015d26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a96ee15b_d0c69269",
        "filename": "src/tests/gl_tests/VulkanPerformanceCounterTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 774,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-08-19T18:50:18Z",
      "side": 1,
      "message": "Yes, and yes!",
      "parentUuid": "04e5e534_75570b45",
      "revId": "164d3794d317b578663948926e29dcce61015d26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:approval_code-owners"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "164d3794d317b578663948926e29dcce61015d26",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "164d3794d317b578663948926e29dcce61015d26",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "164d3794d317b578663948926e29dcce61015d26",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "164d3794d317b578663948926e29dcce61015d26",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}