{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d3ef7c30_e04fa3f1",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.h",
        "patchSetId": 14
      },
      "lineNbr": 760,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-06-22T15:48:39Z",
      "side": 1,
      "message": "setSize is incorrect here, it doesn\u0027t \"accumulate\". See Ref, I have a better suggestion.",
      "revId": "d468c584dec2335675aa38e441188408795213e0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d436e583_cd3e8eeb",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.h",
        "patchSetId": 14
      },
      "lineNbr": 760,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2022-06-22T20:23:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d3ef7c30_e04fa3f1",
      "revId": "d468c584dec2335675aa38e441188408795213e0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ddc628c_e2223156",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 14
      },
      "lineNbr": 3200,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-06-22T15:48:39Z",
      "side": 1,
      "message": "Does this have a measurable impact on CPU performance? What do perf tests say? How about microbenchmarks?\n\nThe alternative (free pools whole) may or may not use more memory (because pool may be stuck on one permanent allocation), but let\u0027s see if perf impact is significant or not before considering it.",
      "range": {
        "startLine": 3200,
        "startChar": 39,
        "endLine": 3200,
        "endChar": 88
      },
      "revId": "d468c584dec2335675aa38e441188408795213e0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aee3529c_3bd7ab38",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 14
      },
      "lineNbr": 3200,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2022-06-22T20:23:11Z",
      "side": 1,
      "message": "It should not for two reasons: 1) this is in cache miss code path which is expected not a common case and 2) pool is created with same layout, so allocation should be easy to full fill. But anyway, will do some test here just to be sure.",
      "parentUuid": "7ddc628c_e2223156",
      "range": {
        "startLine": 3200,
        "startChar": 39,
        "endLine": 3200,
        "endChar": 88
      },
      "revId": "d468c584dec2335675aa38e441188408795213e0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d7f13a58_c25e2c50",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 14
      },
      "lineNbr": 3200,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-06-22T20:29:18Z",
      "side": 1,
      "message": "Thanks. I\u0027m mostly concerned with the driver switching to some inefficient algorithm upon seeing this (because now free and reallocate should be supported)",
      "parentUuid": "aee3529c_3bd7ab38",
      "range": {
        "startLine": 3200,
        "startChar": 39,
        "endLine": 3200,
        "endChar": 88
      },
      "revId": "d468c584dec2335675aa38e441188408795213e0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "284ce7b7_7ba4d319",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 14
      },
      "lineNbr": 3200,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2022-06-22T22:48:16Z",
      "side": 1,
      "message": "See CPU perf data here\nhttps://docs.google.com/spreadsheets/d/1AaFvKiuO_iNCC6VP6muswpve64VRJpZrUt2eRH5iJAk/edit?usp\u003dsharing\n\nMost of them seems improving, but I think these are also within noise.",
      "parentUuid": "d7f13a58_c25e2c50",
      "range": {
        "startLine": 3200,
        "startChar": 39,
        "endLine": 3200,
        "endChar": 88
      },
      "revId": "d468c584dec2335675aa38e441188408795213e0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "26917d99_293fa541",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 14
      },
      "lineNbr": 3200,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-06-23T16:12:44Z",
      "side": 1,
      "message": "If the CPU improvements are real, that\u0027s a pretty nice win! I see that the ones that show degradation, when you tried them individually actually show little difference. I wonder if the same is true for those that show improvement (i.e. maybe the improvement is not really there either).\n\nThe change LGTM for landing, but could you also do a few individual runs of the ones that show a huge improvement? Like `sakura_school_simulator`, `scary_teacher_3d`, `respawnables` and `slingshot_test1`? The ones with big improvements are consecutive tests, I\u0027m wondering if the phone simply got hot during the run of \"before CL\" around those tests. Thanks!",
      "parentUuid": "284ce7b7_7ba4d319",
      "range": {
        "startLine": 3200,
        "startChar": 39,
        "endLine": 3200,
        "endChar": 88
      },
      "revId": "d468c584dec2335675aa38e441188408795213e0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2676a75d_46d9ae9f",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 14
      },
      "lineNbr": 3200,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2022-06-23T17:56:19Z",
      "side": 1,
      "message": "The improvement is also not real. See the updated sheet. perf test on mobile is a bit tricky. But anyway I dont expect this CL change CPU perf any any direction for the exact same reason I described above. This is more of memory saving by removing the invalid caches.",
      "parentUuid": "26917d99_293fa541",
      "range": {
        "startLine": 3200,
        "startChar": 39,
        "endLine": 3200,
        "endChar": 88
      },
      "revId": "d468c584dec2335675aa38e441188408795213e0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "311c19eb_857d315d",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 14
      },
      "lineNbr": 138,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-06-22T15:48:39Z",
      "side": 1,
      "message": "Useless comment is useless. Could you please add some comment here that describes what the class is used for? (i.e. clean up of desc sets through garbage collection)",
      "revId": "d468c584dec2335675aa38e441188408795213e0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9edf4933_befdcfeb",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 14
      },
      "lineNbr": 138,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2022-06-22T20:23:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "311c19eb_857d315d",
      "revId": "d468c584dec2335675aa38e441188408795213e0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c95e7c04_98f1d659",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 14
      },
      "lineNbr": 266,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-06-22T15:48:39Z",
      "side": 1,
      "message": "Any idea how big this pool can be?",
      "range": {
        "startLine": 266,
        "startChar": 52,
        "endLine": 266,
        "endChar": 68
      },
      "revId": "d468c584dec2335675aa38e441188408795213e0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7efd72e7_1adeebe6",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 14
      },
      "lineNbr": 266,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2022-06-22T20:23:11Z",
      "side": 1,
      "message": "Depends on if you have this CL or not. Before this CL, the pool will keep growing in usage case like surfaceflinger notification shade. I think a few to a few dozen for normal apps. But anyway this is in stats code that no real app will run into, only for app traces and even for tests we usually only call this twice (before run and after run), so performance should not be a concern.",
      "parentUuid": "c95e7c04_98f1d659",
      "range": {
        "startLine": 266,
        "startChar": 52,
        "endLine": 266,
        "endChar": 68
      },
      "revId": "d468c584dec2335675aa38e441188408795213e0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "364318a2_8a39a690",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 14
      },
      "lineNbr": 266,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-06-22T20:29:18Z",
      "side": 1,
      "message": "Ack.\n\nFYI, this is not just for traces. We call this on every submission (4+ times). Our perf counters currently count regardless of whether they are enabled, and persist in release builds.",
      "parentUuid": "7efd72e7_1adeebe6",
      "range": {
        "startLine": 266,
        "startChar": 52,
        "endLine": 266,
        "endChar": 68
      },
      "revId": "d468c584dec2335675aa38e441188408795213e0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ab5828bf_792acd1f",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 14
      },
      "lineNbr": 271,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-06-22T15:48:39Z",
      "side": 1,
      "message": "Ref: I see the problem with `accumulateCacheStatsAndSize`, it doesn\u0027t accumulate size. Sorry for the bad suggestion.\n\nSomething else that could work is this:\n\n```\nsize_t cacheSize \u003d 0;\nfor (RefCountedDescriptorPoolHelper *pool : mDescriptorPools)\n{\n    cacheSize +\u003d pool-\u003eget().getTotalCacheSize();\n}\nCacheStats adjusted \u003d mCacheStats;\nadjusted.setSize(cacheSize);\naccum-\u003eaccumulateCacheStats(cacheType, adjusted);\n```",
      "revId": "d468c584dec2335675aa38e441188408795213e0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b8ea3c65_673b9199",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 14
      },
      "lineNbr": 271,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2022-06-22T20:23:11Z",
      "side": 1,
      "message": "Done. BTW, this is what I did earlier and I changed to mutable try to avoid this ugliness. But anyway, I do not have issue with either way.",
      "parentUuid": "ab5828bf_792acd1f",
      "revId": "d468c584dec2335675aa38e441188408795213e0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}