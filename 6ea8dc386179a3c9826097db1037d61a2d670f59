{
  "comments": [
    {
      "key": {
        "uuid": "de761212_c6ada221",
        "filename": "src/common/matrix_utils.h",
        "patchSetId": 8
      },
      "lineNbr": 31,
      "author": {
        "id": 1001641
      },
      "writtenOn": "2015-06-24T13:21:28Z",
      "side": 1,
      "message": "I think that having the assert for rows and columns here as Jamie suggested would make more sense.",
      "revId": "6ea8dc386179a3c9826097db1037d61a2d670f59",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "de761212_06997aff",
        "filename": "src/common/matrix_utils.h",
        "patchSetId": 8
      },
      "lineNbr": 128,
      "author": {
        "id": 1001641
      },
      "writtenOn": "2015-06-24T13:21:28Z",
      "side": 1,
      "message": "These asserts don\u0027t add much value, since other checks in this function already fire in the same cases.",
      "revId": "6ea8dc386179a3c9826097db1037d61a2d670f59",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "deab729c_feaf811c",
        "filename": "src/common/matrix_utils_unittest.cpp",
        "patchSetId": 8
      },
      "lineNbr": 123,
      "author": {
        "id": 1001641
      },
      "writtenOn": "2015-06-24T13:21:28Z",
      "side": 1,
      "message": "I\u0027d name this variable just \"identityMatrix\"",
      "revId": "6ea8dc386179a3c9826097db1037d61a2d670f59",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "de761212_26b59670",
        "filename": "src/compiler/translator/IntermNode.cpp",
        "patchSetId": 8
      },
      "lineNbr": 208,
      "author": {
        "id": 1001641
      },
      "writtenOn": "2015-06-24T13:21:28Z",
      "side": 1,
      "message": "I\u0027d clarify this comment by saying \n\"Transpose is used since the Matrix constructor expects arguments in row-major order, whereas the paramArray is in column-major order.\"",
      "revId": "6ea8dc386179a3c9826097db1037d61a2d670f59",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "deab729c_be4459ed",
        "filename": "src/compiler/translator/IntermNode.cpp",
        "patchSetId": 8
      },
      "lineNbr": 217,
      "author": {
        "id": 1001641
      },
      "writtenOn": "2015-06-24T13:21:28Z",
      "side": 1,
      "message": "Same here.",
      "revId": "6ea8dc386179a3c9826097db1037d61a2d670f59",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9eb57afa_9c22c563",
        "filename": "src/compiler/translator/IntermNode.cpp",
        "patchSetId": 8
      },
      "lineNbr": 223,
      "author": {
        "id": 1001641
      },
      "writtenOn": "2015-06-24T13:21:28Z",
      "side": 1,
      "message": "Ditto.",
      "revId": "6ea8dc386179a3c9826097db1037d61a2d670f59",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "de761212_868c8abb",
        "filename": "src/tests/compiler_tests/ConstantFolding_test.cpp",
        "patchSetId": 8
      },
      "lineNbr": 320,
      "author": {
        "id": 1001641
      },
      "writtenOn": "2015-06-24T13:21:28Z",
      "side": 1,
      "message": "What about floating-point precision tolerance for the inverse tests here? It seems risky to expect an exact match when numbers that can\u0027t be represented exactly are being compared.",
      "revId": "6ea8dc386179a3c9826097db1037d61a2d670f59",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}