{
  "comments": [
    {
      "key": {
        "uuid": "d79f04a6_57109e52",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-07-31T23:06:07Z",
      "side": 1,
      "message": "LGTM.",
      "revId": "31936036ca093fb11706bd8c2119be7bdb0a1f76",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "35ed9f31_fd69b7f6",
        "filename": "src/libANGLE/ProgramExecutable.h",
        "patchSetId": 5
      },
      "lineNbr": 377,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-07-31T20:28:33Z",
      "side": 1,
      "message": "The program and executable can only be a compute or graphics, it does not support compute as one shader stage of the program, even for pipeline program, is my understanding correct? If yes, then I am thinking wouldn\u0027t it be easier to just have one variable instead of two so that you don\u0027t need to check \"isCompute()? A:B\" in all other places?",
      "range": {
        "startLine": 376,
        "startChar": 3,
        "endLine": 377,
        "endChar": 52
      },
      "revId": "31936036ca093fb11706bd8c2119be7bdb0a1f76",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b0729a2f_796dcf85",
        "filename": "src/libANGLE/ProgramExecutable.h",
        "patchSetId": 5
      },
      "lineNbr": 377,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-07-31T20:36:03Z",
      "side": 1,
      "message": "No unfortunately PPOs can have both compute and graphics programs attached, and it\u0027s indeed possible to use the same PPO to do both graphics and compute work.",
      "parentUuid": "35ed9f31_fd69b7f6",
      "range": {
        "startLine": 376,
        "startChar": 3,
        "endLine": 377,
        "endChar": 52
      },
      "revId": "31936036ca093fb11706bd8c2119be7bdb0a1f76",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e0b08f9f_1a1af754",
        "filename": "src/libANGLE/ProgramExecutable.h",
        "patchSetId": 5
      },
      "lineNbr": 377,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-07-31T20:38:42Z",
      "side": 1,
      "message": "Then in that case, (have both graphics and compute), what will isCompute() return? will both std::vector used?",
      "parentUuid": "b0729a2f_796dcf85",
      "range": {
        "startLine": 376,
        "startChar": 3,
        "endLine": 377,
        "endChar": 52
      },
      "revId": "31936036ca093fb11706bd8c2119be7bdb0a1f76",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "06f223d5_244a85db",
        "filename": "src/libANGLE/ProgramExecutable.h",
        "patchSetId": 5
      },
      "lineNbr": 377,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-07-31T21:14:27Z",
      "side": 1,
      "message": "PPOs are graphics by default (isCompute() \u003d\u003d false), but are converted to compute during dispatch calls by convertPpoToComputeOrDraw() and then back to graphics when that completes:\n\n    ANGLE_INLINE angle::Result Context::prepareForDispatch()\n    {\n        // We always assume PPOs are used for draws, until they aren\u0027t. If we are executing a dispatch\n        // with a PPO, we need to convert it from a \"draw\"-type to \"dispatch\"-type.\n        convertPpoToComputeOrDraw(true);\n        ANGLE_TRY(syncDirtyObjects(mComputeDirtyObjects));\n        return syncDirtyBits(mComputeDirtyBits);\n    }\n\n    void Context::dispatchCompute(GLuint numGroupsX, GLuint numGroupsY, GLuint numGroupsZ)\n    {\n    ...\n        angle::Result result \u003d\n            mImplementation-\u003edispatchCompute(this, numGroupsX, numGroupsY, numGroupsZ);\n        // We always assume PPOs are used for draws, until they aren\u0027t. If we just executed a dispatch\n        // with a PPO, we need to convert it back to a \"draw\"-type.\n        convertPpoToComputeOrDraw(false);",
      "parentUuid": "e0b08f9f_1a1af754",
      "range": {
        "startLine": 376,
        "startChar": 3,
        "endLine": 377,
        "endChar": 52
      },
      "revId": "31936036ca093fb11706bd8c2119be7bdb0a1f76",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}