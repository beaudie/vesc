{
  "comments": [
    {
      "key": {
        "uuid": "b88584ce_7a371202",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-07-17T02:23:45Z",
      "side": 1,
      "message": "I still have 5 failing tests failing for a reason I\u0027ve not found.  I\u0027d appreciate any insights you can add.",
      "revId": "218dc6e21910a99d7a52f3c0fcf2b5200373d4a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "48602a64_14a732cf",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-07-17T19:12:46Z",
      "side": 1,
      "message": "I ran one of the tests through renderdoc and it\u0027s apparent that the descriptor set containing the image view is not updated in this path, so the image views retain their old (higher) level count. I added this as a blind fix but that didn\u0027t fix the issue:\n\n    onStateChange(angle::SubjectMessage::SubjectChanged);\n\nThere are so many indirections involved, I don\u0027t immediately understand how DIRTY_BIT_TEXTURES is supposed to be set (I really thought onStateChange would do the trick). +Jamie?",
      "revId": "218dc6e21910a99d7a52f3c0fcf2b5200373d4a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7e02d00d_b8de0dd6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-07-17T19:47:48Z",
      "side": 1,
      "message": "Valuable insight.  This seems to be the real problem that is causing this \"change the ImageView\" path to not work in all cases.\n\nBTW, this change yields a ~2X performance improvement for NBA 2K20 rendering time (during game play).  That\u0027s why I\u0027m willing to narrow the focus of when to use this path.",
      "parentUuid": "48602a64_14a732cf",
      "revId": "218dc6e21910a99d7a52f3c0fcf2b5200373d4a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d521b497_58c775f8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-07-17T19:58:55Z",
      "side": 1,
      "message": "I\u0027m sure once this is fixed, all the weird restrictions can be lifted :)",
      "parentUuid": "7e02d00d_b8de0dd6",
      "revId": "218dc6e21910a99d7a52f3c0fcf2b5200373d4a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5e734186_e0080e23",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1532,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-07-17T02:56:33Z",
      "side": 1,
      "message": "This could use some improvement. Say the texture has the following levels:\n\n- Level 0: 4x4\n- Level 1: 2x2\n- Level 2: 1x1\n\nNow if the max level is 1000 or 200 or 400 or 10, it doesn\u0027t make any difference. There may be need to add a helper to determine the maximum possible number of levels (or maybe can use `getMipLevelCount(ImageMipLevels::FullMipChain)`). Then if both current and previous max levels are above that (that + base that is), you could consider it not changed. Otherwise if one is within the max possible range, you could use the `previous !\u003d current` check. Basically the right-hand side of the above \u0026\u0026 just needs changing.\n\nAlso, there\u0027s a bug here as is. If `previousMaxLevel \u003d\u003d gl::kInitialMaxLevel`, then `maxLevelChanged` becomes false, but that\u0027s not correct. In the above example, if maxLevel goes from 1000 to 0, you shouldn\u0027t just ignore that.",
      "range": {
        "startLine": 1531,
        "startChar": 0,
        "endLine": 1532,
        "endChar": 87
      },
      "revId": "218dc6e21910a99d7a52f3c0fcf2b5200373d4a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "63cbbf94_5ee63840",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1532,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-07-17T19:47:48Z",
      "side": 1,
      "message": "I removed the `previousMaxLevel \u003d\u003d gl::kInitialMaxLevel`.  It covered up a problem I fixed below.",
      "parentUuid": "5e734186_e0080e23",
      "range": {
        "startLine": 1531,
        "startChar": 0,
        "endLine": 1532,
        "endChar": 87
      },
      "revId": "218dc6e21910a99d7a52f3c0fcf2b5200373d4a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e289a0c_027b43d2",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1552,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-07-17T02:56:33Z",
      "side": 1,
      "message": "Shouldn\u0027t need this (in the least, it should compare with base instead of 0, but even then I don\u0027t see the point).",
      "range": {
        "startLine": 1552,
        "startChar": 48,
        "endLine": 1552,
        "endChar": 62
      },
      "revId": "218dc6e21910a99d7a52f3c0fcf2b5200373d4a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "af855a9c_48e3a20a",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1552,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-07-17T02:56:33Z",
      "side": 1,
      "message": "You can ASSERT this. If neither base nor max changed, the if before last would already return.",
      "range": {
        "startLine": 1552,
        "startChar": 29,
        "endLine": 1552,
        "endChar": 44
      },
      "revId": "218dc6e21910a99d7a52f3c0fcf2b5200373d4a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "81b3478e_56a73edb",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1552,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-07-17T19:47:48Z",
      "side": 1,
      "message": "If we can get the change-ImageView path to work without this, I\u0027m happy to remove it.",
      "parentUuid": "0e289a0c_027b43d2",
      "range": {
        "startLine": 1552,
        "startChar": 48,
        "endLine": 1552,
        "endChar": 62
      },
      "revId": "218dc6e21910a99d7a52f3c0fcf2b5200373d4a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f3bb91f5_ef5f33f9",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1552,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-07-17T19:47:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "af855a9c_48e3a20a",
      "range": {
        "startLine": 1552,
        "startChar": 29,
        "endLine": 1552,
        "endChar": 44
      },
      "revId": "218dc6e21910a99d7a52f3c0fcf2b5200373d4a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "50a7fa1e_ac33c071",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1554,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-07-17T02:56:33Z",
      "side": 1,
      "message": "I didn\u0027t get this at all. I don\u0027t think you need mAlternateMaxLevel.\n\nIf the max level oscillates between base and base+levelCount(), all you need is to change the views, isn\u0027t that right? So, the whole condition for the if can be (assuming maxLevel \u003e\u003d baseLevel. If that\u0027s not guaranteed per spec or something, can add that condition too):\n\n    if (!baseLevelChanged \u0026\u0026 maxLevel \u003c baseLevel + levelCount)",
      "range": {
        "startLine": 1553,
        "startChar": 8,
        "endLine": 1554,
        "endChar": 87
      },
      "revId": "218dc6e21910a99d7a52f3c0fcf2b5200373d4a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5b9843d7_bb621858",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1554,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-07-17T04:37:11Z",
      "side": 1,
      "message": "\u003e If ..., all you need is to change the views, isn\u0027t that right?\n\nThat\u0027s what I thought, but I had test failures that went away by not going down the path of changing the views (and this works for NBA 2K20, which just toggles between two values).\n\nThat\u0027s what I\u0027d like your help with ... why would dEQP tests fail by going down this path?  I still have 5 tests that fail (on Linux too).",
      "parentUuid": "50a7fa1e_ac33c071",
      "range": {
        "startLine": 1553,
        "startChar": 8,
        "endLine": 1554,
        "endChar": 87
      },
      "revId": "218dc6e21910a99d7a52f3c0fcf2b5200373d4a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "711e1e92_3e456f74",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1554,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-07-17T19:12:46Z",
      "side": 1,
      "message": "Well adding more restrictions means you are just making the optimization rarer. Here\u0027s some log I produced with: dEQP-GLES3.functional.texture.mipmap.3d.max_level.nearest_linear\n\nChanging [0,0] to [0,2]: max changed? 1\nChanging [0,2] to [0,5]: max changed? 1\nChanging [0,5] to [0,1]: max changed? 1\nRecreating views only\nChanging [0,1] to [0,4]: max changed? 1\nChanging [0,4] to [0,0]: max changed? 1\nChanging [0,0] to [0,3]: max changed? 1\nChanging [0,3] to [0,4]: max changed? 1\nChanging [0,4] to [0,5]: max changed? 1\nChanging [0,5] to [0,1]: max changed? 1\nRecreating views only\nChanging [0,1] to [0,0]: max changed? 1\nChanging [0,0] to [0,5]: max changed? 1\nChanging [0,5] to [0,3]: max changed? 1\nRecreating views only\nChanging [0,3] to [0,0]: max changed? 1\n\nIdeally all of the above should have gone through recreating views.",
      "parentUuid": "5b9843d7_bb621858",
      "range": {
        "startLine": 1553,
        "startChar": 8,
        "endLine": 1554,
        "endChar": 87
      },
      "revId": "218dc6e21910a99d7a52f3c0fcf2b5200373d4a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "10262dad_281e51cc",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1554,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-07-17T19:47:48Z",
      "side": 1,
      "message": "I missed a case, and will push a new patch set with the fix.\n\nThe point is trying to help NBA 2K20 without breaking anything else.  My initial code didn\u0027t have this, but I narrowed more to what I actually need.  When we get the \"change the ImageView\" path to work, I\u0027ll be happy to remove it.",
      "parentUuid": "711e1e92_3e456f74",
      "range": {
        "startLine": 1553,
        "startChar": 8,
        "endLine": 1554,
        "endChar": 87
      },
      "revId": "218dc6e21910a99d7a52f3c0fcf2b5200373d4a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "966e8fb2_a052a651",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1554,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-07-17T21:04:42Z",
      "side": 1,
      "message": "FYI, with the fix added, I tried this on one of the dEQP tests that used to fail, and I see that the image is never recreated:\n\n    if (!baseLevelChanged \u0026\u0026 maxLevel \u003c baseLevel + levelCount)",
      "parentUuid": "10262dad_281e51cc",
      "range": {
        "startLine": 1553,
        "startChar": 8,
        "endLine": 1554,
        "endChar": 87
      },
      "revId": "218dc6e21910a99d7a52f3c0fcf2b5200373d4a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "afa63f17_2f08e0a0",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1555,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-07-17T02:56:33Z",
      "side": 1,
      "message": "Shouldn\u0027t need this. Recreating the views shouldn\u0027t affect the staged updates.",
      "range": {
        "startLine": 1555,
        "startChar": 8,
        "endLine": 1555,
        "endChar": 35
      },
      "revId": "218dc6e21910a99d7a52f3c0fcf2b5200373d4a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "90fd6c82_8039f74f",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1555,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-07-17T19:47:48Z",
      "side": 1,
      "message": "More tests fail it I remove it.  So, it stays in for now.",
      "parentUuid": "afa63f17_2f08e0a0",
      "range": {
        "startLine": 1555,
        "startChar": 8,
        "endLine": 1555,
        "endChar": 35
      },
      "revId": "218dc6e21910a99d7a52f3c0fcf2b5200373d4a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2c0a242c_3d453ebc",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1575,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-07-17T19:12:46Z",
      "side": 1,
      "message": "This should be `maxLevel - baseLevel + 1`",
      "range": {
        "startLine": 1575,
        "startChar": 30,
        "endLine": 1575,
        "endChar": 42
      },
      "revId": "218dc6e21910a99d7a52f3c0fcf2b5200373d4a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c9336364_49a249f0",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1575,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-07-17T19:47:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2c0a242c_3d453ebc",
      "range": {
        "startLine": 1575,
        "startChar": 30,
        "endLine": 1575,
        "endChar": 42
      },
      "revId": "218dc6e21910a99d7a52f3c0fcf2b5200373d4a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "35007c6f_4cf00859",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.h",
        "patchSetId": 2
      },
      "lineNbr": 410,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-07-17T17:52:46Z",
      "side": 1,
      "message": "Seems like it would be even better to support ImageViews per max level so that we don\u0027t need to keep releasing/creating ImageViews every time the max value changes (especially if this is something the app is doing every frame).\n\nThat\u0027s probably worth its own follow-on change once this CL proves we can handle changing ImageViews in the first place.\n\nI\u0027m also not sure what sorts of resource limits we\u0027d need to worry about or how much extra memory this could consume, but so far it sounds like this isn\u0027t something apps would be stress-testing.",
      "revId": "218dc6e21910a99d7a52f3c0fcf2b5200373d4a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "066ee071_e4492e19",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.h",
        "patchSetId": 2
      },
      "lineNbr": 410,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-07-17T19:47:48Z",
      "side": 1,
      "message": "When we get this CL to prove the approach, this might be a good follow-on CL if apps benefit from it.",
      "parentUuid": "35007c6f_4cf00859",
      "revId": "218dc6e21910a99d7a52f3c0fcf2b5200373d4a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}