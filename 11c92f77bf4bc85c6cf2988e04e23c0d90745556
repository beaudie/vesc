{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c4aa6727_969dc20d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1531247
      },
      "writtenOn": "2024-06-04T15:48:56Z",
      "side": 1,
      "message": "2% by eliminating a single branch would be insane!\n\nWhat I think made the biggest impact is that this function is now inlined. Before:\n\n```\n3ddd70:      \tbl\t0x3dd350 \u003cgl::ProgramExecutable::shouldIgnoreUniform(gl::UniformLocation) const\u003e\n  3ddd74:      \ttbz\tw0, #0x0, 0x3ddd90 \u003cgl::ProgramExecutable::setUniform2fv(gl::UniformLocation, int, float const*)+0x50\u003e\n ```\n\nAfter:\n\n```\n  3ddb50:       ldr x8, [x0, #0x558]\n  3ddb54:       ldr x9, [x0, #0x550]\n; ./../../src/libANGLE/ProgramExecutable.cpp:2476\n  3ddb58:       sxtw  x10, w1\n; ./../../third_party/libc++/src/include/vector:596\n11  916,663 \n  3ddb5c:       sub x8, x8, x9\n; ./../../src/libANGLE/ProgramExecutable.cpp:2476\n  3ddb60:       cmp x10, x8, asr #3\n  3ddb64:       b.hs  0x3ddc18 \u003cgl::ProgramExecutable::setUniform2fv(gl::UniformLocation, int, float const*)+0xcc\u003e\n  3ddb68:       add x8, x9, x10, lsl #3\n  3ddb6c:       ldr w8, [x8, #0x4]\n; ./../../src/libANGLE/ProgramExecutable.cpp:2594\n  3ddb70:       tbnz  w8, #0x1f, 0x3ddc18 \u003cgl::ProgramExecutable::setUniform2fv(gl::UniformLocation, int, float const*)+0xcc\u003e\n ```",
      "revId": "11c92f77bf4bc85c6cf2988e04e23c0d90745556",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4edadd86_3adb3fb9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1531247
      },
      "writtenOn": "2024-06-04T15:50:24Z",
      "side": 1,
      "message": "(ANGLE_INLINE / ANGLE_NOINLINE would be one way to confirm whether it\u0027s one or the other)",
      "parentUuid": "c4aa6727_969dc20d",
      "revId": "11c92f77bf4bc85c6cf2988e04e23c0d90745556",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "818b7ae0_c7acf3ff",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1564492
      },
      "writtenOn": "2024-06-04T16:13:25Z",
      "side": 1,
      "message": "Thanks for the info, I will try this.\n\nCould you pleas also tell how to read assembler from ANGLE Android builds? Thank you in advance.",
      "parentUuid": "4edadd86_3adb3fb9",
      "revId": "11c92f77bf4bc85c6cf2988e04e23c0d90745556",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "14e91165_366ab412",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1531247
      },
      "writtenOn": "2024-06-04T16:17:04Z",
      "side": 1,
      "message": "I usually look at profiling with disassembly, from something like this:\n```\n$android_checkout/system/extras/simpleperf/scripts\n % python3 app_profiler.py -np com.android.angle.test:test_process -r \"-e task-clock --call-graph dwarf -f 12000 --duration 4\"\npython3 binary_cache_builder.py -lib /d2/angle3/out/AndroidPerformance/lib.unstripped/\npython3 report_html.py --min_func_percent\u003d0 --add_disassembly --binary_filter\u003dlibGLESv2_angle.so\n```\n\nthen go to Sample Table and search for the function I\u0027m interested in\n\n(profiling is sampled though, so I don\u0027t fully trust the profiling numbers, but at least it gives an idea of what gets hit and what doesn\u0027t)",
      "parentUuid": "818b7ae0_c7acf3ff",
      "revId": "11c92f77bf4bc85c6cf2988e04e23c0d90745556",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "727ff257_0e621389",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1564492
      },
      "writtenOn": "2024-06-04T16:22:37Z",
      "side": 1,
      "message": "Thanks a lot!",
      "parentUuid": "14e91165_366ab412",
      "revId": "11c92f77bf4bc85c6cf2988e04e23c0d90745556",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}