{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5f97eb0e_c3c6a263",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 11
      },
      "lineNbr": 5719,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2023-04-20T00:07:07Z",
      "side": 0,
      "message": "I am wondering the test failure might related to this, that after this CL it is doing a flushImpl call which previously not. Maybe you still want to keep finalizeImageLayoutInShareContexts and only do the flush from where it is required.",
      "range": {
        "startLine": 5719,
        "startChar": 4,
        "endLine": 5719,
        "endChar": 80
      },
      "revId": "a7bd3f53fa68bf9351a712c618b37bc1fa79817c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d30db4f9_ea086936",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 11
      },
      "lineNbr": 5719,
      "author": {
        "id": 1379716
      },
      "writtenOn": "2023-04-20T00:22:13Z",
      "side": 0,
      "message": "Yeah, I need more time to investigate. I think I\u0027m seeing ANGLE record to a command buffer it has already ended with this current patchset.",
      "parentUuid": "5f97eb0e_c3c6a263",
      "range": {
        "startLine": 5719,
        "startChar": 4,
        "endLine": 5719,
        "endChar": 80
      },
      "revId": "a7bd3f53fa68bf9351a712c618b37bc1fa79817c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ecea415_2e9cfb3c",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 11
      },
      "lineNbr": 5719,
      "author": {
        "id": 1564492
      },
      "writtenOn": "2023-04-20T14:18:39Z",
      "side": 0,
      "message": "I have question. Why this change replaces call to `finalizeImageLayout()` to `flushImpl()` in the first place?\n\nMy original proposition was to have 2 methods:\n- `releaseImageFromShareContexts()` -\u003e calls `finalizeImageLayout()` unconditionally.\n- `flushUnsubmittedUseInShareContexts()` -\u003e `flushImpl()` if `hasUnsubmittedUse()`\n\nSo we will have copy of `for (ContextVk *ctx : shareContextSet)` loop. Also suggest  keep original logic in `releaseImageFromShareContexts()` as is (except for pure refactoring) to avoid undesriable side effects. I\u0027m talking about removing the `mImageSerial.valid()` check.",
      "parentUuid": "d30db4f9_ea086936",
      "range": {
        "startLine": 5719,
        "startChar": 4,
        "endLine": 5719,
        "endChar": 80
      },
      "revId": "a7bd3f53fa68bf9351a712c618b37bc1fa79817c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c9ec3877_1a9e46d3",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 11
      },
      "lineNbr": 5719,
      "author": {
        "id": 1379716
      },
      "writtenOn": "2023-04-20T16:26:49Z",
      "side": 0,
      "message": "I think I misunderstood\n\n\u003e  If yes, then flushUsubmittedUseInShareContexts will replace finalizeImageLayoutInShareContexts completely.\n\nfrom https://chromium-review.googlesource.com/c/angle/angle/+/4436529/comment/cb23d7dd_fa777785/\n\nPTAL to see if I understood your latest suggestion correctly!",
      "parentUuid": "3ecea415_2e9cfb3c",
      "range": {
        "startLine": 5719,
        "startChar": 4,
        "endLine": 5719,
        "endChar": 80
      },
      "revId": "a7bd3f53fa68bf9351a712c618b37bc1fa79817c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c21d703c_1fc4928c",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 11
      },
      "lineNbr": 5719,
      "author": {
        "id": 1564492
      },
      "writtenOn": "2023-04-20T16:51:56Z",
      "side": 0,
      "message": "\u003e PTAL to see if I understood your latest suggestion correctly!\n\nFirst part is correct -\u003e implementing separate `flushUnsubmittedUseInShareContexts()` method.\n\nAnother suggestion was to remove calls to `finalizeImageLayoutInShareContexts()` before `flushUnsubmittedUseInShareContexts()`. Logic is that if layout needs finalization - it is used and not submitted. So there is no point finalizing layout before `flushImpl()`, because this will happen as part of the flush.\nRemoving `finalizeImageLayoutInShareContexts()` calls will allow to remove the method completely and move its code inside `releaseImageFromShareContexts()` (like it was before my change).\n\n---\n\nI have another suggestion regarding `finalizeImageLayoutInShareContexts()` method, that makes my previous suggestion obsolete.\n\nCurrently, this CL will call `flushImpl()` for all siblings that has `mOwnsImage \u003d\u003d false`. However, not all such siblings may be external image siblings.\n\nMy suggestion is to keep `finalizeImageLayoutInShareContexts()` and only call `flushUnsubmittedUseInShareContexts()` when external image siblings are released.\nThis is to prevent excessive calls to `flushImpl()` when using `EGLImages` that are not AHBs.\n\nIn other words, call `flushUnsubmittedUseInShareContexts()` in case of AHB, and call `finalizeImageLayoutInShareContexts()` (like before) in all other cases.\n\nIs this possible?",
      "parentUuid": "3ecea415_2e9cfb3c",
      "range": {
        "startLine": 5719,
        "startChar": 4,
        "endLine": 5719,
        "endChar": 80
      },
      "revId": "a7bd3f53fa68bf9351a712c618b37bc1fa79817c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7048ef0c_8e3d9cd8",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 11
      },
      "lineNbr": 5719,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-04-20T16:55:40Z",
      "side": 0,
      "message": "Just want to chime in that I\u0027m in favor of Igor\u0027s suggestion not to do flush unless external (e.g. AHB). Chrome is/will be a heavy user of EGL images (not external, just for sharing between contexts) and I\u0027m somewhat concerned about the unnecessary flushes.",
      "parentUuid": "c21d703c_1fc4928c",
      "range": {
        "startLine": 5719,
        "startChar": 4,
        "endLine": 5719,
        "endChar": 80
      },
      "revId": "a7bd3f53fa68bf9351a712c618b37bc1fa79817c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c8c3ea55_e1017199",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 11
      },
      "lineNbr": 5719,
      "author": {
        "id": 1379716
      },
      "writtenOn": "2023-04-20T17:33:04Z",
      "side": 0,
      "message": "\u003e In other words, call `flushUnsubmittedUseInShareContexts()` in case of AHB, and call `finalizeImageLayoutInShareContexts()` (like before) in all other cases.\n\u003eIs this possible?\n\nAttempted, PTAL!",
      "parentUuid": "7048ef0c_8e3d9cd8",
      "range": {
        "startLine": 5719,
        "startChar": 4,
        "endLine": 5719,
        "endChar": 80
      },
      "revId": "a7bd3f53fa68bf9351a712c618b37bc1fa79817c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eeff0da1_bef617a7",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 11
      },
      "lineNbr": 5719,
      "author": {
        "id": 1564492
      },
      "writtenOn": "2023-04-20T17:53:01Z",
      "side": 0,
      "message": "\u003e Attempted, PTAL!\n\nLGTM, except maybe for copy-paste. However, I can\u0027t suggest a good name for a method.",
      "parentUuid": "c8c3ea55_e1017199",
      "range": {
        "startLine": 5719,
        "startChar": 4,
        "endLine": 5719,
        "endChar": 80
      },
      "revId": "a7bd3f53fa68bf9351a712c618b37bc1fa79817c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6d8f5000_33b40370",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 11
      },
      "lineNbr": 1945,
      "author": {
        "id": 1564492
      },
      "writtenOn": "2023-04-20T14:18:39Z",
      "side": 0,
      "message": "It is look like after this CL you may remove `imageSiblingSerial` related code completely.\nIt was introduced in this CL: https://chromium-review.googlesource.com/c/angle/angle/+/4296014",
      "revId": "a7bd3f53fa68bf9351a712c618b37bc1fa79817c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b0c28957_104d6e07",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 11
      },
      "lineNbr": 1945,
      "author": {
        "id": 1564492
      },
      "writtenOn": "2023-04-20T16:51:56Z",
      "side": 0,
      "message": "The above is only true if not using `finalizeImageLayoutInShareContexts()` (except for `releaseImageFromShareContexts()`).",
      "parentUuid": "6d8f5000_33b40370",
      "revId": "a7bd3f53fa68bf9351a712c618b37bc1fa79817c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "45705101_9249d453",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 11
      },
      "lineNbr": 1945,
      "author": {
        "id": 1564492
      },
      "writtenOn": "2023-04-20T17:53:01Z",
      "side": 0,
      "message": "No longer actual.",
      "parentUuid": "b0c28957_104d6e07",
      "revId": "a7bd3f53fa68bf9351a712c618b37bc1fa79817c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}