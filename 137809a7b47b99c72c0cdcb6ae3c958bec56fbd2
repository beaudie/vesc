{
  "comments": [
    {
      "key": {
        "uuid": "1294b496_90dea72d",
        "filename": "src/libANGLE/Display.cpp",
        "patchSetId": 3
      },
      "lineNbr": 53,
      "author": {
        "id": 1326275
      },
      "writtenOn": "2020-01-30T15:27:20Z",
      "side": 1,
      "message": "Nit: could change to ANGLE_PLATFORM_LINUX",
      "range": {
        "startLine": 53,
        "startChar": 18,
        "endLine": 53,
        "endChar": 31
      },
      "revId": "137809a7b47b99c72c0cdcb6ae3c958bec56fbd2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f66c489e_5a838bed",
        "filename": "src/libANGLE/Display.cpp",
        "patchSetId": 3
      },
      "lineNbr": 53,
      "author": {
        "id": 1230115
      },
      "writtenOn": "2020-01-30T17:32:27Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "1294b496_90dea72d",
      "range": {
        "startLine": 53,
        "startChar": 18,
        "endLine": 53,
        "endChar": 31
      },
      "revId": "137809a7b47b99c72c0cdcb6ae3c958bec56fbd2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "96b01b7f_e43036d7",
        "filename": "src/libANGLE/Display.cpp",
        "patchSetId": 3
      },
      "lineNbr": 241,
      "author": {
        "id": 1326275
      },
      "writtenOn": "2020-01-30T15:27:20Z",
      "side": 1,
      "message": "It would be interesting to be able to use EGL with desktop GL too. But since there\u0027s an ongoing experiment it would need to be behind some kind of flags/controls",
      "revId": "137809a7b47b99c72c0cdcb6ae3c958bec56fbd2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "27d8d21e_c7e27927",
        "filename": "src/libANGLE/Display.cpp",
        "patchSetId": 3
      },
      "lineNbr": 241,
      "author": {
        "id": 1230115
      },
      "writtenOn": "2020-01-30T17:32:27Z",
      "side": 1,
      "message": "Make sense. Is there an example somewhere about similar flag ?",
      "parentUuid": "96b01b7f_e43036d7",
      "revId": "137809a7b47b99c72c0cdcb6ae3c958bec56fbd2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5ec60797_a885e33c",
        "filename": "src/libANGLE/Display.cpp",
        "patchSetId": 3
      },
      "lineNbr": 241,
      "author": {
        "id": 1326275
      },
      "writtenOn": "2020-01-31T21:54:58Z",
      "side": 1,
      "message": "I would look at the EGL_ANGLE_platform_* extensions like:\nhttps://cs.chromium.org/chromium/src/third_party/angle/extensions/EGL_ANGLE_platform_angle_device_type_swiftshader.txt?dr\u003dC\u0026g\u003d0\nYou could do a similar \"device type egl\" and device type glx for the GL backend. Let me know if you need any other pointers on this.\n\nNote: I would consider this a nice-to-have for the GL backend, but probably needed for the ES backend.\nThe checks mentioned below can then be moved into validationEGL so this can fail gracefully when unavailable.",
      "parentUuid": "27d8d21e_c7e27927",
      "revId": "137809a7b47b99c72c0cdcb6ae3c958bec56fbd2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1fb202a6_0892faba",
        "filename": "src/libANGLE/Display.cpp",
        "patchSetId": 3
      },
      "lineNbr": 241,
      "author": {
        "id": 1230115
      },
      "writtenOn": "2020-02-01T00:22:54Z",
      "side": 1,
      "message": "Thx for the suggestion I will have a go.",
      "parentUuid": "5ec60797_a885e33c",
      "revId": "137809a7b47b99c72c0cdcb6ae3c958bec56fbd2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "76a69403_83c33dbc",
        "filename": "src/libANGLE/Display.cpp",
        "patchSetId": 3
      },
      "lineNbr": 271,
      "author": {
        "id": 1326275
      },
      "writtenOn": "2020-01-30T15:27:20Z",
      "side": 1,
      "message": "As far as I know not everything running on Linux is going to have mesa/EGL, is that right? In that case this DisplayEGL would fail.\nWhat are your thoughs on doing a check/wrapper function (like the way Vulkan is instantiated below) that checks whether or not EGL is available, and has a GLX backup?",
      "revId": "137809a7b47b99c72c0cdcb6ae3c958bec56fbd2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "085b521b_2d588dcc",
        "filename": "src/libANGLE/Display.cpp",
        "patchSetId": 3
      },
      "lineNbr": 271,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-01-30T15:32:30Z",
      "side": 1,
      "message": "This was my concern too.",
      "parentUuid": "76a69403_83c33dbc",
      "revId": "137809a7b47b99c72c0cdcb6ae3c958bec56fbd2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3fa026fd_79d8f527",
        "filename": "src/libANGLE/Display.cpp",
        "patchSetId": 3
      },
      "lineNbr": 271,
      "author": {
        "id": 1230115
      },
      "writtenOn": "2020-01-30T17:32:27Z",
      "side": 1,
      "message": "Good idea, I will do something similar than Vulkan then.",
      "parentUuid": "085b521b_2d588dcc",
      "revId": "137809a7b47b99c72c0cdcb6ae3c958bec56fbd2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f91f273d_ce2e66fd",
        "filename": "src/libANGLE/Display.cpp",
        "patchSetId": 3
      },
      "lineNbr": 271,
      "author": {
        "id": 1230115
      },
      "writtenOn": "2020-02-01T00:22:54Z",
      "side": 1,
      "message": "Mhh Vulkan checks seem to all be fake, i.e. all return true. Still I will try to come up with something",
      "parentUuid": "3fa026fd_79d8f527",
      "revId": "137809a7b47b99c72c0cdcb6ae3c958bec56fbd2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1e27e41f_19564938",
        "filename": "src/libANGLE/Display.cpp",
        "patchSetId": 3
      },
      "lineNbr": 271,
      "author": {
        "id": 1326275
      },
      "writtenOn": "2020-02-03T14:38:52Z",
      "side": 1,
      "message": "With the above comments making a \"device type\", you can move these checks into validationEGL like so:\nhttps://cs.chromium.org/chromium/src/third_party/angle/src/libANGLE/validationEGL.cpp?q\u003dvalidationEGL\u0026sq\u003dpackage:chromium\u0026dr\u003dC\u0026l\u003d563\n\nThat means you can leave this code how it is, it\u0027ll never be reached unless it passes validation",
      "parentUuid": "f91f273d_ce2e66fd",
      "revId": "137809a7b47b99c72c0cdcb6ae3c958bec56fbd2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}