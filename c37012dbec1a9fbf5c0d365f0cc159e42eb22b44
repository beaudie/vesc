{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5472b276_ff395076",
        "filename": "extensions/ANGLE_shader_pixel_local_storage.txt",
        "patchSetId": 4
      },
      "lineNbr": 1143,
      "author": {
        "id": 1394635
      },
      "writtenOn": "2023-05-08T18:00:35Z",
      "side": 1,
      "message": "Maybe change to \"non-zero \u003cindex\u003e\"? Zero is the implicit default, so it should be valid to do:\n```\n#extension all : warn\nlayout(binding\u003d0, rgba8) uniform lowp pixelLocalANGLE plane1;\nlayout(location\u003d0, index\u003d0) out vec4 outColor0;\nlayout(location\u003d1, index\u003d0) out vec4 outColor1;\nlayout(location\u003d2, index\u003d0) out vec4 outColor2;\n```",
      "revId": "c37012dbec1a9fbf5c0d365f0cc159e42eb22b44",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0f3bc9d1_536458cb",
        "filename": "extensions/ANGLE_shader_pixel_local_storage.txt",
        "patchSetId": 4
      },
      "lineNbr": 1151,
      "author": {
        "id": 1394635
      },
      "writtenOn": "2023-05-08T18:00:35Z",
      "side": 1,
      "message": "That restriction is active only when non-zero `index` layout qualifier is used in a shader or when a non-zero index is set using `BindFragDataLocationIndexedEXT`, which should probably be banned with PLS anyway. Although multiple unassigned output locations are assigned automatically at link time, which may be safe with PLS, it still makes sense to ban all implicit fragment output assignments when PLS is used.\n\nTo make the rationale more precise, consider:\n\u003e EXT_blend_func_extended may restrict the number of draw buffers depending on API state...",
      "revId": "c37012dbec1a9fbf5c0d365f0cc159e42eb22b44",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}