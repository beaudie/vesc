{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "3f6485f5_a9ed0a2e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-11-03T14:03:30Z",
      "side": 1,
      "message": "LGTM, it\u0027s getting tricky to track the rectangle state.",
      "revId": "91fd7dcb9c191fca54494e25b661580bca9cea1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c7d4d997_c47ed62f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-11-04T03:49:47Z",
      "side": 1,
      "message": "Can you add a perf test that shows this is reducing the render pass count (and catches any regressions in the future)?",
      "revId": "91fd7dcb9c191fca54494e25b661580bca9cea1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1a8ef7a3_d7468131",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-11-04T04:16:07Z",
      "side": 1,
      "message": "First thing I did: https://chromium-review.googlesource.com/c/angle/angle/+/2506779",
      "parentUuid": "c7d4d997_c47ed62f",
      "revId": "91fd7dcb9c191fca54494e25b661580bca9cea1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "84d84f83_270464dd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-11-04T16:11:31Z",
      "side": 1,
      "message": "That\u0027s different than what I had in mind regarding counting the render passes when a scissor change increases the render area.   I\u0027d prefer to see a VulkanPerformanceCounterTest that expands the render area and verifies the render pass count doesn\u0027t increase, since that\u0027ll be a much more explicit check for any changes in the future that may regress the behavior (rather than buried in a graph only updated after CLs land).\n\nIt looks like VulkanPerformanceCounterTest::ClearAfterClearDoesNotBreakRenderPass() exists already, but that only shrinks the scissored area (which is why it didn\u0027t need a fix when this CL reduced the number of render passes).",
      "parentUuid": "1a8ef7a3_d7468131",
      "revId": "91fd7dcb9c191fca54494e25b661580bca9cea1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "635293db_69033801",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-11-04T21:26:45Z",
      "side": 1,
      "message": "Gotcha, done.",
      "parentUuid": "84d84f83_270464dd",
      "revId": "91fd7dcb9c191fca54494e25b661580bca9cea1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "82987790_53e39923",
        "filename": "src/libANGLE/angletypes.cpp",
        "patchSetId": 10
      },
      "lineNbr": 32,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-11-04T03:49:47Z",
      "side": 1,
      "message": "typo",
      "range": {
        "startLine": 32,
        "startChar": 43,
        "endLine": 32,
        "endChar": 55
      },
      "revId": "91fd7dcb9c191fca54494e25b661580bca9cea1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "21669c1b_bb4f9ed3",
        "filename": "src/libANGLE/angletypes.cpp",
        "patchSetId": 10
      },
      "lineNbr": 32,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-11-04T03:49:47Z",
      "side": 1,
      "message": "typo",
      "range": {
        "startLine": 32,
        "startChar": 13,
        "endLine": 32,
        "endChar": 19
      },
      "revId": "91fd7dcb9c191fca54494e25b661580bca9cea1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d9121643_05e8d162",
        "filename": "src/libANGLE/angletypes.cpp",
        "patchSetId": 10
      },
      "lineNbr": 32,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-11-04T04:16:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "21669c1b_bb4f9ed3",
      "range": {
        "startLine": 32,
        "startChar": 13,
        "endLine": 32,
        "endChar": 19
      },
      "revId": "91fd7dcb9c191fca54494e25b661580bca9cea1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "93b99c35_4c24b4dd",
        "filename": "src/libANGLE/angletypes.cpp",
        "patchSetId": 10
      },
      "lineNbr": 32,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-11-04T04:16:07Z",
      "side": 1,
      "message": "I should go to bed earlier.",
      "parentUuid": "82987790_53e39923",
      "range": {
        "startLine": 32,
        "startChar": 43,
        "endLine": 32,
        "endChar": 55
      },
      "revId": "91fd7dcb9c191fca54494e25b661580bca9cea1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fcdb5103_900429be",
        "filename": "src/libANGLE/angletypes.h",
        "patchSetId": 10
      },
      "lineNbr": 96,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-11-03T14:03:30Z",
      "side": 1,
      "message": "nit: FindCoveringRectangle",
      "range": {
        "startLine": 96,
        "startChar": 5,
        "endLine": 96,
        "endChar": 22
      },
      "revId": "91fd7dcb9c191fca54494e25b661580bca9cea1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f21da945_ea697651",
        "filename": "src/libANGLE/angletypes.h",
        "patchSetId": 10
      },
      "lineNbr": 96,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-11-04T03:49:47Z",
      "side": 1,
      "message": "or:\n- GetMinimumBoundingBox\n- GetEnclosingBox\n- GetEnclosingRectangle",
      "parentUuid": "fcdb5103_900429be",
      "range": {
        "startLine": 96,
        "startChar": 5,
        "endLine": 96,
        "endChar": 22
      },
      "revId": "91fd7dcb9c191fca54494e25b661580bca9cea1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7018d1e2_6dc88a0a",
        "filename": "src/libANGLE/angletypes.h",
        "patchSetId": 10
      },
      "lineNbr": 96,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-11-04T04:16:07Z",
      "side": 1,
      "message": "I went with GetEnclosingRectangle. MinimumBoundingBox was nearly perfect, but there\u0027s a Box type and this is not a Box (and BoundingRectangle is not as familiar to the ear).",
      "parentUuid": "f21da945_ea697651",
      "range": {
        "startLine": 96,
        "startChar": 5,
        "endLine": 96,
        "endChar": 22
      },
      "revId": "91fd7dcb9c191fca54494e25b661580bca9cea1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "db974ec4_70697064",
        "filename": "src/libANGLE/angletypes.h",
        "patchSetId": 10
      },
      "lineNbr": 97,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-11-04T03:49:47Z",
      "side": 1,
      "message": "typo",
      "range": {
        "startLine": 97,
        "startChar": 3,
        "endLine": 97,
        "endChar": 9
      },
      "revId": "91fd7dcb9c191fca54494e25b661580bca9cea1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "841de1f5_c71142ab",
        "filename": "src/libANGLE/angletypes.h",
        "patchSetId": 10
      },
      "lineNbr": 97,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-11-04T04:16:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "db974ec4_70697064",
      "range": {
        "startLine": 97,
        "startChar": 3,
        "endLine": 97,
        "endChar": 9
      },
      "revId": "91fd7dcb9c191fca54494e25b661580bca9cea1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bd5e5cfb_46828022",
        "filename": "src/libANGLE/angletypes.h",
        "patchSetId": 10
      },
      "lineNbr": 106,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-11-03T14:03:30Z",
      "side": 1,
      "message": "this is a weird one, not sure what to call this.",
      "range": {
        "startLine": 106,
        "startChar": 5,
        "endLine": 106,
        "endChar": 20
      },
      "revId": "91fd7dcb9c191fca54494e25b661580bca9cea1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9879a37a_4e32b565",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 386,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-11-04T03:49:47Z",
      "side": 1,
      "message": "The \u0027rotatedInvalidateArea\u0027 here (and inside the conditional block) has now been clipped to the FBO\u0027s rotated render area.   Is that still ok, since we may be passing along a smaller invalidate area than before (I don\u0027t quite understand all of the subtleties of how invalidating works yet)?",
      "revId": "91fd7dcb9c191fca54494e25b661580bca9cea1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bbd307f0_d61b3aac",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 10
      },
      "lineNbr": 386,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-11-04T04:16:07Z",
      "side": 1,
      "message": "It\u0027s clipped to the complete (rotated) framebuffer area yes. There\u0027s no point in having the invalidate area be larger than the framebuffer area (because there\u0027s nothing outside the framebuffer area to invalidate :)\n\nThis is actually intentional because the new rectangle functions don\u0027t deal with integer overflow (because the user specified invalidate area is clipped here).",
      "parentUuid": "9879a37a_4e32b565",
      "revId": "91fd7dcb9c191fca54494e25b661580bca9cea1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}