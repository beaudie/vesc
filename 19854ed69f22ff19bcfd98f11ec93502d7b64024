{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "3f775fff_c4aedeb4",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 3384,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-06-22T19:02:10Z",
      "side": 1,
      "message": "Why can\u0027t we just set the bit here also, which will get processed during the next draw command?",
      "range": {
        "startLine": 3379,
        "startChar": 0,
        "endLine": 3384,
        "endChar": 5
      },
      "revId": "19854ed69f22ff19bcfd98f11ec93502d7b64024",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0294e29a_94a7b1d4",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 3384,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-06-23T03:28:45Z",
      "side": 1,
      "message": "Because this can get called while processing dirty bits (and should affect *this* draw call). I did make that mistake originally and one of the new end2end tests caught it.",
      "parentUuid": "3f775fff_c4aedeb4",
      "range": {
        "startLine": 3379,
        "startChar": 0,
        "endLine": 3384,
        "endChar": 5
      },
      "revId": "19854ed69f22ff19bcfd98f11ec93502d7b64024",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f6221bcd_540efcf8",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 4616,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-06-22T19:02:10Z",
      "side": 1,
      "message": "typo",
      "range": {
        "startLine": 4616,
        "startChar": 9,
        "endLine": 4616,
        "endChar": 11
      },
      "revId": "19854ed69f22ff19bcfd98f11ec93502d7b64024",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eb07facd_95a2c638",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 4616,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-06-23T03:28:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f6221bcd_540efcf8",
      "range": {
        "startLine": 4616,
        "startChar": 9,
        "endLine": 4616,
        "endChar": 11
      },
      "revId": "19854ed69f22ff19bcfd98f11ec93502d7b64024",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "310c1dfb_15e5b85c",
        "filename": "src/libANGLE/renderer/vulkan/QueryVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-06-22T12:53:06Z",
      "side": 1,
      "message": "nit: suggest you just make this a member of ContextVk",
      "range": {
        "startLine": 52,
        "startChar": 0,
        "endLine": 56,
        "endChar": 1
      },
      "revId": "19854ed69f22ff19bcfd98f11ec93502d7b64024",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "17efeadc_d9131a81",
        "filename": "src/libANGLE/renderer/vulkan/QueryVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-06-23T03:28:45Z",
      "side": 1,
      "message": "Nack. This is a detail of QueryVk that ContextVk is completely blind to.",
      "parentUuid": "310c1dfb_15e5b85c",
      "range": {
        "startLine": 52,
        "startChar": 0,
        "endLine": 56,
        "endChar": 1
      },
      "revId": "19854ed69f22ff19bcfd98f11ec93502d7b64024",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2b8ac130_cbac4b8c",
        "filename": "src/libANGLE/renderer/vulkan/QueryVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-06-23T11:29:11Z",
      "side": 1,
      "message": "It isn\u0027t, it\u0027s a feature which ContextVk has full visibility to.",
      "parentUuid": "17efeadc_d9131a81",
      "range": {
        "startLine": 52,
        "startChar": 0,
        "endLine": 56,
        "endChar": 1
      },
      "revId": "19854ed69f22ff19bcfd98f11ec93502d7b64024",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4935974d_de1ccc64",
        "filename": "src/libANGLE/renderer/vulkan/QueryVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-06-23T15:09:00Z",
      "side": 1,
      "message": "Whether the context supportsPipelineStatisticsQuery is, yes, but whether QueryVk is juggling queries to share them is not.\n\nWhen PG and XFB queries are shared, ContextVK only sees XFB queries and is none the wiser.\n\nThe nuance is that ContextVk knows that PGQ might need special handling (with rasterizer discard) and the relevant functions live in ContextVk. But whether it\u0027s emulated by sharing a query, and with which query, or how they interact are private information to QueryVk.",
      "parentUuid": "2b8ac130_cbac4b8c",
      "range": {
        "startLine": 52,
        "startChar": 0,
        "endLine": 56,
        "endChar": 1
      },
      "revId": "19854ed69f22ff19bcfd98f11ec93502d7b64024",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}