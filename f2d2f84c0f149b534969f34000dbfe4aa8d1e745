{
  "comments": [
    {
      "key": {
        "uuid": "919489d5_803edc5c",
        "filename": "src/libANGLE/ProgramExecutable.cpp",
        "patchSetId": 7
      },
      "lineNbr": 254,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-05-29T06:35:13Z",
      "side": 1,
      "message": "To remove the reliance on the Program[Pipeline]States, these now follow the pattern of:\n\nPPOs use: the \"has\" booleans (mHasGraphicsUniformBuffers)\nPrograms use: the real check (!getUniformBlocks().empty())\n\nExecutable can\u0027t treat Programs and PPOs differently since they won\u0027t be able to know which they are a part of, so they need to perform all of the relevant checks.\n\nProgram Executables don\u0027t want to update mHasGraphicsUniformBuffers everywhere a uniform block is added to it (duplicated data can get out of sync), so Executables in Programs still check the \u0027real\u0027 way.\n\nPPO Executables have to use the \"has\" booleans, since they don\u0027t have access to the underlying data structures for each Program (since these CLs are trying to remove the State pointers that differentiate Program vs PPO and give access to the Programs in the PPO).",
      "revId": "f2d2f84c0f149b534969f34000dbfe4aa8d1e745",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "617bf49a_69c675bb",
        "filename": "src/libANGLE/ProgramExecutable.cpp",
        "patchSetId": 7
      },
      "lineNbr": 254,
      "author": {
        "id": 1263724
      },
      "writtenOn": "2020-05-29T14:57:40Z",
      "side": 1,
      "message": "shouldn\u0027t this be mHasComputeUniformBuffers?\nWe are in the if (isCompute()) branch.",
      "range": {
        "startLine": 254,
        "startChar": 15,
        "endLine": 254,
        "endChar": 42
      },
      "revId": "f2d2f84c0f149b534969f34000dbfe4aa8d1e745",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eee441dd_956ed710",
        "filename": "src/libANGLE/ProgramExecutable.cpp",
        "patchSetId": 7
      },
      "lineNbr": 254,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-05-29T17:31:01Z",
      "side": 1,
      "message": "Oops, yup.   Got it backwards.",
      "parentUuid": "617bf49a_69c675bb",
      "range": {
        "startLine": 254,
        "startChar": 15,
        "endLine": 254,
        "endChar": 42
      },
      "revId": "f2d2f84c0f149b534969f34000dbfe4aa8d1e745",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c98b03dd_13d379c0",
        "filename": "src/libANGLE/ProgramExecutable.cpp",
        "patchSetId": 7
      },
      "lineNbr": 258,
      "author": {
        "id": 1263724
      },
      "writtenOn": "2020-05-29T14:57:40Z",
      "side": 1,
      "message": "mHasGraphicsUniformBuffers?",
      "range": {
        "startLine": 258,
        "startChar": 15,
        "endLine": 258,
        "endChar": 40
      },
      "revId": "f2d2f84c0f149b534969f34000dbfe4aa8d1e745",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "12dd1a73_ec105d1d",
        "filename": "src/libANGLE/ProgramExecutable.cpp",
        "patchSetId": 7
      },
      "lineNbr": 258,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-05-29T17:31:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c98b03dd_13d379c0",
      "range": {
        "startLine": 258,
        "startChar": 15,
        "endLine": 258,
        "endChar": 40
      },
      "revId": "f2d2f84c0f149b534969f34000dbfe4aa8d1e745",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2c8e868e_6a30bc51",
        "filename": "src/libANGLE/ProgramExecutable.cpp",
        "patchSetId": 7
      },
      "lineNbr": 264,
      "author": {
        "id": 1263724
      },
      "writtenOn": "2020-05-29T14:57:40Z",
      "side": 1,
      "message": "Would it be a little more efficient to have:\n\nreturn !getShaderStorageBlocks().empty() || (isCompute() ? mHasComputeStorageBuffers : mHasGraphicsStorageBuffers);\n\nThat would allow us to return immediately if !getShaderStorageBlocks().empty() is true, potentially save an if check.\nWould the compiler be smart enough to do that reordering for you?",
      "revId": "f2d2f84c0f149b534969f34000dbfe4aa8d1e745",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "491f8a0d_63b15cd2",
        "filename": "src/libANGLE/ProgramExecutable.cpp",
        "patchSetId": 7
      },
      "lineNbr": 264,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-05-29T17:31:01Z",
      "side": 1,
      "message": "Sounds reasonable to me.",
      "parentUuid": "2c8e868e_6a30bc51",
      "revId": "f2d2f84c0f149b534969f34000dbfe4aa8d1e745",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}