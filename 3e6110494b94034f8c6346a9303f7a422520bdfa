{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "21a07108_44164fef",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 36
      },
      "lineNbr": 0,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2022-07-29T16:04:36Z",
      "side": 1,
      "message": "Design looks good. Didn\u0027t review the compiler parts though.",
      "revId": "3e6110494b94034f8c6346a9303f7a422520bdfa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "47c5b510_1c16a085",
        "filename": "src/libANGLE/renderer/CompilerImpl.h",
        "patchSetId": 36
      },
      "lineNbr": 20,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2022-07-29T16:04:36Z",
      "side": 1,
      "message": "I like `BackendFeatures` but let\u0027s scope it to `CompilerBackendFeatures`.",
      "range": {
        "startLine": 20,
        "startChar": 7,
        "endLine": 20,
        "endChar": 22
      },
      "revId": "3e6110494b94034f8c6346a9303f7a422520bdfa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e27e10c4_493d0c5a",
        "filename": "src/libANGLE/renderer/CompilerImpl.h",
        "patchSetId": 36
      },
      "lineNbr": 20,
      "author": {
        "id": 1543967
      },
      "writtenOn": "2022-07-29T17:33:46Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "47c5b510_1c16a085",
      "range": {
        "startLine": 20,
        "startChar": 7,
        "endLine": 20,
        "endChar": 22
      },
      "revId": "3e6110494b94034f8c6346a9303f7a422520bdfa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "194f256b_17155a48",
        "filename": "src/libANGLE/renderer/CompilerImpl.h",
        "patchSetId": 36
      },
      "lineNbr": 38,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2022-07-29T16:04:36Z",
      "side": 1,
      "message": "Instead of a protected member, I\u0027d just eat the cost of returning by value (only one member) for a cleaner design.",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 38,
        "endChar": 37
      },
      "revId": "3e6110494b94034f8c6346a9303f7a422520bdfa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "668c8aa4_d5abab4b",
        "filename": "src/libANGLE/renderer/CompilerImpl.h",
        "patchSetId": 36
      },
      "lineNbr": 38,
      "author": {
        "id": 1543967
      },
      "writtenOn": "2022-07-29T17:33:46Z",
      "side": 1,
      "message": "I\u0027m not sure I quite follow. What is the change that you\u0027re proposing?\n\n(I made mBackendFeatures protected so ContextGL::ContextGL could assign to mBackendFeatures.fragmentSynchronizationType)",
      "parentUuid": "194f256b_17155a48",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 38,
        "endChar": 37
      },
      "revId": "3e6110494b94034f8c6346a9303f7a422520bdfa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ee027eab_ffb58c3c",
        "filename": "src/libANGLE/renderer/CompilerImpl.h",
        "patchSetId": 36
      },
      "lineNbr": 38,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2022-08-01T19:11:51Z",
      "side": 1,
      "message": "I\u0027m proposing making the getter virtual:\n\n```\nvirtual CompilerBackendFeatures getBackendFeatures() const { return CompilerBackendFeatures(); }\n```\n\nand then override it in CompilerGL.",
      "parentUuid": "668c8aa4_d5abab4b",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 38,
        "endChar": 37
      },
      "revId": "3e6110494b94034f8c6346a9303f7a422520bdfa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}