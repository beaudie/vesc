{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "cf2c53ec_47cb9ac1",
        "filename": "src/tests/gl_tests/PixelLocalStorageTest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 512,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-06-16T17:43:10Z",
      "side": 1,
      "message": "nit: `workaroundImageLoadFailures` or something like that",
      "revId": "9285ec676fedaa4923b8ef059a06542898a1f81c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e2d5a19e_99c166f2",
        "filename": "src/tests/gl_tests/PixelLocalStorageTest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 512,
      "author": {
        "id": 1543967
      },
      "writtenOn": "2022-06-17T00:20:43Z",
      "side": 1,
      "message": "WDYT about \"hasImageLoadANGLEBug7398\"? Did you not like the bug number or the lack of descriptiveness?",
      "parentUuid": "cf2c53ec_47cb9ac1",
      "revId": "9285ec676fedaa4923b8ef059a06542898a1f81c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e0e0e52d_926f8f5b",
        "filename": "src/tests/gl_tests/PixelLocalStorageTest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 512,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-06-17T19:41:45Z",
      "side": 1,
      "message": "I\u0027d very much prefer `hasImageLoadBug`. The bug number doesn\u0027t belong to the function name",
      "parentUuid": "e2d5a19e_99c166f2",
      "revId": "9285ec676fedaa4923b8ef059a06542898a1f81c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b3dbe3c_99b07689",
        "filename": "src/tests/gl_tests/PixelLocalStorageTest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1092,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-06-16T17:43:10Z",
      "side": 1,
      "message": "Why is `return` disallowed?",
      "revId": "9285ec676fedaa4923b8ef059a06542898a1f81c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9316a97a_d696d9c8",
        "filename": "src/tests/gl_tests/PixelLocalStorageTest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1092,
      "author": {
        "id": 1543967
      },
      "writtenOn": "2022-06-17T00:20:43Z",
      "side": 1,
      "message": "Simply because GL_ARB_fragment_shader_interlock isn\u0027t allowed after a return from main.",
      "parentUuid": "2b3dbe3c_99b07689",
      "revId": "9285ec676fedaa4923b8ef059a06542898a1f81c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d6bc85b8_fefec4e6",
        "filename": "src/tests/gl_tests/PixelLocalStorageTest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1093,
      "author": {
        "id": 1543967
      },
      "writtenOn": "2022-06-14T04:49:48Z",
      "side": 1,
      "message": "We can\u0027t call discard after pixelLocalStore because that will behave differently if we\u0027re implemented on top of shader images vs render target attachments.\n\nIs it too complicated to define a compiler error iff any codepath can call pixelLocalStore before the discard?\n\nI hope we don\u0027t have to disallow discard completely.",
      "revId": "9285ec676fedaa4923b8ef059a06542898a1f81c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b12efd5f_da911362",
        "filename": "src/tests/gl_tests/PixelLocalStorageTest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1093,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-06-14T15:37:25Z",
      "side": 1,
      "message": "Should be quite easy",
      "parentUuid": "d6bc85b8_fefec4e6",
      "revId": "9285ec676fedaa4923b8ef059a06542898a1f81c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "67c94df7_760513a8",
        "filename": "src/tests/gl_tests/PixelLocalStorageTest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1093,
      "author": {
        "id": 1543967
      },
      "writtenOn": "2022-06-14T19:18:00Z",
      "side": 1,
      "message": "Awesome ðŸ™Œ",
      "parentUuid": "b12efd5f_da911362",
      "revId": "9285ec676fedaa4923b8ef059a06542898a1f81c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "00c85fe3_8a72bb33",
        "filename": "src/tests/gl_tests/PixelLocalStorageTest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1095,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-06-16T17:43:10Z",
      "side": 1,
      "message": "I highly recommend splitting this into N test, where every test is checking one such situation. That way, if there\u0027s a bug with stencil test for example, it\u0027s immediately obvious (and easier to debug). If you suspect the sequence of X then Y matters, that could be another test.",
      "revId": "9285ec676fedaa4923b8ef059a06542898a1f81c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7f57bf9d_32deb71f",
        "filename": "src/tests/gl_tests/PixelLocalStorageTest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1095,
      "author": {
        "id": 1543967
      },
      "writtenOn": "2022-06-17T00:20:43Z",
      "side": 1,
      "message": "Done. I like this much better!",
      "parentUuid": "00c85fe3_8a72bb33",
      "revId": "9285ec676fedaa4923b8ef059a06542898a1f81c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "92d828f0_fdf6c665",
        "filename": "src/tests/gl_tests/PixelLocalStorageTest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1137,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-06-16T17:43:10Z",
      "side": 1,
      "message": "Please use this pattern instead:\n\n```\nconstexpr char kVS[] \u003d R\"(...)\";\nconstexpr char kFS[] \u003d R\"(...)\";\n\nANGLE_GL_PROGRAM(blitProgram, kVS, kFS);\n```\n\nThat creates the variable, calls `makeRaster` and asserts the program is valid.",
      "range": {
        "startLine": 1116,
        "startChar": 0,
        "endLine": 1137,
        "endChar": 37
      },
      "revId": "9285ec676fedaa4923b8ef059a06542898a1f81c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "933cb257_64517c54",
        "filename": "src/tests/gl_tests/PixelLocalStorageTest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1137,
      "author": {
        "id": 1543967
      },
      "writtenOn": "2022-06-17T00:20:43Z",
      "side": 1,
      "message": "I ended up moving it into a helper method on the class. Does the new format look good?",
      "parentUuid": "92d828f0_fdf6c665",
      "range": {
        "startLine": 1116,
        "startChar": 0,
        "endLine": 1137,
        "endChar": 37
      },
      "revId": "9285ec676fedaa4923b8ef059a06542898a1f81c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ba2134eb_71fccfa3",
        "filename": "src/tests/gl_tests/PixelLocalStorageTest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1137,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-06-17T19:41:45Z",
      "side": 1,
      "message": "LGTM",
      "parentUuid": "933cb257_64517c54",
      "range": {
        "startLine": 1116,
        "startChar": 0,
        "endLine": 1137,
        "endChar": 37
      },
      "revId": "9285ec676fedaa4923b8ef059a06542898a1f81c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "472ed9d7_67c476d3",
        "filename": "src/tests/gl_tests/PixelLocalStorageTest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1141,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-06-16T17:43:10Z",
      "side": 1,
      "message": "nit: Use function instead! You can pass `GLTexture` as `GLTexture \u0026` or `GLuint`",
      "revId": "9285ec676fedaa4923b8ef059a06542898a1f81c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "26cf6bd2_0d921acf",
        "filename": "src/tests/gl_tests/PixelLocalStorageTest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1141,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2022-06-16T18:37:06Z",
      "side": 1,
      "message": "lambdas can work too IMO",
      "parentUuid": "472ed9d7_67c476d3",
      "revId": "9285ec676fedaa4923b8ef059a06542898a1f81c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "38857d15_a8c5af4a",
        "filename": "src/tests/gl_tests/PixelLocalStorageTest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1141,
      "author": {
        "id": 1543967
      },
      "writtenOn": "2022-06-17T00:20:43Z",
      "side": 1,
      "message": "I initially put it in a MACRO so the __LINE__ output would be helpful for debugging, but this one is unruly. I kept the MACRO but moved most the logic to a helper function on the class. Does this work?",
      "parentUuid": "26cf6bd2_0d921acf",
      "revId": "9285ec676fedaa4923b8ef059a06542898a1f81c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5125b793_027da9f9",
        "filename": "src/tests/gl_tests/PixelLocalStorageTest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1141,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-06-17T19:41:45Z",
      "side": 1,
      "message": "Don\u0027t all of the expectations now show the same line if there\u0027s failure? It\u0027s just tests, I\u0027d recommend copy-pasting the three lines everywhere, and let gtest pinpoint the failure to its own line. Also makes it easier to modify individual tests.",
      "parentUuid": "38857d15_a8c5af4a",
      "revId": "9285ec676fedaa4923b8ef059a06542898a1f81c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}