{
  "comments": [
    {
      "key": {
        "uuid": "53ccdd7c_a8315fa7",
        "filename": "src/compiler/translator/Cache.cpp",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-06-30T17:26:36Z",
      "side": 1,
      "message": "Add the ANGLE license to the top, and a comment with the file description (see existing files for examples)",
      "revId": "3570ba535e6002287b469916d90960bf3b385e9f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5383fd1c_c4f752c8",
        "filename": "src/compiler/translator/Cache.cpp",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1129096
      },
      "writtenOn": "2015-06-30T23:08:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "53ccdd7c_a8315fa7",
      "revId": "3570ba535e6002287b469916d90960bf3b385e9f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "53277df4_6426867b",
        "filename": "src/compiler/translator/Cache.cpp",
        "patchSetId": 3
      },
      "lineNbr": 38,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-06-30T17:26:36Z",
      "side": 1,
      "message": "SafeDelete",
      "range": {
        "startLine": 38,
        "startChar": 4,
        "endLine": 38,
        "endChar": 10
      },
      "revId": "3570ba535e6002287b469916d90960bf3b385e9f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "339be98e_4ab7c7c0",
        "filename": "src/compiler/translator/Cache.cpp",
        "patchSetId": 3
      },
      "lineNbr": 38,
      "author": {
        "id": 1129096
      },
      "writtenOn": "2015-06-30T23:08:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "53277df4_6426867b",
      "range": {
        "startLine": 38,
        "startChar": 4,
        "endLine": 38,
        "endChar": 10
      },
      "revId": "3570ba535e6002287b469916d90960bf3b385e9f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "73f6419f_00ea14eb",
        "filename": "src/compiler/translator/Cache.cpp",
        "patchSetId": 3
      },
      "lineNbr": 49,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-06-30T17:26:36Z",
      "side": 1,
      "message": "make a constructor if you need this kind of init",
      "range": {
        "startLine": 48,
        "startChar": 4,
        "endLine": 49,
        "endChar": 47
      },
      "revId": "3570ba535e6002287b469916d90960bf3b385e9f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d3d44d30_f6068057",
        "filename": "src/compiler/translator/Cache.cpp",
        "patchSetId": 3
      },
      "lineNbr": 49,
      "author": {
        "id": 1129096
      },
      "writtenOn": "2015-06-30T19:25:12Z",
      "side": 1,
      "message": "Constructor will look ugly, it will basically assign parameters into fixed indexes. It won\u0027t give us much safety or readability since this function is the only place where it will be used.\n\nThe only reason I went with values[5] is because I wanted to simplify the key. The proper way is to create a struct with all properly typed members and implement operator\u003c by comparing them.\n\nActually, I think I\u0027ll do that and we\u0027ll see how it looks.",
      "parentUuid": "73f6419f_00ea14eb",
      "range": {
        "startLine": 48,
        "startChar": 4,
        "endLine": 49,
        "endChar": 47
      },
      "revId": "3570ba535e6002287b469916d90960bf3b385e9f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "53277df4_8438da8d",
        "filename": "src/compiler/translator/Cache.cpp",
        "patchSetId": 3
      },
      "lineNbr": 56,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-06-30T17:26:36Z",
      "side": 1,
      "message": "don\u0027t need the else block since the above returns",
      "range": {
        "startLine": 55,
        "startChar": 3,
        "endLine": 56,
        "endChar": 5
      },
      "revId": "3570ba535e6002287b469916d90960bf3b385e9f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "339be98e_0a809fd2",
        "filename": "src/compiler/translator/Cache.cpp",
        "patchSetId": 3
      },
      "lineNbr": 56,
      "author": {
        "id": 1129096
      },
      "writtenOn": "2015-06-30T23:08:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "53277df4_8438da8d",
      "range": {
        "startLine": 55,
        "startChar": 3,
        "endLine": 56,
        "endChar": 5
      },
      "revId": "3570ba535e6002287b469916d90960bf3b385e9f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "53277df4_e411d607",
        "filename": "src/compiler/translator/Cache.cpp",
        "patchSetId": 3
      },
      "lineNbr": 62,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-06-30T17:26:36Z",
      "side": 1,
      "message": "this is c++11 syntax, we don\u0027t support that on some platforms (usually OSX+Android)",
      "range": {
        "startLine": 62,
        "startChar": 28,
        "endLine": 62,
        "endChar": 39
      },
      "revId": "3570ba535e6002287b469916d90960bf3b385e9f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5383fd1c_242e6ece",
        "filename": "src/compiler/translator/Cache.cpp",
        "patchSetId": 3
      },
      "lineNbr": 62,
      "author": {
        "id": 1129096
      },
      "writtenOn": "2015-06-30T23:08:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "53277df4_e411d607",
      "range": {
        "startLine": 62,
        "startChar": 28,
        "endLine": 62,
        "endChar": 39
      },
      "revId": "3570ba535e6002287b469916d90960bf3b385e9f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "73f6419f_80d60433",
        "filename": "src/compiler/translator/Cache.h",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-06-30T17:26:36Z",
      "side": 1,
      "message": "same comments about license and description",
      "revId": "3570ba535e6002287b469916d90960bf3b385e9f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d3d44d30_5f3547df",
        "filename": "src/compiler/translator/Cache.h",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1129096
      },
      "writtenOn": "2015-06-30T23:08:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "73f6419f_80d60433",
      "revId": "3570ba535e6002287b469916d90960bf3b385e9f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "93fbb585_290bba99",
        "filename": "src/compiler/translator/Cache.h",
        "patchSetId": 3
      },
      "lineNbr": 56,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-06-30T17:26:36Z",
      "side": 1,
      "message": "personally I\u0027d suggest doing a union of 5 uint8_t (+3 padding) and a uint64_t here, then you don\u0027t need memcmp. Also it makes the padding explicit, whereas in your current code you are assigning unsigned char to int. Open to your thoughts on this.",
      "range": {
        "startLine": 56,
        "startChar": 8,
        "endLine": 56,
        "endChar": 11
      },
      "revId": "3570ba535e6002287b469916d90960bf3b385e9f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b3a6f9d3_bdac5fab",
        "filename": "src/compiler/translator/Cache.h",
        "patchSetId": 3
      },
      "lineNbr": 56,
      "author": {
        "id": 1129096
      },
      "writtenOn": "2015-06-30T19:25:12Z",
      "side": 1,
      "message": "What I like about ints is that they will always work - no matter which values are in those enums they will fit into int. We can pack enums into bytes, but that will require us to maintain (and check) \u0027max\u0027 enum values. Another possibility, which requires C++11 is to specify enum size, so we can be sure all values fit into certain type.",
      "parentUuid": "93fbb585_290bba99",
      "range": {
        "startLine": 56,
        "startChar": 8,
        "endLine": 56,
        "endChar": 11
      },
      "revId": "3570ba535e6002287b469916d90960bf3b385e9f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d3d44d30_366f58f5",
        "filename": "src/compiler/translator/Cache.h",
        "patchSetId": 3
      },
      "lineNbr": 56,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-06-30T19:31:59Z",
      "side": 1,
      "message": "Adding a max enum value to these and doing a debug assert seems like a good option here, and I think that\u0027s what I\u0027d suggest. I find it implausible that we\u0027d have more than 30 or 40 enums in any of these categories, so 255 values should be enough. The assert would be for peace of mind. What\u0027d you also get with a single int is faster comparisons for the map, which is relevant.",
      "parentUuid": "b3a6f9d3_bdac5fab",
      "range": {
        "startLine": 56,
        "startChar": 8,
        "endLine": 56,
        "endChar": 11
      },
      "revId": "3570ba535e6002287b469916d90960bf3b385e9f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "53ccdd7c_2861cf8b",
        "filename": "src/compiler/translator/Cache.h",
        "patchSetId": 3
      },
      "lineNbr": 61,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-06-30T17:26:36Z",
      "side": 1,
      "message": "mTypes",
      "range": {
        "startLine": 61,
        "startChar": 12,
        "endLine": 61,
        "endChar": 17
      },
      "revId": "3570ba535e6002287b469916d90960bf3b385e9f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b3a6f9d3_26e15cbd",
        "filename": "src/compiler/translator/Cache.h",
        "patchSetId": 3
      },
      "lineNbr": 61,
      "author": {
        "id": 1129096
      },
      "writtenOn": "2015-06-30T23:08:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "53ccdd7c_2861cf8b",
      "range": {
        "startLine": 61,
        "startChar": 12,
        "endLine": 61,
        "endChar": 17
      },
      "revId": "3570ba535e6002287b469916d90960bf3b385e9f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "53277df4_24cace14",
        "filename": "src/compiler/translator/Cache.h",
        "patchSetId": 3
      },
      "lineNbr": 62,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-06-30T17:26:36Z",
      "side": 1,
      "message": "mAllocator",
      "range": {
        "startLine": 62,
        "startChar": 19,
        "endLine": 62,
        "endChar": 28
      },
      "revId": "3570ba535e6002287b469916d90960bf3b385e9f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b3a6f9d3_0699c056",
        "filename": "src/compiler/translator/Cache.h",
        "patchSetId": 3
      },
      "lineNbr": 62,
      "author": {
        "id": 1129096
      },
      "writtenOn": "2015-06-30T23:08:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "53277df4_24cace14",
      "range": {
        "startLine": 62,
        "startChar": 19,
        "endLine": 62,
        "endChar": 28
      },
      "revId": "3570ba535e6002287b469916d90960bf3b385e9f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "73f6419f_25676249",
        "filename": "src/compiler/translator/Cache.h",
        "patchSetId": 3
      },
      "lineNbr": 64,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-06-30T17:26:36Z",
      "side": 1,
      "message": "sCache",
      "range": {
        "startLine": 64,
        "startChar": 19,
        "endLine": 64,
        "endChar": 24
      },
      "revId": "3570ba535e6002287b469916d90960bf3b385e9f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d3d44d30_3f328bf9",
        "filename": "src/compiler/translator/Cache.h",
        "patchSetId": 3
      },
      "lineNbr": 64,
      "author": {
        "id": 1129096
      },
      "writtenOn": "2015-06-30T23:08:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "73f6419f_25676249",
      "range": {
        "startLine": 64,
        "startChar": 19,
        "endLine": 64,
        "endChar": 24
      },
      "revId": "3570ba535e6002287b469916d90960bf3b385e9f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "53ccdd7c_e841a7ba",
        "filename": "src/compiler/translator/InitializeDll.cpp",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-06-30T17:26:36Z",
      "side": 1,
      "message": "nit: include order",
      "range": {
        "startLine": 6,
        "startChar": 0,
        "endLine": 10,
        "endChar": 38
      },
      "revId": "3570ba535e6002287b469916d90960bf3b385e9f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "33c4c97c_4dcd9955",
        "filename": "src/compiler/translator/InitializeDll.cpp",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 1129096
      },
      "writtenOn": "2015-06-30T23:08:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "53ccdd7c_e841a7ba",
      "range": {
        "startLine": 6,
        "startChar": 0,
        "endLine": 10,
        "endChar": 38
      },
      "revId": "3570ba535e6002287b469916d90960bf3b385e9f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}