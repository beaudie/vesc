{
  "comments": [
    {
      "key": {
        "uuid": "37b082be_a71b59e6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 8,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2016-12-22T15:36:13Z",
      "side": 1,
      "message": "Put this on one line if possible \"D3D11: Skip color blitting when the read buffer is disabled.\"",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 8,
        "endChar": 20
      },
      "revId": "1416b737f74d4261bc2c8c97d83e0026e33a4903",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "37b082be_ecddadfc",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 8,
      "author": {
        "id": 1138134
      },
      "writtenOn": "2016-12-23T08:05:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "37b082be_a71b59e6",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 8,
        "endChar": 20
      },
      "revId": "1416b737f74d4261bc2c8c97d83e0026e33a4903",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "37b082be_47206510",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2016-12-22T15:36:13Z",
      "side": 1,
      "message": "Is there a bug ID for this?",
      "revId": "1416b737f74d4261bc2c8c97d83e0026e33a4903",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "37b082be_38922738",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-12-22T21:56:30Z",
      "side": 1,
      "message": "+1, needs a bug id.",
      "parentUuid": "37b082be_47206510",
      "revId": "1416b737f74d4261bc2c8c97d83e0026e33a4903",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "37b082be_acd7b5da",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1138134
      },
      "writtenOn": "2016-12-23T08:05:40Z",
      "side": 1,
      "message": "I created a angle bug now",
      "parentUuid": "37b082be_47206510",
      "revId": "1416b737f74d4261bc2c8c97d83e0026e33a4903",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "37b082be_ccd471d8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1138134
      },
      "writtenOn": "2016-12-23T08:05:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "37b082be_38922738",
      "revId": "1416b737f74d4261bc2c8c97d83e0026e33a4903",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "37b082be_47a5c587",
        "filename": "src/libANGLE/renderer/d3d/FramebufferD3D.cpp",
        "patchSetId": 2
      },
      "lineNbr": 271,
      "author": {
        "id": 1138134
      },
      "writtenOn": "2016-12-22T15:14:52Z",
      "side": 1,
      "message": "Some thoughts about the code before real blitting, \n1) we can remove corresponding bitfield from mask directly, then If mask it zero, we can return early. If not, only blit bitfields those are really meaningful.\n2) we can move the main part of this function to high-level class, say FramebufferImpl.cpp. The logic is not specific for d3d backend, it can be applied to gl/gles/egl backends too.\n3) Is it OK to put the logic into validation code? I mean remove unnecessary bitfields from mask during validation. Then return early if mask equals to zero. I saw some validation functions (with *Robust*) can change the original parameter(s).\n\nWDYT?",
      "revId": "1416b737f74d4261bc2c8c97d83e0026e33a4903",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "37b082be_e71151ca",
        "filename": "src/libANGLE/renderer/d3d/FramebufferD3D.cpp",
        "patchSetId": 2
      },
      "lineNbr": 271,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2016-12-22T15:36:13Z",
      "side": 1,
      "message": "I think this code is fine as is or it can be moved into the gl::Framebuffer class.  I\u0027d prefer not to modify any parameters at the validation level, the Robust entry points don\u0027t modify original arguments but copies of them.",
      "parentUuid": "37b082be_47a5c587",
      "revId": "1416b737f74d4261bc2c8c97d83e0026e33a4903",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "37b082be_98831bee",
        "filename": "src/libANGLE/renderer/d3d/FramebufferD3D.cpp",
        "patchSetId": 2
      },
      "lineNbr": 271,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-12-22T21:56:30Z",
      "side": 1,
      "message": "yes, you should put this hasEnableDrawBuffer check in gl::Framebuffer::blit, or gl::Context::blitFramebuffer. Since the latter method already has the drawFramebuffer pointer I would put it there.",
      "parentUuid": "37b082be_e71151ca",
      "revId": "1416b737f74d4261bc2c8c97d83e0026e33a4903",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "37b082be_6cd1bde3",
        "filename": "src/libANGLE/renderer/d3d/FramebufferD3D.cpp",
        "patchSetId": 2
      },
      "lineNbr": 271,
      "author": {
        "id": 1138134
      },
      "writtenOn": "2016-12-23T08:05:40Z",
      "side": 1,
      "message": "Got it.",
      "parentUuid": "37b082be_e71151ca",
      "revId": "1416b737f74d4261bc2c8c97d83e0026e33a4903",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "37b082be_8cce7944",
        "filename": "src/libANGLE/renderer/d3d/FramebufferD3D.cpp",
        "patchSetId": 2
      },
      "lineNbr": 271,
      "author": {
        "id": 1138134
      },
      "writtenOn": "2016-12-23T08:05:40Z",
      "side": 1,
      "message": "Agreed. I will try to submit another patch to do this code refactoring.",
      "parentUuid": "37b082be_98831bee",
      "revId": "1416b737f74d4261bc2c8c97d83e0026e33a4903",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}