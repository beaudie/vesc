{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "aa348115_55f41582",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 1
      },
      "lineNbr": 160,
      "author": {
        "id": 1520902
      },
      "writtenOn": "2024-10-31T01:33:05Z",
      "side": 1,
      "message": "Can we add a build flag to control the value of `kEnableAEPRequirementLogging`?\n\nSee this example of\n\n1. [defining the build flag](https://source.chromium.org/chromium/chromium/src/+/main:third_party/angle/BUILD.gn;l\u003d238;drc\u003d78f146e3ad4bbb0f37db26ae781ec89f3dc99e83)\n\n2. [declaring the build flag to false](https://source.chromium.org/chromium/chromium/src/+/main:third_party/angle/gni/angle.gni;l\u003d247;drc\u003d78f146e3ad4bbb0f37db26ae781ec89f3dc99e83)\n\n3. [use the result of the build flag](https://source.chromium.org/chromium/chromium/src/+/main:third_party/dawn/third_party/angle/src/libANGLE/renderer/vulkan/vk_cache_utils.cpp;l\u003d30;drc\u003d08c1724fec38b9cf5242ed29e82bc4e9437aa650)",
      "revId": "793125e00ac7a8aca2dbc0106235a731b447798d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b8193ca_1cb8770b",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 1
      },
      "lineNbr": 160,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-10-31T02:10:49Z",
      "side": 1,
      "message": "Too niche IMO, would we ever want a test/release config where this is permanently enabled? If this is for local debugging only, we can just toggle it locally.",
      "parentUuid": "aa348115_55f41582",
      "revId": "793125e00ac7a8aca2dbc0106235a731b447798d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1508d259_163f9f9c",
        "filename": "src/libANGLE/Context.cpp",
        "patchSetId": 1
      },
      "lineNbr": 160,
      "author": {
        "id": 1520902
      },
      "writtenOn": "2024-10-31T16:57:13Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "2b8193ca_1cb8770b",
      "revId": "793125e00ac7a8aca2dbc0106235a731b447798d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "793125e00ac7a8aca2dbc0106235a731b447798d",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "No-Unresolved-Comments",
        "description": {
          "value": "Changes that have unresolved comments are not submittable. Unless overridden with Unresolved-Comment-Reason: \u003creason\u003e line in change message."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:unresolved"
          }
        },
        "submittabilityExpression": {
          "expressionString": "-has:unresolved"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "message:\"^.*Unresolved-Comment-Reason:.*\""
          }
        },
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:unresolved"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["has:unresolved"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-has:unresolved"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*Unresolved-Comment-Reason:.*\""},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "patchSetCommitId": "793125e00ac7a8aca2dbc0106235a731b447798d",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval. Using a trusted device is required, see go/gerrit-onboarding#review-enforcement."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "793125e00ac7a8aca2dbc0106235a731b447798d",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "793125e00ac7a8aca2dbc0106235a731b447798d",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}