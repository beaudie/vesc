{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a27378a0_b0f40220",
        "filename": "src/libANGLE/renderer/vulkan/CommandProcessor.cpp",
        "patchSetId": 4
      },
      "lineNbr": 838,
      "author": {
        "id": 1169885
      },
      "writtenOn": "2023-08-29T18:40:56Z",
      "side": 0,
      "message": "Pretty sure we have to skip this, because of a couple reasons:\n\n- waitForAllWorkToBeSubmitted *also* tries to acquire mTaskEnqueueMutex\n- waitForAllWorkToBeSubmitted should be failing anyway, because we\u0027re in a \"device lost\" state\n\nWould appreciate suggestions if there\u0027s something better we should be doing here.",
      "revId": "e8b13feeed162c3a622da8048e05f7577cdd1904",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "77dab8c9_abc52022",
        "filename": "src/libANGLE/renderer/vulkan/CommandProcessor.cpp",
        "patchSetId": 4
      },
      "lineNbr": 838,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2023-08-29T20:48:48Z",
      "side": 0,
      "message": "I think the idea is that flush everything to commandQueue and then let commandQueue drop them. We could just drop them here while holding mTaskEnqueueMutex lock.",
      "parentUuid": "a27378a0_b0f40220",
      "revId": "e8b13feeed162c3a622da8048e05f7577cdd1904",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f20728e4_371764f2",
        "filename": "src/libANGLE/renderer/vulkan/CommandProcessor.cpp",
        "patchSetId": 4
      },
      "lineNbr": 838,
      "author": {
        "id": 1169885
      },
      "writtenOn": "2023-08-29T23:42:56Z",
      "side": 0,
      "message": "What\u0027s the best way to do that?\n\nIf we just do `mTaskQueue.clear()`, it doesn\u0027t ever hit the appropriate `checkAndPopPendingError` early enough and doesn\u0027t realize the device is lost before `CommandProcessor::waitForPresentToBeSubmitted`, which trips an `ASSERT` in there.\n\nI\u0027m also not really simulating a more realistic `VK_ERROR_DEVICE_LOST` state. My hacky error injection mechanism is to just replace the `vkQueueSubmit` return value after a few successful submits. That obviously doesn\u0027t affect any other device functions which would likely be failing after that. Earlier today, I was suggesting to Shahbaz that it would be really nice to have an error-injection layer to simulate a device loss more accurately.",
      "parentUuid": "77dab8c9_abc52022",
      "revId": "e8b13feeed162c3a622da8048e05f7577cdd1904",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "24db4865_cc7a0e58",
        "filename": "src/libANGLE/renderer/vulkan/CommandProcessor.cpp",
        "patchSetId": 4
      },
      "lineNbr": 838,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2023-08-30T21:15:47Z",
      "side": 0,
      "message": "How about have a version of waitForAllWorkToBeSubmitted that assumes caller already took the lock? i.e, waitForAllWorkToBeSubmittedLocked()?",
      "parentUuid": "f20728e4_371764f2",
      "revId": "e8b13feeed162c3a622da8048e05f7577cdd1904",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b02ad2f_0d339f2d",
        "filename": "src/libANGLE/renderer/vulkan/CommandProcessor.cpp",
        "patchSetId": 4
      },
      "lineNbr": 838,
      "author": {
        "id": 1169885
      },
      "writtenOn": "2023-08-31T16:48:31Z",
      "side": 0,
      "message": "I tried something like that first, but there was something wrong with that approach. I can\u0027t remember *what* at the moment. I may re-try that approach in a bit.",
      "parentUuid": "24db4865_cc7a0e58",
      "revId": "e8b13feeed162c3a622da8048e05f7577cdd1904",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}