{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "6f590780_1e7717c7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2021-09-15T21:22:36Z",
      "side": 1,
      "message": "Thanks for quick fix and a test.",
      "revId": "c2a7629342a3db1347d33527707ba3c831af1dfc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "10f91f12_fa30a754",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 655,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-09-16T19:57:18Z",
      "side": 1,
      "message": "This is why I believe it\u0027s better to call this message: StorageChanged instead of SubjectGhosted. It doesn\u0027t matter for the front-end what happened to the contents here, but rather that the underlying storage has changed.\n\nThat also better matches the name of the other messages; BindingChanged, ContentsChanged etc. WDYT?",
      "range": {
        "startLine": 653,
        "startChar": 42,
        "endLine": 655,
        "endChar": 28
      },
      "revId": "c2a7629342a3db1347d33527707ba3c831af1dfc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d88cd2c8_76860d60",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 655,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-09-16T21:04:59Z",
      "side": 1,
      "message": "Be cautious about overloading messages with different events. The implementation storage is not the same as the front-end\u0027s understanding of the storage. i.e. it sounds a lot like a BufferData or BufferStorage call just happened which could need different handling. \n\n+1 to making dirty bits super-specific to the event that\u0027s firing them. We can micro-optimize and bin together common events to improve perf later if it becomes a performance concern.",
      "parentUuid": "10f91f12_fa30a754",
      "range": {
        "startLine": 653,
        "startChar": 42,
        "endLine": 655,
        "endChar": 28
      },
      "revId": "c2a7629342a3db1347d33527707ba3c831af1dfc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3bb808d9_7f663964",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 655,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-09-17T01:40:58Z",
      "side": 1,
      "message": "Ack. No big deal (and not blocking the change on this)\n\nInternalMemoryAllocationChanged?",
      "parentUuid": "d88cd2c8_76860d60",
      "range": {
        "startLine": 653,
        "startChar": 42,
        "endLine": 655,
        "endChar": 28
      },
      "revId": "c2a7629342a3db1347d33527707ba3c831af1dfc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a9631ec3_ec4ecd71",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 655,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-09-20T23:37:02Z",
      "side": 1,
      "message": "With the change to always notify in acquireBufferHelper(), I also updated to:\n\n  InternalMemoryAllocationChanged",
      "parentUuid": "3bb808d9_7f663964",
      "range": {
        "startLine": 653,
        "startChar": 42,
        "endLine": 655,
        "endChar": 28
      },
      "revId": "c2a7629342a3db1347d33527707ba3c831af1dfc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c7f112c4_437d3002",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 656,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-09-15T18:13:02Z",
      "side": 1,
      "message": "would it make more sense to put this notification in acquireBufferHelper? I see acquire is called in one place you wouldn\u0027t want to set the dirty bit, so you could pass in a flag indicating \"don\u0027t notify\"... but I\u0027m not sure that\u0027s much better than what you have now. LGTM either way, just wanted to float the idea.",
      "range": {
        "startLine": 656,
        "startChar": 0,
        "endLine": 656,
        "endChar": 26
      },
      "revId": "c2a7629342a3db1347d33527707ba3c831af1dfc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5a500738_989032ee",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 656,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-09-15T22:14:06Z",
      "side": 1,
      "message": "I prefer this version, rather than a boolean that would have to be looked up anyway along with the extra branching to handle it.",
      "parentUuid": "c7f112c4_437d3002",
      "range": {
        "startLine": 656,
        "startChar": 0,
        "endLine": 656,
        "endChar": 26
      },
      "revId": "c2a7629342a3db1347d33527707ba3c831af1dfc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ec1de024_bcf20898",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 656,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-09-20T18:26:01Z",
      "side": 1,
      "message": "Tim, I suggest we just always notify the front-end in acquireAndUpdate. I just ran into the same issue as I was concerned about when looking at texture buffers. Currently they always trigger a texture refresh when the buffer contents change, when really they only want to update when the underlying buffer object changes. You could pass in a boolean on setData calls to not fire, but it would be better to over-fire (not pass in boolean) than miss updates (status quo).",
      "parentUuid": "5a500738_989032ee",
      "range": {
        "startLine": 656,
        "startChar": 0,
        "endLine": 656,
        "endChar": 26
      },
      "revId": "c2a7629342a3db1347d33527707ba3c831af1dfc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b3676cb8_1276ef30",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 656,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-09-20T23:37:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ec1de024_bcf20898",
      "range": {
        "startLine": 656,
        "startChar": 0,
        "endLine": 656,
        "endChar": 26
      },
      "revId": "c2a7629342a3db1347d33527707ba3c831af1dfc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e6943bae_9914fe30",
        "filename": "src/tests/gl_tests/TextureTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 9718,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-09-16T19:57:18Z",
      "side": 1,
      "message": "nit: ... last draw call succeeds",
      "range": {
        "startLine": 9718,
        "startChar": 17,
        "endLine": 9718,
        "endChar": 40
      },
      "revId": "c2a7629342a3db1347d33527707ba3c831af1dfc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}