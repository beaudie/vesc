{
  "comments": [
    {
      "key": {
        "uuid": "3cafad99_083ae470",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1263724
      },
      "writtenOn": "2020-07-22T14:10:19Z",
      "side": 1,
      "message": "Can you talk more about the benefits of this move?\nAre there any benchmarks / tests that demonstrate these benefits?",
      "revId": "97acfdefbe712518155d077785bdc8dc6a2627a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f202f60_6c38cf32",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-07-22T15:31:06Z",
      "side": 1,
      "message": "LGTM, but I\u0027ll let somebody else +2 it.  Couple of questions though.",
      "revId": "97acfdefbe712518155d077785bdc8dc6a2627a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "97594d23_11827be3",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 506,
      "author": {
        "id": 1263724
      },
      "writtenOn": "2020-07-22T14:08:53Z",
      "side": 1,
      "message": "Why is mStagingBuffer.getCurrentBuffer()-\u003eretain no longer needed?",
      "revId": "97acfdefbe712518155d077785bdc8dc6a2627a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "777e2cb4_a0080280",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 905,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-07-22T15:31:06Z",
      "side": 1,
      "message": "It looks like here is where your overall memory savings comes from.  Rather than each pixel unpack buffer allocating 1M of staging buffer size (and potentially using less), the ContextVk is always allocating 1M, but then sharing it among all users.  True?\n\nCould this CL also provide any performance (e.g. cache, fewer allocations, less fragmentation) benefits?",
      "revId": "97acfdefbe712518155d077785bdc8dc6a2627a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "47d6602f_affb802d",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.h",
        "patchSetId": 1
      },
      "lineNbr": 1073,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-07-22T15:37:58Z",
      "side": 1,
      "message": "nit: mStagingBuffer or mBufferStagingBuffer - it\u0027s still a staging buffer in the same way it was before ( a single dynamic buffer ).",
      "range": {
        "startLine": 1073,
        "startChar": 22,
        "endLine": 1073,
        "endChar": 43
      },
      "revId": "97acfdefbe712518155d077785bdc8dc6a2627a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}