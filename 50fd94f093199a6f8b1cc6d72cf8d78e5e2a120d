{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "31d7b3b0_ef65044e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-03-19T23:30:34Z",
      "side": 1,
      "message": "PTAL, anything else here?",
      "revId": "50fd94f093199a6f8b1cc6d72cf8d78e5e2a120d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cb14e524_0451137b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-03-22T16:03:59Z",
      "side": 1,
      "message": "I suspect this is fragile and has edge cases because it\u0027s not done in a traverser. LGTM because we pass the tests.",
      "revId": "50fd94f093199a6f8b1cc6d72cf8d78e5e2a120d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "890f9ba8_a4b01bae",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-03-22T16:31:41Z",
      "side": 1,
      "message": "you have any test in mind that can expose such a corner case?",
      "parentUuid": "cb14e524_0451137b",
      "revId": "50fd94f093199a6f8b1cc6d72cf8d78e5e2a120d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5a52c38d_b4c46442",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-03-22T16:34:50Z",
      "side": 1,
      "message": "I didn\u0027t quite fully understand the code. Can you add / substract to gl_InvocationID when indexing? Multiply it? etc.",
      "parentUuid": "890f9ba8_a4b01bae",
      "revId": "50fd94f093199a6f8b1cc6d72cf8d78e5e2a120d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "544217f5_00e2612c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-03-22T16:36:01Z",
      "side": 1,
      "message": "No. The spec says it must be exactly gl_InvocationID.",
      "parentUuid": "5a52c38d_b4c46442",
      "revId": "50fd94f093199a6f8b1cc6d72cf8d78e5e2a120d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1efdf3b8_7c445af2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-03-22T16:47:23Z",
      "side": 1,
      "message": "Ack, might be okay then.",
      "parentUuid": "544217f5_00e2612c",
      "revId": "50fd94f093199a6f8b1cc6d72cf8d78e5e2a120d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "467b7d34_b6c6765d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-03-22T16:48:39Z",
      "side": 1,
      "message": "\u003e Can you add / substract to gl_InvocationID when indexing? Multiply it? etc.\n\n1. what shabi said - spec explicitly requires it to be \"gl_InvocationID\"\n2. \"gl_InvocationID\" builtin is read-only",
      "parentUuid": "1efdf3b8_7c445af2",
      "revId": "50fd94f093199a6f8b1cc6d72cf8d78e5e2a120d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4f309489_292c2b23",
        "filename": "src/compiler/translator/ParseContext.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1992,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-03-22T16:03:59Z",
      "side": 1,
      "message": "nit: wrong assert macro",
      "range": {
        "startLine": 1992,
        "startChar": 4,
        "endLine": 1992,
        "endChar": 10
      },
      "revId": "50fd94f093199a6f8b1cc6d72cf8d78e5e2a120d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "00d19de5_8b5b880a",
        "filename": "src/compiler/translator/ParseContext.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1992,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-03-22T16:31:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4f309489_292c2b23",
      "range": {
        "startLine": 1992,
        "startChar": 4,
        "endLine": 1992,
        "endChar": 10
      },
      "revId": "50fd94f093199a6f8b1cc6d72cf8d78e5e2a120d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}