{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5d79a74a_0f3fa029",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 19
      },
      "lineNbr": 0,
      "author": {
        "id": 1509302
      },
      "writtenOn": "2023-03-29T00:10:46Z",
      "side": 1,
      "message": "Fail with latest version but pass with initial `Patchset 1`",
      "revId": "8c4521892eef90295126f7b7cedc1305af45d9c3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f29d8cc_9651e168",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 19
      },
      "lineNbr": 0,
      "author": {
        "id": 1509302
      },
      "writtenOn": "2023-03-29T00:16:05Z",
      "side": 1,
      "message": "Ah...because it\u0027s not enabled when the driver is `Venus` since venus driver version is generated on the guest side (after venus has its own driver id).\n\nCan we avoid the version check when driver is `Venus`?",
      "parentUuid": "5d79a74a_0f3fa029",
      "revId": "8c4521892eef90295126f7b7cedc1305af45d9c3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3eb96a22_a4cf3dc8",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 19
      },
      "lineNbr": 3621,
      "author": {
        "id": 1509302
      },
      "writtenOn": "2023-03-29T00:17:13Z",
      "side": 1,
      "message": "`... \u0026\u0026 (isVenus || armDriverVersion \u003e\u003d ARMDriverVersion(38, 1, 0))`",
      "revId": "8c4521892eef90295126f7b7cedc1305af45d9c3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}