{
  "comments": [
    {
      "key": {
        "uuid": "3555e841_3f2c4a9d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 36,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2018-10-29T16:04:43Z",
      "side": 1,
      "message": "Maybe split this into another CL. The others are all about measuring performance, but this one is about enabling tests and bug fixing.",
      "revId": "0830aee37ae938ee434190d48d304b4571266423",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "05269a52_25d0645f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 36,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-10-30T19:15:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3555e841_3f2c4a9d",
      "revId": "0830aee37ae938ee434190d48d304b4571266423",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "493b47b7_d616a1c7",
        "filename": "scripts/perf_test_runner.py",
        "patchSetId": 4
      },
      "lineNbr": 45,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2018-10-29T16:04:43Z",
      "side": 1,
      "message": "You may want to update the comments everywhere to say \"coefficient of variation\" instead of \"standard deviation\".",
      "revId": "0830aee37ae938ee434190d48d304b4571266423",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d2536525_793c361e",
        "filename": "scripts/perf_test_runner.py",
        "patchSetId": 4
      },
      "lineNbr": 45,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-10-30T19:15:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "493b47b7_d616a1c7",
      "revId": "0830aee37ae938ee434190d48d304b4571266423",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b8d54a48_f4f3426f",
        "filename": "scripts/perf_test_runner.py",
        "patchSetId": 4
      },
      "lineNbr": 52,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2018-10-30T17:45:49Z",
      "side": 1,
      "message": "This formula is pretty close to Confidence Interval https://en.wikipedia.org/wiki/Confidence_interval\nMaybe that\u0027s what you\u0027d want to compute?\nI\u0027m not familiar with \"variation\" term.",
      "range": {
        "startLine": 52,
        "startChar": 11,
        "endLine": 52,
        "endChar": 26
      },
      "revId": "0830aee37ae938ee434190d48d304b4571266423",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa404c93_78a80c61",
        "filename": "scripts/perf_test_runner.py",
        "patchSetId": 4
      },
      "lineNbr": 52,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2018-10-30T17:50:59Z",
      "side": 1,
      "message": "I was also confused by that at first, then I found this (hence my comment above): https://en.wikipedia.org/wiki/Coefficient_of_variation",
      "parentUuid": "b8d54a48_f4f3426f",
      "range": {
        "startLine": 52,
        "startChar": 11,
        "endLine": 52,
        "endChar": 26
      },
      "revId": "0830aee37ae938ee434190d48d304b4571266423",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d0580765_3bf668c7",
        "filename": "scripts/perf_test_runner.py",
        "patchSetId": 4
      },
      "lineNbr": 52,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-10-30T19:15:38Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "aa404c93_78a80c61",
      "range": {
        "startLine": 52,
        "startChar": 11,
        "endLine": 52,
        "endChar": 26
      },
      "revId": "0830aee37ae938ee434190d48d304b4571266423",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "26ff5945_2eaf7f11",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 167,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2018-10-29T16:04:43Z",
      "side": 1,
      "message": "I fear this kind of thing may end up becoming necessary all over the place. Isn\u0027t the point of the mock ICD that you don\u0027t need to be doing this stuff?\n\nIn other words, can we fix mock ICD instead?",
      "revId": "0830aee37ae938ee434190d48d304b4571266423",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ac7978d1_5c481d8b",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 167,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-10-30T19:15:38Z",
      "side": 1,
      "message": "I filed https://github.com/KhronosGroup/Vulkan-Tools/issues/84",
      "parentUuid": "26ff5945_2eaf7f11",
      "revId": "0830aee37ae938ee434190d48d304b4571266423",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "56c9317b_5b3bc693",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 4
      },
      "lineNbr": 100,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2018-10-29T16:04:43Z",
      "side": 1,
      "message": "What an arbitrary limit!",
      "range": {
        "startLine": 100,
        "startChar": 22,
        "endLine": 100,
        "endChar": 82
      },
      "revId": "0830aee37ae938ee434190d48d304b4571266423",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "23da7846_40304342",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 4
      },
      "lineNbr": 100,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2018-10-30T17:45:49Z",
      "side": 1,
      "message": "I know that GL has a way to query some implementation limits.\nDoes Vulkan have something similar?\nCan mock ICD implement it?",
      "parentUuid": "56c9317b_5b3bc693",
      "range": {
        "startLine": 100,
        "startChar": 22,
        "endLine": 100,
        "endChar": 82
      },
      "revId": "0830aee37ae938ee434190d48d304b4571266423",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "56ea7226_22572e9f",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 4
      },
      "lineNbr": 100,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-10-30T19:15:38Z",
      "side": 1,
      "message": "Filed https://github.com/KhronosGroup/Vulkan-Tools/issues/84\n\nWe ask for the memory requirements and they succeed with this size. I don\u0027t know if there\u0027s some other cap we\u0027re missing.",
      "parentUuid": "23da7846_40304342",
      "range": {
        "startLine": 100,
        "startChar": 22,
        "endLine": 100,
        "endChar": 82
      },
      "revId": "0830aee37ae938ee434190d48d304b4571266423",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "246158d3_da3203d5",
        "filename": "src/tests/perf_tests/ANGLEPerfTest.cpp",
        "patchSetId": 4
      },
      "lineNbr": 27,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2018-10-29T16:04:43Z",
      "side": 1,
      "message": "1e6 and 1e9 would be less error-prone in my opinion.",
      "revId": "0830aee37ae938ee434190d48d304b4571266423",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b5069e00_9089da95",
        "filename": "src/tests/perf_tests/ANGLEPerfTest.cpp",
        "patchSetId": 4
      },
      "lineNbr": 27,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-10-30T19:15:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "246158d3_da3203d5",
      "revId": "0830aee37ae938ee434190d48d304b4571266423",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ce8674a_f63888e8",
        "filename": "src/tests/perf_tests/ANGLEPerfTest.cpp",
        "patchSetId": 4
      },
      "lineNbr": 189,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2018-10-30T17:45:49Z",
      "side": 1,
      "message": "kMicroSecondsPerSecond",
      "range": {
        "startLine": 189,
        "startChar": 30,
        "endLine": 189,
        "endChar": 39
      },
      "revId": "0830aee37ae938ee434190d48d304b4571266423",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a4a63f1_be3c8113",
        "filename": "src/tests/perf_tests/ANGLEPerfTest.cpp",
        "patchSetId": 4
      },
      "lineNbr": 189,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2018-10-30T17:50:59Z",
      "side": 1,
      "message": "I\u0027m personally not in favor of giving names to constants like this, micro, nano etc are well known prefixes. That said, this is more like \"kOneMillisecondInNanoseconds\". Honestly, the if would look simpler to me with just `secondsPerIteration \u003e 1e-3`.",
      "parentUuid": "1ce8674a_f63888e8",
      "range": {
        "startLine": 189,
        "startChar": 30,
        "endLine": 189,
        "endChar": 39
      },
      "revId": "0830aee37ae938ee434190d48d304b4571266423",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4766c59a_f76e2836",
        "filename": "src/tests/perf_tests/ANGLEPerfTest.cpp",
        "patchSetId": 4
      },
      "lineNbr": 189,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-10-30T19:15:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2a4a63f1_be3c8113",
      "range": {
        "startLine": 189,
        "startChar": 30,
        "endLine": 189,
        "endChar": 39
      },
      "revId": "0830aee37ae938ee434190d48d304b4571266423",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}