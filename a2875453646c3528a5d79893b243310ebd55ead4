{
  "comments": [
    {
      "key": {
        "uuid": "547f5e80_c4a1155c",
        "filename": "scripts/generate_entry_points.py",
        "patchSetId": 2
      },
      "lineNbr": 154,
      "author": {
        "id": 1263724
      },
      "writtenOn": "2019-08-21T16:54:00Z",
      "side": 1,
      "message": "Do we need to capture the treadId as well? Or maybe we can infer that if we know what thread a context is current on.",
      "revId": "a2875453646c3528a5d79893b243310ebd55ead4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02a4c763_b36e2289",
        "filename": "scripts/generate_entry_points.py",
        "patchSetId": 2
      },
      "lineNbr": 154,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-08-21T19:15:15Z",
      "side": 1,
      "message": "I think the context ID does the same thing. You can see where a context is made current. And obviously two contexts cannot share a thread at the same time.",
      "parentUuid": "547f5e80_c4a1155c",
      "revId": "a2875453646c3528a5d79893b243310ebd55ead4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cc7e4d47_34dd6765",
        "filename": "src/libANGLE/State.cpp",
        "patchSetId": 2
      },
      "lineNbr": 112,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2019-08-21T17:49:58Z",
      "side": 1,
      "message": "Can this be a static variable within the State class, since that\u0027s all this is used for?",
      "revId": "a2875453646c3528a5d79893b243310ebd55ead4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "35258572_6feb2650",
        "filename": "src/libANGLE/State.cpp",
        "patchSetId": 2
      },
      "lineNbr": 112,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-08-21T19:15:15Z",
      "side": 1,
      "message": "It could. This seems better as it\u0027s more private this way.",
      "parentUuid": "cc7e4d47_34dd6765",
      "revId": "a2875453646c3528a5d79893b243310ebd55ead4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "62c38e52_3824b7b6",
        "filename": "src/libANGLE/State.cpp",
        "patchSetId": 2
      },
      "lineNbr": 246,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2019-08-21T17:49:58Z",
      "side": 1,
      "message": "Does this need to be thread safe, or is it already due a mutex somewhere?",
      "revId": "a2875453646c3528a5d79893b243310ebd55ead4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e896da12_81fadd5b",
        "filename": "src/libANGLE/State.cpp",
        "patchSetId": 2
      },
      "lineNbr": 246,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-08-21T19:15:15Z",
      "side": 1,
      "message": "EGL calls are internally synchronized. So no extra mutex needed here.",
      "parentUuid": "62c38e52_3824b7b6",
      "revId": "a2875453646c3528a5d79893b243310ebd55ead4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}