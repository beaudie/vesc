{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "aba97ef3_c93a68e7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2021-03-31T14:37:51Z",
      "side": 1,
      "message": "Required fix for Dragon Raja trace.",
      "revId": "09ff404624a0c11765476c179807f2ecc468efaa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ee149e97_ac9c4c09",
        "filename": "src/tests/restricted_traces/gen_restricted_traces.py",
        "patchSetId": 3
      },
      "lineNbr": 310,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-03-31T15:41:03Z",
      "side": 1,
      "message": "nit: Probably a micro-optimization since we\u0027re typically only doing 1-2 iterations, but rather than creating multiple copies of the string inside of the loop, you can instead only increment \u0027i\u0027 inside the loop and then do a single copy when it\u0027s done.   I think something like this should work:\n            while file[len(file) - i].isdigit():\n                i +\u003d 1\n            context \u003d file[len(file) - i:-3]",
      "range": {
        "startLine": 308,
        "startChar": 0,
        "endLine": 310,
        "endChar": 22
      },
      "revId": "09ff404624a0c11765476c179807f2ecc468efaa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6a7db1c8_236971f8",
        "filename": "src/tests/restricted_traces/gen_restricted_traces.py",
        "patchSetId": 3
      },
      "lineNbr": 310,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2021-04-02T17:51:05Z",
      "side": 1,
      "message": "Yeah, I didn\u0027t like the original loop either.  Thanks for the tip.  I got something close, LMKWYT.",
      "parentUuid": "ee149e97_ac9c4c09",
      "range": {
        "startLine": 308,
        "startChar": 0,
        "endLine": 310,
        "endChar": 22
      },
      "revId": "09ff404624a0c11765476c179807f2ecc468efaa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "afd0ad26_2d83b028",
        "filename": "src/tests/restricted_traces/gen_restricted_traces.py",
        "patchSetId": 3
      },
      "lineNbr": 310,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-04-02T18:09:18Z",
      "side": 1,
      "message": "LGTM\n\nThe only other thing I\u0027d add is a comment describing what the string being parsed is expected to look like:\n\n    # app_capture_context123.h\n    #                      ^^\n    #              start---||---end",
      "parentUuid": "6a7db1c8_236971f8",
      "range": {
        "startLine": 308,
        "startChar": 0,
        "endLine": 310,
        "endChar": 22
      },
      "revId": "09ff404624a0c11765476c179807f2ecc468efaa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "76ccf10a_66811ce3",
        "filename": "src/tests/restricted_traces/gen_restricted_traces.py",
        "patchSetId": 3
      },
      "lineNbr": 310,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2021-04-02T19:22:24Z",
      "side": 1,
      "message": "Done, thanks Tim",
      "parentUuid": "afd0ad26_2d83b028",
      "range": {
        "startLine": 308,
        "startChar": 0,
        "endLine": 310,
        "endChar": 22
      },
      "revId": "09ff404624a0c11765476c179807f2ecc468efaa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1a6d7810_49024088",
        "filename": "src/tests/restricted_traces/gen_restricted_traces.py",
        "patchSetId": 3
      },
      "lineNbr": 311,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-03-31T15:10:21Z",
      "side": 1,
      "message": "nit: \u003d\u003d True is redundant",
      "range": {
        "startLine": 311,
        "startChar": 19,
        "endLine": 311,
        "endChar": 46
      },
      "revId": "09ff404624a0c11765476c179807f2ecc468efaa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0fba2440_55dc2f63",
        "filename": "src/tests/restricted_traces/gen_restricted_traces.py",
        "patchSetId": 3
      },
      "lineNbr": 311,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2021-04-02T19:22:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1a6d7810_49024088",
      "range": {
        "startLine": 311,
        "startChar": 19,
        "endLine": 311,
        "endChar": 46
      },
      "revId": "09ff404624a0c11765476c179807f2ecc468efaa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}