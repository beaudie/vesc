{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "db1c1696_89c18e74",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 721,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2022-09-20T00:39:18Z",
      "side": 1,
      "message": "Do you need this? I thought the default constructor initialize it to invalidValue?",
      "range": {
        "startLine": 721,
        "startChar": 6,
        "endLine": 721,
        "endChar": 27
      },
      "revId": "9177c55583ec88eba9b09158eb09c26855490714",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eee5b9fa_1b538e59",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 6766,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-09-17T02:31:18Z",
      "side": 1,
      "message": "If you look at the implementation, this uses an atomic integer and ensures uniqueness among resources. We don\u0027t need that, a simple Serial would do, and ++ here works.",
      "range": {
        "startLine": 6766,
        "startChar": 28,
        "endLine": 6766,
        "endChar": 92
      },
      "revId": "9177c55583ec88eba9b09158eb09c26855490714",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fa7e3030_58720379",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 6766,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2022-09-20T00:39:18Z",
      "side": 1,
      "message": "This appears to me is the \"current\" renderpass\u0027s serial instead of last, maybe mCurrentRenderPassSerial?",
      "range": {
        "startLine": 6766,
        "startChar": 4,
        "endLine": 6766,
        "endChar": 25
      },
      "revId": "9177c55583ec88eba9b09158eb09c26855490714",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "463ac236_d385eb3e",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 6776,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-09-17T02:31:18Z",
      "side": 1,
      "message": "Pass `mLastRenderPassSerial` here instead, so there\u0027s always a serial",
      "range": {
        "startLine": 6776,
        "startChar": 48,
        "endLine": 6776,
        "endChar": 59
      },
      "revId": "9177c55583ec88eba9b09158eb09c26855490714",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b33f6a6c_28faf3be",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 320,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-09-17T02:31:18Z",
      "side": 1,
      "message": "nit: unnecessary, there\u0027s a constructor",
      "revId": "9177c55583ec88eba9b09158eb09c26855490714",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c37ffd27_0480fc61",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 1225,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-09-17T02:31:18Z",
      "side": 1,
      "message": "Is this if necessary? Wouldn\u0027t `restoreFinishedRenderPass` checking the serial be enough?",
      "revId": "9177c55583ec88eba9b09158eb09c26855490714",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "271a48c0_1b2829b1",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 1236,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-09-17T02:31:18Z",
      "side": 1,
      "message": "Again seems unnecessary, `hasStartedRenderPassWithSerial` should return false if render pass doesn\u0027t belong to srcFramebufferVk. If it does belong to it, then mCurrentFramebuffer should be valid.",
      "range": {
        "startLine": 1236,
        "startChar": 16,
        "endLine": 1236,
        "endChar": 41
      },
      "revId": "9177c55583ec88eba9b09158eb09c26855490714",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "90e8b767_5d06c67c",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2800,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2022-09-20T00:39:18Z",
      "side": 1,
      "message": "Instead of passing an out pointer here, it is better just add a getCurrentRenderPassSerial() function in ContextVK?",
      "range": {
        "startLine": 2800,
        "startChar": 75,
        "endLine": 2800,
        "endChar": 92
      },
      "revId": "9177c55583ec88eba9b09158eb09c26855490714",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "28a6834a_43d63e3b",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2800,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-09-20T16:20:49Z",
      "side": 1,
      "message": "I suggested this because it makes it perfectly clear when this value should be accessed, and avoids risking out of sync serials. I.e. there\u0027s _one_ place the context generates it and gives it to whoever needs to remember it.",
      "parentUuid": "90e8b767_5d06c67c",
      "range": {
        "startLine": 2800,
        "startChar": 75,
        "endLine": 2800,
        "endChar": 92
      },
      "revId": "9177c55583ec88eba9b09158eb09c26855490714",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "91e3165c_90e31fad",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2800,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2022-09-20T17:54:17Z",
      "side": 1,
      "message": "SGTM. Then it should change to pass mRenderPassSerial to the call instead of a pointer (I think you also suggested it).",
      "parentUuid": "28a6834a_43d63e3b",
      "range": {
        "startLine": 2800,
        "startChar": 75,
        "endLine": 2800,
        "endChar": 92
      },
      "revId": "9177c55583ec88eba9b09158eb09c26855490714",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9a23ca2a_97ce6dfe",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2800,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-09-20T17:57:49Z",
      "side": 1,
      "message": "Well it\u0027s ContextVk that owns the serial generation, so this is passing the pointer for ContextVk to fill.",
      "parentUuid": "91e3165c_90e31fad",
      "range": {
        "startLine": 2800,
        "startChar": 75,
        "endLine": 2800,
        "endChar": 92
      },
      "revId": "9177c55583ec88eba9b09158eb09c26855490714",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7c67f405_92b1a055",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.h",
        "patchSetId": 5
      },
      "lineNbr": 252,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2022-09-20T00:39:18Z",
      "side": 1,
      "message": "When renderpass closed, we do not invalidate this serial number, right? Maybe better name it \"mUsedByRenderpass\"? (Not sure what @syoussefi think)",
      "range": {
        "startLine": 252,
        "startChar": 25,
        "endLine": 252,
        "endChar": 42
      },
      "revId": "9177c55583ec88eba9b09158eb09c26855490714",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6df4de50_24fbc1ea",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.h",
        "patchSetId": 5
      },
      "lineNbr": 252,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-09-20T16:20:49Z",
      "side": 1,
      "message": "It\u0027s the serial assigned to the render pass last opened by this framebuffer, so `mRenderPassSerial` makes sense. `mCurrentRenderPassSerial` would also work.\n\nThere\u0027s no benefit to invalidating this though, it won\u0027t match any new render passes, so it could be any number lower than or equal to this (including 0 \u003d\u003d invalid).\n\nWe shouldn\u0027t update it on render pass \"close\" though, because render passes can be revived and this is exactly used for that. We could on render pass \"flush\", but again not really necessary.",
      "parentUuid": "7c67f405_92b1a055",
      "range": {
        "startLine": 252,
        "startChar": 25,
        "endLine": 252,
        "endChar": 42
      },
      "revId": "9177c55583ec88eba9b09158eb09c26855490714",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fa8db966_546649e0",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.h",
        "patchSetId": 5
      },
      "lineNbr": 252,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2022-09-20T17:54:17Z",
      "side": 1,
      "message": "I am not asking to invalidate the serial at close (in fact I dont think we should invalidate). What I mean is when renderpass is closed, this mRenderPassSerial is still valid value, referring to a closed renderpass. So the name seems a bit confusing here since when I read it, it sounds like the current open renderpass\u0027s serial. It really is `the last used renerpass serial`.",
      "parentUuid": "6df4de50_24fbc1ea",
      "range": {
        "startLine": 252,
        "startChar": 25,
        "endLine": 252,
        "endChar": 42
      },
      "revId": "9177c55583ec88eba9b09158eb09c26855490714",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "725a3b8a_6829eeb8",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.h",
        "patchSetId": 5
      },
      "lineNbr": 252,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-09-20T17:57:49Z",
      "side": 1,
      "message": "`mLastRenderPassSerial` SGTM.",
      "parentUuid": "fa8db966_546649e0",
      "range": {
        "startLine": 252,
        "startChar": 25,
        "endLine": 252,
        "endChar": 42
      },
      "revId": "9177c55583ec88eba9b09158eb09c26855490714",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7b03e4be_a4669582",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2108,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-09-17T02:31:18Z",
      "side": 1,
      "message": "super duper nit: unnecessary parentheses are unnecessary\n\nBut actually the render pass should _always_ get a serial, no matter what.",
      "range": {
        "startLine": 2108,
        "startChar": 24,
        "endLine": 2108,
        "endChar": 49
      },
      "revId": "9177c55583ec88eba9b09158eb09c26855490714",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eb5515c5_bb715366",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2108,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2022-09-20T00:39:18Z",
      "side": 1,
      "message": "+1. \nOr you can just generate serial here and have a getRenderPassSerial() function to retrieve?",
      "parentUuid": "7b03e4be_a4669582",
      "range": {
        "startLine": 2108,
        "startChar": 24,
        "endLine": 2108,
        "endChar": 49
      },
      "revId": "9177c55583ec88eba9b09158eb09c26855490714",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}