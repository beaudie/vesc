{
  "comments": [
    {
      "key": {
        "uuid": "838f63f4_fb9b3eb5",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1557,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-06-04T23:59:49Z",
      "side": 1,
      "message": "Isn\u0027t \u0026bindings-\u003eimmutableSamplers.back() the same thing as the \u0026bindings-\u003eimmutableSamplers.back() that we just pushed in the line above this?  Is the idea that we need a pointer?",
      "revId": "afd3097878704272c64dd5ebf010ed8aaa965cdb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "44c9d6d7_1ffa0fe2",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1557,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-06-05T04:26:26Z",
      "side": 1,
      "message": "There is a bug here. bindings-\u003eimmutableSamplers is changing size with every push_back, and internal std::vector reallocation will invalidate the pointers you are storing here.",
      "parentUuid": "838f63f4_fb9b3eb5",
      "revId": "afd3097878704272c64dd5ebf010ed8aaa965cdb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "71d68a63_356f4094",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1557,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-06-05T20:05:23Z",
      "side": 1,
      "message": "\u003e There is a bug here. bindings-\u003eimmutableSamplers is changing size with every push_back, and internal std::vector reallocation will invalidate the pointers you are storing here.\n\nWow, good catch, that\u0027s a subtle bug (with my short C++ experience anyway).   Seems like this is pointing to a lack of YUV testing that should have caught this somewhere?   Are there deqp tests that can be enabled once we support YUV which could have caught this?\n\nSince we\u0027ve made it this far without supporting immutable samplers, maybe looping twice is better than trying to allocate a fixed size vector that would typically remain unused (and result in wasted memory)?",
      "parentUuid": "44c9d6d7_1ffa0fe2",
      "revId": "afd3097878704272c64dd5ebf010ed8aaa965cdb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "79b34131_ae9f04cf",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1557,
      "author": {
        "id": 1263724
      },
      "writtenOn": "2020-06-05T20:58:16Z",
      "side": 1,
      "message": "Good catch! I need to reserve the space ahead of time to ensure we don\u0027t reallocate.\nThe push_back is pushing the VKSampler into my array of VkSampler\u0027s. I then point that specific binding\u0027s .pImmutableSamplers to the value I just put into the array.",
      "parentUuid": "44c9d6d7_1ffa0fe2",
      "revId": "afd3097878704272c64dd5ebf010ed8aaa965cdb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9b2dac94_1820231c",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.h",
        "patchSetId": 7
      },
      "lineNbr": 511,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-06-04T23:59:49Z",
      "side": 1,
      "message": "I\u0027m sure I\u0027m missing something, but ... Since VkDescriptorSetLayoutBinding contains pImmutableSamplers, and since \"bindings\" is a vector of VkDescriptorSetLayoutBinding\u0027s, why do we need a separate vector here?",
      "revId": "afd3097878704272c64dd5ebf010ed8aaa965cdb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "04455da2_cd25b9af",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.h",
        "patchSetId": 7
      },
      "lineNbr": 511,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-06-05T04:26:26Z",
      "side": 1,
      "message": "pImmutableSamplers is a pointer. This is the storage its pointing to.",
      "parentUuid": "9b2dac94_1820231c",
      "revId": "afd3097878704272c64dd5ebf010ed8aaa965cdb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d1028b2b_2f54b461",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.h",
        "patchSetId": 7
      },
      "lineNbr": 511,
      "author": {
        "id": 1263724
      },
      "writtenOn": "2020-06-05T20:58:16Z",
      "side": 1,
      "message": "That\u0027s right.",
      "parentUuid": "04455da2_cd25b9af",
      "revId": "afd3097878704272c64dd5ebf010ed8aaa965cdb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bfcda562_204fc3d4",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.h",
        "patchSetId": 7
      },
      "lineNbr": 547,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-06-05T04:26:26Z",
      "side": 1,
      "message": "Please ensure this padding is 0-initialized. Otherwise it could trip up the hash() and cause cache misses.",
      "range": {
        "startLine": 547,
        "startChar": 17,
        "endLine": 547,
        "endChar": 20
      },
      "revId": "afd3097878704272c64dd5ebf010ed8aaa965cdb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ea047b9_595639d8",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.h",
        "patchSetId": 7
      },
      "lineNbr": 547,
      "author": {
        "id": 1263724
      },
      "writtenOn": "2020-06-05T20:58:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bfcda562_204fc3d4",
      "range": {
        "startLine": 547,
        "startChar": 17,
        "endLine": 547,
        "endChar": 20
      },
      "revId": "afd3097878704272c64dd5ebf010ed8aaa965cdb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}