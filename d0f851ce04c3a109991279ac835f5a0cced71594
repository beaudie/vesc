{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "4f6eba38_0e1b64ad",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2021-02-25T01:51:38Z",
      "side": 1,
      "message": "Failures are inconsistent and show no indication that they are due to this change.",
      "revId": "d0f851ce04c3a109991279ac835f5a0cced71594",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dddac5d7_6df3ee3f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-02-25T15:26:25Z",
      "side": 1,
      "message": "Thank you for working through this with me Jeff, and fixing the ANI issue.\n\nMy last question is, is getBufferAge with no context valid, or an error? If that\u0027s valid, we many have to figure out a way to deal with that.",
      "revId": "d0f851ce04c3a109991279ac835f5a0cced71594",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b9b9d5a6_2aa43e52",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2021-02-25T16:53:45Z",
      "side": 1,
      "message": "Spec says we can return BAD_SURFACE if no current surface. So I added that and test for it.\n\nI also added test for BUFFER_PRESERVED (Which isn\u0027t implemented yet), in which case age is always 1 - per spec.",
      "parentUuid": "dddac5d7_6df3ee3f",
      "revId": "d0f851ce04c3a109991279ac835f5a0cced71594",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0c470d3b_15fb809c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2021-02-25T16:53:45Z",
      "side": 1,
      "message": "Responses added.\nTry to get back to you as soon as possible.\nMy current focus is in some training.",
      "revId": "d0f851ce04c3a109991279ac835f5a0cced71594",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f1676902_5fd9d080",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2021-02-25T19:10:53Z",
      "side": 1,
      "message": "I\u0027ll get to this ASAP.",
      "revId": "d0f851ce04c3a109991279ac835f5a0cced71594",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8a3e49d9_162b3bc7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2021-02-26T19:28:04Z",
      "side": 1,
      "message": "Comment, asking for feedback on adding context to entry point or alternative.",
      "revId": "d0f851ce04c3a109991279ac835f5a0cced71594",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4693727d_8df2a194",
        "filename": "src/libANGLE/Surface.h",
        "patchSetId": 14
      },
      "lineNbr": 249,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-02-25T17:31:20Z",
      "side": 1,
      "message": "Talked with Shabi. Could you pass this into getBufferAge from the entry point (from egl::Thread) instead of caching it here? It seems to be an error if this is ever null when calling getBufferAge.",
      "range": {
        "startLine": 249,
        "startChar": 4,
        "endLine": 249,
        "endChar": 39
      },
      "revId": "d0f851ce04c3a109991279ac835f5a0cced71594",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "643bdba6_580b85e7",
        "filename": "src/libANGLE/Surface.h",
        "patchSetId": 14
      },
      "lineNbr": 249,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2021-02-25T19:10:53Z",
      "side": 1,
      "message": "spec:\n\"\n        If querying EGL_BUFFER_AGE_EXT and \u003csurface\u003e is not bound as\n        the draw surface to the calling threads current context\n        an EGL_BAD_SURFACE error is generated.\"\n\nI\u0027ll need to be sure this is current context of thread and that surface is bound.",
      "parentUuid": "4693727d_8df2a194",
      "range": {
        "startLine": 249,
        "startChar": 4,
        "endLine": 249,
        "endChar": 39
      },
      "revId": "d0f851ce04c3a109991279ac835f5a0cced71594",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0bf56993_30b769fb",
        "filename": "src/libANGLE/Surface.h",
        "patchSetId": 14
      },
      "lineNbr": 249,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-02-25T19:38:23Z",
      "side": 1,
      "message": "Yeap. I think it covers this case fully. Thanks!",
      "parentUuid": "643bdba6_580b85e7",
      "range": {
        "startLine": 249,
        "startChar": 4,
        "endLine": 249,
        "endChar": 39
      },
      "revId": "d0f851ce04c3a109991279ac835f5a0cced71594",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6490c207_7c9c72f2",
        "filename": "src/libANGLE/Surface.h",
        "patchSetId": 14
      },
      "lineNbr": 249,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2021-02-26T19:28:04Z",
      "side": 1,
      "message": "so, eglQuerySurface doesn\u0027t take a context handle as parameter. So context is not passed around here, and dowwn to Surface.\n\nI changed Surface.cpp to get context from Thread, but this presubmit checks don\u0027t like #include of \"libGLESv2/global_state.h\" to use GetCurrentThread.\n\n\nError Surface::getBufferAge(EGLint *age) const\n{\n    // Spec: Current thread\u0027s draw surfaace must be this surface.\n    gl::Context *currentContext \u003d egl::GetCurrentThread()-\u003egetContext();\n    if ((currentContext \u003d\u003d nullptr) || (currentContext-\u003egetCurrentDrawSurface() !\u003d this))\n    {\n        return egl::EglBadSurface();\n    }\n    // When EGL_BUFFER_PRESERVED, the previous frame contents are copied to\n    // current frame, so the buffer age is always 1.\n    if (mSwapBehavior \u003d\u003d EGL_BUFFER_PRESERVED)\n    {\n        if (age !\u003d nullptr)\n        {\n            *age \u003d 1;\n        }\n        return egl::NoError();\n    }\n    return mImplementation-\u003egetBufferAge(currentContext, age);\n}\n\nOther suggestions? pass from entry point? goes to QuerySurfaceAttrib.\n\negl::Error QuerySurfaceAttrib(const Display *display,\n                              const Surface *surface,\n                              EGLint attribute,\n                              EGLint *value)\n\nCould be shoehorned in, but a little hacky looking.",
      "parentUuid": "0bf56993_30b769fb",
      "range": {
        "startLine": 249,
        "startChar": 4,
        "endLine": 249,
        "endChar": 39
      },
      "revId": "d0f851ce04c3a109991279ac835f5a0cced71594",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "061233f8_c27a2ddf",
        "filename": "src/libANGLE/Surface.h",
        "patchSetId": 14
      },
      "lineNbr": 249,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-02-26T19:44:43Z",
      "side": 1,
      "message": "I\u0027d suggest you update egl::QuerySurface to pass thread-\u003egetContext to QuerySurfaceAttrib. Then you pass this context to surface-\u003egetBufferAge.\n\nI\u0027d also suggest changing this \"if\" to an ASSERT, as I think any nullptr surface or bad surface should be caught in the validation for QuerySurfaceAttrib if the attribute is the \"Age\".",
      "parentUuid": "6490c207_7c9c72f2",
      "range": {
        "startLine": 249,
        "startChar": 4,
        "endLine": 249,
        "endChar": 39
      },
      "revId": "d0f851ce04c3a109991279ac835f5a0cced71594",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "32f61a7d_da20df8d",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 14
      },
      "lineNbr": 487,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-02-25T15:26:25Z",
      "side": 1,
      "message": "Should this start from 1 then, since 0 means not used for rendering? The mFrameCount++ code below makes the first image get mFrameNumber 0.",
      "range": {
        "startLine": 487,
        "startChar": 18,
        "endLine": 487,
        "endChar": 19
      },
      "revId": "d0f851ce04c3a109991279ac835f5a0cced71594",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "43b34d1d_0b27a640",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 14
      },
      "lineNbr": 487,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2021-02-25T16:53:45Z",
      "side": 1,
      "message": "The tests are as I expect. But I could check into this. As I recall the 0 frame has same index as frame 1.\nI\u0027m in all week training, so my focus in elsewhere this week.",
      "parentUuid": "32f61a7d_da20df8d",
      "range": {
        "startLine": 487,
        "startChar": 18,
        "endLine": 487,
        "endChar": 19
      },
      "revId": "d0f851ce04c3a109991279ac835f5a0cced71594",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0a5d36dd_c533f1ec",
        "filename": "src/tests/egl_tests/EGLBufferAgeTest.cpp",
        "patchSetId": 14
      },
      "lineNbr": 249,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-02-25T15:26:25Z",
      "side": 1,
      "message": "Is there a bug here, or should this be uncommented?",
      "revId": "d0f851ce04c3a109991279ac835f5a0cced71594",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0d80ca66_e0ed2ce1",
        "filename": "src/tests/egl_tests/EGLBufferAgeTest.cpp",
        "patchSetId": 14
      },
      "lineNbr": 249,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2021-02-25T16:53:45Z",
      "side": 1,
      "message": "This was a comment to emphasize that I am making sure NOT to be current - hence no current context. \nI can rewrite or remove",
      "parentUuid": "0a5d36dd_c533f1ec",
      "revId": "d0f851ce04c3a109991279ac835f5a0cced71594",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}