{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "1d1ad332_5690abd0",
        "filename": "third_party/OpenCL-ICD-Loader/BUILD.gn",
        "patchSetId": 15
      },
      "lineNbr": 11,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-05-04T14:55:19Z",
      "side": 1,
      "message": "we got into trouble using a non-standard loader with Vulkan before - it would be preferable if we can build this as a standard shared object and use rpath to ensure we get the right one on load.",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 11,
        "endChar": 10
      },
      "revId": "b747adbd6905f78cbbd0b1c2a1a9b70d3addda12",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b2dcceb3_ccd30007",
        "filename": "third_party/OpenCL-ICD-Loader/BUILD.gn",
        "patchSetId": 15
      },
      "lineNbr": 11,
      "author": {
        "id": 1499132
      },
      "writtenOn": "2021-05-04T16:33:11Z",
      "side": 1,
      "message": "Sure, I can add it as shared library. I think rpath is not needed, because we need to have several angle libraries in the library path anyway. We need a unique name anyway, and that should be all we need.",
      "parentUuid": "1d1ad332_5690abd0",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 11,
        "endChar": 10
      },
      "revId": "b747adbd6905f78cbbd0b1c2a1a9b70d3addda12",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b8bcf3b6_38939564",
        "filename": "third_party/OpenCL-ICD-Loader/BUILD.gn",
        "patchSetId": 15
      },
      "lineNbr": 11,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-05-04T18:36:16Z",
      "side": 1,
      "message": "OK, thanks unique name + shared is good. Are you able to load the normally exported EPs instead of using the internal ones?\n\nIn the interests of unblocking you and moving quickly we can land whatever works. It would be good to put it into a one-page ddoc or into an existing ddoc to track and update what we\u0027re doing here if we run into snafus later.",
      "parentUuid": "b2dcceb3_ccd30007",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 11,
        "endChar": 10
      },
      "revId": "b747adbd6905f78cbbd0b1c2a1a9b70d3addda12",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a9bec4ea_726585d2",
        "filename": "third_party/OpenCL-ICD-Loader/BUILD.gn",
        "patchSetId": 15
      },
      "lineNbr": 11,
      "author": {
        "id": 1499132
      },
      "writtenOn": "2021-05-04T19:00:29Z",
      "side": 1,
      "message": "Actually I only use the exported symbols. The global variable is indeed exported, just not listed below \"khrIcd interface\". The regular interface has no option to filter out ANGLE\u0027s library, so I have to use that global variable. Otherwise we would have to implement our own ICD-compatible loader.",
      "parentUuid": "b8bcf3b6_38939564",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 11,
        "endChar": 10
      },
      "revId": "b747adbd6905f78cbbd0b1c2a1a9b70d3addda12",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3de7f797_74d683f1",
        "filename": "third_party/OpenCL-ICD-Loader/BUILD.gn",
        "patchSetId": 15
      },
      "lineNbr": 11,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-05-04T19:03:39Z",
      "side": 1,
      "message": "Weird. Before I had built the ICD from the GitHub source / CMakeLists and run objdump to examine exported symbols. I see no occurrences of the \"icd\" (ignoring case) in the list of dynamic symbols. I guess you\u0027re building in GN with some custom way of exporting everything?",
      "parentUuid": "a9bec4ea_726585d2",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 11,
        "endChar": 10
      },
      "revId": "b747adbd6905f78cbbd0b1c2a1a9b70d3addda12",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "418724d1_434173fd",
        "filename": "third_party/OpenCL-ICD-Loader/BUILD.gn",
        "patchSetId": 15
      },
      "lineNbr": 11,
      "author": {
        "id": 1499132
      },
      "writtenOn": "2021-05-04T19:22:30Z",
      "side": 1,
      "message": "From the Readme:\n\"The ICD Loader is responsible for:\n - Exporting OpenCL API entry points\n - Enumerating OpenCL implementations\n - Forwarding OpenCL API calls to the correct implementation\"\nI have a custom build which only uses the enumerating. The regular shared library only exports the CL EPs. The docs specifically recommends to build the whole thing as shared library, but there is an option to build it statically. It says: \"Using the OpenCL ICD loader as a static library is NOT recommended for end-user installations in general. However in some controlled environments it may be useful to simplify the build and distribution of the application. Use it with discretion.\"\nSo I see no reason for a shared library, but if you insist, I can do it by exporting the ICD interface in the custom build.",
      "parentUuid": "3de7f797_74d683f1",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 11,
        "endChar": 10
      },
      "revId": "b747adbd6905f78cbbd0b1c2a1a9b70d3addda12",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1f0553b1_67e65bf1",
        "filename": "third_party/OpenCL-ICD-Loader/BUILD.gn",
        "patchSetId": 15
      },
      "lineNbr": 11,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-05-04T19:25:45Z",
      "side": 1,
      "message": "Can you summarize this in the design doc? As I said before I\u0027m fine with whatever works, as long as we can be flexible and change the plan later if required. i.e. if we want to move away from custom builds and towards test-what-we-ship.",
      "parentUuid": "418724d1_434173fd",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 11,
        "endChar": 10
      },
      "revId": "b747adbd6905f78cbbd0b1c2a1a9b70d3addda12",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "25614aac_318a4d07",
        "filename": "third_party/OpenCL-ICD-Loader/BUILD.gn",
        "patchSetId": 15
      },
      "lineNbr": 11,
      "author": {
        "id": 1499132
      },
      "writtenOn": "2021-05-04T19:27:39Z",
      "side": 1,
      "message": "Sounds good, let\u0027s keep it for now and I write a design doc for this",
      "parentUuid": "1f0553b1_67e65bf1",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 11,
        "endChar": 10
      },
      "revId": "b747adbd6905f78cbbd0b1c2a1a9b70d3addda12",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}