{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "183aab56_a6bb0c81",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2021-03-22T02:19:34Z",
      "side": 1,
      "message": "LGTM, although I\u0027m not as familiar with the code as Jamie and Shabi.",
      "revId": "5688be2b36b7aa39d44a6ac59880b3beac47c1d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f9e9916f_5e3ab660",
        "filename": "src/libANGLE/ProgramExecutable.h",
        "patchSetId": 3
      },
      "lineNbr": 315,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-03-22T16:00:56Z",
      "side": 1,
      "message": "avoid exposing mutable getters. you sholdn\u0027t need it. see below.",
      "range": {
        "startLine": 315,
        "startChar": 37,
        "endLine": 315,
        "endChar": 60
      },
      "revId": "5688be2b36b7aa39d44a6ac59880b3beac47c1d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4f1944cb_7d73e2bd",
        "filename": "src/libANGLE/ProgramExecutable.h",
        "patchSetId": 3
      },
      "lineNbr": 315,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-03-22T19:55:12Z",
      "side": 1,
      "message": "I\u0027ve updated the callers of the non-const versions to call the const versions and removed these non-const functions.",
      "parentUuid": "f9e9916f_5e3ab660",
      "range": {
        "startLine": 315,
        "startChar": 37,
        "endLine": 315,
        "endChar": 60
      },
      "revId": "5688be2b36b7aa39d44a6ac59880b3beac47c1d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a6925f10_00553df2",
        "filename": "src/libANGLE/ProgramExecutable.h",
        "patchSetId": 3
      },
      "lineNbr": 330,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2021-03-22T02:19:34Z",
      "side": 1,
      "message": "Its confusing to have two ways to call the same function.  Might be worth giving them unique names so it is clear which should be used, like getLinkedOutputVaryingsForThisReason.  I had to stare at them for a bit to verify they only differed by const.",
      "range": {
        "startLine": 315,
        "startChar": 0,
        "endLine": 330,
        "endChar": 5
      },
      "revId": "5688be2b36b7aa39d44a6ac59880b3beac47c1d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "39962711_1808598c",
        "filename": "src/libANGLE/ProgramExecutable.h",
        "patchSetId": 3
      },
      "lineNbr": 330,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-03-22T02:43:04Z",
      "side": 1,
      "message": "This is actually pretty standard Cody. The usual pattern is:\n\n    X \u0026getX() { return x; }\n    const X \u0026getX() const { return x; }\n\nSo if the object is const, we return x as const reference. If the object is not const, we return it as non-const.",
      "parentUuid": "a6925f10_00553df2",
      "range": {
        "startLine": 315,
        "startChar": 0,
        "endLine": 330,
        "endChar": 5
      },
      "revId": "5688be2b36b7aa39d44a6ac59880b3beac47c1d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e87c45ad_870a27b6",
        "filename": "src/libANGLE/ProgramExecutable.h",
        "patchSetId": 3
      },
      "lineNbr": 330,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2021-03-22T13:53:29Z",
      "side": 1,
      "message": "The pattern is much easier to see when the functions are trivially short.  C++ doesn\u0027t really do any favors here.  Maybe an alias declaration would help the readability, like:\n\n  using ShaderVariables \u003d std::vector\u003csh::ShaderVariable\u003e\n\nNo need to hold this up though, just commenting on the code becoming more difficult to read, which can lead to bugs.",
      "parentUuid": "39962711_1808598c",
      "range": {
        "startLine": 315,
        "startChar": 0,
        "endLine": 330,
        "endChar": 5
      },
      "revId": "5688be2b36b7aa39d44a6ac59880b3beac47c1d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "037fcd0c_76ff0591",
        "filename": "src/libANGLE/ProgramExecutable.h",
        "patchSetId": 3
      },
      "lineNbr": 330,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-03-22T16:00:56Z",
      "side": 1,
      "message": "See above.",
      "parentUuid": "e87c45ad_870a27b6",
      "range": {
        "startLine": 315,
        "startChar": 0,
        "endLine": 330,
        "endChar": 5
      },
      "revId": "5688be2b36b7aa39d44a6ac59880b3beac47c1d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "016750e2_4385b213",
        "filename": "src/libANGLE/ProgramExecutable.h",
        "patchSetId": 3
      },
      "lineNbr": 356,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-03-22T16:00:56Z",
      "side": 1,
      "message": "ref",
      "range": {
        "startLine": 356,
        "startChar": 17,
        "endLine": 356,
        "endChar": 32
      },
      "revId": "5688be2b36b7aa39d44a6ac59880b3beac47c1d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d6ebaad4_e5bd823e",
        "filename": "src/libANGLE/ProgramExecutable.h",
        "patchSetId": 3
      },
      "lineNbr": 356,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-03-22T19:55:12Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "016750e2_4385b213",
      "range": {
        "startLine": 356,
        "startChar": 17,
        "endLine": 356,
        "endChar": 32
      },
      "revId": "5688be2b36b7aa39d44a6ac59880b3beac47c1d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "efeb3a73_e37f86c6",
        "filename": "src/tests/gl_tests/ProgramPipelineTest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 746,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-03-21T05:12:23Z",
      "side": 1,
      "message": "Is this line supposed to be removed? (As in, it\u0027s supposed to be automatic, right?)",
      "range": {
        "startLine": 746,
        "startChar": 4,
        "endLine": 746,
        "endChar": 22
      },
      "revId": "5688be2b36b7aa39d44a6ac59880b3beac47c1d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2fb34833_6b03c3a4",
        "filename": "src/tests/gl_tests/ProgramPipelineTest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 746,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-03-22T19:55:12Z",
      "side": 1,
      "message": "Removed.",
      "parentUuid": "efeb3a73_e37f86c6",
      "range": {
        "startLine": 746,
        "startChar": 4,
        "endLine": 746,
        "endChar": 22
      },
      "revId": "5688be2b36b7aa39d44a6ac59880b3beac47c1d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e3c937f5_0e558e2a",
        "filename": "src/tests/gl_tests/ProgramPipelineTest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 749,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-03-21T05:12:23Z",
      "side": 1,
      "message": "Not sure if this really tests (all of) the change in this CL. Shouldn\u0027t the relinked program be having a different incompatible set of varyings? Otherwise how can you be sure the varyings were properly updated?",
      "revId": "5688be2b36b7aa39d44a6ac59880b3beac47c1d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "781b285f_759c3efb",
        "filename": "src/tests/gl_tests/ProgramPipelineTest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 749,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-03-22T19:55:12Z",
      "side": 1,
      "message": "I\u0027m just trying to make sure that the PPO uses the new program when it\u0027s re-linked.\n\nThe varying stuff is tested with DetachAndModifyShader() in this file, which is fixed with this relation chain and re-enabled with the final CL:\nhttps://chromium-review.googlesource.com/c/angle/angle/+/2776267",
      "parentUuid": "e3c937f5_0e558e2a",
      "revId": "5688be2b36b7aa39d44a6ac59880b3beac47c1d8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}