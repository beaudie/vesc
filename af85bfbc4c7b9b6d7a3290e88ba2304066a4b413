{
  "comments": [
    {
      "key": {
        "uuid": "0a7c2068_afcdf6bd",
        "filename": "src/libANGLE/renderer/gl/ImageGL.cpp",
        "patchSetId": 7
      },
      "lineNbr": 20,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-07-25T14:21:10Z",
      "side": 1,
      "message": "nit: namespace comment",
      "range": {
        "startLine": 20,
        "startChar": 1,
        "endLine": 20,
        "endChar": 0
      },
      "revId": "af85bfbc4c7b9b6d7a3290e88ba2304066a4b413",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "30082036_075ffb09",
        "filename": "src/libANGLE/renderer/gl/egl/DisplayEGL.cpp",
        "patchSetId": 7
      },
      "lineNbr": 127,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2018-07-24T23:55:03Z",
      "side": 1,
      "message": "Android doesn\u0027t support pixmaps, but I think Ozone is able to.",
      "range": {
        "startLine": 127,
        "startChar": 7,
        "endLine": 127,
        "endChar": 62
      },
      "revId": "af85bfbc4c7b9b6d7a3290e88ba2304066a4b413",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4e5efaa4_4e02a11a",
        "filename": "src/libANGLE/renderer/gl/egl/ImageEGL.cpp",
        "patchSetId": 7
      },
      "lineNbr": 23,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-07-25T14:21:10Z",
      "side": 1,
      "message": "could any of this class be used for a potential desktop GL implementation?",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 23,
        "endChar": 8
      },
      "revId": "af85bfbc4c7b9b6d7a3290e88ba2304066a4b413",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1c2b0632_210f24a8",
        "filename": "src/libANGLE/renderer/gl/egl/ImageEGL.cpp",
        "patchSetId": 7
      },
      "lineNbr": 38,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-07-25T14:21:10Z",
      "side": 1,
      "message": "we could potentially store the context in the front-end as part of the state.",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 38,
        "endChar": 5
      },
      "revId": "af85bfbc4c7b9b6d7a3290e88ba2304066a4b413",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "185eb154_a3b24842",
        "filename": "src/libANGLE/renderer/gl/egl/ImageEGL.cpp",
        "patchSetId": 7
      },
      "lineNbr": 87,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2018-07-24T23:55:03Z",
      "side": 1,
      "message": "Why this particular error?\nSince createImageKHR doesn\u0027t return an error, it makes sense to me not to return any error from this function either, but instead set the current error state to mEGL-\u003egetError().",
      "range": {
        "startLine": 87,
        "startChar": 20,
        "endLine": 87,
        "endChar": 31
      },
      "revId": "af85bfbc4c7b9b6d7a3290e88ba2304066a4b413",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3d8e0810_2a33132f",
        "filename": "src/libANGLE/renderer/gl/egl/ImageEGL.cpp",
        "patchSetId": 7
      },
      "lineNbr": 95,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-07-25T14:21:10Z",
      "side": 1,
      "message": "we might need to cache the size/format/etc in the front end so we don\u0027t have to query them on an orphaned image. better done as a follow up though.",
      "range": {
        "startLine": 95,
        "startChar": 4,
        "endLine": 95,
        "endChar": 68
      },
      "revId": "af85bfbc4c7b9b6d7a3290e88ba2304066a4b413",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}