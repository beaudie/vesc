{
  "comments": [
    {
      "key": {
        "uuid": "e9b46e30_456af1d6",
        "filename": "src/libANGLE/renderer/vulkan/SecondaryCommandBuffer.h",
        "patchSetId": 6
      },
      "lineNbr": 1137,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-02-10T18:33:43Z",
      "side": 1,
      "message": "Why is this making a copy of the VkImageMemoryBarrier now, rather than just the pointer?\n\nDoes this need to be a deep copy and follow pNext or ASSERT(pNext \u003d\u003d nullptr)?",
      "revId": "22c5bb393d62523eab8b9661f34b4387e7f9e6b2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d0711212_167e9187",
        "filename": "src/libANGLE/renderer/vulkan/SecondaryCommandBuffer.h",
        "patchSetId": 6
      },
      "lineNbr": 1137,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-02-10T18:46:07Z",
      "side": 1,
      "message": "ASSERTing that pNext is nullptr sounds like a good idea. Note that this code isn\u0027t changed - it\u0027s just changing a pointer type to a reference type.",
      "parentUuid": "e9b46e30_456af1d6",
      "revId": "22c5bb393d62523eab8b9661f34b4387e7f9e6b2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5016f113_7bb6bddd",
        "filename": "src/libANGLE/renderer/vulkan/SecondaryCommandBuffer.h",
        "patchSetId": 6
      },
      "lineNbr": 1137,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-02-10T20:20:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d0711212_167e9187",
      "revId": "22c5bb393d62523eab8b9661f34b4387e7f9e6b2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f2fba062_f6ebf5c8",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 6
      },
      "lineNbr": 2113,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-02-10T18:33:43Z",
      "side": 1,
      "message": "Ah, looks like we were passing around pointers to stack memory which could be gone later when we actually needed it?",
      "revId": "22c5bb393d62523eab8b9661f34b4387e7f9e6b2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "396ad48a_0de813cb",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 6
      },
      "lineNbr": 2113,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-02-10T18:46:07Z",
      "side": 1,
      "message": "Yes, the object is ephemeral so we need to make a copy. You\u0027re right that the pNext value would be invalid if non-null.",
      "parentUuid": "f2fba062_f6ebf5c8",
      "revId": "22c5bb393d62523eab8b9661f34b4387e7f9e6b2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3999ee03_7303cf6a",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 6
      },
      "lineNbr": 2113,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-02-10T20:20:00Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "396ad48a_0de813cb",
      "revId": "22c5bb393d62523eab8b9661f34b4387e7f9e6b2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3c511c42_1ab3c8d1",
        "filename": "src/tests/gl_tests/StateChangeTest.cpp",
        "patchSetId": 6
      },
      "lineNbr": 2642,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2020-02-10T19:21:34Z",
      "side": 1,
      "message": "It looks like you are clearing the framebuffer with a random value, drawing to it, then ensuring the framebuffer still contains the random value?  Would this be better to clear to a different color, then ensure the rendered texture has the new expected value?",
      "range": {
        "startLine": 2642,
        "startChar": 12,
        "endLine": 2642,
        "endChar": 19
      },
      "revId": "22c5bb393d62523eab8b9661f34b4387e7f9e6b2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ed0f901a_dea5bd6d",
        "filename": "src/tests/gl_tests/StateChangeTest.cpp",
        "patchSetId": 6
      },
      "lineNbr": 2642,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-02-10T20:20:00Z",
      "side": 1,
      "message": "The test is drawing and clearing to different framebuffers. It\u0027s clearing a texture to a randomized color using a user framebuffer, drawing with that texture to a portion of the default framebuffer (the real window), then repeating this for four quads in the FB. Then it is verifying the colors came out in the right order and that the commands didn\u0027t get jumbled.\n\nAdded a couple comments.",
      "parentUuid": "3c511c42_1ab3c8d1",
      "range": {
        "startLine": 2642,
        "startChar": 12,
        "endLine": 2642,
        "endChar": 19
      },
      "revId": "22c5bb393d62523eab8b9661f34b4387e7f9e6b2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}