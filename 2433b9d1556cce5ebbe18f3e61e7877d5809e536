{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "7c33d474_0f660096",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-05-03T23:42:44Z",
      "side": 1,
      "message": "Deferring to folks that are developing metal/",
      "revId": "2433b9d1556cce5ebbe18f3e61e7877d5809e536",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8a3100b9_99c93220",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2023-05-03T23:48:50Z",
      "side": 1,
      "message": "Ha! Ken had actually suggested you review, but happy for anyone to review it.",
      "parentUuid": "7c33d474_0f660096",
      "revId": "2433b9d1556cce5ebbe18f3e61e7877d5809e536",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "97137698_3b53278e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2023-05-04T00:02:43Z",
      "side": 1,
      "message": "Great work Scott redoing this in terms of function constants. It looks good to me but either Alexey or Kyle (or both) should review as well.",
      "revId": "2433b9d1556cce5ebbe18f3e61e7877d5809e536",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "67972f12_1819e8de",
        "filename": "src/libANGLE/renderer/metal/ProgramMtl.mm",
        "patchSetId": 12
      },
      "lineNbr": 945,
      "author": {
        "id": 1543187
      },
      "writtenOn": "2023-05-04T12:46:17Z",
      "side": 1,
      "message": "FYI, we cache the specialized fragment shader object created from a particular `renderPipelineDesc` to avoid re-creating it every time.\n\nThe current way of caching is storing a table mapping from a key to the created shader object. The key is formed by combining relevant attributes in the `renderPipelineDesc`. For example, previously, `outputDescriptor.sampleCount` and `outputDescriptor.depthAttachmentPixelFormat` are two attributes that will affect the shader object\u0027s creation. If the next time this function is called with the same `sampleCount` \u0026 `depthAttachmentPixelFormat`, the cached shader object will be returned instead of creating a new one.\n\nIn this CL, you are adding a new attribute `emulateAlphaToCoverageEnabled` to the `RenderPipelineDesc` and it directly affects the shader object\u0027s creation. So we will need to include it in the caching key\u0027s calculation as well.",
      "range": {
        "startLine": 945,
        "startChar": 49,
        "endLine": 945,
        "endChar": 95
      },
      "revId": "2433b9d1556cce5ebbe18f3e61e7877d5809e536",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7b86cc16_de04d3d6",
        "filename": "src/libANGLE/renderer/metal/ProgramMtl.mm",
        "patchSetId": 12
      },
      "lineNbr": 945,
      "author": {
        "id": 1394635
      },
      "writtenOn": "2023-05-04T13:14:46Z",
      "side": 1,
      "message": "In this specific case, the specialization constant value is fixed at display creation, so it should not be included in the runtime cache and also should not be included in the pipeline state, see `ANGLEUseSampleCompareGradient` for example.",
      "parentUuid": "67972f12_1819e8de",
      "range": {
        "startLine": 945,
        "startChar": 49,
        "endLine": 945,
        "endChar": 95
      },
      "revId": "2433b9d1556cce5ebbe18f3e61e7877d5809e536",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "074119bf_97399e7d",
        "filename": "src/libANGLE/renderer/metal/ProgramMtl.mm",
        "patchSetId": 12
      },
      "lineNbr": 945,
      "author": {
        "id": 1000763
      },
      "writtenOn": "2023-05-04T14:21:20Z",
      "side": 1,
      "message": "Done (hopefully)",
      "parentUuid": "7b86cc16_de04d3d6",
      "range": {
        "startLine": 945,
        "startChar": 49,
        "endLine": 945,
        "endChar": 95
      },
      "revId": "2433b9d1556cce5ebbe18f3e61e7877d5809e536",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}