{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "bcbabc13_61f33b2b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-06-17T21:14:31Z",
      "side": 1,
      "message": "LGTM. Please use \u0027git cl upload\u0027 when pushing changes to angle so you run presubmit.",
      "revId": "968f99d11b16ad7307043569a8acdebbbed7bedd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e5a93fd9_1d56c57a",
        "filename": "src/libANGLE/GLES1Renderer.cpp",
        "patchSetId": 4
      },
      "lineNbr": 630,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-06-17T21:14:31Z",
      "side": 1,
      "message": "this looks like a somewhat separate change? like an optimization. maybe split?",
      "range": {
        "startLine": 621,
        "startChar": 0,
        "endLine": 630,
        "endChar": 9
      },
      "revId": "968f99d11b16ad7307043569a8acdebbbed7bedd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "190899bc_41f2cda7",
        "filename": "src/libANGLE/GLES1Renderer.cpp",
        "patchSetId": 4
      },
      "lineNbr": 630,
      "author": {
        "id": 1190898
      },
      "writtenOn": "2021-06-17T21:16:14Z",
      "side": 1,
      "message": "This is important. The problem is that prior to this change dirtying the context would result in the program being cleared on State. When we went to draw a GLES1 context, mRendererProgramInitialized would be set and the program on State would still be nullptr, resulting in a crash later. This makes it so that we restore the program before we draw.",
      "parentUuid": "e5a93fd9_1d56c57a",
      "range": {
        "startLine": 621,
        "startChar": 0,
        "endLine": 630,
        "endChar": 9
      },
      "revId": "968f99d11b16ad7307043569a8acdebbbed7bedd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b7d4977c_60785c0f",
        "filename": "src/libANGLE/GLES1Renderer.cpp",
        "patchSetId": 4
      },
      "lineNbr": 630,
      "author": {
        "id": 1190898
      },
      "writtenOn": "2021-06-17T21:20:10Z",
      "side": 1,
      "message": "It is an optimization in that we don\u0027t run through the whole re-initialization routine below, which we could do but results in extremely poor performance",
      "parentUuid": "190899bc_41f2cda7",
      "range": {
        "startLine": 621,
        "startChar": 0,
        "endLine": 630,
        "endChar": 9
      },
      "revId": "968f99d11b16ad7307043569a8acdebbbed7bedd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ce3d5034_248a9e37",
        "filename": "src/libANGLE/GLES1Renderer.cpp",
        "patchSetId": 4
      },
      "lineNbr": 630,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-06-17T21:22:27Z",
      "side": 1,
      "message": "Something about it doesn\u0027t look right, like the state shouldn\u0027t be messing with dirty bits directly here. I\u0027d maybe make this a public member like maybeHandleDirtyProgram() or something and if it finds the dirty bit it sets an out variable to true. Instead of manipulating the dirty bits directly here. Sound reasonable?",
      "parentUuid": "b7d4977c_60785c0f",
      "range": {
        "startLine": 621,
        "startChar": 0,
        "endLine": 630,
        "endChar": 9
      },
      "revId": "968f99d11b16ad7307043569a8acdebbbed7bedd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ffcf984_bfcded43",
        "filename": "src/libANGLE/GLES1Renderer.cpp",
        "patchSetId": 4
      },
      "lineNbr": 630,
      "author": {
        "id": 1190898
      },
      "writtenOn": "2021-06-17T21:28:01Z",
      "side": 1,
      "message": "hmm, it\u0027s not the state that is messing with the dirty bits, right? It\u0027s the renderer. I could pull this out to a separate method private to the class, and have prepareForDraw() call that new method -- WDYT? I\u0027m not sure where the callsite would be if we made it public and moved the handling outside of this class.",
      "parentUuid": "ce3d5034_248a9e37",
      "range": {
        "startLine": 621,
        "startChar": 0,
        "endLine": 630,
        "endChar": 9
      },
      "revId": "968f99d11b16ad7307043569a8acdebbbed7bedd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f3891023_41b14ca2",
        "filename": "src/libANGLE/GLES1Renderer.cpp",
        "patchSetId": 4
      },
      "lineNbr": 630,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-06-17T21:35:18Z",
      "side": 1,
      "message": "My bad, \"the renderer shouldn\u0027t be messing with dirty bits directly\", they should be encapsulated in GLES1State. If you pull this into a method of GLES1State, and move the dirty bits methods (except setAll) private again, that\u0027s best to keep the layering / abstraction intact.",
      "parentUuid": "7ffcf984_bfcded43",
      "range": {
        "startLine": 621,
        "startChar": 0,
        "endLine": 630,
        "endChar": 9
      },
      "revId": "968f99d11b16ad7307043569a8acdebbbed7bedd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}