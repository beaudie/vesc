{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1a3799ed_c4409d18",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2024-07-19T23:41:33Z",
      "side": 1,
      "message": "This generally lgtm but it would be better if Geoff and Quyen review. A couple of small questions.",
      "revId": "a778b5ab56ab6b07be0a684267718d0a25f20a7c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "179ae5c3_104bc828",
        "filename": "src/libANGLE/renderer/metal/FrameBufferMtl.mm",
        "patchSetId": 3
      },
      "lineNbr": 1723,
      "author": {
        "id": 1543187
      },
      "writtenOn": "2024-07-19T14:50:34Z",
      "side": 1,
      "message": "I don\u0027t remember whether the compute kernel already handles this but could it cause race condition between the threads that writes to last pixels on one row and the first pixels on the next row?",
      "revId": "a778b5ab56ab6b07be0a684267718d0a25f20a7c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2381ace3_ce931659",
        "filename": "src/libANGLE/renderer/metal/FrameBufferMtl.mm",
        "patchSetId": 3
      },
      "lineNbr": 1723,
      "author": {
        "id": 1394635
      },
      "writtenOn": "2024-07-19T14:55:30Z",
      "side": 1,
      "message": "This case does cause a compute race condition and the new test is partly suppressed because of this (some pixel values are flaky). That said, the blit path crashes the GPU process, which is certainly worse.",
      "parentUuid": "179ae5c3_104bc828",
      "revId": "a778b5ab56ab6b07be0a684267718d0a25f20a7c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cbcfe39b_ccf2efe6",
        "filename": "src/libANGLE/renderer/metal/FrameBufferMtl.mm",
        "patchSetId": 3
      },
      "lineNbr": 1723,
      "author": {
        "id": 1543187
      },
      "writtenOn": "2024-07-19T17:25:08Z",
      "side": 1,
      "message": "I\u0027m just curious is this a defined behaviour in GL spec. For example, it clearly says that the overlapped bytes should contain the next row\u0027s pixels?",
      "parentUuid": "2381ace3_ce931659",
      "revId": "a778b5ab56ab6b07be0a684267718d0a25f20a7c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8fdcc0f4_0401067d",
        "filename": "src/libANGLE/renderer/metal/FrameBufferMtl.mm",
        "patchSetId": 3
      },
      "lineNbr": 1723,
      "author": {
        "id": 1394635
      },
      "writtenOn": "2024-07-19T17:41:29Z",
      "side": 1,
      "message": "I think yes; it says:\n\u003e Before obtaining the first group from memory, the _data_ pointer is advanced by (`UNPACK_SKIP_PIXELS`)_n_ + (`UNPACK_SKIP_ROWS`)_k_ elements. Then _width_ groups are obtained from contiguous elements in memory (without advancing the pointer), after which the pointer is advanced by _k_ elements.",
      "parentUuid": "cbcfe39b_ccf2efe6",
      "revId": "a778b5ab56ab6b07be0a684267718d0a25f20a7c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "38131c73_2933fb35",
        "filename": "src/libANGLE/renderer/metal/FrameBufferMtl.mm",
        "patchSetId": 3
      },
      "lineNbr": 1773,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2024-07-19T23:41:33Z",
      "side": 1,
      "message": "Which of these two code paths is currently taken when the row pitch is too small? Row-by-row copies have been used on other platforms as a workaround for bugs, so I\u0027m wondering whether the row-by-row loop below could be used as the fallback discussed in this bug.",
      "revId": "a778b5ab56ab6b07be0a684267718d0a25f20a7c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0b360e6a_8fed9e22",
        "filename": "src/tests/gl_tests/ReadPixelsTest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 696,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2024-07-19T23:41:33Z",
      "side": 1,
      "message": "Is this if-test being added because the rest of the test verifies that the Metal backend doesn\u0027t crash on this test when Metal\u0027s validation is turned on?",
      "revId": "a778b5ab56ab6b07be0a684267718d0a25f20a7c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}