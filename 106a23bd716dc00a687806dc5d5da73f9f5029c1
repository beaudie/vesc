{
  "comments": [
    {
      "key": {
        "uuid": "63adddb0_9e099de6",
        "filename": "src/libANGLE/ContextState.cpp",
        "patchSetId": 9
      },
      "lineNbr": 368,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-01-15T03:48:28Z",
      "side": 1,
      "message": "note to Geoff, I think we should merge this with the big switch for perf reasons.",
      "range": {
        "startLine": 301,
        "startChar": 0,
        "endLine": 368,
        "endChar": 5
      },
      "revId": "106a23bd716dc00a687806dc5d5da73f9f5029c1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a3ed1509_f337aa4e",
        "filename": "src/libANGLE/ContextState.cpp",
        "patchSetId": 9
      },
      "lineNbr": 368,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2017-01-16T17:12:45Z",
      "side": 1,
      "message": "Seems reasonable",
      "parentUuid": "63adddb0_9e099de6",
      "range": {
        "startLine": 301,
        "startChar": 0,
        "endLine": 368,
        "endChar": 5
      },
      "revId": "106a23bd716dc00a687806dc5d5da73f9f5029c1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "63adddb0_5e0c35f1",
        "filename": "src/tests/gl_tests/WebGLCompatibilityTest.cpp",
        "patchSetId": 9
      },
      "lineNbr": 595,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-01-15T03:48:28Z",
      "side": 1,
      "message": "question: shouldn\u0027t extensionRequstable return false for ES3?",
      "range": {
        "startLine": 595,
        "startChar": 7,
        "endLine": 595,
        "endChar": 37
      },
      "revId": "106a23bd716dc00a687806dc5d5da73f9f5029c1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a3ed1509_b331225c",
        "filename": "src/tests/gl_tests/WebGLCompatibilityTest.cpp",
        "patchSetId": 9
      },
      "lineNbr": 595,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2017-01-16T17:12:45Z",
      "side": 1,
      "message": "I think it should still work in ES3, it\u0027s still possible to request a WebGL1 extension in WebGL2.  I think we should run this against both API versions.",
      "parentUuid": "63adddb0_5e0c35f1",
      "range": {
        "startLine": 595,
        "startChar": 7,
        "endLine": 595,
        "endChar": 37
      },
      "revId": "106a23bd716dc00a687806dc5d5da73f9f5029c1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "63adddb0_611e302e",
        "filename": "src/tests/gl_tests/WebGLCompatibilityTest.cpp",
        "patchSetId": 9
      },
      "lineNbr": 595,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-01-17T14:38:58Z",
      "side": 1,
      "message": "I don\u0027t think that\u0027s correct. The draw buffers extension is explicitly not available in WebGL 2.\n\nhttps://www.khronos.org/registry/webgl/extensions/WEBGL_draw_buffers/\n\nPromoted to core and no longer available as an extension in WebGL API 2.0 specification.\n\nThere was some weirdness in the tests: you can\u0027t use EXT_draw_buffers in 1.00 shaders in WebGL 2 contexts.",
      "parentUuid": "a3ed1509_b331225c",
      "range": {
        "startLine": 595,
        "startChar": 7,
        "endLine": 595,
        "endChar": 37
      },
      "revId": "106a23bd716dc00a687806dc5d5da73f9f5029c1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a3ed1509_bfd563cb",
        "filename": "src/tests/gl_tests/WebGLCompatibilityTest.cpp",
        "patchSetId": 9
      },
      "lineNbr": 595,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2017-01-17T15:39:49Z",
      "side": 1,
      "message": "Ah, interesting.  I had thought the weirdness was because it was still possible to request it in ES3.\n\nMaybe we should encode minimum and maximum versions for extensions in the ExtensionInfo struct.  I think it would be a good fit because we already enable/disable a few other extensions based on context version.",
      "parentUuid": "63adddb0_611e302e",
      "range": {
        "startLine": 595,
        "startChar": 7,
        "endLine": 595,
        "endChar": 37
      },
      "revId": "106a23bd716dc00a687806dc5d5da73f9f5029c1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "63adddb0_04677a8f",
        "filename": "src/tests/gl_tests/WebGLCompatibilityTest.cpp",
        "patchSetId": 9
      },
      "lineNbr": 595,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-01-17T16:08:54Z",
      "side": 1,
      "message": "That would work for me. Should we do it in this CL or as a follow-up?",
      "parentUuid": "a3ed1509_bfd563cb",
      "range": {
        "startLine": 595,
        "startChar": 7,
        "endLine": 595,
        "endChar": 37
      },
      "revId": "106a23bd716dc00a687806dc5d5da73f9f5029c1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a3ed1509_1fe10f7b",
        "filename": "src/tests/gl_tests/WebGLCompatibilityTest.cpp",
        "patchSetId": 9
      },
      "lineNbr": 595,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2017-01-17T16:12:11Z",
      "side": 1,
      "message": "Follow-up would be fine, nothing is regressing in this CL.",
      "parentUuid": "63adddb0_04677a8f",
      "range": {
        "startLine": 595,
        "startChar": 7,
        "endLine": 595,
        "endChar": 37
      },
      "revId": "106a23bd716dc00a687806dc5d5da73f9f5029c1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "63adddb0_7e0ff1e7",
        "filename": "src/tests/gl_tests/WebGLCompatibilityTest.cpp",
        "patchSetId": 9
      },
      "lineNbr": 601,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-01-15T03:48:28Z",
      "side": 1,
      "message": "use gl_raii.h for GLFramebuffer and GLTexture",
      "range": {
        "startLine": 601,
        "startChar": 4,
        "endLine": 601,
        "endChar": 18
      },
      "revId": "106a23bd716dc00a687806dc5d5da73f9f5029c1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43aa999c_e6a81420",
        "filename": "src/tests/gl_tests/WebGLCompatibilityTest.cpp",
        "patchSetId": 9
      },
      "lineNbr": 601,
      "author": {
        "id": 1166724
      },
      "writtenOn": "2017-01-17T22:14:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "63adddb0_7e0ff1e7",
      "range": {
        "startLine": 601,
        "startChar": 4,
        "endLine": 601,
        "endChar": 18
      },
      "revId": "106a23bd716dc00a687806dc5d5da73f9f5029c1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}