{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "32577526_878c0a99",
        "filename": "src/libANGLE/renderer/vulkan/vk_wrapper.h",
        "patchSetId": 3
      },
      "lineNbr": 407,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-09-22T13:21:40Z",
      "side": 1,
      "message": "I don\u0027t trust that this gets optimized out. Can you check the binary? Also making this a template class is a bit of unfortunate overhead. Is there another non-templated solution?",
      "range": {
        "startLine": 401,
        "startChar": 1,
        "endLine": 407,
        "endChar": 5
      },
      "revId": "ddf7ac9422a6d33a0a4fc1497ad5c4a67470fc03",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bf1fa295_e5381164",
        "filename": "src/libANGLE/renderer/vulkan/vk_wrapper.h",
        "patchSetId": 3
      },
      "lineNbr": 407,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-09-23T18:14:23Z",
      "side": 1,
      "message": "I made it a template specifically for this to be optimized out.\n\nWith an ANGLE secondary CB build, I checked with a debug build, and the function is empty, so it\u0027s optimized out even in a debug build. It\u0027s hard to find anything given all the inlining that\u0027s going on with this class.\n\nNote that the \u003ctrue\u003e variant of this template is never instantiated in a build with ANGLE\u0027s secondary CB, so the cost (both in terms of binary size and this if) is only paid in a build with Vulkan secondary CBs. If there\u0027s something to optimize, we can think of doing that if we ever want to officially support the Vulkan secondary CB build, WDYT?",
      "parentUuid": "32577526_878c0a99",
      "range": {
        "startLine": 401,
        "startChar": 1,
        "endLine": 407,
        "endChar": 5
      },
      "revId": "ddf7ac9422a6d33a0a4fc1497ad5c4a67470fc03",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4b881894_5fb5082e",
        "filename": "src/libANGLE/renderer/vulkan/vk_wrapper.h",
        "patchSetId": 3
      },
      "lineNbr": 407,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-09-24T18:06:27Z",
      "side": 1,
      "message": "follow-up: Is the function empty or is there a blank space where the function call should be?\n\nI was thinking we could get the same effect with a child class that defines this counting property. And we\u0027d keep this tracking entirely out of the \"ANGLE\" secondaries. The downside is you\u0027d need yet another duplicate of the whole set of commands, so a bunch more boilerplate. That led to to thinking that maybe we should auto-gen this class somehow.\n\nI\u0027m pretty sure you\u0027re not going to be excited about doing more work for this - but what are your thoughts? It would be nice to avoid templating this class for this particular feature.",
      "parentUuid": "bf1fa295_e5381164",
      "range": {
        "startLine": 401,
        "startChar": 1,
        "endLine": 407,
        "endChar": 5
      },
      "revId": "ddf7ac9422a6d33a0a4fc1497ad5c4a67470fc03",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ce581b4_4ad3892a",
        "filename": "src/libANGLE/renderer/vulkan/vk_wrapper.h",
        "patchSetId": 3
      },
      "lineNbr": 407,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-09-24T18:08:26Z",
      "side": 1,
      "message": "Sorry, I mean \"ANGLE\" primaries.",
      "parentUuid": "4b881894_5fb5082e",
      "range": {
        "startLine": 401,
        "startChar": 1,
        "endLine": 407,
        "endChar": 5
      },
      "revId": "ddf7ac9422a6d33a0a4fc1497ad5c4a67470fc03",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}