{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "3d4dbb30_528bd116",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "patchSetId": 3
      },
      "lineNbr": 35,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-11-24T19:25:33Z",
      "side": 1,
      "message": "This should be sizeof(PackedScissor.x), so it always matches whatever type that member happens to be.",
      "range": {
        "startLine": 35,
        "startChar": 64,
        "endLine": 35,
        "endChar": 72
      },
      "revId": "1ba30644f4d2cbb87c71030c3a43fc23cede2a38",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0bb9b8b3_c350d71c",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "patchSetId": 3
      },
      "lineNbr": 35,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-11-24T19:29:12Z",
      "side": 1,
      "message": "I really don\u0027t think you need this value or the assertion. SetBitField should cover everything. Am I missing something?",
      "parentUuid": "3d4dbb30_528bd116",
      "range": {
        "startLine": 35,
        "startChar": 64,
        "endLine": 35,
        "endChar": 72
      },
      "revId": "1ba30644f4d2cbb87c71030c3a43fc23cede2a38",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fa3f75d1_62a89921",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "patchSetId": 3
      },
      "lineNbr": 35,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-11-24T19:34:44Z",
      "side": 1,
      "message": "Shabi is using this special value to indicating that it is using dynamic state for scissor. So we do need to keep this. The assertion ensure no one is actually using this value, since it is reserved by ANGLE for special purpose.",
      "parentUuid": "0bb9b8b3_c350d71c",
      "range": {
        "startLine": 35,
        "startChar": 64,
        "endLine": 35,
        "endChar": 72
      },
      "revId": "1ba30644f4d2cbb87c71030c3a43fc23cede2a38",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0380900a_882c0cf7",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "patchSetId": 3
      },
      "lineNbr": 35,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-11-24T19:47:25Z",
      "side": 1,
      "message": "@Tim, sorry, how do I do that? compiler appears not like it.",
      "parentUuid": "fa3f75d1_62a89921",
      "range": {
        "startLine": 35,
        "startChar": 64,
        "endLine": 35,
        "endChar": 72
      },
      "revId": "1ba30644f4d2cbb87c71030c3a43fc23cede2a38",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f37428da_8eec5d93",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "patchSetId": 3
      },
      "lineNbr": 35,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-11-24T19:52:28Z",
      "side": 1,
      "message": "Never mind, figured out that I can use std::numeric_limits\u003cdecltype(PackedScissor::x)\u003e::max()",
      "parentUuid": "0380900a_882c0cf7",
      "range": {
        "startLine": 35,
        "startChar": 64,
        "endLine": 35,
        "endChar": 72
      },
      "revId": "1ba30644f4d2cbb87c71030c3a43fc23cede2a38",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3e5fa15c_ff7263ce",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "patchSetId": 3
      },
      "lineNbr": 35,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-11-24T20:07:53Z",
      "side": 1,
      "message": "I also reduced the assertion to only assert x, since only x is used for the special purpose.",
      "parentUuid": "f37428da_8eec5d93",
      "range": {
        "startLine": 35,
        "startChar": 64,
        "endLine": 35,
        "endChar": 72
      },
      "revId": "1ba30644f4d2cbb87c71030c3a43fc23cede2a38",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "45627863_d8894255",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "patchSetId": 3
      },
      "lineNbr": 35,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-11-24T20:11:33Z",
      "side": 1,
      "message": "NM. Entire assertion removed, given that we reported max size to kDynamicScissorSentinel-1, front end should have catched the error if user uses the invalid value.",
      "parentUuid": "3e5fa15c_ff7263ce",
      "range": {
        "startLine": 35,
        "startChar": 64,
        "endLine": 35,
        "endChar": 72
      },
      "revId": "1ba30644f4d2cbb87c71030c3a43fc23cede2a38",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f62eaeb0_ba0aecac",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "patchSetId": 3
      },
      "lineNbr": 35,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-11-24T21:07:15Z",
      "side": 1,
      "message": "Ahh, sorry, I misunderstood about the sentinel value. Ack.",
      "parentUuid": "45627863_d8894255",
      "range": {
        "startLine": 35,
        "startChar": 64,
        "endLine": 35,
        "endChar": 72
      },
      "revId": "1ba30644f4d2cbb87c71030c3a43fc23cede2a38",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e1b4e8a7_c4b3fbb5",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "patchSetId": 3
      },
      "lineNbr": 2457,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-11-24T21:07:15Z",
      "side": 1,
      "message": "I might be tempted to keep the ASSERT here as well just for safety. Sorry for the back and forth.",
      "range": {
        "startLine": 2457,
        "startChar": 4,
        "endLine": 2457,
        "endChar": 10
      },
      "revId": "1ba30644f4d2cbb87c71030c3a43fc23cede2a38",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "886babb6_f68de08d",
        "filename": "src/libANGLE/renderer/vulkan/vk_caps_utils.cpp",
        "patchSetId": 3
      },
      "lineNbr": 261,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-11-24T19:25:33Z",
      "side": 1,
      "message": "typo: LimitToUInt16MinusOne",
      "range": {
        "startLine": 261,
        "startChar": 76,
        "endLine": 261,
        "endChar": 86
      },
      "revId": "1ba30644f4d2cbb87c71030c3a43fc23cede2a38",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d449774b_95e4e449",
        "filename": "src/libANGLE/renderer/vulkan/vk_caps_utils.cpp",
        "patchSetId": 3
      },
      "lineNbr": 261,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-11-24T20:07:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "886babb6_f68de08d",
      "range": {
        "startLine": 261,
        "startChar": 76,
        "endLine": 261,
        "endChar": 86
      },
      "revId": "1ba30644f4d2cbb87c71030c3a43fc23cede2a38",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bfad7a33_57c21d71",
        "filename": "src/libANGLE/renderer/vulkan/vk_caps_utils.cpp",
        "patchSetId": 3
      },
      "lineNbr": 266,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-11-24T19:25:33Z",
      "side": 1,
      "message": "While this function is returning a value that\u0027s being limited to UINT16_MAX-1, this isn\u0027t intended to be used by generically, but is instead targeting only the width/height caps values.   To reflect that, I think this should:\n\n1. Use kDynamicScissorSentinel directly here, so the math here is always correct regardless of what kDynamicScissorSentinel actually is.\n2. Update the name of this function to something like: LimitToDynamicScissorSentinelMinusOne() to make it clear that this isn\u0027t intended for general use.\n\nThis also makes sure that if the sentinel does ever go away, this function is updated appropriately.",
      "range": {
        "startLine": 266,
        "startChar": 52,
        "endLine": 266,
        "endChar": 88
      },
      "revId": "1ba30644f4d2cbb87c71030c3a43fc23cede2a38",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "74c8150a_d2fea724",
        "filename": "src/libANGLE/renderer/vulkan/vk_caps_utils.cpp",
        "patchSetId": 3
      },
      "lineNbr": 266,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-11-24T20:07:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bfad7a33_57c21d71",
      "range": {
        "startLine": 266,
        "startChar": 52,
        "endLine": 266,
        "endChar": 88
      },
      "revId": "1ba30644f4d2cbb87c71030c3a43fc23cede2a38",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}