{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "359e8e98_299f74ff",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-04-21T14:41:40Z",
      "side": 1,
      "message": "Charlie/Tim PTAL. Mohan FYI",
      "revId": "5b41c8f9221282240b40146524e3565cab88deb2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "97c8a0b9_7d0aad28",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2021-04-21T18:25:20Z",
      "side": 1,
      "message": "LGTM with other than what Mohan and Shabi pointed out.",
      "revId": "5b41c8f9221282240b40146524e3565cab88deb2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d570916f_191461f6",
        "filename": "src/common/bitset_utils.h",
        "patchSetId": 2
      },
      "lineNbr": 1006,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-04-21T15:01:46Z",
      "side": 1,
      "message": "can\u0027t we early return when \"firstValue\" is set for the first time given \"offset\" is a monotonically increasing value?",
      "revId": "5b41c8f9221282240b40146524e3565cab88deb2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "566a17c0_fe4dc661",
        "filename": "src/common/bitset_utils.h",
        "patchSetId": 2
      },
      "lineNbr": 1006,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-04-21T15:09:31Z",
      "side": 1,
      "message": "+1. `return baseBitSet.first() + offset;` here should do the trick.",
      "parentUuid": "d570916f_191461f6",
      "revId": "5b41c8f9221282240b40146524e3565cab88deb2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6201585b_ceeed630",
        "filename": "src/common/bitset_utils.h",
        "patchSetId": 2
      },
      "lineNbr": 1020,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-04-21T15:01:46Z",
      "side": 1,
      "message": "might be a micro-opt but for looping from the end might be more optimal?",
      "revId": "5b41c8f9221282240b40146524e3565cab88deb2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bad2b5f7_b1452ec3",
        "filename": "src/common/bitset_utils.h",
        "patchSetId": 2
      },
      "lineNbr": 1024,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-04-21T15:01:46Z",
      "side": 1,
      "message": "if we for loop from end, we can early return when \"lastValue\" is set for the first time (of course, after modifying \"offset\" to be a monotonically decreasing value)",
      "revId": "5b41c8f9221282240b40146524e3565cab88deb2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c63e39d6_7116657b",
        "filename": "src/common/bitset_utils.h",
        "patchSetId": 2
      },
      "lineNbr": 1024,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-04-21T15:09:31Z",
      "side": 1,
      "message": "+1, same as above: `return baseBitSet.last() + offset;` with backwards loop",
      "parentUuid": "bad2b5f7_b1452ec3",
      "revId": "5b41c8f9221282240b40146524e3565cab88deb2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9be2ed23_c5c69151",
        "filename": "src/common/bitset_utils_unittest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 416,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-04-21T15:09:31Z",
      "side": 1,
      "message": "Please add a few tests that exercise the bit being set in the first, middle or last element in the array.",
      "revId": "5b41c8f9221282240b40146524e3565cab88deb2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}