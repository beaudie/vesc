{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "3a0d21f8_b76af106",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-03-10T15:47:09Z",
      "side": 1,
      "message": "shabi, fyi - added myself to the cc list",
      "revId": "ba9ead3bc2b7c59cbadaca68ccff98d6633f7aff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "41e82ecf_578d27ef",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-03-24T19:50:19Z",
      "side": 1,
      "message": "Sorry Mohan I didn\u0027t notice your comments before. I have been busy with something else, but I\u0027ll go through the failures soon and then see about addressing your comments.",
      "revId": "ba9ead3bc2b7c59cbadaca68ccff98d6633f7aff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d56df3c9_44fa398d",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 8
      },
      "lineNbr": 160,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-03-10T15:58:49Z",
      "side": 1,
      "message": "why a separate member? can\u0027t we reuse mNextAllocationOffset with some math to retrieve the current offset? feel like we shouldn\u0027t break that DynamicBuffer encapsulation",
      "range": {
        "startLine": 160,
        "startChar": 43,
        "endLine": 160,
        "endChar": 56
      },
      "revId": "ba9ead3bc2b7c59cbadaca68ccff98d6633f7aff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0e4faa92_c57b200a",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 8
      },
      "lineNbr": 160,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-05-04T20:57:21Z",
      "side": 1,
      "message": "mBufferOffset is the same as mBufferPool::mNextAllocationOffset, but that\u0027s only returned from mBufferPool.allocate() which is where this value is cached. That\u0027s not true for external buffers though. We could add a getter to DynamicBuffer, but things would get more complicated because we have to check isExternalBuffer() on every access.",
      "parentUuid": "d56df3c9_44fa398d",
      "range": {
        "startLine": 160,
        "startChar": 43,
        "endLine": 160,
        "endChar": 56
      },
      "revId": "ba9ead3bc2b7c59cbadaca68ccff98d6633f7aff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6ad5e0ba_e15a5f66",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 8
      },
      "lineNbr": 348,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-03-10T15:58:49Z",
      "side": 1,
      "message": "all alignment logic can be in a helper",
      "revId": "ba9ead3bc2b7c59cbadaca68ccff98d6633f7aff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2448eefa_90d8b009",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 8
      },
      "lineNbr": 348,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-05-04T20:57:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6ad5e0ba_e15a5f66",
      "revId": "ba9ead3bc2b7c59cbadaca68ccff98d6633f7aff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eb94cb52_452c7aac",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 8
      },
      "lineNbr": 365,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-03-10T15:58:49Z",
      "side": 1,
      "message": "IIUC, when the buffer has dynamic usage you alloc a vkBuffer of (16 * bufferSize). interesting, this should have triggered the mNextAllocationOffset bug i was talking about",
      "revId": "ba9ead3bc2b7c59cbadaca68ccff98d6633f7aff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2e89cf9a_654867fd",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 8
      },
      "lineNbr": 365,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-03-24T19:50:19Z",
      "side": 1,
      "message": "Yes Mohan, that\u0027s why I CCed you here! Once this lands you should be able to write your regression test.",
      "parentUuid": "eb94cb52_452c7aac",
      "revId": "ba9ead3bc2b7c59cbadaca68ccff98d6633f7aff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b86871e_0c9cb90f",
        "filename": "src/libANGLE/renderer/vulkan/BufferVk.cpp",
        "patchSetId": 8
      },
      "lineNbr": 365,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2021-05-05T02:06:44Z",
      "side": 1,
      "message": "My worry is that this is going to increase memory usage even further. We already having memory issues compared to native GLES.\n\nThe problem with dynamic buffer is that it is simple (sequential) version of sub-allocator. It can work very well if we have control of how it is been used. Things like staging buffer that is internal to ANGLE. But anything is out of our control, you could easily run into unused memory lie around somewhere that can\u0027t reused. And there are also applications requested STATIC_USE but use it like dynamic (we are talking about OpenGL here).\n\nWe already have a decent sub-allocator, which is VMA. My suggestion is to rely on VMA and we spend effort to optimize VMA for our usage.",
      "parentUuid": "2e89cf9a_654867fd",
      "revId": "ba9ead3bc2b7c59cbadaca68ccff98d6633f7aff",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}