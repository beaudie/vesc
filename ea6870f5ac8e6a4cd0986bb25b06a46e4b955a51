{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "87f5e748_a2bb6820",
        "filename": "src/libANGLE/renderer/wgpu/DisplayWgpu.cpp",
        "patchSetId": 1
      },
      "lineNbr": 285,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-04-10T17:53:15Z",
      "side": 1,
      "message": "What is an \"uncaptured error\"? Typically errors should bubble up as either GL errors or device loss, not just logged and forgotten.",
      "revId": "ea6870f5ac8e6a4cd0986bb25b06a46e4b955a51",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9de54d4c_6ceba8d1",
        "filename": "src/libANGLE/renderer/wgpu/DisplayWgpu.cpp",
        "patchSetId": 1
      },
      "lineNbr": 285,
      "author": {
        "id": 1516597
      },
      "writtenOn": "2024-04-10T18:31:25Z",
      "side": 1,
      "message": "So initially I had assumed device related errors would also immediately bubble up or end with device loss, but it looks like any errors to wgpu calls aren\u0027t handled by default. E.g., I now at least see logs for errors when calling CopyBufferToTexture.\n\nI do see there\u0027s also a PushErrorScope() and PopErrorScope() method for devices, and error scopes can be `Validation` `OutOfMemory` or `Internal`, I\u0027ll see if I can add an error scope at device creation then manually handle errors for wgpu calls afterwards. Device loss errors are handled separately, there\u0027s a `SetDeviceLostCallback` we\u0027ll need to use for that.\n\nAlternately I could modify this error callback set the userdata and have the display hold some type of ErrorSet similar to what contexts already do.",
      "parentUuid": "87f5e748_a2bb6820",
      "revId": "ea6870f5ac8e6a4cd0986bb25b06a46e4b955a51",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8738d8ee_86b40806",
        "filename": "src/libANGLE/renderer/wgpu/DisplayWgpu.cpp",
        "patchSetId": 1
      },
      "lineNbr": 285,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-04-10T19:51:59Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "9de54d4c_6ceba8d1",
      "revId": "ea6870f5ac8e6a4cd0986bb25b06a46e4b955a51",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "ea6870f5ac8e6a4cd0986bb25b06a46e4b955a51",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "ea6870f5ac8e6a4cd0986bb25b06a46e4b955a51",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "ea6870f5ac8e6a4cd0986bb25b06a46e4b955a51",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}