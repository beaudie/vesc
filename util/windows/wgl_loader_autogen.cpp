// GENERATED FILE - DO NOT EDIT.
// Generated by generate_loader.py using data from wgl.xml.
//
// Copyright 2020 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// wgl_loader_autogen.cpp:
//   Simple WGL function loader.

#include "wgl_loader_autogen.h"

PFNCHOOSEPIXELFORMATPROC ANGLE__ChoosePixelFormat;
PFNDESCRIBEPIXELFORMATPROC ANGLE__DescribePixelFormat;
PFNGETENHMETAFILEPIXELFORMATPROC ANGLE__GetEnhMetaFilePixelFormat;
PFNGETPIXELFORMATPROC ANGLE__GetPixelFormat;
PFNSETPIXELFORMATPROC ANGLE__SetPixelFormat;
PFNSWAPBUFFERSPROC ANGLE__SwapBuffers;
PFNWGLCOPYCONTEXTPROC ANGLE__wglCopyContext;
PFNWGLCREATECONTEXTPROC ANGLE__wglCreateContext;
PFNWGLCREATELAYERCONTEXTPROC ANGLE__wglCreateLayerContext;
PFNWGLDELETECONTEXTPROC ANGLE__wglDeleteContext;
PFNWGLDESCRIBELAYERPLANEPROC ANGLE__wglDescribeLayerPlane;
PFNWGLGETCURRENTCONTEXTPROC ANGLE__wglGetCurrentContext;
PFNWGLGETCURRENTDCPROC ANGLE__wglGetCurrentDC;
PFNWGLGETLAYERPALETTEENTRIESPROC ANGLE__wglGetLayerPaletteEntries;
PFNWGLGETPROCADDRESSPROC ANGLE__wglGetProcAddress;
PFNWGLMAKECURRENTPROC ANGLE__wglMakeCurrent;
PFNWGLREALIZELAYERPALETTEPROC ANGLE__wglRealizeLayerPalette;
PFNWGLSETLAYERPALETTEENTRIESPROC ANGLE__wglSetLayerPaletteEntries;
PFNWGLSHARELISTSPROC ANGLE__wglShareLists;
PFNWGLSWAPLAYERBUFFERSPROC ANGLE__wglSwapLayerBuffers;
PFNWGLUSEFONTBITMAPSPROC ANGLE__wglUseFontBitmaps;
PFNWGLUSEFONTBITMAPSAPROC ANGLE__wglUseFontBitmapsA;
PFNWGLUSEFONTBITMAPSWPROC ANGLE__wglUseFontBitmapsW;
PFNWGLUSEFONTOUTLINESPROC ANGLE__wglUseFontOutlines;
PFNWGLUSEFONTOUTLINESAPROC ANGLE__wglUseFontOutlinesA;
PFNWGLUSEFONTOUTLINESWPROC ANGLE__wglUseFontOutlinesW;
PFNWGLCREATECONTEXTATTRIBSARBPROC ANGLE__wglCreateContextAttribsARB;
PFNWGLGETEXTENSIONSSTRINGARBPROC ANGLE__wglGetExtensionsStringARB;
PFNWGLGETSWAPINTERVALEXTPROC ANGLE__wglGetSwapIntervalEXT;
PFNWGLSWAPINTERVALEXTPROC ANGLE__wglSwapIntervalEXT;

namespace angle
{
void LoadWGL(LoadProc loadProc)
{
    ANGLE__ChoosePixelFormat =
        reinterpret_cast<PFNCHOOSEPIXELFORMATPROC>(loadProc("ChoosePixelFormat"));
    ANGLE__DescribePixelFormat =
        reinterpret_cast<PFNDESCRIBEPIXELFORMATPROC>(loadProc("DescribePixelFormat"));
    ANGLE__GetEnhMetaFilePixelFormat =
        reinterpret_cast<PFNGETENHMETAFILEPIXELFORMATPROC>(loadProc("GetEnhMetaFilePixelFormat"));
    ANGLE__GetPixelFormat = reinterpret_cast<PFNGETPIXELFORMATPROC>(loadProc("GetPixelFormat"));
    ANGLE__SetPixelFormat = reinterpret_cast<PFNSETPIXELFORMATPROC>(loadProc("SetPixelFormat"));
    ANGLE__SwapBuffers    = reinterpret_cast<PFNSWAPBUFFERSPROC>(loadProc("SwapBuffers"));
    ANGLE__wglCopyContext = reinterpret_cast<PFNWGLCOPYCONTEXTPROC>(loadProc("wglCopyContext"));
    ANGLE__wglCreateContext =
        reinterpret_cast<PFNWGLCREATECONTEXTPROC>(loadProc("wglCreateContext"));
    ANGLE__wglCreateLayerContext =
        reinterpret_cast<PFNWGLCREATELAYERCONTEXTPROC>(loadProc("wglCreateLayerContext"));
    ANGLE__wglDeleteContext =
        reinterpret_cast<PFNWGLDELETECONTEXTPROC>(loadProc("wglDeleteContext"));
    ANGLE__wglDescribeLayerPlane =
        reinterpret_cast<PFNWGLDESCRIBELAYERPLANEPROC>(loadProc("wglDescribeLayerPlane"));
    ANGLE__wglGetCurrentContext =
        reinterpret_cast<PFNWGLGETCURRENTCONTEXTPROC>(loadProc("wglGetCurrentContext"));
    ANGLE__wglGetCurrentDC = reinterpret_cast<PFNWGLGETCURRENTDCPROC>(loadProc("wglGetCurrentDC"));
    ANGLE__wglGetLayerPaletteEntries =
        reinterpret_cast<PFNWGLGETLAYERPALETTEENTRIESPROC>(loadProc("wglGetLayerPaletteEntries"));
    ANGLE__wglGetProcAddress =
        reinterpret_cast<PFNWGLGETPROCADDRESSPROC>(loadProc("wglGetProcAddress"));
    ANGLE__wglMakeCurrent = reinterpret_cast<PFNWGLMAKECURRENTPROC>(loadProc("wglMakeCurrent"));
    ANGLE__wglRealizeLayerPalette =
        reinterpret_cast<PFNWGLREALIZELAYERPALETTEPROC>(loadProc("wglRealizeLayerPalette"));
    ANGLE__wglSetLayerPaletteEntries =
        reinterpret_cast<PFNWGLSETLAYERPALETTEENTRIESPROC>(loadProc("wglSetLayerPaletteEntries"));
    ANGLE__wglShareLists = reinterpret_cast<PFNWGLSHARELISTSPROC>(loadProc("wglShareLists"));
    ANGLE__wglSwapLayerBuffers =
        reinterpret_cast<PFNWGLSWAPLAYERBUFFERSPROC>(loadProc("wglSwapLayerBuffers"));
    ANGLE__wglUseFontBitmaps =
        reinterpret_cast<PFNWGLUSEFONTBITMAPSPROC>(loadProc("wglUseFontBitmaps"));
    ANGLE__wglUseFontBitmapsA =
        reinterpret_cast<PFNWGLUSEFONTBITMAPSAPROC>(loadProc("wglUseFontBitmapsA"));
    ANGLE__wglUseFontBitmapsW =
        reinterpret_cast<PFNWGLUSEFONTBITMAPSWPROC>(loadProc("wglUseFontBitmapsW"));
    ANGLE__wglUseFontOutlines =
        reinterpret_cast<PFNWGLUSEFONTOUTLINESPROC>(loadProc("wglUseFontOutlines"));
    ANGLE__wglUseFontOutlinesA =
        reinterpret_cast<PFNWGLUSEFONTOUTLINESAPROC>(loadProc("wglUseFontOutlinesA"));
    ANGLE__wglUseFontOutlinesW =
        reinterpret_cast<PFNWGLUSEFONTOUTLINESWPROC>(loadProc("wglUseFontOutlinesW"));
    ANGLE__wglCreateContextAttribsARB =
        reinterpret_cast<PFNWGLCREATECONTEXTATTRIBSARBPROC>(loadProc("wglCreateContextAttribsARB"));
    ANGLE__wglGetExtensionsStringARB =
        reinterpret_cast<PFNWGLGETEXTENSIONSSTRINGARBPROC>(loadProc("wglGetExtensionsStringARB"));
    ANGLE__wglGetSwapIntervalEXT =
        reinterpret_cast<PFNWGLGETSWAPINTERVALEXTPROC>(loadProc("wglGetSwapIntervalEXT"));
    ANGLE__wglSwapIntervalEXT =
        reinterpret_cast<PFNWGLSWAPINTERVALEXTPROC>(loadProc("wglSwapIntervalEXT"));
}
}  // namespace angle
