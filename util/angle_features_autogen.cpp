// GENERATED FILE - DO NOT EDIT.
// Generated by gen_features.py using data from *_features.json.
//
// Copyright 2022 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// angle_features_autogen.cpp: List of ANGLE features to help enable/disable them in tests.

#include "angle_features_autogen.h"

#include "common/PackedEnums.h"

namespace angle
{
namespace
{
constexpr PackedEnumMap<Feature, const char *> kFeatureNames = {{
    {Feature::AddAndTrueToLoopCondition, "add_and_true_to_loop_condition"},
    {Feature::AddMockTextureNoRenderTarget, "add_mock_texture_no_render_target"},
    {Feature::AdjustSrcDstRegionForBlitFramebuffer, "adjust_src_dst_region_for_BlitFramebuffer"},
    {Feature::AllocateNonZeroMemory, "allocate_non_zero_memory"},
    {Feature::AllowBufferReadWrite, "allow_buffer_read_write"},
    {Feature::AllowClearForRobustResourceInit, "allow_clear_for_robust_resource_init"},
    {Feature::AllowCompressedFormats, "allow_compressed_formats"},
    {Feature::AllowES3OnFL100, "allow_ES3_on_FL10_0"},
    {Feature::AllowETCFormats, "allow_ETC_formats"},
    {Feature::AllowGenerateMipmapWithCompute, "allow_GenerateMipmap_with_compute"},
    {Feature::AllowGenMultipleMipsPerPass, "allow_gen_multiple_mips_per_pass"},
    {Feature::AllowInlineConstVertexData, "allow_inline_const_vertex_data"},
    {Feature::AllowMultisampleStoreAndResolve, "allow_multisample_store_and_resolve"},
    {Feature::AllowRuntimeSamplerCompareMode, "allow_runtime_sampler_compare_mode"},
    {Feature::AllowSamplerCompareGradient, "allow_sampler_compare_gradient"},
    {Feature::AllowSamplerCompareLod, "allow_sampler_compare_lod"},
    {Feature::AllowSeparateDepthStencilBuffers, "allow_separate_depth_stencil_buffers"},
    {Feature::AllowTranslateUniformBlockToStructuredBuffer,
     "allow_translate_uniform_block_to_structured_buffer"},
    {Feature::AlwaysCallUseProgramAfterLink, "always_call_use_program_after_link"},
    {Feature::AlwaysUnbindFramebufferTexture2D, "always_unbind_framebuffer_texture_2D"},
    {Feature::AsyncCommandQueue, "async_command_queue"},
    {Feature::Avoid1BitAlphaTextureFormats, "avoid_1_bit_alpha_texture_formats"},
    {Feature::BasicGLLineRasterization, "basic_GL_line_rasterization"},
    {Feature::BindEmptyForUnusedDescriptorSets, "bind_empty_for_unused_descriptor_sets"},
    {Feature::BindTransformFeedbackBufferBeforeBindBufferRange,
     "bind_transform_feedback_buffer_before_bind_buffer_range"},
    {Feature::BottomLeftOriginPresentRegionRectangles,
     "bottom_left_origin_present_region_rectangles"},
    {Feature::BresenhamLineRasterization, "bresenham_line_rasterization"},
    {Feature::CallClearTwice, "call_clear_twice"},
    {Feature::ClampArrayAccess, "clamp_array_access"},
    {Feature::ClampFragDepth, "clamp_frag_depth"},
    {Feature::ClampMscRate, "clamp_msc_rate"},
    {Feature::ClampPointSize, "clamp_point_size"},
    {Feature::ClearToZeroOrOneBroken, "clear_to_zero_or_one_broken"},
    {Feature::ClipSrcRegionForBlitFramebuffer, "clip_src_region_for_BlitFramebuffer"},
    {Feature::CompressVertexData, "compress_vertex_data"},
    {Feature::CreatePipelineDuringLink, "create_pipeline_during_link"},
    {Feature::DecodeEncodeSRGBForGenerateMipmap, "decode_encode_SRGB_for_GenerateMipmap"},
    {Feature::DeferFlushUntilEndRenderPass, "defer_flush_until_end_render_pass"},
    {Feature::DepthClamping, "depth_clamping"},
    {Feature::DepthStencilBlitExtraCopy, "depth_stencil_blit_extra_copy"},
    {Feature::DirectMetalGeneration, "direct_metal_generation"},
    {Feature::DisableAnisotropicFiltering, "disable_anisotropic_filtering"},
    {Feature::DisableB5G6R5Support, "disable_B5G6R5_support"},
    {Feature::DisableBlendFuncExtended, "disable_blend_func_extended"},
    {Feature::DisableDrawBuffersIndexed, "disable_draw_buffers_indexed"},
    {Feature::DisableFifoPresentMode, "disable_fifo_present_mode"},
    {Feature::DisableFlippingBlitWithCommand, "disable_flipping_blit_with_command"},
    {Feature::DisableGPUSwitchingSupport, "disable_GPU_switching_support"},
    {Feature::DisableMultisampledRenderToTexture, "disable_multisampled_render_to_texture"},
    {Feature::DisableNativeParallelCompile, "disable_native_parallel_compile"},
    {Feature::DisableProgramBinary, "disable_program_binary"},
    {Feature::DisableProgramCachingForTransformFeedback,
     "disable_program_caching_for_transform_feedback"},
    {Feature::DisableSemaphoreFd, "disable_semaphore_fd"},
    {Feature::DisableSyncControlSupport, "disable_sync_control_support"},
    {Feature::DisableTimestampQueries, "disable_timestamp_queries"},
    {Feature::DisableWorkerContexts, "disable_worker_contexts"},
    {Feature::DisallowSeamfulCubeMapEmulation, "disallow_seamful_cube_map_emulation"},
    {Feature::DoesSRGBClearsOnLinearFramebufferAttachments,
     "does_SRGB_clears_on_linear_framebuffer_attachments"},
    {Feature::DontInitializeUninitializedLocals, "dont_initialize_uninitialized_locals"},
    {Feature::DontRelinkProgramsInParallel, "dont_relink_programs_in_parallel"},
    {Feature::DontUseLoopsToInitializeVariables, "dont_use_loops_to_initialize_variables"},
    {Feature::DoWhileGLSLCausesGPUHang, "do_while_GLSL_causes_GPU_hang"},
    {Feature::EmulateAbsIntFunction, "emulate_abs_int_function"},
    {Feature::EmulateAdvancedBlendEquations, "emulate_advanced_blend_equations"},
    {Feature::EmulateAtan2Float, "emulate_atan_2_float"},
    {Feature::EmulateCopyTexImage2DFromRenderbuffers, "emulate_CopyTexImage2D_from_renderbuffers"},
    {Feature::EmulateDithering, "emulate_dithering"},
    {Feature::EmulatedPrerotation180, "emulated_prerotation_180"},
    {Feature::EmulatedPrerotation270, "emulated_prerotation_270"},
    {Feature::EmulatedPrerotation90, "emulated_prerotation_90"},
    {Feature::EmulateImmutableCompressedTexture3D, "emulate_immutable_compressed_texture_3D"},
    {Feature::EmulateIsnanFloat, "emulate_isnan_float"},
    {Feature::EmulateMaxVertexAttribStride, "emulate_max_vertex_attrib_stride"},
    {Feature::EmulatePackSkipRowsAndPackSkipPixels, "emulate_pack_skip_rows_and_pack_skip_pixels"},
    {Feature::EmulatePrimitiveRestartFixedIndex, "emulate_primitive_restart_fixed_index"},
    {Feature::EmulateR32fImageAtomicExchange, "emulate_R32f_image_atomic_exchange"},
    {Feature::EmulateRGB10, "emulate_RGB10"},
    {Feature::EmulateTinyStencilTextures, "emulate_tiny_stencil_textures"},
    {Feature::EmulateTransformFeedback, "emulate_transform_feedback"},
    {Feature::EnableCaptureLimits, "enable_capture_limits"},
    {Feature::EnableCompressingPipelineCacheInThreadPool,
     "enable_compressing_pipeline_cache_in_thread_pool"},
    {Feature::EnableMultisampledRenderToTexture, "enable_multisampled_render_to_texture"},
    {Feature::EnablePrecisionQualifiers, "enable_precision_qualifiers"},
    {Feature::EnablePreRotateSurfaces, "enable_pre_rotate_surfaces"},
    {Feature::EnableProgramBinaryForCapture, "enable_program_binary_for_capture"},
    {Feature::ExpandIntegerPowExpressions, "expand_integer_pow_expressions"},
    {Feature::ExposeNonConformantExtensionsAndVersions,
     "expose_non_conformant_extensions_and_versions"},
    {Feature::FinishDoesNotCauseQueriesToBeAvailable,
     "finish_does_not_cause_queries_to_be_available"},
    {Feature::FlushAfterEndingTransformFeedback, "flush_after_ending_transform_feedback"},
    {Feature::FlushBeforeDeleteTextureIfCopiedTo, "flush_before_delete_texture_if_copied_to"},
    {Feature::FlushOnFramebufferChange, "flush_on_framebuffer_change"},
    {Feature::ForceAtomicValueResolution, "force_atomic_value_resolution"},
    {Feature::ForceBufferGPUStorage, "force_buffer_GPU_storage"},
    {Feature::ForceD16TexFilter, "force_D16_tex_filter"},
    {Feature::ForceD24S8AsUnsupported, "force_D24S8_as_unsupported"},
    {Feature::ForceDriverUniformOverSpecConst, "force_driver_uniform_over_spec_const"},
    {Feature::ForceFallbackFormat, "force_fallback_format"},
    {Feature::ForceFragmentShaderPrecisionHighpToMediump,
     "force_fragment_shader_precision_highp_to_mediump"},
    {Feature::ForceInitShaderVariables, "force_init_shader_variables"},
    {Feature::ForceMaxUniformBufferSize16KB, "force_max_uniform_buffer_size_16KB"},
    {Feature::ForceNearestFiltering, "force_nearest_filtering"},
    {Feature::ForceNearestMipFiltering, "force_nearest_mip_filtering"},
    {Feature::ForceNonCSBaseMipmapGeneration, "force_non_CS_base_mipmap_generation"},
    {Feature::ForceRobustResourceInit, "force_robust_resource_init"},
    {Feature::ForceSubmitImmutableTextureUpdates, "force_submit_immutable_texture_updates"},
    {Feature::ForceTextureLodOffset1, "force_texture_lod_offset_1"},
    {Feature::ForceTextureLodOffset2, "force_texture_lod_offset_2"},
    {Feature::ForceTextureLodOffset3, "force_texture_lod_offset_3"},
    {Feature::ForceTextureLodOffset4, "force_texture_lod_offset_4"},
    {Feature::GenerateSPIRVThroughGlslang, "generate_SPIRV_through_glslang"},
    {Feature::GetDimensionsIgnoresBaseLevel, "get_dimensions_ignores_base_level"},
    {Feature::HasBaseVertexInstancedDraw, "has_base_vertex_instanced_draw"},
    {Feature::HasCheapRenderPass, "has_cheap_render_pass"},
    {Feature::HasDepthAutoResolve, "has_depth_auto_resolve"},
    {Feature::HasEvents, "has_events"},
    {Feature::HasExplicitMemBarrier, "has_explicit_mem_barrier"},
    {Feature::HasNonUniformDispatch, "has_non_uniform_dispatch"},
    {Feature::HasShaderStencilOutput, "has_shader_stencil_output"},
    {Feature::HasStencilAutoResolve, "has_stencil_auto_resolve"},
    {Feature::HasTextureSwizzle, "has_texture_swizzle"},
    {Feature::InitFragmentOutputVariables, "init_fragment_output_variables"},
    {Feature::InitializeCurrentVertexAttributes, "initialize_current_vertex_attributes"},
    {Feature::IntelDisableFastMath, "intel_disable_fast_math"},
    {Feature::IntelExplicitBoolCastWorkaround, "intel_explicit_bool_cast_workaround"},
    {Feature::KeepBufferShadowCopy, "keep_buffer_shadow_copy"},
    {Feature::LimitMax3dArrayTextureSizeTo1024, "limit_max_3d_array_texture_size_to_1024"},
    {Feature::LimitMaxMSAASamplesTo4, "limit_max_MSAA_samples_to_4"},
    {Feature::LimitMaxTextureSizeTo4096, "limit_max_texture_size_to_4096"},
    {Feature::LogMemoryReportCallbacks, "log_memory_report_callbacks"},
    {Feature::LogMemoryReportStats, "log_memory_report_stats"},
    {Feature::LoseContextOnOutOfMemory, "lose_context_on_out_of_memory"},
    {Feature::MrtPerfWorkaround, "mrt_perf_workaround"},
    {Feature::MultisampleColorFormatShaderReadWorkaround,
     "multisample_color_format_shader_read_workaround"},
    {Feature::OverrideSurfaceFormatRGB8ToRGBA8, "override_surface_format_RGB8_to_RGBA8"},
    {Feature::PackLastRowSeparatelyForPaddingInclusion,
     "pack_last_row_separately_for_padding_inclusion"},
    {Feature::PackOverlappingRowsSeparatelyPackBuffer,
     "pack_overlapping_rows_separately_pack_buffer"},
    {Feature::PadBuffersToMaxVertexAttribStride, "pad_buffers_to_max_vertex_attrib_stride"},
    {Feature::PerFrameWindowSizeQuery, "per_frame_window_size_query"},
    {Feature::PersistentlyMappedBuffers, "persistently_mapped_buffers"},
    {Feature::PreAddTexelFetchOffsets, "pre_add_texel_fetch_offsets"},
    {Feature::PreferAggregateBarrierCalls, "prefer_aggregate_barrier_calls"},
    {Feature::PreferCPUForBufferSubData, "prefer_CPU_for_buffer_sub_data"},
    {Feature::PreferDrawClearOverVkCmdClearAttachments,
     "prefer_draw_clear_over_vkCmdClearAttachments"},
    {Feature::PreferSkippingInvalidateForEmulatedFormats,
     "prefer_skipping_invalidate_for_emulated_formats"},
    {Feature::PreferSubmitAtFBOBoundary, "prefer_submit_at_FBO_boundary"},
    {Feature::PromotePackedFormatsTo8BitPerChannel, "promote_packed_formats_to_8_bit_per_channel"},
    {Feature::ProvokingVertex, "provoking_vertex"},
    {Feature::QueryCounterBitsGeneratesErrors, "query_counter_bits_generates_errors"},
    {Feature::ReadPixelsUsingImplementationColorReadFormatForNorm16,
     "read_pixels_using_implementation_color_read_format_for_norm16"},
    {Feature::ReapplyUBOBindingsAfterUsingBinaryProgram,
     "reapply_UBO_bindings_after_using_binary_program"},
    {Feature::RegenerateStructNames, "regenerate_struct_names"},
    {Feature::RemoveDynamicIndexingOfSwizzledVector, "remove_dynamic_indexing_of_swizzled_vector"},
    {Feature::RemoveInvariantAndCentroidForESSL3, "remove_invariant_and_centroid_for_ESSL3"},
    {Feature::ResetTexImage2DBaseLevel, "reset_TexImage2D_base_level"},
    {Feature::RetainSPIRVDebugInfo, "retain_SPIRV_debug_info"},
    {Feature::RewriteFloatUnaryMinusOperator, "rewrite_float_unary_minus_operator"},
    {Feature::RewriteRepeatedAssignToSwizzled, "rewrite_repeated_assign_to_swizzled"},
    {Feature::RewriteRowMajorMatrices, "rewrite_row_major_matrices"},
    {Feature::RewriteUnaryMinusOperator, "rewrite_unary_minus_operator"},
    {Feature::RGBA4IsNotSupportedForColorRendering, "RGBA4_is_not_supported_for_color_rendering"},
    {Feature::RGBDXT1TexturesSampleZeroAlpha, "RGB_DXT1_textures_sample_zero_alpha"},
    {Feature::SanitizeAMDGPURendererString, "sanitize_AMDGPU_renderer_string"},
    {Feature::ScalarizeVecAndMatConstructorArgs, "scalarize_vec_and_mat_constructor_args"},
    {Feature::SelectViewInGeometryShader, "select_view_in_geometry_shader"},
    {Feature::SetDataFasterThanImageUpload, "set_data_faster_than_image_upload"},
    {Feature::SetPrimitiveRestartFixedIndexForDrawArrays,
     "set_primitive_restart_fixed_index_for_draw_arrays"},
    {Feature::SetZeroLevelBeforeGenerateMipmap, "set_zero_level_before_GenerateMipmap"},
    {Feature::ShadowBuffers, "shadow_buffers"},
    {Feature::ShiftInstancedArrayDataWithOffset, "shift_instanced_array_data_with_offset"},
    {Feature::SkipVSConstantRegisterZero, "skip_VS_constant_register_zero"},
    {Feature::SupportsAndroidHardwareBuffer, "supports_android_hardware_buffer"},
    {Feature::SupportsAndroidNativeFenceSync, "supports_android_native_fence_sync"},
    {Feature::SupportsBlendOperationAdvanced, "supports_blend_operation_advanced"},
    {Feature::SupportsCustomBorderColor, "supports_custom_border_color"},
    {Feature::SupportsDepthClipControl, "supports_depth_clip_control"},
    {Feature::SupportsDepthStencilResolve, "supports_depth_stencil_resolve"},
    {Feature::SupportsExternalFenceCapabilities, "supports_external_fence_capabilities"},
    {Feature::SupportsExternalFenceFd, "supports_external_fence_fd"},
    {Feature::SupportsExternalMemoryDmaBufAndModifiers,
     "supports_external_memory_dma_buf_and_modifiers"},
    {Feature::SupportsExternalMemoryFd, "supports_external_memory_fd"},
    {Feature::SupportsExternalMemoryFuchsia, "supports_external_memory_fuchsia"},
    {Feature::SupportsExternalMemoryHost, "supports_external_memory_host"},
    {Feature::SupportsExternalSemaphoreCapabilities, "supports_external_semaphore_capabilities"},
    {Feature::SupportsExternalSemaphoreFd, "supports_external_semaphore_fd"},
    {Feature::SupportsExternalSemaphoreFuchsia, "supports_external_semaphore_fuchsia"},
    {Feature::SupportsFilteringPrecision, "supports_filtering_precision"},
    {Feature::SupportsGeometryStreamsCapability, "supports_geometry_streams_capability"},
    {Feature::SupportsGGPFrameToken, "supports_GGP_frame_token"},
    {Feature::SupportsHostQueryReset, "supports_host_query_reset"},
    {Feature::SupportsImageCubeArray, "supports_image_cube_array"},
    {Feature::SupportsImageFormatList, "supports_image_format_list"},
    {Feature::SupportsIncrementalPresent, "supports_incremental_present"},
    {Feature::SupportsIndexTypeUint8, "supports_index_type_uint8"},
    {Feature::SupportsLockSurfaceExtension, "supports_lock_surface_extension"},
    {Feature::SupportsMultiDrawIndirect, "supports_multi_draw_indirect"},
    {Feature::SupportsMultisampledRenderToSingleSampled,
     "supports_multisampled_render_to_single_sampled"},
    {Feature::SupportsMultiview, "supports_multiview"},
    {Feature::SupportsNegativeViewport, "supports_negative_viewport"},
    {Feature::SupportsPipelineStatisticsQuery, "supports_pipeline_statistics_query"},
    {Feature::SupportsProtectedMemory, "supports_protected_memory"},
    {Feature::SupportsRenderpass2, "supports_renderpass2"},
    {Feature::SupportsRenderPassLoadStoreOpNone, "supports_render_pass_load_store_op_none"},
    {Feature::SupportsRenderPassStoreOpNone, "supports_render_pass_store_op_none"},
    {Feature::SupportsShaderFloat16, "supports_shader_float16"},
    {Feature::SupportsShaderFramebufferFetch, "supports_shader_framebuffer_fetch"},
    {Feature::SupportsShaderFramebufferFetchNonCoherent,
     "supports_shader_framebuffer_fetch_non_coherent"},
    {Feature::SupportsShaderStencilExport, "supports_shader_stencil_export"},
    {Feature::SupportsSharedPresentableImageExtension,
     "supports_shared_presentable_image_extension"},
    {Feature::SupportsSurfaceCapabilities2Extension, "supports_surface_capabilities2_extension"},
    {Feature::SupportsSurfacelessQueryExtension, "supports_surfaceless_query_extension"},
    {Feature::SupportsSurfaceProtectedCapabilitiesExtension,
     "supports_surface_protected_capabilities_extension"},
    {Feature::SupportsSurfaceProtectedSwapchains, "supports_surface_protected_swapchains"},
    {Feature::SupportsTransformFeedbackExtension, "supports_transform_feedback_extension"},
    {Feature::SupportsYUVSamplerConversion, "supports_YUV_sampler_conversion"},
    {Feature::SwapbuffersOnFlushOrFinishWithSingleBuffer,
     "swapbuffers_on_flush_or_finish_with_single_buffer"},
    {Feature::SyncVertexArraysToDefault, "sync_vertex_arrays_to_default"},
    {Feature::UnbindFBOBeforeSwitchingContext, "unbind_FBO_before_switching_context"},
    {Feature::UnfoldShortCircuits, "unfold_short_circuits"},
    {Feature::UnpackLastRowSeparatelyForPaddingInclusion,
     "unpack_last_row_separately_for_padding_inclusion"},
    {Feature::UnpackOverlappingRowsSeparatelyUnpackBuffer,
     "unpack_overlapping_rows_separately_unpack_buffer"},
    {Feature::UnsizedSRGBReadPixelsDoesntTransform, "unsized_SRGB_read_pixels_doesnt_transform"},
    {Feature::UploadTextureDataInChunks, "upload_texture_data_in_chunks"},
    {Feature::UseInstancedPointSpriteEmulation, "use_instanced_point_sprite_emulation"},
    {Feature::UseMultipleDescriptorsForExternalFormats,
     "use_multiple_descriptors_for_external_formats"},
    {Feature::UseSystemMemoryForConstantBuffers, "use_system_memory_for_constant_buffers"},
    {Feature::UseUnusedBlocksWithStandardOrSharedLayout,
     "use_unused_blocks_with_standard_or_shared_layout"},
    {Feature::VertexIDDoesNotIncludeBaseVertex, "vertex_ID_does_not_include_base_vertex"},
    {Feature::WaitIdleBeforeSwapchainRecreation, "wait_idle_before_swapchain_recreation"},
    {Feature::ZeroMaxLodWorkaround, "zero_max_lod_workaround"},
}};
}  // anonymous namespace

const char *GetFeatureName(Feature feature)
{
    return kFeatureNames[feature];
}

}  // namespace angle
