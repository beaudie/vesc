// GENERATED FILE - DO NOT EDIT.
// Generated by generate_loader.py using data from egl.xml and egl_angle_ext.xml.
//
// Copyright 2018 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// egl_loader_autogen.h:
//   Simple EGL function loader.

#ifndef UTIL_EGL_LOADER_AUTOGEN_H_
#define UTIL_EGL_LOADER_AUTOGEN_H_

#if defined(EGL_EGL_PROTOTYPES)
#    undef EGL_EGL_PROTOTYPES
#endif  // defined(EGL_EGL_PROTOTYPES)

#if defined(EGL_EGLEXT_PROTOTYPES)
#    undef EGL_EGLEXT_PROTOTYPES
#endif  // defined(EGL_EGLEXT_PROTOTYPES)

#include <EGL/egl.h>
#include <EGL/eglext.h>

extern PFNEGLCHOOSECONFIGPROC eglChooseConfig;
extern PFNEGLCOPYBUFFERSPROC eglCopyBuffers;
extern PFNEGLCREATECONTEXTPROC eglCreateContext;
extern PFNEGLCREATEPBUFFERSURFACEPROC eglCreatePbufferSurface;
extern PFNEGLCREATEPIXMAPSURFACEPROC eglCreatePixmapSurface;
extern PFNEGLCREATEWINDOWSURFACEPROC eglCreateWindowSurface;
extern PFNEGLDESTROYCONTEXTPROC eglDestroyContext;
extern PFNEGLDESTROYSURFACEPROC eglDestroySurface;
extern PFNEGLGETCONFIGATTRIBPROC eglGetConfigAttrib;
extern PFNEGLGETCONFIGSPROC eglGetConfigs;
extern PFNEGLGETCURRENTDISPLAYPROC eglGetCurrentDisplay;
extern PFNEGLGETCURRENTSURFACEPROC eglGetCurrentSurface;
extern PFNEGLGETDISPLAYPROC eglGetDisplay;
extern PFNEGLGETERRORPROC eglGetError;
extern PFNEGLGETPROCADDRESSPROC eglGetProcAddress;
extern PFNEGLINITIALIZEPROC eglInitialize;
extern PFNEGLMAKECURRENTPROC eglMakeCurrent;
extern PFNEGLQUERYCONTEXTPROC eglQueryContext;
extern PFNEGLQUERYSTRINGPROC eglQueryString;
extern PFNEGLQUERYSURFACEPROC eglQuerySurface;
extern PFNEGLSWAPBUFFERSPROC eglSwapBuffers;
extern PFNEGLTERMINATEPROC eglTerminate;
extern PFNEGLWAITGLPROC eglWaitGL;
extern PFNEGLWAITNATIVEPROC eglWaitNative;
extern PFNEGLBINDTEXIMAGEPROC eglBindTexImage;
extern PFNEGLRELEASETEXIMAGEPROC eglReleaseTexImage;
extern PFNEGLSURFACEATTRIBPROC eglSurfaceAttrib;
extern PFNEGLSWAPINTERVALPROC eglSwapInterval;
extern PFNEGLBINDAPIPROC eglBindAPI;
extern PFNEGLQUERYAPIPROC eglQueryAPI;
extern PFNEGLCREATEPBUFFERFROMCLIENTBUFFERPROC eglCreatePbufferFromClientBuffer;
extern PFNEGLRELEASETHREADPROC eglReleaseThread;
extern PFNEGLWAITCLIENTPROC eglWaitClient;
extern PFNEGLGETCURRENTCONTEXTPROC eglGetCurrentContext;
extern PFNEGLCREATESYNCPROC eglCreateSync;
extern PFNEGLDESTROYSYNCPROC eglDestroySync;
extern PFNEGLCLIENTWAITSYNCPROC eglClientWaitSync;
extern PFNEGLGETSYNCATTRIBPROC eglGetSyncAttrib;
extern PFNEGLCREATEIMAGEPROC eglCreateImage;
extern PFNEGLDESTROYIMAGEPROC eglDestroyImage;
extern PFNEGLGETPLATFORMDISPLAYPROC eglGetPlatformDisplay;
extern PFNEGLCREATEPLATFORMWINDOWSURFACEPROC eglCreatePlatformWindowSurface;
extern PFNEGLCREATEPLATFORMPIXMAPSURFACEPROC eglCreatePlatformPixmapSurface;
extern PFNEGLWAITSYNCPROC eglWaitSync;
extern PFNEGLSETBLOBCACHEFUNCSANDROIDPROC eglSetBlobCacheFuncsANDROID;
extern PFNEGLQUERYSURFACEPOINTERANGLEPROC eglQuerySurfacePointerANGLE;
extern PFNEGLQUERYDEVICEATTRIBEXTPROC eglQueryDeviceAttribEXT;
extern PFNEGLQUERYDEVICESTRINGEXTPROC eglQueryDeviceStringEXT;
extern PFNEGLQUERYDEVICESEXTPROC eglQueryDevicesEXT;
extern PFNEGLQUERYDISPLAYATTRIBEXTPROC eglQueryDisplayAttribEXT;
extern PFNEGLCREATEPLATFORMPIXMAPSURFACEEXTPROC eglCreatePlatformPixmapSurfaceEXT;
extern PFNEGLCREATEPLATFORMWINDOWSURFACEEXTPROC eglCreatePlatformWindowSurfaceEXT;
extern PFNEGLGETPLATFORMDISPLAYEXTPROC eglGetPlatformDisplayEXT;
extern PFNEGLDEBUGMESSAGECONTROLKHRPROC eglDebugMessageControlKHR;
extern PFNEGLLABELOBJECTKHRPROC eglLabelObjectKHR;
extern PFNEGLQUERYDEBUGKHRPROC eglQueryDebugKHR;
extern PFNEGLCREATESTREAMKHRPROC eglCreateStreamKHR;
extern PFNEGLDESTROYSTREAMKHRPROC eglDestroyStreamKHR;
extern PFNEGLQUERYSTREAMKHRPROC eglQueryStreamKHR;
extern PFNEGLQUERYSTREAMU64KHRPROC eglQueryStreamu64KHR;
extern PFNEGLSTREAMATTRIBKHRPROC eglStreamAttribKHR;
extern PFNEGLSTREAMCONSUMERACQUIREKHRPROC eglStreamConsumerAcquireKHR;
extern PFNEGLSTREAMCONSUMERGLTEXTUREEXTERNALKHRPROC eglStreamConsumerGLTextureExternalKHR;
extern PFNEGLSTREAMCONSUMERRELEASEKHRPROC eglStreamConsumerReleaseKHR;
extern PFNEGLSTREAMCONSUMERGLTEXTUREEXTERNALATTRIBSNVPROC
    eglStreamConsumerGLTextureExternalAttribsNV;

namespace angle
{
using GenericProc = void (*)();
using LoadProc    = GenericProc(KHRONOS_APIENTRY *)(const char *);
void LoadEGL(LoadProc loadProc);
}  // namespace angle

#endif  // UTIL_EGL_LOADER_AUTOGEN_H_
