{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "62bb15cb_d4092dce",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1185214
      },
      "writtenOn": "2022-04-28T21:01:34Z",
      "side": 1,
      "message": "I tested this locally, and I think it fails in a slightly different way now. Continue is interpreted as \"the cache worked, we have a linked result\". Except we don\u0027t. So again, normal program linking always fails (the glLinkProgram call succeeds, but then getting GL_LINK_STATUS reports 0).",
      "revId": "623ba954c8768f7354dea9a893d786b2a9a4879c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "534e4766_c1edae48",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1185214
      },
      "writtenOn": "2022-04-28T21:03:24Z",
      "side": 1,
      "message": "I should note that I tried this with the GL backend, and it didn\u0027t fail in the same way (does that not have the in-memory cache?). I could only get it to break with the D3D backend (I was specifically testing ES3 on D3D11).",
      "parentUuid": "62bb15cb_d4092dce",
      "revId": "623ba954c8768f7354dea9a893d786b2a9a4879c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f878c935_ec026a1f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1190898
      },
      "writtenOn": "2022-04-28T21:11:16Z",
      "side": 1,
      "message": "Hmm, where do you see the continue being treated that way? I\u0027m just curious -- is the check on the following line also broken?\n\n```\n    if (binaryFormat !\u003d GL_PROGRAM_BINARY_ANGLE)\n    {\n        infoLog \u003c\u003c \"Invalid program binary format.\";\n        return angle::Result::Continue;\n    }\n```",
      "parentUuid": "62bb15cb_d4092dce",
      "revId": "623ba954c8768f7354dea9a893d786b2a9a4879c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dfecb585_b70b8d36",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1185214
      },
      "writtenOn": "2022-04-28T21:12:35Z",
      "side": 1,
      "message": "Yes, I think so, although that one probably can\u0027t trigger for the in-memory cache (because the data isn\u0027t on disk and subject to interference). But specifically, this CL causes us to meet the conditions to take this early return:\n\nhttps://source.chromium.org/chromium/chromium/src/+/main:third_party/angle/src/libANGLE/Program.cpp;l\u003d1235;drc\u003df9729598a6a0c6119d2373b6890aaf454b80d87b\n\nThat means we never proceed to do the actual linking after the memory cache fails.",
      "parentUuid": "f878c935_ec026a1f",
      "revId": "623ba954c8768f7354dea9a893d786b2a9a4879c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1ae01552_03f7c28e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1190898
      },
      "writtenOn": "2022-04-28T21:13:01Z",
      "side": 1,
      "message": "ah I see what you\u0027re saying. In MemoryProgramCache, right?",
      "parentUuid": "f878c935_ec026a1f",
      "revId": "623ba954c8768f7354dea9a893d786b2a9a4879c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "360476df_e899a1c9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1185214
      },
      "writtenOn": "2022-04-28T21:14:49Z",
      "side": 1,
      "message": "Right, the Continue here bubbles back up to that area of Program::linkImpl I highlighted. And then we interpret that as success, rather than \"no, we need to actually link the program\". (Which, according to the comment, is indicated by Incomplete)",
      "parentUuid": "1ae01552_03f7c28e",
      "revId": "623ba954c8768f7354dea9a893d786b2a9a4879c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e9970f63_0ffe5147",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1190898
      },
      "writtenOn": "2022-04-28T21:14:57Z",
      "side": 1,
      "message": "Okay. I think I can fix this, but am in an interview currently, will be later today.",
      "parentUuid": "1ae01552_03f7c28e",
      "revId": "623ba954c8768f7354dea9a893d786b2a9a4879c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d2d922ad_d5714f10",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1185214
      },
      "writtenOn": "2022-04-28T21:16:38Z",
      "side": 1,
      "message": "No problem. And note that MemoryProgramCache actually returns Incomplete in similar situations. In fact, it *only* returns Continue or Incomplete, never Stop.",
      "parentUuid": "e9970f63_0ffe5147",
      "revId": "623ba954c8768f7354dea9a893d786b2a9a4879c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8333e606_3f34149a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1190898
      },
      "writtenOn": "2022-04-28T21:31:37Z",
      "side": 1,
      "message": "That makes sense, I\u0027m worried about what happens in glProgramBinary(..) though, which I think calls loadBinary directly.",
      "parentUuid": "d2d922ad_d5714f10",
      "revId": "623ba954c8768f7354dea9a893d786b2a9a4879c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6b3f258b_16d3dbc8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1185214
      },
      "writtenOn": "2022-04-28T21:36:54Z",
      "side": 1,
      "message": "Agreed. I\u0027m wondering if MemoryProgramCache should instead translate Stop results into Incomplete? (And then go back to returning Stop when things fail). If we go that route, it would also be nice to take Jamie\u0027s suggestion and report 0 program-binary formats if the binary loading is disabled, but that just saves us from having to explicitly disable use of the feature on our bots, where we happen to know that it won\u0027t work.",
      "parentUuid": "8333e606_3f34149a",
      "revId": "623ba954c8768f7354dea9a893d786b2a9a4879c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "afb0c7e8_b16a0b93",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1190898
      },
      "writtenOn": "2022-04-28T21:53:50Z",
      "side": 1,
      "message": "I want to just have Program have a loadCachedBinary() that does the check, and then defers to loadBinary() if things are fine, and have MemoryProgramCache call into loadCachedBinary. WDYT?",
      "parentUuid": "6b3f258b_16d3dbc8",
      "revId": "623ba954c8768f7354dea9a893d786b2a9a4879c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "09c3aef3_035885a9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1190898
      },
      "writtenOn": "2022-04-28T22:15:23Z",
      "side": 1,
      "message": "To expand: loadBinary() should always (right?) allow glProgramBinary calls to succeed (well, assuming no other errors). It\u0027s really the case where the cache has an invalid/old binary. We\u0027ve been trying to hack loadBinary() to handle both cases, but it seems like the safest thing would be to have a slightly separate codepath for the cached case. I mean, alternately, I guess we could just check the feature define in MemoryProgramCache...",
      "parentUuid": "afb0c7e8_b16a0b93",
      "revId": "623ba954c8768f7354dea9a893d786b2a9a4879c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d0f59175_77ac60df",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1190898
      },
      "writtenOn": "2022-04-28T23:57:13Z",
      "side": 1,
      "message": "I take it back -- glProgramBinary should not \"always\" work, because apps may be caching the old serialization format also. so I think just returning ::Incomplete in loadBinary seems right.",
      "parentUuid": "09c3aef3_035885a9",
      "revId": "623ba954c8768f7354dea9a893d786b2a9a4879c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f293dcb8_a807b6b3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1185214
      },
      "writtenOn": "2022-04-29T14:37:40Z",
      "side": 1,
      "message": "Yes, I think that\u0027s valid. I tested this version to be sure, and it works fine on our end.",
      "parentUuid": "d0f59175_77ac60df",
      "revId": "623ba954c8768f7354dea9a893d786b2a9a4879c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "26c36c0b_ad8f2a0a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1190898
      },
      "writtenOn": "2022-05-02T17:42:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f293dcb8_a807b6b3",
      "revId": "623ba954c8768f7354dea9a893d786b2a9a4879c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}