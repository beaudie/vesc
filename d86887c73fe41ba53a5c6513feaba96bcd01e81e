{
  "comments": [
    {
      "key": {
        "uuid": "92f6398a_43ef91ba",
        "filename": "src/compiler/translator/builtin_symbols_hash_autogen.txt",
        "patchSetId": 3
      },
      "lineNbr": 1,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-04-04T14:56:37Z",
      "side": 1,
      "message": "don\u0027t recall seeing this file before - is this a workaround for the run_code_gen script not handling time stamps correctly?",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 1,
        "endChar": 32
      },
      "revId": "d86887c73fe41ba53a5c6513feaba96bcd01e81e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "32517d2d_a8e3e595",
        "filename": "src/compiler/translator/builtin_symbols_hash_autogen.txt",
        "patchSetId": 3
      },
      "lineNbr": 1,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2018-04-04T14:58:57Z",
      "side": 1,
      "message": "Yes, that\u0027s the idea.",
      "parentUuid": "92f6398a_43ef91ba",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 1,
        "endChar": 32
      },
      "revId": "d86887c73fe41ba53a5c6513feaba96bcd01e81e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a3bae86e_0f5e455d",
        "filename": "src/compiler/translator/tree_util/BuiltIn_autogen.h",
        "patchSetId": 3
      },
      "lineNbr": 20,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2018-04-04T12:24:34Z",
      "side": 1,
      "message": "This generated a much larger shader_translator binary size on Linux if I simply had constant integers here, but I wonder if that\u0027s because even the release build binary includes some debug information that\u0027s stripped from actual releases? It would be nicer not to use the defines.",
      "revId": "d86887c73fe41ba53a5c6513feaba96bcd01e81e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "00e49eb1_ab859978",
        "filename": "src/compiler/translator/tree_util/BuiltIn_autogen.h",
        "patchSetId": 3
      },
      "lineNbr": 20,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2018-04-04T14:06:08Z",
      "side": 1,
      "message": "What was the alternative? I suspect query functions would go away with LTO/LTCG but this kind of stuff is hard to test for.",
      "parentUuid": "a3bae86e_0f5e455d",
      "revId": "d86887c73fe41ba53a5c6513feaba96bcd01e81e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d8379c19_66a460b8",
        "filename": "src/compiler/translator/tree_util/BuiltIn_autogen.h",
        "patchSetId": 3
      },
      "lineNbr": 20,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2018-04-04T14:07:13Z",
      "side": 1,
      "message": "I just had const int values inside a namespace as the alternative.",
      "parentUuid": "00e49eb1_ab859978",
      "revId": "d86887c73fe41ba53a5c6513feaba96bcd01e81e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b159aac9_1056485c",
        "filename": "src/compiler/translator/tree_util/BuiltIn_autogen.h",
        "patchSetId": 3
      },
      "lineNbr": 20,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2018-04-04T14:10:38Z",
      "side": 1,
      "message": "Would static constexpr help?",
      "parentUuid": "d8379c19_66a460b8",
      "revId": "d86887c73fe41ba53a5c6513feaba96bcd01e81e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8a3fb121_729529ac",
        "filename": "src/compiler/translator/tree_util/BuiltIn_autogen.h",
        "patchSetId": 3
      },
      "lineNbr": 20,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-04-04T14:56:37Z",
      "side": 1,
      "message": "constant integers are weird.. static constexpr should be better. Can you make sure you were using constepxr? Maybe the fellow responding on the binary size regression issue would know.\n\nYou can also try building with the same flags as they use to detect binary size regressions (assuming you weren\u0027t already)",
      "parentUuid": "b159aac9_1056485c",
      "revId": "d86887c73fe41ba53a5c6513feaba96bcd01e81e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b0b48a78_b092ef79",
        "filename": "src/compiler/translator/tree_util/BuiltIn_autogen.h",
        "patchSetId": 3
      },
      "lineNbr": 20,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2018-04-04T14:58:57Z",
      "side": 1,
      "message": "I could try different flags. Are the proper flags documented somewhere?",
      "parentUuid": "8a3fb121_729529ac",
      "revId": "d86887c73fe41ba53a5c6513feaba96bcd01e81e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}