{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "bd11a894_b01b3de6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-02-26T20:32:40Z",
      "side": 1,
      "message": "Coming together nicely, I mostly have nits. Do try to get rid of `mIsFoveatedRenderingModeDirty`!",
      "revId": "07cbba15fd2c83ad341eb4421306832ae3fda26a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6b2bfb13_8f5fc94a",
        "filename": "src/libANGLE/Image.h",
        "patchSetId": 6
      },
      "lineNbr": 156,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-02-26T20:32:40Z",
      "side": 1,
      "message": "This is unnecessary, you can let ImageSibling not override `getFoveationState` and let Texture and Renderbuffer override it as necessary.\n\nOne tiny complication is ExternalImageSibling, and my suggestion is to make `getFoveationState` return a pointer and return nullptr in that class. At call site, you can assert that the pointer is not nullptr.",
      "revId": "07cbba15fd2c83ad341eb4421306832ae3fda26a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "44d76eeb_4bfcf2fc",
        "filename": "src/libANGLE/Image.h",
        "patchSetId": 6
      },
      "lineNbr": 156,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2024-03-01T21:58:19Z",
      "side": 1,
      "message": "isnt it safer and performant (due to less branch instructions) to not have possibility of nullptrs at the cost of a little extra memory?",
      "parentUuid": "6b2bfb13_8f5fc94a",
      "revId": "07cbba15fd2c83ad341eb4421306832ae3fda26a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f7114a0a_a9292114",
        "filename": "src/libANGLE/Image.h",
        "patchSetId": 6
      },
      "lineNbr": 156,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-03-02T02:38:44Z",
      "side": 1,
      "message": "It\u0027s not the memory cost, just code maintenance. It can be confusing to see state here that doesn\u0027t apply.\n\nThere are no extra branch instructions, just an ASSERT that\u0027s compiled out. In terms of safety, it\u0027s meaningful to that some attachments don\u0027t have this state (so nullptr makes sense).",
      "parentUuid": "44d76eeb_4bfcf2fc",
      "revId": "07cbba15fd2c83ad341eb4421306832ae3fda26a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e2950003_1728d123",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 1698,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-02-26T20:32:40Z",
      "side": 1,
      "message": "typo: `provides requires`",
      "revId": "07cbba15fd2c83ad341eb4421306832ae3fda26a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b94589d0_ede533f4",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 1698,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2024-03-01T21:58:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e2950003_1728d123",
      "revId": "07cbba15fd2c83ad341eb4421306832ae3fda26a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f3a7f2d8_aab6186f",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 1716,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-02-26T20:32:40Z",
      "side": 1,
      "message": "```suggestion\n                    (static_cast\u003cfloat\u003e(x) * fragmentShadingRateBlockWidth / attachmentWidth - 0.5f) * 2.0f;\n```",
      "revId": "07cbba15fd2c83ad341eb4421306832ae3fda26a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5afa72fa_9a121a7f",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 1716,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2024-03-01T21:58:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f3a7f2d8_aab6186f",
      "revId": "07cbba15fd2c83ad341eb4421306832ae3fda26a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff106aec_2df9b69e",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 1718,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-02-26T20:32:40Z",
      "side": 1,
      "message": "```suggestion\n                    (static_cast\u003cfloat\u003e(y) * fragmentShadingRateBlockHeight / attachmentHeight - 0.5f) * 2.0f;\n```",
      "revId": "07cbba15fd2c83ad341eb4421306832ae3fda26a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b9f3f491_f2e936fa",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 1718,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2024-03-01T21:58:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ff106aec_2df9b69e",
      "revId": "07cbba15fd2c83ad341eb4421306832ae3fda26a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f724ae41_6f9a90b2",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 1727,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-02-26T20:32:40Z",
      "side": 1,
      "message": "super nit: `((a*b)+(c*d))-e \u003d\u003d a*b+c*d-e`\n\n```suggestion\n                        1.0f / std::max(std::powf(activeFocalPoints[point].focalX - px, 2) *\n                                        std::powf(activeFocalPoints[point].gainX, 2) +\n                                        std::powf(activeFocalPoints[point].focalY - py, 2) *\n                                        std::powf(activeFocalPoints[point].gainY, 2) -\n                                        activeFocalPoints[point].foveaArea,\n```",
      "range": {
        "startLine": 1723,
        "startChar": 0,
        "endLine": 1727,
        "endChar": 77
      },
      "revId": "07cbba15fd2c83ad341eb4421306832ae3fda26a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2624a971_9262c66a",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 1727,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2024-03-01T21:58:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f724ae41_6f9a90b2",
      "range": {
        "startLine": 1723,
        "startChar": 0,
        "endLine": 1727,
        "endChar": 77
      },
      "revId": "07cbba15fd2c83ad341eb4421306832ae3fda26a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "418bcd9b_2dba560a",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 1751,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-02-26T20:32:40Z",
      "side": 1,
      "message": "A comment about what this logic is would be nice. Does `AxB` translate to `B \u003e\u003e 1 | A \u003c\u003c 1` somehow?",
      "range": {
        "startLine": 1737,
        "startChar": 0,
        "endLine": 1751,
        "endChar": 17
      },
      "revId": "07cbba15fd2c83ad341eb4421306832ae3fda26a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "75d79a6a_814d544a",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 1751,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2024-03-01T21:58:19Z",
      "side": 1,
      "message": "got this from a khronos sample here -\u003e https://github.com/KhronosGroup/Vulkan-Samples/blob/main/samples/extensions/fragment_shading_rate/fragment_shading_rate.cpp#L154\n\ndid not have a comment in there either",
      "parentUuid": "418bcd9b_2dba560a",
      "range": {
        "startLine": 1737,
        "startChar": 0,
        "endLine": 1751,
        "endChar": 17
      },
      "revId": "07cbba15fd2c83ad341eb4421306832ae3fda26a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "21569703_12fc75e5",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 1751,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-03-02T02:38:44Z",
      "side": 1,
      "message": "Ah ok, explanation is just a bit above it: https://github.com/KhronosGroup/Vulkan-Samples/blob/main/samples/extensions/fragment_shading_rate/fragment_shading_rate.cpp#L127\n\nTaken from the spec https://docs.vulkan.org/spec/latest/chapters/primsrast.html#primsrast-fragment-shading-rate-attachment\n\nBasically:\n\n```\nw \u003d 2^((texel/4) \u0026 3)\nh \u003d 2^(texel \u0026 3)\n```\n\nSo `texel` should be calculated as `log2(w) \u003c\u003c 2 | log2(h)`. Since `log2(1) \u003d\u003d 0`, `log2(2) \u003d\u003d 1` and `log2(4) \u003d\u003d 2`, it just so happens that `log2(x) \u003d\u003d x \u003e\u003e 1` for the few numbers that are allowed in the ext. Making that expression equal to `w \u003c\u003c 1 | h \u003e\u003e 1`.",
      "parentUuid": "75d79a6a_814d544a",
      "range": {
        "startLine": 1737,
        "startChar": 0,
        "endLine": 1751,
        "endChar": 17
      },
      "revId": "07cbba15fd2c83ad341eb4421306832ae3fda26a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1956c577_f1a7bbcb",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 1751,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2024-03-02T21:54:28Z",
      "side": 1,
      "message": "thank you for the details shabi, have added a note",
      "parentUuid": "21569703_12fc75e5",
      "range": {
        "startLine": 1737,
        "startChar": 0,
        "endLine": 1751,
        "endChar": 17
      },
      "revId": "07cbba15fd2c83ad341eb4421306832ae3fda26a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "79da22e8_4bef7d47",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 1791,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-02-26T20:32:40Z",
      "side": 1,
      "message": "Looking for `UnsignedCeilDivide`?",
      "range": {
        "startLine": 1789,
        "startChar": 0,
        "endLine": 1791,
        "endChar": 92
      },
      "revId": "07cbba15fd2c83ad341eb4421306832ae3fda26a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c96ef40c_1ea0a079",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 1791,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2024-03-01T21:58:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "79da22e8_4bef7d47",
      "range": {
        "startLine": 1789,
        "startChar": 0,
        "endLine": 1791,
        "endChar": 92
      },
      "revId": "07cbba15fd2c83ad341eb4421306832ae3fda26a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d6517c20_7f5a454e",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 1804,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-02-26T20:32:40Z",
      "side": 1,
      "message": "_Technically_ this, given that `isGainZero` is bool (not int):\n\n```suggestion\n            isGainZero \u003d isGainZero \u0026\u0026 focalPoint.gainX \u003d\u003d 0 \u0026\u0026 focalPoint.gainY \u003d\u003d 0;\n```",
      "revId": "07cbba15fd2c83ad341eb4421306832ae3fda26a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "58d86cd3_b259247a",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 1804,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2024-03-01T21:58:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d6517c20_7f5a454e",
      "revId": "07cbba15fd2c83ad341eb4421306832ae3fda26a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "869d2dc2_6960a6c4",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 2375,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-02-26T20:32:40Z",
      "side": 1,
      "message": "Wouldn\u0027t `mState.getExtents()` work everywhere? (i.e. no need to cache this)\n\nI\u0027m saying that at least based on how `FramebufferVk::getFramebuffer` creates the VkFramebuffer.",
      "revId": "07cbba15fd2c83ad341eb4421306832ae3fda26a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c7b18070_4a8736d2",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 2375,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2024-03-01T21:58:19Z",
      "side": 1,
      "message": "`mState.getExtents()` returns the intersection of all attachments, i need the extents of only that attachment that needs foveated rendering",
      "parentUuid": "869d2dc2_6960a6c4",
      "revId": "07cbba15fd2c83ad341eb4421306832ae3fda26a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ea5579ba_edba3387",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 2375,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-03-02T02:38:44Z",
      "side": 1,
      "message": "Didn\u0027t remember GL lets the framebuffer attachments to have different sizes!\n\nAt least then please call this `foveatedAttachmentSize`.",
      "parentUuid": "c7b18070_4a8736d2",
      "revId": "07cbba15fd2c83ad341eb4421306832ae3fda26a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "10f100f7_1cc7d779",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 2375,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2024-03-02T21:54:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ea5579ba_edba3387",
      "revId": "07cbba15fd2c83ad341eb4421306832ae3fda26a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ba333972_2b302b6f",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "patchSetId": 6
      },
      "lineNbr": 339,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-02-26T20:32:40Z",
      "side": 1,
      "message": "Please use `VK_ATTACHMENT_STORE_OP_NONE` when available. You can gate support for the extension to when either of `VK_QCOM_render_pass_store_ops` or `VK_EXT_load_store_op_none` is present and always use STORE_OP_NONE here, no need to support this extension on too old drivers.",
      "revId": "07cbba15fd2c83ad341eb4421306832ae3fda26a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e40909d3_a426e07d",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "patchSetId": 6
      },
      "lineNbr": 339,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2024-03-01T21:58:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ba333972_2b302b6f",
      "revId": "07cbba15fd2c83ad341eb4421306832ae3fda26a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}