{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2d154dd9_bdcddaeb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1543967
      },
      "writtenOn": "2023-03-20T19:00:11Z",
      "side": 1,
      "message": "If the spec changes look good, I can go ahead and implement these methods.\n\nThis will enable us to properly clear after compositing when the app leaves pixel local storage enabled (thanks for the test idea Alexey!), and interrupt pixel local storage on the command buffer without having to make any queries.",
      "revId": "b5f3a5354ea813ac855ba1f71f25035880b61d26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "36c22c9e_09174252",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2023-03-20T19:17:56Z",
      "side": 1,
      "message": "This seems like a good simplification from the browser\u0027s standpoint. Should a new query be added like glIsFramebufferPixelLocalStorageInterruptedANGLE? It could be a simple boolean rather than needing to add a new integer \"interrupt count\" query enum.",
      "revId": "b5f3a5354ea813ac855ba1f71f25035880b61d26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "05935d20_d0807ebe",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1543967
      },
      "writtenOn": "2023-03-20T19:21:58Z",
      "side": 1,
      "message": "Unfortunately, that query would belong on `glGetFramebufferParameteriv`, which we don\u0027t have until ES 3.1. Can we get away with just not exposing it?",
      "parentUuid": "36c22c9e_09174252",
      "revId": "b5f3a5354ea813ac855ba1f71f25035880b61d26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "37e64432_2e7e6a03",
        "filename": "extensions/ANGLE_shader_pixel_local_storage.txt",
        "patchSetId": 1
      },
      "lineNbr": 149,
      "author": {
        "id": 1394635
      },
      "writtenOn": "2023-03-20T19:27:05Z",
      "side": 1,
      "message": "Consider if renaming to Pause/Resume would make sense here. In such a case, it would be aligned with similar transfer feedback functionality.",
      "range": {
        "startLine": 147,
        "startChar": 0,
        "endLine": 149,
        "endChar": 51
      },
      "revId": "b5f3a5354ea813ac855ba1f71f25035880b61d26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a98e2ea6_e91dffcd",
        "filename": "extensions/ANGLE_shader_pixel_local_storage.txt",
        "patchSetId": 1
      },
      "lineNbr": 149,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-03-20T19:30:35Z",
      "side": 1,
      "message": "I wanted to make the same suggestion initially, but since this can be \"nested\", I think it may be better _not_ to conflate it with pause/resume.",
      "parentUuid": "37e64432_2e7e6a03",
      "range": {
        "startLine": 147,
        "startChar": 0,
        "endLine": 149,
        "endChar": 51
      },
      "revId": "b5f3a5354ea813ac855ba1f71f25035880b61d26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e6f07978_7f8f4ed4",
        "filename": "extensions/ANGLE_shader_pixel_local_storage.txt",
        "patchSetId": 1
      },
      "lineNbr": 576,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-03-20T19:17:35Z",
      "side": 1,
      "message": "Driving by: Unfortunate, but I\u0027m sure you\u0027ve already thought this through. It sounds to me like memoryless places cannot realistically be exposed to WebGL unless they have a no-data-retained-between-draw-calls warning (which kind of kills it?). Otherwise developers may use it, see that \"it works\", and then get reports of flickering.",
      "revId": "b5f3a5354ea813ac855ba1f71f25035880b61d26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6bff21dd_3337def6",
        "filename": "extensions/ANGLE_shader_pixel_local_storage.txt",
        "patchSetId": 1
      },
      "lineNbr": 576,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2023-03-20T19:20:01Z",
      "side": 1,
      "message": "This is a good observation. At the moment for this reason memoryless planes already aren\u0027t exposed at the WebGL level; see https://registry.khronos.org/webgl/extensions/WEBGL_shader_pixel_local_storage/ . We are hoping/thinking that if we can provide stronger guarantees at the browser level about leaving user-level PLS code uninterrupted, then in the future memoryless planes might be able to be exposed.",
      "parentUuid": "e6f07978_7f8f4ed4",
      "revId": "b5f3a5354ea813ac855ba1f71f25035880b61d26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cd10b5d3_aff37afe",
        "filename": "extensions/ANGLE_shader_pixel_local_storage.txt",
        "patchSetId": 1
      },
      "lineNbr": 576,
      "author": {
        "id": 1543967
      },
      "writtenOn": "2023-03-20T19:21:58Z",
      "side": 1,
      "message": "Thanks for the drive by ðŸ˜Š\n\nYeah, we just won\u0027t be able to expose memoryless planes in WebGL, unfortunately. They are excluded from the spec: https://registry.khronos.org/webgl/extensions/WEBGL_shader_pixel_local_storage/\n\nThis is largely remediated by the ability to use a store operation of `GL_DONT_CARE`.",
      "parentUuid": "e6f07978_7f8f4ed4",
      "revId": "b5f3a5354ea813ac855ba1f71f25035880b61d26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "833c72e1_c03b26a7",
        "filename": "extensions/ANGLE_shader_pixel_local_storage.txt",
        "patchSetId": 1
      },
      "lineNbr": 968,
      "author": {
        "id": 1394635
      },
      "writtenOn": "2023-03-20T19:27:05Z",
      "side": 1,
      "message": "This table should be extended to hold the added state.",
      "revId": "b5f3a5354ea813ac855ba1f71f25035880b61d26",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}