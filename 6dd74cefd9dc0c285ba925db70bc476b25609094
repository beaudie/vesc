{
  "comments": [
    {
      "key": {
        "uuid": "736d61b3_9c19c4aa",
        "filename": "src/compiler/translator/SymbolTable.cpp",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 1003154
      },
      "writtenOn": "2015-07-07T17:58:24Z",
      "side": 1,
      "message": "why not just use TString here, so we can avoid all the conversions between std::string and TString in this function?",
      "range": {
        "startLine": 34,
        "startChar": 9,
        "endLine": 34,
        "endChar": 15
      },
      "revId": "6dd74cefd9dc0c285ba925db70bc476b25609094",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f80dae2c_1d0bd32e",
        "filename": "src/compiler/translator/SymbolTable.cpp",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 1129096
      },
      "writtenOn": "2015-07-07T18:10:17Z",
      "side": 1,
      "message": "Every time TString needs to grow its buffer, the old buffer is not deallocated (since TPoolAllocator doesn\u0027t have deallocate() method). Old buffer becomes \u0027wasted\u0027 bytes. Using std::string for intermediate calculations avoids that.\n\nSee that long email thread where I analyze various aspects of TString memory usage.",
      "parentUuid": "736d61b3_9c19c4aa",
      "range": {
        "startLine": 34,
        "startChar": 9,
        "endLine": 34,
        "endChar": 15
      },
      "revId": "6dd74cefd9dc0c285ba925db70bc476b25609094",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "534a1d43_7b4df3bc",
        "filename": "src/compiler/translator/SymbolTable.cpp",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 1003154
      },
      "writtenOn": "2015-07-07T18:43:36Z",
      "side": 1,
      "message": "But you can declare a static TString here, so little memory impact, but at the same time avoid all these conversions.",
      "parentUuid": "f80dae2c_1d0bd32e",
      "range": {
        "startLine": 34,
        "startChar": 9,
        "endLine": 34,
        "endChar": 15
      },
      "revId": "6dd74cefd9dc0c285ba925db70bc476b25609094",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f80dae2c_5d44abff",
        "filename": "src/compiler/translator/SymbolTable.cpp",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 1003154
      },
      "writtenOn": "2015-07-07T18:44:41Z",
      "side": 1,
      "message": "Actually I am not sure what will happen with a static T type. If it\u0027s not good, then ignore my comment.",
      "parentUuid": "534a1d43_7b4df3bc",
      "range": {
        "startLine": 34,
        "startChar": 9,
        "endLine": 34,
        "endChar": 15
      },
      "revId": "6dd74cefd9dc0c285ba925db70bc476b25609094",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "534a1d43_7876d9fc",
        "filename": "src/compiler/translator/SymbolTable.cpp",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2015-07-07T14:00:25Z",
      "side": 1,
      "message": "nit: \"\u0026p :\"",
      "range": {
        "startLine": 36,
        "startChar": 20,
        "endLine": 36,
        "endChar": 23
      },
      "revId": "6dd74cefd9dc0c285ba925db70bc476b25609094",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}