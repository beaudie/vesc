{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "1540799d_72235a6d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 9,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-01-10T15:10:22Z",
      "side": 1,
      "message": "typo: create",
      "range": {
        "startLine": 9,
        "startChar": 23,
        "endLine": 9,
        "endChar": 31
      },
      "revId": "893d6b975ed43ba075abf80d341d5b3574899654",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3922d2e2_4bf39671",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 9,
      "author": {
        "id": 1446209
      },
      "writtenOn": "2022-01-12T05:15:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1540799d_72235a6d",
      "range": {
        "startLine": 9,
        "startChar": 23,
        "endLine": 9,
        "endChar": 31
      },
      "revId": "893d6b975ed43ba075abf80d341d5b3574899654",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6aa91060_75128701",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 10,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-01-10T15:10:22Z",
      "side": 1,
      "message": "typo: a",
      "range": {
        "startLine": 10,
        "startChar": 31,
        "endLine": 10,
        "endChar": 33
      },
      "revId": "893d6b975ed43ba075abf80d341d5b3574899654",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "71b84d8b_9329350f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 10,
      "author": {
        "id": 1446209
      },
      "writtenOn": "2022-01-12T05:15:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6aa91060_75128701",
      "range": {
        "startLine": 10,
        "startChar": 31,
        "endLine": 10,
        "endChar": 33
      },
      "revId": "893d6b975ed43ba075abf80d341d5b3574899654",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "13c2db46_fd0a9b44",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2415,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-01-10T15:10:22Z",
      "side": 1,
      "message": "Should be isCurrentlyInUse, or maybe isCurrentlyInUse \u0026\u0026 !usedInRecordedCommands? What\u0027s the exact logic of the ghosting here?",
      "range": {
        "startLine": 2415,
        "startChar": 31,
        "endLine": 2415,
        "endChar": 52
      },
      "revId": "893d6b975ed43ba075abf80d341d5b3574899654",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "21db21ce_99ecc5d1",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2415,
      "author": {
        "id": 1446209
      },
      "writtenOn": "2022-01-12T05:15:33Z",
      "side": 1,
      "message": "Except for single-mip and full texture update,adding \u0027usedInRunningCommands and mImage-\u003egetCurrentImageLayout() \u003d\u003d vk::ImageLayout::FragmentShaderReadOnly\u0027 condition to recreate image only when old image is being read by fragment shader to avoid creating redundant images.\neg:\nglTexStorage2D(texture1)\nglSubTexImage2D(texture1)-\u003enot create new image,since not being read by fs\nglDraw()\nSubmitQueue\nglSubTexImage2D(texture1)-\u003ecreate new image\nglDraw()\nSubmitQueue",
      "parentUuid": "13c2db46_fd0a9b44",
      "range": {
        "startLine": 2415,
        "startChar": 31,
        "endLine": 2415,
        "endChar": 52
      },
      "revId": "893d6b975ed43ba075abf80d341d5b3574899654",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1579df51_0574f293",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2416,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-01-10T15:10:22Z",
      "side": 1,
      "message": "This seems to be due to a missing notification problem. See how ghosting is implemented in BufferVk.cpp, and the notification sent there when the buffer is ghosted.",
      "range": {
        "startLine": 2416,
        "startChar": 9,
        "endLine": 2416,
        "endChar": 43
      },
      "revId": "893d6b975ed43ba075abf80d341d5b3574899654",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b49d39c5_b348783c",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2416,
      "author": {
        "id": 1446209
      },
      "writtenOn": "2022-01-12T05:15:33Z",
      "side": 1,
      "message": "Not very clear about this notification problem,but hasBeenBoundAsAttachment() could reflect if a image has been bound as attachment,couldn\u0027t it?",
      "parentUuid": "1579df51_0574f293",
      "range": {
        "startLine": 2416,
        "startChar": 9,
        "endLine": 2416,
        "endChar": 43
      },
      "revId": "893d6b975ed43ba075abf80d341d5b3574899654",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2600943a_6eb2465a",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2416,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2022-01-18T19:49:21Z",
      "side": 1,
      "message": "The buffer ghosting notification was required to allow the descriptor sets that pointed to the old buffer to be updated to point to the new buffer.\n\nThere may be something else I\u0027m missing, but this doesn\u0027t seem to suffer from that same requirement, since we are recreating the image before the descriptor set updates occur.   Although, maybe the mState.hasBeenBoundAsAttachment() check is what\u0027s preventing that notification from being required?\n\nCharlie\u0027s comment about moving these checks to ImageHelper may make this unnecessary, but if it stays here I think this would be clearer if these checks were pulled out to before the `!mImage-\u003evalid()` check:\n\n    if (mImage-\u003evalid() \u0026\u0026 mOwnsImage \u0026\u0026 mImage-\u003eisSingleLevelUpdate() \u0026\u0026\n        mImage-\u003eisFullUpdate() \u0026\u0026\n        mImage-\u003eusedInRunningCommands(contextVk-\u003egetLastCompletedQueueSerial()) \u0026\u0026\n        !mState.hasBeenBoundAsAttachment() \u0026\u0026\n        mImage-\u003egetCurrentImageLayout() \u003d\u003d vk::ImageLayout::FragmentShaderReadOnly)\n    {\n        releaseImage(contextVk);\n        // Flag to do the texture update immediately on this new vkImage.\n        mImage-\u003esetImageNotInUse(true);\n    }\n    \n    if (!mImage-\u003evalid())\n    {\n    ...",
      "parentUuid": "b49d39c5_b348783c",
      "range": {
        "startLine": 2416,
        "startChar": 9,
        "endLine": 2416,
        "endChar": 43
      },
      "revId": "893d6b975ed43ba075abf80d341d5b3574899654",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d9817964_394a1efb",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2416,
      "author": {
        "id": 1446209
      },
      "writtenOn": "2022-01-19T10:52:22Z",
      "side": 1,
      "message": "Yes,you\u0027re right,we needn\u0027t do any notification about descriptor set update. In addition,I use \u0027!mState.hasBeenBoundAsAttachment()\u0027 to avoid recreating new image when it is used as attachment,just as Charlie\u0027s concern:\n\nrender to level 1\nupdate level 0\n\nThis will cause level 1 data lost.\nBut \u0027!mState.hasBeenBoundAsAttachment()\u0027 will exclude this case.",
      "parentUuid": "2600943a_6eb2465a",
      "range": {
        "startLine": 2416,
        "startChar": 9,
        "endLine": 2416,
        "endChar": 43
      },
      "revId": "893d6b975ed43ba075abf80d341d5b3574899654",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7d3ab6b4_4a1fb541",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2417,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-01-10T15:10:22Z",
      "side": 1,
      "message": "Should be unnecessary?",
      "range": {
        "startLine": 2417,
        "startChar": 9,
        "endLine": 2417,
        "endChar": 83
      },
      "revId": "893d6b975ed43ba075abf80d341d5b3574899654",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "da4cd0fb_f46cc795",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2417,
      "author": {
        "id": 1446209
      },
      "writtenOn": "2022-01-12T05:15:33Z",
      "side": 1,
      "message": "If the image is being used as other purpose not shader read-only,will not triger this image recreation.",
      "parentUuid": "7d3ab6b4_4a1fb541",
      "range": {
        "startLine": 2417,
        "startChar": 9,
        "endLine": 2417,
        "endChar": 83
      },
      "revId": "893d6b975ed43ba075abf80d341d5b3574899654",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "47547214_de0957cd",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2425,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-01-10T15:10:22Z",
      "side": 1,
      "message": "This will recreate the image every time, not just when an update overwrites it entirely. The logic for when to release the image likely needs to reside in `TextureVk::copySubImageImpl` instead, likely needing a separate path for mutable and immutable textures too.\n\nAlso need to make sure mipped updates are handled (or multi-mip textures are explicitly ignored)",
      "range": {
        "startLine": 2419,
        "startChar": 0,
        "endLine": 2425,
        "endChar": 9
      },
      "revId": "893d6b975ed43ba075abf80d341d5b3574899654",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c12b1cf3_86720e5b",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 2425,
      "author": {
        "id": 1446209
      },
      "writtenOn": "2022-01-12T05:15:33Z",
      "side": 1,
      "message": "New patch adds the condition of recreating the image: single-mip and full texture update",
      "parentUuid": "47547214_de0957cd",
      "range": {
        "startLine": 2419,
        "startChar": 0,
        "endLine": 2425,
        "endChar": 9
      },
      "revId": "893d6b975ed43ba075abf80d341d5b3574899654",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}