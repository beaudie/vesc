{
  "comments": [
    {
      "key": {
        "uuid": "61356091_39ca2834",
        "filename": "src/tests/perf_tests/TexSubImage.cpp",
        "patchSetId": 2
      },
      "lineNbr": 93,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-11-01T22:46:22Z",
      "side": 1,
      "message": "nit: this is a related but separate fix, can you mention this in the CL description?\n\n(also in the future could consider making these small prior patches)",
      "range": {
        "startLine": 93,
        "startChar": 49,
        "endLine": 93,
        "endChar": 75
      },
      "revId": "89a997d5365d514ad86a292f6feb593f2afa3bd8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a1640935_6a397147",
        "filename": "src/tests/perf_tests/TexSubImage.cpp",
        "patchSetId": 2
      },
      "lineNbr": 93,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2017-11-02T01:34:46Z",
      "side": 1,
      "message": "I\u0027ve modified the description.\nI dislike the prior patches idea. It\u0027s hard to see a relationship between the prior patch and the actual one other than in gerrit. If we used branches and merged them when landing (i.e. had non-linear git tree) it would make more sense. When all the related changes are bundled in one CL you can clearly see that \"GL_EXT_texture_storage\" extension requirement was needed here because this extension was not available on N5X when this test was enabled to run on it.",
      "parentUuid": "61356091_39ca2834",
      "range": {
        "startLine": 93,
        "startChar": 49,
        "endLine": 93,
        "endChar": 75
      },
      "revId": "89a997d5365d514ad86a292f6feb593f2afa3bd8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c51fed2d_4107bae1",
        "filename": "src/tests/perf_tests/TexSubImage.cpp",
        "patchSetId": 2
      },
      "lineNbr": 93,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-11-02T01:37:06Z",
      "side": 1,
      "message": "Do you ever upload patches as a stack? You can see them in the relation chain, it\u0027s trivial.",
      "parentUuid": "a1640935_6a397147",
      "range": {
        "startLine": 93,
        "startChar": 49,
        "endLine": 93,
        "endChar": 75
      },
      "revId": "89a997d5365d514ad86a292f6feb593f2afa3bd8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "60b58eb3_d272030b",
        "filename": "src/tests/perf_tests/TexSubImage.cpp",
        "patchSetId": 2
      },
      "lineNbr": 93,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2017-11-02T01:40:51Z",
      "side": 1,
      "message": "No, but I\u0027ve seen you do it.\n1. It\u0027s very cumbersome to change 1 CL in the middle of the stack.\n2. All this info is only in gerrit, you don\u0027t see it in your git checkout. I often track history of some line of code in my git checkout, I can\u0027t do it in gerrit. And the relationship information is lost.",
      "parentUuid": "c51fed2d_4107bae1",
      "range": {
        "startLine": 93,
        "startChar": 49,
        "endLine": 93,
        "endChar": 75
      },
      "revId": "89a997d5365d514ad86a292f6feb593f2afa3bd8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e130040_adf37376",
        "filename": "src/tests/perf_tests/UniformsPerf.cpp",
        "patchSetId": 2
      },
      "lineNbr": 405,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-11-01T22:46:22Z",
      "side": 1,
      "message": "is this hitting a resource limit? we could change the test init to clamp, but I think I\u0027d prefer if you just made this 64 everywhere. There\u0027s no need to have 100 as our magic value, 64 should be fine. It\u0027s ok if it rebases the test speed, since it\u0027ll be more portable.\n\n(an alternate solution is to change the parameter name to not use the specific count, but say \"max\" uniforms, where we choose the lesser of (max,100))\n\nagain this should be mentioned in the CL description. (And in future work stuff like this could be a split CL)",
      "range": {
        "startLine": 399,
        "startChar": 0,
        "endLine": 405,
        "endChar": 6
      },
      "revId": "89a997d5365d514ad86a292f6feb593f2afa3bd8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2b38bbc4_340f2652",
        "filename": "src/tests/perf_tests/UniformsPerf.cpp",
        "patchSetId": 2
      },
      "lineNbr": 405,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2017-11-02T01:34:46Z",
      "side": 1,
      "message": "Yes, GL_MAX_VERTEX_UNIFORM_VECTORS and GL_MAX_FRAGMENT_UNIFORM_VECTORS are 256 on N5X, so it was hitting it in MatrixUniforms tests.",
      "parentUuid": "4e130040_adf37376",
      "range": {
        "startLine": 399,
        "startChar": 0,
        "endLine": 405,
        "endChar": 6
      },
      "revId": "89a997d5365d514ad86a292f6feb593f2afa3bd8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a9ea6133_7ae0b3c6",
        "filename": "src/tests/test_utils/angle_test_configs.cpp",
        "patchSetId": 2
      },
      "lineNbr": 388,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-11-01T22:46:22Z",
      "side": 1,
      "message": "nice, thanks.",
      "range": {
        "startLine": 384,
        "startChar": 0,
        "endLine": 388,
        "endChar": 6
      },
      "revId": "89a997d5365d514ad86a292f6feb593f2afa3bd8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}