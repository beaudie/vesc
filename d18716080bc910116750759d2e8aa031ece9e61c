{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d3645c07_70ac385d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2022-08-05T17:24:54Z",
      "side": 1,
      "message": "Nice finding, Shabi! Looking at the code, the PipelineHelper object is individually tracked (it added into RP commands at contextVk.cpp line 1861). My understanding of ContextVk::mCurrentGarbage is for objects that are not individually tracked so that we uses context\u0027s next submission for the queueSerial. The real bug here appears to me is that we should not add PipelineHelper into ContextVk::mCurrentGarbage in the first place. Instead, it should just add into RendererVk\u0027s garbage list (see DescriptorPoolHelper::release function for an example). The problem with ContextVk::mCurrentGarbage is that it ignores PipelineHelper\u0027s mUse, which means the exact bug you described here.",
      "revId": "d18716080bc910116750759d2e8aa031ece9e61c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d5e12963_df6c02e3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-08-05T17:49:02Z",
      "side": 1,
      "message": "As we discovered before (crbug.com/1337538#c22), there are actually a lot of retain calls missing, and because pipeline deletion goes through `ContextVk::mCurrentGarbage`, we don\u0027t even need `PipelineHelper` to be a `Resource`; `mUse` is basically never used.\n\nSo my suggestion is this:\n\n- Take this simple change for the purposes of security bug fix\n- Make `PipelineHelper` not a `Resource` and remove the `retain` we already have\n- If necessary for memory clean up purposes, split `ContextVk::mCurrentGarbage` into outside and inside RP garbage. Then when submitting outside RP commands, only clean the outside RP garbage (i.e. staged buffers for texture data upload)",
      "parentUuid": "d3645c07_70ac385d",
      "revId": "d18716080bc910116750759d2e8aa031ece9e61c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "623d29c1_d742133e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2022-08-05T18:06:58Z",
      "side": 1,
      "message": "The downside with your suggestion is that object will not gets deleted until next submission. If someone delete program and not submit for long time (some frameworks do that), then you are stuck with that object for long time. But like you said, we may have other bugs with missing retain calls right now. Before that gets fixed, I am fine with this fix. But I do think longer term fix should be move to individually tracked instead of depend on unrelated submission to clean things up.\n \n\u003e ...staged buffers for texture data upload)\nThat does not go through mCurrentGarbage, so we are fine here.",
      "parentUuid": "d5e12963_df6c02e3",
      "revId": "d18716080bc910116750759d2e8aa031ece9e61c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0384b7db_0d276527",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1525982
      },
      "writtenOn": "2022-08-05T22:41:49Z",
      "side": 1,
      "message": "LGTM, thanks!",
      "revId": "d18716080bc910116750759d2e8aa031ece9e61c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}