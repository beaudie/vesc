{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "0d0da4ba_e45b4723",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 24
      },
      "lineNbr": 0,
      "author": {
        "id": 1543967
      },
      "writtenOn": "2022-09-16T23:34:02Z",
      "side": 1,
      "message": "This should be ready to review now",
      "revId": "64f6b8f2feac1c909e6f11d3e815be8b5fdde740",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "654d985a_75fd0609",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 24
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-09-17T03:11:45Z",
      "side": 1,
      "message": "Partial review. I haven\u0027t reviewed the main file yet (sorry for the sluggishness!)",
      "revId": "64f6b8f2feac1c909e6f11d3e815be8b5fdde740",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "db118733_345cfb4d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 24
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-09-18T04:10:28Z",
      "side": 1,
      "message": "Super nice!",
      "revId": "64f6b8f2feac1c909e6f11d3e815be8b5fdde740",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ae02d10_67f2faa8",
        "filename": "extensions/ANGLE_shader_pixel_local_storage.txt",
        "patchSetId": 24
      },
      "lineNbr": 300,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-09-17T03:11:45Z",
      "side": 1,
      "message": "typo: duplicate `is`",
      "range": {
        "startLine": 300,
        "startChar": 8,
        "endLine": 300,
        "endChar": 11
      },
      "revId": "64f6b8f2feac1c909e6f11d3e815be8b5fdde740",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a8b94471_1f162d3e",
        "filename": "extensions/ANGLE_shader_pixel_local_storage.txt",
        "patchSetId": 24
      },
      "lineNbr": 361,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-09-17T03:11:45Z",
      "side": 1,
      "message": "Most vendors don\u0027t actually do anything with dither, it\u0027s not anything useful to rely on. How about forbidding it both here, and in `BeginPixelLocalStorageANGLE`?\n\nMind you, changing dither state with the new VK_EXT_legacy_dithering results in a render pass break.",
      "range": {
        "startLine": 361,
        "startChar": 40,
        "endLine": 361,
        "endChar": 46
      },
      "revId": "64f6b8f2feac1c909e6f11d3e815be8b5fdde740",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2e6ede11_36f23cf8",
        "filename": "extensions/ANGLE_shader_pixel_local_storage.txt",
        "patchSetId": 24
      },
      "lineNbr": 413,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-09-17T03:11:45Z",
      "side": 1,
      "message": "will",
      "range": {
        "startLine": 413,
        "startChar": 32,
        "endLine": 413,
        "endChar": 35
      },
      "revId": "64f6b8f2feac1c909e6f11d3e815be8b5fdde740",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1c883cc3_98a1d162",
        "filename": "extensions/ANGLE_shader_pixel_local_storage.txt",
        "patchSetId": 24
      },
      "lineNbr": 453,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-09-17T03:11:45Z",
      "side": 1,
      "message": "Not sure where this is coming from",
      "range": {
        "startLine": 453,
        "startChar": 13,
        "endLine": 453,
        "endChar": 53
      },
      "revId": "64f6b8f2feac1c909e6f11d3e815be8b5fdde740",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "735ff4de_5c6da7fb",
        "filename": "src/libANGLE/Caps.h",
        "patchSetId": 24
      },
      "lineNbr": 378,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-09-17T03:11:45Z",
      "side": 1,
      "message": "why not `GLuint` for these?",
      "range": {
        "startLine": 378,
        "startChar": 4,
        "endLine": 378,
        "endChar": 9
      },
      "revId": "64f6b8f2feac1c909e6f11d3e815be8b5fdde740",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4a6c0f39_5aa97f83",
        "filename": "src/libANGLE/PixelLocalStorage.cpp",
        "patchSetId": 24
      },
      "lineNbr": 26,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-09-17T03:11:45Z",
      "side": 1,
      "message": "s/angle/context everywhere.",
      "range": {
        "startLine": 26,
        "startChar": 33,
        "endLine": 26,
        "endChar": 38
      },
      "revId": "64f6b8f2feac1c909e6f11d3e815be8b5fdde740",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5630acea_d7887e15",
        "filename": "src/libANGLE/PixelLocalStorage.cpp",
        "patchSetId": 24
      },
      "lineNbr": 204,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-09-18T04:10:28Z",
      "side": 1,
      "message": "nit: static_cast",
      "range": {
        "startLine": 204,
        "startChar": 22,
        "endLine": 204,
        "endChar": 27
      },
      "revId": "64f6b8f2feac1c909e6f11d3e815be8b5fdde740",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bff4db41_ed8ac88a",
        "filename": "src/libANGLE/PixelLocalStorage.cpp",
        "patchSetId": 24
      },
      "lineNbr": 226,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-09-18T04:10:28Z",
      "side": 1,
      "message": "nit: ANGLE\u0027s style would be:\n\n```\nconst bool hasMemorylessTextureId \u003d mMemorylessTextureID.value !\u003d 0;\nconst bool hasTextureRef \u003d mTextureRef !\u003d nullptr;\nASSERT(hasMemorylessTextureId \u003d\u003d hasTextureRef);\n```",
      "revId": "64f6b8f2feac1c909e6f11d3e815be8b5fdde740",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b941ba95_ee4cc976",
        "filename": "src/libANGLE/PixelLocalStorage.cpp",
        "patchSetId": 24
      },
      "lineNbr": 230,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-09-18T04:10:28Z",
      "side": 1,
      "message": "Same nits (`\u003d\u003d nullptr`, `static_cast`)",
      "revId": "64f6b8f2feac1c909e6f11d3e815be8b5fdde740",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "96717bab_e97f4323",
        "filename": "src/libANGLE/PixelLocalStorage.cpp",
        "patchSetId": 24
      },
      "lineNbr": 351,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-09-18T04:10:28Z",
      "side": 1,
      "message": "Don\u0027t hesitate to simplify the extension for this, like would anyone miss 3D PLS textures?",
      "revId": "64f6b8f2feac1c909e6f11d3e815be8b5fdde740",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8d433ef7_67383a2c",
        "filename": "src/libANGLE/PixelLocalStorage.cpp",
        "patchSetId": 24
      },
      "lineNbr": 437,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-09-18T04:10:28Z",
      "side": 1,
      "message": "Thanks for handling this. Do you have any tests in place to be sure it works?",
      "revId": "64f6b8f2feac1c909e6f11d3e815be8b5fdde740",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8aa310f9_de5eb002",
        "filename": "src/libANGLE/PixelLocalStorage.cpp",
        "patchSetId": 24
      },
      "lineNbr": 447,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-09-18T04:10:28Z",
      "side": 1,
      "message": "typo",
      "range": {
        "startLine": 447,
        "startChar": 63,
        "endLine": 447,
        "endChar": 70
      },
      "revId": "64f6b8f2feac1c909e6f11d3e815be8b5fdde740",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f7b3e8cc_559da32f",
        "filename": "src/libANGLE/PixelLocalStorage.cpp",
        "patchSetId": 24
      },
      "lineNbr": 477,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-09-18T04:10:28Z",
      "side": 1,
      "message": "The pattern of modifying the framebuffer and calling clear causes a lot of `syncState`s. At least in Vulkan we \"deal with it\", but it\u0027s a bit iffy nevertheless.\n\nIs it possible to instead loop once and set up the framebuffer (attach to different attachments), then loop again and clear all attachments one after the other? Then the framebuffer is sync\u0027ed only once.",
      "revId": "64f6b8f2feac1c909e6f11d3e815be8b5fdde740",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5b57d302_9432e506",
        "filename": "src/libANGLE/PixelLocalStorage.cpp",
        "patchSetId": 24
      },
      "lineNbr": 505,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-09-18T04:10:28Z",
      "side": 1,
      "message": "Similarly, a test would be good to make sure this state is restored",
      "revId": "64f6b8f2feac1c909e6f11d3e815be8b5fdde740",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "66573afe_9f301b5c",
        "filename": "src/libANGLE/PixelLocalStorage.h",
        "patchSetId": 24
      },
      "lineNbr": 85,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-09-18T04:10:28Z",
      "side": 1,
      "message": "If it must, then please put it in the spec. Otherwise the implementation should support it.",
      "revId": "64f6b8f2feac1c909e6f11d3e815be8b5fdde740",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f920dce3_75ffa2cf",
        "filename": "src/libANGLE/State.cpp",
        "patchSetId": 24
      },
      "lineNbr": 3248,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-09-18T04:10:28Z",
      "side": 1,
      "message": "nit: we tend to be explicit about bool conversion, i.e. `pls \u003d\u003d nullptr`",
      "range": {
        "startLine": 3248,
        "startChar": 16,
        "endLine": 3248,
        "endChar": 20
      },
      "revId": "64f6b8f2feac1c909e6f11d3e815be8b5fdde740",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8726b26e_3927a5b0",
        "filename": "src/libANGLE/State.cpp",
        "patchSetId": 24
      },
      "lineNbr": 3251,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-09-18T04:10:28Z",
      "side": 1,
      "message": "GL_NONE seems irrelevant here?",
      "revId": "64f6b8f2feac1c909e6f11d3e815be8b5fdde740",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d0540504_99404d8f",
        "filename": "src/libANGLE/validationES3.cpp",
        "patchSetId": 24
      },
      "lineNbr": 3381,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-09-17T03:11:45Z",
      "side": 1,
      "message": "`index` is `GLuint`! How did the compiler not catch this?",
      "revId": "64f6b8f2feac1c909e6f11d3e815be8b5fdde740",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d3ca0fb5_3801cd99",
        "filename": "src/libANGLE/validationES3.cpp",
        "patchSetId": 24
      },
      "lineNbr": 3386,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-09-17T03:11:45Z",
      "side": 1,
      "message": "nit: we use `static_cast`. Unnecessary if the cap itself if `GLuint`",
      "range": {
        "startLine": 3386,
        "startChar": 16,
        "endLine": 3386,
        "endChar": 17
      },
      "revId": "64f6b8f2feac1c909e6f11d3e815be8b5fdde740",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "72b3d607_b99e2669",
        "filename": "src/libANGLE/validationES3.cpp",
        "patchSetId": 24
      },
      "lineNbr": 3398,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-09-17T03:11:45Z",
      "side": 1,
      "message": "This is out of place. The validation layer shouldn\u0027t do work. For one thing, it could be disabled with KHR_no_error",
      "revId": "64f6b8f2feac1c909e6f11d3e815be8b5fdde740",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff48c453_536b506f",
        "filename": "src/libANGLE/validationESEXT.cpp",
        "patchSetId": 24
      },
      "lineNbr": 2026,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-09-17T03:11:45Z",
      "side": 1,
      "message": "Also out of place. Again, the validation layer shouldn\u0027t do any work.",
      "revId": "64f6b8f2feac1c909e6f11d3e815be8b5fdde740",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}