{
  "comments": [
    {
      "key": {
        "uuid": "a2e32149_447f803c",
        "filename": "src/libANGLE/renderer/d3d/d3d11/Query11.cpp",
        "patchSetId": 3
      },
      "lineNbr": 47,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-02-29T17:59:41Z",
      "side": 1,
      "message": "git cl format",
      "range": {
        "startLine": 47,
        "startChar": 96,
        "endLine": 47,
        "endChar": 115
      },
      "revId": "60c3fa7212106fc12242c012a299c12ddc621913",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "62be89e4_d9294fcd",
        "filename": "src/libANGLE/renderer/d3d/d3d11/Query11.cpp",
        "patchSetId": 3
      },
      "lineNbr": 47,
      "author": {
        "id": 1144499
      },
      "writtenOn": "2016-02-29T18:28:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a2e32149_447f803c",
      "range": {
        "startLine": 47,
        "startChar": 96,
        "endLine": 47,
        "endChar": 115
      },
      "revId": "60c3fa7212106fc12242c012a299c12ddc621913",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "22ef3134_00cf2829",
        "filename": "src/libANGLE/renderer/d3d/d3d11/Query11.cpp",
        "patchSetId": 3
      },
      "lineNbr": 95,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-02-29T17:59:41Z",
      "side": 1,
      "message": "I\u0027m not sure I like this implementation of operator\u003d. The std::deque class can use the assignment operator and copy constructor, and every time it shuffles things internally it\u0027s going to be a heavy-weight operation. The two solutions are to either store pointer types in the std::deque (such as std::unique_ptr\u003cQueryState\u003e) or to make these copies light-weight operation, in this case simply assigning the same values, in which case, you can use the default copy and assignment operators using the default keyword in the header.",
      "range": {
        "startLine": 72,
        "startChar": 0,
        "endLine": 95,
        "endChar": 1
      },
      "revId": "60c3fa7212106fc12242c012a299c12ddc621913",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "02feade5_5fa46f13",
        "filename": "src/libANGLE/renderer/d3d/d3d11/Query11.cpp",
        "patchSetId": 3
      },
      "lineNbr": 95,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2016-02-29T18:21:14Z",
      "side": 1,
      "message": "I think that the std::deque operations use move assignements when available so defining these would help.",
      "parentUuid": "22ef3134_00cf2829",
      "revId": "60c3fa7212106fc12242c012a299c12ddc621913",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "82ea9d1e_43281862",
        "filename": "src/libANGLE/renderer/d3d/d3d11/Query11.cpp",
        "patchSetId": 3
      },
      "lineNbr": 95,
      "author": {
        "id": 1144499
      },
      "writtenOn": "2016-02-29T18:28:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "22ef3134_00cf2829",
      "range": {
        "startLine": 72,
        "startChar": 0,
        "endLine": 95,
        "endChar": 1
      },
      "revId": "60c3fa7212106fc12242c012a299c12ddc621913",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}