{
  "comments": [
    {
      "key": {
        "uuid": "6b4a1ceb_c7eebd51",
        "filename": "src/libANGLE/Program.h",
        "patchSetId": 3
      },
      "lineNbr": 442,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-12-05T04:53:46Z",
      "side": 1,
      "message": "Not sure what non-opaque uniform refers to exactly. It\u0027s possible that these two items both refer to the same thing. In the test I added, there are 4 items in this vector in the following order: default uniform, sampler, image, atomic counter.\n\n@Jamie who 4 years ago wrote this here:\n\n        //  1. Non-sampler uniforms\n        //  2. Sampler uniforms\n        //  3. Uniform block uniforms",
      "range": {
        "startLine": 441,
        "startChar": 0,
        "endLine": 442,
        "endChar": 33
      },
      "revId": "36e4815cec427e7cd1c3f786e8860f8399373c35",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "46c97c4c_ff082508",
        "filename": "src/libANGLE/Program.h",
        "patchSetId": 3
      },
      "lineNbr": 442,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-12-05T13:04:56Z",
      "side": 1,
      "message": "Non-opaque uniforms are just normal default block uniforms. Not samplers, not uniform block unis, not images, etc. vec4, float, etc.",
      "parentUuid": "6b4a1ceb_c7eebd51",
      "range": {
        "startLine": 441,
        "startChar": 0,
        "endLine": 442,
        "endChar": 33
      },
      "revId": "36e4815cec427e7cd1c3f786e8860f8399373c35",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eff91ca8_dab2ea63",
        "filename": "src/libANGLE/Program.h",
        "patchSetId": 3
      },
      "lineNbr": 442,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-12-05T15:34:37Z",
      "side": 1,
      "message": "And what is Uniform block uniforms? If that refers to UBOs, they are not stored in mUniforms.",
      "parentUuid": "46c97c4c_ff082508",
      "range": {
        "startLine": 441,
        "startChar": 0,
        "endLine": 442,
        "endChar": 33
      },
      "revId": "36e4815cec427e7cd1c3f786e8860f8399373c35",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1530906c_cabc5d55",
        "filename": "src/libANGLE/Program.h",
        "patchSetId": 3
      },
      "lineNbr": 442,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-12-05T15:36:29Z",
      "side": 1,
      "message": "In fact they are! GL allows the application to query uniform block uniforms (from UBOs as you said) via glGetActiveUniform. They don\u0027t have locations and you can\u0027t set values on them. You *can* query the properties such as the block offset. This is necessary for shared/packed layouts.",
      "parentUuid": "eff91ca8_dab2ea63",
      "range": {
        "startLine": 441,
        "startChar": 0,
        "endLine": 442,
        "endChar": 33
      },
      "revId": "36e4815cec427e7cd1c3f786e8860f8399373c35",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}