{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "afc0c64b_d7cdf239",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2024-05-31T11:42:33Z",
      "side": 1,
      "message": "Ok, PTAL!\n\nShabi please let me use this lambda :)",
      "revId": "bff0c227c0721b458f2ece2ffdcc665e28b95824",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7c696c29_d67b5ea9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-05-31T14:08:41Z",
      "side": 1,
      "message": "Lol, ok but only because you asked nicely :P\n\nFWIW, it could have been a helper function to keep `ProgramGL::linkJobImpl` shorter and cleaner, not sure what benefit lambda gives you here :shrug:",
      "parentUuid": "afc0c64b_d7cdf239",
      "revId": "bff0c227c0721b458f2ece2ffdcc665e28b95824",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "003302d0_52633b0d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2024-05-31T14:40:20Z",
      "side": 1,
      "message": "Alexey, do you want to give the +2 review?",
      "revId": "bff0c227c0721b458f2ece2ffdcc665e28b95824",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4d7c7cf6_20ae1879",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2024-05-31T14:40:20Z",
      "side": 1,
      "message": "I prefer lambdas in situations like this where the helper function would only have been called in a single place and the surrounding logic is very similar. Splitting it up would make me jump around the file to understand what\u0027s going on.",
      "parentUuid": "7c696c29_d67b5ea9",
      "revId": "bff0c227c0721b458f2ece2ffdcc665e28b95824",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7644554b_b30ef45c",
        "filename": "src/libANGLE/ProgramExecutable.cpp",
        "patchSetId": 14
      },
      "lineNbr": 1706,
      "author": {
        "id": 1394635
      },
      "writtenOn": "2024-05-31T16:54:24Z",
      "side": 1,
      "message": "The `false` here implies that the location was not assigned by an application. Let\u0027s say neither a shader nor the application assign locations. At link time, ANGLE will still have to use the API to assign them according to its own rules. On Adreno, the API calls are skipped. Does it mean that values returned by `glGetFragDataLocation` will not necessarily be correct?",
      "revId": "bff0c227c0721b458f2ece2ffdcc665e28b95824",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7bd0b1e3_3d12aa5a",
        "filename": "src/libANGLE/ProgramExecutable.h",
        "patchSetId": 14
      },
      "lineNbr": 181,
      "author": {
        "id": 1394635
      },
      "writtenOn": "2024-05-31T16:54:24Z",
      "side": 1,
      "message": "These four bits define 16 possible states but most of them are impossible.\n\nIn practice, there are only two states:\n\n1. Both location and index are set in a shader; API calls have no effect on that output. Assigning only index without location would be a GLSL parse error. If a shader assigns only a location, it implicitly assigns an index zero that cannot be overridden by API. \n\n2. Neither location nor index are set in a shader; API calls define both values. Calling `glBindFragDataLocationEXT(p, loc, output)` is exactly the same as calling `glBindFragDataLocationIndexedEXT(p, loc, 0, output)`.",
      "range": {
        "startLine": 178,
        "startChar": 0,
        "endLine": 181,
        "endChar": 41
      },
      "revId": "bff0c227c0721b458f2ece2ffdcc665e28b95824",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}