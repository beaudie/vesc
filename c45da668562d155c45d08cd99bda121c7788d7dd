{
  "comments": [
    {
      "key": {
        "uuid": "cc5ae4ab_007aedbf",
        "filename": "src/compiler/translator/ShaderVars.cpp",
        "patchSetId": 1
      },
      "lineNbr": 202,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2019-12-05T16:43:06Z",
      "side": 1,
      "message": "Good catch.   Looks like this is the second place the *\u003d getArraySizeProduct() is being done.\n\nAny ideas on how this got through CQ?   I\u0027m able to recreate the failure locally with native and swiftshader.",
      "revId": "c45da668562d155c45d08cd99bda121c7788d7dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cfa8561f_97182c74",
        "filename": "src/compiler/translator/ShaderVars.cpp",
        "patchSetId": 1
      },
      "lineNbr": 202,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-12-05T16:51:09Z",
      "side": 1,
      "message": "I really don\u0027t! I saw it in another CL where Android and Windows failed but not Linux, but I see the failure locally on Linux.\n\nThe change that added this function had the test disabled, and the change that enabled the test didn\u0027t fail: https://chromium-review.googlesource.com/c/angle/angle/+/1948524",
      "parentUuid": "cc5ae4ab_007aedbf",
      "revId": "c45da668562d155c45d08cd99bda121c7788d7dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "565c10d9_1e8a2cfb",
        "filename": "src/compiler/translator/ShaderVars.cpp",
        "patchSetId": 1
      },
      "lineNbr": 202,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2019-12-05T17:01:48Z",
      "side": 1,
      "message": "Very strange.   Looking through some of those results, the test is running:\n\nLinux:\n[ RUN      ] dEQP.KHR_GLES31/core_compute_shader_sharedmax\nKHR-GLES31.core.compute_shader.shared-max\n[       OK ] dEQP.KHR_GLES31/core_compute_shader_sharedmax (15 ms)\n\nWindows:\n[ RUN      ] dEQP.KHR_GLES31/core_compute_shader_sharedmax\nKHR-GLES31.core.compute_shader.shared-max\n[       OK ] dEQP.KHR_GLES31/core_compute_shader_sharedmax (59 ms)\n\nUnfortunately, pass/fail looks the same if the expectations file has marked the test as \"FAIL\", so we can\u0027t tell what it was seeing at the time or what it was expected to be.   Seems like it should be expected to pass though, and that it did.\n\nHopefully there aren\u0027t too many other tests that are mysteriously passing like this one was.",
      "parentUuid": "cfa8561f_97182c74",
      "revId": "c45da668562d155c45d08cd99bda121c7788d7dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d9bcaca0_f3ea791e",
        "filename": "src/compiler/translator/ShaderVars.cpp",
        "patchSetId": 1
      },
      "lineNbr": 202,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-12-05T17:07:39Z",
      "side": 1,
      "message": "Yes, that\u0027s how I verified that that CL didn\u0027t fail. My thought was perhaps the bots are thinking that the test is not necessary (they sometimes do that if they think nothing important has changed in the CL), but that wasn\u0027t the case.\n\nWeirdest thing is that, the test could be passing on a platform that has a very large limit for the compute shared memory size, but fail or pass, it can\u0027t be flaky, yet it somehow is!",
      "parentUuid": "565c10d9_1e8a2cfb",
      "revId": "c45da668562d155c45d08cd99bda121c7788d7dd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}