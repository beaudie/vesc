{
  "comments": [
    {
      "key": {
        "uuid": "10a416b9_b15368be",
        "filename": "src/compiler/translator/PruneEmptyDeclarations.cpp",
        "patchSetId": 3
      },
      "lineNbr": 56,
      "author": {
        "id": 1003154
      },
      "writtenOn": "2015-04-23T17:28:44Z",
      "side": 1,
      "message": "Should we modify updateTree() so if the replacement is nullptr, we simply remove it?",
      "range": {
        "startLine": 56,
        "startChar": 49,
        "endLine": 56,
        "endChar": 77
      },
      "revId": "51c52b8000064907aea01987fdb71ae5d584542c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "90972654_35105284",
        "filename": "src/compiler/translator/PruneEmptyDeclarations.cpp",
        "patchSetId": 3
      },
      "lineNbr": 56,
      "author": {
        "id": 1001641
      },
      "writtenOn": "2015-04-23T17:38:58Z",
      "side": 1,
      "message": "I\u0027d rather not have special handling for nullptr. Maybe we could clarify the code though by for example adding a function NodeRemoveEntry, which would simply return a NodeReplaceWithMultipleEntry that would have an empty sequence as the replacement? That way both the call sites and updateTree() could be kept as simple as possible. How does this sound?",
      "parentUuid": "10a416b9_b15368be",
      "range": {
        "startLine": 56,
        "startChar": 49,
        "endLine": 56,
        "endChar": 77
      },
      "revId": "51c52b8000064907aea01987fdb71ae5d584542c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "10a416b9_117514f4",
        "filename": "src/compiler/translator/PruneEmptyDeclarations.cpp",
        "patchSetId": 3
      },
      "lineNbr": 56,
      "author": {
        "id": 1003154
      },
      "writtenOn": "2015-04-23T17:43:05Z",
      "side": 1,
      "message": "The reason I suggested removal instead of an empty sequence, is to avoid processing empty sequence in later steps.  But I guess it\u0027s trivia enough not to be a concern.  The code looks good as is.",
      "parentUuid": "90972654_35105284",
      "range": {
        "startLine": 56,
        "startChar": 49,
        "endLine": 56,
        "endChar": 77
      },
      "revId": "51c52b8000064907aea01987fdb71ae5d584542c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b088aa37_56c32a8a",
        "filename": "src/compiler/translator/PruneEmptyDeclarations.cpp",
        "patchSetId": 3
      },
      "lineNbr": 56,
      "author": {
        "id": 1001641
      },
      "writtenOn": "2015-04-23T17:49:03Z",
      "side": 1,
      "message": "Right, I don\u0027t think that using an empty sequence is really a problem for the later processing steps. It shouldn\u0027t add much overhead, and how it gets processed is intuitively quite clear at least to me.",
      "parentUuid": "10a416b9_117514f4",
      "range": {
        "startLine": 56,
        "startChar": 49,
        "endLine": 56,
        "endChar": 77
      },
      "revId": "51c52b8000064907aea01987fdb71ae5d584542c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0d43e30_16e57c4c",
        "filename": "src/compiler/translator/PruneEmptyDeclarations.cpp",
        "patchSetId": 3
      },
      "lineNbr": 67,
      "author": {
        "id": 1003154
      },
      "writtenOn": "2015-04-23T17:28:44Z",
      "side": 1,
      "message": "Same here.",
      "range": {
        "startLine": 67,
        "startChar": 20,
        "endLine": 67,
        "endChar": 38
      },
      "revId": "51c52b8000064907aea01987fdb71ae5d584542c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}