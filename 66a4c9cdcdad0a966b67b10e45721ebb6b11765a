{
  "comments": [
    {
      "key": {
        "uuid": "cafd83cb_3123fa57",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 9
      },
      "lineNbr": 982,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-09-09T23:16:03Z",
      "side": 1,
      "message": "Can we skip this work (and the hasGPUPendingCommands() check) and just always defer the flush if the render pass is open?",
      "revId": "66a4c9cdcdad0a966b67b10e45721ebb6b11765a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d5e6eea8_e9b50520",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 9
      },
      "lineNbr": 982,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-09-09T23:30:17Z",
      "side": 1,
      "message": "We can. For Manhattan this probably no difference. But IMO this check is worth while. If GPU is idle, and app is asking us to submit, why we hold off from submission, right?",
      "parentUuid": "cafd83cb_3123fa57",
      "revId": "66a4c9cdcdad0a966b67b10e45721ebb6b11765a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "44a7a837_73e5e474",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 9
      },
      "lineNbr": 982,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-09-09T23:53:32Z",
      "side": 1,
      "message": "True, assuming we do end up flushing sometimes.   Otherwise, it\u0027s lot of CPU cycles that don\u0027t result in any benefit if we really are GPU bound (which I think we expect on mobile).   I\u0027d prefer to start simple and add the complexity later when it\u0027s necessary.\n\nMaybe add a comment/todo so it doesn\u0027t get lost?",
      "parentUuid": "d5e6eea8_e9b50520",
      "revId": "66a4c9cdcdad0a966b67b10e45721ebb6b11765a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}