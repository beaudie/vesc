{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "bdfd755c_8566a83f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2021-02-18T00:48:39Z",
      "side": 1,
      "message": "PTAL",
      "revId": "9cef929aeb8f0056edadc4ad66924d47314c50e9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "21103dc3_9d866a5d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2021-02-18T17:41:23Z",
      "side": 1,
      "message": "Reply to comments for more comments.",
      "revId": "9cef929aeb8f0056edadc4ad66924d47314c50e9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6c89ffce_562f444b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2021-02-18T20:04:49Z",
      "side": 1,
      "message": "Reply.\nStill looking into other comments",
      "revId": "9cef929aeb8f0056edadc4ad66924d47314c50e9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c9a242e1_73d17c4c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2021-02-18T20:18:59Z",
      "side": 1,
      "message": "Reply on addition to getBufferAge()",
      "revId": "9cef929aeb8f0056edadc4ad66924d47314c50e9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "da0184af_22c8cb0d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2021-02-18T20:52:56Z",
      "side": 1,
      "message": "Response. I\u0027m not finding the exact scenario and results you are looking for.",
      "revId": "9cef929aeb8f0056edadc4ad66924d47314c50e9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d396ba46_b43e31bb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-02-18T21:38:16Z",
      "side": 1,
      "message": "Going to -2 temporarily to avoid accidental submission, until we can figure out what to do with the interaction of this change with deferred ANI.",
      "revId": "9cef929aeb8f0056edadc4ad66924d47314c50e9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2aa79e0c_1205cd21",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2021-02-18T22:19:13Z",
      "side": 1,
      "message": "Sorry, no FBO, buffer age doesn\u0027t apply.",
      "revId": "9cef929aeb8f0056edadc4ad66924d47314c50e9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "36c540f7_4fbead37",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2021-02-19T00:06:06Z",
      "side": 1,
      "message": "Comment",
      "revId": "9cef929aeb8f0056edadc4ad66924d47314c50e9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "767950e6_efb0dabc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2021-02-19T01:53:19Z",
      "side": 1,
      "message": "I got this into getBufferAge and its working as expected. I\u0027ll do a bit more testing.\n\negl::Error WindowSurfaceVk::getBufferAge(const gl::Context *context, EGLint *age)\n{\n    if (mNeedToAcquireNextSwapchainImage)\n    {\n        // Acquire the next image (previously deferred).\n        (void)doDeferredAcquireNextImage(context, false);\n    }\n\n    if (age !\u003d nullptr)\n    {\n        uint64_t frameNumber \u003d mSwapchainImages[mCurrentSwapchainImageIndex].mFrameNumber;\n        if (frameNumber \u003d\u003d 0)\n        {\n            *age \u003d 0;  // Has not been used for rendering yet, no age.\n        }\n        else\n        {\n            *age \u003d static_cast\u003cEGLint\u003e(mFrameCount - frameNumber);\n        }\n    }\n    return egl::NoError();\n}",
      "revId": "9cef929aeb8f0056edadc4ad66924d47314c50e9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e2f44cfe_243379b1",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 9
      },
      "lineNbr": 1564,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-02-18T15:59:08Z",
      "side": 1,
      "message": "This is probably not the right place for this. Actually that means we have another bug too. Take this scenario:\n\n1. Previous swap\n2. Draw to FBO\n3. ANI\n4. Draw to swapchain\n5. swap\n\nIIUC, age should be the same at steps 2 and 4, but they wouldn\u0027t be with this change. You can add a regression test based on this. Currently, age at step 4 would show 0, don\u0027t you think?\n\nI think we need to make two changes:\n\n- Set this right before queue present (i.e. swap). In other words, the age remains \"old\" until swap time.\n- getBufferAge should do this first:\n\n        if (mNeedToAcquireNextSwapchainImage)\n        {\n            // Acquire the next image (previously deferred).\n            ANGLE_TRY(doDeferredAcquireNextImage(context, false));\n        }\n\n   otherwise it would use the wrong index before ANI (step 2 in above scenario).",
      "revId": "9cef929aeb8f0056edadc4ad66924d47314c50e9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2725b6b4_95e468f0",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 9
      },
      "lineNbr": 1564,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2021-02-18T17:41:23Z",
      "side": 1,
      "message": "What I noticed, I need to set the mFrameNumber of the current Image just before AcquireNextImage, because otherwise it gets updated to current mFrameCount and the age (ols mFrameNumber) is lost - resulting in a getBufferAge of 1. At AcquireNextImage, the index is moved forward to the next image. That\u0027s why this spot works.\n\nputting mFrameNumber assignment and mFrameCount in swapImpl, anywhere, results in an age of 1. \n\nAt step 3 above, we are switching Images, So the age is not the same.\n\nIt might be better to move \n    mSwapchainImages[mCurrentSwapchainImageIndex].mFrameNumber \u003d mFrameCount++;\nto middle of WindowSurfaceVk::doDefferedAcquireNextImage(); before call to acquireNextSwapchainImage - this seems to skip some initialization paths that probably don\u0027t need it.",
      "parentUuid": "e2f44cfe_243379b1",
      "revId": "9cef929aeb8f0056edadc4ad66924d47314c50e9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bb196f92_c3842f9a",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 9
      },
      "lineNbr": 1564,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-02-18T19:03:30Z",
      "side": 1,
      "message": "I think we could reach a better understanding if you implemented my suggested test.\n\nOne problem is, in that scenario at step 2 we are returning the wrong age altogether. That\u0027s because mCurrentSwapchainImageIndex is not changed (as ANI is deferred). That\u0027s the reason you see the wrong age when updating mFrameCount in swapImpl; it\u0027s because before ANI we have the wrong index.\n\nSo my two suggestions go hand-in-hand. getBufferAge should make sure ANI is done (so the index is correct), then updating mFrameCount can move to swapImpl (though it would work if it stayed here, I believe it\u0027s more meaningful that way).",
      "parentUuid": "2725b6b4_95e468f0",
      "revId": "9cef929aeb8f0056edadc4ad66924d47314c50e9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ab3a8d80_f9943b20",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 9
      },
      "lineNbr": 1564,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2021-02-18T20:04:49Z",
      "side": 1,
      "message": "\"I think we could reach a better understanding if you implemented my suggested test.\n\"\n\nThis test is different than what you requested? It uses buffer age to check that the buffer has the expected contents. See:\n\n// Verify contents of buffer are as expected\nTEST_P(EGLBufferAgeTest, VerifyContents)\n\n\nDebug logs: Loop 3 and 4 still have age age 0, so the color/content is not glReadPixels and defaults to black.  Not sure why but I have hacked and verified that the contents are indeed blue and cyan as expected. It is also odd that eglSwapBuffers comes after ANI. Otherwise the content is as expected.\n\n[ RUN      ] EGLBufferAgeTest.VerifyContents/ES3_Vulkan_NoFixture\n\nLoop: 0 age: 0 Color: Black\nCall eglSwapBuffers()\n\nLoop: 1 age: 0 Color: Black\nPre call to  acquireNextSwapchainImage(): ImageIndex: 0 FrameCount: 0\nPost call to acquireNextSwapchainImage(): ImageIndex: 1 FrameCount: 1\nCall eglSwapBuffers()\n\nLoop: 2 age: 0 Color: Black\nPre call to  acquireNextSwapchainImage(): ImageIndex: 1 FrameCount: 1\nPost call to acquireNextSwapchainImage(): ImageIndex: 2 FrameCount: 2\nCall eglSwapBuffers()\n\nLoop: 3 age: 0 Color: Black\nPre call to  acquireNextSwapchainImage(): ImageIndex: 2 FrameCount: 2\nPost call to acquireNextSwapchainImage(): ImageIndex: 0 FrameCount: 3\nCall eglSwapBuffers()\n\nLoop: 4 age: 0 Color: Black\nPre call to  acquireNextSwapchainImage(): ImageIndex: 0 FrameCount: 3\nPost call to acquireNextSwapchainImage(): ImageIndex: 1 FrameCount: 4\nCall eglSwapBuffers()\nPre call to  acquireNextSwapchainImage(): ImageIndex: 1 FrameCount: 4\nPost call to acquireNextSwapchainImage(): ImageIndex: 2 FrameCount: 5\n\nLoop: 5 age: 3 Color: (64, 64, 64, 255)\nCall eglSwapBuffers()\nPre call to  acquireNextSwapchainImage(): ImageIndex: 2 FrameCount: 5\nPost call to acquireNextSwapchainImage(): ImageIndex: 0 FrameCount: 6\n\nLoop: 6 age: 3 Color: Green\nCall eglSwapBuffers()\nPre call to  acquireNextSwapchainImage(): ImageIndex: 0 FrameCount: 6\nPost call to acquireNextSwapchainImage(): ImageIndex: 1 FrameCount: 7\n\nLoop: 7 age: 3 Color: Red\nCall eglSwapBuffers()\nPre call to  acquireNextSwapchainImage(): ImageIndex: 1 FrameCount: 7\nPost call to acquireNextSwapchainImage(): ImageIndex: 2 FrameCount: 8\n\n\n\nI am looking into your other comments",
      "parentUuid": "bb196f92_c3842f9a",
      "revId": "9cef929aeb8f0056edadc4ad66924d47314c50e9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b7af2de0_270f937f",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 9
      },
      "lineNbr": 1564,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2021-02-18T20:18:59Z",
      "side": 1,
      "message": "\"getBufferAge should do this first:\n        if (mNeedToAcquireNextSwapchainImage)\n        {\n            // Acquire the next image (previously deferred).\n            ANGLE_TRY(doDeferredAcquireNextImage(context, false));\n        }\n   otherwise it would use the wrong index before ANI (step 2 in above scenario).\"\n\nUnfortunately there is no gl::Context when querying for a Surface attribute. It may or may not be current - IF, it referenced a context. Surface has no reference to gl::Context - not in scope.",
      "parentUuid": "ab3a8d80_f9943b20",
      "revId": "9cef929aeb8f0056edadc4ad66924d47314c50e9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fffdf451_0aac1aad",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 9
      },
      "lineNbr": 1564,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-02-18T21:38:16Z",
      "side": 1,
      "message": "\u003e This test is different than what you requested? It uses buffer age to check that the buffer has the expected contents. See:\n\u003e \n\u003e // Verify contents of buffer are as expected\n\u003e TEST_P(EGLBufferAgeTest, VerifyContents)\n\nYes very much so. Let me clarify the steps in the test I\u0027m proposing:\n\n1. Previous swap\n2. Draw to FBO \u003c------ note FBO, not swapchain.\n  2.5 verify age here\n3. ANI \u003c------ happens automatically when drawing to swapchain\n4. Draw to swapchain \u003c---- causes ANI\n  4.5 verify age again here\n5. swap\n\n\u003e Unfortunately there is no gl::Context when querying for a Surface attribute.\n\nHmm that may be a problem. At step 2.5 above, ANI hasn\u0027t happened yet. We don\u0027t know what buffer we are going to end up with. What age do you think should be reported there?\n\n+Ian for this discussion.\n\n---\n\nI would have suggested just reporting an age of 0 if mNeedToAcquireNextSwapchainImage, but given that at least one draw call should be submitted for ANI to take effect, that\u0027s probably not going to work for any application.",
      "parentUuid": "b7af2de0_270f937f",
      "revId": "9cef929aeb8f0056edadc4ad66924d47314c50e9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0e32cdb6_1294d414",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 9
      },
      "lineNbr": 1564,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2021-02-18T22:19:13Z",
      "side": 1,
      "message": "Note: buffer age is exclusive to EGL WindowSurfaces, we won\u0027t get any age from a FBO.",
      "parentUuid": "fffdf451_0aac1aad",
      "revId": "9cef929aeb8f0056edadc4ad66924d47314c50e9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8cbb5d0e_36f07212",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 9
      },
      "lineNbr": 1564,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-02-18T22:25:45Z",
      "side": 1,
      "message": "That\u0027s not what I was implying. The point was to have something drawn without ANI being triggered. The age is still queried from the surface, but because ANI hasn\u0027t happened, we can\u0027t know what image index to look at.\n\nThinking about it more, probably just taking the age right after the swap (as in your test) should result in the same problem. I need to dig deeper to understand why it\u0027s not a problem with your test.\n\nI\u0027ll get back to you about this tomorrow.",
      "parentUuid": "0e32cdb6_1294d414",
      "revId": "9cef929aeb8f0056edadc4ad66924d47314c50e9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dfcdf6ff_195e15b2",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 9
      },
      "lineNbr": 1564,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2021-02-19T00:06:06Z",
      "side": 1,
      "message": "ANI is triggered by either glClear or glReadPixels, in the test, if I removed these and have no draw, then eglSwapBuffers triggers ANI. So getBufferAge typically happens before any draw, and as soon as there is a draw we are on to the next image.",
      "parentUuid": "8cbb5d0e_36f07212",
      "revId": "9cef929aeb8f0056edadc4ad66924d47314c50e9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "77743665_b74d3eaf",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 9
      },
      "lineNbr": 1564,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-02-19T02:55:27Z",
      "side": 1,
      "message": "\u003e So getBufferAge typically happens before any draw\n\nYes that\u0027s my point, if it happens before any draw, it happens before ANI.",
      "parentUuid": "dfcdf6ff_195e15b2",
      "revId": "9cef929aeb8f0056edadc4ad66924d47314c50e9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f5a1525e_63b02d76",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 9
      },
      "lineNbr": 1564,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2021-02-19T16:49:19Z",
      "side": 1,
      "message": "Sorry, I didn\u0027t get what you were saying until I could see the nature of triggering ANI. I\u0027ll get the fix pushed up here in a bit, one more test and remove debug code.",
      "parentUuid": "77743665_b74d3eaf",
      "revId": "9cef929aeb8f0056edadc4ad66924d47314c50e9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}