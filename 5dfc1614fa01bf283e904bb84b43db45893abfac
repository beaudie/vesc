{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "dd13fbba_04249b94",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 18,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-05-23T19:32:16Z",
      "side": 1,
      "message": "Reminder that we have a spare descriptor set that we could move input attachments to, so we can make that independent from program desc sets.",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 18,
        "endChar": 38
      },
      "revId": "5dfc1614fa01bf283e904bb84b43db45893abfac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e4a3288e_880873e1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 18,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2023-05-24T17:29:46Z",
      "side": 1,
      "message": "Not exactly sure what that is, are you referring to default uniform descriptor set?",
      "parentUuid": "dd13fbba_04249b94",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 18,
        "endChar": 38
      },
      "revId": "5dfc1614fa01bf283e904bb84b43db45893abfac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2fa1a20a_4aea29a4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 18,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-05-24T18:28:07Z",
      "side": 1,
      "message": "We used to use 4 descriptor sets, but we turned driver uniforms into push constants so we use 3 descriptor sets now. Vulkan requires that drivers support at least 4 sets, so we have 1 descriptor set index free to use.\n\nWe can put input attachments into their own descriptor set and update it per render pass instead of per program.",
      "parentUuid": "e4a3288e_880873e1",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 18,
        "endChar": 38
      },
      "revId": "5dfc1614fa01bf283e904bb84b43db45893abfac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4c21a571_3459888b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 18,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2023-05-24T19:56:40Z",
      "side": 1,
      "message": "I see. That is a something we can try with follow up CL.",
      "parentUuid": "2fa1a20a_4aea29a4",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 18,
        "endChar": 38
      },
      "revId": "5dfc1614fa01bf283e904bb84b43db45893abfac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c0cb0afd_1b0bd763",
        "filename": "src/libANGLE/renderer/vulkan/ProgramExecutableVk.cpp",
        "patchSetId": 13
      },
      "lineNbr": 1493,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-05-23T19:32:16Z",
      "side": 1,
      "message": "nit: Please refactor into a helper, this function is quite large already.",
      "revId": "5dfc1614fa01bf283e904bb84b43db45893abfac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ce0df8cf_4ed74d8f",
        "filename": "src/libANGLE/renderer/vulkan/ProgramExecutableVk.cpp",
        "patchSetId": 13
      },
      "lineNbr": 1493,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2023-05-24T17:29:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c0cb0afd_1b0bd763",
      "revId": "5dfc1614fa01bf283e904bb84b43db45893abfac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "26794c26_ff5fd8cf",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "patchSetId": 13
      },
      "lineNbr": 5720,
      "author": {
        "id": 1531247
      },
      "writtenOn": "2023-05-23T15:07:27Z",
      "side": 1,
      "message": "Should we be asserting on `idx \u003c writeDescriptorDescs.size()` in places where we access `writeDescriptorDescs[idx]`?",
      "range": {
        "startLine": 5720,
        "startChar": 25,
        "endLine": 5720,
        "endChar": 46
      },
      "revId": "5dfc1614fa01bf283e904bb84b43db45893abfac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6ecd6d07_e2010288",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "patchSetId": 13
      },
      "lineNbr": 5720,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2023-05-23T16:16:44Z",
      "side": 1,
      "message": "FastMap itself has the assertion.",
      "parentUuid": "26794c26_ff5fd8cf",
      "range": {
        "startLine": 5720,
        "startChar": 25,
        "endLine": 5720,
        "endChar": 46
      },
      "revId": "5dfc1614fa01bf283e904bb84b43db45893abfac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}