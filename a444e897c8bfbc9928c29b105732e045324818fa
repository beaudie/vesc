{
  "comments": [
    {
      "key": {
        "uuid": "9212c949_ffeed773",
        "filename": "src/libANGLE/ProgramExecutable.cpp",
        "patchSetId": 11
      },
      "lineNbr": 235,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-04-01T18:29:41Z",
      "side": 1,
      "message": "is this necessary? seems like you can use the shaderBits unconditionally.",
      "range": {
        "startLine": 232,
        "startChar": 12,
        "endLine": 235,
        "endChar": 63
      },
      "revId": "a444e897c8bfbc9928c29b105732e045324818fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "82b067e3_d34a9a0a",
        "filename": "src/libANGLE/ProgramExecutable.cpp",
        "patchSetId": 11
      },
      "lineNbr": 235,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-04-01T19:52:24Z",
      "side": 1,
      "message": "Compute shader does no have activeShaders set. That\u0027s why the you see the explicit check if(isCompute()) in various places.",
      "parentUuid": "9212c949_ffeed773",
      "range": {
        "startLine": 232,
        "startChar": 12,
        "endLine": 235,
        "endChar": 63
      },
      "revId": "a444e897c8bfbc9928c29b105732e045324818fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "09d7220d_54214ca2",
        "filename": "src/libANGLE/ProgramExecutable.cpp",
        "patchSetId": 11
      },
      "lineNbr": 235,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-04-01T19:54:46Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "82b067e3_d34a9a0a",
      "range": {
        "startLine": 232,
        "startChar": 12,
        "endLine": 235,
        "endChar": 63
      },
      "revId": "a444e897c8bfbc9928c29b105732e045324818fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d632d985_b29f30b4",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 11
      },
      "lineNbr": 1252,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-04-01T18:29:41Z",
      "side": 1,
      "message": "you can optimize this and clean up the syntax using gl::BitCount(shaderBits.to_ulong()) \u003e 1 (or \u003d\u003d 1). Could also make count() a member of angle::BitSet.",
      "range": {
        "startLine": 1252,
        "startChar": 16,
        "endLine": 1252,
        "endChar": 32
      },
      "revId": "a444e897c8bfbc9928c29b105732e045324818fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a798a915_4de6739d",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 11
      },
      "lineNbr": 1252,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-04-01T19:23:57Z",
      "side": 1,
      "message": "Shabi suggests the opposite:\nhttps://chromium-review.googlesource.com/c/angle/angle/+/2067101/42/src/libANGLE/renderer/glslang_wrapper_utils.cpp#733\n\nShahbaz Youssefi\nMar 13\nIf all you are interested is if there are any active shaders, it\u0027s better to use (indirectly) the bitset\u0027s any() instead of count(). `any()` is a simple test against 0, `count()` relies on intrinsics which aren\u0027t universally available (or fallback to multiple instructions for example when counting uint64_t bits on a 32-bit system).",
      "parentUuid": "d632d985_b29f30b4",
      "range": {
        "startLine": 1252,
        "startChar": 16,
        "endLine": 1252,
        "endChar": 32
      },
      "revId": "a444e897c8bfbc9928c29b105732e045324818fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "236a5253_744aa84a",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 11
      },
      "lineNbr": 1252,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-04-01T19:52:24Z",
      "side": 1,
      "message": "I don\u0027t think BitCount will be cheaper than any() check though, given that you still have to have a comparison after get the bit count.",
      "parentUuid": "d632d985_b29f30b4",
      "range": {
        "startLine": 1252,
        "startChar": 16,
        "endLine": 1252,
        "endChar": 32
      },
      "revId": "a444e897c8bfbc9928c29b105732e045324818fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "15454177_4a3193d5",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 11
      },
      "lineNbr": 1252,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-04-01T19:54:46Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "236a5253_744aa84a",
      "range": {
        "startLine": 1252,
        "startChar": 16,
        "endLine": 1252,
        "endChar": 32
      },
      "revId": "a444e897c8bfbc9928c29b105732e045324818fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3bfc99ec_c119ed96",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 11
      },
      "lineNbr": 1268,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-04-01T18:29:41Z",
      "side": 1,
      "message": "nit: can you make this a constexpr gl::ShaderMap in the anonymous namespace at the top of the file please? that will be both more efficient (no stack allocation) and a nicer syntax (no need for the static_cast). see Context.cpp\u0027s kValidBasicDrawModes for an example.",
      "range": {
        "startLine": 1265,
        "startChar": 20,
        "endLine": 1268,
        "endChar": 95
      },
      "revId": "a444e897c8bfbc9928c29b105732e045324818fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "deee25c7_8fb5213e",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 11
      },
      "lineNbr": 1268,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-04-01T19:52:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3bfc99ec_c119ed96",
      "range": {
        "startLine": 1265,
        "startChar": 20,
        "endLine": 1268,
        "endChar": 95
      },
      "revId": "a444e897c8bfbc9928c29b105732e045324818fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e6d232cd_24e84d65",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 11
      },
      "lineNbr": 3655,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-04-01T18:29:41Z",
      "side": 1,
      "message": "same comment as above.",
      "range": {
        "startLine": 3655,
        "startChar": 12,
        "endLine": 3655,
        "endChar": 28
      },
      "revId": "a444e897c8bfbc9928c29b105732e045324818fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a85e6e90_74a75dfd",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 11
      },
      "lineNbr": 3655,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-04-01T19:52:24Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "e6d232cd_24e84d65",
      "range": {
        "startLine": 3655,
        "startChar": 12,
        "endLine": 3655,
        "endChar": 28
      },
      "revId": "a444e897c8bfbc9928c29b105732e045324818fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4236c0b8_e25ecea2",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 11
      },
      "lineNbr": 3668,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-04-01T18:29:41Z",
      "side": 1,
      "message": "same comment as above.",
      "range": {
        "startLine": 3666,
        "startChar": 0,
        "endLine": 3668,
        "endChar": 95
      },
      "revId": "a444e897c8bfbc9928c29b105732e045324818fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ee43c09a_d02dd1a5",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 11
      },
      "lineNbr": 3668,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-04-01T19:52:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4236c0b8_e25ecea2",
      "range": {
        "startLine": 3666,
        "startChar": 0,
        "endLine": 3668,
        "endChar": 95
      },
      "revId": "a444e897c8bfbc9928c29b105732e045324818fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff5e8cfc_7483e168",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 11
      },
      "lineNbr": 184,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-04-01T19:23:57Z",
      "side": 1,
      "message": "Should be Geometry.",
      "range": {
        "startLine": 183,
        "startChar": 0,
        "endLine": 184,
        "endChar": 48
      },
      "revId": "a444e897c8bfbc9928c29b105732e045324818fa",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}