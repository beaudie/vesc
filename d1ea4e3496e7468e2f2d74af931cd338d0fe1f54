{
  "comments": [
    {
      "key": {
        "uuid": "ffb2125f_3a631bd5",
        "filename": "src/libANGLE/renderer/glslang_wrapper_utils.cpp",
        "patchSetId": 3
      },
      "lineNbr": 62,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-09-15T14:17:53Z",
      "side": 1,
      "message": "Since you are double compiling the shader anyway, could you change things such that the actual `@@ XFB-DECL @@` and `@@ XFB-OUT @@` are modified once for with xfb and once for without xfb? Then you can get rid of the `ANGLE_ENABLE_XFB_EMULATION` macro (and probably all the changes in this file).\n\nThe reason is anglebug.com/4889. Transform feedback patches will soon no longer be applied on the source but in SPIR-V itself. A hack like this would be hard to work with.",
      "range": {
        "startLine": 62,
        "startChar": 57,
        "endLine": 62,
        "endChar": 91
      },
      "revId": "d1ea4e3496e7468e2f2d74af931cd338d0fe1f54",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3957beab_2504f530",
        "filename": "src/libANGLE/renderer/glslang_wrapper_utils.cpp",
        "patchSetId": 3
      },
      "lineNbr": 62,
      "author": {
        "id": 1374244
      },
      "writtenOn": "2020-09-15T14:50:42Z",
      "side": 1,
      "message": "Actually I was expecting in future the \"turnOnXfbEmulationCodeViaMacro\" would be moved to GlslangTransformSpirvCode() instead once XFB emulation is moved to SPIR-V.\n\nIs GlslangTransformSpirvCode() capable of completely remove dead code referenced by a disabled specialization constant? I think this shouldn\u0027t be too hard for added XFB emulation code.\n\nThe reason I put \"turnOnXfbEmulationCodeViaMacro\" to \"GlslangGetShaderSpirvCode()\" is because doing so would avoid double \"GlslangGetShaderSource()\" calls.\nCurrently GlslangGetShaderSpirvCode() could still be called twice but if \"@@ XFB-OUT @@\" to be removed by GlslangGetShaderSource() instead then it will become:\nGlslangGetShaderSource()x2 + GlslangGetShaderSpirvCode()x2.\nThe complexity is the same, but being able to avoid any extra overhead is always valuable.",
      "parentUuid": "ffb2125f_3a631bd5",
      "range": {
        "startLine": 62,
        "startChar": 57,
        "endLine": 62,
        "endChar": 91
      },
      "revId": "d1ea4e3496e7468e2f2d74af931cd338d0fe1f54",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}