{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b9639774_8a79e9d8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-02-14T18:36:49Z",
      "side": 1,
      "message": "Verified locally that build on Linux, Linux x86, windows and mac all still have SSE enabled.\n\nAlso found out that Android does not use SSE instructions apparently (regardless of this CL), which may be a separate thing to look into.",
      "revId": "f52cdf51dba2f2f3d2f9912d13c12a34de00bed6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3a37fa40_e15635e7",
        "filename": "src/common/platform.h",
        "patchSetId": 1
      },
      "lineNbr": 116,
      "author": {
        "id": 1531247
      },
      "writtenOn": "2024-02-15T15:27:54Z",
      "side": 1,
      "message": "I\u0027m guessing this include should also be conditional on sse? Might be cleaner to add `__SSE__` to the line above. I\u0027m also curious if this is actually what they\u0027re trying to do: https://anglebug.com/8536#c3",
      "range": {
        "startLine": 116,
        "startChar": 5,
        "endLine": 116,
        "endChar": 26
      },
      "revId": "f52cdf51dba2f2f3d2f9912d13c12a34de00bed6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9749979e_e212529e",
        "filename": "src/common/platform.h",
        "patchSetId": 1
      },
      "lineNbr": 116,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-02-15T16:59:50Z",
      "side": 1,
      "message": ":shrug: it\u0027s just an include. I\u0027m not too concerned about build performance on x86.",
      "parentUuid": "3a37fa40_e15635e7",
      "range": {
        "startLine": 116,
        "startChar": 5,
        "endLine": 116,
        "endChar": 26
      },
      "revId": "f52cdf51dba2f2f3d2f9912d13c12a34de00bed6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "69807777_078b80c1",
        "filename": "src/common/platform.h",
        "patchSetId": 1
      },
      "lineNbr": 116,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-02-15T17:48:53Z",
      "side": 1,
      "message": "By the way, I did verify that gcc (and clang) both don\u0027t define __SSE__ at all for 32-bit (with `-m32`) with this command: https://stackoverflow.com/a/28939692, so having this `#if` seems reasonable.",
      "parentUuid": "9749979e_e212529e",
      "range": {
        "startLine": 116,
        "startChar": 5,
        "endLine": 116,
        "endChar": 26
      },
      "revId": "f52cdf51dba2f2f3d2f9912d13c12a34de00bed6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:approval_code-owners"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "f52cdf51dba2f2f3d2f9912d13c12a34de00bed6",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "f52cdf51dba2f2f3d2f9912d13c12a34de00bed6",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "f52cdf51dba2f2f3d2f9912d13c12a34de00bed6",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "f52cdf51dba2f2f3d2f9912d13c12a34de00bed6",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}