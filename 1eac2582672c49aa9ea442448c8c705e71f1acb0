{
  "comments": [
    {
      "key": {
        "uuid": "38711136_0011bc85",
        "filename": "src/libANGLE/MemoryProgramCache.cpp",
        "patchSetId": 5
      },
      "lineNbr": 127,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-04-08T16:23:34Z",
      "side": 1,
      "message": "nit: remove please for reasons stated earlier. If you can make a regression test that this line fixes than it would be fine to keep.",
      "range": {
        "startLine": 125,
        "startChar": 0,
        "endLine": 127,
        "endChar": 0
      },
      "revId": "1eac2582672c49aa9ea442448c8c705e71f1acb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "688b5d41_033a0c0f",
        "filename": "src/libANGLE/MemoryProgramCache.cpp",
        "patchSetId": 5
      },
      "lineNbr": 127,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-04-08T17:24:04Z",
      "side": 1,
      "message": "angleproject:4558",
      "parentUuid": "38711136_0011bc85",
      "range": {
        "startLine": 125,
        "startChar": 0,
        "endLine": 127,
        "endChar": 0
      },
      "revId": "1eac2582672c49aa9ea442448c8c705e71f1acb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2828f00f_c121a8ce",
        "filename": "src/libANGLE/MemoryProgramCache.cpp",
        "patchSetId": 5
      },
      "lineNbr": 127,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-04-08T18:02:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "688b5d41_033a0c0f",
      "range": {
        "startLine": 125,
        "startChar": 0,
        "endLine": 127,
        "endChar": 0
      },
      "revId": "1eac2582672c49aa9ea442448c8c705e71f1acb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6d0efefe_f82a000c",
        "filename": "src/libANGLE/renderer/vulkan/ProgramExecutableVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 104,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-04-08T16:23:34Z",
      "side": 1,
      "message": "please make a helper in GlslangWrapperVk that properly uses ErrorHandler for this. I think the way it\u0027s structured now it\u0027ll just drop the error. Then you\u0027ll be able to use ANGLE_TRY.",
      "range": {
        "startLine": 104,
        "startChar": 19,
        "endLine": 104,
        "endChar": 68
      },
      "revId": "1eac2582672c49aa9ea442448c8c705e71f1acb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d9b181c_75e72dd1",
        "filename": "src/libANGLE/renderer/vulkan/ProgramExecutableVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 104,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-04-08T18:02:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6d0efefe_f82a000c",
      "range": {
        "startLine": 104,
        "startChar": 19,
        "endLine": 104,
        "endChar": 68
      },
      "revId": "1eac2582672c49aa9ea442448c8c705e71f1acb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "866f5c5b_be4f136a",
        "filename": "src/libANGLE/renderer/vulkan/ProgramExecutableVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 118,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-04-08T04:37:50Z",
      "side": 1,
      "message": "We are starting to get many duplicate shader modules (line raster emulation shader modules are entirely useless duplicates). Could you please create a bug to track the work of optimizing this? For all the four combination of programs with N stages, we really only need N+1 shader modules. That saves SPIR-V to native translation as well as memory.",
      "revId": "1eac2582672c49aa9ea442448c8c705e71f1acb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a3926141_16cfdab6",
        "filename": "src/libANGLE/renderer/vulkan/ProgramExecutableVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 118,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-04-08T17:08:27Z",
      "side": 1,
      "message": "I thought the whole point you made for separate modules are that these are very rare cases and for majority use case you will never create these modules since creation are deferred. Using N+1 shader stage will hurt the performance of rare usage case, right? Assume that is true for the following discussion. I was in the camp of the other side, but after thinking a bit more, I think creating the extra modules is right thing to do. Even though it is rare usage, does not mean perf not important. For the person end up using this, perf is as important as everyone else. The alternative solution for memory waste problem is to keep some usage heuristic and add this into garbage collection facility so that if a module not been used for a while just clean it. This essentially is a cache of some kind, and we have many other similar usage in other places.",
      "parentUuid": "866f5c5b_be4f136a",
      "revId": "1eac2582672c49aa9ea442448c8c705e71f1acb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a54c79ec_49335f8b",
        "filename": "src/libANGLE/renderer/vulkan/ProgramExecutableVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 118,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-04-08T18:02:28Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "a3926141_16cfdab6",
      "revId": "1eac2582672c49aa9ea442448c8c705e71f1acb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a79e5ce3_6e9ccff5",
        "filename": "src/libANGLE/renderer/vulkan/ProgramExecutableVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 118,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-04-09T17:18:51Z",
      "side": 1,
      "message": "I think I understand this now. Its the shader modules are duplicated across these programInfo objects. filed http://b/153654302 to track it.",
      "parentUuid": "a54c79ec_49335f8b",
      "revId": "1eac2582672c49aa9ea442448c8c705e71f1acb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f12219c5_d587b70d",
        "filename": "src/libANGLE/renderer/vulkan/ProgramExecutableVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 178,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-04-08T16:23:34Z",
      "side": 1,
      "message": "nit: prefer explicit types unless it makes the code easier to read for unfamiliar developers. see\n\nhttps://google.github.io/styleguide/cppguide.html#Type_deduction",
      "range": {
        "startLine": 178,
        "startChar": 9,
        "endLine": 178,
        "endChar": 14
      },
      "revId": "1eac2582672c49aa9ea442448c8c705e71f1acb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "00fe3cf1_cf1c1223",
        "filename": "src/libANGLE/renderer/vulkan/ProgramExecutableVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 178,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-04-08T17:08:27Z",
      "side": 1,
      "message": "See other usage in line 153 above. I am not a fan of auto but wondering you guys might prefer using auto for the simplicity. Again, any written guideline that I can keep handy?",
      "parentUuid": "f12219c5_d587b70d",
      "range": {
        "startLine": 178,
        "startChar": 9,
        "endLine": 178,
        "endChar": 14
      },
      "revId": "1eac2582672c49aa9ea442448c8c705e71f1acb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2f6c9b4f_b5e2a0df",
        "filename": "src/libANGLE/renderer/vulkan/ProgramExecutableVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 178,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-04-08T17:12:44Z",
      "side": 1,
      "message": "See the link above in my comment. It would be nice to catch these with a linter.",
      "parentUuid": "00fe3cf1_cf1c1223",
      "range": {
        "startLine": 178,
        "startChar": 9,
        "endLine": 178,
        "endChar": 14
      },
      "revId": "1eac2582672c49aa9ea442448c8c705e71f1acb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4be81964_93be2a44",
        "filename": "src/libANGLE/renderer/vulkan/ProgramExecutableVk.cpp",
        "patchSetId": 5
      },
      "lineNbr": 178,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-04-08T18:02:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2f6c9b4f_b5e2a0df",
      "range": {
        "startLine": 178,
        "startChar": 9,
        "endLine": 178,
        "endChar": 14
      },
      "revId": "1eac2582672c49aa9ea442448c8c705e71f1acb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7fa3c42f_7c009138",
        "filename": "src/libANGLE/renderer/vulkan/ProgramExecutableVk.h",
        "patchSetId": 5
      },
      "lineNbr": 60,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-04-08T16:23:34Z",
      "side": 1,
      "message": "nit: can you please pull this out of the class? in-class types are a bit harder to deal with. Can call it ProgramTransformOption if you like the scoping.",
      "range": {
        "startLine": 54,
        "startChar": 0,
        "endLine": 60,
        "endChar": 6
      },
      "revId": "1eac2582672c49aa9ea442448c8c705e71f1acb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d1156f9_a51d7e8c",
        "filename": "src/libANGLE/renderer/vulkan/ProgramExecutableVk.h",
        "patchSetId": 5
      },
      "lineNbr": 60,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-04-08T17:08:27Z",
      "side": 1,
      "message": "Actually not because I like it but because I saw the prior example and thought that is what you guys would like to see, because the usage are very local. See following examples:\n    enum class PipelineType\n    enum class ParseState\n    enum class ConsumerType\n    enum class UpdateSource\n    enum class Function\n    enum class SwapControl\n    enum class ClearCommandType\n    enum class CacheSource\n\nFor now I will move it out, but we should be consistent and have some kind written guideline.",
      "parentUuid": "7fa3c42f_7c009138",
      "range": {
        "startLine": 54,
        "startChar": 0,
        "endLine": 60,
        "endChar": 6
      },
      "revId": "1eac2582672c49aa9ea442448c8c705e71f1acb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "770bac6d_c9e5a947",
        "filename": "src/libANGLE/renderer/vulkan/ProgramExecutableVk.h",
        "patchSetId": 5
      },
      "lineNbr": 60,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-04-08T17:12:44Z",
      "side": 1,
      "message": "Yeah we can add this into the coding style suggestions.",
      "parentUuid": "2d1156f9_a51d7e8c",
      "range": {
        "startLine": 54,
        "startChar": 0,
        "endLine": 60,
        "endChar": 6
      },
      "revId": "1eac2582672c49aa9ea442448c8c705e71f1acb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "940f238e_e7510312",
        "filename": "src/libANGLE/renderer/vulkan/ProgramExecutableVk.h",
        "patchSetId": 5
      },
      "lineNbr": 60,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-04-08T18:02:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "770bac6d_c9e5a947",
      "range": {
        "startLine": 54,
        "startChar": 0,
        "endLine": 60,
        "endChar": 6
      },
      "revId": "1eac2582672c49aa9ea442448c8c705e71f1acb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3721384c_33521aed",
        "filename": "src/libANGLE/renderer/vulkan/ProgramExecutableVk.h",
        "patchSetId": 5
      },
      "lineNbr": 66,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-04-08T16:23:34Z",
      "side": 1,
      "message": "nit: casing",
      "range": {
        "startLine": 66,
        "startChar": 50,
        "endLine": 66,
        "endChar": 61
      },
      "revId": "1eac2582672c49aa9ea442448c8c705e71f1acb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "557f9293_e571a8c8",
        "filename": "src/libANGLE/renderer/vulkan/ProgramExecutableVk.h",
        "patchSetId": 5
      },
      "lineNbr": 66,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-04-08T18:02:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3721384c_33521aed",
      "range": {
        "startLine": 66,
        "startChar": 50,
        "endLine": 66,
        "endChar": 61
      },
      "revId": "1eac2582672c49aa9ea442448c8c705e71f1acb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6436db65_cb6ac469",
        "filename": "src/libANGLE/renderer/vulkan/ProgramVk.h",
        "patchSetId": 5
      },
      "lineNbr": 179,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-04-08T04:37:50Z",
      "side": 1,
      "message": "As much as I love snake_case, this is a camelCase code base.",
      "range": {
        "startLine": 179,
        "startChar": 76,
        "endLine": 179,
        "endChar": 87
      },
      "revId": "1eac2582672c49aa9ea442448c8c705e71f1acb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "63415f59_685008a6",
        "filename": "src/libANGLE/renderer/vulkan/ProgramVk.h",
        "patchSetId": 5
      },
      "lineNbr": 179,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-04-08T17:08:27Z",
      "side": 1,
      "message": "Will fix. Clion actually suggest this to me for some reason.",
      "parentUuid": "6436db65_cb6ac469",
      "range": {
        "startLine": 179,
        "startChar": 76,
        "endLine": 179,
        "endChar": 87
      },
      "revId": "1eac2582672c49aa9ea442448c8c705e71f1acb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fc6d2c15_d856ef79",
        "filename": "src/libANGLE/renderer/vulkan/ProgramVk.h",
        "patchSetId": 5
      },
      "lineNbr": 179,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-04-08T18:02:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "63415f59_685008a6",
      "range": {
        "startLine": 179,
        "startChar": 76,
        "endLine": 179,
        "endChar": 87
      },
      "revId": "1eac2582672c49aa9ea442448c8c705e71f1acb0",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}