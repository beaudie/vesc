{
  "comments": [
    {
      "key": {
        "uuid": "16171085_aa972ae8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-05-09T04:48:18Z",
      "side": 1,
      "message": "What if instead we pass `mLayerCount` to `SubresourceUpdate()` and use that instead of `VK_REMAINING_ARRAY_LAYERS`? Then the `flushSingleSubresourceStagedUpdates` logic can remain as is.",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 25
      },
      "revId": "7ed1ab974a35f832f24e9414b363061a64c74747",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c53efda_218d1a65",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1323708
      },
      "writtenOn": "2020-05-09T04:59:21Z",
      "side": 1,
      "message": "I don\u0027t know why it is VK_REMAINING_ARRAY_LAYERS, if it is mLayerCount in SubresourceUpdate, I think the issue can also be fixed. But don\u0027t know if this breaks something",
      "parentUuid": "16171085_aa972ae8",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 25
      },
      "revId": "7ed1ab974a35f832f24e9414b363061a64c74747",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a51daf9_516191b4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-05-09T05:13:48Z",
      "side": 1,
      "message": "I think setting the correct value instead of `VK_REMAINING_ARRAY_LAYERS` is a better fix (why set something unexpected, then have to later handle it?)\n\nOnly thing I\u0027m not sure of is whether the image is guaranteed to have been init()ed before a clear is staged, but it most likely should be. We could at least try that on the bots.",
      "parentUuid": "5c53efda_218d1a65",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 25
      },
      "revId": "7ed1ab974a35f832f24e9414b363061a64c74747",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c3a3eadc_241530a2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1323708
      },
      "writtenOn": "2020-05-09T05:19:25Z",
      "side": 1,
      "message": "mLayerCount is not a member of SubresourceUpdate, so we have to pass a new member to its constructor.\nOr we can always use 1 (it should be 1 if an image has no layer):\nclear.layerCount \u003d\n        imageIndex.hasLayer() ? imageIndex.getLayerCount() : 1;",
      "parentUuid": "4a51daf9_516191b4",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 25
      },
      "revId": "7ed1ab974a35f832f24e9414b363061a64c74747",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1fe59d58_ba80120c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-05-09T19:39:20Z",
      "side": 1,
      "message": "I was thinking of passing it to the constructor.\n\nI\u0027m not 100% sure if `!imageIndex.hasLayer()` implies a layer count of 1. Note that `ImageIndex` is something similar to `VkImageSubresourceRange` (so it selects a subresource of an image, and doesn\u0027t \"specify\" an image). I think `!hasLayer()` means take every layer, but I don\u0027t remember the details exactly.",
      "parentUuid": "c3a3eadc_241530a2",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 25
      },
      "revId": "7ed1ab974a35f832f24e9414b363061a64c74747",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}