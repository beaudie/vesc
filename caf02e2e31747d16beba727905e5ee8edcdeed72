{
  "comments": [
    {
      "key": {
        "uuid": "4df411d1_236e0246",
        "filename": "src/libGLESv2/renderer/d3d11/formatutils11.cpp",
        "patchSetId": 2
      },
      "lineNbr": 799,
      "author": {
        "id": 1105219
      },
      "writtenOn": "2014-01-09T23:08:11Z",
      "side": 1,
      "message": "GetPixelBytes is dividing the stored number of bits by eight before returning it-- it seems silly that we do that before multiplying it right back in here. Was there a reason we didn\u0027t provide a GetPixelBits?",
      "revId": "caf02e2e31747d16beba727905e5ee8edcdeed72",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6def1500_f951cb4f",
        "filename": "src/libGLESv2/renderer/d3d11/formatutils11.cpp",
        "patchSetId": 2
      },
      "lineNbr": 799,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2014-01-09T23:12:04Z",
      "side": 1,
      "message": "It returns bytes mostly because the return value is used for allocating memory and every format\u0027s size is a multiple of 8 bits.\n\nI could add a GetPixelBits but if we removed GetPixelBytes we\u0027d have to do the division by 8 in lots of places.",
      "parentUuid": "4df411d1_236e0246",
      "revId": "caf02e2e31747d16beba727905e5ee8edcdeed72",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4df411d1_23ff2219",
        "filename": "src/libGLESv2/renderer/d3d11/formatutils11.cpp",
        "patchSetId": 2
      },
      "lineNbr": 799,
      "author": {
        "id": 1105219
      },
      "writtenOn": "2014-01-09T23:13:58Z",
      "side": 1,
      "message": "We definitely don\u0027t want to remove GetPixelBytes. If this is the only place that we need bits, I don\u0027t think adding a Bits version would be worth it.",
      "parentUuid": "6def1500_f951cb4f",
      "revId": "caf02e2e31747d16beba727905e5ee8edcdeed72",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}