{
  "comments": [
    {
      "key": {
        "uuid": "4d688bc1_de346442",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-08-08T00:28:06Z",
      "side": 1,
      "message": "After discussing with Shabi and I confirm that the clear gets removed during flushStagedUpdates call. So we are not initializing alpha twice. I think we don\u0027t need this CL.",
      "revId": "426794439909c2baae8d1dc67ade15b1612a2235",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a6b763e0_1ef3adc4",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 4
      },
      "lineNbr": 4079,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-08-07T16:43:20Z",
      "side": 1,
      "message": "This method can be applied to any number of emulated channels, so I don\u0027t think we necessarily need to limit ourselves to alpha being emulated.\n\nReadback is not the only place that needs fixing by the way. Anywhere in UtilsVk that we fetch texels directly (basically where the \"copy\" view is used) needs to handle this. Other places are when we use Vulkan functions directly do stuff like vkCmdCopyImage, vkCmdBlitImage, vkCmdResolveImage.\n\nThe former can be fixed with some extra shader code, or changing the shaders to use a point sampler instead of texelFetch directly (I\u0027ve actually been meaning to do that for blit/resolve for other reasons). The latter can be solved by avoiding the direct Vulkan path and falling back to UtilsVk.",
      "revId": "426794439909c2baae8d1dc67ade15b1612a2235",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}