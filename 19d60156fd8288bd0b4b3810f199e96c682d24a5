{
  "comments": [
    {
      "key": {
        "uuid": "42448af0_bacc6f39",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 13,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-04-11T15:43:21Z",
      "side": 1,
      "message": "can you also tag this with Bug: angleproject:1309 ?",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 13,
        "endChar": 21
      },
      "revId": "19d60156fd8288bd0b4b3810f199e96c682d24a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb07f9f6_948f466c",
        "filename": "scripts/generate_entry_points.py",
        "patchSetId": 6
      },
      "lineNbr": 66,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-04-11T15:43:21Z",
      "side": 1,
      "message": "can you keep this as a separate list but append them (gles1 + [] + angle_extensions) similar to the gles1 code?",
      "range": {
        "startLine": 58,
        "startChar": 0,
        "endLine": 66,
        "endChar": 24
      },
      "revId": "19d60156fd8288bd0b4b3810f199e96c682d24a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c9366a92_d563c370",
        "filename": "src/libGLESv2/entry_points_gles_ext_autogen.cpp",
        "patchSetId": 6
      },
      "lineNbr": 239,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-04-12T02:04:58Z",
      "side": 1,
      "message": "I think we still rely on the validation function to write the length parameter so we can\u0027t skip it.  Can we add a list of extensions that cannot skip validation in generate_entry_points.py?",
      "range": {
        "startLine": 239,
        "startChar": 12,
        "endLine": 239,
        "endChar": 40
      },
      "revId": "19d60156fd8288bd0b4b3810f199e96c682d24a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}