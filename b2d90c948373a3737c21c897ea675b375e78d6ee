{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "6043d3c3_aa567839",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2023-08-30T15:34:35Z",
      "side": 1,
      "message": "Not sure what\u0027s going on with the tests yet.",
      "revId": "b2d90c948373a3737c21c897ea675b375e78d6ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "be799f10_fc08017a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-08-30T15:46:00Z",
      "side": 1,
      "message": "Re-LGTM!",
      "revId": "b2d90c948373a3737c21c897ea675b375e78d6ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "164c213c_8178a391",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2023-08-30T17:58:52Z",
      "side": 1,
      "message": "Apparently this is breaking Pixel 4.\nMaybe this would catch additional out of date swap chains?\nThat or I need to change the order in which I\u0027m adding the additional check.\nI didn\u0027t want to go *too* far down the swapchain rabbit hole here.\n```\nI 17:28:58.965   61.268s run_tests_on_device(9A261FFAZ007S8)  [ RUN      ] dEQP-EGL.functional.partial_update.odd_render_render_even_render\nI 17:28:58.965   61.268s run_tests_on_device(9A261FFAZ007S8)  WARN: Surface.cpp:421 (setSwapBehavior): \t! Unimplemented: setSwapBehavior(../../src/libANGLE/Surface.cpp:421)\nI 17:28:58.966   61.268s run_tests_on_device(9A261FFAZ007S8)  ../../src/tests/deqp_support/angle_deqp_gtest.cpp:444: Failure\nI 17:28:58.966   61.268s run_tests_on_device(9A261FFAZ007S8)  Value of: testSucceeded\nI 17:28:58.966   61.268s run_tests_on_device(9A261FFAZ007S8)    Actual: false\nI 17:28:58.966   61.268s run_tests_on_device(9A261FFAZ007S8)  Expected: true\nI 17:28:58.966   61.268s run_tests_on_device(9A261FFAZ007S8)  [  FAILED  ] dEQP-EGL.functional.partial_update.odd_render_render_even_render (787 ms)\n```",
      "parentUuid": "6043d3c3_aa567839",
      "revId": "b2d90c948373a3737c21c897ea675b375e78d6ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6953ac69_9e21940d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2023-08-31T18:22:40Z",
      "side": 1,
      "message": "Update: I don\u0027t have Pixel 4 or Windows with me to dig in on this.  Nothing repros for me on the devices I have.  Will revisit tomorrow.",
      "parentUuid": "164c213c_8178a391",
      "revId": "b2d90c948373a3737c21c897ea675b375e78d6ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d3a64f9d_c0ee8547",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2023-09-06T15:46:48Z",
      "side": 1,
      "message": "I was able to repro the Pixel 4 failure.  The failing cases had:\n```\nrun_tests_on_device(92JBA03039)  INFO: mMinImageCount \u003d 3, minImageCount \u003d 2\nrun_tests_on_device(92JBA03039)  INFO: mMinImageCount \u003d 3, minImageCount \u003d 2\nrun_tests_on_device(92JBA03039)  INFO: mMinImageCount \u003d 3, minImageCount \u003d 2\n```\nShabi pointed out that calling `GetMinImageCount` can give a different result than `mSurfaceCaps.minImageCount`, so I can\u0027t compare directly.  Have to call it early and compare against the returned value.",
      "parentUuid": "6953ac69_9e21940d",
      "revId": "b2d90c948373a3737c21c897ea675b375e78d6ee",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}