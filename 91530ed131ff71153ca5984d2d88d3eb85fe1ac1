{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a6f6c261_599f30bb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 13,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-04-25T05:18:47Z",
      "side": 1,
      "message": "The reason for the asserts is `kDirtyObjectHandlers`. If the ordering doesn\u0027t match the handlers in that array, things would blow up.\n\nYou could move the asserts to just above the definition of `kDirtyObjectHandlers` and add a comment instead?",
      "revId": "91530ed131ff71153ca5984d2d88d3eb85fe1ac1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "40c3ffde_e1e0d3cd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 13,
      "author": {
        "id": 1531247
      },
      "writtenOn": "2024-04-25T13:06:31Z",
      "side": 1,
      "message": "I don\u0027t think we do this in other places though. Instead, I think we assign handlers like `a[e_value] \u003d e_handler`. Should we do it like this here too?",
      "parentUuid": "a6f6c261_599f30bb",
      "revId": "91530ed131ff71153ca5984d2d88d3eb85fe1ac1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d9ecbfd_d53f53ad",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 13,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-04-25T13:32:59Z",
      "side": 1,
      "message": "It\u0027s `constexpr` limitations. Or rather older C++ limitations. If you change the initializer to designated initializers, like this it would work (and no need for assert):\n\n```\n    static constexpr DirtyObjectHandler kDirtyObjectHandlers[state::DIRTY_OBJECT_MAX] \u003d {\n        [state::DIRTY_OBJECT_ACTIVE_TEXTURES] \u003d \u0026State::syncActiveTextures,\n        ...\n```",
      "parentUuid": "40c3ffde_e1e0d3cd",
      "revId": "91530ed131ff71153ca5984d2d88d3eb85fe1ac1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "166c42f7_f44f95d4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 13,
      "author": {
        "id": 1531247
      },
      "writtenOn": "2024-04-25T13:41:51Z",
      "side": 1,
      "message": "That produces:\n```\nerror: array designators are a C99 extension [-Werror,-Wc99-designator]\n```",
      "parentUuid": "4d9ecbfd_d53f53ad",
      "revId": "91530ed131ff71153ca5984d2d88d3eb85fe1ac1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9c79aea4_42f1e6c6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 13,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-04-25T15:14:37Z",
      "side": 1,
      "message": "Yeah looks like C++(20?) didn\u0027t pick _that_ part of designated initializers. :|\n\nWell, now you know why we have this assert.",
      "parentUuid": "166c42f7_f44f95d4",
      "revId": "91530ed131ff71153ca5984d2d88d3eb85fe1ac1",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}