{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "976502d9_72875530",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-04-26T13:27:21Z",
      "side": 1,
      "message": "I took a look at the GBM surface change. There is some duplication of logic between the GBM surface and KHR_swapchain surface implementations, which we should remove.\n\nI think what you\u0027d really want is to abstract at the level of the init/acquire/present API, rather than the whole of WindowSurfaceVk. So you could have WindowSurfaceVk for example have a few virtual calls for just making the Vulkan API calls, with a default implementation of using functions from KHR_swapchain. Then have SurfaceVkGbm override only those functions and call `gbm_*` instead.\n\nThen SurfaceVkGbm will continue to inherit logic and fixes from WindowSurfaceVk.",
      "revId": "55c1e0cbe65304ce1952fbf5a6de7205006878b6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}