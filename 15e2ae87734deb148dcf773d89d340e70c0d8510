{
  "comments": [
    {
      "key": {
        "uuid": "2686b194_692a0b08",
        "filename": "src/libANGLE/angletypes.h",
        "patchSetId": 9
      },
      "lineNbr": 48,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2018-04-19T14:47:29Z",
      "side": 1,
      "message": "I\u0027m not too happy about having to store 64-bit integers here. I wonder if we can come up with a better alternative? I can think of at least:\n\n1) Store blit dimensions in a different data structure than Rectangle, and use Rectangle just for viewport/scissor. ClipRectangle logic has to be duplicated.\n2) Store all Rectangles as sets of x0, x1, y0, y1 and provide member functions for returning width/height as int64_t, casting it back to int32_t when needed.\n3) Store width/height as uint32_t. Then cast it back to signed whenever it is known to be less than max signed int32_t, and cast to int64_t when it may be more than max signed int32_t. This requires quite carefully written code.\n\nAll of these seem to have some drawback or another.",
      "revId": "15e2ae87734deb148dcf773d89d340e70c0d8510",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "572491cc_08af657d",
        "filename": "src/libANGLE/angletypes.h",
        "patchSetId": 9
      },
      "lineNbr": 48,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-04-23T19:57:35Z",
      "side": 1,
      "message": "Why don\u0027t you make a separate CL that makes the Rectangle type a template struct, and then define gl::RectangleI, gl::RectangleI64, and gl::RectangleF? Then use the various rects where appropriate?",
      "parentUuid": "2686b194_692a0b08",
      "revId": "15e2ae87734deb148dcf773d89d340e70c0d8510",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c15429ee_f590cc57",
        "filename": "src/libANGLE/angletypes.h",
        "patchSetId": 9
      },
      "lineNbr": 48,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2018-04-24T16:00:39Z",
      "side": 1,
      "message": "Well, I thought that the \"BlitRectangle\" route was better - my thinking was if we\u0027re going to have a separate type for storing the blit area anyway, it can also be optimized so that we don\u0027t need to do the calculations in 64-bit. I\u0027m not aware of anything else in the GL API which would require us to use a 64-bit rect type.\n\nUsing two offsets to store a rectangle like you suggested could also be a fairly reasonable option, though then we\u0027ll have the unused \"z\" and lose out on a bunch of convenience provided by BlitRectangle, like the isFlipped*() and removeFlip() functions. This would make already complex code even harder to read.",
      "parentUuid": "572491cc_08af657d",
      "revId": "15e2ae87734deb148dcf773d89d340e70c0d8510",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa83275a_ac9ecbad",
        "filename": "src/libANGLE/renderer/gl/renderergl_utils.cpp",
        "patchSetId": 9
      },
      "lineNbr": 1167,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-04-23T19:57:35Z",
      "side": 1,
      "message": "this can be just \"true\"",
      "range": {
        "startLine": 1167,
        "startChar": 8,
        "endLine": 1167,
        "endChar": 61
      },
      "revId": "15e2ae87734deb148dcf773d89d340e70c0d8510",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8096bd18_90b2735c",
        "filename": "src/libANGLE/renderer/gl/renderergl_utils.cpp",
        "patchSetId": 9
      },
      "lineNbr": 1167,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2018-04-24T16:00:39Z",
      "side": 1,
      "message": "The tests didn\u0027t show issues on the Android bot. On the other hand there are probably more Android vendors that were not tested that also have issues. Done.",
      "parentUuid": "aa83275a_ac9ecbad",
      "range": {
        "startLine": 1167,
        "startChar": 8,
        "endLine": 1167,
        "endChar": 61
      },
      "revId": "15e2ae87734deb148dcf773d89d340e70c0d8510",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}