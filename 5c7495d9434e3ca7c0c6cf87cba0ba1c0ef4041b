{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "7d44553e_0329c994",
        "filename": "src/libANGLE/angletypes.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1184,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-09-16T14:18:05Z",
      "side": 1,
      "message": "Could you please add unit tests for this, like in a file named `Decompress_unittest.cpp`",
      "revId": "5c7495d9434e3ca7c0c6cf87cba0ba1c0ef4041b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bca6a469_4d317a82",
        "filename": "src/libANGLE/angletypes.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1184,
      "author": {
        "id": 1564492
      },
      "writtenOn": "2024-09-16T19:14:24Z",
      "side": 1,
      "message": "Yes of course.",
      "parentUuid": "7d44553e_0329c994",
      "revId": "5c7495d9434e3ca7c0c6cf87cba0ba1c0ef4041b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1344071c_224bc57b",
        "filename": "src/libANGLE/renderer/vulkan/vk_renderer.cpp",
        "patchSetId": 3
      },
      "lineNbr": 5367,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-09-16T14:18:05Z",
      "side": 1,
      "message": "Slightly worried if a blob inside the VkPipelineCache data is partial and a driver blows up when it sees it.\n\nCan we put this to the test? You could add a test in `EGLBlobCacheTest.cpp` that does something like this:\n\n* Create many programs (with different shaders) with the `GL_PROGRAM_BINARY_RETRIEVABLE_HINT` hint, maybe also draw with them?\n* Do that until there are at least 2 chunks in the pipeline cache data. With the binary-retrievable hint + some other configs (like no warm up, no graphics pipeline library), you can probably avoid getting anything in the blob cache except the VkPipelineCache data. If necessary, we can also parse the header to be sure.\n* Recreate the display and make it retrieve the pipeline cache data. Pretend that only chunk 0 is available. Issue draw calls with the same programs as the first run (they would all hit or miss the cache, but shouldn\u0027t blow up if matching the blob that was cut off between chunks)",
      "revId": "5c7495d9434e3ca7c0c6cf87cba0ba1c0ef4041b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dbae459f_ca838a0d",
        "filename": "src/libANGLE/renderer/vulkan/vk_renderer.cpp",
        "patchSetId": 3
      },
      "lineNbr": 5367,
      "author": {
        "id": 1564492
      },
      "writtenOn": "2024-09-16T19:14:24Z",
      "side": 1,
      "message": "\u003e Slightly worried if a blob inside the VkPipelineCache data is partial and a driver blows up when it sees it.\n\nThis may happen, but this will be a driver bug. From the Vulkan spec it should work fine:\n\u003e**10.7.4. Pipeline Cache Header**\nStructures described in this section are not part of the Vulkan API and are only\nused to describe the representation of data elements in pipeline cache data.\nAccordingly, the valid usage clauses defined for structures defined in this\nsection do not define valid usage conditions for APIs accepting pipeline cache\ndata as input, as **providing invalid pipeline cache data as input** to any Vulkan API commands will result in the provided pipeline **cache data being ignored**.\n\n\n\u003e Can we put this to the test? You could add a test in EGLBlobCacheTest.cpp that does something like this:\n\nI will try.\n\n\u003e maybe also draw with them?\n\nYes. Without warmup we will not have pipelines.",
      "parentUuid": "1344071c_224bc57b",
      "revId": "5c7495d9434e3ca7c0c6cf87cba0ba1c0ef4041b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cfb5bdb4_f580d2e5",
        "filename": "src/libANGLE/renderer/vulkan/vk_renderer.cpp",
        "patchSetId": 3
      },
      "lineNbr": 5367,
      "author": {
        "id": 1564492
      },
      "writtenOn": "2024-09-18T12:40:34Z",
      "side": 1,
      "message": "\u003e This may happen, but this will be a driver bug.\n\nThis happened)\n\nAdreno on **S921U** simply crashes (signal 11)\n\nMali on **G996B** returns `VK_ERROR_OUT_OF_HOST_MEMORY` error.\nSame error on **Pixel 6**: https://logs.chromium.org/logs/angle/buildbucket/cr-buildbucket/8736525436327783649/+/u/angle_end2end_tests_on_Android_device_Pixel_6/stdout?format\u003draw\n\nWindows and Linux time-outs. I do not have real Linux machine. In progress to check why Windows also times-out.\n\nSo for now only Samsung GPU checks if data is valid or not. But even in this case invalid data is discarded.\n\nI\u0027m not feeling good right now, so will continue this work later (hopefully tomorrow).",
      "parentUuid": "dbae459f_ca838a0d",
      "revId": "5c7495d9434e3ca7c0c6cf87cba0ba1c0ef4041b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad3b8266_ac82dd9a",
        "filename": "src/libANGLE/renderer/vulkan/vk_renderer.cpp",
        "patchSetId": 3
      },
      "lineNbr": 5367,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-09-18T15:12:38Z",
      "side": 1,
      "message": "Take care!\n\nWe\u0027ll have to notify vendors to adjust their drivers for this usage.",
      "parentUuid": "cfb5bdb4_f580d2e5",
      "revId": "5c7495d9434e3ca7c0c6cf87cba0ba1c0ef4041b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}