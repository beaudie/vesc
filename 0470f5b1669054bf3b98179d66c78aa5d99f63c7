{
  "comments": [
    {
      "key": {
        "uuid": "02e4ed24_828b63d9",
        "filename": "src/libANGLE/renderer/d3d/d3d11/RenderTarget11.cpp",
        "patchSetId": 2
      },
      "lineNbr": 225,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-02-24T15:33:05Z",
      "side": 1,
      "message": "this should go in the initializer list",
      "range": {
        "startLine": 225,
        "startChar": 4,
        "endLine": 225,
        "endChar": 16
      },
      "revId": "0470f5b1669054bf3b98179d66c78aa5d99f63c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "02c30d5c_9aef8d12",
        "filename": "src/libANGLE/renderer/d3d/d3d11/RenderTarget11.cpp",
        "patchSetId": 2
      },
      "lineNbr": 226,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2016-02-24T15:51:19Z",
      "side": 1,
      "message": "There\u0027s a bug here I just found with dEQP-GLES3.functional.fbo.* : zero sized framebuffer hits this.",
      "revId": "0470f5b1669054bf3b98179d66c78aa5d99f63c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "82bb7df1_b1791d58",
        "filename": "src/libANGLE/renderer/d3d/d3d11/RenderTarget11.cpp",
        "patchSetId": 2
      },
      "lineNbr": 273,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-02-24T15:33:05Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 273,
        "startChar": 4,
        "endLine": 273,
        "endChar": 16
      },
      "revId": "0470f5b1669054bf3b98179d66c78aa5d99f63c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "02e4ed24_e25c6727",
        "filename": "src/libANGLE/renderer/d3d/d3d11/RenderTarget11.cpp",
        "patchSetId": 2
      },
      "lineNbr": 355,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-02-24T15:33:05Z",
      "side": 1,
      "message": "same comment for this reverse-lookup as in the other case. The SwapChain format should allow us to directly look up the correct ANGLEFormat.",
      "range": {
        "startLine": 347,
        "startChar": 4,
        "endLine": 355,
        "endChar": 5
      },
      "revId": "0470f5b1669054bf3b98179d66c78aa5d99f63c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a220812e_3c1abd4e",
        "filename": "src/libANGLE/renderer/d3d/d3d11/RenderTarget11.cpp",
        "patchSetId": 2
      },
      "lineNbr": 355,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2016-02-25T09:47:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "02e4ed24_e25c6727",
      "range": {
        "startLine": 347,
        "startChar": 4,
        "endLine": 355,
        "endChar": 5
      },
      "revId": "0470f5b1669054bf3b98179d66c78aa5d99f63c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "02e4ed24_a23c1fc8",
        "filename": "src/libANGLE/renderer/d3d/d3d11/RenderTarget11.cpp",
        "patchSetId": 2
      },
      "lineNbr": 421,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2016-02-24T16:05:54Z",
      "side": 1,
      "message": "Why did you make these functions proxies? Do you plan on adding more logic to them in follow up patches?",
      "revId": "0470f5b1669054bf3b98179d66c78aa5d99f63c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a29b218c_a4c1d6a3",
        "filename": "src/libANGLE/renderer/d3d/d3d11/RenderTarget11.h",
        "patchSetId": 2
      },
      "lineNbr": 116,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2016-02-24T16:05:54Z",
      "side": 1,
      "message": "I\u0027m not sure I understand this, is it to fix a warning?",
      "revId": "0470f5b1669054bf3b98179d66c78aa5d99f63c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a2b881d5_bfc51f08",
        "filename": "src/libANGLE/renderer/d3d/d3d11/RenderTarget11.h",
        "patchSetId": 2
      },
      "lineNbr": 116,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2016-02-24T16:15:19Z",
      "side": 1,
      "message": "In this case it would not technically result in incorrect behavior (no warnings either), but the Google C++ Style Guide says no virtual function calls in constructor. Further changes to this patch will likely remove the need for this hack though.",
      "parentUuid": "a29b218c_a4c1d6a3",
      "revId": "0470f5b1669054bf3b98179d66c78aa5d99f63c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a29b218c_64cbcec0",
        "filename": "src/libANGLE/renderer/d3d/d3d11/Renderer11.cpp",
        "patchSetId": 2
      },
      "lineNbr": 3179,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2016-02-24T16:05:54Z",
      "side": 1,
      "message": "Can you change the NULL here? Also it looks like clang-format didn\u0027t format this call.",
      "revId": "0470f5b1669054bf3b98179d66c78aa5d99f63c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "42c98578_7f89c3e1",
        "filename": "src/libANGLE/renderer/d3d/d3d11/Renderer11.cpp",
        "patchSetId": 2
      },
      "lineNbr": 3179,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2016-02-25T09:47:08Z",
      "side": 1,
      "message": "clang-format did format this. IntelliSense complains when using nullptr here, but it doesn\u0027t seem to affect actual compile, so changed to nullptr.",
      "parentUuid": "a29b218c_64cbcec0",
      "revId": "0470f5b1669054bf3b98179d66c78aa5d99f63c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "02e4ed24_e70d9217",
        "filename": "src/libANGLE/renderer/d3d/d3d11/Renderer11.cpp",
        "patchSetId": 2
      },
      "lineNbr": 3179,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2016-02-25T15:37:30Z",
      "side": 1,
      "message": "Ah, I seem it makes sense, thanks!",
      "parentUuid": "42c98578_7f89c3e1",
      "revId": "0470f5b1669054bf3b98179d66c78aa5d99f63c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c2c1f56d_b4a7c7d1",
        "filename": "src/libANGLE/renderer/d3d/d3d11/TextureStorage11.cpp",
        "patchSetId": 2
      },
      "lineNbr": 796,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-02-24T15:33:05Z",
      "side": 1,
      "message": "I think we can do better than using reverse-lookup.\n\nmInternalFormat above gives the GL format associated with the swap chain. In d3d11::TextureFormat, we can look up the DXGI format info. Since this is pretty much 1:1 we should be able to use this, adding a new field to track with ANGLEFormat in TextureFormat if necessary.",
      "range": {
        "startLine": 791,
        "startChar": 4,
        "endLine": 796,
        "endChar": 82
      },
      "revId": "0470f5b1669054bf3b98179d66c78aa5d99f63c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c283b51b_508a4409",
        "filename": "src/libANGLE/renderer/d3d/d3d11/TextureStorage11.cpp",
        "patchSetId": 2
      },
      "lineNbr": 796,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2016-02-25T09:47:08Z",
      "side": 1,
      "message": "True, using the swap chain internal format to look up an angle format should work. I left the reverse lookup as a debug check.",
      "parentUuid": "c2c1f56d_b4a7c7d1",
      "range": {
        "startLine": 791,
        "startChar": 4,
        "endLine": 796,
        "endChar": 82
      },
      "revId": "0470f5b1669054bf3b98179d66c78aa5d99f63c7",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}