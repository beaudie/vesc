{
  "comments": [
    {
      "key": {
        "uuid": "5a6701a0_0f7849a3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 8,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2019-02-04T21:15:10Z",
      "side": 1,
      "message": "Try to keep the first line of the commit message under 72 characters so it formats nicely in git log.  The other lines should be under 80.",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 8,
        "endChar": 60
      },
      "revId": "a3c8fbb8beef23cfddbbb984d2906a56ccc76a46",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a23e9f8d_a0c91a89",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 8,
      "author": {
        "id": 1326275
      },
      "writtenOn": "2019-02-05T20:03:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5a6701a0_0f7849a3",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 8,
        "endChar": 60
      },
      "revId": "a3c8fbb8beef23cfddbbb984d2906a56ccc76a46",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6edf4fd_f6ecca50",
        "filename": "src/compiler/translator/Common.h",
        "patchSetId": 12
      },
      "lineNbr": 135,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2019-02-01T22:04:45Z",
      "side": 1,
      "message": "is it possible to make this into a custom type? like TStringStream?",
      "range": {
        "startLine": 128,
        "startChar": 0,
        "endLine": 135,
        "endChar": 1
      },
      "revId": "a3c8fbb8beef23cfddbbb984d2906a56ccc76a46",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d4f45d54_7b76d2a2",
        "filename": "src/compiler/translator/Common.h",
        "patchSetId": 12
      },
      "lineNbr": 135,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2019-02-04T21:15:10Z",
      "side": 1,
      "message": "We could potentially add a class that wraps a stream and forwards some of its operators. I don\u0027t have a strong preference about doing that vs an initialize function.",
      "parentUuid": "d6edf4fd_f6ecca50",
      "range": {
        "startLine": 128,
        "startChar": 0,
        "endLine": 135,
        "endChar": 1
      },
      "revId": "a3c8fbb8beef23cfddbbb984d2906a56ccc76a46",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "268da9e2_eae44dbf",
        "filename": "src/compiler/translator/Common.h",
        "patchSetId": 12
      },
      "lineNbr": 135,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2019-02-04T21:40:27Z",
      "side": 1,
      "message": "Slight preference for a unified way just so new code isn\u0027t as able to make the subtle mistake. But either way works.",
      "parentUuid": "d4f45d54_7b76d2a2",
      "range": {
        "startLine": 128,
        "startChar": 0,
        "endLine": 135,
        "endChar": 1
      },
      "revId": "a3c8fbb8beef23cfddbbb984d2906a56ccc76a46",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "200fc77d_48ecba1f",
        "filename": "src/compiler/translator/Common.h",
        "patchSetId": 12
      },
      "lineNbr": 135,
      "author": {
        "id": 1326275
      },
      "writtenOn": "2019-02-05T20:03:00Z",
      "side": 1,
      "message": "I\u0027ll land this as is and follow up with a wrapper type",
      "parentUuid": "268da9e2_eae44dbf",
      "range": {
        "startLine": 128,
        "startChar": 0,
        "endLine": 135,
        "endChar": 1
      },
      "revId": "a3c8fbb8beef23cfddbbb984d2906a56ccc76a46",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}