{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "17bef7d5_70b96b13",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2023-07-11T00:16:30Z",
      "side": 1,
      "message": "This should be angleproject:8209.",
      "revId": "8cda41ca4266fbd31cbfa381e090c9ae578ba509",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5cb7112c_ae4ed0ee",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1546942
      },
      "writtenOn": "2023-06-15T08:35:11Z",
      "side": 1,
      "message": "This change combines the infrastructure implemented for EGL_ANGLE_iosurface_client_buffer and EGL_ANGLE_metal_texture_client_buffer to support passing IOSurface objects to eglCreateImageKHR on the Metal renderer.",
      "revId": "8cda41ca4266fbd31cbfa381e090c9ae578ba509",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2da56fcf_2a8138c1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2023-06-15T18:05:31Z",
      "side": 1,
      "message": "+geofflang, could you help review too?",
      "revId": "8cda41ca4266fbd31cbfa381e090c9ae578ba509",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "52a7a1df_ac18f0aa",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2023-06-15T18:52:30Z",
      "side": 1,
      "message": "This looks good to me. I\u0027d like to see the spec updated though. You can pull language from EGL_ANGLE_metal_texture_client_buffer.txt and EGL_ANGLE_d3d_texture_client_buffer.txt.",
      "revId": "8cda41ca4266fbd31cbfa381e090c9ae578ba509",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6756c8fa_f204ec86",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1546942
      },
      "writtenOn": "2023-06-16T01:25:02Z",
      "side": 1,
      "message": "I know I need to update the extension spec, but I was unsure which extension to update? I hope I don\u0027t need to create a new extension.\n\nEGL_ANGLE_iosurface_client_buffer feels like the right extension to update, but it\u0027s written against the EGL 1.4 spec and I can find no language for eglCreateImage in the 1.4 spec.\n\nI could add it to the EGL_ANGLE_metal_texture_client_buffer spec, since it\u0027s using most of the machinery implemented in that spec?\n\nWhat do you think?",
      "parentUuid": "52a7a1df_ac18f0aa",
      "revId": "8cda41ca4266fbd31cbfa381e090c9ae578ba509",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "33047e7a_192ce030",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2023-06-16T14:16:26Z",
      "side": 1,
      "message": "Ideally it\u0027s a new extension spec but we have a prescedent of adding EGL image support to the \"client_buffer\" extensions.\n\nYou can pull from `EGL_ANGLE_d3d_texture_client_buffer` as an example. It has the line:\n```References the EGL_ANGLE_device_d3d and EGL_KHR_image_base extensions.```",
      "parentUuid": "6756c8fa_f204ec86",
      "revId": "8cda41ca4266fbd31cbfa381e090c9ae578ba509",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "67c90416_86ce0327",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1543187
      },
      "writtenOn": "2023-06-16T16:14:44Z",
      "side": 1,
      "message": "Just curious, is there any problem with creating MTLTexture from IOSurface and just use EGL_ANGLE_metal_texture_client_buffer to import the MTLTexture?",
      "revId": "8cda41ca4266fbd31cbfa381e090c9ae578ba509",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b0e813f1_91197121",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1546942
      },
      "writtenOn": "2023-07-10T03:47:45Z",
      "side": 1,
      "message": "No reason. I\u0027m happy to close this change if you\u0027d rather not take it.",
      "parentUuid": "67c90416_86ce0327",
      "revId": "8cda41ca4266fbd31cbfa381e090c9ae578ba509",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1365efcc_cf49e4b2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2023-07-11T00:16:30Z",
      "side": 1,
      "message": "We\u0027d like to upstream this change if WebKit needs to use this new importing path.\n\nIf so - could you update `extensions/EGL_ANGLE_iosurface_client_buffer.txt` and describe that `eglCreateImageKHR` supports wrapping IOSurfaces as well, like Geoff points out in `EGL_ANGLE_d3d_texture_client_buffer`?",
      "parentUuid": "b0e813f1_91197121",
      "revId": "8cda41ca4266fbd31cbfa381e090c9ae578ba509",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a5dac6d5_7b1a59be",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1543187
      },
      "writtenOn": "2023-07-11T06:48:38Z",
      "side": 1,
      "message": "\u003e No reason. I\u0027m happy to close this change if you\u0027d rather not take it.\n\nNo, it\u0027s OK. I was just wondering maybe you didn\u0027t notice the `EGL_ANGLE_metal_texture_client_buffer` extension exists and we could use it to import IOSurface to an EGLImage with some some extra steps.\n\nBut if you want to implement a convenient way to import IOSurface directly to an EGLImage, please do so.",
      "parentUuid": "1365efcc_cf49e4b2",
      "revId": "8cda41ca4266fbd31cbfa381e090c9ae578ba509",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5a4381ee_9e203ee1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2024-03-05T22:01:33Z",
      "side": 1,
      "message": "Going back through old code reviews - would you like to move this CL forward?",
      "revId": "8cda41ca4266fbd31cbfa381e090c9ae578ba509",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1112c494_62037044",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2024-06-10T22:57:54Z",
      "side": 1,
      "message": "Pinging again - would you like to move this CL forward?",
      "revId": "8cda41ca4266fbd31cbfa381e090c9ae578ba509",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6ba17270_1624b56a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1546942
      },
      "writtenOn": "2024-06-27T04:29:55Z",
      "side": 1,
      "message": "Sorry, I missed your earlier ping. This was a convenience and not a requirement on our end, so I\u0027m happy to not move forward and close this out. (Unless Quyen or you feel differently)",
      "parentUuid": "1112c494_62037044",
      "revId": "8cda41ca4266fbd31cbfa381e090c9ae578ba509",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a67ce9b1_ac006190",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2024-07-10T23:59:31Z",
      "side": 1,
      "message": "Since Quyen didn\u0027t object, let me abandon this in favor of using EGL_ANGLE_metal_texture_client_buffer. But feel free to resurrect this or propose a similar approach in a new CL if it turns out to be needed.",
      "parentUuid": "6ba17270_1624b56a",
      "revId": "8cda41ca4266fbd31cbfa381e090c9ae578ba509",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "8cda41ca4266fbd31cbfa381e090c9ae578ba509",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "8cda41ca4266fbd31cbfa381e090c9ae578ba509",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "8cda41ca4266fbd31cbfa381e090c9ae578ba509",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}