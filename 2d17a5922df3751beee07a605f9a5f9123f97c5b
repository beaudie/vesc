{
  "comments": [
    {
      "key": {
        "uuid": "1c1a6c3d_b2b58036",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-04-10T14:12:14Z",
      "side": 1,
      "message": "Minor request, but to fit with ANGLE style could can you please edit your commit message to use a single short phrase for the commit title like \"Vulkan: Fix dirty UINT_8 element array buffer updates.\"\n\nfollowed by a longer description wrapped to 71 characters?",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 12,
        "endChar": 0
      },
      "revId": "2d17a5922df3751beee07a605f9a5f9123f97c5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "206f3a7f_57bae94c",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 320,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-04-11T13:59:00Z",
      "side": 1,
      "message": "can you add an ASSERT here that mode !\u003d PrimitiveType::LineLoop ? We shouldn\u0027t be in this function if we\u0027re drawing with a Line Loop.\n\nThere is also a bug with DrawElements and LineLoops that was not caught. Would you be able to help fixing the bug? You would need to add a test (using LineLoopStateChangeTest) that:\n\n1. DrawElements with Triangles and a non-zero offset\n2. DrawElements with LineLoop\n3. DrawElements with Triangles and the same non-zero offset as 1.\n\nThe offset would be incorrect with the current code.",
      "range": {
        "startLine": 319,
        "startChar": 5,
        "endLine": 320,
        "endChar": 8
      },
      "revId": "2d17a5922df3751beee07a605f9a5f9123f97c5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5b6414f6_9d90ab3d",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 324,
      "author": {
        "id": 1340324
      },
      "writtenOn": "2019-04-10T09:57:30Z",
      "side": 1,
      "message": "Shall we just remove this variable and use mCurrentElementArrayBufferOffset instead?",
      "range": {
        "startLine": 324,
        "startChar": 23,
        "endLine": 324,
        "endChar": 45
      },
      "revId": "2d17a5922df3751beee07a605f9a5f9123f97c5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f0c7d1d2_9b7a6ad0",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 324,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-04-10T14:12:14Z",
      "side": 1,
      "message": "Thanks for figuring out the location of the bug. Could you please make a small reproduction test and add it to angle_end2end_tests in StateChangeTest.cpp? I recommend using SimpleStateChangeTest as a fixture.\n\nThe current element array buffer offset is related to the \"indices\" offset but it isn\u0027t the same thing. The current offset is used in index translation. There could be some corner cases if we try to compare them.\n\nInstead I would recommend we call contextVk-\u003esetIndexBufferDirty(); in case gl::VertexArray::DIRTY_BIT_ELEMENT_ARRAY_BUFFER_DATA in VertexArrayVk.cpp. This could be optimized in the future by keeping a separate dirty bit for the index translation. But for now it\u0027s the cleanest and simplest solution.",
      "parentUuid": "5b6414f6_9d90ab3d",
      "range": {
        "startLine": 324,
        "startChar": 23,
        "endLine": 324,
        "endChar": 45
      },
      "revId": "2d17a5922df3751beee07a605f9a5f9123f97c5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7aeaa60c_adb43259",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 324,
      "author": {
        "id": 1340324
      },
      "writtenOn": "2019-04-11T10:24:49Z",
      "side": 1,
      "message": "Thanks Jamie. I have added a test for this issue named DrawElementsThenDrawElements in angle_end2end_tests. If you have a good idea about the name, please tell me.\n\nI have tested with calling setIndexBufferDirty() in case DIRTY_BIT_ELEMENT_ARRAY_BUFFER_DATA instead. However, it doesn\u0027t work for this issue. Binding buffer sets DIRTY_BIT_ELEMENT_ARRAY_BUFFER dirty bit for VertexArray in the State::setGenericBufferBinding\u003cBufferBinding::ElementArray\u003e function, so it will reach the case DIRTY_BIT_ELEMENT_ARRAY_BUFFER in the VertexArrayVk::syncState() when it prepares for draw. In the case DIRTY_BIT_ELEMENT_ARRAY_BUFFER, the mCurrentElementArrayBufferOffset is set to 0, which makes the issue occurs.",
      "parentUuid": "f0c7d1d2_9b7a6ad0",
      "range": {
        "startLine": 324,
        "startChar": 23,
        "endLine": 324,
        "endChar": 45
      },
      "revId": "2d17a5922df3751beee07a605f9a5f9123f97c5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "45b54ca6_5754fbdc",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 324,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-04-11T12:43:56Z",
      "side": 1,
      "message": "Your new test is passing for me on Windows NVIDIA. Is it expected to fail?",
      "parentUuid": "7aeaa60c_adb43259",
      "range": {
        "startLine": 324,
        "startChar": 23,
        "endLine": 324,
        "endChar": 45
      },
      "revId": "2d17a5922df3751beee07a605f9a5f9123f97c5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "193e5b0d_4d97a03c",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 324,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-04-11T13:59:00Z",
      "side": 1,
      "message": "Ah, I got it. Thanks for the test. I think the fix as proposed will force a re-translation of UINT8 index data each draw call. The \u0027indices\u0027 offset will never match the translated index offset in the VertexArrayVk. So it will always mark the data as dirty.\n\nInstead I would recommend removing mCurrentElementArrayBufferOffset \u003d 0; in VertexArrayVk::syncState (DIRTY_BIT_ELEMENT_ARRAY_BUFFER). And trying that on the bots.\n\nTo solve the above line loop problem you could set mLastIndexBufferOffset to numeric_limits::max() in setupLineLoopDraw.",
      "parentUuid": "45b54ca6_5754fbdc",
      "range": {
        "startLine": 324,
        "startChar": 23,
        "endLine": 324,
        "endChar": 45
      },
      "revId": "2d17a5922df3751beee07a605f9a5f9123f97c5b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}