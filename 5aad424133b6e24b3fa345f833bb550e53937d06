{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4bbc93b9_fd974ffc",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-01-30T16:44:37Z",
      "side": 1,
      "message": "Thank you for detailing these. Please turn these into tests under `src/tests/egl_tests` so the fix can be verified by the bots, and we can be sure we won\u0027t regress these patterns.",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 37,
        "endChar": 21
      },
      "revId": "5aad424133b6e24b3fa345f833bb550e53937d06",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1297f379_4f19166d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 1564492
      },
      "writtenOn": "2023-01-30T17:30:38Z",
      "side": 1,
      "message": "I do not know how to write such test.\nProblem is that result is only can be seen by a human on the screen, and it will also depend on device.\nIf I write the tests like described in the comment, they will probably just pass even without this fix.",
      "parentUuid": "4bbc93b9_fd974ffc",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 37,
        "endChar": 21
      },
      "revId": "5aad424133b6e24b3fa345f833bb550e53937d06",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d644ccd_a4c33d35",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-01-30T19:07:02Z",
      "side": 1,
      "message": "Understood. We do have a few tests like this, they still help verify things visually when necessary.\n\nIn this particular case, VVL would probably complain about the lack of synchronization so the test _can_ fail.",
      "parentUuid": "1297f379_4f19166d",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 37,
        "endChar": 21
      },
      "revId": "5aad424133b6e24b3fa345f833bb550e53937d06",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "61cab957_a6b4b4a9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 1564492
      },
      "writtenOn": "2023-01-30T19:37:05Z",
      "side": 1,
      "message": "Ok. I will prepare the tests.",
      "parentUuid": "4d644ccd_a4c33d35",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 37,
        "endChar": 21
      },
      "revId": "5aad424133b6e24b3fa345f833bb550e53937d06",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e07e22b8_a3fba1dc",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 39,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-01-30T16:44:51Z",
      "side": 1,
      "message": "nit: Bug tag",
      "revId": "5aad424133b6e24b3fa345f833bb550e53937d06",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7eb8b85c_8ffe5e05",
        "filename": "src/libANGLE/renderer/vulkan/CommandProcessor.h",
        "patchSetId": 2
      },
      "lineNbr": 405,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-01-30T16:44:37Z",
      "side": 1,
      "message": "This looks like an unrelated refactor, please split into its own CL.\n\nUltimately (one day) we should be using an enum class instead of bool, and use angle::PackedEnumMap (which would also let us expand this if necessary)",
      "revId": "5aad424133b6e24b3fa345f833bb550e53937d06",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0b295c70_cd71b095",
        "filename": "src/libANGLE/renderer/vulkan/CommandProcessor.h",
        "patchSetId": 2
      },
      "lineNbr": 405,
      "author": {
        "id": 1564492
      },
      "writtenOn": "2023-01-30T17:30:38Z",
      "side": 1,
      "message": "Did not like it either. Will make additional CL.",
      "parentUuid": "7eb8b85c_8ffe5e05",
      "revId": "5aad424133b6e24b3fa345f833bb550e53937d06",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d2910af6_c736ee93",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 7443,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-01-30T16:44:37Z",
      "side": 1,
      "message": "What do you think about getting the semaphore out of the window _here_ and add it to `mWaitSemaphores`? Then you would avoid the multiple calls to `flushAcquireImageSemaphore` in SurfaceVk.cpp (and risk missing a case in the future)",
      "revId": "5aad424133b6e24b3fa345f833bb550e53937d06",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "120d4192_c2ad09f8",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 7443,
      "author": {
        "id": 1564492
      },
      "writtenOn": "2023-01-30T17:30:38Z",
      "side": 1,
      "message": "I do not see problems. I think I just did not think about this. Thank you)\n\nThe only theoretical problem may be if there are repeated eglSwapBuffers() and no commands is recorded. But it should not be possible. Additionally there will be signalSemaphore that will force flushOutsideRenderPassCommands().",
      "parentUuid": "d2910af6_c736ee93",
      "revId": "5aad424133b6e24b3fa345f833bb550e53937d06",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}