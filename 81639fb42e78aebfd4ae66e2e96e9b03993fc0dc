{
  "comments": [
    {
      "key": {
        "uuid": "14b65f9b_381d6a36",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 19,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-10-05T18:09:36Z",
      "side": 1,
      "message": "nit: is deleted",
      "range": {
        "startLine": 19,
        "startChar": 6,
        "endLine": 19,
        "endChar": 15
      },
      "revId": "81639fb42e78aebfd4ae66e2e96e9b03993fc0dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5b2901b6_6c89c9d6",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 8
      },
      "lineNbr": 4584,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-10-05T18:45:05Z",
      "side": 1,
      "message": "Remove, since if-0\u0027ed code will rot.   If there\u0027s a bug tracking adding tracking all attachments in the render pass, then this can be added as a comment there.",
      "range": {
        "startLine": 4575,
        "startChar": 0,
        "endLine": 4584,
        "endChar": 6
      },
      "revId": "81639fb42e78aebfd4ae66e2e96e9b03993fc0dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a20fcc73_21efbd54",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 8
      },
      "lineNbr": 4652,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-10-05T18:45:05Z",
      "side": 1,
      "message": "Can this be called by startNewRenderPass()?   Seems a little odd to start the RP and then immediately update it.",
      "revId": "81639fb42e78aebfd4ae66e2e96e9b03993fc0dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ee61cbb2_ab5ceddb",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 8
      },
      "lineNbr": 1820,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-10-05T18:45:05Z",
      "side": 1,
      "message": "Why are we defaulting to ResourceAccess::Write here?",
      "range": {
        "startLine": 1818,
        "startChar": 0,
        "endLine": 1820,
        "endChar": 39
      },
      "revId": "81639fb42e78aebfd4ae66e2e96e9b03993fc0dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fe28477b_c846f262",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 8
      },
      "lineNbr": 2495,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-10-05T18:45:05Z",
      "side": 1,
      "message": "Call updateRenderPassReadOnlyDepthMode() here too?",
      "revId": "81639fb42e78aebfd4ae66e2e96e9b03993fc0dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8469d19b_1eb0d6dc",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 8
      },
      "lineNbr": 801,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-10-05T18:45:05Z",
      "side": 1,
      "message": "Why doesn\u0027t UpdateAccess() these need to update mReadOnlyDepthStencilMode when we move from ReadOnly -\u003e Write?",
      "revId": "81639fb42e78aebfd4ae66e2e96e9b03993fc0dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3005570c_669daad7",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 8
      },
      "lineNbr": 901,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-10-05T18:09:36Z",
      "side": 1,
      "message": "Did we determine that this state is not part of the \"renderPass compatiblity\" definition? Can you file a bug to take it out of mRenderPassDesc and into AttachmentOps?",
      "range": {
        "startLine": 901,
        "startChar": 8,
        "endLine": 901,
        "endChar": 23
      },
      "revId": "81639fb42e78aebfd4ae66e2e96e9b03993fc0dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b53e9451_6ebdfb28",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 8
      },
      "lineNbr": 901,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-10-05T18:49:31Z",
      "side": 1,
      "message": "Right, that is what I understand from reading the spec. And with this CL, I am already updating the attachmentOps with proper layout (see line 912 bellow). So we could simply just remove the access information from RenderPassDesc. Filed https://issuetracker.google.com/170134600 to track.",
      "parentUuid": "3005570c_669daad7",
      "range": {
        "startLine": 901,
        "startChar": 8,
        "endLine": 901,
        "endChar": 23
      },
      "revId": "81639fb42e78aebfd4ae66e2e96e9b03993fc0dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "daadeb54_0949728f",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 8
      },
      "lineNbr": 930,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-10-03T01:50:18Z",
      "side": 1,
      "message": "Shouldn\u0027t use the same layout. See `ImageLayout::DepthStencilAttachment` vs `ImageLayout::DepthStencilResolveAttachment`.\n\nActually D/S resolve image should always have `ImageLayout::DepthStencilResolveAttachment`, so probably no need for this tracking and its layout change doesn\u0027t need to be deferred.",
      "range": {
        "startLine": 930,
        "startChar": 75,
        "endLine": 930,
        "endChar": 86
      },
      "revId": "81639fb42e78aebfd4ae66e2e96e9b03993fc0dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3562d194_4977c9e0",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 8
      },
      "lineNbr": 930,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-10-03T03:21:25Z",
      "side": 1,
      "message": "Does mContentDefined stuff apply to resolve attachment as well? If yes, it will still useful to  keep the pointer in the render pass so that it can set the mContentDefine properly in future CL, as well as making code consistent.",
      "parentUuid": "daadeb54_0949728f",
      "range": {
        "startLine": 930,
        "startChar": 75,
        "endLine": 930,
        "endChar": 86
      },
      "revId": "81639fb42e78aebfd4ae66e2e96e9b03993fc0dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d00cda9_1ff2f53b",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 8
      },
      "lineNbr": 930,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-10-04T01:15:16Z",
      "side": 1,
      "message": "Yes, it does apply. SGTM to set the layout here (as long as it\u0027s the correct layout)",
      "parentUuid": "3562d194_4977c9e0",
      "range": {
        "startLine": 930,
        "startChar": 75,
        "endLine": 930,
        "endChar": 86
      },
      "revId": "81639fb42e78aebfd4ae66e2e96e9b03993fc0dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "87b78cdd_c73525cb",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 8
      },
      "lineNbr": 944,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-10-03T01:50:18Z",
      "side": 1,
      "message": "This assumes resolve image and image are tied together. While that is true for depth/stencil images currently, a blit optimization like Tim did for color attachments could break this assumption. I\u0027d just reset these independently to be future proof.",
      "range": {
        "startLine": 944,
        "startChar": 8,
        "endLine": 944,
        "endChar": 79
      },
      "revId": "81639fb42e78aebfd4ae66e2e96e9b03993fc0dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "70e91854_3989431f",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 8
      },
      "lineNbr": 953,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-10-05T18:09:36Z",
      "side": 1,
      "message": "nit: can you make this start with a verb or condition (e.g. \u0027on\u0027)?",
      "range": {
        "startLine": 953,
        "startChar": 9,
        "endLine": 953,
        "endChar": 31
      },
      "revId": "81639fb42e78aebfd4ae66e2e96e9b03993fc0dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ddb4bf54_d4a1baac",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 8
      },
      "lineNbr": 1163,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-10-05T18:45:05Z",
      "side": 1,
      "message": "How do all of these interact now?   Can we check mDepthAccess and mStencilAccess are both ResourceAccess::ReadOnly, rather than adding a new boolean?",
      "range": {
        "startLine": 1154,
        "startChar": 0,
        "endLine": 1163,
        "endChar": 34
      },
      "revId": "81639fb42e78aebfd4ae66e2e96e9b03993fc0dc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}