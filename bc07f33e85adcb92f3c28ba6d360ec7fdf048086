{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "17873332_1b271a9c",
        "filename": "include/platform/vk_features.json",
        "patchSetId": 4
      },
      "lineNbr": 1799,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-09-06T14:28:47Z",
      "side": 1,
      "message": "Please add an `\"issue\"` field to these for posterity.",
      "range": {
        "startLine": 1791,
        "startChar": 0,
        "endLine": 1799,
        "endChar": 13
      },
      "revId": "bc07f33e85adcb92f3c28ba6d360ec7fdf048086",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cdfcb885_69953492",
        "filename": "include/platform/vk_features.json",
        "patchSetId": 4
      },
      "lineNbr": 1799,
      "author": {
        "id": 1564492
      },
      "writtenOn": "2024-09-09T13:26:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "17873332_1b271a9c",
      "range": {
        "startLine": 1791,
        "startChar": 0,
        "endLine": 1799,
        "endChar": 13
      },
      "revId": "bc07f33e85adcb92f3c28ba6d360ec7fdf048086",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ed508129_27e2e4d2",
        "filename": "src/libANGLE/renderer/vulkan/vk_renderer.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1134,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-09-06T14:28:47Z",
      "side": 1,
      "message": "What is a \"necessary item\"?",
      "revId": "bc07f33e85adcb92f3c28ba6d360ec7fdf048086",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a8e7909_e3f11bd2",
        "filename": "src/libANGLE/renderer/vulkan/vk_renderer.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1134,
      "author": {
        "id": 1564492
      },
      "writtenOn": "2024-09-06T16:39:09Z",
      "side": 1,
      "message": "It is hard for me to explain using other word than \"necessary\".\n\nMaybe: minimum number of items.\n\nExample:\n\n```\nblob cache capacity:            1000\ncache items in the store order: 100 200 300 250\nspace left:                     150\n\nneed store item with size 300\n\nminimal space to free is: 300 - 150 \u003d 150\n\nnecessary items to evict: 100 and 200 (old items)\n```\nIn the above case cache evicts only items that was really necessary to store the new item.\n\nCache may also evict random items, but it will stop once required space to store new items is freed.",
      "parentUuid": "ed508129_27e2e4d2",
      "revId": "bc07f33e85adcb92f3c28ba6d360ec7fdf048086",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4527b4e6_d63371bc",
        "filename": "src/libANGLE/renderer/vulkan/vk_renderer.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1134,
      "author": {
        "id": 1564492
      },
      "writtenOn": "2024-09-09T13:26:36Z",
      "side": 1,
      "message": "I removed this wording in the current code.",
      "parentUuid": "8a8e7909_e3f11bd2",
      "revId": "bc07f33e85adcb92f3c28ba6d360ec7fdf048086",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2bb5b794_cf57b981",
        "filename": "src/libANGLE/renderer/vulkan/vk_renderer.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1152,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-09-06T14:28:47Z",
      "side": 1,
      "message": "Please put a cap on this, we don\u0027t want to loop infinitely for some reason.",
      "revId": "bc07f33e85adcb92f3c28ba6d360ec7fdf048086",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "368b217a_5ce16374",
        "filename": "src/libANGLE/renderer/vulkan/vk_renderer.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1152,
      "author": {
        "id": 1564492
      },
      "writtenOn": "2024-09-06T16:39:09Z",
      "side": 1,
      "message": "`numStoredChunks` always decreasing, it is impossible to have infinite loop. Worse case is top call the function for each chunk. I will add `ASSERT()` to make it clear and to catch possible errors.",
      "parentUuid": "2bb5b794_cf57b981",
      "revId": "bc07f33e85adcb92f3c28ba6d360ec7fdf048086",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4bf6a79b_6929c5d9",
        "filename": "src/libANGLE/renderer/vulkan/vk_renderer.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1152,
      "author": {
        "id": 1564492
      },
      "writtenOn": "2024-09-09T13:26:36Z",
      "side": 1,
      "message": "Added `ASSERT()`, so now it should be clear that loop will exit eventually.",
      "parentUuid": "368b217a_5ce16374",
      "revId": "bc07f33e85adcb92f3c28ba6d360ec7fdf048086",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "91644314_cda7fe66",
        "filename": "src/libANGLE/renderer/vulkan/vk_renderer.cpp",
        "patchSetId": 4
      },
      "lineNbr": 5416,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-09-06T14:28:47Z",
      "side": 1,
      "message": "I would prefer if by default (in upstream), we don\u0027t do the verify-restore. Like I said, I very much prefer we fix the blob cache ASAP.\n\nCould you please change the defaults or rename the features in a way that verify-restore is opt-in for now?",
      "range": {
        "startLine": 5411,
        "startChar": 0,
        "endLine": 5416,
        "endChar": 89
      },
      "revId": "bc07f33e85adcb92f3c28ba6d360ec7fdf048086",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f6896eed_3fa5adf6",
        "filename": "src/libANGLE/renderer/vulkan/vk_renderer.cpp",
        "patchSetId": 4
      },
      "lineNbr": 5416,
      "author": {
        "id": 1564492
      },
      "writtenOn": "2024-09-06T16:39:09Z",
      "side": 1,
      "message": "I tried to rename the feature, but then reverted back, because in the `StorePipelineCacheVkChunks()` I need to know if cache evicts old items first, regardless if we wish to verify or not.\n\nFor opt-in we need to add third feature...\nBut it will be also strange. We disable verification even when blob cache does not have LRU... Verification even more important than dual slots...\n\nCan you suggest a comment of why we enable features by default even when blob cache actually behaves differently? Or I can simply enable without any comments.",
      "parentUuid": "91644314_cda7fe66",
      "range": {
        "startLine": 5411,
        "startChar": 0,
        "endLine": 5416,
        "endChar": 89
      },
      "revId": "bc07f33e85adcb92f3c28ba6d360ec7fdf048086",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8996344f_d7e2b666",
        "filename": "src/libANGLE/renderer/vulkan/vk_renderer.cpp",
        "patchSetId": 4
      },
      "lineNbr": 5416,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-09-06T19:51:11Z",
      "side": 1,
      "message": "Maybe instead we can make these features be about what ANGLE does rather than what the platform offers. Like `verifyPipelineCacheInBlobCache` (default to false), that sort of thing?",
      "parentUuid": "f6896eed_3fa5adf6",
      "range": {
        "startLine": 5411,
        "startChar": 0,
        "endLine": 5416,
        "endChar": 89
      },
      "revId": "bc07f33e85adcb92f3c28ba6d360ec7fdf048086",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9d5c834a_df63d70a",
        "filename": "src/libANGLE/renderer/vulkan/vk_renderer.cpp",
        "patchSetId": 4
      },
      "lineNbr": 5416,
      "author": {
        "id": 1564492
      },
      "writtenOn": "2024-09-09T10:44:16Z",
      "side": 1,
      "message": "Yes, I used similar names as you suggested, however we need 2 features, because there are 2 kinds of verification: one that runs only once and other using loop.\n\nEverything was fine until the `StorePipelineCacheVkChunks()` method. This method breaks the loop if cache evicts old items first (LRU).\n\nFeature translation:\n```\ncacheEvicts(Old \u0026\u0026 OnlyNecessary)Items     -\u003e no need verifyPipelineCacheInBlobCache\nnot cacheEvicts(Old || OnlyNecessary)Items -\u003e need verifyPipelineCacheInBlobCache\n\nif need verifyPipelineCacheInBlobCache and\n    not cacheEvictsOldItems                -\u003e need verify...UsingLoop\n```\n\nSo I guess from the above we can deduce, that if `verifyPipelineCacheInBlobCacheUsingLoop` disabled, then `StorePipelineCacheVkChunks()` will assume, that cache evicts old items first.\n\nWe also can combine different naming approaches:\n- `verifyPipelineCacheInBlobCache` - will enable verification\n- `hasBlobCacheThatEvictsOldItemsFirst` - will specify how verification should be performed (if enabled).\n\nBut again, it would be strange in case of disabled `hasBlobCacheThatEvictsOldItemsFirst` to disable verification.\n\nTherefore these names will be better, IMO:\n- `verifyPipelineCacheInBlobCache`\n- `verifyPipelineCacheInBlobCacheUsingLoop` - main feature must be also enabled. If disabled, `StorePipelineCacheVkChunks()` will assume LRU eviction and break the verification loop.",
      "parentUuid": "8996344f_d7e2b666",
      "range": {
        "startLine": 5411,
        "startChar": 0,
        "endLine": 5416,
        "endChar": 89
      },
      "revId": "bc07f33e85adcb92f3c28ba6d360ec7fdf048086",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "20c2534e_1595d0d0",
        "filename": "src/libANGLE/renderer/vulkan/vk_renderer.cpp",
        "patchSetId": 4
      },
      "lineNbr": 5416,
      "author": {
        "id": 1564492
      },
      "writtenOn": "2024-09-09T13:26:36Z",
      "side": 1,
      "message": "Added `verifyPipelineCacheInBlobCache` and `verifyPipelineCacheInBlobCacheUsingLoop` which are both `false` by default.",
      "parentUuid": "9d5c834a_df63d70a",
      "range": {
        "startLine": 5411,
        "startChar": 0,
        "endLine": 5416,
        "endChar": 89
      },
      "revId": "bc07f33e85adcb92f3c28ba6d360ec7fdf048086",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "99946790_65f5e215",
        "filename": "src/libANGLE/renderer/vulkan/vk_renderer.cpp",
        "patchSetId": 4
      },
      "lineNbr": 5416,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-09-16T14:35:01Z",
      "side": 1,
      "message": "Sorry about the delays, I was at the F2F last week.\n\nThank you, `verifyPipelineCacheInBlobCache` looks good. For `verifyPipelineCacheInBlobCacheUsingLoop`, looking at the code and your explanation, using `hasBlobCacheThatEvictsOldItemsFirst` instead kind of makes more sense to me.\n\nSo `verifyPipelineCacheInBlobCache` would tell whether _we_ want verification or not, and `hasBlobCacheThatEvictsOldItemsFirst` would tell whether _the platform_ is LRU or not.",
      "parentUuid": "20c2534e_1595d0d0",
      "range": {
        "startLine": 5411,
        "startChar": 0,
        "endLine": 5416,
        "endChar": 89
      },
      "revId": "bc07f33e85adcb92f3c28ba6d360ec7fdf048086",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ce164411_a09292f1",
        "filename": "src/libANGLE/renderer/vulkan/vk_renderer.cpp",
        "patchSetId": 4
      },
      "lineNbr": 5416,
      "author": {
        "id": 1564492
      },
      "writtenOn": "2024-09-16T19:36:57Z",
      "side": 1,
      "message": "\u003e So `verifyPipelineCacheInBlobCache` would tell whether we want verification or not\n\nYes, but it will be strange to not want verification if platform is not LRU. Without LRU, cache will be almost 100% corrupted once it become full. Verification and restore is a must without LRU.\n\nI think we can define this by default:\n- `hasBlobCacheThatEvictsOldItemsFirst \u003d true` - assume LRU implementation\n- `verifyPipelineCacheInBlobCache \u003d !hasBlobCacheThatEvictsOldItemsFirst` - verify only if not LRU (also assume LRU that evicts minimum number of items)",
      "parentUuid": "99946790_65f5e215",
      "range": {
        "startLine": 5411,
        "startChar": 0,
        "endLine": 5416,
        "endChar": 89
      },
      "revId": "bc07f33e85adcb92f3c28ba6d360ec7fdf048086",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3046d9f9_e24f54a6",
        "filename": "src/libANGLE/renderer/vulkan/vk_renderer.cpp",
        "patchSetId": 4
      },
      "lineNbr": 5416,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-09-17T15:20:24Z",
      "side": 1,
      "message": "Sounds good",
      "parentUuid": "ce164411_a09292f1",
      "range": {
        "startLine": 5411,
        "startChar": 0,
        "endLine": 5416,
        "endChar": 89
      },
      "revId": "bc07f33e85adcb92f3c28ba6d360ec7fdf048086",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8aec5e88_0bed3bb2",
        "filename": "src/libANGLE/renderer/vulkan/vk_utils.h",
        "patchSetId": 4
      },
      "lineNbr": 388,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-09-06T14:28:47Z",
      "side": 1,
      "message": "Again, please avoid `GlobalOps` for these, the ANGLE features should answer this, and the value should be independent of GL or CL.",
      "revId": "bc07f33e85adcb92f3c28ba6d360ec7fdf048086",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8ab8a79e_c201b1d6",
        "filename": "src/libANGLE/renderer/vulkan/vk_utils.h",
        "patchSetId": 4
      },
      "lineNbr": 388,
      "author": {
        "id": 1564492
      },
      "writtenOn": "2024-09-09T13:26:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8aec5e88_0bed3bb2",
      "revId": "bc07f33e85adcb92f3c28ba6d360ec7fdf048086",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}