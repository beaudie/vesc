{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "77915b99_f3def7c0",
        "filename": "src/gpu_info_util/SystemInfo_vulkan.cpp",
        "patchSetId": 2
      },
      "lineNbr": 99,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2023-06-23T17:29:50Z",
      "side": 1,
      "message": "I saw other places is using `#if defined(ANGLE_PLATFORM_MACOS)` directly, why not do the same here?",
      "range": {
        "startLine": 99,
        "startChar": 12,
        "endLine": 99,
        "endChar": 17
      },
      "revId": "0c61f3b0bc1889047c7c43b1cc945fa011baa4a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0e8fd04c_3dea0833",
        "filename": "src/gpu_info_util/SystemInfo_vulkan.cpp",
        "patchSetId": 2
      },
      "lineNbr": 99,
      "author": {
        "id": 1169885
      },
      "writtenOn": "2023-06-23T17:31:43Z",
      "side": 1,
      "message": "I\u0027m not super fond of using ifdefs if they aren\u0027t necessary to successfully build, but I can switch it over if you prefer that.",
      "parentUuid": "77915b99_f3def7c0",
      "range": {
        "startLine": 99,
        "startChar": 12,
        "endLine": 99,
        "endChar": 17
      },
      "revId": "0c61f3b0bc1889047c7c43b1cc945fa011baa4a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ebde8f33_ca3edf26",
        "filename": "src/gpu_info_util/SystemInfo_vulkan.cpp",
        "patchSetId": 2
      },
      "lineNbr": 99,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2023-06-23T17:36:51Z",
      "side": 1,
      "message": "I have no hate/love of either one, just noticed the other precedent usage. I will leave it to Shabi here.",
      "parentUuid": "0e8fd04c_3dea0833",
      "range": {
        "startLine": 99,
        "startChar": 12,
        "endLine": 99,
        "endChar": 17
      },
      "revId": "0c61f3b0bc1889047c7c43b1cc945fa011baa4a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "11c00c2d_9f58bfbb",
        "filename": "src/gpu_info_util/SystemInfo_vulkan.cpp",
        "patchSetId": 2
      },
      "lineNbr": 99,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-06-24T19:32:47Z",
      "side": 1,
      "message": "Steven\u0027s done the right thing here, we avoid #ifdefs all over. That said, we already have an `IsMac()` that is differently defined by the way. Can we use that instead?",
      "parentUuid": "ebde8f33_ca3edf26",
      "range": {
        "startLine": 99,
        "startChar": 12,
        "endLine": 99,
        "endChar": 17
      },
      "revId": "0c61f3b0bc1889047c7c43b1cc945fa011baa4a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dd69f58b_6b964bc1",
        "filename": "src/gpu_info_util/SystemInfo_vulkan.cpp",
        "patchSetId": 2
      },
      "lineNbr": 99,
      "author": {
        "id": 1169885
      },
      "writtenOn": "2023-06-24T19:34:56Z",
      "side": 1,
      "message": "I was concerned about using rx::IsMac in here because it\u0027s in the backend namespace and I\u0027d have to modify the .gn files to make this source file depend on that header (which didn\u0027t seem correct). Maybe those Is* flags should be moved to some other more broadly usable header?",
      "parentUuid": "11c00c2d_9f58bfbb",
      "range": {
        "startLine": 99,
        "startChar": 12,
        "endLine": 99,
        "endChar": 17
      },
      "revId": "0c61f3b0bc1889047c7c43b1cc945fa011baa4a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8aec6387_98e55bfa",
        "filename": "src/gpu_info_util/SystemInfo_vulkan.cpp",
        "patchSetId": 2
      },
      "lineNbr": 99,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-06-26T16:22:03Z",
      "side": 1,
      "message": "Ack, we have a lot of helpers like that duplicated under `gpu_info_util`, it\u0027s fine to that for `IsMac()` too. Could you please add `IsMac()` under `SystemInfo.h` and define in `SystemInfo.cpp` similar to other `Is*` functions?\n\nAnd please take the implementation from the other `IsMac()` definition.",
      "parentUuid": "dd69f58b_6b964bc1",
      "range": {
        "startLine": 99,
        "startChar": 12,
        "endLine": 99,
        "endChar": 17
      },
      "revId": "0c61f3b0bc1889047c7c43b1cc945fa011baa4a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ee32b109_1e0738c9",
        "filename": "src/gpu_info_util/SystemInfo_vulkan.cpp",
        "patchSetId": 2
      },
      "lineNbr": 99,
      "author": {
        "id": 1169885
      },
      "writtenOn": "2023-06-26T16:53:31Z",
      "side": 1,
      "message": "Okay, thanks for the pointer. I think I might need to change it further anyway: MoltenVK is supported on iOS and macOS, though I have never tested it on the iOS side. It\u0027s possible someone else may want it though, so I\u0027m going to change the detection to IsApple() in the appropriate spots.",
      "parentUuid": "8aec6387_98e55bfa",
      "range": {
        "startLine": 99,
        "startChar": 12,
        "endLine": 99,
        "endChar": 17
      },
      "revId": "0c61f3b0bc1889047c7c43b1cc945fa011baa4a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "971b0871_398ca90a",
        "filename": "src/gpu_info_util/SystemInfo_vulkan.cpp",
        "patchSetId": 2
      },
      "lineNbr": 99,
      "author": {
        "id": 1169885
      },
      "writtenOn": "2023-06-26T20:35:30Z",
      "side": 1,
      "message": "Per discussion elsewhere, this will be fixed in a followup commit unifying all the platform detection helper functions.",
      "parentUuid": "ee32b109_1e0738c9",
      "range": {
        "startLine": 99,
        "startChar": 12,
        "endLine": 99,
        "endChar": 17
      },
      "revId": "0c61f3b0bc1889047c7c43b1cc945fa011baa4a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b5e2d9fb_9bed7d94",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1801,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-06-26T16:22:03Z",
      "side": 1,
      "message": "`{}` per our style.",
      "revId": "0c61f3b0bc1889047c7c43b1cc945fa011baa4a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4c9b095b_1ed6dfc5",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1801,
      "author": {
        "id": 1169885
      },
      "writtenOn": "2023-06-26T16:53:31Z",
      "side": 1,
      "message": "Will do.",
      "parentUuid": "b5e2d9fb_9bed7d94",
      "revId": "0c61f3b0bc1889047c7c43b1cc945fa011baa4a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3f952c6d_d0f3be8a",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1801,
      "author": {
        "id": 1169885
      },
      "writtenOn": "2023-06-26T20:35:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4c9b095b_1ed6dfc5",
      "revId": "0c61f3b0bc1889047c7c43b1cc945fa011baa4a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b64e98a2_bc8b832a",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1802,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-06-26T16:22:03Z",
      "side": 1,
      "message": "This needs the presence of `VK_KHR_PORTABILITY_ENUMERATION_EXTENSION_NAME` too.\n\nBest add a feature that gets initialized in `enableInstanceExtensions()` based on which the extension is added or not, and the flag is added or not.",
      "revId": "0c61f3b0bc1889047c7c43b1cc945fa011baa4a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc4b9545_73ba1c24",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1802,
      "author": {
        "id": 1169885
      },
      "writtenOn": "2023-06-26T16:53:31Z",
      "side": 1,
      "message": "We can\u0027t get to the renderer\u0027s enabled instance extensions (or feature flags) from SystemInfo_vulkan though, can we?",
      "parentUuid": "b64e98a2_bc8b832a",
      "revId": "0c61f3b0bc1889047c7c43b1cc945fa011baa4a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4d604736_3ddde79f",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1802,
      "author": {
        "id": 1169885
      },
      "writtenOn": "2023-06-26T20:35:30Z",
      "side": 1,
      "message": "Did this by duplicating the instance extension enumeration here.",
      "parentUuid": "bc4b9545_73ba1c24",
      "revId": "0c61f3b0bc1889047c7c43b1cc945fa011baa4a4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}