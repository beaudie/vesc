{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4013e642_9963aea8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2022-01-04T20:52:17Z",
      "side": 1,
      "message": "Tim, are you saying the app would use this call if we didn\u0027t disable the feature?  When we are landing these, it is worth noting  that.  These aren\u0027t 100% representative, but are a great benchmark for our own internal shader caching.",
      "range": {
        "startLine": 10,
        "startChar": 10,
        "endLine": 10,
        "endChar": 28
      },
      "revId": "75358ad8cbcb0ea87069616f1957912cbcbbd2de",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b99638a6_6d7b0a90",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2022-01-05T00:11:50Z",
      "side": 1,
      "message": "\u003e Tim, are you saying the app would use this call if we didn\u0027t disable the feature?\n\nIn order to get PUBG to precompile the programs on the first launch, we have to expose GL_OES_get_program_binary.   Otherwise, the app just compiles the programs sometime later (I\u0027m not sure when though).\n\nHowever, I also had to hack ANGLE to prevent from trying to capture these calls (I removed the ANGLE_CAPTURE() call from the entry point).   Otherwise, the UNIMPLEMENTED() calls would be emitted while the app was running, and the replay would crash since the glGetProgramBinary() calls in the trace had bad values.",
      "parentUuid": "4013e642_9963aea8",
      "range": {
        "startLine": 10,
        "startChar": 10,
        "endLine": 10,
        "endChar": 28
      },
      "revId": "75358ad8cbcb0ea87069616f1957912cbcbbd2de",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "119deec7_c6152790",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2022-01-07T02:12:50Z",
      "side": 1,
      "message": "Moving back to WIP, since this trace needs to be recaptured with the changes in https://crrev.com/c/3371881.",
      "revId": "75358ad8cbcb0ea87069616f1957912cbcbbd2de",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "93c65d46_742322d5",
        "filename": "src/tests/perf_tests/TracePerfTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1166,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-12-29T18:09:22Z",
      "side": 1,
      "message": "let me see if we can figure this out - I\u0027m concerned it\u0027s hiding a trace error.",
      "range": {
        "startLine": 1159,
        "startChar": 0,
        "endLine": 1166,
        "endChar": 5
      },
      "revId": "75358ad8cbcb0ea87069616f1957912cbcbbd2de",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "352b5bab_775005eb",
        "filename": "src/tests/perf_tests/TracePerfTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1166,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-01-10T14:32:56Z",
      "side": 1,
      "message": "Can you try turning this on now that you added some reset fixes? IIRC you weren\u0027t able to repro locally?",
      "parentUuid": "93c65d46_742322d5",
      "range": {
        "startLine": 1159,
        "startChar": 0,
        "endLine": 1166,
        "endChar": 5
      },
      "revId": "75358ad8cbcb0ea87069616f1957912cbcbbd2de",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}