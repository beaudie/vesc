{
  "comments": [
    {
      "key": {
        "uuid": "5596d945_8556491a",
        "filename": "src/libANGLE/renderer/d3d/d3d11/Renderer11.cpp",
        "patchSetId": 8
      },
      "lineNbr": 1652,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2017-11-21T22:13:39Z",
      "side": 0,
      "message": "This if() and the draw calls used to be executed for !programD3D-\u003eusesPointSize() || !programD3D-\u003eusesInstancedPointSpriteEmulation() || mode !\u003d GL_POINTS.\nNow the draw calls will not be made in !programD3D-\u003eusesPointSize() \u0026\u0026 programD3D-\u003eusesInstancedPointSpriteEmulation() \u0026\u0026 mode \u003d\u003d GL_POINTS case, or it will reach DrawIndexedInstanced(6, count, 0, 0, 0) call instead.\nI don\u0027t know if this combination is possible, but this is what InstancedPointSpritesActive() checks for.",
      "range": {
        "startLine": 1652,
        "startChar": 9,
        "endLine": 1652,
        "endChar": 33
      },
      "revId": "ec9a9ae80484a3984e99a1e58b757a7165c72c97",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "930d3bd0_a3a043ef",
        "filename": "src/libANGLE/renderer/d3d/d3d11/Renderer11.cpp",
        "patchSetId": 8
      },
      "lineNbr": 1652,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-11-22T00:34:45Z",
      "side": 0,
      "message": "Sorry, I\u0027m not actually clear what the question is.. I think the code is correct. The Instanced Point Rendering feature was implemented by Microsoft as an optimization for Windows RT devices. It should still be hit in the cases below. The draw calls *should* behave identically to how they did before, just with less duplicate code.",
      "parentUuid": "5596d945_8556491a",
      "range": {
        "startLine": 1652,
        "startChar": 9,
        "endLine": 1652,
        "endChar": 33
      },
      "revId": "ec9a9ae80484a3984e99a1e58b757a7165c72c97",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}