{
  "comments": [
    {
      "key": {
        "uuid": "5596d945_8556491a",
        "filename": "src/libANGLE/renderer/d3d/d3d11/Renderer11.cpp",
        "patchSetId": 8
      },
      "lineNbr": 1652,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2017-11-21T22:13:39Z",
      "side": 0,
      "message": "This if() and the draw calls used to be executed for !programD3D-\u003eusesPointSize() || !programD3D-\u003eusesInstancedPointSpriteEmulation() || mode !\u003d GL_POINTS.\nNow the draw calls will not be made in !programD3D-\u003eusesPointSize() \u0026\u0026 programD3D-\u003eusesInstancedPointSpriteEmulation() \u0026\u0026 mode \u003d\u003d GL_POINTS case, or it will reach DrawIndexedInstanced(6, count, 0, 0, 0) call instead.\nI don\u0027t know if this combination is possible, but this is what InstancedPointSpritesActive() checks for.",
      "range": {
        "startLine": 1652,
        "startChar": 9,
        "endLine": 1652,
        "endChar": 33
      },
      "revId": "ec9a9ae80484a3984e99a1e58b757a7165c72c97",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "930d3bd0_a3a043ef",
        "filename": "src/libANGLE/renderer/d3d/d3d11/Renderer11.cpp",
        "patchSetId": 8
      },
      "lineNbr": 1652,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-11-22T00:34:45Z",
      "side": 0,
      "message": "Sorry, I\u0027m not actually clear what the question is.. I think the code is correct. The Instanced Point Rendering feature was implemented by Microsoft as an optimization for Windows RT devices. It should still be hit in the cases below. The draw calls *should* behave identically to how they did before, just with less duplicate code.",
      "parentUuid": "5596d945_8556491a",
      "range": {
        "startLine": 1652,
        "startChar": 9,
        "endLine": 1652,
        "endChar": 33
      },
      "revId": "ec9a9ae80484a3984e99a1e58b757a7165c72c97",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6a997861_1aac4142",
        "filename": "src/libANGLE/renderer/d3d/d3d11/Renderer11.cpp",
        "patchSetId": 8
      },
      "lineNbr": 1652,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2017-11-22T00:48:09Z",
      "side": 0,
      "message": "If you look at the code flow for \"!programD3D-\u003eusesPointSize() \u0026\u0026 programD3D-\u003eusesInstancedPointSpriteEmulation() \u0026\u0026 mode \u003d\u003d GL_POINTS\" condition, originally, InstancedPointSpritesActive() would return false, and so will DrawCallNeedsTranslation(), and this if() will be entered and mDeviceContext-\u003eDraw...() will be called.\n\nIn the new code, there is no condition which will lead to mDeviceContext-\u003eDraw...() being called. So, this is not identical to the old code.",
      "parentUuid": "930d3bd0_a3a043ef",
      "range": {
        "startLine": 1652,
        "startChar": 9,
        "endLine": 1652,
        "endChar": 33
      },
      "revId": "ec9a9ae80484a3984e99a1e58b757a7165c72c97",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "54a381ae_c5a96a0d",
        "filename": "src/libANGLE/renderer/d3d/d3d11/Renderer11.cpp",
        "patchSetId": 8
      },
      "lineNbr": 1652,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-11-22T00:52:12Z",
      "side": 0,
      "message": "It should be entering the draw call down below. What are the values for programD3D-\u003eusesPointSize() / programD3D-\u003eusesInstancedPointSpriteEmulation() / mode that you think will lead to no draw call being issued? Can you trace it through this function once to try and prove there\u0027s no draw call?",
      "parentUuid": "6a997861_1aac4142",
      "range": {
        "startLine": 1652,
        "startChar": 9,
        "endLine": 1652,
        "endChar": 33
      },
      "revId": "ec9a9ae80484a3984e99a1e58b757a7165c72c97",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "79f114f6_08f9348e",
        "filename": "src/libANGLE/renderer/d3d/d3d11/Renderer11.cpp",
        "patchSetId": 8
      },
      "lineNbr": 1652,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2017-11-22T00:58:10Z",
      "side": 0,
      "message": "programD3D-\u003eusesPointSize() \u003d\u003d false\nprogramD3D-\u003eusesInstancedPointSpriteEmulation() \u003d\u003d true\nmode \u003d\u003d GL_POINTS\n\nline 1663: if (mode \u003d\u003d GL_LINE_LOOP) skipped\nline 1668: if (mode \u003d\u003d GL_TRIANGLE_FAN) skipped\nline 1675: if (mode !\u003d GL_POINTS || !programD3D-\u003eusesInstancedPointSpriteEmulation()) skipped\nIt can still get into line 1703 or line 1717, but the first parameter there is 6 and not \"count\" as in the old code.",
      "parentUuid": "54a381ae_c5a96a0d",
      "range": {
        "startLine": 1652,
        "startChar": 9,
        "endLine": 1652,
        "endChar": 33
      },
      "revId": "ec9a9ae80484a3984e99a1e58b757a7165c72c97",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fbd1422e_73b3f566",
        "filename": "src/libANGLE/renderer/d3d/d3d11/Renderer11.cpp",
        "patchSetId": 8
      },
      "lineNbr": 1652,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-11-22T01:21:12Z",
      "side": 0,
      "message": "OK, so if mode \u003d\u003d GL_POINTS and usesPointSize() \u003d false and instanced point sprite emulation is active and transform feedback is active, then the draw calls might be different. you\u0027re right. I think that\u0027s okay.",
      "parentUuid": "79f114f6_08f9348e",
      "range": {
        "startLine": 1652,
        "startChar": 9,
        "endLine": 1652,
        "endChar": 33
      },
      "revId": "ec9a9ae80484a3984e99a1e58b757a7165c72c97",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}