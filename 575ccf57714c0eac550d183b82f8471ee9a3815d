{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "3fe95558_efe58cb1",
        "filename": "src/libANGLE/State.cpp",
        "patchSetId": 2
      },
      "lineNbr": 795,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2024-07-24T17:10:21Z",
      "side": 1,
      "message": "We should avoid modifying the value stored in ANGLE\u0027s state from the values given to us by the API. If anything, we should only modify things when they are queried out of ANGLE.",
      "range": {
        "startLine": 795,
        "startChar": 4,
        "endLine": 795,
        "endChar": 45
      },
      "revId": "575ccf57714c0eac550d183b82f8471ee9a3815d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "59026b53_6b79ce25",
        "filename": "src/libANGLE/queryconversions.cpp",
        "patchSetId": 2
      },
      "lineNbr": 83,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2024-07-24T17:10:21Z",
      "side": 1,
      "message": "The spec says something about this specific case.\n\nhttps://registry.khronos.org/OpenGL/specs/es/3.2/es_spec_3.2.pdf pg 13:\n```\nWhen querying bitmasks (such as SAMPLE_MASK_VALUE or STENCIL_WRITEMASK) with\nGetIntegerv, the mask value is treated as a signed integer, so that mask values\nwith the high bit set will not be clamped when returned as signed integers.\n```\n\nThis implies that we should just bitcast the unsigned int to signed int and return it as. No bits will be removed but it requires that the user do bit comparisons between the returned values from glGetIntegerv and their stored masks.",
      "range": {
        "startLine": 83,
        "startChar": 11,
        "endLine": 83,
        "endChar": 73
      },
      "revId": "575ccf57714c0eac550d183b82f8471ee9a3815d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}