{
  "comments": [
    {
      "key": {
        "uuid": "fb997a8a_4de2a919",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 3215,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-05-27T06:07:32Z",
      "side": 1,
      "message": "It looks like you\u0027re just checking if there are any xfb buffers, so can this check be changed to the following and moved outside of the loop?\n\n        if (!mTransformFeedbackBufferSerials.empty())\n\nOr is the list of buffers that\u0027s passed in a subset of the total xfb buffers that are currently active for the context?",
      "revId": "1127c66de9797481d9b47c15b2c6fca739f676d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f0072aa_fb254e05",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 3215,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-06-02T03:03:08Z",
      "side": 1,
      "message": "Suggest `find` instead of `count`.",
      "range": {
        "startLine": 3215,
        "startChar": 44,
        "endLine": 3215,
        "endChar": 49
      },
      "revId": "1127c66de9797481d9b47c15b2c6fca739f676d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2027f03d_705f7c6a",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.h",
        "patchSetId": 4
      },
      "lineNbr": 971,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-06-02T03:03:08Z",
      "side": 1,
      "message": "Suggest find instead of count",
      "range": {
        "startLine": 971,
        "startChar": 51,
        "endLine": 971,
        "endChar": 56
      },
      "revId": "1127c66de9797481d9b47c15b2c6fca739f676d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fc5da452_99cb1ef0",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.h",
        "patchSetId": 4
      },
      "lineNbr": 984,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-05-29T17:15:45Z",
      "side": 1,
      "message": "Maybe I am not fully understand the problem here, so bear with me if I am wrong. My understanding is that you try to detect if the index buffer is current been used by XFB or not. If yes, you need to end RP, otherwise, these are unrelated buffer, so no need to end RP. Right now it walks through the unordered set of XFB buffers and compare serial number. I am wondering instead of serial number, why not a boolean flag (bool mCurrentInUseByXFB) is not enough? Whenever a buffer is been used by XFB, you set to true and when not used set to false. That way you will be checking this boolean instead of walk the unordered set. Will this not work?",
      "range": {
        "startLine": 984,
        "startChar": 11,
        "endLine": 984,
        "endChar": 49
      },
      "revId": "1127c66de9797481d9b47c15b2c6fca739f676d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "47508905_7f355bd9",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.h",
        "patchSetId": 4
      },
      "lineNbr": 984,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-06-01T20:26:16Z",
      "side": 1,
      "message": "You still need a way to go back and reset all the flags after you start a new RP. So you\u0027ll need a list of these buffers somewhere. I\u0027d express what the CL is doing is answering the question \"is there a WAW hazard that needs a barrier?\" This is more easily implemented via storing a list of buffers in the RP itself.\n\nI\u0027m thinking I should probably sketch up a design doc with a few examples.",
      "parentUuid": "fc5da452_99cb1ef0",
      "range": {
        "startLine": 984,
        "startChar": 11,
        "endLine": 984,
        "endChar": 49
      },
      "revId": "1127c66de9797481d9b47c15b2c6fca739f676d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "66d75123_b4bf6bd3",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.h",
        "patchSetId": 4
      },
      "lineNbr": 1000,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-05-27T06:07:32Z",
      "side": 1,
      "message": "This changes the behavior so we no longer do:\n\n    mGraphicsDirtyBits.set(DIRTY_BIT_INDEX_BUFFER);\n\nIs this intentional?",
      "revId": "1127c66de9797481d9b47c15b2c6fca739f676d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "79b392ba_9849af22",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1652,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-05-27T06:07:32Z",
      "side": 1,
      "message": "For consistency, I think these should both either check VK_FALSE/TRUE, or neither should.   I\u0027m fine with not checking, since they are 0/1, so the \u0027\u003d\u003d VK_TRUE\u0027 can be removed.",
      "range": {
        "startLine": 1652,
        "startChar": 29,
        "endLine": 1652,
        "endChar": 94
      },
      "revId": "1127c66de9797481d9b47c15b2c6fca739f676d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c7657df_9aa97c09",
        "filename": "src/tests/gl_tests/TransformFeedbackTest.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1781,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-05-27T06:07:32Z",
      "side": 1,
      "message": "Are there bugs tracking these failures?",
      "range": {
        "startLine": 1777,
        "startChar": 0,
        "endLine": 1781,
        "endChar": 63
      },
      "revId": "1127c66de9797481d9b47c15b2c6fca739f676d4",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}