{
  "comments": [
    {
      "key": {
        "uuid": "4b7148f9_438604d6",
        "filename": "src/common/android_util.h",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2019-02-19T18:45:20Z",
      "side": 1,
      "message": "If you feel like it you can make a split prior CL that moves these files, then move the properties code in this CL. That way it\u0027ll get flagged as a renamed/moved file.",
      "revId": "6fcbe5e4752354a65e0a69f82f19ce551e400265",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8d7706b9_080bed56",
        "filename": "src/libANGLE/renderer/vulkan/ImageVk.cpp",
        "patchSetId": 15
      },
      "lineNbr": 100,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-02-19T22:07:44Z",
      "side": 1,
      "message": "Could be refactored into this for a bit of brevity:\n\n    else\n    {\n        if (egl::IsRenderbufferTarget(mState.target))\n        {\n            RenderbufferVk *renderbufferVk \u003d\n                GetImplAs\u003cRenderbufferVk\u003e(GetAs\u003cgl::Renderbuffer\u003e(mState.source));\n            mImage \u003d renderbufferVk-\u003egetImage();\n        }\n        else if (egl::IsExternalImageTarget(mState.target))\n        {\n            const ExternalImageSiblingVk *externalImageSibling \u003d\n                GetImplAs\u003cExternalImageSiblingVk\u003e(GetAs\u003cegl::ExternalImageSibling\u003e    (mState.source));\n            mImage \u003d externalImageSibling-\u003egetImage();\n        }\n\n        // Make sure a staging buffer is ready to use to upload data\n        ASSERT(mContext \u003d\u003d nullptr);\n        DisplayVk *displayVk \u003d vk::GetImpl(display);\n        RendererVk *renderer \u003d displayVk-\u003egetRenderer();\n        mImage-\u003einitStagingBuffer(renderer);\n\n        mOwnsImage \u003d false;\n\n        mImageTextureType \u003d gl::TextureType::_2D;\n        mImageLevel       \u003d 0;\n        mImageLayer       \u003d 0;\n    }",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 100,
        "endChar": 5
      },
      "revId": "6fcbe5e4752354a65e0a69f82f19ce551e400265",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "802927d1_aca8536f",
        "filename": "src/libANGLE/renderer/vulkan/ImageVk.cpp",
        "patchSetId": 15
      },
      "lineNbr": 100,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2019-02-21T15:24:48Z",
      "side": 1,
      "message": "I refactored some but these two paths get the renderer in different ways.",
      "parentUuid": "8d7706b9_080bed56",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 100,
        "endChar": 5
      },
      "revId": "6fcbe5e4752354a65e0a69f82f19ce551e400265",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f85f3045_621d60b6",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 15
      },
      "lineNbr": 926,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2019-02-19T18:45:20Z",
      "side": 1,
      "message": "maybe we should stick to ANGLE_PLATFORM_ANDROID for the preprocessor checks. Presumably this is something we are in control of by importing the Vulkan headers and extension names as below.",
      "range": {
        "startLine": 926,
        "startChar": 4,
        "endLine": 926,
        "endChar": 54
      },
      "revId": "6fcbe5e4752354a65e0a69f82f19ce551e400265",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a441d36_2184af0d",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 15
      },
      "lineNbr": 926,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2019-02-21T15:24:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f85f3045_621d60b6",
      "range": {
        "startLine": 926,
        "startChar": 4,
        "endLine": 926,
        "endChar": 54
      },
      "revId": "6fcbe5e4752354a65e0a69f82f19ce551e400265",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "42353953_da6ca687",
        "filename": "src/libANGLE/renderer/vulkan/android/HardwareBufferImageSiblingVkAndroid.cpp",
        "patchSetId": 15
      },
      "lineNbr": 35,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2019-02-19T18:45:20Z",
      "side": 1,
      "message": "nit: you can use the \u003d {} thing here.",
      "range": {
        "startLine": 35,
        "startChar": 51,
        "endLine": 35,
        "endChar": 73
      },
      "revId": "6fcbe5e4752354a65e0a69f82f19ce551e400265",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3243acb1_b8586261",
        "filename": "src/libANGLE/renderer/vulkan/android/HardwareBufferImageSiblingVkAndroid.cpp",
        "patchSetId": 15
      },
      "lineNbr": 35,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2019-02-21T15:24:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "42353953_da6ca687",
      "range": {
        "startLine": 35,
        "startChar": 51,
        "endLine": 35,
        "endChar": 73
      },
      "revId": "6fcbe5e4752354a65e0a69f82f19ce551e400265",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b96fbd7_040cc661",
        "filename": "src/libANGLE/renderer/vulkan/android/HardwareBufferImageSiblingVkAndroid.cpp",
        "patchSetId": 15
      },
      "lineNbr": 168,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-02-19T22:07:44Z",
      "side": 1,
      "message": "Are AHB images necessarily renderable? If not, shouldn\u0027t this be: `format.redBits \u003e 0 || format.depthBits \u003e 0 || format.stencilBits \u003e 0`?",
      "revId": "6fcbe5e4752354a65e0a69f82f19ce551e400265",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "424c3edf_12ca570c",
        "filename": "src/libANGLE/renderer/vulkan/android/HardwareBufferImageSiblingVkAndroid.cpp",
        "patchSetId": 15
      },
      "lineNbr": 168,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2019-02-21T15:24:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3b96fbd7_040cc661",
      "revId": "6fcbe5e4752354a65e0a69f82f19ce551e400265",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "001f945f_1d30df32",
        "filename": "src/libANGLE/renderer/vulkan/android/HardwareBufferImageSiblingVkAndroid.cpp",
        "patchSetId": 15
      },
      "lineNbr": 183,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-02-19T22:07:44Z",
      "side": 1,
      "message": "1?",
      "range": {
        "startLine": 183,
        "startChar": 11,
        "endLine": 183,
        "endChar": 12
      },
      "revId": "6fcbe5e4752354a65e0a69f82f19ce551e400265",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1b09f10d_39fb5c79",
        "filename": "src/libANGLE/renderer/vulkan/android/HardwareBufferImageSiblingVkAndroid.cpp",
        "patchSetId": 15
      },
      "lineNbr": 183,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2019-02-21T15:24:48Z",
      "side": 1,
      "message": "This is the GL concept of sample count where 0 means not multisampled and 1 means multisampled with a single sample.",
      "parentUuid": "001f945f_1d30df32",
      "range": {
        "startLine": 183,
        "startChar": 11,
        "endLine": 183,
        "endChar": 12
      },
      "revId": "6fcbe5e4752354a65e0a69f82f19ce551e400265",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "73389fc4_c4225046",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 15
      },
      "lineNbr": 71,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2019-02-15T18:02:27Z",
      "side": 1,
      "message": "Shabi, is there another change I need to make for this layout type?",
      "range": {
        "startLine": 71,
        "startChar": 8,
        "endLine": 71,
        "endChar": 36
      },
      "revId": "6fcbe5e4752354a65e0a69f82f19ce551e400265",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c277e10_b1704a0a",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 15
      },
      "lineNbr": 71,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-02-15T18:23:30Z",
      "side": 1,
      "message": "Per our discussion offline, I would rename this to `ImageLayout::ExternalPreInitialized` to make it clear it\u0027s for an external image whose data source is unknown.\n\nThen use this pipeline stage: `VK_PIPELINE_STAGE_HOST_BIT | VK_PIPELINE_STAGE_ALL_COMMANDS_BIT` and this access mask: `VK_ACCESS_MEMORY_WRITE_BIT`.",
      "parentUuid": "73389fc4_c4225046",
      "range": {
        "startLine": 71,
        "startChar": 8,
        "endLine": 71,
        "endChar": 36
      },
      "revId": "6fcbe5e4752354a65e0a69f82f19ce551e400265",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "308bee8b_87dd8d47",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 15
      },
      "lineNbr": 71,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2019-02-21T15:24:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5c277e10_b1704a0a",
      "range": {
        "startLine": 71,
        "startChar": 8,
        "endLine": 71,
        "endChar": 36
      },
      "revId": "6fcbe5e4752354a65e0a69f82f19ce551e400265",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f3e813ba_d5b1280b",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 15
      },
      "lineNbr": 1568,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2019-02-19T18:45:20Z",
      "side": 1,
      "message": "I think we might want a specific API to transition queues. I\u0027m worried some driver might only special case VK_QUEUE_FAMILY_IGNORED and might not check for the queues being equal. We could do this check. But it seems like a special case to transition queues.",
      "range": {
        "startLine": 1568,
        "startChar": 46,
        "endLine": 1568,
        "endChar": 70
      },
      "revId": "6fcbe5e4752354a65e0a69f82f19ce551e400265",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ff4c0563_3b3827a8",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 15
      },
      "lineNbr": 1568,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-02-19T22:07:44Z",
      "side": 1,
      "message": "That could work. Provided we do an immediate queue transfer when we receive the image. That way we don\u0027t need to store the current and renderer queue families either.",
      "parentUuid": "f3e813ba_d5b1280b",
      "range": {
        "startLine": 1568,
        "startChar": 46,
        "endLine": 1568,
        "endChar": 70
      },
      "revId": "6fcbe5e4752354a65e0a69f82f19ce551e400265",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dcbe9e22_ab6d0e11",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 15
      },
      "lineNbr": 1568,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2019-02-21T15:24:48Z",
      "side": 1,
      "message": "We don\u0027t know how the buffer will be used at initialization time so we don\u0027t know what the new layout should be.  Also, we don\u0027t have a command buffer associated with anything at image creation time.\n\nI can special case when the source and dest queues are equal and use VK_QUEUE_FAMILY_IGNORED but the spec says that them being equal is equivalent to VK_QUEUE_FAMILY_IGNORED.",
      "parentUuid": "ff4c0563_3b3827a8",
      "range": {
        "startLine": 1568,
        "startChar": 46,
        "endLine": 1568,
        "endChar": 70
      },
      "revId": "6fcbe5e4752354a65e0a69f82f19ce551e400265",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f53e166_6d40b88f",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 15
      },
      "lineNbr": 1568,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2019-02-21T20:09:45Z",
      "side": 1,
      "message": "This is true. How about we do the transition on TextureVk::setEGLImageTarget and RenderbufferVk::setStorageEGLImageTarget? In these methods we have access to a Context. We know the \"renderer\" queue family index. Then all we need is the \"current\" queue family index. How about we store this in ExternalImageSiblingVk and initialize it from something in HardwareBufferImageSiblingVkAndroid::initImpl? There may be a better init place.\n\nIf this doesn\u0027t make sense that\u0027s okay. I haven\u0027t tested it out. Just wanted to do due diligence. It would be nice if we could make the queue transition a separate function.",
      "parentUuid": "dcbe9e22_ab6d0e11",
      "range": {
        "startLine": 1568,
        "startChar": 46,
        "endLine": 1568,
        "endChar": 70
      },
      "revId": "6fcbe5e4752354a65e0a69f82f19ce551e400265",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ad87e334_e08c46f1",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 15
      },
      "lineNbr": 1568,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-02-21T20:16:48Z",
      "side": 1,
      "message": "Since the start of this discussion, I\u0027ve been thinking about whether it would be realistic to think about using multiple queues in the near future. Doing async compute seems to be a bit farther in the future, but doing async transfers is actually doable. In that case, tracking the queue family index as done makes more sense.\n\n---\n\nRegarding async transfers, I still need to understand whether that actually makes a difference (as in, whether the non-transfer barriers within the queue can hinder transfer work on that queue).",
      "parentUuid": "7f53e166_6d40b88f",
      "range": {
        "startLine": 1568,
        "startChar": 46,
        "endLine": 1568,
        "endChar": 70
      },
      "revId": "6fcbe5e4752354a65e0a69f82f19ce551e400265",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "14b22f8e_70e17441",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 15
      },
      "lineNbr": 1568,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2019-02-21T20:19:47Z",
      "side": 1,
      "message": "I\u0027d prefer to defer that for another time if you don\u0027t mind. Queue transfers I suspect are a very different beast than most barriers. \"KISS\"",
      "parentUuid": "ad87e334_e08c46f1",
      "range": {
        "startLine": 1568,
        "startChar": 46,
        "endLine": 1568,
        "endChar": 70
      },
      "revId": "6fcbe5e4752354a65e0a69f82f19ce551e400265",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6509981b_73ee64fc",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 15
      },
      "lineNbr": 1568,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2019-02-25T17:15:57Z",
      "side": 1,
      "message": "Ok, what do you think of this approach?  I still track the current queue index but don\u0027t need to track the renderer\u0027s queue index.  There is an explicit changeQueue method now.  Eventually we can fold the changeLayout and changeQueue methods together to do everything at once.",
      "parentUuid": "14b22f8e_70e17441",
      "range": {
        "startLine": 1568,
        "startChar": 46,
        "endLine": 1568,
        "endChar": 70
      },
      "revId": "6fcbe5e4752354a65e0a69f82f19ce551e400265",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "45cc3760_06998d71",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 15
      },
      "lineNbr": 752,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2019-02-19T18:45:20Z",
      "side": 1,
      "message": "this is a bit too bad. Maybe we could figure out a way we don\u0027t need to store this info.",
      "range": {
        "startLine": 747,
        "startChar": 0,
        "endLine": 752,
        "endChar": 0
      },
      "revId": "6fcbe5e4752354a65e0a69f82f19ce551e400265",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e362a82f_ec662f40",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 15
      },
      "lineNbr": 752,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2019-02-21T15:24:48Z",
      "side": 1,
      "message": "Ideally we only store the current queue index but there are a ton of call sites that call changeLayout and would need to pipe down what queue should be used.\n\nI do like that ImageHelper now has more information about its current state and can use that for more types of transitions.",
      "parentUuid": "45cc3760_06998d71",
      "range": {
        "startLine": 747,
        "startChar": 0,
        "endLine": 752,
        "endChar": 0
      },
      "revId": "6fcbe5e4752354a65e0a69f82f19ce551e400265",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4e2b29b3_b261d0e3",
        "filename": "src/libANGLE/renderer/vulkan/vk_utils.h",
        "patchSetId": 15
      },
      "lineNbr": 412,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2019-02-19T18:45:20Z",
      "side": 1,
      "message": "again I would probably just make this #if defined(ANGLE_PLATFORM_ANDROID)",
      "range": {
        "startLine": 412,
        "startChar": 7,
        "endLine": 412,
        "endChar": 57
      },
      "revId": "6fcbe5e4752354a65e0a69f82f19ce551e400265",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7e3032e9_e0855d21",
        "filename": "src/libANGLE/renderer/vulkan/vk_utils.h",
        "patchSetId": 15
      },
      "lineNbr": 412,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2019-02-21T15:24:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4e2b29b3_b261d0e3",
      "range": {
        "startLine": 412,
        "startChar": 7,
        "endLine": 412,
        "endChar": 57
      },
      "revId": "6fcbe5e4752354a65e0a69f82f19ce551e400265",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}