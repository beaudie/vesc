{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "d7cfa0b5_86b6cc7d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-02-22T15:49:34Z",
      "side": 1,
      "message": "Thanks for putting this up. A couple points:\n\n- Please add tests similarly to those in ProgramInterfaceTest.cpp.  Basically the test would create a shader, destroy it, and recreate it.\n- I realize this is a big deal with the glslang path, but could you please give SPIR-V gen a try and see how much this affects application load times (or whatever other metric you are using to evaluate this)? I do agree that having a cache is good, just wanted to know what the numbers look like.",
      "revId": "dbc9860d43817aef04d3050df620a609bebca80f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ec3e8ead_a108c90b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1535343
      },
      "writtenOn": "2022-03-03T05:45:33Z",
      "side": 1,
      "message": "I will check the effect of this change when using SPIR-V gen, and then update the result.\nBut, it seems that it has the bug when calculating the hash value between Shader and Program.\nCould you give me any idea for it?",
      "parentUuid": "d7cfa0b5_86b6cc7d",
      "revId": "dbc9860d43817aef04d3050df620a609bebca80f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d3c85659_dcbe2979",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-03-04T00:28:13Z",
      "side": 1,
      "message": "Hard to tell really without debugging. I\u0027ll be back in two weeks, please remind me to take a look.",
      "parentUuid": "ec3e8ead_a108c90b",
      "revId": "dbc9860d43817aef04d3050df620a609bebca80f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "18589b86_871a51c2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2022-07-29T16:33:49Z",
      "side": 1,
      "message": "Can we get momentum on this? This is not just help game launch time, but also draw time. Some games (line asphalt_9) are compiling shaders at frame draw time.",
      "revId": "dbc9860d43817aef04d3050df620a609bebca80f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ee49f8d4_391ac363",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2022-07-29T17:08:38Z",
      "side": 1,
      "message": "Some quick drive by comment.",
      "revId": "dbc9860d43817aef04d3050df620a609bebca80f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b7370b85_e25a6a0d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1546684
      },
      "writtenOn": "2022-07-29T17:49:54Z",
      "side": 1,
      "message": "Just a small comment to help get the merge conflict resolved a little faster.",
      "revId": "dbc9860d43817aef04d3050df620a609bebca80f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1a6e9a2c_b40fe2ec",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1546684
      },
      "writtenOn": "2022-08-05T18:39:14Z",
      "side": 1,
      "message": "Here\u0027s the fork of this CL that I\u0027ve been working on: https://chromium-review.googlesource.com/c/angle/angle/+/3808235 ",
      "revId": "dbc9860d43817aef04d3050df620a609bebca80f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c19db615_22a5d115",
        "filename": "include/platform/FrontendFeatures.h",
        "patchSetId": 4
      },
      "lineNbr": 87,
      "author": {
        "id": 1546684
      },
      "writtenOn": "2022-07-29T17:49:54Z",
      "side": 1,
      "message": "This will need to be moved to `include/platform/frontend_features.json` since this file is now generated via script.",
      "revId": "dbc9860d43817aef04d3050df620a609bebca80f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "be0cc059_3bf99595",
        "filename": "include/platform/FrontendFeatures.h",
        "patchSetId": 4
      },
      "lineNbr": 87,
      "author": {
        "id": 1546684
      },
      "writtenOn": "2022-08-05T18:39:14Z",
      "side": 1,
      "message": "Addressed in the new CL.",
      "parentUuid": "c19db615_22a5d115",
      "revId": "dbc9860d43817aef04d3050df620a609bebca80f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b2c64e8_3a30b3bd",
        "filename": "src/libANGLE/MemoryShaderCache.h",
        "patchSetId": 4
      },
      "lineNbr": 81,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2022-07-29T17:08:38Z",
      "side": 1,
      "message": "Rather than return mutex, can\u0027t you just lock mutex here inside putShader/getShader (and other functions) as well? It will be more robust handling mutex inside MemoryShaderCache.",
      "range": {
        "startLine": 81,
        "startChar": 16,
        "endLine": 81,
        "endChar": 24
      },
      "revId": "dbc9860d43817aef04d3050df620a609bebca80f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "55322144_4ec2fd74",
        "filename": "src/libANGLE/Shader.h",
        "patchSetId": 4
      },
      "lineNbr": 268,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2022-07-29T17:08:38Z",
      "side": 1,
      "message": "You don\u0027t need this function. Just use mMemoryShaderCache in Shader.cpp line 324. This API expose the mMemoryShaderCache which otherwise would be private data member.",
      "revId": "dbc9860d43817aef04d3050df620a609bebca80f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b1b7eae2_b23789e5",
        "filename": "src/libANGLE/Shader.h",
        "patchSetId": 4
      },
      "lineNbr": 268,
      "author": {
        "id": 1546684
      },
      "writtenOn": "2022-08-05T18:39:14Z",
      "side": 1,
      "message": "Addressed in the new CL.",
      "parentUuid": "55322144_4ec2fd74",
      "revId": "dbc9860d43817aef04d3050df620a609bebca80f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}