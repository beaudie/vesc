{
  "comments": [
    {
      "key": {
        "uuid": "adfd2500_bbd445fa",
        "filename": "src/compiler/translator/Initialize.cpp",
        "patchSetId": 3
      },
      "lineNbr": 957,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2017-03-20T15:53:11Z",
      "side": 1,
      "message": "nit: surround in braces.",
      "range": {
        "startLine": 957,
        "startChar": 8,
        "endLine": 957,
        "endChar": 56
      },
      "revId": "ef2e0bb29ad83a2f8dc3036ce23fb137e5858692",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "644a1924_3cdb3bba",
        "filename": "src/compiler/translator/Initialize.cpp",
        "patchSetId": 3
      },
      "lineNbr": 957,
      "author": {
        "id": 1185100
      },
      "writtenOn": "2017-03-21T08:05:32Z",
      "side": 1,
      "message": "I skiped braces to use the same code style as for any extension above \"OVR_multuview\".\nAnyway if it will needed i will add them.",
      "parentUuid": "adfd2500_bbd445fa",
      "range": {
        "startLine": 957,
        "startChar": 8,
        "endLine": 957,
        "endChar": 56
      },
      "revId": "ef2e0bb29ad83a2f8dc3036ce23fb137e5858692",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f918ec2e_ccb28640",
        "filename": "src/compiler/translator/Initialize.cpp",
        "patchSetId": 3
      },
      "lineNbr": 957,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2017-03-21T18:01:32Z",
      "side": 1,
      "message": "Please do, we haven\u0027t gone through all the code to fix the coding convention, but we try to enforce it on new code.",
      "parentUuid": "644a1924_3cdb3bba",
      "range": {
        "startLine": 957,
        "startChar": 8,
        "endLine": 957,
        "endChar": 56
      },
      "revId": "ef2e0bb29ad83a2f8dc3036ce23fb137e5858692",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fc9c2546_a0aaae9f",
        "filename": "src/compiler/translator/Initialize.cpp",
        "patchSetId": 3
      },
      "lineNbr": 957,
      "author": {
        "id": 1185100
      },
      "writtenOn": "2017-03-22T14:01:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f918ec2e_ccb28640",
      "range": {
        "startLine": 957,
        "startChar": 8,
        "endLine": 957,
        "endChar": 56
      },
      "revId": "ef2e0bb29ad83a2f8dc3036ce23fb137e5858692",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "02c5e42d_fcf65479",
        "filename": "src/compiler/translator/glslang.l",
        "patchSetId": 3
      },
      "lineNbr": 197,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2017-03-20T15:53:11Z",
      "side": 1,
      "message": "I don\u0027t think these should be reserved for ES2 or ES3 because they\u0027re added as an extension only.  I think they should be the same as the \"samplerExternalOES\" case.",
      "range": {
        "startLine": 197,
        "startChar": 39,
        "endLine": 197,
        "endChar": 63
      },
      "revId": "ef2e0bb29ad83a2f8dc3036ce23fb137e5858692",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "79031720_ce967ea1",
        "filename": "src/compiler/translator/glslang.l",
        "patchSetId": 3
      },
      "lineNbr": 197,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2017-03-20T18:12:03Z",
      "side": 1,
      "message": "Actually I think samplerExternalOES isn\u0027t doing the right thing currently. It looks like it should be {return YUV_target_keyword_else_ident(context, SAMPLER...)} and YUV_target_keyword be a function in the style of ES2_ident_ES3_keyword.",
      "parentUuid": "02c5e42d_fcf65479",
      "range": {
        "startLine": 197,
        "startChar": 39,
        "endLine": 197,
        "endChar": 63
      },
      "revId": "ef2e0bb29ad83a2f8dc3036ce23fb137e5858692",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f4126aa9_585ba86f",
        "filename": "src/compiler/translator/glslang.l",
        "patchSetId": 3
      },
      "lineNbr": 197,
      "author": {
        "id": 1185100
      },
      "writtenOn": "2017-03-21T08:05:32Z",
      "side": 1,
      "message": "I used \"ES2_reserved_ES3_keyword\" because as mentioned in \nhttp://khronos.org/registry/OpenGL/specs/es/2.0/GLSL_ES_Specification_1.00.pdf\nparagraph 3.7 \"Keywords\" (page 17)\n\nIn addition, all identifiers containing two consecutive underscores (__) are reserved as possible future keywords.\n\nSo it is not allowed to use \"__samplerExternal2DY2YEXT\" or any \"__xXx\" identifiers in ES2.\n\nPlease let me know if i misunderstood this part from specification.",
      "parentUuid": "79031720_ce967ea1",
      "range": {
        "startLine": 197,
        "startChar": 39,
        "endLine": 197,
        "endChar": 63
      },
      "revId": "ef2e0bb29ad83a2f8dc3036ce23fb137e5858692",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bbc0167a_904a4afe",
        "filename": "src/compiler/translator/glslang.l",
        "patchSetId": 3
      },
      "lineNbr": 197,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2017-03-21T18:01:32Z",
      "side": 1,
      "message": "This sounds good for __samplerExternal2DY2YEXT but the same applies to the the yuvCscStandardEXT enum below.",
      "parentUuid": "f4126aa9_585ba86f",
      "range": {
        "startLine": 197,
        "startChar": 39,
        "endLine": 197,
        "endChar": 63
      },
      "revId": "ef2e0bb29ad83a2f8dc3036ce23fb137e5858692",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "463444be_1875b0b8",
        "filename": "src/compiler/translator/glslang.l",
        "patchSetId": 3
      },
      "lineNbr": 197,
      "author": {
        "id": 1185100
      },
      "writtenOn": "2017-03-22T14:01:36Z",
      "side": 1,
      "message": "I rewrote this code as you said, \"__samplerExternal2DY2YEXT\" and \" yuvCscStandardEXT\", plus enums will be  specified as keyword only if SL \u003e\u003d 300 and extension is enabled, otherwise they will be identifiers or type name.",
      "parentUuid": "bbc0167a_904a4afe",
      "range": {
        "startLine": 197,
        "startChar": 39,
        "endLine": 197,
        "endChar": 63
      },
      "revId": "ef2e0bb29ad83a2f8dc3036ce23fb137e5858692",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "171224b9_4773d86f",
        "filename": "src/tests/compiler_tests/EXT_YUV_target_test.cpp",
        "patchSetId": 3
      },
      "lineNbr": 40,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2017-03-20T18:12:03Z",
      "side": 1,
      "message": "nit: Quialifier -\u003e Qualifier.\n\nHere and in other places in this file.",
      "range": {
        "startLine": 40,
        "startChar": 23,
        "endLine": 40,
        "endChar": 26
      },
      "revId": "ef2e0bb29ad83a2f8dc3036ce23fb137e5858692",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5039cee6_ac57e5b7",
        "filename": "src/tests/compiler_tests/EXT_YUV_target_test.cpp",
        "patchSetId": 3
      },
      "lineNbr": 40,
      "author": {
        "id": 1185100
      },
      "writtenOn": "2017-03-21T08:05:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "171224b9_4773d86f",
      "range": {
        "startLine": 40,
        "startChar": 23,
        "endLine": 40,
        "endChar": 26
      },
      "revId": "ef2e0bb29ad83a2f8dc3036ce23fb137e5858692",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "94ad8745_052a63ae",
        "filename": "src/tests/compiler_tests/EXT_YUV_target_test.cpp",
        "patchSetId": 3
      },
      "lineNbr": 155,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2017-03-20T18:12:03Z",
      "side": 1,
      "message": "These test multiple failures, if a single thing fails, the whole test will pass. It is ok to not test all corner cases, but if there are things you want to test individually they should be split up in their own shader.",
      "range": {
        "startLine": 125,
        "startChar": 0,
        "endLine": 155,
        "endChar": 0
      },
      "revId": "ef2e0bb29ad83a2f8dc3036ce23fb137e5858692",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d50bb5f6_f54efd61",
        "filename": "src/tests/compiler_tests/EXT_YUV_target_test.cpp",
        "patchSetId": 3
      },
      "lineNbr": 155,
      "author": {
        "id": 1185100
      },
      "writtenOn": "2017-03-21T08:05:32Z",
      "side": 1,
      "message": "I split them into separate failure tests",
      "parentUuid": "94ad8745_052a63ae",
      "range": {
        "startLine": 125,
        "startChar": 0,
        "endLine": 155,
        "endChar": 0
      },
      "revId": "ef2e0bb29ad83a2f8dc3036ce23fb137e5858692",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1b5d8fa9_18390171",
        "filename": "src/tests/compiler_tests/EXT_YUV_target_test.cpp",
        "patchSetId": 3
      },
      "lineNbr": 155,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2017-03-21T18:01:32Z",
      "side": 1,
      "message": "Thanks",
      "parentUuid": "d50bb5f6_f54efd61",
      "range": {
        "startLine": 125,
        "startChar": 0,
        "endLine": 155,
        "endChar": 0
      },
      "revId": "ef2e0bb29ad83a2f8dc3036ce23fb137e5858692",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}