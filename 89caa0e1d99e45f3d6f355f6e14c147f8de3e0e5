{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "0529ed37_cf960970",
        "filename": "src/libANGLE/State.h",
        "patchSetId": 10
      },
      "lineNbr": 1484,
      "author": {
        "id": 1395734
      },
      "writtenOn": "2024-05-06T08:04:26Z",
      "side": 1,
      "message": "This breaks GCC build:\n\n```cpp\n../../third_party/angle/src/libANGLE/State.h: At global scope:\n../../third_party/angle/src/libANGLE/State.h:1483:10: error: non-constant condition for static assertion\n 1474 |         []() {\n      |         ~~~~~~\n 1475 |             for (auto handler : kDirtyObjectHandlers)\n      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n 1476 |             {\n      |             ~\n 1477 |                 if (handler \u003d\u003d nullptr)\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~\n 1478 |                 {\n      |                 ~\n 1479 |                     return false;\n      |                     ~~~~~~~~~~~~~\n 1480 |                 }\n      |                 ~\n 1481 |             }\n      |             ~\n 1482 |             return true;\n      |             ~~~~~~~~~~~~\n 1483 |         }(),\n      |         ~^~\n../../third_party/angle/src/libANGLE/State.h:1483:10:   in ‘constexpr’ expansion of ‘\u003clambda closure object\u003egl::State::\u003clambda()\u003e().gl::State::\u003clambda()\u003e()’\n../../third_party/angle/src/libANGLE/State.h:1483:10: error: ‘handler’ is not a constant expression\n```\n\nNot sure why this happens only on GCC",
      "revId": "89caa0e1d99e45f3d6f355f6e14c147f8de3e0e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4b48d05e_fe792ac1",
        "filename": "src/libANGLE/State.h",
        "patchSetId": 10
      },
      "lineNbr": 1484,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-05-06T14:20:49Z",
      "side": 1,
      "message": "What version of gcc is this? Does newer gcc fix it?",
      "parentUuid": "0529ed37_cf960970",
      "revId": "89caa0e1d99e45f3d6f355f6e14c147f8de3e0e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a22e4e06_45d5bfac",
        "filename": "src/libANGLE/State.h",
        "patchSetId": 10
      },
      "lineNbr": 1484,
      "author": {
        "id": 1395734
      },
      "writtenOn": "2024-05-06T16:01:47Z",
      "side": 1,
      "message": "GCC 13.2.0. I also tested a minimal version of the issue in godbolt, and it fails also in GCC trunk.\n\nI just reported https://gcc.gnu.org/bugzilla/show_bug.cgi?id\u003d114962 in case you want to follow up GCC upstream discussion.",
      "parentUuid": "4b48d05e_fe792ac1",
      "revId": "89caa0e1d99e45f3d6f355f6e14c147f8de3e0e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1be04167_baf11239",
        "filename": "src/libANGLE/State.h",
        "patchSetId": 10
      },
      "lineNbr": 1484,
      "author": {
        "id": 1531247
      },
      "writtenOn": "2024-05-06T16:40:09Z",
      "side": 1,
      "message": "Feel free to move outside of the class as a workaround for now: https://gcc.gnu.org/bugzilla/show_bug.cgi?id\u003d114962#c1\nmaybe inside class constructor as it\u0027s private.. or whatever works",
      "parentUuid": "a22e4e06_45d5bfac",
      "revId": "89caa0e1d99e45f3d6f355f6e14c147f8de3e0e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a9304f17_6b736536",
        "filename": "src/libANGLE/State.h",
        "patchSetId": 10
      },
      "lineNbr": 1484,
      "author": {
        "id": 1531247
      },
      "writtenOn": "2024-05-21T21:49:08Z",
      "side": 1,
      "message": "Also failed on msvc c++17, I\u0027ll roll back for now.",
      "parentUuid": "1be04167_baf11239",
      "revId": "89caa0e1d99e45f3d6f355f6e14c147f8de3e0e5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}