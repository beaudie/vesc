{
  "comments": [
    {
      "key": {
        "uuid": "c08e0c3e_a5efec24",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 13,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-01-07T19:49:16Z",
      "side": 1,
      "message": "Bug:",
      "revId": "09e063f36be92f3634c14a1edf07b98372756cd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0cc8f9b4_c80e69c2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 13,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2019-01-08T01:19:20Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "c08e0c3e_a5efec24",
      "revId": "09e063f36be92f3634c14a1edf07b98372756cd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f7c2f24c_4aedfc98",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 13,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-01-08T17:52:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0cc8f9b4_c80e69c2",
      "revId": "09e063f36be92f3634c14a1edf07b98372756cd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "371f7841_a904eecb",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 49,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-01-07T19:49:16Z",
      "side": 1,
      "message": "Aren\u0027t these condition reversed?",
      "range": {
        "startLine": 47,
        "startChar": 0,
        "endLine": 49,
        "endChar": 0
      },
      "revId": "09e063f36be92f3634c14a1edf07b98372756cd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "58fa05fe_c38a978d",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 49,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-01-07T21:35:14Z",
      "side": 1,
      "message": "Yes, good catch",
      "parentUuid": "371f7841_a904eecb",
      "range": {
        "startLine": 47,
        "startChar": 0,
        "endLine": 49,
        "endChar": 0
      },
      "revId": "09e063f36be92f3634c14a1edf07b98372756cd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "30b58fc4_2d05f495",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 49,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2019-01-08T01:19:20Z",
      "side": 1,
      "message": "nit: can you convert this into if (thing) return? The ?: pattern is a bit terse. I don\u0027t think the code gen will be any different.",
      "parentUuid": "58fa05fe_c38a978d",
      "range": {
        "startLine": 47,
        "startChar": 0,
        "endLine": 49,
        "endChar": 0
      },
      "revId": "09e063f36be92f3634c14a1edf07b98372756cd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "99270922_96b154ba",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 49,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-01-08T17:52:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "30b58fc4_2d05f495",
      "range": {
        "startLine": 47,
        "startChar": 0,
        "endLine": 49,
        "endChar": 0
      },
      "revId": "09e063f36be92f3634c14a1edf07b98372756cd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "99c21d11_9839748c",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 87,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2019-01-08T01:19:20Z",
      "side": 1,
      "message": "10 points to Gryffindor if you kill this lambda.",
      "range": {
        "startLine": 79,
        "startChar": 4,
        "endLine": 87,
        "endChar": 22
      },
      "revId": "09e063f36be92f3634c14a1edf07b98372756cd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "307aa6b2_53011335",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 87,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-01-08T17:52:19Z",
      "side": 1,
      "message": "If you\u0027re worried about performance, `std::remove_if` (the user) is a template and there\u0027s a lot of inlining already going on in the assembly.\n\nIf you don\u0027t mind, I\u0027d keep it for now (to avoid reimplementing `std::remove_if`)",
      "parentUuid": "99c21d11_9839748c",
      "range": {
        "startLine": 79,
        "startChar": 4,
        "endLine": 87,
        "endChar": 22
      },
      "revId": "09e063f36be92f3634c14a1edf07b98372756cd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6d971189_ecf291a5",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 265,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2019-01-08T01:19:20Z",
      "side": 1,
      "message": "nit: redundant with {}",
      "range": {
        "startLine": 264,
        "startChar": 0,
        "endLine": 265,
        "endChar": 50
      },
      "revId": "09e063f36be92f3634c14a1edf07b98372756cd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f4597123_ead43383",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 265,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-01-08T17:52:19Z",
      "side": 1,
      "message": "I see you have joined the dark side (remember when you were a proponent of keeping these explicit despite \u003d{}?) :D\n\nDone.",
      "parentUuid": "6d971189_ecf291a5",
      "range": {
        "startLine": 264,
        "startChar": 0,
        "endLine": 265,
        "endChar": 50
      },
      "revId": "09e063f36be92f3634c14a1edf07b98372756cd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "03881e88_2ac704cf",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 271,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2019-01-08T01:19:20Z",
      "side": 1,
      "message": "nit: same",
      "range": {
        "startLine": 271,
        "startChar": 0,
        "endLine": 271,
        "endChar": 68
      },
      "revId": "09e063f36be92f3634c14a1edf07b98372756cd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7480f7bd_10897284",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 271,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-01-08T17:52:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "03881e88_2ac704cf",
      "range": {
        "startLine": 271,
        "startChar": 0,
        "endLine": 271,
        "endChar": 68
      },
      "revId": "09e063f36be92f3634c14a1edf07b98372756cd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e9f7498e_f046e282",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 341,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2019-01-08T01:19:20Z",
      "side": 1,
      "message": "this looks fishy. You already have a command buffer, you probably only want to be using a single command buffer here. even if you want to record the layout change in \"update.image\", I think you\u0027re better off recording it in \"commandbuffer\". As long as \"image\" is only used once you don\u0027t need to add it to the graph.",
      "range": {
        "startLine": 341,
        "startChar": 11,
        "endLine": 341,
        "endChar": 81
      },
      "revId": "09e063f36be92f3634c14a1edf07b98372756cd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "99a88cd3_d93e10b7",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 341,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-01-08T17:52:19Z",
      "side": 1,
      "message": "You\u0027re right, I could do the layout transition in `commandBuffer`. Done.\n\nThe image is inevitably in the graph though, as there are dependencies between it and the source and destination.",
      "parentUuid": "e9f7498e_f046e282",
      "range": {
        "startLine": 341,
        "startChar": 11,
        "endLine": 341,
        "endChar": 81
      },
      "revId": "09e063f36be92f3634c14a1edf07b98372756cd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c3833998_8f3f4ee2",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 489,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2019-01-08T01:19:20Z",
      "side": 1,
      "message": "nit: SafeDelete",
      "range": {
        "startLine": 488,
        "startChar": 8,
        "endLine": 489,
        "endChar": 24
      },
      "revId": "09e063f36be92f3634c14a1edf07b98372756cd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e552a49f_d6e7d790",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 489,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-01-08T17:52:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c3833998_8f3f4ee2",
      "range": {
        "startLine": 488,
        "startChar": 8,
        "endLine": 489,
        "endChar": 24
      },
      "revId": "09e063f36be92f3634c14a1edf07b98372756cd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8142c444_71cce93a",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 702,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2019-01-08T01:19:20Z",
      "side": 1,
      "message": "UNREACHABLE() might do the same thing fyi (would have to test). Also it would be useful to know if the available set of compute formats break on the set of GLES 2.0 formats. Maybe your enhanced test will be good enough to check. (Could add an ASSERT into the if above for testing.)",
      "range": {
        "startLine": 702,
        "startChar": 4,
        "endLine": 702,
        "endChar": 18
      },
      "revId": "09e063f36be92f3634c14a1edf07b98372756cd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ee017d17_2b642798",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 702,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-01-08T17:52:19Z",
      "side": 1,
      "message": "I\u0027ll remove the ASSERT() before submission (in fact, just did it). Not sure I understood the rest of your comment though, let\u0027s talk about it in person.",
      "parentUuid": "8142c444_71cce93a",
      "range": {
        "startLine": 702,
        "startChar": 4,
        "endLine": 702,
        "endChar": 18
      },
      "revId": "09e063f36be92f3634c14a1edf07b98372756cd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b0067df1_d9b5d786",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 821,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2019-01-08T01:19:20Z",
      "side": 1,
      "message": "minor thing, but you\u0027re calling if (stageCopy) four times here. It might be more efficient to do the check one time, and use inlined helpers to manage code repetition. but we can optimize this later as copySubImage might not be a common call. maybe leave a note/comment?",
      "range": {
        "startLine": 821,
        "startChar": 4,
        "endLine": 821,
        "endChar": 18
      },
      "revId": "09e063f36be92f3634c14a1edf07b98372756cd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "82e881f9_c6ae99d7",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 821,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-01-08T17:52:19Z",
      "side": 1,
      "message": "I refactored this to do only one test. The common code was really just the `for` and `utilsVk.copyImage()`, and it ended up much cleaner duplicating that.",
      "parentUuid": "b0067df1_d9b5d786",
      "range": {
        "startLine": 821,
        "startChar": 4,
        "endLine": 821,
        "endChar": 18
      },
      "revId": "09e063f36be92f3634c14a1edf07b98372756cd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba0461e5_1d21227d",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 826,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2019-01-08T01:19:20Z",
      "side": 1,
      "message": "I actually have a function ImageHelper::init2DStaging. Can we make that work?",
      "range": {
        "startLine": 826,
        "startChar": 32,
        "endLine": 826,
        "endChar": 36
      },
      "revId": "09e063f36be92f3634c14a1edf07b98372756cd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fbb6ba81_1230fe60",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 826,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-01-08T17:52:19Z",
      "side": 1,
      "message": "See response in `ImageHelper::init()`.",
      "parentUuid": "ba0461e5_1d21227d",
      "range": {
        "startLine": 826,
        "startChar": 32,
        "endLine": 826,
        "endChar": 36
      },
      "revId": "09e063f36be92f3634c14a1edf07b98372756cd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "241261f8_81814995",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.h",
        "patchSetId": 6
      },
      "lineNbr": 86,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2019-01-08T01:19:20Z",
      "side": 1,
      "message": "const",
      "range": {
        "startLine": 86,
        "startChar": 40,
        "endLine": 86,
        "endChar": 54
      },
      "revId": "09e063f36be92f3634c14a1edf07b98372756cd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "58eeab45_0a39775a",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.h",
        "patchSetId": 6
      },
      "lineNbr": 86,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-01-08T17:52:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "241261f8_81814995",
      "range": {
        "startLine": 86,
        "startChar": 40,
        "endLine": 86,
        "endChar": 54
      },
      "revId": "09e063f36be92f3634c14a1edf07b98372756cd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "37c76900_00d9b55a",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.h",
        "patchSetId": 6
      },
      "lineNbr": 107,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-01-07T19:49:16Z",
      "side": 1,
      "message": "It makes sense to me to use inheritance instead.",
      "range": {
        "startLine": 86,
        "startChar": 0,
        "endLine": 107,
        "endChar": 10
      },
      "revId": "09e063f36be92f3634c14a1edf07b98372756cd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "85f89422_f653dad2",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.h",
        "patchSetId": 6
      },
      "lineNbr": 107,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-01-07T21:35:14Z",
      "side": 1,
      "message": "Trying to avoid having an allocation per item in `mSubresourceUpdates`.",
      "parentUuid": "37c76900_00d9b55a",
      "range": {
        "startLine": 86,
        "startChar": 0,
        "endLine": 107,
        "endChar": 10
      },
      "revId": "09e063f36be92f3634c14a1edf07b98372756cd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa9dfe2f_52b15869",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.h",
        "patchSetId": 6
      },
      "lineNbr": 107,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-01-07T23:48:05Z",
      "side": 1,
      "message": "Could you point me to where you bulk-allocate items in mSubresourceUpdates?\nI only found emplace_back(), which should be per item, right?\nunions are not so common in ANGLE code.\nPerformance wise, I don\u0027t expect to be much of a difference.\nHard to say without profiling.\nLet\u0027s see what Jamie thinks.",
      "parentUuid": "85f89422_f653dad2",
      "range": {
        "startLine": 86,
        "startChar": 0,
        "endLine": 107,
        "endChar": 10
      },
      "revId": "09e063f36be92f3634c14a1edf07b98372756cd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5201d5e1_d4a0d138",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.h",
        "patchSetId": 6
      },
      "lineNbr": 107,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2019-01-08T01:19:20Z",
      "side": 1,
      "message": "Definitely not inheritance because of dynamic allocations and virtual calls. I can see that unions might save some memory storage. I didn\u0027t see anything in the Google or Chromium style guides that prohibit unions. But it is a bit ugly. If we don\u0027t like the union I would just store all the data instead of unioning it. Maybe let\u0027s start with that design and optimize it later when we\u0027re analyzing a perf test?",
      "parentUuid": "aa9dfe2f_52b15869",
      "range": {
        "startLine": 86,
        "startChar": 0,
        "endLine": 107,
        "endChar": 10
      },
      "revId": "09e063f36be92f3634c14a1edf07b98372756cd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "21a35aca_298c7f78",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.h",
        "patchSetId": 6
      },
      "lineNbr": 107,
      "author": {
        "id": 1001921
      },
      "writtenOn": "2019-01-08T17:24:45Z",
      "side": 1,
      "message": "If dynamic allocations and virtual calls are a concern, perhaps C++ was a wrong choice of language for this project.",
      "parentUuid": "5201d5e1_d4a0d138",
      "range": {
        "startLine": 86,
        "startChar": 0,
        "endLine": 107,
        "endChar": 10
      },
      "revId": "09e063f36be92f3634c14a1edf07b98372756cd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a1db218_40bc307f",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.h",
        "patchSetId": 6
      },
      "lineNbr": 107,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2019-01-08T17:51:23Z",
      "side": 1,
      "message": "Didn\u0027t mean to imply the dynamic allocation and virtual calls are a problem in general. This function is on the hot path of TexSubImage updates and ideally we would not do any dynamic allocation. A virtual call might not be a big deal but you can\u0027t do virtual without dynamic allocation here AFAIK.",
      "parentUuid": "21a35aca_298c7f78",
      "range": {
        "startLine": 86,
        "startChar": 0,
        "endLine": 107,
        "endChar": 10
      },
      "revId": "09e063f36be92f3634c14a1edf07b98372756cd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "673e99b9_6493553b",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.h",
        "patchSetId": 6
      },
      "lineNbr": 107,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-01-08T17:52:19Z",
      "side": 1,
      "message": "@Yuly, the \"bulk\" allocations are done inside `std::vector`.\n\n---\n\nI used nameless unions and structs here, which means for the user of the struct, the above layout and this one are used identically:\n\nstruct {\n        bool fromBuffer;\n        VkBuffer bufferHandle;\n        VkBufferImageCopy bufferCopyRegion;\n        vk::ImageHelper *image;\n        VkImageCopy imageCopyRegion;\n};\n\nIf I replace the struct with this one, there\u0027s no change necessary anywhere. Only difference is that the one with union uses about half the memory. What\u0027s not to love?",
      "parentUuid": "5201d5e1_d4a0d138",
      "range": {
        "startLine": 86,
        "startChar": 0,
        "endLine": 107,
        "endChar": 10
      },
      "revId": "09e063f36be92f3634c14a1edf07b98372756cd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cf3de030_6c8ff3b0",
        "filename": "src/libANGLE/renderer/vulkan/UtilsVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 706,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2019-01-08T01:19:20Z",
      "side": 1,
      "message": "this looks fishy to me. You might need a barrier even if the current layout is correct. But I\u0027m not sure.",
      "range": {
        "startLine": 697,
        "startChar": 0,
        "endLine": 706,
        "endChar": 5
      },
      "revId": "09e063f36be92f3634c14a1edf07b98372756cd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "70a24e88_ccdbf00e",
        "filename": "src/libANGLE/renderer/vulkan/UtilsVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 706,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-01-08T17:52:19Z",
      "side": 1,
      "message": "Generally that\u0027s true, which is why I didn\u0027t auto-ignore barriers in `changeLayoutWithStages` itself. Not in this case though. If the src layout is SHADER_READ_ONLY_OPTIMAL already, it must have gone through this transition either here or in ProgramVK, both of which do this exact same transition. As long as the transitions to SHADER_READ_ONLY_OPTIMAL are done in this way, they can be guarded against like this to avoid unnecessary barriers. Not that this is particularly through with SHADER_READ_ONLY_OPTIMAL (any writable layout would need to account for WaW hazards even in the same layout).\n\nI personally consider this a temporary state though. I plan to further optimize the layout transition barriers (at some point) to be much tighter, and that would mean storing the current stage (along side current layout) as well as expected src access mask on next transition. Doing that, special cases like this can better be handled inside `changeLayoutWithStages` and unnecessary memory barriers and/or execution barriers removed.\n\nBTW, I can show you how the graph changes to allow much more parallelism with this removed.",
      "parentUuid": "cf3de030_6c8ff3b0",
      "range": {
        "startLine": 697,
        "startChar": 0,
        "endLine": 706,
        "endChar": 5
      },
      "revId": "09e063f36be92f3634c14a1edf07b98372756cd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0c540011_ad2d9c3c",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 6
      },
      "lineNbr": 469,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2019-01-08T01:19:20Z",
      "side": 1,
      "message": "can you remove this new parameter if you use init2DStaging?",
      "range": {
        "startLine": 468,
        "startChar": 40,
        "endLine": 469,
        "endChar": 42
      },
      "revId": "09e063f36be92f3634c14a1edf07b98372756cd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fe4b8da7_535cd977",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 6
      },
      "lineNbr": 469,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-01-08T17:52:19Z",
      "side": 1,
      "message": "`init2DStaging` is customized for CPU-interaction. That\u0027s apparent from the linear tiling, host-visible memory etc. My use-case needs a device-local image in optimal tiling.\n\nAlso, wouldn\u0027t we need this for GLES3 anyway?",
      "parentUuid": "0c540011_ad2d9c3c",
      "range": {
        "startLine": 468,
        "startChar": 40,
        "endLine": 469,
        "endChar": 42
      },
      "revId": "09e063f36be92f3634c14a1edf07b98372756cd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9457993a_4b5326c3",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 6
      },
      "lineNbr": 488,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2019-01-08T01:19:20Z",
      "side": 1,
      "message": "ref",
      "range": {
        "startLine": 488,
        "startChar": 18,
        "endLine": 488,
        "endChar": 31
      },
      "revId": "09e063f36be92f3634c14a1edf07b98372756cd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "05b52fc4_da2f7fd1",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.h",
        "patchSetId": 6
      },
      "lineNbr": 488,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-01-08T17:52:19Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "9457993a_4b5326c3",
      "range": {
        "startLine": 488,
        "startChar": 18,
        "endLine": 488,
        "endChar": 31
      },
      "revId": "09e063f36be92f3634c14a1edf07b98372756cd5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}