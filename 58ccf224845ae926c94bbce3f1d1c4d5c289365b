{
  "comments": [
    {
      "key": {
        "uuid": "13a79a59_ee4a4e2b",
        "filename": "src/libANGLE/PackedGLEnums.h",
        "patchSetId": 2
      },
      "lineNbr": 128,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-12-01T22:36:42Z",
      "side": 1,
      "message": "can we use angle::BitSet for this?",
      "range": {
        "startLine": 128,
        "startChar": 41,
        "endLine": 128,
        "endChar": 47
      },
      "revId": "58ccf224845ae926c94bbce3f1d1c4d5c289365b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eda2bae9_0e11f91f",
        "filename": "src/libANGLE/PackedGLEnums.h",
        "patchSetId": 2
      },
      "lineNbr": 128,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2017-12-04T14:40:15Z",
      "side": 1,
      "message": "No, but it should work. Inheriting from angle::BitSet wouldn\u0027t work though because either the inheritance would be private (in which case a member is better) or there will be member functions exposed that take an integer index instead of an enum index.",
      "parentUuid": "13a79a59_ee4a4e2b",
      "range": {
        "startLine": 128,
        "startChar": 41,
        "endLine": 128,
        "endChar": 47
      },
      "revId": "58ccf224845ae926c94bbce3f1d1c4d5c289365b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c2d554c6_7cd42661",
        "filename": "src/libANGLE/PackedGLEnums.h",
        "patchSetId": 2
      },
      "lineNbr": 128,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2017-12-04T16:47:13Z",
      "side": 1,
      "message": "Actually what would be the advantage of using angle::BitSet here?",
      "parentUuid": "eda2bae9_0e11f91f",
      "range": {
        "startLine": 128,
        "startChar": 41,
        "endLine": 128,
        "endChar": 47
      },
      "revId": "58ccf224845ae926c94bbce3f1d1c4d5c289365b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "58795b33_ca9fd27e",
        "filename": "src/libANGLE/PackedGLEnums.h",
        "patchSetId": 2
      },
      "lineNbr": 128,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2017-12-04T18:20:44Z",
      "side": 1,
      "message": "The two things I was thinking of were to decrease code duplication (we already had two custom bitset classes) and that BitSetT has optimized custom implementations for 32 and 64-bits. I think with a bit of tweaking the BitSetT class can be extended to support your use case, I think that\u0027d be great if you would consider letting us use it here. See sample implementation here: https://crrev.com/c/804177 . If you are on board I can make a prior split patch to refactor BitSetT to accommodate your use case (or feel free to integrate the change into this CL).",
      "parentUuid": "c2d554c6_7cd42661",
      "range": {
        "startLine": 128,
        "startChar": 41,
        "endLine": 128,
        "endChar": 47
      },
      "revId": "58ccf224845ae926c94bbce3f1d1c4d5c289365b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}