{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "9a097a8a_34ae79cc",
        "filename": "src/libANGLE/Texture.h",
        "patchSetId": 3
      },
      "lineNbr": 669,
      "author": {
        "id": 1543967
      },
      "writtenOn": "2023-05-09T17:25:49Z",
      "side": 1,
      "message": "This is a pretty heavy handed addition, just to achieve what is effectively a weak Texture reference. Is there a better mechanism to do this?\n\nPLS holds a TextureID, but needs a way to tell if that TextureID has been deleted.",
      "revId": "9f558fbcbf56180cad13a2562a8e4dc4738bd4a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0da60bb4_0ff4f0ae",
        "filename": "src/libANGLE/Texture.h",
        "patchSetId": 3
      },
      "lineNbr": 669,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-05-11T02:14:06Z",
      "side": 1,
      "message": "Help me understand, why was `PixelLocalStoragePlane::mTextureRef` ok before, but now has to be turned into a global id?",
      "parentUuid": "9a097a8a_34ae79cc",
      "revId": "9f558fbcbf56180cad13a2562a8e4dc4738bd4a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "620c7a2f_6aaa9c37",
        "filename": "src/libANGLE/Texture.h",
        "patchSetId": 3
      },
      "lineNbr": 669,
      "author": {
        "id": 1543967
      },
      "writtenOn": "2023-05-11T03:11:11Z",
      "side": 1,
      "message": "It doesn\u0027t have to. The rationale was that before, since it was being converted to memoryless anyway, and most memoryless planes consume memory, it was pretty harmless to keep that texture allocation alive until the framebuffer let it go.\n\nNow, since the spec states that the plane should be deinitialized, it feels worse to keep a reference that prevents the texture memory from being deleted. The idea of `globallyUniqueID` was just to be able to tell if `mTextureID` had been deleted, without keeping a chunk of memory alive on the GPU.\n\nI\u0027m happy to just go back to mTextureRef if it\u0027s acceptable. The global id is a hack.",
      "parentUuid": "0da60bb4_0ff4f0ae",
      "revId": "9f558fbcbf56180cad13a2562a8e4dc4738bd4a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "388ed5f5_0b32474d",
        "filename": "src/libANGLE/Texture.h",
        "patchSetId": 3
      },
      "lineNbr": 669,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-05-11T13:53:36Z",
      "side": 1,
      "message": "Got it. What you _really_ want is to be notified about the texture deletion and reset `mTextureRef` to nullptr. You don\u0027t need to \"check if deleted\" later, because there\u0027d be no texture referenced.\n\nWe do that with the observer pattern. The plane needs to add itself as an observer of the texture. The texture would need to `onStateChange(SubjectMessage::StorageReleased)` or something (need to make the `StorageReleased` comment more generic), and the plane would process that in `onSubjectStateChanged` to set the pointer to nullptr.",
      "parentUuid": "620c7a2f_6aaa9c37",
      "revId": "9f558fbcbf56180cad13a2562a8e4dc4738bd4a8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}