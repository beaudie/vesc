{
  "comments": [
    {
      "key": {
        "uuid": "7205c96c_c36399ad",
        "filename": "src/libANGLE/GLES1State.cpp",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-05-18T12:13:08Z",
      "side": 1,
      "message": "this can go in an anonymous block",
      "range": {
        "startLine": 28,
        "startChar": 0,
        "endLine": 28,
        "endChar": 57
      },
      "revId": "241a2a0b456efaf270890073b88277451f68af76",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d0ba1133_9713c9c6",
        "filename": "src/libANGLE/GLES1State.cpp",
        "patchSetId": 1
      },
      "lineNbr": 328,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-05-18T18:07:43Z",
      "side": 1,
      "message": "Can you refactor these into queryutils.h with simple getters/setters for the LightParameters objects in GLES1State?  Same for the MaterialState.  We\u0027re trying to separate these objects a bit more from the GL API with it\u0027s giant enum switches.",
      "range": {
        "startLine": 328,
        "startChar": 17,
        "endLine": 328,
        "endChar": 35
      },
      "revId": "241a2a0b456efaf270890073b88277451f68af76",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "879471a5_6baf3b2a",
        "filename": "src/libANGLE/GLES1State.cpp",
        "patchSetId": 1
      },
      "lineNbr": 334,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-05-18T12:13:08Z",
      "side": 1,
      "message": "nit: maybe don\u0027t use auto here",
      "range": {
        "startLine": 334,
        "startChar": 4,
        "endLine": 334,
        "endChar": 9
      },
      "revId": "241a2a0b456efaf270890073b88277451f68af76",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dda91f93_f901f22d",
        "filename": "src/libANGLE/GLES1State.cpp",
        "patchSetId": 1
      },
      "lineNbr": 466,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2018-05-18T15:04:02Z",
      "side": 1,
      "message": "Instead of memcpys, maybe we could have static Color Color::FromData(const float*)?\n\nSame thing for void Color::WriteTo(float*) or something similar?",
      "revId": "241a2a0b456efaf270890073b88277451f68af76",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "79154e51_275d10d1",
        "filename": "src/libANGLE/GLES1State.h",
        "patchSetId": 1
      },
      "lineNbr": 170,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2018-05-18T15:04:02Z",
      "side": 1,
      "message": "I assume these will be used by validation functions too or they would be static to GLES1State.cpp? Can we have the entry-point code too in this CL?",
      "revId": "241a2a0b456efaf270890073b88277451f68af76",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}