{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2244d353_e12a7de7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2021-05-13T22:40:41Z",
      "side": 1,
      "message": "The thing I worried is that combined with sub-allocation from your previous CL, the offset is going to be change frequently, since the offset here the offsetWithInBuffer+offsetFromSubAllocator, and that can change from each allocation. That will practically defeat the cache. Maybe we should leave the offset/range out of DS cache and always update them even in cache hit?",
      "revId": "4067f32560a23ded321f35f86ed69d925aad4fbd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b6e65428_cc60c1e0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-05-14T02:35:03Z",
      "side": 1,
      "message": "2 points:\n\n1. I doubt the application would make the transform feedback buffer make new allocations frequently. Chances are they allocate it and just use it.\n2. This only affects transform feedback emulation.\n\nEspecially with #2, are you satisfied that this practically means only swiftshader is affected?",
      "parentUuid": "2244d353_e12a7de7",
      "revId": "4067f32560a23ded321f35f86ed69d925aad4fbd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "de24131f_c8981f26",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "patchSetId": 1
      },
      "lineNbr": 3013,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-05-13T17:31:39Z",
      "side": 1,
      "message": "what is mbuffercount - 1 here?",
      "range": {
        "startLine": 3013,
        "startChar": 69,
        "endLine": 3013,
        "endChar": 82
      },
      "revId": "4067f32560a23ded321f35f86ed69d925aad4fbd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "73d9502c_9fd5ddfc",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.cpp",
        "patchSetId": 1
      },
      "lineNbr": 3013,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-05-13T17:35:01Z",
      "side": 1,
      "message": "mBufferCount includes 1 for the default uniforms buffer. See ref\n\nI\u0027ll add a constant for it.",
      "parentUuid": "de24131f_c8981f26",
      "range": {
        "startLine": 3013,
        "startChar": 69,
        "endLine": 3013,
        "endChar": 82
      },
      "revId": "4067f32560a23ded321f35f86ed69d925aad4fbd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "898471d8_461debb1",
        "filename": "src/libANGLE/renderer/vulkan/vk_cache_utils.h",
        "patchSetId": 1
      },
      "lineNbr": 1132,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-05-13T17:35:01Z",
      "side": 1,
      "message": "Ref",
      "revId": "4067f32560a23ded321f35f86ed69d925aad4fbd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}