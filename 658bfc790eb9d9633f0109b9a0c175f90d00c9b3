{
  "comments": [
    {
      "key": {
        "uuid": "f7268b4e_7c890d39",
        "filename": "src/common/angleutils.cpp",
        "patchSetId": 2
      },
      "lineNbr": 49,
      "author": {
        "id": 1001629
      },
      "writtenOn": "2015-01-30T23:22:20Z",
      "side": 1,
      "message": "Isn\u0027t regular FormatString() thread-safe already?",
      "revId": "658bfc790eb9d9633f0109b9a0c175f90d00c9b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f74dab10_5b2303a7",
        "filename": "src/common/angleutils.cpp",
        "patchSetId": 2
      },
      "lineNbr": 49,
      "author": {
        "id": 1115160
      },
      "writtenOn": "2015-01-31T01:17:41Z",
      "side": 1,
      "message": "The static variable \"buffer\" isn\u0027t thread-safe.",
      "parentUuid": "f7268b4e_7c890d39",
      "revId": "658bfc790eb9d9633f0109b9a0c175f90d00c9b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f74dab10_db0393ed",
        "filename": "src/common/angleutils.cpp",
        "patchSetId": 2
      },
      "lineNbr": 49,
      "author": {
        "id": 1001629
      },
      "writtenOn": "2015-01-31T01:35:42Z",
      "side": 1,
      "message": "Can it just be made non-static? Having thread-safe and thread-unsafe functions seems strange to me api-wise.",
      "parentUuid": "f74dab10_5b2303a7",
      "revId": "658bfc790eb9d9633f0109b9a0c175f90d00c9b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b7217333_1ffc8bc5",
        "filename": "src/common/angleutils.cpp",
        "patchSetId": 2
      },
      "lineNbr": 49,
      "author": {
        "id": 1115160
      },
      "writtenOn": "2015-01-31T02:13:56Z",
      "side": 1,
      "message": "We had a discussion about this in the original code-review. I originally planned to put a mutex here, but we settled on this implementation so that C++11 features weren\u0027t in shared code.\n\nI\u0027d be fine if we always used the non-static version.",
      "parentUuid": "f74dab10_db0393ed",
      "revId": "658bfc790eb9d9633f0109b9a0c175f90d00c9b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "17515fa8_fc6449b2",
        "filename": "src/common/angleutils.cpp",
        "patchSetId": 2
      },
      "lineNbr": 49,
      "author": {
        "id": 1001629
      },
      "writtenOn": "2015-01-31T02:15:09Z",
      "side": 1,
      "message": "I mean, can\u0027t you just put \"buffer\" on the stack? Then you don\u0027t need a mutex or anything.",
      "parentUuid": "b7217333_1ffc8bc5",
      "revId": "658bfc790eb9d9633f0109b9a0c175f90d00c9b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "17515fa8_bc5ec1dc",
        "filename": "src/common/angleutils.cpp",
        "patchSetId": 2
      },
      "lineNbr": 49,
      "author": {
        "id": 1115160
      },
      "writtenOn": "2015-01-31T02:18:53Z",
      "side": 1,
      "message": "Yes, that would be fine with me. \n\nI was referring to that when I said \"I\u0027d be fine if we always used the non-static version\".",
      "parentUuid": "17515fa8_fc6449b2",
      "revId": "658bfc790eb9d9633f0109b9a0c175f90d00c9b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7790db99_4f8cad4a",
        "filename": "src/libANGLE/renderer/d3d/ProgramD3D.cpp",
        "patchSetId": 2
      },
      "lineNbr": 984,
      "author": {
        "id": 1001629
      },
      "writtenOn": "2015-01-30T23:21:10Z",
      "side": 1,
      "message": "can\u0027t use this in chromium yet: chromium-cpp.appspot.com",
      "revId": "658bfc790eb9d9633f0109b9a0c175f90d00c9b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b7217333_bc61ed78",
        "filename": "src/libANGLE/renderer/d3d/ProgramD3D.cpp",
        "patchSetId": 2
      },
      "lineNbr": 984,
      "author": {
        "id": 1115160
      },
      "writtenOn": "2015-01-31T01:17:41Z",
      "side": 1,
      "message": "This is limited to D3D-only code, which is compiled solely on Windows. My understanding from the previous review is that more C++11 features are permissible here.",
      "parentUuid": "7790db99_4f8cad4a",
      "revId": "658bfc790eb9d9633f0109b9a0c175f90d00c9b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "17515fa8_dc786d63",
        "filename": "src/libANGLE/renderer/d3d/ProgramD3D.cpp",
        "patchSetId": 2
      },
      "lineNbr": 984,
      "author": {
        "id": 1001629
      },
      "writtenOn": "2015-01-31T01:35:42Z",
      "side": 1,
      "message": "No, having a per-OS policy is confusing and makes it difficult to move code around. So the policy applies to all platforms.\n\nAlso, the asyn / atomic stuff in particular needs to be reviewed for XP compat before we\u0027ll use it.",
      "parentUuid": "b7217333_bc61ed78",
      "revId": "658bfc790eb9d9633f0109b9a0c175f90d00c9b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f74dab10_9bb42bd3",
        "filename": "src/libANGLE/renderer/d3d/ProgramD3D.cpp",
        "patchSetId": 2
      },
      "lineNbr": 984,
      "author": {
        "id": 1115160
      },
      "writtenOn": "2015-01-31T02:13:56Z",
      "side": 1,
      "message": "I think we\u0027ll need Jamie or Geoff\u0027s input here. That\u0027s different to what I\u0027ve been told previously.",
      "parentUuid": "17515fa8_dc786d63",
      "revId": "658bfc790eb9d9633f0109b9a0c175f90d00c9b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "17515fa8_dcddcde5",
        "filename": "src/libANGLE/renderer/d3d/ProgramD3D.cpp",
        "patchSetId": 2
      },
      "lineNbr": 984,
      "author": {
        "id": 1115160
      },
      "writtenOn": "2015-01-31T02:45:35Z",
      "side": 1,
      "message": "Regarding XP compat: I believe that Chrome doesn\u0027t use D3D to render WebGL on XP (or Vista IIRC), and this change is isolated deep within D3D-specific code.",
      "parentUuid": "f74dab10_9bb42bd3",
      "revId": "658bfc790eb9d9633f0109b9a0c175f90d00c9b3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}