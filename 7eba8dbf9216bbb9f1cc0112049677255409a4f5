{
  "comments": [
    {
      "key": {
        "uuid": "b02442dc_ad3ebfef",
        "filename": "src/compiler/translator/OutputGLSLBase.cpp",
        "patchSetId": 12
      },
      "lineNbr": 1226,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2019-10-25T21:28:52Z",
      "side": 1,
      "message": "Please use format TODO(crbug.com/angleproject/XXYYZZ) or TODO(shaobo.yan@intel.com).",
      "revId": "7eba8dbf9216bbb9f1cc0112049677255409a4f5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "47bb7a08_c54e0160",
        "filename": "src/compiler/translator/OutputGLSLBase.cpp",
        "patchSetId": 12
      },
      "lineNbr": 1226,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-10-26T01:00:15Z",
      "side": 1,
      "message": "Suggestion: use http://anglebug.com/#### , that way it\u0027s located easily and concisely.\n\n(Aside: we can at some point update the test expectations links for ANGLE to use anglebug.com intead of crbug.com/angleproject)",
      "parentUuid": "b02442dc_ad3ebfef",
      "revId": "7eba8dbf9216bbb9f1cc0112049677255409a4f5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9a516198_013a4013",
        "filename": "src/compiler/translator/util.cpp",
        "patchSetId": 12
      },
      "lineNbr": 363,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2019-10-25T21:28:52Z",
      "side": 1,
      "message": "Doesn\u0027t this need a TODO as well to generalize this for other platforms?",
      "range": {
        "startLine": 363,
        "startChar": 25,
        "endLine": 363,
        "endChar": 34
      },
      "revId": "7eba8dbf9216bbb9f1cc0112049677255409a4f5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d424fc9f_e19b6d12",
        "filename": "src/tests/compiler_tests/SamplerVideoWEBGL_test.cpp",
        "patchSetId": 12
      },
      "lineNbr": 80,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2019-10-25T21:28:52Z",
      "side": 1,
      "message": "Sorry, but this looks wrong. The point of samplerVideoWebGL is that it may abstract over multiple different texture types, not just texture2D.\n\nI\u0027ve just posted the following pull request updating the extension specification:\n  https://github.com/KhronosGroup/WebGL/pull/2951\n\nCould you please review it and provide your feedback?\n\nIf it looks okay, could you please update this pull request to use textureVideoWEBGL in ESSL 1.00 shaders? It\u0027s fine to continue to use the overloaded \"texture\" function in ESSL 3.00 shaders.\n\nThanks.",
      "range": {
        "startLine": 80,
        "startChar": 28,
        "endLine": 80,
        "endChar": 37
      },
      "revId": "7eba8dbf9216bbb9f1cc0112049677255409a4f5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4faf5dd0_4b27ff57",
        "filename": "src/tests/gl_tests/WEBGLVideoTextureTest.cpp",
        "patchSetId": 12
      },
      "lineNbr": 64,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2019-10-25T21:28:52Z",
      "side": 1,
      "message": "Same issue here.",
      "range": {
        "startLine": 64,
        "startChar": 19,
        "endLine": 64,
        "endChar": 28
      },
      "revId": "7eba8dbf9216bbb9f1cc0112049677255409a4f5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b332de7a_47bd3cde",
        "filename": "src/tests/gl_tests/WEBGLVideoTextureTest.cpp",
        "patchSetId": 12
      },
      "lineNbr": 71,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2019-10-25T21:28:52Z",
      "side": 1,
      "message": "This test should be using the synthetic GL_TEXTURE_VIDEO_IMAGE_WEBGL binding point - which it doesn\u0027t look like is implemented in this pull request.",
      "range": {
        "startLine": 71,
        "startChar": 18,
        "endLine": 71,
        "endChar": 31
      },
      "revId": "7eba8dbf9216bbb9f1cc0112049677255409a4f5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "07056895_89e391b1",
        "filename": "src/tests/gl_tests/WEBGLVideoTextureTest.cpp",
        "patchSetId": 12
      },
      "lineNbr": 71,
      "author": {
        "id": 1135559
      },
      "writtenOn": "2019-10-27T02:37:36Z",
      "side": 1,
      "message": "kbr@, Thanks for your reviewing! Per my previous understanding, GL_TEXTURE_VIDEO_IMAGE_WEBGL doesn\u0027t introduce any new native texture type(In the beginning, maps to 2D texturen and external_oes_image), so I think we can add this map logic in blink part. But it seems that you think this part should be in ANGLE too. Should I upload another CL for that part or handle this in this CL?",
      "parentUuid": "b332de7a_47bd3cde",
      "range": {
        "startLine": 71,
        "startChar": 18,
        "endLine": 71,
        "endChar": 31
      },
      "revId": "7eba8dbf9216bbb9f1cc0112049677255409a4f5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5ab079d3_22344c15",
        "filename": "src/tests/gl_tests/WEBGLVideoTextureTest.cpp",
        "patchSetId": 12
      },
      "lineNbr": 71,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2019-10-28T21:46:43Z",
      "side": 1,
      "message": "On macOS, these video textures will actually be GL_TEXTURE_RECTANGLE_ARB type textures, so the abstraction has to be able to handle this possibility. It\u0027s for this reason that the tests should be written using the abstraction. Could you please handle this in this CL? Thanks.",
      "parentUuid": "07056895_89e391b1",
      "range": {
        "startLine": 71,
        "startChar": 18,
        "endLine": 71,
        "endChar": 31
      },
      "revId": "7eba8dbf9216bbb9f1cc0112049677255409a4f5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7de9bbd0_e18a3fd4",
        "filename": "src/tests/gl_tests/WEBGLVideoTextureTest.cpp",
        "patchSetId": 12
      },
      "lineNbr": 71,
      "author": {
        "id": 1135559
      },
      "writtenOn": "2019-10-29T01:06:26Z",
      "side": 1,
      "message": "Thanks for your explain. Sure. Working on the changes now.",
      "parentUuid": "5ab079d3_22344c15",
      "range": {
        "startLine": 71,
        "startChar": 18,
        "endLine": 71,
        "endChar": 31
      },
      "revId": "7eba8dbf9216bbb9f1cc0112049677255409a4f5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b2e95b23_04d20a65",
        "filename": "src/tests/gl_tests/WEBGLVideoTextureTest.cpp",
        "patchSetId": 12
      },
      "lineNbr": 71,
      "author": {
        "id": 1135559
      },
      "writtenOn": "2019-10-29T12:32:16Z",
      "side": 1,
      "message": "Hi, Ken,\nWhen I try to add GL_TEXTURE_VIDEO_IMAGE_WEBGL, I find I need to give it a enum value. Do you have any suggestions about this ?\n\nBR",
      "parentUuid": "7de9bbd0_e18a3fd4",
      "range": {
        "startLine": 71,
        "startChar": 18,
        "endLine": 71,
        "endChar": 31
      },
      "revId": "7eba8dbf9216bbb9f1cc0112049677255409a4f5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "94a8f395_529ad3cb",
        "filename": "src/tests/gl_tests/WEBGLVideoTextureTest.cpp",
        "patchSetId": 12
      },
      "lineNbr": 71,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2019-10-29T18:34:45Z",
      "side": 1,
      "message": "Good point Shaobo. This has been a longstanding oversight in this WebGL extension proposal.\n\nI\u0027ve just revised the extension specification to allocate these enums out of the enum block that was allocated for WebGL some time ago:\nhttps://github.com/KhronosGroup/WebGL/pull/2956\n\nYou can use the GL_ prefix on these constants and put them in an #ifndef GL_WEBGL_video_texture block inside gl2ext_angle.h. Will that work for you?\n\nThanks for persisting with this change!",
      "parentUuid": "b2e95b23_04d20a65",
      "range": {
        "startLine": 71,
        "startChar": 18,
        "endLine": 71,
        "endChar": 31
      },
      "revId": "7eba8dbf9216bbb9f1cc0112049677255409a4f5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0deb5fc7_a474b14d",
        "filename": "src/tests/gl_tests/WEBGLVideoTextureTest.cpp",
        "patchSetId": 12
      },
      "lineNbr": 103,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2019-10-25T21:28:52Z",
      "side": 1,
      "message": "Same concern here.",
      "range": {
        "startLine": 103,
        "startChar": 11,
        "endLine": 103,
        "endChar": 20
      },
      "revId": "7eba8dbf9216bbb9f1cc0112049677255409a4f5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bb47d6f1_6767d19d",
        "filename": "src/tests/gl_tests/WEBGLVideoTextureTest.cpp",
        "patchSetId": 12
      },
      "lineNbr": 115,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2019-10-25T21:28:52Z",
      "side": 1,
      "message": "Same concern here.",
      "range": {
        "startLine": 115,
        "startChar": 18,
        "endLine": 115,
        "endChar": 31
      },
      "revId": "7eba8dbf9216bbb9f1cc0112049677255409a4f5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f6da3da3_3144664f",
        "filename": "src/tests/gl_tests/WEBGLVideoTextureTest.cpp",
        "patchSetId": 12
      },
      "lineNbr": 153,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2019-10-25T21:28:52Z",
      "side": 1,
      "message": "Same concern here - though the ESSL 3.00 shader looks good.",
      "range": {
        "startLine": 153,
        "startChar": 18,
        "endLine": 153,
        "endChar": 31
      },
      "revId": "7eba8dbf9216bbb9f1cc0112049677255409a4f5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}