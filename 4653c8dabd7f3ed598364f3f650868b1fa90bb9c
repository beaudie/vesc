{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "7ec8a550_5afab69f",
        "filename": "src/libANGLE/capture/frame_capture_utils.cpp",
        "patchSetId": 7
      },
      "lineNbr": 59,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-03-22T16:41:05Z",
      "side": 1,
      "message": "what\u0027s with all this using stuff? can we delete it?",
      "range": {
        "startLine": 44,
        "startChar": 0,
        "endLine": 59,
        "endChar": 28
      },
      "revId": "4653c8dabd7f3ed598364f3f650868b1fa90bb9c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "69d4c0d1_7ca1ef15",
        "filename": "src/libANGLE/capture/frame_capture_utils.cpp",
        "patchSetId": 7
      },
      "lineNbr": 59,
      "author": {
        "id": 1491823
      },
      "writtenOn": "2021-03-23T10:02:00Z",
      "side": 1,
      "message": "That\u0027s here so we don\u0027t have to write the namespace below, which would add a lot of clutter (According to the example https://google.github.io/styleguide/cppguide.html#Namespaces it is okay to pull in specific classes like this).",
      "parentUuid": "7ec8a550_5afab69f",
      "range": {
        "startLine": 44,
        "startChar": 0,
        "endLine": 59,
        "endChar": 28
      },
      "revId": "4653c8dabd7f3ed598364f3f650868b1fa90bb9c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2693f153_8b887e12",
        "filename": "src/libANGLE/capture/frame_capture_utils.cpp",
        "patchSetId": 7
      },
      "lineNbr": 59,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-03-26T16:03:48Z",
      "side": 1,
      "message": "Just a minor code pattern difference from the rest of ANGLE. If you don\u0027t mind coding it with the redundant namespaces it would have the effect of looking more like the rest of the code. Very minor issue.",
      "parentUuid": "69d4c0d1_7ca1ef15",
      "range": {
        "startLine": 44,
        "startChar": 0,
        "endLine": 59,
        "endChar": 28
      },
      "revId": "4653c8dabd7f3ed598364f3f650868b1fa90bb9c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "591faee6_a8c111e6",
        "filename": "src/libANGLE/capture/frame_capture_utils.h",
        "patchSetId": 7
      },
      "lineNbr": 17,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-03-22T16:41:05Z",
      "side": 1,
      "message": "nit: closing namespace comment.",
      "revId": "4653c8dabd7f3ed598364f3f650868b1fa90bb9c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f34cdfff_3cf4740c",
        "filename": "src/libANGLE/capture/frame_capture_utils.h",
        "patchSetId": 7
      },
      "lineNbr": 17,
      "author": {
        "id": 1491823
      },
      "writtenOn": "2021-03-23T10:02:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "591faee6_a8c111e6",
      "revId": "4653c8dabd7f3ed598364f3f650868b1fa90bb9c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a05dd24c_79acff27",
        "filename": "src/tests/capture_replay_tests/CaptureReplayTests.cpp",
        "patchSetId": 7
      },
      "lineNbr": 171,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-03-22T16:41:05Z",
      "side": 1,
      "message": "this makes me a bit worried that json formatting could make this inconsistent. any safeguards we could use to make sure it\u0027s formatted consistently?",
      "range": {
        "startLine": 171,
        "startChar": 15,
        "endLine": 171,
        "endChar": 21
      },
      "revId": "4653c8dabd7f3ed598364f3f650868b1fa90bb9c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1366df76_f4c0be8c",
        "filename": "src/tests/capture_replay_tests/CaptureReplayTests.cpp",
        "patchSetId": 7
      },
      "lineNbr": 171,
      "author": {
        "id": 1491823
      },
      "writtenOn": "2021-03-23T10:02:00Z",
      "side": 1,
      "message": "I don\u0027t think there is any formatting rule in rapidjson that can make sure that the output strings are the same length, and I\u0027m aware of this, hence the next commit where I move to std::string for this. Once we find a solution that is satisfying we should squash it into this commit to avoid any breakage.",
      "parentUuid": "a05dd24c_79acff27",
      "range": {
        "startLine": 171,
        "startChar": 15,
        "endLine": 171,
        "endChar": 21
      },
      "revId": "4653c8dabd7f3ed598364f3f650868b1fa90bb9c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6cfb5cb7_6fcfaec5",
        "filename": "src/tests/capture_replay_tests/CaptureReplayTests.cpp",
        "patchSetId": 7
      },
      "lineNbr": 171,
      "author": {
        "id": 1491823
      },
      "writtenOn": "2021-03-23T11:31:38Z",
      "side": 1,
      "message": "I\u0027ve changed the chsnling to use null-terminated strings and strcmp, so we don\u0027t have to worry about different sized of the serializations.",
      "parentUuid": "1366df76_f4c0be8c",
      "range": {
        "startLine": 171,
        "startChar": 15,
        "endLine": 171,
        "endChar": 21
      },
      "revId": "4653c8dabd7f3ed598364f3f650868b1fa90bb9c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}