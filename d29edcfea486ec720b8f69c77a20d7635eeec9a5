{
  "comments": [
    {
      "key": {
        "uuid": "16f373ac_a27cd879",
        "filename": "src/compiler/translator/IntermNode.cpp",
        "patchSetId": 5
      },
      "lineNbr": 1231,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-09-07T14:12:53Z",
      "side": 1,
      "message": "I\u0027m not sure it\u0027s entirely clear what ComponentWise or NonComponentWise mean. \"same return type\" was clearer to me.",
      "range": {
        "startLine": 1231,
        "startChar": 38,
        "endLine": 1231,
        "endChar": 63
      },
      "revId": "d29edcfea486ec720b8f69c77a20d7635eeec9a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d66d5b44_c4f4be51",
        "filename": "src/compiler/translator/IntermNode.cpp",
        "patchSetId": 5
      },
      "lineNbr": 1231,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2016-09-07T14:21:06Z",
      "side": 1,
      "message": "The issue with \"same return type\" is that the basic type of the return type would actually not be the same in some cases, so I thought the name was misleading. With \"component-wise\" I\u0027ve tried to convey that the function folds operations where each component of the result is computed based on one component of the operand. Would \"foldUnarySameDimensionalityReturnType\" or something similar be preferable?",
      "parentUuid": "16f373ac_a27cd879",
      "range": {
        "startLine": 1231,
        "startChar": 38,
        "endLine": 1231,
        "endChar": 63
      },
      "revId": "d29edcfea486ec720b8f69c77a20d7635eeec9a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "36b157f2_7742d061",
        "filename": "src/compiler/translator/IntermNode.h",
        "patchSetId": 5
      },
      "lineNbr": 477,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2016-09-07T14:23:07Z",
      "side": 1,
      "message": "Shouldn\u0027t the type be set in this constructor? The same way TIntermBinary calls promote()",
      "revId": "d29edcfea486ec720b8f69c77a20d7635eeec9a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "56a16ba9_b0537833",
        "filename": "src/compiler/translator/IntermNode.h",
        "patchSetId": 5
      },
      "lineNbr": 477,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2016-09-07T14:27:20Z",
      "side": 1,
      "message": "A follow-up patch will do that.",
      "parentUuid": "36b157f2_7742d061",
      "revId": "d29edcfea486ec720b8f69c77a20d7635eeec9a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "16f373ac_e2b26053",
        "filename": "src/compiler/translator/Intermediate.h",
        "patchSetId": 5
      },
      "lineNbr": 57,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2016-09-07T14:12:53Z",
      "side": 1,
      "message": "nit: PostProcess (caps for static)",
      "range": {
        "startLine": 57,
        "startChar": 29,
        "endLine": 57,
        "endChar": 40
      },
      "revId": "d29edcfea486ec720b8f69c77a20d7635eeec9a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f6741f0d_656946ee",
        "filename": "src/compiler/translator/Intermediate.h",
        "patchSetId": 5
      },
      "lineNbr": 57,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2016-09-07T14:21:06Z",
      "side": 1,
      "message": "Will fix this.",
      "parentUuid": "16f373ac_e2b26053",
      "range": {
        "startLine": 57,
        "startChar": 29,
        "endLine": 57,
        "endChar": 40
      },
      "revId": "d29edcfea486ec720b8f69c77a20d7635eeec9a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "36b157f2_b7538833",
        "filename": "src/compiler/translator/ParseContext.cpp",
        "patchSetId": 5
      },
      "lineNbr": 3430,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2016-09-07T14:23:07Z",
      "side": 1,
      "message": "I\u0027m not sure I understand the promote trying a specific type, can you explain the rational?",
      "revId": "d29edcfea486ec720b8f69c77a20d7635eeec9a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "76890f3e_e9c3557e",
        "filename": "src/compiler/translator/ParseContext.cpp",
        "patchSetId": 5
      },
      "lineNbr": 3430,
      "author": {
        "id": 1142464
      },
      "writtenOn": "2016-09-07T14:27:20Z",
      "side": 1,
      "message": "The function return type has been used as a shortcut to avoid having complete code for determining the return type in promote(). Of course it\u0027s a bit messy because it is nicer to have promote being neatly encapsulated inside the TIntermUnary constructor, and follow-up patches will fix this.",
      "parentUuid": "36b157f2_b7538833",
      "revId": "d29edcfea486ec720b8f69c77a20d7635eeec9a5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}