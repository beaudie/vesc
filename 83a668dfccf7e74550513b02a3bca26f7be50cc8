{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "433d6393_53dcdc45",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-10-06T19:27:15Z",
      "side": 1,
      "message": "Since these files are coming from another project, we should put them under a `third_party/` directory together with a LICENSE and README.chromium. You can `find` examples around in the codebase.\n\nOtherwise no objection to caching the encoders, or using threads. You\u0027d probably want to add a \"feature\" though (as in include/platform/frontend_features.json) to choose between threaded or not, just in case.",
      "revId": "83a668dfccf7e74550513b02a3bca26f7be50cc8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "21d3eced_1a4484c6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1557704
      },
      "writtenOn": "2022-10-06T19:39:30Z",
      "side": 1,
      "message": "So my original idea was to re-home these files into ANGLE (ie: they would be first party to ANGLE, not third party). AstcCpuDecompressor.h would be a public ANGLE header, so that gfxstream can use this code (since we have a dependency on ANGLE). \n\ngfxstream would no longer keep a copy of AstcCpuDecompressor.\n\nDoes that make sense?\n\nOtherwise, if we put them into ANGLE\u0027s third_party, then we have to keep them as first party to gfxstream, any any fixes that we do there needs to be manually propagated over to ANGLE, with the risk of code divergence.\n\n\u003e You\u0027d probably want to add a \"feature\" though (as in include/platform/frontend_features.json) to choose between threaded or not, just in case.\n\nSounds good. I\u0027m thinking of exposing the thread count as a feature. Currently it\u0027s hard coded, but obviously we will want to adjust it. If thread_count \u003d\u003d 1, then we can have a special paths to not use any worker threads.",
      "parentUuid": "433d6393_53dcdc45",
      "revId": "83a668dfccf7e74550513b02a3bca26f7be50cc8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e2c172a_034547b4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-10-06T19:49:54Z",
      "side": 1,
      "message": "It depends I guess on how much you could consider this ANGLE code. If the license at the top says AOSP, then it\u0027s third party. If you change the license to be ANGLE\u0027s, then you probably need to ask the original author if you could do that. If this was originally gfxstream\u0027s code and you are donating it, then sure you could do that :)\n\nThat said, stuff in third_party/ aren\u0027t necessarily git repos pointing elsewhere. For example see how the files in src/libANGLE/renderer/vulkan/shaders/src/third_party/etc_decoder are copies that have been modified by ANGLE.\n\n---\n\nAbout features, unfortunately our features are currently just bool. I think that works ok for now, just have enabled / disabled, and leave it to the pool to decide the thread count based on the system configuration.",
      "parentUuid": "21d3eced_1a4484c6",
      "revId": "83a668dfccf7e74550513b02a3bca26f7be50cc8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "901c5db0_c61af7dd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1557704
      },
      "writtenOn": "2022-10-13T19:38:14Z",
      "side": 1,
      "message": "change is actually not ready for review, but taking it out of WIP status because otherwise gerrit doesn\u0027t send email notifications.",
      "revId": "83a668dfccf7e74550513b02a3bca26f7be50cc8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "22828560_01cd339d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1557704
      },
      "writtenOn": "2022-10-15T00:19:00Z",
      "side": 1,
      "message": "Done, using ANGLE\u0027s license.\n\nRegarding the other point - using a feature to select threaded or not - I\u0027m not sure if there\u0027s a case where we don\u0027t want to use the threaded option? It\u0027s certainly greatly beneficial to decompression speed.",
      "parentUuid": "8e2c172a_034547b4",
      "revId": "83a668dfccf7e74550513b02a3bca26f7be50cc8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "280df03d_3982b571",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-10-15T01:55:40Z",
      "side": 1,
      "message": "About the feature, I have no doubt threaded is better, but we frequently find situations where it\u0027s good to have control. Like some platform comes up and says hey I wish you didn\u0027t spawn threads, or somehow next month chrome comes back with a security issue due to a race condition and we\u0027d want to disable threading for this. It\u0027s a safety valve in the least.",
      "parentUuid": "22828560_01cd339d",
      "revId": "83a668dfccf7e74550513b02a3bca26f7be50cc8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9d3ead8e_0ba75974",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1557704
      },
      "writtenOn": "2022-10-24T20:02:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "280df03d_3982b571",
      "revId": "83a668dfccf7e74550513b02a3bca26f7be50cc8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e1fd6a06_ee66f7c7",
        "filename": "src/image_util/AstcCpuDecompressorImpl.cpp",
        "patchSetId": 3
      },
      "lineNbr": 126,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-10-06T19:27:15Z",
      "side": 1,
      "message": "We have worker threads in WorkerThread.cpp, which the code should definitely use. When built with Chromium, those threads hook into Chromium\u0027s thread pool, which is important for Chromium\u0027s job management.\n\nThat said, ANGLE\u0027s own thread pool implementation is pretty bad (recreates threads every time), so if you need to improve that, it would be welcome!",
      "revId": "83a668dfccf7e74550513b02a3bca26f7be50cc8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "46d99fe7_2aa8970b",
        "filename": "src/image_util/AstcCpuDecompressorImpl.cpp",
        "patchSetId": 3
      },
      "lineNbr": 126,
      "author": {
        "id": 1557704
      },
      "writtenOn": "2022-10-06T19:39:30Z",
      "side": 1,
      "message": "sg, will look into that.",
      "parentUuid": "e1fd6a06_ee66f7c7",
      "revId": "83a668dfccf7e74550513b02a3bca26f7be50cc8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3387cd49_23d8a8d6",
        "filename": "src/image_util/AstcCpuDecompressorImpl.cpp",
        "patchSetId": 3
      },
      "lineNbr": 126,
      "author": {
        "id": 1557704
      },
      "writtenOn": "2022-10-13T19:37:41Z",
      "side": 1,
      "message": "So I ran some perf tests and for larger image size (e.g. 1024x1024), both ANGLE thread pool and my implementation perform similarly (since most of time is spent doing the actual decompression work), but for smaller sizes (16x16) ANGLE\u0027s thread pool is 70 times slower than mine, due to the thread creation costs. \n\nOuch.\n\nAnd optimizing for those smaller sizes is important since mipmapped textures will always have a bunch of smaller sized images, down to 1x1.\n\nI\u0027ll see how hard it would be to improve ANGLE\u0027s thread pool to not re-create the threads.",
      "parentUuid": "46d99fe7_2aa8970b",
      "revId": "83a668dfccf7e74550513b02a3bca26f7be50cc8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e77d0499_524a942d",
        "filename": "src/image_util/AstcCpuDecompressorImpl.cpp",
        "patchSetId": 3
      },
      "lineNbr": 126,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-10-13T20:11:29Z",
      "side": 1,
      "message": "That would be a very welcome change. I suggest making that a separate independent CL, just in case.",
      "parentUuid": "3387cd49_23d8a8d6",
      "revId": "83a668dfccf7e74550513b02a3bca26f7be50cc8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ea7b58af_fa21d69e",
        "filename": "src/image_util/AstcCpuDecompressorImpl.cpp",
        "patchSetId": 3
      },
      "lineNbr": 126,
      "author": {
        "id": 1557704
      },
      "writtenOn": "2022-10-15T00:19:00Z",
      "side": 1,
      "message": "Done https://chromium-review.googlesource.com/c/angle/angle/+/3953905",
      "parentUuid": "e77d0499_524a942d",
      "revId": "83a668dfccf7e74550513b02a3bca26f7be50cc8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}