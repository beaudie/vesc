{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "8466204a_f20efaff",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2021-08-10T21:32:28Z",
      "side": 1,
      "message": "LGTM with some questions.",
      "revId": "55dd2c1be7b83fb7e87d46ea0e98110f8fcca23b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2139b9a2_4e615a17",
        "filename": "scripts/generate_entry_points.py",
        "patchSetId": 4
      },
      "lineNbr": 1582,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2021-08-10T21:32:28Z",
      "side": 1,
      "message": "ref",
      "range": {
        "startLine": 1582,
        "startChar": 39,
        "endLine": 1582,
        "endChar": 51
      },
      "revId": "55dd2c1be7b83fb7e87d46ea0e98110f8fcca23b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "06056e9d_7c1bf431",
        "filename": "scripts/generate_entry_points.py",
        "patchSetId": 4
      },
      "lineNbr": 1582,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-08-10T22:45:11Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "2139b9a2_4e615a17",
      "range": {
        "startLine": 1582,
        "startChar": 39,
        "endLine": 1582,
        "endChar": 51
      },
      "revId": "55dd2c1be7b83fb7e87d46ea0e98110f8fcca23b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5d104fa3_788b31c8",
        "filename": "scripts/generate_entry_points.py",
        "patchSetId": 4
      },
      "lineNbr": 1610,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2021-08-10T21:32:28Z",
      "side": 1,
      "message": "This sticks out as weird to me.  It is also checked for explicitly above (ref).  Is this something an app would actually use, or is it just an ANGLE internal thing that we don\u0027t need to capture?  We should punt on it for that reason as opposed to its complexity.",
      "range": {
        "startLine": 1610,
        "startChar": 0,
        "endLine": 1610,
        "endChar": 77
      },
      "revId": "55dd2c1be7b83fb7e87d46ea0e98110f8fcca23b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3d20fda9_8ec1f8a4",
        "filename": "scripts/generate_entry_points.py",
        "patchSetId": 4
      },
      "lineNbr": 1610,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2021-08-10T21:32:28Z",
      "side": 1,
      "message": "This sticks out as weird to me.  It is also checked for above (ref).  Is this something an app would actually use, or is it an internal ANGLE thing?  We should punt on it for that reason as opposed to its complexity.",
      "range": {
        "startLine": 1610,
        "startChar": 0,
        "endLine": 1610,
        "endChar": 77
      },
      "revId": "55dd2c1be7b83fb7e87d46ea0e98110f8fcca23b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a26fd019_6f37ee17",
        "filename": "scripts/generate_entry_points.py",
        "patchSetId": 4
      },
      "lineNbr": 1610,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-08-10T22:45:11Z",
      "side": 1,
      "message": "\u003e Is this something an app would actually use, or is it an internal ANGLE thing?\n\nThis is an ANGLE-specific EGL class that\u0027s created within the EGL entry point (entry_points_egl_autogen.cpp) and passed along to the appropriate function in egl_stubs.cpp.   Apps don\u0027t create them directly, instead they are created from lists of attributes the app passes in.\n\n\u003e We should punt on it for that reason as opposed to its complexity.\n\nI\u0027m not sure what you mean here.   The ParamValue union has a lot of ANGLE-specific classes, since the GL and EGL entry points often repackage the GLES/EGL parameters into ANGLE-specific structs/classes/enums/etc.   ParamValue doesn\u0027t hold strictly GL/EGL API parameter types, but a mix of API types and ANGLE-specific structs that are passed to the stub functions, so excluding it because it\u0027s an ANGLE type doesn\u0027t fit with how ParamValue is defined.\n\negl::AttributeMap is a special case since we can\u0027t copy it into the ParamValue union member due to compilation failures.",
      "parentUuid": "3d20fda9_8ec1f8a4",
      "range": {
        "startLine": 1610,
        "startChar": 0,
        "endLine": 1610,
        "endChar": 77
      },
      "revId": "55dd2c1be7b83fb7e87d46ea0e98110f8fcca23b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "17dac22d_93fdde92",
        "filename": "scripts/generate_entry_points.py",
        "patchSetId": 4
      },
      "lineNbr": 1610,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-08-10T22:45:11Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "5d104fa3_788b31c8",
      "range": {
        "startLine": 1610,
        "startChar": 0,
        "endLine": 1610,
        "endChar": 77
      },
      "revId": "55dd2c1be7b83fb7e87d46ea0e98110f8fcca23b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a8599df4_6cf09158",
        "filename": "scripts/generate_entry_points.py",
        "patchSetId": 4
      },
      "lineNbr": 1610,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2021-08-10T23:07:10Z",
      "side": 1,
      "message": "Do you have an example of what the compilation failure looks like?  I\u0027m mostly curious, I don\u0027t think we\u0027ve excluded something like this before. I\u0027m curious how it manifests.  Are just dropping the capture entrypoints that contain AttributeMap?",
      "parentUuid": "a26fd019_6f37ee17",
      "range": {
        "startLine": 1610,
        "startChar": 0,
        "endLine": 1610,
        "endChar": 77
      },
      "revId": "55dd2c1be7b83fb7e87d46ea0e98110f8fcca23b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9926d511_dc4d66c6",
        "filename": "scripts/generate_entry_points.py",
        "patchSetId": 4
      },
      "lineNbr": 1610,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-08-11T21:19:31Z",
      "side": 1,
      "message": "\u003e Do you have an example of what the compilation failure looks like?\n\nHere is the build error (once the necessary support for egl::AttributeMap is added to the script and FrameCapture.h/cpp).\n\n../../third_party/angle/src/libANGLE/capture/FrameCapture.cpp:4014:15: error: call to implicitly-deleted default constructor of \u0027angle::ParamValue\u0027\nParamCapture::ParamCapture() : type(ParamType::TGLenum), enumGroup(gl::GLenumGroup::DefaultGroup) {}\n              ^\n../../third_party/angle/src/libANGLE/capture/frame_capture_utils_autogen.h:182:23: note: default constructor of \u0027ParamValue\u0027 is implicitly deleted because variant field \u0027AttributeMapVal\u0027 has a non-trivial default constructor\n    egl::AttributeMap AttributeMapVal;\n                      ^\n../../third_party/angle/src/libANGLE/capture/FrameCapture.cpp:4014:15: error: attempt to use a deleted function\nParamCapture::ParamCapture() : type(ParamType::TGLenum), enumGroup(gl::GLenumGroup::DefaultGroup) {}\n              ^\n../../third_party/angle/src/libANGLE/capture/frame_capture_utils_autogen.h:182:23: note: destructor of \u0027ParamValue\u0027 is implicitly deleted because variant field \u0027AttributeMapVal\u0027 has a non-trivial destructor\n    egl::AttributeMap AttributeMapVal;\n    \n\u003e Are just dropping the capture entrypoints that contain AttributeMap?\n\nWe aren\u0027t capturing EGL calls, so there are no entry points to drop.   This is just adding support for EGL parameters/types, since all we care about is generating our own EGL calls and inserting them into the capture (specifically, eglMakeCurrent()).",
      "parentUuid": "a8599df4_6cf09158",
      "range": {
        "startLine": 1610,
        "startChar": 0,
        "endLine": 1610,
        "endChar": 77
      },
      "revId": "55dd2c1be7b83fb7e87d46ea0e98110f8fcca23b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "94f480c0_ab4959e3",
        "filename": "scripts/generate_entry_points.py",
        "patchSetId": 4
      },
      "lineNbr": 1610,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-08-12T11:44:19Z",
      "side": 1,
      "message": "Seeing as your CL is limited to generating a few specific calls, I\u0027m fine if we defer fixing AttributeMap for later. You could add a TODO here for issue 4035 (EGL capture). It shouldn\u0027t be too hard to fix but could require reworking the union, not sure exactly.",
      "parentUuid": "9926d511_dc4d66c6",
      "range": {
        "startLine": 1610,
        "startChar": 0,
        "endLine": 1610,
        "endChar": 77
      },
      "revId": "55dd2c1be7b83fb7e87d46ea0e98110f8fcca23b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "54070316_d583db34",
        "filename": "scripts/generate_entry_points.py",
        "patchSetId": 4
      },
      "lineNbr": 2092,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2021-08-10T21:32:28Z",
      "side": 1,
      "message": "Are you anticipating adding more types here?  If not, maybe just do an equality check as you are with AHardwareBufferConstPointer.  That or move AHardwareBufferConstPointer into this table for consistency.",
      "range": {
        "startLine": 2092,
        "startChar": 9,
        "endLine": 2092,
        "endChar": 25
      },
      "revId": "55dd2c1be7b83fb7e87d46ea0e98110f8fcca23b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f503bb76_c4c9d12f",
        "filename": "scripts/generate_entry_points.py",
        "patchSetId": 4
      },
      "lineNbr": 2092,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-08-10T22:45:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "54070316_d583db34",
      "range": {
        "startLine": 2092,
        "startChar": 9,
        "endLine": 2092,
        "endChar": 25
      },
      "revId": "55dd2c1be7b83fb7e87d46ea0e98110f8fcca23b",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}