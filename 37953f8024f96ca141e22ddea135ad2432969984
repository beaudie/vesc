{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "26049cb8_d54eb330",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-05-29T22:34:12Z",
      "side": 1,
      "message": "shabi, i switched to using dirty bits in PS7, PTAL.",
      "revId": "37953f8024f96ca141e22ddea135ad2432969984",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "20a8bc50_1afbeb5c",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 4894,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-06-01T17:02:28Z",
      "side": 1,
      "message": "Is handling this as part of normal mGraphicsDirtyBits dirty bit handling in ContextVk::setupDraw() too late?\n\nOtherwise, I think this block should be moved into a helper function that\u0027s called by ContextVk::invalidateCurrentTextures(), since it doesn\u0027t really have anything to do with updateActiveTextures() anymore.",
      "revId": "37953f8024f96ca141e22ddea135ad2432969984",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c12fbd3c_936b7a44",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 4894,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-06-01T17:29:18Z",
      "side": 1,
      "message": "the trigger for this is from a dirty texture. Wanted to avoid any sort of dirty bit ordering issues in ContextVk::syncState.\n\nCan add a todo and be a follow up change",
      "parentUuid": "20a8bc50_1afbeb5c",
      "revId": "37953f8024f96ca141e22ddea135ad2432969984",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "216b0316_2513b565",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 4894,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-06-01T17:52:25Z",
      "side": 1,
      "message": "I have to read the CL a few times - I like Tim\u0027s direction of eliminating dirty bits.",
      "parentUuid": "c12fbd3c_936b7a44",
      "revId": "37953f8024f96ca141e22ddea135ad2432969984",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ce26b93_8b43bcb8",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 4894,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-06-01T18:34:41Z",
      "side": 1,
      "message": "from what i understood of tim\u0027s comment, he was talking about relocating the handling of this bit to syncState and was not talking about eliminating dirty bit. I\u0027m not sure what you have in mind jamie",
      "parentUuid": "216b0316_2513b565",
      "revId": "37953f8024f96ca141e22ddea135ad2432969984",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ce772cda_3ef8425f",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 4894,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-06-01T18:39:52Z",
      "side": 1,
      "message": "Well, it doesn\u0027t really make sense to keep this as a dirty bit if you aren\u0027t processing them in the dirty bitset.",
      "parentUuid": "3ce26b93_8b43bcb8",
      "revId": "37953f8024f96ca141e22ddea135ad2432969984",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ded28d8f_4eb1c551",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 4894,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-06-01T18:44:18Z",
      "side": 1,
      "message": "if not dirty bit, it is going to be a cached member var performing the role of the dirtybit, in a kludgier way. Open to suggestions",
      "parentUuid": "ce772cda_3ef8425f",
      "revId": "37953f8024f96ca141e22ddea135ad2432969984",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "90775fa4_1093cd90",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 4894,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-06-01T18:54:44Z",
      "side": 1,
      "message": "Couldn\u0027t it just be a boolean? Is that what you mean by cached member var?",
      "parentUuid": "ded28d8f_4eb1c551",
      "revId": "37953f8024f96ca141e22ddea135ad2432969984",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "12b04249_1c1d67f4",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 4894,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-06-01T19:29:26Z",
      "side": 1,
      "message": "yup, a boolean. Then we need to find the right place to act on that boolean. It cant be immediate since we need to wait for textures to sync",
      "parentUuid": "90775fa4_1093cd90",
      "revId": "37953f8024f96ca141e22ddea135ad2432969984",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6db43945_79777830",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 4894,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-06-01T19:32:09Z",
      "side": 1,
      "message": "What if we store a bit in the texture and check that in updateActiveTextures for each texture we check? Would that lead to a cleaner design? I like that you wouldn\u0027t have to call into ContextVk from TextureVk and instead ContextVk polls the Texture. LMKWYT",
      "parentUuid": "12b04249_1c1d67f4",
      "revId": "37953f8024f96ca141e22ddea135ad2432969984",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "60f8e1f9_c1577191",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 4894,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-06-01T22:04:07Z",
      "side": 1,
      "message": "\u003e Would that lead to a cleaner design?\n\nthat will need us to not reset TextureVk\u0027s dirtbit until ContextVk\u0027s setupDraw. The poll then becomes a non-const method, more like a getAndReset...()\n\n\u003e you wouldn\u0027t have to call into ContextVk from TextureVk\n\ni did not realize dirty bit design was strictly uni-directional\n\n\u003e LMKWYT\n\nif there are n active textures but only 1 among them has a state change it seems wasteful for ContextVk to call a method n times. With a push design, only the transitioned texture would invoke ContextVk\u0027s invalidate method. I will upload a patchset with the push mechanism (and ContextVk\u0027s dirty bit removed) and if needed can go to pull mechanism",
      "parentUuid": "6db43945_79777830",
      "revId": "37953f8024f96ca141e22ddea135ad2432969984",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "31288b81_f8572321",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 4894,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-06-02T15:35:19Z",
      "side": 1,
      "message": "It\u0027s not a stricty uni-directional thing. getAndReset is okay, we can use mutable if necessary. Anyway it\u0027s fine to use this \u0027push\u0027 approach, just would prefer to not use dirty bits except for bits that are processed in setupDraw. Note that updateActiveTextures is called from syncState not setupDraw. Will look for your next CL as described!",
      "parentUuid": "60f8e1f9_c1577191",
      "revId": "37953f8024f96ca141e22ddea135ad2432969984",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0ad4e18c_b63a8329",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 4894,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-06-03T17:24:49Z",
      "side": 1,
      "message": "i took a look at the suggestion and there appears be to be a design conflict.\n\nupdateActiveTextures is called from syncState which has access to gl::Context but mGraphicsDirtyBits handlers are setup to be confined to ContextVk. Updates to Program and ProgramPipeline all need access to gl::Context. This design difference needs to be reconciled if we need to take the mGraphicsDirtyBits approach.\n\nJamie, what am i missing?",
      "parentUuid": "31288b81_f8572321",
      "revId": "37953f8024f96ca141e22ddea135ad2432969984",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8505c106_f1882934",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 4894,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-06-03T17:33:07Z",
      "side": 1,
      "message": "I think you should use your current design. Your issue here is solvable because you have access to the full context state via mState. That aside you should just do what you have here, just minus the dirty bits.",
      "parentUuid": "0ad4e18c_b63a8329",
      "revId": "37953f8024f96ca141e22ddea135ad2432969984",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6a317486_9f896bf7",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 4894,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-06-03T17:34:49Z",
      "side": 1,
      "message": "\u003e just minus the dirty bits\n\njust for clarity, i have already removed the dirty bits from ContextVk. Are you saying i need to remove the dirty bits from TextureVk as well?\n\nif not, is this change land\u0027able?",
      "parentUuid": "8505c106_f1882934",
      "revId": "37953f8024f96ca141e22ddea135ad2432969984",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0a74fc6a_d3a63eb4",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 4894,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-06-03T17:37:02Z",
      "side": 1,
      "message": "Yeah remove the bits from TextureVk as well. Just use a boolean. It\u0027s a bit weird to carry this kind of thing around through all these state variables, but it\u0027s ok I think.",
      "parentUuid": "6a317486_9f896bf7",
      "revId": "37953f8024f96ca141e22ddea135ad2432969984",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "446cb089_09caf78d",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 4894,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-06-03T18:48:10Z",
      "side": 1,
      "message": "Done.\n\nI have made the change but the guidelines for what fits in dirty bits and what doesn\u0027t are quite hazy. Specifically, i felt the TextureVk change fit well into the dirty bit pattern. Is there some documentation that can be added to aid such design decisions?",
      "parentUuid": "0a74fc6a_d3a63eb4",
      "revId": "37953f8024f96ca141e22ddea135ad2432969984",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aa331261_daf36895",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 4894,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-06-03T19:35:52Z",
      "side": 1,
      "message": "Yeah, we should have a design doc for it. The rule I\u0027m following is - it\u0027s an optimization for the patten of \n\nif (a)\n\nif (b)\n\nif (c)\n\nyou can turn that pattern into for (bit in set)\n\nOtherwise use bools. But other people might have different points on that.",
      "parentUuid": "446cb089_09caf78d",
      "revId": "37953f8024f96ca141e22ddea135ad2432969984",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cf256b78_e1929359",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1308,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-06-01T17:02:28Z",
      "side": 1,
      "message": "Previously, we would only recreate the pipeline if there was an immutable sampler present, while this will recreate it for both transitions:\n1.) normal -\u003e immutable\n2.) immutable -\u003e normal (new)\n\nI\u0027m not familiar enough with the specifics: why wasn\u0027t it necessary to recreate the pipeline for the immutable -\u003e normal transition before (and why is it necessary now)?",
      "range": {
        "startLine": 1303,
        "startChar": 0,
        "endLine": 1308,
        "endChar": 5
      },
      "revId": "37953f8024f96ca141e22ddea135ad2432969984",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d03f5d9e_16ad4a08",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1308,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-06-01T17:29:18Z",
      "side": 1,
      "message": "\u003e Previously, we would only recreate the pipeline if there was an immutable sampler present\n\nthis translated to ANGLE recreating the pipeline for every draw in which we had a texture with an immutable sampler, which was wasteful\n\n\u003e why wasn\u0027t it necessary to recreate the pipeline for the immutable -\u003e normal transition before (and why is it necessary now)?\n\nit was necessary then and is necessary now. If you run the test i added with ToT ANGLE, it will throw a few VVLs a.k.a the existing code is buggy/incomplete.",
      "parentUuid": "cf256b78_e1929359",
      "range": {
        "startLine": 1303,
        "startChar": 0,
        "endLine": 1308,
        "endChar": 5
      },
      "revId": "37953f8024f96ca141e22ddea135ad2432969984",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e3b3e1a7_959a2c54",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1308,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-06-01T22:17:07Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "d03f5d9e_16ad4a08",
      "range": {
        "startLine": 1303,
        "startChar": 0,
        "endLine": 1308,
        "endChar": 5
      },
      "revId": "37953f8024f96ca141e22ddea135ad2432969984",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "84f6276a_45d87c15",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 2509,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-06-01T17:02:28Z",
      "side": 1,
      "message": "nit: ANGLE prefers to use explicit types.",
      "range": {
        "startLine": 2509,
        "startChar": 9,
        "endLine": 2509,
        "endChar": 13
      },
      "revId": "37953f8024f96ca141e22ddea135ad2432969984",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "48ebe9e5_50fb9227",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 2509,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2021-06-01T22:17:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "84f6276a_45d87c15",
      "range": {
        "startLine": 2509,
        "startChar": 9,
        "endLine": 2509,
        "endChar": 13
      },
      "revId": "37953f8024f96ca141e22ddea135ad2432969984",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}