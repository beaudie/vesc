{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "1e623f03_d4574f9c",
        "filename": "src/libANGLE/renderer/vulkan/UtilsVk.cpp",
        "patchSetId": 11
      },
      "lineNbr": 4434,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-11-04T04:40:26Z",
      "side": 1,
      "message": "Shouldn\u0027t `image`\u0027s layout be overriden here? The `onImageDrawMipmapGenerationWrite` call makes the image think it\u0027s in color attachment layout... I wonder why there are no validation errors when the image is next used as sampler (and ANGLE inserts a COLOR_ATTACHMENT-\u003eSHADER_READ_ONLY transition)",
      "revId": "d8490829e74d57eca81af14b4f84d1bc6f97b8bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "01d724b4_3e120707",
        "filename": "src/libANGLE/renderer/vulkan/UtilsVk.cpp",
        "patchSetId": 11
      },
      "lineNbr": 4434,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2024-11-04T12:27:29Z",
      "side": 1,
      "message": "\u003e I wonder why there are no validation errors when the image is next used as sampler\n\nindeed, once the last mip is transitioned to shader read-only then it is the case that ALL levels have been individually transitioned but the `ImageHelper`\u0027s layout still thinks it is in color attachment layout. Let me see why the subsequent readpixel works fine",
      "parentUuid": "1e623f03_d4574f9c",
      "revId": "d8490829e74d57eca81af14b4f84d1bc6f97b8bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "27fde562_e16d3cac",
        "filename": "src/libANGLE/renderer/vulkan/UtilsVk.cpp",
        "patchSetId": 11
      },
      "lineNbr": 4434,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2024-11-04T16:35:09Z",
      "side": 1,
      "message": "ok, just before readpixel there is a barrier inserted that transitions this mipmap\u0027d image from color_attachment to transfer_src but i dont see any VVL errors. Maybe there is a bug in the layer itself?\n\nso, do i just add a `updateLayoutWithoutBarrier` to handle such cases where subresources have transitioned to a new layout and the union of the subresources \u003d\u003d full image and we just want to update `ImageHelper::mCurrentLayout` to the new layout without inserting any barrier?",
      "parentUuid": "01d724b4_3e120707",
      "revId": "d8490829e74d57eca81af14b4f84d1bc6f97b8bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad7ced58_d5b0302a",
        "filename": "src/tests/gl_tests/ImageTest.cpp",
        "patchSetId": 11
      },
      "lineNbr": 2276,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-11-04T04:35:06Z",
      "side": 1,
      "message": "This is not quite the same test as I mentioned in the other comment. The blend one in particular is about making sure the load op of the render pass is LOAD instead of DONT_CARE. The load op is a function of whether the contents of the color attachment are valid or not.\n\nSo it\u0027s the `dstTexture` itself that should be rendered too, not used as a sampler. The content validity tracking has no effect on sampler usage of the texture.\n\nWould you please move this to a separate test where the blend-into-mip-1 is done right after `glGenerateMipmap` with nothing in between it? And the blend should be _into_ mip 1, not _sampling from_ mip 1.",
      "revId": "d8490829e74d57eca81af14b4f84d1bc6f97b8bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "357867ab_67788d0c",
        "filename": "src/tests/gl_tests/ImageTest.cpp",
        "patchSetId": 11
      },
      "lineNbr": 2276,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2024-11-04T12:31:44Z",
      "side": 1,
      "message": "do i need a separate test or should it be fine as long as i use an unused mip level (like blending mip 4 into mip 3)?",
      "parentUuid": "ad7ced58_d5b0302a",
      "revId": "d8490829e74d57eca81af14b4f84d1bc6f97b8bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9be28cc4_88ff1c6d",
        "filename": "src/tests/gl_tests/ImageTest.cpp",
        "patchSetId": 11
      },
      "lineNbr": 2276,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-11-04T16:00:45Z",
      "side": 1,
      "message": "\u003e do i need a separate test\n\nThat would be better, the less stuff happens between glGenerateMipmap and the render pass, the higher chance of catching mistakes.\n\n\u003e like blending mip 4 into mip 3\n\nMaybe my comments weren\u0027t clear, all you need to do is blend a constant color (like use the `fs::Red()` program) into a mip. Do _not_ sample from any other mip, the test shouldn\u0027t use the image as a texture, only as a framebuffer attachment.",
      "parentUuid": "357867ab_67788d0c",
      "revId": "d8490829e74d57eca81af14b4f84d1bc6f97b8bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "82916bbc_0f3f0e84",
        "filename": "src/tests/gl_tests/ImageTest.cpp",
        "patchSetId": 11
      },
      "lineNbr": 2276,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-11-04T16:01:44Z",
      "side": 1,
      "message": "Oh, and you can use `glBlendFunc(GL_ONE, GL_ONE)` and like, if you use the `Red` program, verify that green and blue channels contain values coming from mipgen (and they are not garbage).",
      "parentUuid": "9be28cc4_88ff1c6d",
      "revId": "d8490829e74d57eca81af14b4f84d1bc6f97b8bd",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}