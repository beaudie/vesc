{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "d8722b98_0b01d11a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-08-27T01:53:33Z",
      "side": 1,
      "message": "And welcome to the team :)",
      "revId": "f476f01af3d44b3206b814c2d077f9272001e327",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "25ad1869_6aa227d7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2021-08-27T04:25:10Z",
      "side": 1,
      "message": "Good first CL!",
      "revId": "f476f01af3d44b3206b814c2d077f9272001e327",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f0149569_921edd83",
        "filename": "src/libANGLE/validationEGL.cpp",
        "patchSetId": 1
      },
      "lineNbr": 5087,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-08-27T01:53:00Z",
      "side": 1,
      "message": "nit: I suggest 0x%04x as that\u0027s how the constants are defined in the header (so they would be easy to grep)",
      "range": {
        "startLine": 5087,
        "startChar": 73,
        "endLine": 5087,
        "endChar": 75
      },
      "revId": "f476f01af3d44b3206b814c2d077f9272001e327",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "22a31162_c9dfeb3e",
        "filename": "src/libANGLE/validationEGL.cpp",
        "patchSetId": 1
      },
      "lineNbr": 5087,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2021-08-27T04:25:10Z",
      "side": 1,
      "message": "Good suggestion.  It would be good to look at all of the unknown values to see if special formatting is needed.  Using CodeSearch, you can find the EGL API function, and then look up it\u0027s valid parameters in the EGL spec and header.",
      "parentUuid": "f0149569_921edd83",
      "range": {
        "startLine": 5087,
        "startChar": 73,
        "endLine": 5087,
        "endChar": 75
      },
      "revId": "f476f01af3d44b3206b814c2d077f9272001e327",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d9ad3a17_5ce01137",
        "filename": "src/libANGLE/validationEGL.cpp",
        "patchSetId": 1
      },
      "lineNbr": 5087,
      "author": {
        "id": 1520902
      },
      "writtenOn": "2021-08-28T00:40:01Z",
      "side": 1,
      "message": "Thank you Shahbaz and Ian! I changed the format to 0x%04X as you suggested. I made it using uppercase hex format instead of lowercase, as I saw we use uppercase hex (EGL_RGB_BUFFER: 0x308E) in egl.h. I also changed the other 3 lines that print pointers from %016 to %04, as we use 4 digits hex in egl.h.\n\nThe only issue is that -1 will be printed out as 0xFFFFFFFF, when using 0x%04X, and printed out as 0xFFFFFFFFFFFFFFFF when using format 0x%04\" PRIXPTR. I am looking for a solution for this issue. I will keep you updated.",
      "parentUuid": "22a31162_c9dfeb3e",
      "range": {
        "startLine": 5087,
        "startChar": 73,
        "endLine": 5087,
        "endChar": 75
      },
      "revId": "f476f01af3d44b3206b814c2d077f9272001e327",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "36f064c9_31b371d5",
        "filename": "src/libANGLE/validationEGL.cpp",
        "patchSetId": 1
      },
      "lineNbr": 5087,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-08-28T01:58:29Z",
      "side": 1,
      "message": "Excellent. Is -1 any different from other invalid attributes? If not, 0xFF...FF is fine, especially if your concern is just the length of the printed number.",
      "parentUuid": "d9ad3a17_5ce01137",
      "range": {
        "startLine": 5087,
        "startChar": 73,
        "endLine": 5087,
        "endChar": 75
      },
      "revId": "f476f01af3d44b3206b814c2d077f9272001e327",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}