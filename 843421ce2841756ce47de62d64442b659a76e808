{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1618adf6_49501036",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-07-24T17:13:57Z",
      "side": 1,
      "message": "I haven\u0027t looked at this closely yet, but Igor\u0027s touching this area at the same time. PTAL Igor",
      "revId": "843421ce2841756ce47de62d64442b659a76e808",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e3f23fc7_d4c6d3dc",
        "filename": "src/libANGLE/Display.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1154,
      "author": {
        "id": 1564492
      },
      "writtenOn": "2023-07-24T18:08:36Z",
      "side": 1,
      "message": "`currentContext` may be from different Display.",
      "revId": "843421ce2841756ce47de62d64442b659a76e808",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ee5c0e5c_35a9670d",
        "filename": "src/libANGLE/Display.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1154,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2023-07-24T21:24:14Z",
      "side": 1,
      "message": "On android platform there should be a single display (other than end2end tests)\n\nnevertheless even if there are multiple displays, if `currentContext` was from a different display then we should not have entered this display\u0027s terminate call at all, implying this should be handled before entering this call.\n\nWIP change is here\n-\u003e https://chromium-review.googlesource.com/c/angle/angle/+/4713166\nneeds to test a bit more",
      "parentUuid": "e3f23fc7_d4c6d3dc",
      "revId": "843421ce2841756ce47de62d64442b659a76e808",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3d6ead3f_e35dc816",
        "filename": "src/libANGLE/Display.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1154,
      "author": {
        "id": 1564492
      },
      "writtenOn": "2023-07-25T11:25:40Z",
      "side": 1,
      "message": "\u003e On android platform there should be a single display (other than end2end tests)\n\nMy 2 CLs works for all platforms and does not assume anything (like `releaseContext()` should handle `unMakeCurrent()`). First CL changes `makeCurrent()` behavior to handle `terminate()` and second uses same methods that would be called from `eglReleaseThread()`. To understand seconds CL does not need to know internal details - it is simpler and less likely to cause problems.",
      "parentUuid": "ee5c0e5c_35a9670d",
      "revId": "843421ce2841756ce47de62d64442b659a76e808",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c1ca09a6_cc3dfa83",
        "filename": "src/libANGLE/Display.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1154,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2023-07-25T17:06:39Z",
      "side": 1,
      "message": "for closure -\n\n\u003e My 2 CLs works for all platforms\n\nandroid is the only platform where threadcleanup should be enabled, please refer to discussion and decision in original change\n\n\u003e and does not assume anything (like releaseContext() should handle unMakeCurrent())\n\nthis is not an assumption, it is by design that `releaseContext` does what it does. the note above the method makes the intent clear",
      "parentUuid": "3d6ead3f_e35dc816",
      "revId": "843421ce2841756ce47de62d64442b659a76e808",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "675b7d66_eee3e695",
        "filename": "src/libANGLE/Display.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1154,
      "author": {
        "id": 1564492
      },
      "writtenOn": "2023-07-25T17:36:23Z",
      "side": 1,
      "message": "\u003ethis is not an assumption, it is by design that releaseContext does what it does. the note above the method makes the intent clear\n\nThan why we have this code?\n```\n        auto error \u003d previousContext-\u003eunMakeCurrent(this);\n        if (previousContext-\u003egetRefCount() \u003d\u003d 0 \u0026\u0026 previousContext-\u003eisDestroyed())\n        {\n            // The previous Context may have been created with a different Display.\n            Display *previousDisplay \u003d previousContext-\u003egetDisplay();\n            ANGLE_TRY(previousDisplay-\u003ereleaseContext(previousContext, thread));\n        }\n```\nWhy not just call `unMakeCurrent()` in `else`?\n\nBefore this CL, `releaseContext()` was always called after `unMakeCurrent()` but now it is allowed to call it right away. For me this is assuming internal details, like that `Context::onDestroy()` calls `unMakeCurrent()`.",
      "parentUuid": "c1ca09a6_cc3dfa83",
      "revId": "843421ce2841756ce47de62d64442b659a76e808",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "543cb194_e75535ff",
        "filename": "src/libANGLE/Display.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1159,
      "author": {
        "id": 1564492
      },
      "writtenOn": "2023-07-24T18:08:36Z",
      "side": 1,
      "message": "Skipped `unMakeCurrent()` call.\n\nI\u0027m not sure, but maybe also need to call `mImplementation-\u003emakeCurrent()`.\n\nI think it is better to use `Display::makeCurrent()` method line in my CL to avoid possible errors and no need to duplicate the logic.",
      "revId": "843421ce2841756ce47de62d64442b659a76e808",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6c3b8919_bc68dfd9",
        "filename": "src/libANGLE/Display.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1159,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2023-07-24T21:24:14Z",
      "side": 1,
      "message": "`releaseContext` should handle that part",
      "parentUuid": "543cb194_e75535ff",
      "revId": "843421ce2841756ce47de62d64442b659a76e808",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}