{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ee4c9ebe_da40f69d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-10-27T09:24:48Z",
      "side": 1,
      "message": "Is there a \"\u003crender pass broken\u003e\" line missing here?",
      "revId": "6164e9703bc82ee45db3a2aef588c2ce72d9ae38",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7e039843_0ff11e80",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-10-28T00:35:14Z",
      "side": 1,
      "message": "I wasn\u0027t intending to list all of the onRenderPassFinished()/pauseRenderPassQueriesIfActive()/resumeRenderPassQueriesIfActive() calls here, just the GL sequence that causes issues.\n\nThe renderpass is broken with every glDrawArrays() (as you know).   The important part is that the pauseRenderPassQueriesIfActive() / resumeRenderPassQueriesIfActive() calls don\u0027t take into consideration that XFB is active/unpaused when looping through the \"active\" queries.   This leads to creating 1 VK query for each draw call, even though XFB is paused during one of them.\n\nI\u0027ve updated the commit message to indicate this.",
      "parentUuid": "ee4c9ebe_da40f69d",
      "revId": "6164e9703bc82ee45db3a2aef588c2ce72d9ae38",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bbe3aef3_14b337f5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-10-28T02:22:07Z",
      "side": 1,
      "message": "Right, I meant it would be nice to clarify that the render pass is broken here, as otherwise this whole thing looks like a single render pass.\n\nNew text LGTM",
      "parentUuid": "7e039843_0ff11e80",
      "revId": "6164e9703bc82ee45db3a2aef588c2ce72d9ae38",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a4bfc9af_875b5daa",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 16,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-10-27T09:24:48Z",
      "side": 1,
      "message": "Also here?",
      "revId": "6164e9703bc82ee45db3a2aef588c2ce72d9ae38",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6f73e2c6_32afd867",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 16,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-10-28T02:22:07Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "a4bfc9af_875b5daa",
      "revId": "6164e9703bc82ee45db3a2aef588c2ce72d9ae38",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5e2769f3_c75c517e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-10-27T09:24:48Z",
      "side": 1,
      "message": "I don\u0027t see a `ContextVk::onResumeTransformFeedback`. We are likely missing enabling the query on resume. So basically something like this:\n\n- ...\n- pause\n- break RP\n\n- draw \u003c-- starts RP without query\n- resume \u003c-- doesn\u0027t start the query\n- draw \u003c-- Bug: not capturing this",
      "revId": "6164e9703bc82ee45db3a2aef588c2ce72d9ae38",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "966fab8b_bca709fb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-10-30T01:44:24Z",
      "side": 1,
      "message": "ICYMI",
      "parentUuid": "5e2769f3_c75c517e",
      "revId": "6164e9703bc82ee45db3a2aef588c2ce72d9ae38",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "321d1d92_97835119",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-10-30T01:54:01Z",
      "side": 1,
      "message": "Oops, yeah, missed this comment.\n\nContextVk::onResumeTransformFeedback() is not required, because there\u0027s nothing for it to do.   The queries are restarted by ContextVk::startRenderPass() with a call to resumeRenderPassQueriesIfActive().\n\nFor example, the test dEQP-GLES3.functional.transform_feedback.array.interleaved.lines.highp_float does the following for iteration 6:\n\n    Iteration 6 / 10\n    Testing 3 draw calls, (element count, TF state): { (64, resumed), (64, paused), (64, resumed) }\n    GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN status after submit: GL_FALSE\n    GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN \u003d 64\n    Rendering result comparison between TF enabled and TF disabled passed.\n\nThis results in the following GL calls:\n\n    glBeginQuery(context \u003d 1, target \u003d GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN, id \u003d 1)\n    glGetError(context \u003d 1)\n    glClear(context \u003d 1, mask \u003d GL_COLOR_BUFFER_BIT)\n    glBeginTransformFeedback(context \u003d 1, primitiveMode \u003d GL_LINES)\n    glDrawArrays(context \u003d 1, mode \u003d GL_LINES, first \u003d 0, count \u003d 64)\n    glPauseTransformFeedback(context \u003d 1)\n    glDrawArrays(context \u003d 1, mode \u003d GL_LINES, first \u003d 64, count \u003d 64)\n    glResumeTransformFeedback(context \u003d 1)\n    glDrawArrays(context \u003d 1, mode \u003d GL_LINES, first \u003d 128, count \u003d 64)\n    glEndTransformFeedback(context \u003d 1)\n    glGetError(context \u003d 1)\n    glEndQuery(context \u003d 1, target \u003d GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN)\n\nThe number of primitives generated returned by the query is correct and the test passes.",
      "parentUuid": "966fab8b_bca709fb",
      "revId": "6164e9703bc82ee45db3a2aef588c2ce72d9ae38",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "352600da_e1f2356c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-10-30T02:09:18Z",
      "side": 1,
      "message": "I\u0027m sure you are right, but I can\u0027t seem to find the relevant piece of code. In this sequence:\n\n    glDrawArrays(context \u003d 1, mode \u003d GL_LINES, first \u003d 64, count \u003d 64)\n    glResumeTransformFeedback(context \u003d 1)\n\nThere is no call to ContextVk::startRenderPass() as part of glResumeTransformFeedback, right? And we know that the query was not active in the last draw call (because that\u0027s what this change is doing). So who is starting the query on glResumeTransformFeedback?",
      "parentUuid": "321d1d92_97835119",
      "revId": "6164e9703bc82ee45db3a2aef588c2ce72d9ae38",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9ddc0bc1_01735c0e",
        "filename": "src/libANGLE/renderer/vulkan/QueryVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 194,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-10-27T09:24:48Z",
      "side": 1,
      "message": "nit: It feels like this is a detail that ContextVk should deal with before calling here.",
      "revId": "6164e9703bc82ee45db3a2aef588c2ce72d9ae38",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8d60c192_c3ae06a1",
        "filename": "src/libANGLE/renderer/vulkan/QueryVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 194,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-10-28T00:35:14Z",
      "side": 1,
      "message": "I went back and forth on this, but I\u0027m fine having it live in ContextVk.",
      "parentUuid": "9ddc0bc1_01735c0e",
      "revId": "6164e9703bc82ee45db3a2aef588c2ce72d9ae38",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "de353cf5_708d2514",
        "filename": "src/libANGLE/renderer/vulkan/QueryVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 202,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-10-27T09:24:48Z",
      "side": 1,
      "message": "Unfortunately that\u0027s the case for PGQ on every platform (hence the need for a new extension)",
      "range": {
        "startLine": 201,
        "startChar": 40,
        "endLine": 202,
        "endChar": 40
      },
      "revId": "6164e9703bc82ee45db3a2aef588c2ce72d9ae38",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "71da78db_62a8560a",
        "filename": "src/libANGLE/renderer/vulkan/QueryVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 202,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-10-28T00:35:14Z",
      "side": 1,
      "message": "Ack\n\nI updated the comment to change \"ARM\" to \"vulkan drivers\".",
      "parentUuid": "de353cf5_708d2514",
      "range": {
        "startLine": 201,
        "startChar": 40,
        "endLine": 202,
        "endChar": 40
      },
      "revId": "6164e9703bc82ee45db3a2aef588c2ce72d9ae38",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fffe20ce_86dcae7a",
        "filename": "src/libANGLE/renderer/vulkan/QueryVk.h",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-10-27T09:24:48Z",
      "side": 1,
      "message": "Unused",
      "revId": "6164e9703bc82ee45db3a2aef588c2ce72d9ae38",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "55ce3635_d3e0adc3",
        "filename": "src/libANGLE/renderer/vulkan/QueryVk.h",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-10-28T00:35:14Z",
      "side": 1,
      "message": "Oops. Done.",
      "parentUuid": "fffe20ce_86dcae7a",
      "revId": "6164e9703bc82ee45db3a2aef588c2ce72d9ae38",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}