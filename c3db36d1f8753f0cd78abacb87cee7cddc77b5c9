{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "0f1d3daa_49f7e397",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-04-27T01:26:33Z",
      "side": 1,
      "message": "Juggling reviewers since Shabi is out this week.",
      "revId": "c3db36d1f8753f0cd78abacb87cee7cddc77b5c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "04bd22af_b4aed0ea",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-04-27T14:21:44Z",
      "side": 1,
      "message": "LGTM. Having a replication of the downstream test in angle_end2end_tests or a proxy in angle_white_box_tests would be useful.",
      "revId": "c3db36d1f8753f0cd78abacb87cee7cddc77b5c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7823c37c_2503f9f4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1379716
      },
      "writtenOn": "2021-04-27T14:40:18Z",
      "side": 1,
      "message": "Verified on Cuttlefish",
      "revId": "c3db36d1f8753f0cd78abacb87cee7cddc77b5c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bb4af748_d5e45b61",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2021-04-27T16:49:08Z",
      "side": 1,
      "message": "Overall LGTM with some minor improvement suggestion.",
      "revId": "c3db36d1f8753f0cd78abacb87cee7cddc77b5c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3083585e_7e5f88f3",
        "filename": "src/libANGLE/renderer/vulkan/ImageVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 54,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2021-04-27T16:48:29Z",
      "side": 1,
      "message": "One potential improvement we can do here is that cleanupGarbage will always walk the entire garbage list, there is no early out there. Since now this get called more often, there is a chance that we are keep walking the list over and over again while we know there is nothing can be freed (i.e, getLastCompletedQueueSerial() returns same value, GPU has not made much progress since last time garbage collected). I guess that could be a general optimization that not directly related to this change. Or, I am wondering if you should check mUse here so that only call cleanupCompletedCommandsGarbage if mUse is not zero?",
      "range": {
        "startLine": 54,
        "startChar": 18,
        "endLine": 54,
        "endChar": 49
      },
      "revId": "c3db36d1f8753f0cd78abacb87cee7cddc77b5c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "31298bf2_eb2a9071",
        "filename": "src/libANGLE/renderer/vulkan/ImageVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 54,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2021-04-28T17:00:16Z",
      "side": 1,
      "message": "Thought about this a bit more: Why not check mUse in ImageHelper::releaseImage() and immediately free ImageVk if it\u0027s not been used OR already finished? That way you avoids the garbage collector in the first place. It has a few benefits:\n\n1) This will not just fix this specific usage case, but a lot more common usage patterns as well. If someone delete a texture that already finished using, this will also immediately gets deleted. I believe it will also fix angleproject:5806\n\n2) It likely will reduce the memory foot print quite a bit because you are solving the much more general usage pattern. \n\n3) And it may help performance as well that now this just deleted VK object\u0027s memory might gets reused early for new objects. \n\n(Sorry that I am removing +2 now for this discussion).",
      "parentUuid": "3083585e_7e5f88f3",
      "range": {
        "startLine": 54,
        "startChar": 18,
        "endLine": 54,
        "endChar": 49
      },
      "revId": "c3db36d1f8753f0cd78abacb87cee7cddc77b5c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a90db1e5_fe0acf97",
        "filename": "src/libANGLE/renderer/vulkan/ImageVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 54,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-04-28T17:46:48Z",
      "side": 1,
      "message": "Deleting resources isn\u0027t a terribly common use case. This is just for a test. Your suggestion seems reasonable. Because it\u0027s larger in scope how about we land this approach for now and consider a more optimal solution in a follow-up?",
      "parentUuid": "31298bf2_eb2a9071",
      "range": {
        "startLine": 54,
        "startChar": 18,
        "endLine": 54,
        "endChar": 49
      },
      "revId": "c3db36d1f8753f0cd78abacb87cee7cddc77b5c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "09b000f7_44b0937b",
        "filename": "src/libANGLE/renderer/vulkan/ImageVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 54,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2021-04-28T19:34:05Z",
      "side": 1,
      "message": "That is totally fine with me. But if you do it in ImageHelper::releaseImage(), you don\u0027t need this though, that is why I want to bring it up here.\nRe +2 and leaving for Tim to decide.",
      "parentUuid": "a90db1e5_fe0acf97",
      "range": {
        "startLine": 54,
        "startChar": 18,
        "endLine": 54,
        "endChar": 49
      },
      "revId": "c3db36d1f8753f0cd78abacb87cee7cddc77b5c9",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}