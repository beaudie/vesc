{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b15800cf_6ffab487",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1491687
      },
      "writtenOn": "2022-02-18T18:34:13Z",
      "side": 1,
      "message": "Turns out yesterday\u0027s patch to capture empty buffers was not enough to fix this issue in `shadowgun_legends`. When running MEC we end up with a `nullptr` buffer from a binding. This is due to the engine (Unity) reusing a VAO, which had a buffer at attrib array binding point 6 once, but not at the time of MEC. The offset can be still retrieved, but the buffer cannot.\nI did not write a minimal test for this case, since it was not that obvious, but I was able to capture the app from the beginning, which can be used to replicate the behavior.\nI assume this check should be in place anyway, even if the root cause of the missing buffer could be prevented, but maybe it can\u0027t.\nIn contrast to yesterday\u0027s attempt to this patch now also the `CaptureVertexAttribIPointer` case is handled, and a warning is given. The warning will not be very verbose, since it can only happen once for every attrib array, when MEC is triggered.",
      "revId": "98339d0792a0a530f5298d15807b0fcd41f82af3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a2202e20_8919a9c6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-02-18T18:40:57Z",
      "side": 1,
      "message": "I don\u0027t quite understand the problem case - what\u0027s a sample sequence of calls to trigger this situation (pseudocode that is)?",
      "parentUuid": "b15800cf_6ffab487",
      "revId": "98339d0792a0a530f5298d15807b0fcd41f82af3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ccaa89e0_6a27ed9d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1491687
      },
      "writtenOn": "2022-03-03T15:25:54Z",
      "side": 1,
      "message": "I added a test that reproduces the issue.\n\nThe general issue is that Unity uses the same vertex array object through the whole application runtime without deleting it.\nOnce during the application runtime, before triggering MEC, a vertex attrib pointer is set. In the case of Shadowgun Legends it attribute array #6. The attribute arrat is also disabled after draw using `glDisableVertexAttribArray` and it\u0027s buffer gets deleted. MEC tries to capture all attribs, even disabled. We end up trying to capture an attrib which was used once, but which now points to a deleted buffer.\n\nPseudocode:\n\n```\n// First attrib setup using attribs 0+1\nglGenVertexArrays(1, ...);\nglBindVertexArray(...);\n\nglEnableVertexAttribArray(0);\nglEnableVertexAttribArray(1);\n\nglGenBuffers(...);\nglBindBuffer(GL_ARRAY_BUFFER, ...);\nglBufferData(GL_ARRAY_BUFFER, ...);\n\nglVertexAttribPointer(0, ...);\nglVertexAttribPointer(1, ...);\nglDrawArrays(...);\n\nglDisableVertexAttribArray(0);\nglDisableVertexAttribArray(1);\n\nglDeleteBuffers(...);\n\n// Second attrib setup using only attrib 0\nglEnableVertexAttribArray(0);\n\nglGenBuffers(...);\nglBindBuffer(GL_ARRAY_BUFFER, ...);\nglBufferData(GL_ARRAY_BUFFER, ...);\n\nglVertexAttribPointer(0, ...);\nglDrawArrays(...);\n\nglDisableVertexAttribArray(0);\n\n// When MEC is triggered here it picks up the invalid attrib array #1\n```",
      "parentUuid": "a2202e20_8919a9c6",
      "revId": "98339d0792a0a530f5298d15807b0fcd41f82af3",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}