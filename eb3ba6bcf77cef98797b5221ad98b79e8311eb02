{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e362551f_c6ef0420",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 18
      },
      "lineNbr": 4315,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-07-12T18:40:28Z",
      "side": 1,
      "message": "nit: `prevSamples` and `curSamples` is enough, there is no such thing as \"framebuffer fetch samples\", just \"samples\".",
      "range": {
        "startLine": 4315,
        "startChar": 61,
        "endLine": 4315,
        "endChar": 88
      },
      "revId": "eb3ba6bcf77cef98797b5221ad98b79e8311eb02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "41c66a01_907836fe",
        "filename": "src/tests/gl_tests/FramebufferFetchTest.cpp",
        "patchSetId": 18
      },
      "lineNbr": 2116,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-07-12T18:40:28Z",
      "side": 1,
      "message": "Just bind to `GL_FRAMEBUFFER` to avoid having to bind `GL_READ_FRAMEBUFFER` later.",
      "revId": "eb3ba6bcf77cef98797b5221ad98b79e8311eb02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7f4b3ef8_b953acb6",
        "filename": "src/tests/gl_tests/FramebufferFetchTest.cpp",
        "patchSetId": 18
      },
      "lineNbr": 2129,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-07-12T18:40:28Z",
      "side": 1,
      "message": "ditto",
      "revId": "eb3ba6bcf77cef98797b5221ad98b79e8311eb02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "36842c28_cdb1d967",
        "filename": "src/tests/gl_tests/FramebufferFetchTest.cpp",
        "patchSetId": 18
      },
      "lineNbr": 2132,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-07-12T18:40:28Z",
      "side": 1,
      "message": "Please move all color validation to the end of the test to interfere as little as possible with the state changes being tested.",
      "range": {
        "startLine": 2131,
        "startChar": 0,
        "endLine": 2132,
        "endChar": 84
      },
      "revId": "eb3ba6bcf77cef98797b5221ad98b79e8311eb02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a4dfc905_37120116",
        "filename": "src/tests/gl_tests/FramebufferFetchTest.cpp",
        "patchSetId": 18
      },
      "lineNbr": 2136,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-07-12T18:40:28Z",
      "side": 1,
      "message": "Remove this `glUseProgram`. The program hasn\u0027t changed. More importantly, this will mark the program dirty, which means `invalidateCurrentGraphicsPipeline` will be triggered anyway. We want to make sure it will be triggered even without changing the program.",
      "revId": "eb3ba6bcf77cef98797b5221ad98b79e8311eb02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e24a9be1_880721d3",
        "filename": "src/tests/gl_tests/FramebufferFetchTest.cpp",
        "patchSetId": 18
      },
      "lineNbr": 2138,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-07-12T18:40:28Z",
      "side": 1,
      "message": "ditto",
      "revId": "eb3ba6bcf77cef98797b5221ad98b79e8311eb02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bdb5adf4_2576f9e3",
        "filename": "src/tests/gl_tests/FramebufferFetchTest.cpp",
        "patchSetId": 18
      },
      "lineNbr": 2145,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-07-12T18:40:28Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 2140,
        "startChar": 0,
        "endLine": 2145,
        "endChar": 82
      },
      "revId": "eb3ba6bcf77cef98797b5221ad98b79e8311eb02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "58668d09_91eeed66",
        "filename": "src/tests/gl_tests/FramebufferFetchTest.cpp",
        "patchSetId": 18
      },
      "lineNbr": 2149,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-07-12T18:40:28Z",
      "side": 1,
      "message": "ditto",
      "revId": "eb3ba6bcf77cef98797b5221ad98b79e8311eb02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "70d32450_bd6590e6",
        "filename": "src/tests/gl_tests/FramebufferFetchTest.cpp",
        "patchSetId": 18
      },
      "lineNbr": 2151,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-07-12T18:40:28Z",
      "side": 1,
      "message": "ditto",
      "revId": "eb3ba6bcf77cef98797b5221ad98b79e8311eb02",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}