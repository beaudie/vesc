{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "41e9da5f_b37e7d63",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-10-12T18:52:17Z",
      "side": 1,
      "message": "What app is affected? In particular, is it using mutable (glTexImage*) or immutable textures (glTexStorage*)?\n\nFor the latter, we have this idea: anglebug.com/6354",
      "revId": "37cfa43090afe5fa6379ae0f42d8258f1de78b93",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bb335a32_a299e888",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1524137
      },
      "writtenOn": "2021-10-12T22:16:15Z",
      "side": 1,
      "message": "Application is using glCompressedTexImage2D, unfortunately. I agree that world would be much better if everyone was using just immutable objects ;)",
      "parentUuid": "41e9da5f_b37e7d63",
      "revId": "37cfa43090afe5fa6379ae0f42d8258f1de78b93",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a994cd7d_68b756dd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2021-10-12T00:56:49Z",
      "side": 1,
      "message": "You should file a seperate bug for this, this link does not work.",
      "range": {
        "startLine": 13,
        "startChar": 5,
        "endLine": 13,
        "endChar": 27
      },
      "revId": "37cfa43090afe5fa6379ae0f42d8258f1de78b93",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3afeae5b_c43a17e7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1524137
      },
      "writtenOn": "2021-10-12T01:42:47Z",
      "side": 1,
      "message": "Ah, I didn\u0027t realize that ANGLE has separate tracker, beside buganizer. Is there any bridge between anglebug and buganizer?",
      "parentUuid": "a994cd7d_68b756dd",
      "range": {
        "startLine": 13,
        "startChar": 5,
        "endLine": 13,
        "endChar": 27
      },
      "revId": "37cfa43090afe5fa6379ae0f42d8258f1de78b93",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f7be14a_dbe98546",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2021-10-12T16:00:01Z",
      "side": 1,
      "message": "you can use b/202744914 as well.",
      "parentUuid": "3afeae5b_c43a17e7",
      "range": {
        "startLine": 13,
        "startChar": 5,
        "endLine": 13,
        "endChar": 27
      },
      "revId": "37cfa43090afe5fa6379ae0f42d8258f1de78b93",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4d88944c_0596cf8f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1524137
      },
      "writtenOn": "2021-10-11T21:43:10Z",
      "side": 1,
      "message": "Please have a look at it. It addresses peak-mem usage issue on 32bit apps, allowing retry for failed allocation.",
      "revId": "37cfa43090afe5fa6379ae0f42d8258f1de78b93",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cc3ac40c_3c11573f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1524137
      },
      "writtenOn": "2021-10-12T22:16:15Z",
      "side": 1,
      "message": "Unfortunately, I was able to reproduce the issue even with this change. It frequency of the problem dropped, but obviously problem is not solved here, probably because we are not flushing all remaining staging updates.",
      "parentUuid": "4d88944c_0596cf8f",
      "revId": "37cfa43090afe5fa6379ae0f42d8258f1de78b93",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cd2e96af_0bd4f81f",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 1
      },
      "lineNbr": 5696,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2021-10-12T00:56:49Z",
      "side": 1,
      "message": "Suggest to catch failure at  allocator.createBuffer() call instead of here https://source.chromium.org/chromium/chromium/src/+/main:third_party/angle/src/libANGLE/renderer/vulkan/vk_helpers.cpp;l\u003d3663",
      "range": {
        "startLine": 5696,
        "startChar": 23,
        "endLine": 5696,
        "endChar": 44
      },
      "revId": "37cfa43090afe5fa6379ae0f42d8258f1de78b93",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "251d3e84_3796c014",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 1
      },
      "lineNbr": 5696,
      "author": {
        "id": 1524137
      },
      "writtenOn": "2021-10-12T01:42:47Z",
      "side": 1,
      "message": "As it is early return path, I was assuming it\u0027s better to catch it (and record additional commands) at higher level. At bufferHelper level I wouldn\u0027t be able to flush updates (so if this is not needed, as suggested below, I will move the logic here, but if it seems to be needed - it will have to stay higher).",
      "parentUuid": "cd2e96af_0bd4f81f",
      "range": {
        "startLine": 5696,
        "startChar": 23,
        "endLine": 5696,
        "endChar": 44
      },
      "revId": "37cfa43090afe5fa6379ae0f42d8258f1de78b93",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "97f6f92c_5ad962c0",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 1
      },
      "lineNbr": 5702,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2021-10-12T00:56:49Z",
      "side": 1,
      "message": "I dont think this is needed. The thing actually helping is the finishImpl call, not flushAllStagedUpdates. And this likely is not safe to call flushAllStagedUpdates as well if mave is invalid. Suggest to remove this line of code.",
      "revId": "37cfa43090afe5fa6379ae0f42d8258f1de78b93",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "77a2a2f8_b4dd5524",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 1
      },
      "lineNbr": 5702,
      "author": {
        "id": 1524137
      },
      "writtenOn": "2021-10-12T01:42:47Z",
      "side": 1,
      "message": "I\u0027m not sure what can be unsafe here, as no staging update is provided at the moment, when allocation failed...\nI will experiment with removing this line anyway, and provide outcome here.",
      "parentUuid": "97f6f92c_5ad962c0",
      "revId": "37cfa43090afe5fa6379ae0f42d8258f1de78b93",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "77438f1c_607360c3",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 1
      },
      "lineNbr": 5702,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2021-10-12T16:00:01Z",
      "side": 1,
      "message": "You could already have staged updates there for other levels. But vkImage may not yet allocated. So the flushAllStagedUpdates here may run into assertion/crash. The problem is that the code you added here is not been tested on bots, so you wont expect bots to discover any problem for you.",
      "parentUuid": "77a2a2f8_b4dd5524",
      "revId": "37cfa43090afe5fa6379ae0f42d8258f1de78b93",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}