{
  "comments": [
    {
      "key": {
        "uuid": "723668c4_78041684",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1013,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-07-16T15:43:58Z",
      "side": 1,
      "message": "nit: initialize",
      "range": {
        "startLine": 1013,
        "startChar": 13,
        "endLine": 1013,
        "endChar": 16
      },
      "revId": "0663ecea746916b324cbe9ba88985c27b3ff6995",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4aa4bea2_555616ff",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.h",
        "patchSetId": 7
      },
      "lineNbr": 233,
      "author": {
        "id": 1001426
      },
      "writtenOn": "2018-07-16T03:00:48Z",
      "side": 1,
      "message": "My first thought would be to use a single DynamicBuffer to hold values for all attributes.\nThough I\u0027m not sure how much that would complicate things, or what is gained.\nDid you consider it?",
      "revId": "0663ecea746916b324cbe9ba88985c27b3ff6995",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bdc66119_4bb05dab",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.h",
        "patchSetId": 7
      },
      "lineNbr": 233,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-07-16T03:34:51Z",
      "side": 1,
      "message": "Yeah... it doesn\u0027t work well with DynamicBuffer. Imagine a scenario where the app uses multiple default attributes and only updates one frequently. Then you could have the first old attribute being discarded when the second changing attribute triggers a buffer recycle.",
      "parentUuid": "4aa4bea2_555616ff",
      "revId": "0663ecea746916b324cbe9ba88985c27b3ff6995",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "53e476d1_3bee458e",
        "filename": "src/libANGLE/renderer/vulkan/ContextVk.h",
        "patchSetId": 7
      },
      "lineNbr": 233,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-07-16T15:43:58Z",
      "side": 1,
      "message": "Can you also track the latest offset of the data in each buffer?  Right now you are triggering a re-upload of the data when the vertex array changes by dirtying all default attributes but I think it would be possible to just call vertexArrayVk::updateDefaultAttrib on the new vertex array with the tracked offset.",
      "range": {
        "startLine": 233,
        "startChar": 20,
        "endLine": 233,
        "endChar": 37
      },
      "revId": "0663ecea746916b324cbe9ba88985c27b3ff6995",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}