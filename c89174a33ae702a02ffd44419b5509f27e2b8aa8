{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "43c58da2_da023f0a",
        "filename": "src/libANGLE/renderer/load_functions_data.json",
        "patchSetId": 2
      },
      "lineNbr": 424,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-08-22T21:09:05Z",
      "side": 1,
      "message": "These don\u0027t look right; IIRC `GL_RGBX8_ANGLE + R8G8B8X8_UNORM` for example means the internal format is RGBX, and the upload data is also RGBX. In this case, we shouldn\u0027t pick 3 components from upload data, because upload data also has 4 components. Don\u0027t you think so?\n\nWasn\u0027t the `glTexSubImage2D` call passing in `GL_RGB8` data? Shouldn\u0027t then a new entry be needed here like:\n\n```\n    \"R8G8B8_UNORM\": {\n      \"GL_UNSIGNED_BYTE\": \"LoadToNative3To4\u003cGLubyte, 0xFF\u003e\"\n    },\n```\n\nand the old entries left as-is?\n\n---\n\nThere\u0027s an existing bug here that the alpha channel is not overriden to 0xFF when copying from RGBA (or RGBX for that matter)",
      "range": {
        "startLine": 419,
        "startChar": 0,
        "endLine": 424,
        "endChar": 5
      },
      "revId": "c89174a33ae702a02ffd44419b5509f27e2b8aa8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d30911a2_b9817079",
        "filename": "src/libANGLE/renderer/load_functions_data.json",
        "patchSetId": 2
      },
      "lineNbr": 424,
      "author": {
        "id": 1509302
      },
      "writtenOn": "2022-08-22T21:33:44Z",
      "side": 1,
      "message": "Hmm, that doesn\u0027t match my understanding here. `GL_RGBX8_ANGLE` decides the upload data is 3 channel",
      "parentUuid": "43c58da2_da023f0a",
      "range": {
        "startLine": 419,
        "startChar": 0,
        "endLine": 424,
        "endChar": 5
      },
      "revId": "c89174a33ae702a02ffd44419b5509f27e2b8aa8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}