{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d1f2291d_34735dce",
        "filename": "src/tests/perf_tests/MultisampleResolvePerf.cpp",
        "patchSetId": 2
      },
      "lineNbr": 74,
      "author": {
        "id": 1525982
      },
      "writtenOn": "2024-03-26T19:39:16Z",
      "side": 1,
      "message": "Question: Should the class name have \"Benchmark\" at the end? (e.g., style guide)",
      "range": {
        "startLine": 74,
        "startChar": 6,
        "endLine": 74,
        "endChar": 28
      },
      "revId": "3120b8e958953563e71760ba46181f9c145c824c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "966857af_abf31b3a",
        "filename": "src/tests/perf_tests/MultisampleResolvePerf.cpp",
        "patchSetId": 2
      },
      "lineNbr": 74,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-03-26T19:44:13Z",
      "side": 1,
      "message": "I see `Benchmark` is used more commonly, but `Perf` is also used in a bunch of perf tests (happened to be `Perf` from the one I copied from). Doesn\u0027t look like we enforce one way or another.",
      "parentUuid": "d1f2291d_34735dce",
      "range": {
        "startLine": 74,
        "startChar": 6,
        "endLine": 74,
        "endChar": 28
      },
      "revId": "3120b8e958953563e71760ba46181f9c145c824c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6501d62a_fcfdb77d",
        "filename": "src/tests/perf_tests/MultisampleResolvePerf.cpp",
        "patchSetId": 2
      },
      "lineNbr": 249,
      "author": {
        "id": 1525982
      },
      "writtenOn": "2024-03-26T19:39:16Z",
      "side": 1,
      "message": "Nit: Move to before the for-loop? Does it affect perf results?",
      "range": {
        "startLine": 249,
        "startChar": 21,
        "endLine": 249,
        "endChar": 29
      },
      "revId": "3120b8e958953563e71760ba46181f9c145c824c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fbfd97d6_6324afab",
        "filename": "src/tests/perf_tests/MultisampleResolvePerf.cpp",
        "patchSetId": 2
      },
      "lineNbr": 249,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-03-26T19:44:13Z",
      "side": 1,
      "message": "Too tiny to affect anything.",
      "parentUuid": "6501d62a_fcfdb77d",
      "range": {
        "startLine": 249,
        "startChar": 21,
        "endLine": 249,
        "endChar": 29
      },
      "revId": "3120b8e958953563e71760ba46181f9c145c824c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0536ff6d_f8cdc332",
        "filename": "src/tests/perf_tests/MultisampleResolvePerf.cpp",
        "patchSetId": 2
      },
      "lineNbr": 253,
      "author": {
        "id": 1525982
      },
      "writtenOn": "2024-03-26T19:39:16Z",
      "side": 1,
      "message": "Same",
      "range": {
        "startLine": 253,
        "startChar": 48,
        "endLine": 253,
        "endChar": 78
      },
      "revId": "3120b8e958953563e71760ba46181f9c145c824c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aef7c650_4f126c56",
        "filename": "src/tests/perf_tests/MultisampleResolvePerf.cpp",
        "patchSetId": 2
      },
      "lineNbr": 253,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2024-03-26T19:44:13Z",
      "side": 1,
      "message": "Ditto. FWIW, iterationsPerStep is one, so not really a loop in the end\n\n(I had to do that to make single-sampled also become one draw per pass, otherwise it was all bunching in one render pass and made comparison invalid)",
      "parentUuid": "0536ff6d_f8cdc332",
      "range": {
        "startLine": 253,
        "startChar": 48,
        "endLine": 253,
        "endChar": 78
      },
      "revId": "3120b8e958953563e71760ba46181f9c145c824c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "3120b8e958953563e71760ba46181f9c145c824c",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "3120b8e958953563e71760ba46181f9c145c824c",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "3120b8e958953563e71760ba46181f9c145c824c",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}