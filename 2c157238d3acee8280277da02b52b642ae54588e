{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "0defc021_765efa62",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2022-04-11T17:03:57Z",
      "side": 1,
      "message": "Ultimately, I think we need to use VkPresentMode: VK_PRESENT_MODE_SHARED_CONTINUOUS_REFRESH_KHR for this feature of EGL to work.\nANGLE does not support, and probably not Android.\n\nVK_PRESENT_MODE_IMMEDIATE_KHR - still requires a vkQueuePresent.\nas does VK_PRESENT_MODE_SHARED_DEMAND_REFRESH_KHR - and a queueBuffer.\n\n VK_PRESENT_MODE_SHARED_CONTINUOUS_REFRESH_KHR should not require a queueBuffer(), but may require some form of flush to process draw commands?\n \n So I am thinking we can not support eglCreateWindowSurface with EGL_RENDER_BUFFER \u003d\u003d EGL_SINGLE_BUFFER. There is no error, so we can fail silently and be in FIFO mode. The app must query EGL_RENDER_BUFFER to see if it actually worked. So we can keep that part. But basically a silent fail for ANGLE.\n \n Does that seem right to everyone?",
      "revId": "2c157238d3acee8280277da02b52b642ae54588e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "71e60943_b40697ad",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1509302
      },
      "writtenOn": "2022-04-11T17:56:37Z",
      "side": 1,
      "message": "Hi Jeff, `VK_PRESENT_MODE_SHARED_CONTINUOUS_REFRESH_KHR` is supported by Android. As long as the Vulkan driver exposes shared presentable image support via the private `VK_ANDROID_native_buffer` extension (in v7), the Android Vulkan loader will advertise `VK_KHR_shared_presentable_image`, and the supported swapchain image usages are the same with the default bits exposed.\n\nBut I\u0027m not sure if ANGLE is connecting the dots here properly. What did you see problematic here?",
      "parentUuid": "0defc021_765efa62",
      "revId": "2c157238d3acee8280277da02b52b642ae54588e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "233d8238_378727c4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2022-04-11T20:24:23Z",
      "side": 1,
      "message": "OK. I\u0027ll create a new patch will all the mutable_render_buffer fixes, and change to CONTINUOUS mode, and remove the Swap on flush. This is difficult to test. So help would be appreciated.",
      "revId": "2c157238d3acee8280277da02b52b642ae54588e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dde6aeb4_465caeeb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1509302
      },
      "writtenOn": "2022-04-11T21:14:05Z",
      "side": 1,
      "message": "I can also help test it with my Chrome OS setup with ANGLE on Venus (our virtio-gpu Vulkan implementation), since we need ANGLE to do the right thing for us to not regress low-latency stylus support, as compare to Virgl guest driver.",
      "parentUuid": "233d8238_378727c4",
      "revId": "2c157238d3acee8280277da02b52b642ae54588e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "54319580_50c3b9bb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2022-04-11T22:10:26Z",
      "side": 1,
      "message": "New patch: https://chromium-review.googlesource.com/c/angle/angle/+/3582940\n",
      "revId": "2c157238d3acee8280277da02b52b642ae54588e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0725e2f1_fcd65cfa",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2022-04-11T22:13:26Z",
      "side": 1,
      "message": "Possible test case to use: below.",
      "revId": "2c157238d3acee8280277da02b52b642ae54588e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "afe50338_1e433098",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2022-04-11T22:13:26Z",
      "side": 1,
      "message": "Yes. in this case its an automatic update to screen, so visual confirmation is needed. Readpixels just verifies the color. I added a simple test to EGLSurfaceText - EGLSingleBufferTest that should just put up a green window. If you break before the glreadPixels and you get green window, then success.",
      "parentUuid": "dde6aeb4_465caeeb",
      "revId": "2c157238d3acee8280277da02b52b642ae54588e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}