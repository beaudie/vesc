{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "0748d472_19186574",
        "filename": "src/libANGLE/context_private_call_gles.cpp",
        "patchSetId": 1
      },
      "lineNbr": 547,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-08-29T18:47:48Z",
      "side": 1,
      "message": "It\u0027s hard to verify if these extension checks are valid. Looking at `ValidateDrawStates`, it looks at blend state for a couple of things:\n\n- Ensure no blend on float formats if appropriate ext is not supported\n- Ensure no blend on YUV formats\n- Ensure single render target with advanced blend\n\nIt _might_ be that only the existence of blend needs checking, but not the function itself? Could you please either:\n\n- Remove the `onBlendFuncOrEquationChange` calls if they are not actually needed\n- Rename to `onExtendedBlendFuncOrEquationChange` and `onAdvancedBlendFuncOrEquationChange` if they are needed, and document why changing the respective state needs to invalidate draw validation cache.",
      "revId": "36f3c1a9af3d824965f173d8b7fff6c1c087c4e2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "04dada21_6ae25212",
        "filename": "src/libANGLE/context_private_call_gles.cpp",
        "patchSetId": 1
      },
      "lineNbr": 547,
      "author": {
        "id": 1394635
      },
      "writtenOn": "2023-08-29T19:20:39Z",
      "side": 1,
      "message": "This CL updates `ValidateDrawStates` with a new check related to blend funcs, so invalidation is needed.\n\nThe invalidation needs to happen if:\n- blend funcs have been changed and the context supports `EXT_blend_func_extended` because of the draw buffers limit OR\n- it was an indexed blend func update and `noSimultaneousConstantColorAndAlphaBlendFunc` limitation is active because D3D backend cannot handle certain func combinations OR\n- blend equations have been changed and the context supports `KHR_blend_equation_advanced` because of another draw buffers limit.\n\nGiven that all three cases are blending-related and invalidate the same state, I think it\u0027s reasonable to use the same function although its precise name would be `onIndexedOrExtendedBlendFuncOrAdvancedBlendEquationChange`.",
      "parentUuid": "0748d472_19186574",
      "revId": "36f3c1a9af3d824965f173d8b7fff6c1c087c4e2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ac5daea_a44171b7",
        "filename": "src/libANGLE/context_private_call_gles.cpp",
        "patchSetId": 1
      },
      "lineNbr": 547,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-08-29T19:39:54Z",
      "side": 1,
      "message": "Thanks for the explanation, could you please add the above as a comment to `onBlendFuncOrEquationChange` to make it clearer exactly when it needs to be called",
      "parentUuid": "04dada21_6ae25212",
      "revId": "36f3c1a9af3d824965f173d8b7fff6c1c087c4e2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "34ab7855_6ded8511",
        "filename": "src/libANGLE/context_private_call_gles.cpp",
        "patchSetId": 1
      },
      "lineNbr": 547,
      "author": {
        "id": 1394635
      },
      "writtenOn": "2023-08-29T20:36:04Z",
      "side": 1,
      "message": "Done. PTAL if everything is clear.",
      "parentUuid": "8ac5daea_a44171b7",
      "revId": "36f3c1a9af3d824965f173d8b7fff6c1c087c4e2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "640c7e3d_5f225526",
        "filename": "src/libANGLE/context_private_call_gles.cpp",
        "patchSetId": 1
      },
      "lineNbr": 547,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-08-29T23:39:32Z",
      "side": 1,
      "message": "üëç Thanks!",
      "parentUuid": "34ab7855_6ded8511",
      "revId": "36f3c1a9af3d824965f173d8b7fff6c1c087c4e2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2486a289_f61f06d5",
        "filename": "src/libANGLE/context_private_call_gles.cpp",
        "patchSetId": 1
      },
      "lineNbr": 591,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-08-29T18:47:48Z",
      "side": 1,
      "message": "Why the extension check? If this function is called, then the EXT (or ES3.2) is already supported. Same with a few functions above.",
      "revId": "36f3c1a9af3d824965f173d8b7fff6c1c087c4e2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0c72ac8b_9a1e06e0",
        "filename": "src/libANGLE/context_private_call_gles.cpp",
        "patchSetId": 1
      },
      "lineNbr": 591,
      "author": {
        "id": 1394635
      },
      "writtenOn": "2023-08-29T19:20:39Z",
      "side": 1,
      "message": "This function is a part of `EXT/OES_draw_buffers_indexed` or ES 3.2, not\n`EXT_blend_func_extended`, which defines new func enums.",
      "parentUuid": "2486a289_f61f06d5",
      "revId": "36f3c1a9af3d824965f173d8b7fff6c1c087c4e2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "38835afd_ab72a4c9",
        "filename": "src/libANGLE/context_private_call_gles.cpp",
        "patchSetId": 1
      },
      "lineNbr": 591,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-08-29T19:39:54Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "0c72ac8b_9a1e06e0",
      "revId": "36f3c1a9af3d824965f173d8b7fff6c1c087c4e2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}