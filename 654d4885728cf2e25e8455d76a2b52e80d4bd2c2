{
  "comments": [
    {
      "key": {
        "uuid": "d97e1025_15ad560c",
        "filename": "include/GLSLANG/ShaderLang.h",
        "patchSetId": 1
      },
      "lineNbr": 471,
      "author": {
        "id": 1003154
      },
      "writtenOn": "2014-07-17T21:49:26Z",
      "side": 1,
      "message": "I very much disagree with this interface.  This means whoever uses this has to redefine the data structures in their own, and what if you add a field and the client doesn\u0027t update it?  Then total disasters.\n\nI think the related variable class should be exposed here together with this function, and instead of void**, it should be the actual data type.",
      "revId": "654d4885728cf2e25e8455d76a2b52e80d4bd2c2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d97e1025_9566262b",
        "filename": "include/GLSLANG/ShaderLang.h",
        "patchSetId": 1
      },
      "lineNbr": 471,
      "author": {
        "id": 1003154
      },
      "writtenOn": "2014-07-17T21:51:10Z",
      "side": 1,
      "message": "OK, after I made this comment, I saw the other CL that exposes these data type.  Then I think we should just include that file here and use the real data type.",
      "parentUuid": "d97e1025_15ad560c",
      "revId": "654d4885728cf2e25e8455d76a2b52e80d4bd2c2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "99df387f_88087b4a",
        "filename": "include/GLSLANG/ShaderLang.h",
        "patchSetId": 1
      },
      "lineNbr": 471,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2014-07-18T13:50:06Z",
      "side": 1,
      "message": "I\u0027m OK with that. It\u0027s still possible to change the data type and get a disaster, and it will require 5 entry points instead of one, but it would be a bit nicer.\n\nUnfortunately copying the data instead of returning a pointer is not feasible due to how std::vector works with allocation and de-allocation, I think.",
      "parentUuid": "d97e1025_9566262b",
      "revId": "654d4885728cf2e25e8455d76a2b52e80d4bd2c2",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}