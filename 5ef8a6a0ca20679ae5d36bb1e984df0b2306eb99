{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "9aae66b0_b6d548c1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1520902
      },
      "writtenOn": "2023-02-24T01:52:02Z",
      "side": 1,
      "message": "Just curious, which file contains this change described here: `Instead of modifying a global when detecting KeyFrames are\nin use by a trace, update a new value tracked per trace.`?\n\nI can\u0027t find it in either `src/tests/perf_tests/ANGLEPerfTestArgs.cpp` and `src/tests/perf_tests/TracePerfTest.cpp`",
      "revId": "5ef8a6a0ca20679ae5d36bb1e984df0b2306eb99",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "74622cf2_eca8d48f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2023-02-24T02:41:00Z",
      "side": 1,
      "message": "`gScreenshotFrame` is a global variable set when we parse args (see ref).\n\nSo now in TracePerfTest.cpp, I assign that to mScreenshotFrame so it can vary per trace.  I should not have been modifying the argument after parsing.",
      "parentUuid": "9aae66b0_b6d548c1",
      "revId": "5ef8a6a0ca20679ae5d36bb1e984df0b2306eb99",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4fa46008_b73d1224",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2023-02-24T03:37:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "74622cf2_eca8d48f",
      "revId": "5ef8a6a0ca20679ae5d36bb1e984df0b2306eb99",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1be6018d_2341df84",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2023-02-24T01:02:28Z",
      "side": 1,
      "message": "Follow up to https://chromium-review.googlesource.com/c/angle/angle/+/4284637\nNeeded before we can land a trace that uses keyframes.",
      "revId": "5ef8a6a0ca20679ae5d36bb1e984df0b2306eb99",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6cc9c758_0237c862",
        "filename": "src/tests/perf_tests/ANGLEPerfTestArgs.cpp",
        "patchSetId": 1
      },
      "lineNbr": 99,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2023-02-24T02:41:00Z",
      "side": 1,
      "message": "ref",
      "range": {
        "startLine": 99,
        "startChar": 68,
        "endLine": 99,
        "endChar": 84
      },
      "revId": "5ef8a6a0ca20679ae5d36bb1e984df0b2306eb99",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8e18c3f6_b7f8fff3",
        "filename": "src/tests/perf_tests/ANGLEPerfTestArgs.cpp",
        "patchSetId": 1
      },
      "lineNbr": 99,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2023-02-24T03:37:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6cc9c758_0237c862",
      "range": {
        "startLine": 99,
        "startChar": 68,
        "endLine": 99,
        "endChar": 84
      },
      "revId": "5ef8a6a0ca20679ae5d36bb1e984df0b2306eb99",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:approval_code-owners"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "5ef8a6a0ca20679ae5d36bb1e984df0b2306eb99",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "5ef8a6a0ca20679ae5d36bb1e984df0b2306eb99",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "5ef8a6a0ca20679ae5d36bb1e984df0b2306eb99",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "5ef8a6a0ca20679ae5d36bb1e984df0b2306eb99",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}