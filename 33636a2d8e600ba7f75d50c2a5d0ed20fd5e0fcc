{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4ae313b5_aec9dec4",
        "filename": "src/libANGLE/renderer/vulkan/linux/DmaBufImageSiblingVkLinux.cpp",
        "patchSetId": 6
      },
      "lineNbr": 582,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-04-26T15:08:27Z",
      "side": 1,
      "message": "looks like a non-standard use of angle::Result. It\u0027s meant to be used on unexpected errors only. Maybe return a bool or enum result code instead.",
      "range": {
        "startLine": 577,
        "startChar": 0,
        "endLine": 582,
        "endChar": 9
      },
      "revId": "33636a2d8e600ba7f75d50c2a5d0ed20fd5e0fcc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "979a14e4_456a2141",
        "filename": "src/libANGLE/renderer/vulkan/linux/DmaBufImageSiblingVkLinux.cpp",
        "patchSetId": 6
      },
      "lineNbr": 582,
      "author": {
        "id": 1528827
      },
      "writtenOn": "2022-04-27T11:03:21Z",
      "side": 1,
      "message": "I see. Within initWithFormat() there are other functions which use angle::Result, and some of these should STOP in case of failure, e.g. failure to duplicate dmabuf FD, hence I believe we can keep using angle::Result here.\n\nOther functions can safely fail, meaning we should try another format. Do you think in those cases we can return angle::Result::Incomplete?",
      "parentUuid": "4ae313b5_aec9dec4",
      "range": {
        "startLine": 577,
        "startChar": 0,
        "endLine": 582,
        "endChar": 9
      },
      "revId": "33636a2d8e600ba7f75d50c2a5d0ed20fd5e0fcc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "658c0186_88ad1304",
        "filename": "src/libANGLE/renderer/vulkan/linux/DmaBufImageSiblingVkLinux.cpp",
        "patchSetId": 6
      },
      "lineNbr": 582,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-05-02T12:59:56Z",
      "side": 1,
      "message": "Don\u0027t use Incomplete. I\u0027d like to remove it.\n\nIf you want a safe fail, don\u0027t use angle::Result, use an out variable enum or similar.\n\nIf you have a fatal error, use ANGLE result and generate a EGL or GLES error that can be handled by the application.",
      "parentUuid": "979a14e4_456a2141",
      "range": {
        "startLine": 577,
        "startChar": 0,
        "endLine": 582,
        "endChar": 9
      },
      "revId": "33636a2d8e600ba7f75d50c2a5d0ed20fd5e0fcc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7988b5ae_1f842413",
        "filename": "src/libANGLE/renderer/vulkan/linux/DmaBufImageSiblingVkLinux.cpp",
        "patchSetId": 6
      },
      "lineNbr": 582,
      "author": {
        "id": 1528827
      },
      "writtenOn": "2022-05-04T15:18:08Z",
      "side": 1,
      "message": "I opted for an out variable enum. Please let me know if the names I chose make sense.",
      "parentUuid": "658c0186_88ad1304",
      "range": {
        "startLine": 577,
        "startChar": 0,
        "endLine": 582,
        "endChar": 9
      },
      "revId": "33636a2d8e600ba7f75d50c2a5d0ed20fd5e0fcc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "12b32723_25269cc4",
        "filename": "src/libANGLE/renderer/vulkan/linux/DmaBufImageSiblingVkLinux.cpp",
        "patchSetId": 6
      },
      "lineNbr": 582,
      "author": {
        "id": 1528827
      },
      "writtenOn": "2022-05-05T09:00:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7988b5ae_1f842413",
      "range": {
        "startLine": 577,
        "startChar": 0,
        "endLine": 582,
        "endChar": 9
      },
      "revId": "33636a2d8e600ba7f75d50c2a5d0ed20fd5e0fcc",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}