{
  "comments": [
    {
      "key": {
        "uuid": "5b912e26_b312a7b6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-06-25T17:21:15Z",
      "side": 1,
      "message": "Looks like it\u0027s done for depth/stencil too",
      "range": {
        "startLine": 7,
        "startChar": 33,
        "endLine": 7,
        "endChar": 46
      },
      "revId": "9e15d8193f7eab48e7da2fcddb1fd7e9aafb2a82",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5df1d1ef_90aca59b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1263724
      },
      "writtenOn": "2020-06-26T00:00:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5b912e26_b312a7b6",
      "range": {
        "startLine": 7,
        "startChar": 33,
        "endLine": 7,
        "endChar": 46
      },
      "revId": "9e15d8193f7eab48e7da2fcddb1fd7e9aafb2a82",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "469aa63f_66c88759",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 240,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-06-25T15:54:48Z",
      "side": 1,
      "message": "please consult this issue and resolve the TODO, same for the above.",
      "range": {
        "startLine": 240,
        "startChar": 57,
        "endLine": 240,
        "endChar": 61
      },
      "revId": "9e15d8193f7eab48e7da2fcddb1fd7e9aafb2a82",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5ee5d27d_9f54e222",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 240,
      "author": {
        "id": 1263724
      },
      "writtenOn": "2020-06-26T17:05:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "469aa63f_66c88759",
      "range": {
        "startLine": 240,
        "startChar": 57,
        "endLine": 240,
        "endChar": 61
      },
      "revId": "9e15d8193f7eab48e7da2fcddb1fd7e9aafb2a82",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a98d8ca_03da4a85",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1189,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-06-25T17:21:15Z",
      "side": 1,
      "message": "You need to test that the RP the context has is for this framebuffer, or ASSERT it if it\u0027s impossible otherwise. Please write a test based on this scenario to verify this:\n\nhttps://bugs.chromium.org/p/angleproject/issues/detail?id\u003d4444#c4",
      "revId": "9e15d8193f7eab48e7da2fcddb1fd7e9aafb2a82",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a591100_c8863693",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1189,
      "author": {
        "id": 1263724
      },
      "writtenOn": "2020-06-26T17:05:56Z",
      "side": 1,
      "message": "I added a test and stepped through to verify that we don\u0027t modify the renderpass if it doesn\u0027t match the current framebuffer. However, not sure I can make that validation happen automatically. How do you verify that the invalidate was processed if it\u0027s okay to not invalidate (e.g. flush the contents to memory)?\nI tried to capture the offending frame(s) on templerun but wasn\u0027t having any luck grabbing a frame with a glInvalidateFramebuffer in it via RenderDoc.",
      "parentUuid": "1a98d8ca_03da4a85",
      "revId": "9e15d8193f7eab48e7da2fcddb1fd7e9aafb2a82",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f8fa66c3_5790a03d",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1245,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-06-25T17:47:02Z",
      "side": 1,
      "message": "Shouldn\u0027t that invalidateContent also be called in the if() clause as well? The purpose of invalidateContent is to mark its data undefined so that next time you don\u0027t need to load it. This appears to me should be done regardless of RP started or not?",
      "range": {
        "startLine": 1245,
        "startChar": 35,
        "endLine": 1245,
        "endChar": 52
      },
      "revId": "9e15d8193f7eab48e7da2fcddb1fd7e9aafb2a82",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "65627763_5ed410e8",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1245,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-06-25T17:52:43Z",
      "side": 1,
      "message": "Also another concern - watch out for calling invalidate on the read fbo binding.",
      "parentUuid": "f8fa66c3_5790a03d",
      "range": {
        "startLine": 1245,
        "startChar": 35,
        "endLine": 1245,
        "endChar": 52
      },
      "revId": "9e15d8193f7eab48e7da2fcddb1fd7e9aafb2a82",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "15c35f55_ce71ca48",
        "filename": "src/libANGLE/renderer/vulkan/FramebufferVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1245,
      "author": {
        "id": 1263724
      },
      "writtenOn": "2020-06-26T00:00:17Z",
      "side": 1,
      "message": "Sure, we can do that.",
      "parentUuid": "f8fa66c3_5790a03d",
      "range": {
        "startLine": 1245,
        "startChar": 35,
        "endLine": 1245,
        "endChar": 52
      },
      "revId": "9e15d8193f7eab48e7da2fcddb1fd7e9aafb2a82",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}