{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "d813e1ff_905f12ca",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2023-09-28T22:18:04Z",
      "side": 1,
      "message": "LGTM.\n\nCould you also do data gathering of all app traces that we have to see if there is any and how many apps that end up with respecifyImageStorage() call due to this? What you could do is create a debug CL and add a boolean mHasBeenInitializedDuetoThisCL in TextureVk and set it to true when it is initialized by this CL. And then at respecifyImageStorage() time, if this boolean is true, you generate a log. Once you identified the textures that end p with respecifyImageStorage, you can disable this CL and see if it still gets into respecifyImageStorage. If we have the data, we can see what we can do to mitigate the negative impact, or how big the impact is.",
      "revId": "22943d90d2357ba105d0621cc2494893b544ff1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9bd398b4_e93a4dab",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-09-29T13:29:51Z",
      "side": 1,
      "message": "LGTM, assuming due diligence is done w.r.t making sure this isn\u0027t causing apps to end up double copying data (traces taken during app load are good for this, there\u0027s an angry_bird one at least).",
      "revId": "22943d90d2357ba105d0621cc2494893b544ff1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bfe819b8_b5d4b12d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1525982
      },
      "writtenOn": "2023-09-29T18:31:34Z",
      "side": 1,
      "message": "Thanks. In a test CL, I added `mHasBeenInitializedInThisCL` to `TextureVk`, which becomes true in case a single-level texture is being flushed due to this change. I also used a `FATAL()` at the beginning of `respecifyImageStorage()` if `mHasBeenInitializedInThisCL` is true, to see which traces experience this. However, I saw that all traces still pass on Android.",
      "parentUuid": "d813e1ff_905f12ca",
      "revId": "22943d90d2357ba105d0621cc2494893b544ff1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6c5af337_84454034",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2023-09-29T18:37:04Z",
      "side": 1,
      "message": "Thanks for checking!",
      "parentUuid": "bfe819b8_b5d4b12d",
      "revId": "22943d90d2357ba105d0621cc2494893b544ff1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "29de9dbe_4c895228",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 658,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-09-29T13:29:51Z",
      "side": 1,
      "message": "nit: \"We do not flush ... because ...\"\n\nI imagine this is about deferred clears?",
      "revId": "22943d90d2357ba105d0621cc2494893b544ff1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff180e22_06cdf0c8",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 6
      },
      "lineNbr": 658,
      "author": {
        "id": 1525982
      },
      "writtenOn": "2023-09-29T18:31:34Z",
      "side": 1,
      "message": "Without this (PS2), two tests failed on Pixel 6 (but still passed on Pixel 7):\n* `Texture2DTestES3YUV.TexStorage2DYuvFilterModes`\n* `Texture2DTestES3.TexStorage2DCycleThroughYuvAndRgbSources`\n\nBoth are the only users of `verifyResults2D()`, which contains a draw. Without this skip, it looks like these tests pass if there is only one `verifyResults2D()`, but fail if there are more.\n\nIn the beginning `Texture2DTest::testSetUp()`, a texture is created first and bound to a framebuffer, which would be flushed as a result of this CL later. If it is not flushed, the tests pass.",
      "parentUuid": "29de9dbe_4c895228",
      "revId": "22943d90d2357ba105d0621cc2494893b544ff1a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}