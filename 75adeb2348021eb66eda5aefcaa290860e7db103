{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "aadc2663_3bef07b5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2022-05-02T18:15:13Z",
      "side": 1,
      "message": "PTAL",
      "revId": "75adeb2348021eb66eda5aefcaa290860e7db103",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fe4736ce_7cf246d9",
        "filename": "src/tests/gl_tests/FramebufferTest.cpp",
        "patchSetId": 4
      },
      "lineNbr": 822,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-05-02T19:04:31Z",
      "side": 1,
      "message": "I wonder if this should be best handled as a handle allocator unit test... as it\u0027s written I think this is not a valid GLES test. I\u0027d recommend removing it.",
      "range": {
        "startLine": 796,
        "startChar": 0,
        "endLine": 822,
        "endChar": 1
      },
      "revId": "75adeb2348021eb66eda5aefcaa290860e7db103",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "965b2166_263b6e91",
        "filename": "src/tests/gl_tests/FramebufferTest.cpp",
        "patchSetId": 4
      },
      "lineNbr": 822,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2022-05-02T21:08:46Z",
      "side": 1,
      "message": "\u003e as it\u0027s written I think this is not a valid GLES test\n\nnot sure i understand this, what part of the test is not valid gles?",
      "parentUuid": "fe4736ce_7cf246d9",
      "range": {
        "startLine": 796,
        "startChar": 0,
        "endLine": 822,
        "endChar": 1
      },
      "revId": "75adeb2348021eb66eda5aefcaa290860e7db103",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2a9571ca_5a0c2431",
        "filename": "src/tests/gl_tests/FramebufferTest.cpp",
        "patchSetId": 4
      },
      "lineNbr": 822,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-05-03T12:57:44Z",
      "side": 1,
      "message": "These lines:\n\nGLTexture texture3D;\nglBindTexture(GL_TEXTURE_3D, texture3D);\nglFramebufferTextureLayer(GL_FRAMEBUFFER, GL_COLOR_ATTACHMENT0, -1, 0, 0);\nEXPECT_GL_ERROR(GL_INVALID_OPERATION);\n    \nThere\u0027s no way we can guarantee from the GLES spec that we generate an invalid operation after TextureLayer(-1). It\u0027s perfectly valid GLES for ANGLE to return a texture handle of -1 at any time from a glGenTextures call. We could even start allocating texures -1, -2, -3 from the start if we wanted. Other GLES implementations could easily fail this test and still be correct GLES implementations. And at some point we may eventually run these tests on other GLES implementations. So I recommend turning this into a handle allocator unit test, where we can validate the specific behaviour of the handle allocator.",
      "parentUuid": "965b2166_263b6e91",
      "range": {
        "startLine": 796,
        "startChar": 0,
        "endLine": 822,
        "endChar": 1
      },
      "revId": "75adeb2348021eb66eda5aefcaa290860e7db103",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3bd2cc32_10a9af7b",
        "filename": "src/tests/gl_tests/FramebufferTest.cpp",
        "patchSetId": 4
      },
      "lineNbr": 822,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2022-05-03T18:16:20Z",
      "side": 1,
      "message": "\u003e We could even start allocating texures -1, -2, -3 from the start if we wanted\n\nAck.\n\n\u003e So I recommend turning this into a handle allocator unit test, where we can validate the specific behaviour of the handle allocator.\n\nDone.",
      "parentUuid": "2a9571ca_5a0c2431",
      "range": {
        "startLine": 796,
        "startChar": 0,
        "endLine": 822,
        "endChar": 1
      },
      "revId": "75adeb2348021eb66eda5aefcaa290860e7db103",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}