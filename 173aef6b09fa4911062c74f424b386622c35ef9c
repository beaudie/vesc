{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "82e5c429_7851d2d1",
        "filename": "src/tests/gl_tests/GLSLTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 18298,
      "author": {
        "id": 1531247
      },
      "writtenOn": "2023-11-30T19:33:23Z",
      "side": 1,
      "message": "Would it be difficult to check the error message? Compilation might fail for an unrelated reason..",
      "range": {
        "startLine": 18298,
        "startChar": 4,
        "endLine": 18298,
        "endChar": 26
      },
      "revId": "173aef6b09fa4911062c74f424b386622c35ef9c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2ec76fa5_e94f9dc1",
        "filename": "src/tests/gl_tests/GLSLTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 18298,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-11-30T19:49:53Z",
      "side": 1,
      "message": "Actually that\u0027s exactly what\u0027s happening here, `gl_FragColor` doesn\u0027t exist in ES3! (I fixed that for the other CL, but forgot this one).\n\nThe problem is that the \"error message\" is not defined by the standard. It\u0027s not a good fit to test such a thing here, but I\u0027ll add another compiler-specific test that could do that.",
      "parentUuid": "82e5c429_7851d2d1",
      "range": {
        "startLine": 18298,
        "startChar": 4,
        "endLine": 18298,
        "endChar": 26
      },
      "revId": "173aef6b09fa4911062c74f424b386622c35ef9c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "03db6f74_dabafb0a",
        "filename": "src/tests/gl_tests/GLSLTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 18298,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-11-30T19:56:44Z",
      "side": 1,
      "message": "Done. Needs +2 again",
      "parentUuid": "2ec76fa5_e94f9dc1",
      "range": {
        "startLine": 18298,
        "startChar": 4,
        "endLine": 18298,
        "endChar": 26
      },
      "revId": "173aef6b09fa4911062c74f424b386622c35ef9c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d0fcc11c_3e053635",
        "filename": "src/tests/gl_tests/GLSLTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 18298,
      "author": {
        "id": 1531247
      },
      "writtenOn": "2023-11-30T20:10:30Z",
      "side": 1,
      "message": "Ah I see. Maybe call CompileShader twice? Once with less fields and check that it succeeds, then a second time with more fields and check that it fails.",
      "parentUuid": "03db6f74_dabafb0a",
      "range": {
        "startLine": 18298,
        "startChar": 4,
        "endLine": 18298,
        "endChar": 26
      },
      "revId": "173aef6b09fa4911062c74f424b386622c35ef9c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3b8f243b_5ea45117",
        "filename": "src/tests/gl_tests/GLSLTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 18298,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-12-01T23:11:17Z",
      "side": 1,
      "message": "That\u0027s basically the `LotsOfFieldsInStruct` test ðŸ˜Š",
      "parentUuid": "d0fcc11c_3e053635",
      "range": {
        "startLine": 18298,
        "startChar": 4,
        "endLine": 18298,
        "endChar": 26
      },
      "revId": "173aef6b09fa4911062c74f424b386622c35ef9c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "22a77ec8_eb86ee5d",
        "filename": "src/tests/gl_tests/GLSLTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 18298,
      "author": {
        "id": 1531247
      },
      "writtenOn": "2023-12-01T23:39:48Z",
      "side": 1,
      "message": "All minor, just to explain my point: as you pointed out there was a mistake in _this_ test. Structuring the test in a way where it first checks for success, then checks for failure would\u0027ve likely avoided that. It\u0027s better than creating separate tests because those can then diverge in future and a new mistake might sneak in. If the test is structured as pass(x) followed by fail(x+delta), then the mistake would have to be introduced in the delta, which is less likely. In this case the delta could be simply the number of repetitions, so introducing a mistake would be very unlikely.",
      "parentUuid": "3b8f243b_5ea45117",
      "range": {
        "startLine": 18298,
        "startChar": 4,
        "endLine": 18298,
        "endChar": 26
      },
      "revId": "173aef6b09fa4911062c74f424b386622c35ef9c",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}