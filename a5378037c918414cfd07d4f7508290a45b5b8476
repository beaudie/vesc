{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b138f40b_00aa5813",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2022-10-19T16:20:24Z",
      "side": 1,
      "message": "Created angle bug for this\nhttps://bugs.chromium.org/p/angleproject/issues/detail?id\u003d7767",
      "revId": "a5378037c918414cfd07d4f7508290a45b5b8476",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f49b1d65_a0be0c90",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2022-10-19T16:36:00Z",
      "side": 1,
      "message": "Replay to Jamie\n\nP.S. we have a small patch that adds yocto build to build system if - \"is_yocto_build\" is set as attribute. Yocto build has its own sysroot.\nWould you like that uploaded? for any other yocto users?",
      "revId": "a5378037c918414cfd07d4f7508290a45b5b8476",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "014ddedc_6ddcce85",
        "filename": "src/common/angleutils.h",
        "patchSetId": 6
      },
      "lineNbr": 567,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-10-19T10:56:20Z",
      "side": 1,
      "message": "can you use __has_cpp_attribute like the below ?\n\nSee https://chromium-review.googlesource.com/c/angle/angle/+/3718999\n\nalso please add a comment that this is necessary for compatibility with older versions of GCC",
      "range": {
        "startLine": 567,
        "startChar": 0,
        "endLine": 567,
        "endChar": 43
      },
      "revId": "a5378037c918414cfd07d4f7508290a45b5b8476",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff7c90b1_ba864bdd",
        "filename": "src/common/angleutils.h",
        "patchSetId": 6
      },
      "lineNbr": 567,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-10-19T14:35:57Z",
      "side": 1,
      "message": "That won\u0027t work. The issue is that gcc does have this attribute, but doesn\u0027t accept it on unused private members. Also why this CL is not changing all instances of `[[maybe_unused]]`. It\u0027s used in 4 places only, 2 of which can just drop the unused member, but the other 2 are padding.",
      "parentUuid": "014ddedc_6ddcce85",
      "range": {
        "startLine": 567,
        "startChar": 0,
        "endLine": 567,
        "endChar": 43
      },
      "revId": "a5378037c918414cfd07d4f7508290a45b5b8476",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "897102b7_f718f2a3",
        "filename": "src/common/angleutils.h",
        "patchSetId": 6
      },
      "lineNbr": 567,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-10-19T14:55:00Z",
      "side": 1,
      "message": "if this is a GCC bug, please make this an explicit GCC thing, ideally with a link to an upstream bug report",
      "parentUuid": "ff7c90b1_ba864bdd",
      "range": {
        "startLine": 567,
        "startChar": 0,
        "endLine": 567,
        "endChar": 43
      },
      "revId": "a5378037c918414cfd07d4f7508290a45b5b8476",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a1902acf_b349604f",
        "filename": "src/common/angleutils.h",
        "patchSetId": 6
      },
      "lineNbr": 567,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2022-10-19T16:20:24Z",
      "side": 1,
      "message": "I created this angle bug: https://bugs.chromium.org/p/angleproject/issues/detail?id\u003d7767\nOK?",
      "parentUuid": "897102b7_f718f2a3",
      "range": {
        "startLine": 567,
        "startChar": 0,
        "endLine": 567,
        "endChar": 43
      },
      "revId": "a5378037c918414cfd07d4f7508290a45b5b8476",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ce3bb42_f9985d85",
        "filename": "src/common/angleutils.h",
        "patchSetId": 6
      },
      "lineNbr": 567,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-10-19T16:24:17Z",
      "side": 1,
      "message": "Jeff: is this a GCC bug? Is there an upstream GCC bug report for it? Sorry I kinda missed earlier discussion if there was any.",
      "parentUuid": "a1902acf_b349604f",
      "range": {
        "startLine": 567,
        "startChar": 0,
        "endLine": 567,
        "endChar": 43
      },
      "revId": "a5378037c918414cfd07d4f7508290a45b5b8476",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8f51a021_e2f75a41",
        "filename": "src/common/angleutils.h",
        "patchSetId": 6
      },
      "lineNbr": 567,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-10-19T16:25:54Z",
      "side": 1,
      "message": "Just read the submit message more closely. Alternately, for GCC you can disable the attribute ignored message - please see this file for how disable things in a scoped way.",
      "parentUuid": "7ce3bb42_f9985d85",
      "range": {
        "startLine": 567,
        "startChar": 0,
        "endLine": 567,
        "endChar": 43
      },
      "revId": "a5378037c918414cfd07d4f7508290a45b5b8476",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0ce64b50_1e94a6fb",
        "filename": "src/common/angleutils.h",
        "patchSetId": 6
      },
      "lineNbr": 567,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2022-10-19T16:33:10Z",
      "side": 1,
      "message": "\u003e for GCC you can disable the attribute ignored message\n\n@jmadill@chromium.org not sure i understand the suggestion, having a macro indirection to abstract out toolchain idiosyncrasies seems like a reasonable approach to me, like how its done to `ANGLE_NO_SANITIZE_MEMORY` and such",
      "parentUuid": "8f51a021_e2f75a41",
      "range": {
        "startLine": 567,
        "startChar": 0,
        "endLine": 567,
        "endChar": 43
      },
      "revId": "a5378037c918414cfd07d4f7508290a45b5b8476",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eaf4fd29_aab45062",
        "filename": "src/common/angleutils.h",
        "patchSetId": 6
      },
      "lineNbr": 567,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2022-10-19T16:36:00Z",
      "side": 1,
      "message": "I created the bug per the request above. It was not an existing bug.\nSungyong is addressing all the warnings he gets when building ANGLE with yocto SDK.\nThey seem to apply to any GCC, so we are having them upstreamed here.",
      "parentUuid": "8f51a021_e2f75a41",
      "range": {
        "startLine": 567,
        "startChar": 0,
        "endLine": 567,
        "endChar": 43
      },
      "revId": "a5378037c918414cfd07d4f7508290a45b5b8476",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}