{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "cd2ea2c9_ba969953",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 5
      },
      "lineNbr": 5971,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-03-31T03:04:58Z",
      "side": 0,
      "message": "This may be incorrect. Could you write a test like this?\n\n- Create a texture with 3 levels, 4x4, 2x2 and 1x1\n- Use the texture (so everything is flushed)\n- Set max level to 1 (i.e. include only 4x4 and 2x2)\n- Upload data to level 0 (so there\u0027s something to flush in the base-max range)\n- Upload incompatible data to level 2 (for example with glTexImage2D with a size of 10x10)\n- Use the texture again (so flushStagedUpdates is called)\n\nIt looks like flushStagedUpdates at the last step would end up attempting to upload the 10x10 data to the last level. Unless levelGLEnd was already capped to max level, in which case this was redundant in the first place.",
      "revId": "b047e65125e6073cf32949d28892e2d11b091d4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cf958b9d_b16b2606",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 5
      },
      "lineNbr": 5971,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2021-03-31T18:18:03Z",
      "side": 0,
      "message": "Test added. It works correctly. What happens is that TextureVK code will set  mRedefinedLevels bit for incompatibly defined levels. And that mRedefinedLevels is passed down to flushStagedUpdates as skipLevelsMask argument, which we use it to skip the update.\n\nI think what this line impact is that if that level is compatibly defined, but level is outside the [base, max] range, before this CL we will defer the update. After this CL, it will gets updated. So for mutable texture, if someone redundantly update a level outside the range, then we may updating that level unnecessarily. But I dont think any real app does it such that we want to optimize this. And I think we probably also have a bug here before this CL, that for immutable texture, that level outside of [base, max] is not been updated and if you render to it, the update might get lost. This CL should also fix that.",
      "parentUuid": "cd2ea2c9_ba969953",
      "revId": "b047e65125e6073cf32949d28892e2d11b091d4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "209f7b94_80bc78b8",
        "filename": "src/libANGLE/renderer/vulkan/vk_helpers.cpp",
        "patchSetId": 5
      },
      "lineNbr": 5971,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2021-03-31T18:30:27Z",
      "side": 0,
      "message": "That\u0027s an excellent point Charlie, could you please write a test for the scenario you described?",
      "parentUuid": "cf958b9d_b16b2606",
      "revId": "b047e65125e6073cf32949d28892e2d11b091d4a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}