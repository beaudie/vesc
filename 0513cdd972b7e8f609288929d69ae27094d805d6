{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "593ab928_09b40ef1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-01-07T16:24:01Z",
      "side": 1,
      "message": "LGTM, Geoff want to review?",
      "revId": "0513cdd972b7e8f609288929d69ae27094d805d6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "620ae1ec_8e16b4a0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2022-01-07T21:04:14Z",
      "side": 1,
      "message": "Also LGTM with the format function refactored.",
      "revId": "0513cdd972b7e8f609288929d69ae27094d805d6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3578406d_6757e6a9",
        "filename": "src/common/debug.h",
        "patchSetId": 4
      },
      "lineNbr": 163,
      "author": {
        "id": 1130144
      },
      "writtenOn": "2022-01-07T18:18:47Z",
      "side": 1,
      "message": "Up to Jamie and Geoff but the type of this first parameter can also be templated to either be std::wostream or std::ostream. That should avoid code duplication.\n\n(Same goes for the other methods added to the CL)",
      "range": {
        "startLine": 163,
        "startChar": 22,
        "endLine": 163,
        "endChar": 35
      },
      "revId": "0513cdd972b7e8f609288929d69ae27094d805d6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7d7eb4fc_933fdc7a",
        "filename": "src/common/debug.h",
        "patchSetId": 4
      },
      "lineNbr": 163,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2022-01-07T21:04:14Z",
      "side": 1,
      "message": "Yea, refactoring this would be nice.",
      "parentUuid": "3578406d_6757e6a9",
      "range": {
        "startLine": 163,
        "startChar": 22,
        "endLine": 163,
        "endChar": 35
      },
      "revId": "0513cdd972b7e8f609288929d69ae27094d805d6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "840249f2_be4146ff",
        "filename": "src/common/debug.h",
        "patchSetId": 4
      },
      "lineNbr": 163,
      "author": {
        "id": 1265568
      },
      "writtenOn": "2022-01-19T03:33:14Z",
      "side": 1,
      "message": "This was difficult to do with the difference between \"0x\"/\u00270\u0027 and L\"0x\"/L\u00270\u0027. I made everything templated, with \u0027char\u0027 as the default type since most places that uses this are using char\u0027s. Please let me know if there\u0027s any feedback for it to be cleaner.",
      "parentUuid": "7d7eb4fc_933fdc7a",
      "range": {
        "startLine": 163,
        "startChar": 22,
        "endLine": 163,
        "endChar": 35
      },
      "revId": "0513cdd972b7e8f609288929d69ae27094d805d6",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}