{
  "comments": [
    {
      "key": {
        "uuid": "8218db28_036b7599",
        "filename": "src/libANGLE/Caps.h",
        "patchSetId": 7
      },
      "lineNbr": 45,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2019-02-14T18:52:59Z",
      "side": 1,
      "message": "Finding a way to merge this into a less repetitive macro would be nice but I don\u0027t have any suggestions.  Especially if the final result is just a DECLARE_EXTENSION() macro without numbers.\n\nAlso undefine after their last use.",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 45,
        "endChar": 10
      },
      "revId": "8164ac0b64fa67a56f6951d58fbcbd7686e00549",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "92138408_72fa670b",
        "filename": "src/libANGLE/Caps.h",
        "patchSetId": 7
      },
      "lineNbr": 504,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2019-02-14T18:52:59Z",
      "side": 1,
      "message": "I don\u0027t think we need this.",
      "range": {
        "startLine": 504,
        "startChar": 0,
        "endLine": 504,
        "endChar": 87
      },
      "revId": "8164ac0b64fa67a56f6951d58fbcbd7686e00549",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "56c4aa3f_1b082384",
        "filename": "src/libANGLE/Caps.h",
        "patchSetId": 7
      },
      "lineNbr": 518,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2019-02-14T18:52:59Z",
      "side": 1,
      "message": "Use reinterpret_cast or static_cast instead c-style casts.  Maybe a small helper that returns a bool\u0026 from the offset that the get and set can use.",
      "range": {
        "startLine": 518,
        "startChar": 9,
        "endLine": 518,
        "endChar": 17
      },
      "revId": "8164ac0b64fa67a56f6951d58fbcbd7686e00549",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}