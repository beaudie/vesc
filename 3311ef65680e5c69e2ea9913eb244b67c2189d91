{
  "comments": [
    {
      "key": {
        "uuid": "3107c7cd_525abc61",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 425,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2020-01-09T19:21:34Z",
      "side": 0,
      "message": "Have a hunch this is what caused the test failures.",
      "range": {
        "startLine": 424,
        "startChar": 0,
        "endLine": 425,
        "endChar": 45
      },
      "revId": "3311ef65680e5c69e2ea9913eb244b67c2189d91",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02f94e43_fd37eb36",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 425,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2020-01-09T20:32:51Z",
      "side": 0,
      "message": "Yes. good point. And unfortunate. This the place where which VkQueue was/is not explicit, so removing  was a hopeful coincident.",
      "parentUuid": "3107c7cd_525abc61",
      "range": {
        "startLine": 424,
        "startChar": 0,
        "endLine": 425,
        "endChar": 45
      },
      "revId": "3311ef65680e5c69e2ea9913eb244b67c2189d91",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "19d2dad0_9403b127",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 425,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2020-01-10T16:16:24Z",
      "side": 0,
      "message": "Forcing it use LOW VkQueue, the most likely - the failure went away. Now I need to figure out at this point what context/queue was used with this Surface (if still current) and use that.\n\nAt makeCurrent and unMakeCurrent I will set the Context and from that I can get the ContextVk with VkQueue.",
      "parentUuid": "02f94e43_fd37eb36",
      "range": {
        "startLine": 424,
        "startChar": 0,
        "endLine": 425,
        "endChar": 45
      },
      "revId": "3311ef65680e5c69e2ea9913eb244b67c2189d91",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1f821003_d73bbc04",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 425,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2020-01-10T18:58:19Z",
      "side": 0,
      "message": "Turns out that these surfaces are UnCurrent at the time of this flush/destroy.  So no current context. The current Queue will have to be remembered.",
      "parentUuid": "19d2dad0_9403b127",
      "range": {
        "startLine": 424,
        "startChar": 0,
        "endLine": 425,
        "endChar": 45
      },
      "revId": "3311ef65680e5c69e2ea9913eb244b67c2189d91",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9a13c65e_05a1a480",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 425,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2020-01-10T20:43:11Z",
      "side": 0,
      "message": "if we are uncurrent (and possibly destroying things) instead of caching some random copy of queue and having refcount logic, would it might make sense to do \"vkDeviceWaitIdle\" in this particular case?",
      "parentUuid": "1f821003_d73bbc04",
      "range": {
        "startLine": 424,
        "startChar": 0,
        "endLine": 425,
        "endChar": 45
      },
      "revId": "3311ef65680e5c69e2ea9913eb244b67c2189d91",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2b1b79f7_64448692",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 425,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2020-01-10T21:57:41Z",
      "side": 0,
      "message": "So instead of caching the ContextVk in the surface - which can\u0027t be certain its valid, because it can be deleted. I have cached the VkQueue from the context, at makeCurrent into the SurfaceVk (Window or OffScreen) - this VkQueue will be persistent. It is working.\n\nThat said, lets consider that, calling vkDeviceWaitIdle instead of current vkQueueWaitIdle. Spec says this is equivalent to vkQueueWaitIdle on all the queues of the device. So current thread would wait for all of those. This would happen for every destroy surface.\n\nComments?",
      "parentUuid": "9a13c65e_05a1a480",
      "range": {
        "startLine": 424,
        "startChar": 0,
        "endLine": 425,
        "endChar": 45
      },
      "revId": "3311ef65680e5c69e2ea9913eb244b67c2189d91",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "87e5470d_1d7c12f9",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 425,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2020-01-15T18:06:35Z",
      "side": 0,
      "message": "I think that\u0027s reasonable, we\u0027re not concerned about performance of surface destruction.  I\u0027ll let others comment their thoughts.",
      "parentUuid": "2b1b79f7_64448692",
      "range": {
        "startLine": 424,
        "startChar": 0,
        "endLine": 425,
        "endChar": 45
      },
      "revId": "3311ef65680e5c69e2ea9913eb244b67c2189d91",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f7e04c4_ff0238bc",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 425,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2020-01-15T18:55:23Z",
      "side": 0,
      "message": "It doesn\u0027t seem unreasonable that a Surface keep some data related to the Context to which it is current, so having queue here is OK with me. But using vkDeviceWaitIdle is certainly simpler - just potential cost of waiting multiple queues on the Device. As you said, that performance hit may be unimportant and insignificant.\n\nSo I await your preference - as designers/maintainers.",
      "parentUuid": "87e5470d_1d7c12f9",
      "range": {
        "startLine": 424,
        "startChar": 0,
        "endLine": 425,
        "endChar": 45
      },
      "revId": "3311ef65680e5c69e2ea9913eb244b67c2189d91",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa929f14_3d9b87f9",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 425,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-01-16T17:07:22Z",
      "side": 0,
      "message": "Honestly, since the code to do the better thing (wait queue idle instead of device idle) is done anyway, I personally prefer having vkQueueWaitIdle here.",
      "parentUuid": "7f7e04c4_ff0238bc",
      "range": {
        "startLine": 424,
        "startChar": 0,
        "endLine": 425,
        "endChar": 45
      },
      "revId": "3311ef65680e5c69e2ea9913eb244b67c2189d91",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd5a54a4_c9fd44db",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 425,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2020-01-16T17:47:49Z",
      "side": 0,
      "message": "I just changed it and was about to upload. :D . I can put back. Comment ASAP if you want to leave it.",
      "parentUuid": "aa929f14_3d9b87f9",
      "range": {
        "startLine": 424,
        "startChar": 0,
        "endLine": 425,
        "endChar": 45
      },
      "revId": "3311ef65680e5c69e2ea9913eb244b67c2189d91",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6cc65b94_b5579349",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 425,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-01-16T20:03:34Z",
      "side": 0,
      "message": "My personal preference is vkQueueWaitIdle as The Right Thing To Do (TM), but I don\u0027t particularly care if others prefer vkDeviceWaitIdle. Will defer the decision to another reviewer.",
      "parentUuid": "dd5a54a4_c9fd44db",
      "range": {
        "startLine": 424,
        "startChar": 0,
        "endLine": 425,
        "endChar": 45
      },
      "revId": "3311ef65680e5c69e2ea9913eb244b67c2189d91",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "05c3c60d_57e0f7e1",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 425,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2020-01-16T21:31:02Z",
      "side": 0,
      "message": "Also, my preference, but it will require caching VkQueue in SurfaceVk - from call to makeCurrent(). The benefit of vkDeviceWaitIdle is this cache goes away at cost of waiting idle for all queues. Bit of ugly either way - code ugly or performance ugly.",
      "parentUuid": "6cc65b94_b5579349",
      "range": {
        "startLine": 424,
        "startChar": 0,
        "endLine": 425,
        "endChar": 45
      },
      "revId": "3311ef65680e5c69e2ea9913eb244b67c2189d91",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "75f38407_514d1f30",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 425,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-01-16T21:36:20Z",
      "side": 0,
      "message": "Well, you have the renderer pointer here, you can always get the queue from the renderer based on the cached priority. What am I missing?",
      "parentUuid": "05c3c60d_57e0f7e1",
      "range": {
        "startLine": 424,
        "startChar": 0,
        "endLine": 425,
        "endChar": 45
      },
      "revId": "3311ef65680e5c69e2ea9913eb244b67c2189d91",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "abbf4731_e53bf4c6",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 425,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2020-01-16T21:49:48Z",
      "side": 0,
      "message": "Oops, you are correct.",
      "parentUuid": "75f38407_514d1f30",
      "range": {
        "startLine": 424,
        "startChar": 0,
        "endLine": 425,
        "endChar": 45
      },
      "revId": "3311ef65680e5c69e2ea9913eb244b67c2189d91",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}