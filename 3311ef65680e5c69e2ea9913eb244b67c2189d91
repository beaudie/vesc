{
  "comments": [
    {
      "key": {
        "uuid": "3107c7cd_525abc61",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 425,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2020-01-09T19:21:34Z",
      "side": 0,
      "message": "Have a hunch this is what caused the test failures.",
      "range": {
        "startLine": 424,
        "startChar": 0,
        "endLine": 425,
        "endChar": 45
      },
      "revId": "3311ef65680e5c69e2ea9913eb244b67c2189d91",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02f94e43_fd37eb36",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 425,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2020-01-09T20:32:51Z",
      "side": 0,
      "message": "Yes. good point. And unfortunate. This the place where which VkQueue was/is not explicit, so removing  was a hopeful coincident.",
      "parentUuid": "3107c7cd_525abc61",
      "range": {
        "startLine": 424,
        "startChar": 0,
        "endLine": 425,
        "endChar": 45
      },
      "revId": "3311ef65680e5c69e2ea9913eb244b67c2189d91",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "19d2dad0_9403b127",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 425,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2020-01-10T16:16:24Z",
      "side": 0,
      "message": "Forcing it use LOW VkQueue, the most likely - the failure went away. Now I need to figure out at this point what context/queue was used with this Surface (if still current) and use that.\n\nAt makeCurrent and unMakeCurrent I will set the Context and from that I can get the ContextVk with VkQueue.",
      "parentUuid": "02f94e43_fd37eb36",
      "range": {
        "startLine": 424,
        "startChar": 0,
        "endLine": 425,
        "endChar": 45
      },
      "revId": "3311ef65680e5c69e2ea9913eb244b67c2189d91",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1f821003_d73bbc04",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 425,
      "author": {
        "id": 1359249
      },
      "writtenOn": "2020-01-10T18:58:19Z",
      "side": 0,
      "message": "Turns out that these surfaces are UnCurrent at the time of this flush/destroy.  So no current context. The current Queue will have to be remembered.",
      "parentUuid": "19d2dad0_9403b127",
      "range": {
        "startLine": 424,
        "startChar": 0,
        "endLine": 425,
        "endChar": 45
      },
      "revId": "3311ef65680e5c69e2ea9913eb244b67c2189d91",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9a13c65e_05a1a480",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 4
      },
      "lineNbr": 425,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2020-01-10T20:43:11Z",
      "side": 0,
      "message": "if we are uncurrent (and possibly destroying things) instead of caching some random copy of queue and having refcount logic, would it might make sense to do \"vkDeviceWaitIdle\" in this particular case?",
      "parentUuid": "1f821003_d73bbc04",
      "range": {
        "startLine": 424,
        "startChar": 0,
        "endLine": 425,
        "endChar": 45
      },
      "revId": "3311ef65680e5c69e2ea9913eb244b67c2189d91",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}