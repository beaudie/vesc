{
  "comments": [
    {
      "key": {
        "uuid": "7b5ecc9b_f6151976",
        "filename": "src/tests/gl_tests/GLSLTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2932,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-08-02T18:15:22Z",
      "side": 1,
      "message": "Do you mean \"basic type\"? Primitives generally refer to rendering primitives like lines and triangles.",
      "range": {
        "startLine": 2932,
        "startChar": 51,
        "endLine": 2932,
        "endChar": 61
      },
      "revId": "d75fdc29ceb7cf505ed4fb2f327848ef179315b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cab02174_996a8781",
        "filename": "src/tests/gl_tests/GLSLTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2986,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-08-02T18:15:22Z",
      "side": 1,
      "message": "You can include gl_raii.h and use GLBuffer ubo, and let it take care of gen/delete calls.",
      "range": {
        "startLine": 2985,
        "startChar": 0,
        "endLine": 2986,
        "endChar": 26
      },
      "revId": "d75fdc29ceb7cf505ed4fb2f327848ef179315b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5b2ea2f4_bd99deac",
        "filename": "src/tests/gl_tests/GLSLTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2999,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-08-02T18:15:22Z",
      "side": 1,
      "message": "It\u0027s only sampler, so call it Sampler.",
      "range": {
        "startLine": 2999,
        "startChar": 36,
        "endLine": 2999,
        "endChar": 42
      },
      "revId": "d75fdc29ceb7cf505ed4fb2f327848ef179315b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "667879bd_ad6f3d21",
        "filename": "src/tests/gl_tests/GLSLTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 3001,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-08-02T18:15:22Z",
      "side": 1,
      "message": "Is that, or the SPIR-V error you mentioned? If you filed a bug for that, please let me know (I\u0027m curious).\n\nYou can also put the comment above, so you don\u0027t have to abbreviate things.",
      "revId": "d75fdc29ceb7cf505ed4fb2f327848ef179315b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c35a6c3_6b6ecccd",
        "filename": "src/tests/gl_tests/GLSLTest.cpp",
        "patchSetId": 2
      },
      "lineNbr": 3050,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-08-02T18:15:22Z",
      "side": 1,
      "message": "Again, Sampler.\n\nAlso, we definitely know \"sampler in struct\" works, I wanted to see if \"sampler array of array in struct\" works or not (or even \"sampler array in struct)!",
      "range": {
        "startLine": 3050,
        "startChar": 28,
        "endLine": 3050,
        "endChar": 34
      },
      "revId": "d75fdc29ceb7cf505ed4fb2f327848ef179315b5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}