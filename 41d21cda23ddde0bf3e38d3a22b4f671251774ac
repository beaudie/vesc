{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2e5b4acb_e92ba295",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-08-27T20:50:47Z",
      "side": 1,
      "message": "@Mohan, are you aware of this issue? Context: https://gitlab.khronos.org/vulkan/vulkan/-/issues/2906\n\nSummary of the bug (that\u0027s not accessible to you) is that `HardwareBufferImageSiblingVkAndroid::initImpl` is not looking at the EGL attributes, particularly `EGL_GL_COLORSPACE_SRGB`. Hacking things to use `GL_SRGB8_ALPHA8` instead of `GL_RGBA8` for the internal format leads to VVL error about trying to create an image with one format (srgb) that doesn\u0027t match the AHB format (unorm)\n\nThe failing test is `android.hardware.nativehardware.cts.AHardwareBufferNativeTests#SingleLayer_ColorTest_GpuSampledImageCanBeSampled_R8G8B8A8_UNORM_sRGB`, I assume it\u0027s in the Android CTS test, but Yiwei can clarify. If you do run this test, what did you do to make it work?",
      "revId": "41d21cda23ddde0bf3e38d3a22b4f671251774ac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3f1e58aa_95427922",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2022-08-28T13:14:30Z",
      "side": 1,
      "message": "\u003e HardwareBufferImageSiblingVkAndroid::initImpl  is not looking at the EGL attributes .... SRGB\n\nit is all tucked away inside `ImageHelper::DeriveCreateInfoPNext` -\u003e https://cs.android.com/android/platform/superproject/+/master:external/angle/src/libANGLE/renderer/vulkan/vk_helpers.cpp;l\u003d5294\n\n\u003e Hacking things to use  GL_SRGB8_ALPHA8  instead of  GL_RGBA8 \n\nthe image has to be RGBA since that is what the AHB is, it is the imageview that can be \"overridden\"\n\n\u003e If you do run this test, what did you do to make it work?\n\nlooks like this change broke it -\u003e https://chromium-review.googlesource.com/c/angle/angle/+/3141030",
      "parentUuid": "2e5b4acb_e92ba295",
      "revId": "41d21cda23ddde0bf3e38d3a22b4f671251774ac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6b96bbc0_8d631bf4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2022-08-28T13:44:26Z",
      "side": 1,
      "message": "forgot to earlier but here is the code that actually updates image state based on colorspace -\u003e https://cs.android.com/android/platform/superproject/+/master:external/angle/src/libANGLE/Image.cpp;l\u003d505",
      "parentUuid": "3f1e58aa_95427922",
      "revId": "41d21cda23ddde0bf3e38d3a22b4f671251774ac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bc638675_c8b577f3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-08-28T13:56:29Z",
      "side": 1,
      "message": "\u003e looks like this change broke it -\u003e https://chromium-review.googlesource.com/c/angle/angle/+/3141030\n\nCouldn\u0027t have expected a better response, thanks!",
      "parentUuid": "6b96bbc0_8d631bf4",
      "revId": "41d21cda23ddde0bf3e38d3a22b4f671251774ac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d75d9038_8118f54d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1509302
      },
      "writtenOn": "2022-08-28T15:01:39Z",
      "side": 1,
      "message": "Thanks Mohan and Shahbaz!!",
      "parentUuid": "bc638675_c8b577f3",
      "revId": "41d21cda23ddde0bf3e38d3a22b4f671251774ac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f2e216d2_1d8e56d2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1509302
      },
      "writtenOn": "2022-08-29T18:54:32Z",
      "side": 1,
      "message": "Restore this disablement CL since the conversion part was regressed even further out of what can be bisected (older angle doesn\u0027t build even after gclient sync and some manual fix).",
      "revId": "41d21cda23ddde0bf3e38d3a22b4f671251774ac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d9fe9ff6_8a87f782",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2022-08-29T22:42:39Z",
      "side": 1,
      "message": "With the extension disabled, will it cause real apps to fail to run or just cts (no real app depend on the extension yet)?\n\n\nWhat is the expected real fix for this issue? Are we expecting a vk spec revision? ",
      "revId": "41d21cda23ddde0bf3e38d3a22b4f671251774ac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e147292d_f08f390f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2022-08-29T22:47:14Z",
      "side": 1,
      "message": "My reading of the bug is that sRGB is really a view parameter, it does not affect actual image storage (for most of GUPs except earlier intel GPU)?\n\nIf the data upload is the sole issue here, the fix could be just we drop SRGB bit from format when check format compatibility for texture upload. (i.e., allow data copy of RGB to sRGB and vice verse, basically treat them as if they are the same)",
      "parentUuid": "d9fe9ff6_8a87f782",
      "revId": "41d21cda23ddde0bf3e38d3a22b4f671251774ac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0dc3da79_ba882874",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1509302
      },
      "writtenOn": "2022-08-29T22:49:24Z",
      "side": 1,
      "message": "This is not a required extension except on VR devices. Not even hwui makes it mandatory yet. Not on popular titles either. We\u0027ll find out if there\u0027re app compat issues.\n\n\u003e What is the expected real fix for this issue? Are we expecting a vk spec revision?\n\nNo, angle regressed it. Nothing needs to be done at Vulkan spec level. The mutable bit is set, and the list of mutable view formats are correct for the AHB backed external image. As long as the the correct sRGB data gets transfered to the image, and then sampled with the image view created with the sRGB format, the rendered result will be correct.\n\nFrom Mohan, that works initially, but later regressed.\n\n\u003e My reading of the bug is that sRGB is really a view parameter, it does not affect actual image storage (for most of GUPs except earlier intel GPU)?\n\nYes. The external image sibiling Android part looks correct.\n\n\u003e If the data upload is the sole issue here, the fix could be just we drop SRGB bit from format when check format compatibility for texture upload. (i.e., allow data copy of RGB to sRGB and vice verse, basically treat them as if they are the same)\n\nCould have other issue since reverting your CL mentioned in the bug would end up sampling the sRGB texture data as linear data (I suspect the false image view gets created or picked here, but I haven\u0027t gotten time to verify yet.).",
      "parentUuid": "d9fe9ff6_8a87f782",
      "revId": "41d21cda23ddde0bf3e38d3a22b4f671251774ac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "81ca04f7_8419087f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2022-08-29T22:58:46Z",
      "side": 1,
      "message": "I though VR usage is one of the motivations for some of the CLs originated from @Mohan. Mohan can clarify if this is required for their customer or not.\n\nI think the proper fix should be revise the format check to ignore sRGB bit difference. Then figure out why linear sampler is been used instead of sRGB?",
      "parentUuid": "0dc3da79_ba882874",
      "revId": "41d21cda23ddde0bf3e38d3a22b4f671251774ac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "74c72f5b_036318e0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1509302
      },
      "writtenOn": "2022-08-29T23:17:01Z",
      "side": 1,
      "message": "\u003e I think the proper fix should be revise the format check to ignore sRGB bit difference. Then figure out why linear sampler is been used instead of sRGB?\n\nI\u0027d prefer that if you guys have bandwidth in the short term ; ) and Jason\u0027s end2end test for this is well written: https://chromium-review.googlesource.com/c/angle/angle/+/3276713\n\nIf bandwidth doesnot permit, let\u0027s better disable it for now. I don\u0027t think other system integrators are relying on the broken behavior since the VR needs here is also around AHB interop. If system integrators have downstream patches to fix it, then it\u0027s up to them to enable it on the downstream side.",
      "parentUuid": "81ca04f7_8419087f",
      "revId": "41d21cda23ddde0bf3e38d3a22b4f671251774ac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a32b72ee_3f9832c9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2022-08-30T13:00:03Z",
      "side": 1,
      "message": "we reverted https://chromium-review.googlesource.com/c/angle/angle/+/3141030 internally and that allows the test to pass, though we are a bit behind upstream so subsequent changes may have broken things again. It is a required extension for VR and IIRC, some protected video playback usecases",
      "parentUuid": "74c72f5b_036318e0",
      "revId": "41d21cda23ddde0bf3e38d3a22b4f671251774ac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "94e99a49_ed81dedf",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2022-08-30T16:07:31Z",
      "side": 1,
      "message": "Thanks. I think we can disable the extension for now since you are behind upstream anyway. We should have a real fix this sooner.",
      "parentUuid": "a32b72ee_3f9832c9",
      "revId": "41d21cda23ddde0bf3e38d3a22b4f671251774ac",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Owners",
        "description": {
          "value": "User with the code owner override approved the change"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:enabled_code-owners"
          }
        },
        "submittabilityExpression": {
          "expressionString": "has:approval_code-owners"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Owners-Override\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:enabled_code-owners"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:enabled_code-owners"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:approval_code-owners"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["has:approval_code-owners"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Owners-Override=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Owners-Override=+1"]}
      },
      "patchSetCommitId": "41d21cda23ddde0bf3e38d3a22b4f671251774ac",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "41d21cda23ddde0bf3e38d3a22b4f671251774ac",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "41d21cda23ddde0bf3e38d3a22b4f671251774ac",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "41d21cda23ddde0bf3e38d3a22b4f671251774ac",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}