{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b329b119_88aea143",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2021-12-07T22:55:50Z",
      "side": 1,
      "message": "I tried this out locally, and it is functional, but I think we should update the filenames for merged frames.  With asphalt_9, you end up with filenames like this:\n\n $ ll -h asphalt_9\n 240M Dec  7 15:45 asphalt_9.angledata.gz\n 8.1K Dec  7 15:45 asphalt_9_context2.cpp\n 716K Dec  7 15:45 asphalt_9_context2_frame001.cpp \n 446K Dec  7 15:45 asphalt_9_context2_frame003.cpp \n 554K Dec  7 15:45 asphalt_9_context2_frame005.cpp \n 581K Dec  7 15:45 asphalt_9_context2_frame007.cpp \n 485K Dec  7 15:45 asphalt_9_context2_frame009.cpp \n 515K Dec  7 15:45 asphalt_9_context2_frame011.cpp \n 514K Dec  7 15:45 asphalt_9_context2_frame013.cpp \n 444K Dec  7 15:45 asphalt_9_context2_frame015.cpp \n 412K Dec  7 15:45 asphalt_9_context2_frame016.cpp \n ...\n\nOn first glance, it just looks like frames are missing.  Closer inspection shows that frames 2 and 3 are both in frame003.cpp.\n\nI would propose merged files be named something like:\n - frames2throughN.cpp or frames_2_N.cpp\n - frames2and3andN.cpp or frames_2_3_4_N.cpp\n - frames00200300400N.cpp\n",
      "revId": "ada72ac0db55c9f394b53dcccabd81d3c8358780",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "66c7b9e5_bfab4a7a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-12-07T23:22:38Z",
      "side": 1,
      "message": "Good catch Cody.   I agree that this makes the traces look broken.\n\nIf we want to keep the frame number in the filename, my vote would be for:\n    frames_2_3_4_N.cpp\n\nThat of course runs the risk of extremely long filenames since there could be \u003e10 frames per file.\n    \nHowever, I\u0027m leaning towards just dropping the frame number from the file entirely, and just naming the files sequentially (independent of the actual contents/frames).",
      "parentUuid": "b329b119_88aea143",
      "revId": "ada72ac0db55c9f394b53dcccabd81d3c8358780",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "64506125_730780d4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-12-08T14:43:04Z",
      "side": 1,
      "message": "Done, named files sequentially. I was something I was considering doing already so I went with that.",
      "parentUuid": "66c7b9e5_bfab4a7a",
      "revId": "ada72ac0db55c9f394b53dcccabd81d3c8358780",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8a0851fb_a8ad05f6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2021-12-08T16:45:35Z",
      "side": 1,
      "message": "Still a little goofy:\n\n asphalt_9$ ls -lah\n 227M Dec  8 09:41 asphalt_9.angledata.gz\n 739K Dec  8 09:41 asphalt_9_context2_005.cpp\n 495K Dec  8 09:41 asphalt_9_context2_006.cpp\n 498K Dec  8 09:41 asphalt_9_context2_007.cpp\n 505K Dec  8 09:41 asphalt_9_context2_008.cpp\n 460K Dec  8 09:41 asphalt_9_context2_009.cpp\n 444K Dec  8 09:41 asphalt_9_context2_010.cpp\n 511K Dec  8 09:41 asphalt_9_context2_011.cpp\n 505K Dec  8 09:41 asphalt_9_context2_012.cpp\n ...\n 626K Dec  8 09:41 asphalt_9_context2_054.cpp\n 540K Dec  8 09:41 asphalt_9_context2_055.cpp\n 567K Dec  8 09:41 asphalt_9_context2_056.cpp\n 8.1K Dec  8 09:41 asphalt_9_context2.cpp\n  14K Dec  8 09:41 asphalt_9_context2.h\n  643 Dec  8 09:41 asphalt_9_context3_002.cpp\n  431 Dec  8 09:41 asphalt_9_context4_001.cpp\n  527 Dec  8 09:41 asphalt_9_context5_003.cpp\n  431 Dec  8 09:41 asphalt_9_context6_004.cpp\n 3.0K Dec  8 09:41 asphalt_9.json\n 5.9M Dec  8 09:41 asphalt_9_shared.cpp\n\nCan you restart the index per context?",
      "parentUuid": "64506125_730780d4",
      "revId": "ada72ac0db55c9f394b53dcccabd81d3c8358780",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d1d0dacb_b084faf5",
        "filename": "src/libANGLE/capture/FrameCapture.cpp",
        "patchSetId": 5
      },
      "lineNbr": 4341,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-12-07T23:22:38Z",
      "side": 1,
      "message": "sourceSize \u003c\u003d 0\n\nThis should also check against something more practical than 0, like 10KB.   Otherwise, a value of \"1\" would never work in practice either.",
      "range": {
        "startLine": 4341,
        "startChar": 12,
        "endLine": 4341,
        "endChar": 26
      },
      "revId": "ada72ac0db55c9f394b53dcccabd81d3c8358780",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "86e239de_0f2f3140",
        "filename": "src/libANGLE/capture/FrameCapture.cpp",
        "patchSetId": 5
      },
      "lineNbr": 4341,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2021-12-08T14:43:04Z",
      "side": 1,
      "message": "Really any number is fine. A negative or zero or non-zero small number just means after one function it\u0027ll split the file. It\u0027s a threshold not a maximum. I left it as-is because \"0\" seems fine to me as a possible option where we want to disable merging.",
      "parentUuid": "d1d0dacb_b084faf5",
      "range": {
        "startLine": 4341,
        "startChar": 12,
        "endLine": 4341,
        "endChar": 26
      },
      "revId": "ada72ac0db55c9f394b53dcccabd81d3c8358780",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "58a79a66_7a54217b",
        "filename": "src/libANGLE/capture/FrameCapture.cpp",
        "patchSetId": 5
      },
      "lineNbr": 4341,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2021-12-08T18:27:13Z",
      "side": 1,
      "message": "I would plan to use zero to disable the feature, that\u0027s intuitive.",
      "parentUuid": "86e239de_0f2f3140",
      "range": {
        "startLine": 4341,
        "startChar": 12,
        "endLine": 4341,
        "endChar": 26
      },
      "revId": "ada72ac0db55c9f394b53dcccabd81d3c8358780",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ebb54074_7be62d80",
        "filename": "src/libANGLE/capture/FrameCapture.cpp",
        "patchSetId": 5
      },
      "lineNbr": 4341,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2021-12-08T18:27:13Z",
      "side": 1,
      "message": "I would plan to use zero to disable the feature, that\u0027s intuitive.",
      "parentUuid": "86e239de_0f2f3140",
      "range": {
        "startLine": 4341,
        "startChar": 12,
        "endLine": 4341,
        "endChar": 26
      },
      "revId": "ada72ac0db55c9f394b53dcccabd81d3c8358780",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae096311_2c560d8a",
        "filename": "src/libANGLE/capture/FrameCapture.cpp",
        "patchSetId": 5
      },
      "lineNbr": 4341,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2021-12-09T20:55:54Z",
      "side": 1,
      "message": "As Jamie pointed out, using 0 wouldn\u0027t disable it, but would take this feature to the extreme where every call is in its own file.   There isn\u0027t really a way to disable this feature and break on frame boundaries.",
      "parentUuid": "ebb54074_7be62d80",
      "range": {
        "startLine": 4341,
        "startChar": 12,
        "endLine": 4341,
        "endChar": 26
      },
      "revId": "ada72ac0db55c9f394b53dcccabd81d3c8358780",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}