{
  "comments": [
    {
      "key": {
        "uuid": "a69325fb_90674b15",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-08-07T00:19:38Z",
      "side": 1,
      "message": "Cody, can you try this for the different app combinations that you\u0027ve seen problems with?\n\nShabi, I want your feedback on how I plumbed this (I didn\u0027t see a great alternative to the approach of SurfaceVk directly calling a new ContextVk method.",
      "revId": "bb230e5fe1c2b701797705639b7a4ac273466bdb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "36468955_60d56f31",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1256237
      },
      "writtenOn": "2020-08-07T03:54:03Z",
      "side": 1,
      "message": "Hey Ian, I can confirm this fixes both scenarios for me: the transition from Angry Birds 2 to Candy Crush, and Mobile Legends by itself.  I see no visual errors or Vulkan validation warnings or errors in the log.  Thanks!",
      "revId": "bb230e5fe1c2b701797705639b7a4ac273466bdb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85cd8452_65102511",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-08-07T15:33:46Z",
      "side": 1,
      "message": "Better done in the front-end",
      "revId": "bb230e5fe1c2b701797705639b7a4ac273466bdb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "559e9fb8_efc1af63",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-08-07T15:34:07Z",
      "side": 1,
      "message": "Oops, you can ignore this comment.",
      "parentUuid": "85cd8452_65102511",
      "revId": "bb230e5fe1c2b701797705639b7a4ac273466bdb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "08a0c92b_187d004d",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 769,
      "author": {
        "id": 1263724
      },
      "writtenOn": "2020-08-07T13:34:38Z",
      "side": 1,
      "message": "Can we just set gl::State::DIRTY_BIT_DRAW_FRAMEBUFFER_BINDING and avoid the extra function and tests?",
      "revId": "bb230e5fe1c2b701797705639b7a4ac273466bdb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d2985359_cc15eed9",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 769,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-08-07T15:33:46Z",
      "side": 1,
      "message": "Another way:\n\nwhy not just update the rotation directly from SurfaceVk-\u003eContextVk instead of using dirty bits?",
      "parentUuid": "08a0c92b_187d004d",
      "revId": "bb230e5fe1c2b701797705639b7a4ac273466bdb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "392b82d1_b8c16d94",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 769,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-08-07T16:01:17Z",
      "side": 1,
      "message": "I\u0027m exploring both of these suggestions (my initial approach allowed Cody and I to get broader testing of the basic approach).\n\nProcessing the gl::State::DIRTY_BIT_DRAW_FRAMEBUFFER_BINDING bit has pros/cons.\n\n+ Pro: Work is deferred until needed \u0026 isn\u0027t duplicated (e.g. app changes scissor)\n\n    + Especially true for most apps which draw to an offscreen FBO at the start of a frame, and don\u0027t need this fix (as the dirty bit will be processed)\n\n+ Pro: We get correct results, as at least the following is needed:\n\n    + Set mCurrentRotationDrawFramebuffer\n    + Update the viewport\n    + Update the scissor\n\n- Con: More work is done that isn\u0027t needed for a rotation/size change (e.g. updateColorMask)\n\nUsing the dirty bit works.  Jamie, if you want, I\u0027ll try doing just the 3 things that I know are needed.",
      "parentUuid": "d2985359_cc15eed9",
      "revId": "bb230e5fe1c2b701797705639b7a4ac273466bdb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3e5f4de5_de5fb273",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 769,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-08-07T16:29:10Z",
      "side": 1,
      "message": "I tried just doing the following in ContextVk::surfaceRecreated(), and the correct rendering did NOT occur:\n\n    + Set mCurrentRotationDrawFramebuffer\n    + Update the viewport\n    + Update the scissor\n\nIt looks like I can\u0027t set the dirty bit here, since the dirty bits are in the gl::State class, and ContextVk methods can only get a const reference of gl::State.  I remember exploring a few different approaches yesterday before settling on my current approach.\n\nCan we live with this approach, or is there another alternative to explore?",
      "parentUuid": "392b82d1_b8c16d94",
      "revId": "bb230e5fe1c2b701797705639b7a4ac273466bdb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e27b2afa_101e58bd",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 769,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-08-07T16:55:59Z",
      "side": 1,
      "message": "Ian, when you tried that, did you check that the current framebuffer is the default framebuffer?",
      "parentUuid": "3e5f4de5_de5fb273",
      "revId": "bb230e5fe1c2b701797705639b7a4ac273466bdb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9be8e800_19075b6b",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 769,
      "author": {
        "id": 1263724
      },
      "writtenOn": "2020-08-07T17:18:40Z",
      "side": 1,
      "message": "Doing a little more work when a surface\u0027s rotation changes shouldn\u0027t be a big deal.\nI was hoping to avoid adding an extra check that rarely fires into setup for every draw call.",
      "parentUuid": "e27b2afa_101e58bd",
      "revId": "bb230e5fe1c2b701797705639b7a4ac273466bdb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4029a324_19cf8cb7",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 769,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-08-07T17:33:27Z",
      "side": 1,
      "message": "\u003e Ian, when you tried that, did you check that the current framebuffer is the default framebuffer?\n\nNot initially, but it didn\u0027t make a difference.  The time of recreateSwapchain seems to be too early to do the work (I\u0027ve run into asserts because we\u0027ve not yet acquired the swapchain images yet).\n\n\u003e Doing a little more work when a surface\u0027s rotation changes shouldn\u0027t be a big deal.\n\u003e I was hoping to avoid adding an extra check that rarely fires into setup for every draw call.\n\nAgreed.  It\u0027s a little frustrating that the Vulkan back-end can\u0027t set a dirty bit when it detects something that needs to be dealt with.",
      "parentUuid": "9be8e800_19075b6b",
      "revId": "bb230e5fe1c2b701797705639b7a4ac273466bdb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fbbda1a8_9718a51b",
        "filename": "src/libANGLE/renderer/vulkan/SurfaceVk.cpp",
        "patchSetId": 1
      },
      "lineNbr": 769,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-08-07T21:30:49Z",
      "side": 1,
      "message": "After some discussion in Chat, I learned about ANGLE\u0027s subject-observer pattern, and re-implemented this CL using that.",
      "parentUuid": "4029a324_19cf8cb7",
      "revId": "bb230e5fe1c2b701797705639b7a4ac273466bdb",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}