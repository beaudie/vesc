{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "222f095d_c18cb591",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-12-10T17:12:06Z",
      "side": 1,
      "message": "Tim, following up.",
      "revId": "b1858e8265b9ceb3eaba45a3c490ccc613f86b82",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d20ecee_9f05b87b",
        "filename": "src/libANGLE/Program.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1289,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-12-10T16:22:14Z",
      "side": 1,
      "message": "May be worth an:\n    ASSERT(mAttachedShaders[ShaderType::Vertex]);",
      "revId": "b1858e8265b9ceb3eaba45a3c490ccc613f86b82",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6dc8eb04_7848a093",
        "filename": "src/libANGLE/Program.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1289,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-12-10T17:12:06Z",
      "side": 1,
      "message": "I don\u0027t think this ASSERTion would be valid. Maybe the function name could be more specific in that it defaults to vertex if there is no attached XFB stage. Or it could return invalid enum. I\u0027m happy with leaving it as is.",
      "parentUuid": "4d20ecee_9f05b87b",
      "revId": "b1858e8265b9ceb3eaba45a3c490ccc613f86b82",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ed8777b6_0ba46787",
        "filename": "src/libANGLE/Program.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1289,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-12-10T17:57:59Z",
      "side": 1,
      "message": "Yeah, defaulting to vertex should be safe based on how it\u0027s used.   Returning InvalidEnum may be tough/ugly since you\u0027d need to make sure not to index into the gl::ShaderMap with it.\n\nAs far as naming, maybe dropping the \"Attached\" part would be enough, since that\u0027s not necessarily true every time.   Up to you.",
      "parentUuid": "6dc8eb04_7848a093",
      "revId": "b1858e8265b9ceb3eaba45a3c490ccc613f86b82",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3a47b10d_cdf841ab",
        "filename": "src/libANGLE/ProgramExecutable.cpp",
        "patchSetId": 4
      },
      "lineNbr": 552,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-12-10T16:22:14Z",
      "side": 1,
      "message": "same",
      "revId": "b1858e8265b9ceb3eaba45a3c490ccc613f86b82",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3274b628_409f7d0a",
        "filename": "src/libANGLE/ProgramExecutable.cpp",
        "patchSetId": 4
      },
      "lineNbr": 552,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-12-10T17:12:06Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "3a47b10d_cdf841ab",
      "revId": "b1858e8265b9ceb3eaba45a3c490ccc613f86b82",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f826df8c_a80c0b51",
        "filename": "src/libANGLE/renderer/glslang_wrapper_utils.cpp",
        "patchSetId": 4
      },
      "lineNbr": 3739,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-12-10T16:22:14Z",
      "side": 1,
      "message": "How does this work with Geometry shaders which will get processed twice?   Will it still end up with the right markers?",
      "range": {
        "startLine": 3729,
        "startChar": 0,
        "endLine": 3739,
        "endChar": 5
      },
      "revId": "b1858e8265b9ceb3eaba45a3c490ccc613f86b82",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4cf34122_37db4746",
        "filename": "src/libANGLE/renderer/glslang_wrapper_utils.cpp",
        "patchSetId": 4
      },
      "lineNbr": 3739,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-12-10T16:43:36Z",
      "side": 1,
      "message": "GS is not processed twice, it\u0027s VS and TES that are processed if the xfb stage is after them.",
      "parentUuid": "f826df8c_a80c0b51",
      "range": {
        "startLine": 3729,
        "startChar": 0,
        "endLine": 3739,
        "endChar": 5
      },
      "revId": "b1858e8265b9ceb3eaba45a3c490ccc613f86b82",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4883a862_949b2ef9",
        "filename": "src/libANGLE/renderer/glslang_wrapper_utils.cpp",
        "patchSetId": 4
      },
      "lineNbr": 3739,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-12-10T17:01:24Z",
      "side": 1,
      "message": "Ah, right, for some reason I was thinking this was like GlslangAssignLocations(), but this is only called once with all shader stages.",
      "parentUuid": "4cf34122_37db4746",
      "range": {
        "startLine": 3729,
        "startChar": 0,
        "endLine": 3739,
        "endChar": 5
      },
      "revId": "b1858e8265b9ceb3eaba45a3c490ccc613f86b82",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}