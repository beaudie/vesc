{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f6d69106_dfb0d5a8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 18
      },
      "lineNbr": 0,
      "author": {
        "id": 1531247
      },
      "writtenOn": "2023-05-19T22:03:13Z",
      "side": 1,
      "message": "Added support and tests for Sint and Float, working locally. Running CI tests, will finalize and send for review next week :)",
      "revId": "7689c6364eaf2689791620c271c6568b306b508a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b7e25496_3db2ace9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 18
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-05-23T17:35:59Z",
      "side": 1,
      "message": "Could you please move the tests to TextureTest.cpp? GLSLTest.cpp is for compiler-related tests",
      "revId": "7689c6364eaf2689791620c271c6568b306b508a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1499b70d_e83493e1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 18
      },
      "lineNbr": 0,
      "author": {
        "id": 1531247
      },
      "writtenOn": "2023-05-25T15:26:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b7e25496_3db2ace9",
      "revId": "7689c6364eaf2689791620c271c6568b306b508a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4a8ac788_023096c0",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 18
      },
      "lineNbr": 2939,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2023-05-22T17:47:47Z",
      "side": 1,
      "message": "What if driver does support R32G32B32_FLOAT native, from this logic, it appears will still go down conversion code path?",
      "range": {
        "startLine": 2939,
        "startChar": 12,
        "endLine": 2939,
        "endChar": 82
      },
      "revId": "7689c6364eaf2689791620c271c6568b306b508a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ead87ad0_8173304e",
        "filename": "src/libANGLE/renderer/vulkan/TextureVk.cpp",
        "patchSetId": 18
      },
      "lineNbr": 2939,
      "author": {
        "id": 1531247
      },
      "writtenOn": "2023-05-25T19:03:15Z",
      "side": 1,
      "message": "Updated to use the check which was previously done in HasTextureBufferSupport\n\nI had to:\n* skip a VVL error as per https://anglebug.com/8128#c3\n* remove the SSBOWriteWithoutBarrier test as it was crashing when we did NOT take the emulation path (https://paste.googleplex.com/5432101254987776)",
      "parentUuid": "4a8ac788_023096c0",
      "range": {
        "startLine": 2939,
        "startChar": 12,
        "endLine": 2939,
        "endChar": 82
      },
      "revId": "7689c6364eaf2689791620c271c6568b306b508a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c65ddb87_0d0dcd42",
        "filename": "src/libANGLE/renderer/vulkan/UtilsVk.cpp",
        "patchSetId": 18
      },
      "lineNbr": 3395,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-05-23T17:32:35Z",
      "side": 1,
      "message": "FWIW, now that you\u0027ve done all the tracking and proper non-hacky implementation, you can have `ContextVk::handleDirtyTexturesImpl` and `ContextVk::updateActiveImages` use the conversion buffer instead of the original buffer for tracking purposes, and then this barrier would be automatic.\n\nIt seems to me like it\u0027s pretty much enough to have `TextureVk::getBuffer()` return the appropriate buffer and you\u0027re all set (but please double check)",
      "range": {
        "startLine": 3386,
        "startChar": 0,
        "endLine": 3395,
        "endChar": 99
      },
      "revId": "7689c6364eaf2689791620c271c6568b306b508a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "86125768_a38ff02f",
        "filename": "src/libANGLE/renderer/vulkan/UtilsVk.cpp",
        "patchSetId": 18
      },
      "lineNbr": 3395,
      "author": {
        "id": 1531247
      },
      "writtenOn": "2023-05-25T14:40:40Z",
      "side": 1,
      "message": "This change is not obvious to me; I\u0027d like to finalize this CL even if some things are not perfect.",
      "parentUuid": "c65ddb87_0d0dcd42",
      "range": {
        "startLine": 3386,
        "startChar": 0,
        "endLine": 3395,
        "endChar": 99
      },
      "revId": "7689c6364eaf2689791620c271c6568b306b508a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6ce55fc2_7b3fabd7",
        "filename": "src/libANGLE/renderer/vulkan/UtilsVk.cpp",
        "patchSetId": 18
      },
      "lineNbr": 3395,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-05-25T14:50:04Z",
      "side": 1,
      "message": "That\u0027s fine as a follow up.",
      "parentUuid": "86125768_a38ff02f",
      "range": {
        "startLine": 3386,
        "startChar": 0,
        "endLine": 3395,
        "endChar": 99
      },
      "revId": "7689c6364eaf2689791620c271c6568b306b508a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cb8b4240_4224e21b",
        "filename": "src/libANGLE/renderer/vulkan/UtilsVk.cpp",
        "patchSetId": 18
      },
      "lineNbr": 3395,
      "author": {
        "id": 1531247
      },
      "writtenOn": "2023-06-22T19:11:42Z",
      "side": 1,
      "message": "IIUC Shabi took care of this in https://crrev.com/c/4571701\n\nSo unless I\u0027m missing something the only remaining follow up on this is the potential consistency improvement switching mContentsObservers to subject/observer - but Charlie pointed out it is trickier than just calling onStateChange for the data change as that would likely cause CPU overhead because this path isn\u0027t needed most of the time.",
      "parentUuid": "6ce55fc2_7b3fabd7",
      "range": {
        "startLine": 3386,
        "startChar": 0,
        "endLine": 3395,
        "endChar": 99
      },
      "revId": "7689c6364eaf2689791620c271c6568b306b508a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c733e15c_0cca4498",
        "filename": "src/tests/gl_tests/GLSLTest.cpp",
        "patchSetId": 18
      },
      "lineNbr": 7301,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2023-05-23T17:35:59Z",
      "side": 1,
      "message": "nit: the tests shouldn\u0027t need to know about emulation, you can just drop this from the name.",
      "range": {
        "startLine": 7301,
        "startChar": 40,
        "endLine": 7301,
        "endChar": 49
      },
      "revId": "7689c6364eaf2689791620c271c6568b306b508a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0a4527cf_8a93f64f",
        "filename": "src/tests/gl_tests/GLSLTest.cpp",
        "patchSetId": 18
      },
      "lineNbr": 7301,
      "author": {
        "id": 1531247
      },
      "writtenOn": "2023-05-25T15:26:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c733e15c_0cca4498",
      "range": {
        "startLine": 7301,
        "startChar": 40,
        "endLine": 7301,
        "endChar": 49
      },
      "revId": "7689c6364eaf2689791620c271c6568b306b508a",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}