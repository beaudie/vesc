{
  "comments": [
    {
      "key": {
        "uuid": "8d20f524_4f9568c7",
        "filename": "src/libGLESv2/global_state.cpp",
        "patchSetId": 5
      },
      "lineNbr": 161,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2019-07-08T16:13:45Z",
      "side": 1,
      "message": "Feels to me like `DeallocateMutex` is being called too early.\n\nIf the threads are guaranteed to not want to take the mutex again (for example, because they were notified of the termination), then `DeallocateMutex` should be done after the threads are cleaned up (so it\u0027s obvious they are not holding the lock).\n\nIf the threads are **not** guaranteed to never take the mutex again, this is a race here.",
      "revId": "ea6d05e0cf75c450b92b723ba1b445950f9a2c62",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3297187f_c4c862c4",
        "filename": "src/libGLESv2/global_state.cpp",
        "patchSetId": 5
      },
      "lineNbr": 161,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2019-07-08T17:07:20Z",
      "side": 1,
      "message": "Sorry Shabi, is this a blocking issue? I assumed Geoff\u0027s change was non-controversial.",
      "parentUuid": "8d20f524_4f9568c7",
      "revId": "ea6d05e0cf75c450b92b723ba1b445950f9a2c62",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f854840f_b1ab31a7",
        "filename": "src/libGLESv2/global_state.cpp",
        "patchSetId": 5
      },
      "lineNbr": 161,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2019-07-08T17:25:08Z",
      "side": 1,
      "message": "FWIW I hit this problem when closing the console window while running the end2end tests, maybe the DllMain function is called from a different thread than the one that is executing GL/EGL.",
      "parentUuid": "3297187f_c4c862c4",
      "revId": "ea6d05e0cf75c450b92b723ba1b445950f9a2c62",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    }
  ]
}