{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "57c59e5f_2bef5267",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 5855,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2023-08-03T22:39:31Z",
      "side": 1,
      "message": "Why not just change to getMemoryTypeBitsExcludesHostVisible() and remove memoryTypeBits that has host visible bit in it? My worry is that it is a bit too restrictive here by require exact match of requiredFlags|preferredFlags.",
      "range": {
        "startLine": 5855,
        "startChar": 30,
        "endLine": 5855,
        "endChar": 51
      },
      "revId": "9e781544cdfab236b1c829e42bb78a0152f3042d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d49391da_f832c90f",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 5855,
      "author": {
        "id": 1525982
      },
      "writtenOn": "2023-08-03T23:00:31Z",
      "side": 1,
      "message": "If the function is unable to find a memory type index that exactly matches these bits, it returns 0, which is interpreted in VMA as all memory type indices. We could also opt to remove the indices with the host-visible bit entirely if this bit is never used to allocate textures.",
      "parentUuid": "57c59e5f_2bef5267",
      "range": {
        "startLine": 5855,
        "startChar": 30,
        "endLine": 5855,
        "endChar": 51
      },
      "revId": "9e781544cdfab236b1c829e42bb78a0152f3042d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d75b5bc6_95018aec",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 5855,
      "author": {
        "id": 1525982
      },
      "writtenOn": "2023-08-04T00:27:36Z",
      "side": 1,
      "message": "No case was found in which the host-visible bit is used for image allocation. I have updated the function to remove all memory type bits with this flag instead.",
      "parentUuid": "d49391da_f832c90f",
      "range": {
        "startLine": 5855,
        "startChar": 30,
        "endLine": 5855,
        "endChar": 51
      },
      "revId": "9e781544cdfab236b1c829e42bb78a0152f3042d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7baca76c_5095f53c",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 5898,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2023-08-03T22:39:31Z",
      "side": 1,
      "message": "Will this ever allocate anything if you use memoryTypeBits\u003d0? My understanding is that line 5899 will always return failure. \n\nMy suggestion is you remove host visible at line 5821, but use original memoryRequirements here.",
      "range": {
        "startLine": 5898,
        "startChar": 8,
        "endLine": 5898,
        "endChar": 27
      },
      "revId": "9e781544cdfab236b1c829e42bb78a0152f3042d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8515f6d4_4a56195c",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 5898,
      "author": {
        "id": 1525982
      },
      "writtenOn": "2023-08-03T23:00:31Z",
      "side": 1,
      "message": "In `vma::VmaAllocationCreateInfo`, `memoryTypeBits \u003d 0` is equivalent to `UINT32_MAX` (all memory types are accepted).",
      "parentUuid": "7baca76c_5095f53c",
      "range": {
        "startLine": 5898,
        "startChar": 8,
        "endLine": 5898,
        "endChar": 27
      },
      "revId": "9e781544cdfab236b1c829e42bb78a0152f3042d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc8a0649_48c2c3ea",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 5898,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2023-08-04T00:12:46Z",
      "side": 1,
      "message": "Right, but isn\u0027t that violates the memoryRequirements returned from line 5851?\n    image-\u003egetMemoryRequirements(renderer-\u003egetDevice(), \u0026memoryRequirements);",
      "parentUuid": "8515f6d4_4a56195c",
      "range": {
        "startLine": 5898,
        "startChar": 8,
        "endLine": 5898,
        "endChar": 27
      },
      "revId": "9e781544cdfab236b1c829e42bb78a0152f3042d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c7570879_68bac56b",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 5898,
      "author": {
        "id": 1525982
      },
      "writtenOn": "2023-08-04T00:27:36Z",
      "side": 1,
      "message": "It shouldn\u0027t, since `memoryTypeBits` is 0 by default before this CL (e.g., in `AllocateAndBindMemoryForImage()`). However, we can also use the original `memoryRequirements.memoryTypeBits` for the fallback option. I have updated this line.",
      "parentUuid": "fc8a0649_48c2c3ea",
      "range": {
        "startLine": 5898,
        "startChar": 8,
        "endLine": 5898,
        "endChar": 27
      },
      "revId": "9e781544cdfab236b1c829e42bb78a0152f3042d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e89bbd9b_650b789f",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 5898,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2023-08-04T00:42:15Z",
      "side": 1,
      "message": "That sounds like there is a bug before this CL. The memory allocated has to meet the image\u0027s requirement.",
      "parentUuid": "c7570879_68bac56b",
      "range": {
        "startLine": 5898,
        "startChar": 8,
        "endLine": 5898,
        "endChar": 27
      },
      "revId": "9e781544cdfab236b1c829e42bb78a0152f3042d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c6457395_6c68e359",
        "filename": "src/libANGLE/renderer/vulkan/RendererVk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 5898,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2023-08-04T00:49:08Z",
      "side": 1,
      "message": "Actually I think you are right, 0 means no restriction other than what required by image. VMA is calling image-\u003egetMemoryRequirements again in their code. So 0 is just fine.",
      "parentUuid": "e89bbd9b_650b789f",
      "range": {
        "startLine": 5898,
        "startChar": 8,
        "endLine": 5898,
        "endChar": 27
      },
      "revId": "9e781544cdfab236b1c829e42bb78a0152f3042d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}