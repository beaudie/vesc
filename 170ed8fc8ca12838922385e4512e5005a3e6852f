{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6436e1fd_c47e234c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2020-11-11T15:28:19Z",
      "side": 1,
      "message": "charlie, for completeness can you add this bug tag as well -\n Bug: angleproject:3589",
      "revId": "170ed8fc8ca12838922385e4512e5005a3e6852f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c4cc6713_bab44232",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1392020
      },
      "writtenOn": "2020-11-11T04:49:31Z",
      "side": 1,
      "message": "Mohan\u0027s change went in before my change, this is to switch RewriteInterpolateAtOffset to use specialization constant.",
      "revId": "170ed8fc8ca12838922385e4512e5005a3e6852f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "60231250_0bc5ec66",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-11-11T17:00:33Z",
      "side": 1,
      "message": "LGTM but I want to do some testing before I +2 (was slowed by some infrastructure issues).  Question for Jamie.",
      "revId": "170ed8fc8ca12838922385e4512e5005a3e6852f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "15708760_5a15a94c",
        "filename": "src/compiler/translator/tree_ops/RewriteInterpolateAtOffset.cpp",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-11-11T12:40:48Z",
      "side": 1,
      "message": "nit: explicitly cast to int per our usual style",
      "range": {
        "startLine": 61,
        "startChar": 20,
        "endLine": 61,
        "endChar": 59
      },
      "revId": "170ed8fc8ca12838922385e4512e5005a3e6852f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a5531709_d7166538",
        "filename": "src/compiler/translator/tree_ops/RewriteInterpolateAtOffset.cpp",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 1290487
      },
      "writtenOn": "2020-11-11T17:00:33Z",
      "side": 1,
      "message": "Do we need a cast here?\n\nPerhaps I\u0027m missing something (why I\u0027m asking).  mUsePreRotation is a bool.  I see this same pattern (\"compileOptions \u0026 \u003cflag\u003e\") elsewhere in the shader translator code, including the following in \"TranslatorVulkan.cpp\":\n\n    bool usePreRotation \u003d compileOptions \u0026 SH_ADD_PRE_ROTATION;",
      "parentUuid": "15708760_5a15a94c",
      "range": {
        "startLine": 61,
        "startChar": 20,
        "endLine": 61,
        "endChar": 59
      },
      "revId": "170ed8fc8ca12838922385e4512e5005a3e6852f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e6f246d8_3d887f5b",
        "filename": "src/compiler/translator/tree_ops/RewriteInterpolateAtOffset.cpp",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-11-11T21:48:49Z",
      "side": 1,
      "message": "What Jamie means is this: `(compileOptions \u0026 SH_ADD_PRE_ROTATION) !\u003d 0`.",
      "parentUuid": "a5531709_d7166538",
      "range": {
        "startLine": 61,
        "startChar": 20,
        "endLine": 61,
        "endChar": 59
      },
      "revId": "170ed8fc8ca12838922385e4512e5005a3e6852f",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}