{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "0ba73515_9b7b2e78",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2022-03-01T22:03:18Z",
      "side": 1,
      "message": "PTAL",
      "revId": "0ea2484253ce3b77b59ec64e4cbb809506c39ab5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "01d26d32_689b8dba",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-03-01T22:56:55Z",
      "side": 1,
      "message": "Switching reviewers, as Tim has changed teams.\n\nAny perf numbers to share?",
      "revId": "0ea2484253ce3b77b59ec64e4cbb809506c39ab5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "610017ed_adc5b6b2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-03-03T14:28:02Z",
      "side": 1,
      "message": "This is a pretty small CL, that\u0027s good. A few suggestions below on some cleanups. Nothing major to change before I\u0027d be happy to land this.",
      "revId": "0ea2484253ce3b77b59ec64e4cbb809506c39ab5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "32ece795_ba45c6a9",
        "filename": "include/platform/FeaturesVk.h",
        "patchSetId": 9
      },
      "lineNbr": 645,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-03-03T14:28:02Z",
      "side": 1,
      "message": "I suggest we update the CL\u0027s terminology to reflect the Vulkan API, not what we want out of the behaviour of the ICD. So, this would be createPipelinesDuringLink (a bit shorter than ProgramLink as well) .. and other references to \"compile shaders\" would be \"create pipelines\". Otherwise it quickly becomes confusing as to what types of shaders we\u0027re talking about here.",
      "range": {
        "startLine": 645,
        "startChar": 12,
        "endLine": 645,
        "endChar": 44
      },
      "revId": "0ea2484253ce3b77b59ec64e4cbb809506c39ab5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f34407c9_b6a30725",
        "filename": "src/libANGLE/renderer/vulkan/ProgramExecutableVk.h",
        "patchSetId": 9
      },
      "lineNbr": 158,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-03-03T14:28:02Z",
      "side": 1,
      "message": "I\u0027d suggest just merging these two, no need to have the implicit call anymore.",
      "range": {
        "startLine": 147,
        "startChar": 0,
        "endLine": 158,
        "endChar": 72
      },
      "revId": "0ea2484253ce3b77b59ec64e4cbb809506c39ab5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3a63e282_4e773665",
        "filename": "src/libANGLE/renderer/vulkan/ProgramVk.cpp",
        "patchSetId": 9
      },
      "lineNbr": 139,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-03-03T14:28:02Z",
      "side": 1,
      "message": "nit: contextVk",
      "range": {
        "startLine": 139,
        "startChar": 48,
        "endLine": 139,
        "endChar": 55
      },
      "revId": "0ea2484253ce3b77b59ec64e4cbb809506c39ab5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a2592f67_2f5934a2",
        "filename": "src/libANGLE/renderer/vulkan/ProgramVk.cpp",
        "patchSetId": 9
      },
      "lineNbr": 148,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-03-03T14:28:02Z",
      "side": 1,
      "message": "const_cast is to be avoided, let\u0027s find a different solution here.",
      "range": {
        "startLine": 148,
        "startChar": 8,
        "endLine": 148,
        "endChar": 18
      },
      "revId": "0ea2484253ce3b77b59ec64e4cbb809506c39ab5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7d406b77_dd749400",
        "filename": "src/libANGLE/renderer/vulkan/ProgramVk.cpp",
        "patchSetId": 9
      },
      "lineNbr": 255,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-03-01T22:56:55Z",
      "side": 1,
      "message": "nit: Actually compiling compute shaders would be an easy win because there\u0027s basically no state affecting it!",
      "revId": "0ea2484253ce3b77b59ec64e4cbb809506c39ab5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "43c24260_8e8f6138",
        "filename": "src/libANGLE/renderer/vulkan/ProgramVk.cpp",
        "patchSetId": 9
      },
      "lineNbr": 255,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2022-03-01T23:54:25Z",
      "side": 1,
      "message": "have no data to validate change. could be a follow up change if we do get some usecase?",
      "parentUuid": "7d406b77_dd749400",
      "revId": "0ea2484253ce3b77b59ec64e4cbb809506c39ab5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d8262a6d_51599f37",
        "filename": "src/libANGLE/renderer/vulkan/ProgramVk.cpp",
        "patchSetId": 9
      },
      "lineNbr": 256,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-03-01T22:56:55Z",
      "side": 1,
      "message": "What is this about?",
      "revId": "0ea2484253ce3b77b59ec64e4cbb809506c39ab5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7e8db591_a64c31b3",
        "filename": "src/libANGLE/renderer/vulkan/ProgramVk.cpp",
        "patchSetId": 9
      },
      "lineNbr": 256,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2022-03-01T23:54:25Z",
      "side": 1,
      "message": "all usecases (a.k.a traces) we looked at had \u003c\u003d 3 out vars. since we are populating pipeline cache as well, did not want to bloat it for shaders that are uncommon",
      "parentUuid": "d8262a6d_51599f37",
      "revId": "0ea2484253ce3b77b59ec64e4cbb809506c39ab5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "31c9fedf_8bc06ef4",
        "filename": "src/libANGLE/renderer/vulkan/ProgramVk.cpp",
        "patchSetId": 9
      },
      "lineNbr": 265,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-03-03T14:28:02Z",
      "side": 1,
      "message": "nit: maybe make this a helper so you can organize each check on a single line with a comment.\n\nalso please handle the angle::Result. What\u0027s the idea behind ignoring it?",
      "range": {
        "startLine": 257,
        "startChar": 0,
        "endLine": 265,
        "endChar": 0
      },
      "revId": "0ea2484253ce3b77b59ec64e4cbb809506c39ab5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1e76ccfc_f2d117fe",
        "filename": "src/libANGLE/renderer/vulkan/ProgramVk.cpp",
        "patchSetId": 9
      },
      "lineNbr": 288,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-03-01T22:56:55Z",
      "side": 1,
      "message": "What about specialization constants? We were thinking those would be the most problematic ones. Because this becomes useless when the spec constants change.\n\nWe might have to make some of our spec constants uniform (like framebuffer width/height), or make best guesses (like device rotation). We probably even need to compile a few different combinations.",
      "revId": "0ea2484253ce3b77b59ec64e4cbb809506c39ab5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f37e3d24_d00bce32",
        "filename": "src/libANGLE/renderer/vulkan/ProgramVk.cpp",
        "patchSetId": 9
      },
      "lineNbr": 288,
      "author": {
        "id": 1340649
      },
      "writtenOn": "2022-03-01T23:54:25Z",
      "side": 1,
      "message": "the idea behind the change is to improve hit rate of Vulkan ICD shader cache. Pipeline cache hits was not the goal",
      "parentUuid": "1e76ccfc_f2d117fe",
      "revId": "0ea2484253ce3b77b59ec64e4cbb809506c39ab5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "17adffd6_8a19273f",
        "filename": "src/libANGLE/renderer/vulkan/ProgramVk.h",
        "patchSetId": 9
      },
      "lineNbr": 143,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2022-03-03T14:28:02Z",
      "side": 1,
      "message": "nit: createGraphicsPipelinesWithDefaultState",
      "range": {
        "startLine": 143,
        "startChar": 18,
        "endLine": 143,
        "endChar": 56
      },
      "revId": "0ea2484253ce3b77b59ec64e4cbb809506c39ab5",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}