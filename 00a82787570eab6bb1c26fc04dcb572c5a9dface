{
  "comments": [
    {
      "key": {
        "uuid": "45398ab3_cdf62981",
        "filename": "src/libANGLE/Buffer.cpp",
        "patchSetId": 11
      },
      "lineNbr": 20,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2015-12-17T13:51:12Z",
      "side": 1,
      "message": "The default constructor doesn\u0027t need to be explicitly called here. Same think for the other cases like this.",
      "revId": "00a82787570eab6bb1c26fc04dcb572c5a9dface",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "25c576ce_a42ac26e",
        "filename": "src/libANGLE/Buffer.cpp",
        "patchSetId": 11
      },
      "lineNbr": 20,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2015-12-17T16:17:33Z",
      "side": 1,
      "message": "Understood, I try to add it anyways to make sure ordering is easy to maintain and if the type changes there is no chance of uninitialized data.",
      "parentUuid": "45398ab3_cdf62981",
      "revId": "00a82787570eab6bb1c26fc04dcb572c5a9dface",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c50c9af0_7919875f",
        "filename": "src/libANGLE/Error.cpp",
        "patchSetId": 11
      },
      "lineNbr": 20,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2015-12-17T13:51:12Z",
      "side": 1,
      "message": "Same concern here that it would be too easy to reuse the same id over and over again.",
      "revId": "00a82787570eab6bb1c26fc04dcb572c5a9dface",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0512320e_f310109b",
        "filename": "src/libGLESv2/entry_points_gles_2_0_ext.cpp",
        "patchSetId": 11
      },
      "lineNbr": 1301,
      "author": {
        "id": 1130144
      },
      "writtenOn": "2015-12-16T21:53:36Z",
      "side": 1,
      "message": "Instead of using a std::vector and hitting the heap every time DebugMessageControlKHR is called, consider instead passing ids and count straight to setMessageControl.",
      "range": {
        "startLine": 1301,
        "startChar": 8,
        "endLine": 1301,
        "endChar": 55
      },
      "revId": "00a82787570eab6bb1c26fc04dcb572c5a9dface",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a50326be_b8fcb962",
        "filename": "src/libGLESv2/entry_points_gles_2_0_ext.cpp",
        "patchSetId": 11
      },
      "lineNbr": 1301,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2015-12-17T13:51:12Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "0512320e_f310109b",
      "range": {
        "startLine": 1301,
        "startChar": 8,
        "endLine": 1301,
        "endChar": 55
      },
      "revId": "00a82787570eab6bb1c26fc04dcb572c5a9dface",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "65904ecb_3e58a904",
        "filename": "src/libGLESv2/entry_points_gles_2_0_ext.cpp",
        "patchSetId": 11
      },
      "lineNbr": 1301,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2015-12-17T16:17:33Z",
      "side": 1,
      "message": "Updated to use move semantics, only one copy is stored and we get to use the std objects as early as possible.",
      "parentUuid": "a50326be_b8fcb962",
      "range": {
        "startLine": 1301,
        "startChar": 8,
        "endLine": 1301,
        "endChar": 55
      },
      "revId": "00a82787570eab6bb1c26fc04dcb572c5a9dface",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5b1fa58_11d66c1a",
        "filename": "src/libGLESv2/entry_points_gles_2_0_ext.cpp",
        "patchSetId": 11
      },
      "lineNbr": 1327,
      "author": {
        "id": 1130144
      },
      "writtenOn": "2015-12-16T21:53:36Z",
      "side": 1,
      "message": "Similar to my previous comment, consider using the buf pointer directly instead of duplicating the string on the heap.\nSame goes for the other instances of the same thing in this file.",
      "range": {
        "startLine": 1327,
        "startChar": 8,
        "endLine": 1327,
        "endChar": 23
      },
      "revId": "00a82787570eab6bb1c26fc04dcb572c5a9dface",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "45c6eada_65f28693",
        "filename": "src/libGLESv2/entry_points_gles_2_0_ext.cpp",
        "patchSetId": 11
      },
      "lineNbr": 1327,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2015-12-17T16:17:33Z",
      "side": 1,
      "message": "Save as above.",
      "parentUuid": "c5b1fa58_11d66c1a",
      "range": {
        "startLine": 1327,
        "startChar": 8,
        "endLine": 1327,
        "endChar": 23
      },
      "revId": "00a82787570eab6bb1c26fc04dcb572c5a9dface",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8568e271_cac2c3ad",
        "filename": "src/tests/gl_tests/DebugTest.cpp",
        "patchSetId": 11
      },
      "lineNbr": 48,
      "author": {
        "id": 1130144
      },
      "writtenOn": "2015-12-16T21:53:36Z",
      "side": 1,
      "message": "Shouldn\u0027t this particular extension always be available?",
      "revId": "00a82787570eab6bb1c26fc04dcb572c5a9dface",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85d4627e_8ac98b81",
        "filename": "src/tests/gl_tests/DebugTest.cpp",
        "patchSetId": 11
      },
      "lineNbr": 48,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2015-12-17T16:17:33Z",
      "side": 1,
      "message": "We try to write our end-to-end tests without knowledge of the implementation.",
      "parentUuid": "8568e271_cac2c3ad",
      "revId": "00a82787570eab6bb1c26fc04dcb572c5a9dface",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4a2517a8_ad193d68",
        "filename": "src/tests/gl_tests/DebugTest.cpp",
        "patchSetId": 11
      },
      "lineNbr": 48,
      "author": {
        "id": 1130144
      },
      "writtenOn": "2015-12-17T22:59:22Z",
      "side": 1,
      "message": "OK but, at the end of the day, the tests are for Angle. If a careless person commits a change that totally breaks GL_KHR_debug, the test will pass. That seems bad.",
      "parentUuid": "85d4627e_8ac98b81",
      "revId": "00a82787570eab6bb1c26fc04dcb572c5a9dface",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5e3ba48_e450540a",
        "filename": "src/tests/gl_tests/DebugTest.cpp",
        "patchSetId": 11
      },
      "lineNbr": 103,
      "author": {
        "id": 1130144
      },
      "writtenOn": "2015-12-16T21:53:36Z",
      "side": 1,
      "message": "Would be good to insert message strings of different content instead of always using \"Message\". That way, you can verify that \"next logged message length\" corresponds to the correct message.",
      "revId": "00a82787570eab6bb1c26fc04dcb572c5a9dface",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85d4627e_eabe47cf",
        "filename": "src/tests/gl_tests/DebugTest.cpp",
        "patchSetId": 11
      },
      "lineNbr": 103,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2015-12-17T16:17:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c5e3ba48_e450540a",
      "revId": "00a82787570eab6bb1c26fc04dcb572c5a9dface",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0512320e_73ba40e2",
        "filename": "src/tests/gl_tests/DebugTest.cpp",
        "patchSetId": 11
      },
      "lineNbr": 167,
      "author": {
        "id": 1130144
      },
      "writtenOn": "2015-12-16T21:53:36Z",
      "side": 1,
      "message": "This should be static_cast.",
      "range": {
        "startLine": 167,
        "startChar": 8,
        "endLine": 167,
        "endChar": 24
      },
      "revId": "00a82787570eab6bb1c26fc04dcb572c5a9dface",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e57c3e59_6840b737",
        "filename": "src/tests/gl_tests/DebugTest.cpp",
        "patchSetId": 11
      },
      "lineNbr": 167,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2015-12-17T16:17:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0512320e_73ba40e2",
      "range": {
        "startLine": 167,
        "startChar": 8,
        "endLine": 167,
        "endChar": 24
      },
      "revId": "00a82787570eab6bb1c26fc04dcb572c5a9dface",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a565e697_ce87378c",
        "filename": "src/tests/gl_tests/DebugTest.cpp",
        "patchSetId": 11
      },
      "lineNbr": 182,
      "author": {
        "id": 1130144
      },
      "writtenOn": "2015-12-16T21:53:36Z",
      "side": 1,
      "message": "Would be good to test that the callback is not called unless you enable the extension. Same goes for message insertion.",
      "revId": "00a82787570eab6bb1c26fc04dcb572c5a9dface",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "45742a7b_9520c4e2",
        "filename": "src/tests/gl_tests/DebugTest.cpp",
        "patchSetId": 11
      },
      "lineNbr": 182,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2015-12-17T16:17:33Z",
      "side": 1,
      "message": "Done, added a new test.",
      "parentUuid": "a565e697_ce87378c",
      "revId": "00a82787570eab6bb1c26fc04dcb572c5a9dface",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "850622ce_17df7426",
        "filename": "src/tests/gl_tests/DebugTest.cpp",
        "patchSetId": 11
      },
      "lineNbr": 207,
      "author": {
        "id": 1130144
      },
      "writtenOn": "2015-12-16T21:53:36Z",
      "side": 1,
      "message": "Unless I am missing something, I don\u0027t see the need for these two calls, given you already check GL_DEBUG_LOGGED_MESSAGES on line 194 and there haven\u0027t been any API calls since them.",
      "range": {
        "startLine": 206,
        "startChar": 0,
        "endLine": 207,
        "endChar": 30
      },
      "revId": "00a82787570eab6bb1c26fc04dcb572c5a9dface",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85d4627e_2ad97f4a",
        "filename": "src/tests/gl_tests/DebugTest.cpp",
        "patchSetId": 11
      },
      "lineNbr": 207,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2015-12-17T16:17:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "850622ce_17df7426",
      "range": {
        "startLine": 206,
        "startChar": 0,
        "endLine": 207,
        "endChar": 30
      },
      "revId": "00a82787570eab6bb1c26fc04dcb572c5a9dface",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}