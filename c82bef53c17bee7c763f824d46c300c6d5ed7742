{
  "comments": [
    {
      "key": {
        "uuid": "f8219dbe_527ec7b9",
        "filename": "src/libANGLE/Framebuffer.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1892,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2018-03-08T16:33:50Z",
      "side": 1,
      "message": "Are we guaranteed there are no overflows here?",
      "revId": "c82bef53c17bee7c763f824d46c300c6d5ed7742",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7b728cc5_b45a5a26",
        "filename": "src/libANGLE/Framebuffer.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1892,
      "author": {
        "id": 1172235
      },
      "writtenOn": "2018-03-08T23:47:47Z",
      "side": 1,
      "message": "Added assertion (see other comment)",
      "parentUuid": "f8219dbe_527ec7b9",
      "revId": "c82bef53c17bee7c763f824d46c300c6d5ed7742",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e3a575b0_a1f713b2",
        "filename": "src/libANGLE/renderer/d3d/d3d11/StateManager11.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1166,
      "author": {
        "id": 1172235
      },
      "writtenOn": "2018-03-08T00:45:50Z",
      "side": 1,
      "message": "As kbr pointed out yesterday, we may need to modify RenderStateCache::getDepthStencilState to squash the stencil state if the stencil test is disabled. I thought the if() block above this was doing that, but I think I was wrong.",
      "revId": "c82bef53c17bee7c763f824d46c300c6d5ed7742",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "119626ac_72ca6843",
        "filename": "src/libANGLE/renderer/d3d/d3d11/StateManager11.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1166,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2018-03-08T05:03:03Z",
      "side": 1,
      "message": "How can we write a test to ensure that the correct thing is done in this case?",
      "parentUuid": "e3a575b0_a1f713b2",
      "revId": "c82bef53c17bee7c763f824d46c300c6d5ed7742",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f69bc370_943042f3",
        "filename": "src/libANGLE/renderer/d3d/d3d11/StateManager11.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1166,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-03-08T16:45:56Z",
      "side": 1,
      "message": "Can you do this by modifying StateManager11::processFramebufferInvalidation?",
      "parentUuid": "119626ac_72ca6843",
      "revId": "c82bef53c17bee7c763f824d46c300c6d5ed7742",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "971a41e4_a9139454",
        "filename": "src/libANGLE/renderer/d3d/d3d11/StateManager11.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1166,
      "author": {
        "id": 1172235
      },
      "writtenOn": "2018-03-08T23:47:47Z",
      "side": 1,
      "message": "You mean set mCurDisableStencil if stencil test is disabled? I think that would be fine. (Implemented.)\n\nWould it be simpler to just change the above to say\nif (mCurDisableStencil.value() || !glState.getDepthStencilState().stencilTest)\n?\n\nI could test this with an assertion, but can I write a test which asserts what gets passed into OMSetDepthStencilState?",
      "parentUuid": "f69bc370_943042f3",
      "revId": "c82bef53c17bee7c763f824d46c300c6d5ed7742",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5d135248_663f5ece",
        "filename": "src/libANGLE/renderer/d3d/d3d11/StateManager11.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1166,
      "author": {
        "id": 1172235
      },
      "writtenOn": "2018-03-08T23:58:29Z",
      "side": 1,
      "message": "Actually, I think I made a mistake in the WebGL tests and here. Let me come back to this.\n\nThe problem is I don\u0027t want the front and back writemasks to be allowed to be different even if the stencil test is disabled.\n(mCurDisableStencil here disables both stencil test and stencil write.)",
      "parentUuid": "971a41e4_a9139454",
      "revId": "c82bef53c17bee7c763f824d46c300c6d5ed7742",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "44a3a8a2_6b3ba937",
        "filename": "src/libANGLE/renderer/d3d/d3d11/StateManager11.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1166,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-03-09T01:26:24Z",
      "side": 1,
      "message": "Ah yes, I don\u0027t think that should affect the state manager.",
      "parentUuid": "5d135248_663f5ece",
      "revId": "c82bef53c17bee7c763f824d46c300c6d5ed7742",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e013c0bf_1b8dd768",
        "filename": "src/libANGLE/renderer/d3d/d3d11/StateManager11.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1166,
      "author": {
        "id": 1172235
      },
      "writtenOn": "2018-03-09T01:36:14Z",
      "side": 1,
      "message": "I misunderstood how STENCIL_TEST works - it actually disables stencil write as well.\nSo I actually do want the front/back writemasks to be allowed to be different when the stencil test is disabled.\n(Or when there is no stencil buffer.)\n\nI\u0027m currently updating the WebGL tests to cover this.",
      "parentUuid": "44a3a8a2_6b3ba937",
      "revId": "c82bef53c17bee7c763f824d46c300c6d5ed7742",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e56f5482_be7051b1",
        "filename": "src/libANGLE/validationES.cpp",
        "patchSetId": 7
      },
      "lineNbr": 2487,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2018-03-08T05:03:03Z",
      "side": 1,
      "message": "If the values were set in an incorrect way while the stencil test is disabled, and then it\u0027s enabled, the error will still be generated because ValidateDrawBase is called for every draw call, correct?",
      "revId": "c82bef53c17bee7c763f824d46c300c6d5ed7742",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7d3c4084_de9d028a",
        "filename": "src/libANGLE/validationES.cpp",
        "patchSetId": 7
      },
      "lineNbr": 2487,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-03-08T15:38:55Z",
      "side": 1,
      "message": "Yes, this is called for every draw.",
      "parentUuid": "e56f5482_be7051b1",
      "revId": "c82bef53c17bee7c763f824d46c300c6d5ed7742",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4dcd6ffc_2e179576",
        "filename": "src/libANGLE/validationES.cpp",
        "patchSetId": 7
      },
      "lineNbr": 2487,
      "author": {
        "id": 1172235
      },
      "writtenOn": "2018-03-08T23:47:47Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "7d3c4084_de9d028a",
      "revId": "c82bef53c17bee7c763f824d46c300c6d5ed7742",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "51e57f83_b0418033",
        "filename": "src/libANGLE/validationES.cpp",
        "patchSetId": 7
      },
      "lineNbr": 2490,
      "author": {
        "id": 1119849
      },
      "writtenOn": "2018-03-08T16:33:50Z",
      "side": 1,
      "message": "ditto about overflow.",
      "revId": "c82bef53c17bee7c763f824d46c300c6d5ed7742",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0fda5137_fdcce1aa",
        "filename": "src/libANGLE/validationES.cpp",
        "patchSetId": 7
      },
      "lineNbr": 2490,
      "author": {
        "id": 1172235
      },
      "writtenOn": "2018-03-08T23:47:47Z",
      "side": 1,
      "message": "This code was already there (minimumRequiredStencilMask) but it should in fact be guaranteed - it seems to always come from BuildInternalFormatInfoMap. Added an assertion.",
      "parentUuid": "51e57f83_b0418033",
      "revId": "c82bef53c17bee7c763f824d46c300c6d5ed7742",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "62835a0c_3784b0f1",
        "filename": "src/tests/gl_tests/WebGLCompatibilityTest.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1185,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-03-08T16:45:56Z",
      "side": 1,
      "message": "run git cl format.",
      "range": {
        "startLine": 1185,
        "startChar": 32,
        "endLine": 1185,
        "endChar": 33
      },
      "revId": "c82bef53c17bee7c763f824d46c300c6d5ed7742",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "42cf1093_1e969d02",
        "filename": "src/tests/gl_tests/WebGLCompatibilityTest.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1185,
      "author": {
        "id": 1172235
      },
      "writtenOn": "2018-03-08T23:47:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "62835a0c_3784b0f1",
      "range": {
        "startLine": 1185,
        "startChar": 32,
        "endLine": 1185,
        "endChar": 33
      },
      "revId": "c82bef53c17bee7c763f824d46c300c6d5ed7742",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e1f3a5c1_65a69192",
        "filename": "src/tests/gl_tests/WebGLCompatibilityTest.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1251,
      "author": {
        "id": 1105284
      },
      "writtenOn": "2018-03-08T15:38:55Z",
      "side": 1,
      "message": "Can you put this in a another function with the expected error as a parameter?",
      "range": {
        "startLine": 1196,
        "startChar": 0,
        "endLine": 1251,
        "endChar": 5
      },
      "revId": "c82bef53c17bee7c763f824d46c300c6d5ed7742",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "df096886_8c98784c",
        "filename": "src/tests/gl_tests/WebGLCompatibilityTest.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1251,
      "author": {
        "id": 1105324
      },
      "writtenOn": "2018-03-08T16:45:56Z",
      "side": 1,
      "message": "+1, two separate tests if possible.",
      "parentUuid": "e1f3a5c1_65a69192",
      "range": {
        "startLine": 1196,
        "startChar": 0,
        "endLine": 1251,
        "endChar": 5
      },
      "revId": "c82bef53c17bee7c763f824d46c300c6d5ed7742",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be91cbf2_e51a45aa",
        "filename": "src/tests/gl_tests/WebGLCompatibilityTest.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1251,
      "author": {
        "id": 1172235
      },
      "writtenOn": "2018-03-08T23:47:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "df096886_8c98784c",
      "range": {
        "startLine": 1196,
        "startChar": 0,
        "endLine": 1251,
        "endChar": 5
      },
      "revId": "c82bef53c17bee7c763f824d46c300c6d5ed7742",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba",
      "unresolved": false
    }
  ]
}