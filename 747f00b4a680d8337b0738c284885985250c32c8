{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "7237213e_3908766c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-12-21T22:35:13Z",
      "side": 1,
      "message": "The code seems reasonable, though the JNI stuff is all black magic.   Should be pretty obvious in CQ if it\u0027s wrong and can\u0027t find anything though.",
      "revId": "747f00b4a680d8337b0738c284885985250c32c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6c913417_8e3259a6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-12-22T16:15:08Z",
      "side": 1,
      "message": "Whoops, meant to remove Cody. Removed the debugging into I accidentally left around.",
      "revId": "747f00b4a680d8337b0738c284885985250c32c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7aa4de74_b1c6c86a",
        "filename": "src/tests/perf_tests/TracePerfTest.cpp",
        "patchSetId": 11
      },
      "lineNbr": 323,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-12-21T22:35:13Z",
      "side": 1,
      "message": "Update to use INFO() or something similar.",
      "revId": "747f00b4a680d8337b0738c284885985250c32c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f8529c64_5a455333",
        "filename": "src/tests/perf_tests/TracePerfTest.cpp",
        "patchSetId": 11
      },
      "lineNbr": 323,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-12-22T16:15:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7aa4de74_b1c6c86a",
      "revId": "747f00b4a680d8337b0738c284885985250c32c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cf398ce3_8cf400ee",
        "filename": "util/OSWindow.cpp",
        "patchSetId": 11
      },
      "lineNbr": 472,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-12-21T22:35:13Z",
      "side": 1,
      "message": "INFO()",
      "revId": "747f00b4a680d8337b0738c284885985250c32c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "367d4fc5_1ae31d3f",
        "filename": "util/OSWindow.cpp",
        "patchSetId": 11
      },
      "lineNbr": 472,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-12-22T16:15:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cf398ce3_8cf400ee",
      "revId": "747f00b4a680d8337b0738c284885985250c32c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "386a89e6_6b513303",
        "filename": "util/OSWindow.cpp",
        "patchSetId": 11
      },
      "lineNbr": 474,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-12-21T22:35:13Z",
      "side": 1,
      "message": "It\u0027s possible to return a bad path if it\u0027s larger than maxDataPathOutLen.\n\nThese should check that the constructed string can fit before returning true, and ERR() and return false otherwise.",
      "range": {
        "startLine": 473,
        "startChar": 0,
        "endLine": 474,
        "endChar": 51
      },
      "revId": "747f00b4a680d8337b0738c284885985250c32c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c80fd99e_4120d964",
        "filename": "util/OSWindow.cpp",
        "patchSetId": 11
      },
      "lineNbr": 474,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-12-22T16:15:08Z",
      "side": 1,
      "message": "Done, used strncpy_s.",
      "parentUuid": "386a89e6_6b513303",
      "range": {
        "startLine": 473,
        "startChar": 0,
        "endLine": 474,
        "endChar": 51
      },
      "revId": "747f00b4a680d8337b0738c284885985250c32c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d7406f4b_eab13617",
        "filename": "util/OSWindow.cpp",
        "patchSetId": 11
      },
      "lineNbr": 474,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-12-22T16:25:22Z",
      "side": 1,
      "message": "strncpy_s wasn\u0027t available for some reason. Switched to another pattern.",
      "parentUuid": "c80fd99e_4120d964",
      "range": {
        "startLine": 473,
        "startChar": 0,
        "endLine": 474,
        "endChar": 51
      },
      "revId": "747f00b4a680d8337b0738c284885985250c32c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7e565668_03f22223",
        "filename": "util/OSWindow.cpp",
        "patchSetId": 11
      },
      "lineNbr": 474,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-12-22T17:10:27Z",
      "side": 1,
      "message": "strncpy_s is a windows function.\n\nmemcpy with a copy of \u0027\\0\u0027 works, but `snprintf` is clearer IMO. In this case, since you already checked the size `strcpy` works too (but my preference is still `snprintf`).",
      "parentUuid": "d7406f4b_eab13617",
      "range": {
        "startLine": 473,
        "startChar": 0,
        "endLine": 474,
        "endChar": 51
      },
      "revId": "747f00b4a680d8337b0738c284885985250c32c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3bc08221_c6967fa5",
        "filename": "util/OSWindow.cpp",
        "patchSetId": 11
      },
      "lineNbr": 474,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-12-22T17:31:52Z",
      "side": 1,
      "message": "strncpy_s is a standard function and was available on my linux machine:\n\nhttps://en.cppreference.com/w/c/string/byte/strncpy\n\nI chose to use memcpy because of what a post said about libc maintainers:\n\nhttps://stackoverflow.com/a/4570369",
      "parentUuid": "7e565668_03f22223",
      "range": {
        "startLine": 473,
        "startChar": 0,
        "endLine": 474,
        "endChar": 51
      },
      "revId": "747f00b4a680d8337b0738c284885985250c32c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "314c2afc_908fcbe8",
        "filename": "util/OSWindow.cpp",
        "patchSetId": 11
      },
      "lineNbr": 474,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2020-12-22T17:39:06Z",
      "side": 1,
      "message": "Right it was standardized in C11. Looking at the C++ specs, it looks like it\u0027s not there in C++14, but it is in C++17.",
      "parentUuid": "3bc08221_c6967fa5",
      "range": {
        "startLine": 473,
        "startChar": 0,
        "endLine": 474,
        "endChar": 51
      },
      "revId": "747f00b4a680d8337b0738c284885985250c32c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "30c2c6eb_5b1ba93e",
        "filename": "util/OSWindow.cpp",
        "patchSetId": 11
      },
      "lineNbr": 481,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-12-21T22:35:13Z",
      "side": 1,
      "message": "INFO()",
      "revId": "747f00b4a680d8337b0738c284885985250c32c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "64fb8f2a_2b6653cf",
        "filename": "util/OSWindow.cpp",
        "patchSetId": 11
      },
      "lineNbr": 481,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-12-22T16:15:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "30c2c6eb_5b1ba93e",
      "revId": "747f00b4a680d8337b0738c284885985250c32c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3e1d7358_f9269339",
        "filename": "util/OSWindow.cpp",
        "patchSetId": 11
      },
      "lineNbr": 487,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-12-21T22:35:13Z",
      "side": 1,
      "message": "ERR()",
      "revId": "747f00b4a680d8337b0738c284885985250c32c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "99c62d41_759b250c",
        "filename": "util/OSWindow.cpp",
        "patchSetId": 11
      },
      "lineNbr": 487,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-12-22T16:15:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3e1d7358_f9269339",
      "revId": "747f00b4a680d8337b0738c284885985250c32c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6438c9c6_8a616b9e",
        "filename": "util/android/AndroidWindow.cpp",
        "patchSetId": 11
      },
      "lineNbr": 193,
      "author": {
        "id": 1297197
      },
      "writtenOn": "2020-12-21T22:35:13Z",
      "side": 1,
      "message": "Why is this in the AndroidWindow class?   This doesn\u0027t seem related to the \"implementation of OSWindow for Android\".",
      "range": {
        "startLine": 193,
        "startChar": 12,
        "endLine": 193,
        "endChar": 25
      },
      "revId": "747f00b4a680d8337b0738c284885985250c32c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c1ff2382_40d2c7ec",
        "filename": "util/android/AndroidWindow.cpp",
        "patchSetId": 11
      },
      "lineNbr": 193,
      "author": {
        "id": 1329751
      },
      "writtenOn": "2020-12-22T16:15:08Z",
      "side": 1,
      "message": "Ack, it\u0027s where we call JNI from in ANGLE.",
      "parentUuid": "6438c9c6_8a616b9e",
      "range": {
        "startLine": 193,
        "startChar": 12,
        "endLine": 193,
        "endChar": 25
      },
      "revId": "747f00b4a680d8337b0738c284885985250c32c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}