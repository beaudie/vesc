{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "26357fa8_2d6443e9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2022-02-01T01:58:57Z",
      "side": 1,
      "message": "Gregg, Kyle: please review.\n\nOthers: any comments welcome.\n\nIt was challenging to reproduce all of the behaviors we thought would occur as a side-effect of this bug. However, the one test here (which is run in both WebGL compatibility mode, and not) definitely reproduces the original problem when run on Intel Macs with Metal\u0027s validation layers enabled, and load/store action validation.\n\nThe changes we discussed in our meetings, about switching to MTLLoadActionClear rather than MTLLoadActionDontCare for WebGL contexts, were not testable (after several attempts), so I did not make them.\n",
      "revId": "c6da16529c106b31433baded0b621ef683501a9d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "70c94506_ca9a0995",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2022-02-01T02:26:16Z",
      "side": 1,
      "message": "Unfortunately the mac-test failure is a known flake, https://bugs.chromium.org/p/angleproject/issues/detail?id\u003d6570 .\n",
      "revId": "c6da16529c106b31433baded0b621ef683501a9d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8a9fb1b9_7194a4c3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-02-01T08:52:36Z",
      "side": 1,
      "message": "Drive by!",
      "revId": "c6da16529c106b31433baded0b621ef683501a9d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b911b72f_2765bdb1",
        "filename": "src/tests/gl_tests/FramebufferInvalidateTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 89,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-02-01T08:52:36Z",
      "side": 1,
      "message": "EXPECT_PIXEL_RECT_EQ does the same, and more efficiently",
      "range": {
        "startLine": 83,
        "startChar": 0,
        "endLine": 89,
        "endChar": 9
      },
      "revId": "c6da16529c106b31433baded0b621ef683501a9d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d0fa729a_d0405dd2",
        "filename": "src/tests/gl_tests/FramebufferInvalidateTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 89,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2022-02-02T18:13:49Z",
      "side": 1,
      "message": "Thanks, used in the new StateChangeTestWebGL2 per your other suggestion.",
      "parentUuid": "b911b72f_2765bdb1",
      "range": {
        "startLine": 83,
        "startChar": 0,
        "endLine": 89,
        "endChar": 9
      },
      "revId": "c6da16529c106b31433baded0b621ef683501a9d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d1d9b4ae_c04eede6",
        "filename": "src/tests/gl_tests/FramebufferInvalidateTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 118,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-02-01T08:52:36Z",
      "side": 1,
      "message": "Thanks for the test. I suggest moving it to StateChangeTest.cpp, which is where these sort of this-then-than tests are added. There are already a number of XThenInvalidateThenY tests there.",
      "revId": "c6da16529c106b31433baded0b621ef683501a9d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c2473c1a_6f1080bb",
        "filename": "src/tests/gl_tests/FramebufferInvalidateTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 118,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2022-02-02T18:13:49Z",
      "side": 1,
      "message": "Thanks - done, into StateChangeTestWebGL2.",
      "parentUuid": "d1d9b4ae_c04eede6",
      "revId": "c6da16529c106b31433baded0b621ef683501a9d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e334c29b_41641bac",
        "filename": "src/tests/gl_tests/FramebufferInvalidateTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 129,
      "author": {
        "id": 1300114
      },
      "writtenOn": "2022-02-01T08:52:36Z",
      "side": 1,
      "message": "nit: Please use the ASSERT_GL_FRAMEBUFFER_COMPLETE macro:\n\n    ASSERT_GL_FRAMEBUFFER_COMPLETE(GL_FRAMEBUFFER);\n\nSame below",
      "revId": "c6da16529c106b31433baded0b621ef683501a9d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a355aa21_0ddb725f",
        "filename": "src/tests/gl_tests/FramebufferInvalidateTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 129,
      "author": {
        "id": 1105344
      },
      "writtenOn": "2022-02-02T18:13:49Z",
      "side": 1,
      "message": "Thanks, done with EXPECT_GL_FRAMEBUFFER_COMPLETE.",
      "parentUuid": "e334c29b_41641bac",
      "revId": "c6da16529c106b31433baded0b621ef683501a9d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}